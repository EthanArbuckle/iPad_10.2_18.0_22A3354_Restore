void sub_8AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

id soft_MCDMusicGeneralLogging()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDMusicGeneralLoggingSymbolLoc_ptr;
  v9 = getMCDMusicGeneralLoggingSymbolLoc_ptr;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    getMCDMusicGeneralLoggingSymbolLoc_ptr = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_9748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_9FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_A120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMCDErrorLoadingViewClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCDErrorLoadingViewClass_softClass;
  v7 = getMCDErrorLoadingViewClass_softClass;
  if (!getMCDErrorLoadingViewClass_softClass)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = __getMCDErrorLoadingViewClass_block_invoke;
    v3[3] = &unk_1339000;
    v3[4] = &v4;
    __getMCDErrorLoadingViewClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_A2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t soft_MCDNetworkConnectionAvailable(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getMCDNetworkConnectionAvailableSymbolLoc_ptr;
  v9 = getMCDNetworkConnectionAvailableSymbolLoc_ptr;
  if (!getMCDNetworkConnectionAvailableSymbolLoc_ptr)
  {
    v3 = (void *)MusicCarDisplayUILibrary();
    v2 = dlsym(v3, "MCDNetworkConnectionAvailable");
    v7[3] = (uint64_t)v2;
    getMCDNetworkConnectionAvailableSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t soft_MCDNetworkRestrictedCellularData(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getMCDNetworkRestrictedCellularDataSymbolLoc_ptr;
  v9 = getMCDNetworkRestrictedCellularDataSymbolLoc_ptr;
  if (!getMCDNetworkRestrictedCellularDataSymbolLoc_ptr)
  {
    v3 = (void *)MusicCarDisplayUILibrary();
    v2 = dlsym(v3, "MCDNetworkRestrictedCellularData");
    v7[3] = (uint64_t)v2;
    getMCDNetworkRestrictedCellularDataSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t MusicCarDisplayUILibrary()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary)
  {
    v4 = off_1339020;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class __getMCDLoadingContentViewClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  MusicCarDisplayUILibrary();
  result = objc_getClass("MCDLoadingContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDLoadingContentViewClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getMCDLoadingContentViewClass_block_invoke_cold_1();
    return (Class)__getMCDErrorLoadingViewClass_block_invoke(v3);
  }
  return result;
}

Class __getMCDErrorLoadingViewClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  MusicCarDisplayUILibrary();
  result = objc_getClass("MCDErrorLoadingView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDErrorLoadingViewClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getMCDErrorLoadingViewClass_block_invoke_cold_1();
    return (Class)__getMCDNoContentViewClass_block_invoke(v3);
  }
  return result;
}

double __getMCDNoContentViewClass_block_invoke(uint64_t a1)
{
  double result;
  UIView *v3;
  SEL v4;

  MusicCarDisplayUILibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MCDNoContentView");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDNoContentViewClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (UIView *)__getMCDNoContentViewClass_block_invoke_cold_1();
    *(_QWORD *)&result = (unint64_t)-[UIView music_layoutInsets](v3, v4);
  }
  return result;
}

void sub_BB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 200), 8);
  _Block_object_dispose((const void *)(v39 - 112), 8);
  _Unwind_Resume(a1);
}

id getMCDAlbumsViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_0();
    v0 = (id *)dlsym(v1, "MCDAlbumsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_C4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_0()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_0)
  {
    v4 = off_13391B0;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_0 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_0;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_0)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_CEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_1()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_1)
  {
    v4 = off_13391F0;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_1 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_1;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_1)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_DBB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_2)
  {
    v6 = off_1339208;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_2 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_2;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_2)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_2;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_2 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMCDMusicBundleIdentifierSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_3)
  {
    v6 = off_1339240;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_3 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_3;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_3)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_3;
LABEL_5:
  result = dlsym(v2, "MCDMusicBundleIdentifier");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicBundleIdentifierSymbolLoc_ptr_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_E80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_EFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id getMCDAlbumsViewControllerIdentifier_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_0;
  v7 = getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_0;
  if (!getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_2();
    v0 = (id *)dlsym(v1, "MCDAlbumsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDPlaylistsViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_2();
    v0 = (id *)dlsym(v1, "MCDPlaylistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDArtistsViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDArtistsViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDArtistsViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDArtistsViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_2();
    v0 = (id *)dlsym(v1, "MCDArtistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDArtistsViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDCompilationsViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_2();
    v0 = (id *)dlsym(v1, "MCDCompilationsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDSongsViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSongsViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDSongsViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDSongsViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_2();
    v0 = (id *)dlsym(v1, "MCDSongsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDSongsViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDMadeForYouViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_2();
    v0 = (id *)dlsym(v1, "MCDMadeForYouViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_FBCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  uint64_t v25;

  _Block_object_dispose((const void *)(v25 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_10314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getMCDNoContentViewClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCDNoContentViewClass_softClass_0;
  v7 = getMCDNoContentViewClass_softClass_0;
  if (!getMCDNoContentViewClass_softClass_0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = __getMCDNoContentViewClass_block_invoke_0;
    v3[3] = &unk_1339000;
    v3[4] = &v4;
    __getMCDNoContentViewClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_2()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_4)
  {
    v4 = off_1339310;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_4 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_4;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_4)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class __getMCDAlertControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  MusicCarDisplayUILibrary_2();
  result = objc_getClass("MCDAlertController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDAlertControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getMCDAlertControllerClass_block_invoke_cold_1();
    return (Class)__getMCDNoContentViewClass_block_invoke_0(v3);
  }
  return result;
}

double __getMCDNoContentViewClass_block_invoke_0(uint64_t a1)
{
  double result;
  MusicCollectionViewListLayoutSectionConfiguration *v3;
  SEL v4;

  MusicCarDisplayUILibrary_2();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("MCDNoContentView");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDNoContentViewClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MusicCollectionViewListLayoutSectionConfiguration *)__getMCDNoContentViewClass_block_invoke_cold_1();
    *(_QWORD *)&result = (unint64_t)-[MusicCollectionViewListLayoutSectionConfiguration _defaultLayoutMargins](v3, v4);
  }
  return result;
}

void sub_11554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_11850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _touchesContainDirectTouch(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = a1;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v7;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(_QWORD *)v7 != v3)
          objc_enumerationMutation(v1);
        if (!objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)i), "type", (_QWORD)v6))
        {
          v2 = &dword_0 + 1;
          goto LABEL_11;
        }
      }
      v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_11:

  return v2;
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_5)
  {
    v6 = off_1339430;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_5 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_5;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_5)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_5;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_2 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_0(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_6)
  {
    v6 = off_1339448;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_6 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_6;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_6)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_6;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_3 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t MusicCarDisplayUILibrary_3()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_7)
  {
    v4 = off_1339460;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_7 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_7;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_7)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_13DB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMCDSortByRecentlyPlayed()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByRecentlyPlayedSymbolLoc_ptr;
  v7 = getMCDSortByRecentlyPlayedSymbolLoc_ptr;
  if (!getMCDSortByRecentlyPlayedSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_4();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    getMCDSortByRecentlyPlayedSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t MusicCarDisplayUILibrary_4()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_8)
  {
    v4 = off_1339478;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_8 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_8;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_8)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_14240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_5()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_9)
  {
    v4 = off_1339490;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_9 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_9;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_9)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void soft_MCDClearTableViewSelection(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  _Unwind_Exception *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;

  v3 = a1;
  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v4 = getMCDClearTableViewSelectionSymbolLoc_ptr;
  v10 = getMCDClearTableViewSelectionSymbolLoc_ptr;
  if (!getMCDClearTableViewSelectionSymbolLoc_ptr)
  {
    v5 = (void *)MusicCarDisplayUILibrary_6();
    v4 = dlsym(v5, "MCDClearTableViewSelection");
    v8[3] = (uint64_t)v4;
    getMCDClearTableViewSelectionSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v7, 8);
  if (!v4)
  {
    v6 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v7, 8);
    _Unwind_Resume(v6);
  }
  ((void (*)(id, uint64_t))v4)(v3, a2);

}

uint64_t MusicCarDisplayUILibrary_6()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_10)
  {
    v4 = off_13394F8;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_10 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_10;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_10)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_1(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_11)
  {
    v6 = off_1339538;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_11 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_11;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_11)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_11;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_5 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id soft_MCDCarDisplayBundle()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))getMCDCarDisplayBundleSymbolLoc_ptr_6;
  v8 = getMCDCarDisplayBundleSymbolLoc_ptr_6;
  if (!getMCDCarDisplayBundleSymbolLoc_ptr_6)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = __getMCDCarDisplayBundleSymbolLoc_block_invoke_2;
    v4[3] = &unk_1339000;
    v4[4] = &v5;
    __getMCDCarDisplayBundleSymbolLoc_block_invoke_2((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_2(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_12)
  {
    v6 = off_1339570;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_12 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_12;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_12)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_12;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_6 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t MusicCarDisplayUILibrary_7()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_13)
  {
    v4 = off_1339588;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_13 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_13;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_13)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_178AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id soft_MCDCarDisplayBundle_0()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))getMCDCarDisplayBundleSymbolLoc_ptr_7;
  v8 = getMCDCarDisplayBundleSymbolLoc_ptr_7;
  if (!getMCDCarDisplayBundleSymbolLoc_ptr_7)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = __getMCDCarDisplayBundleSymbolLoc_block_invoke_3;
    v4[3] = &unk_1339000;
    v4[4] = &v5;
    __getMCDCarDisplayBundleSymbolLoc_block_invoke_3((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_3(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_14)
  {
    v6 = off_1339748;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_14 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_14;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_14)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_14;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_7 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id MCDLibraryDefaultFuseIdentifiers()
{
  id MCDPlaylistsViewControllerIdentifier_0;
  void *v1;
  id MCDArtistsViewControllerIdentifier_0;
  void *v3;
  id MCDAlbumsViewControllerIdentifier_1;
  void *v5;
  id MCDGenresViewControllerIdentifier;
  void *v7;
  id MCDSongsViewControllerIdentifier_0;
  void *v9;
  id MCDDownloadedMusicViewControllerIdentifier;
  void *v11;
  void *v12;
  _QWORD v14[6];

  MCDPlaylistsViewControllerIdentifier_0 = getMCDPlaylistsViewControllerIdentifier_0();
  v1 = (void *)objc_claimAutoreleasedReturnValue(MCDPlaylistsViewControllerIdentifier_0);
  v14[0] = v1;
  MCDArtistsViewControllerIdentifier_0 = getMCDArtistsViewControllerIdentifier_0();
  v3 = (void *)objc_claimAutoreleasedReturnValue(MCDArtistsViewControllerIdentifier_0);
  v14[1] = v3;
  MCDAlbumsViewControllerIdentifier_1 = getMCDAlbumsViewControllerIdentifier_1();
  v5 = (void *)objc_claimAutoreleasedReturnValue(MCDAlbumsViewControllerIdentifier_1);
  v14[2] = v5;
  MCDGenresViewControllerIdentifier = getMCDGenresViewControllerIdentifier();
  v7 = (void *)objc_claimAutoreleasedReturnValue(MCDGenresViewControllerIdentifier);
  v14[3] = v7;
  MCDSongsViewControllerIdentifier_0 = getMCDSongsViewControllerIdentifier_0();
  v9 = (void *)objc_claimAutoreleasedReturnValue(MCDSongsViewControllerIdentifier_0);
  v14[4] = v9;
  MCDDownloadedMusicViewControllerIdentifier = getMCDDownloadedMusicViewControllerIdentifier();
  v11 = (void *)objc_claimAutoreleasedReturnValue(MCDDownloadedMusicViewControllerIdentifier);
  v14[5] = v11;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v14, 6));

  return v12;
}

id MCDLibraryLocalizedStrings()
{
  id MCDRecentlyAddedControllerIdentifier;
  id MCDPlaylistsViewControllerIdentifier_0;
  id MCDArtistsViewControllerIdentifier_0;
  id MCDAlbumsViewControllerIdentifier_1;
  id MCDSongsViewControllerIdentifier_0;
  id MCDMadeForYouViewControllerIdentifier_0;
  id MCDGenresViewControllerIdentifier;
  void *v7;
  id MCDComposersViewControllerIdentifier;
  void *v9;
  void *v10;
  void *v11;
  id MCDCompilationsViewControllerIdentifier_0;
  void *v13;
  void *v14;
  void *v15;
  id MCDDownloadedMusicViewControllerIdentifier;
  void *v17;
  void *v18;
  void *v19;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  _QWORD v42[10];
  _QWORD v43[10];

  MCDRecentlyAddedControllerIdentifier = getMCDRecentlyAddedControllerIdentifier();
  v41 = (void *)objc_claimAutoreleasedReturnValue(MCDRecentlyAddedControllerIdentifier);
  v42[0] = v41;
  v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "localizedStringForKey:value:table:", CFSTR("Recently Added"), &stru_13E1990, 0));
  v43[0] = v39;
  MCDPlaylistsViewControllerIdentifier_0 = getMCDPlaylistsViewControllerIdentifier_0();
  v38 = (void *)objc_claimAutoreleasedReturnValue(MCDPlaylistsViewControllerIdentifier_0);
  v42[1] = v38;
  v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "localizedStringForKey:value:table:", CFSTR("Playlists"), &stru_13E1990, 0));
  v43[1] = v36;
  MCDArtistsViewControllerIdentifier_0 = getMCDArtistsViewControllerIdentifier_0();
  v35 = (void *)objc_claimAutoreleasedReturnValue(MCDArtistsViewControllerIdentifier_0);
  v42[2] = v35;
  v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "localizedStringForKey:value:table:", CFSTR("Artists"), &stru_13E1990, 0));
  v43[2] = v33;
  MCDAlbumsViewControllerIdentifier_1 = getMCDAlbumsViewControllerIdentifier_1();
  v32 = (void *)objc_claimAutoreleasedReturnValue(MCDAlbumsViewControllerIdentifier_1);
  v42[3] = v32;
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "localizedStringForKey:value:table:", CFSTR("Albums"), &stru_13E1990, 0));
  v43[3] = v30;
  MCDSongsViewControllerIdentifier_0 = getMCDSongsViewControllerIdentifier_0();
  v29 = (void *)objc_claimAutoreleasedReturnValue(MCDSongsViewControllerIdentifier_0);
  v42[4] = v29;
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "localizedStringForKey:value:table:", CFSTR("Songs"), &stru_13E1990, 0));
  v43[4] = v27;
  MCDMadeForYouViewControllerIdentifier_0 = getMCDMadeForYouViewControllerIdentifier_0();
  v26 = (void *)objc_claimAutoreleasedReturnValue(MCDMadeForYouViewControllerIdentifier_0);
  v42[5] = v26;
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "localizedStringForKey:value:table:", CFSTR("Made for You"), &stru_13E1990, 0));
  v43[5] = v24;
  MCDGenresViewControllerIdentifier = getMCDGenresViewControllerIdentifier();
  v23 = (void *)objc_claimAutoreleasedReturnValue(MCDGenresViewControllerIdentifier);
  v42[6] = v23;
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "localizedStringForKey:value:table:", CFSTR("Genres"), &stru_13E1990, 0));
  v43[6] = v7;
  MCDComposersViewControllerIdentifier = getMCDComposersViewControllerIdentifier();
  v9 = (void *)objc_claimAutoreleasedReturnValue(MCDComposersViewControllerIdentifier);
  v42[7] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("Composers"), &stru_13E1990, 0));
  v43[7] = v11;
  MCDCompilationsViewControllerIdentifier_0 = getMCDCompilationsViewControllerIdentifier_0();
  v13 = (void *)objc_claimAutoreleasedReturnValue(MCDCompilationsViewControllerIdentifier_0);
  v42[8] = v13;
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("Compilations"), &stru_13E1990, 0));
  v43[8] = v15;
  MCDDownloadedMusicViewControllerIdentifier = getMCDDownloadedMusicViewControllerIdentifier();
  v17 = (void *)objc_claimAutoreleasedReturnValue(MCDDownloadedMusicViewControllerIdentifier);
  v42[9] = v17;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Downloaded"), &stru_13E1990, 0));
  v43[9] = v19;
  v21 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v43, v42, 10));

  return v21;
}

id getMCDRecentlyAddedControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDRecentlyAddedControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDRecentlyAddedControllerIdentifierSymbolLoc_ptr;
  if (!getMCDRecentlyAddedControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDRecentlyAddedControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDRecentlyAddedControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDPlaylistsViewControllerIdentifier_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_1;
  v7 = getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_1;
  if (!getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_1)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDPlaylistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_1 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDArtistsViewControllerIdentifier_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDArtistsViewControllerIdentifierSymbolLoc_ptr_0;
  v7 = getMCDArtistsViewControllerIdentifierSymbolLoc_ptr_0;
  if (!getMCDArtistsViewControllerIdentifierSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDArtistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDArtistsViewControllerIdentifierSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDAlbumsViewControllerIdentifier_1()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_1;
  v7 = getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_1;
  if (!getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_1)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDAlbumsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDAlbumsViewControllerIdentifierSymbolLoc_ptr_1 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDSongsViewControllerIdentifier_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSongsViewControllerIdentifierSymbolLoc_ptr_0;
  v7 = getMCDSongsViewControllerIdentifierSymbolLoc_ptr_0;
  if (!getMCDSongsViewControllerIdentifierSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDSongsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDSongsViewControllerIdentifierSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDMadeForYouViewControllerIdentifier_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr_0;
  v7 = getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr_0;
  if (!getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDMadeForYouViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDMadeForYouViewControllerIdentifierSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDGenresViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDGenresViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDGenresViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDGenresViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDGenresViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDGenresViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDComposersViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDComposersViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDComposersViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDComposersViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDComposersViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDComposersViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDCompilationsViewControllerIdentifier_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr_0;
  v7 = getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr_0;
  if (!getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDCompilationsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDCompilationsViewControllerIdentifierSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDDownloadedMusicViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDDownloadedMusicViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDDownloadedMusicViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDDownloadedMusicViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_8();
    v0 = (id *)dlsym(v1, "MCDDownloadedMusicViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDDownloadedMusicViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

void sub_1CC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D6D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_8()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_15)
  {
    v4 = off_1339828;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_15 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_15;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_15)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class __getMCDNoContentViewClass_block_invoke_1(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;

  MusicCarDisplayUILibrary_8();
  result = objc_getClass("MCDNoContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDNoContentViewClass_softClass_1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)__getMCDNoContentViewClass_block_invoke_cold_1();
    return (Class)+[NSString downloadedOnlyMessage](v3, v4);
  }
  return result;
}

uint64_t UIAccessibilityLibrary()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!UIAccessibilityLibraryCore_frameworkLibrary)
  {
    v4 = off_1339840;
    v5 = 0;
    UIAccessibilityLibraryCore_frameworkLibrary = _sl_dlopen(&v4, &v3);
  }
  v0 = UIAccessibilityLibraryCore_frameworkLibrary;
  v1 = v3;
  if (!UIAccessibilityLibraryCore_frameworkLibrary)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_1EA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id soft_MCDMusicGeneralLogging_0()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))getMCDMusicGeneralLoggingSymbolLoc_ptr_4;
  v8 = getMCDMusicGeneralLoggingSymbolLoc_ptr_4;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr_4)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = __getMCDMusicGeneralLoggingSymbolLoc_block_invoke_0;
    v4[3] = &unk_1339000;
    v4[4] = &v5;
    __getMCDMusicGeneralLoggingSymbolLoc_block_invoke_0((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke_0(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_16)
  {
    v6 = off_13399B0;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_16 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_16;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_16)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_16;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_4 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_210E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_21C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_21D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_4(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_17)
  {
    v6 = off_1339AF8;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_17 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_17;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_17)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_17;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_8 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_23BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

id getMCDSortByRecentlyPlayed_0()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByRecentlyPlayedSymbolLoc_ptr_0;
  v7 = getMCDSortByRecentlyPlayedSymbolLoc_ptr_0;
  if (!getMCDSortByRecentlyPlayedSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_9();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    getMCDSortByRecentlyPlayedSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t MusicCarDisplayUILibrary_9()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_18)
  {
    v4 = off_1339B68;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_18 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_18;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_18)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_24374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_24644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_247D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_24C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_10()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_19)
  {
    v4 = off_1339C88;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_19 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_19;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_19)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class __getMCDLoadingContentViewClass_block_invoke_0(uint64_t a1)
{
  Class result;
  uint64_t v3;

  MusicCarDisplayUILibrary_10();
  result = objc_getClass("MCDLoadingContentView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDLoadingContentViewClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getMCDLoadingContentViewClass_block_invoke_cold_1();
    return (Class)__getMCDErrorLoadingViewClass_block_invoke_0(v3);
  }
  return result;
}

MCDForYouContentManager *__getMCDErrorLoadingViewClass_block_invoke_0(uint64_t a1)
{
  MCDForYouContentManager *result;
  MCDForYouContentManager *v3;
  SEL v4;
  id v5;
  id v6;
  id v7;
  id v8;
  BOOL v9;
  id v10;

  MusicCarDisplayUILibrary_10();
  result = (MCDForYouContentManager *)objc_getClass("MCDErrorLoadingView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDErrorLoadingViewClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDForYouContentManager *)__getMCDErrorLoadingViewClass_block_invoke_cold_1();
    return -[MCDForYouContentManager initWithDataSource:delegate:viewController:playbackManager:limitedUI:contentResults:](v3, v4, v5, v6, v7, v8, v9, v10);
  }
  return result;
}

void sub_26858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id soft_MCDMusicGeneralLogging_1()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDMusicGeneralLoggingSymbolLoc_ptr_6;
  v9 = getMCDMusicGeneralLoggingSymbolLoc_ptr_6;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr_6)
  {
    v1 = (void *)MusicCarDisplayUILibrary_11();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    getMCDMusicGeneralLoggingSymbolLoc_ptr_6 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_26B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_26EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_11()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_20)
  {
    v4 = off_1339D18;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_20 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_20;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_20)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_28214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void sub_282E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_283C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_28CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  id *v32;
  uint64_t v33;

  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v33 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_28FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_5(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_21)
  {
    v6 = off_1339DB0;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_21 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_21;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_21)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_21;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_10 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke_1(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_22)
  {
    v6 = off_1339DD0;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_22 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_22;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_22)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_22;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_7 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke_2(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_23)
  {
    v6 = off_1339E08;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_23 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_23;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_23)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_23;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_8 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_2A9BC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_2ADF0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

unint64_t MusicStringContainsCJKScripts(void *a1)
{
  id v1;
  unint64_t v2;
  id v3;
  id v4;
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v1 = a1;
  if (MusicStringContainsCJKScripts_sOnceToken != -1)
    dispatch_once(&MusicStringContainsCJKScripts_sOnceToken, &__block_literal_global_14);
  v2 = (unint64_t)objc_msgSend(v1, "length");
  if (v2)
  {
    v3 = objc_retainAutorelease(v1);
    v4 = objc_msgSend(v3, "_fastCharacterContents");
    if (v4)
    {
      v5 = uset_containsAllCodePoints(MusicStringContainsCJKScripts_sNonCJKCharacterSet, v4, v2);
    }
    else
    {
      __chkstk_darwin(0);
      v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      objc_msgSend(v3, "getCharacters:range:", v7, 0, v2);
      v5 = uset_containsAllCodePoints(MusicStringContainsCJKScripts_sNonCJKCharacterSet, v7, v2);
    }
    v2 = v5 == 0;
  }

  return v2;
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_6(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_24)
  {
    v6 = off_1339F88;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_24 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_24;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_24)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_24;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_11 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_2C330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSKUIRedeemViewControllerClass_block_invoke(uint64_t a1)
{
  char *v2;
  Class result;
  char *v4;
  __int128 v5;
  uint64_t v6;

  v4 = 0;
  if (!StoreKitUILibraryCore_frameworkLibrary)
  {
    v5 = off_1339FA0;
    v6 = 0;
    StoreKitUILibraryCore_frameworkLibrary = _sl_dlopen(&v5, &v4);
    v2 = v4;
    if (!StoreKitUILibraryCore_frameworkLibrary)
    {
      abort_report_np("%s", v4);
      goto LABEL_7;
    }
    if (v4)
      goto LABEL_8;
  }
  while (1)
  {
    result = objc_getClass("SKUIRedeemViewController");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_7:
    v2 = (char *)__getSKUIRedeemViewControllerClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getSKUIRedeemViewControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_2CC24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMCDSortByRecentlyPlayed_1()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByRecentlyPlayedSymbolLoc_ptr_1;
  v7 = getMCDSortByRecentlyPlayedSymbolLoc_ptr_1;
  if (!getMCDSortByRecentlyPlayedSymbolLoc_ptr_1)
  {
    v1 = (void *)MusicCarDisplayUILibrary_12();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    getMCDSortByRecentlyPlayedSymbolLoc_ptr_1 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t MusicCarDisplayUILibrary_12()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_25)
  {
    v4 = off_1339FB8;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_25 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_25;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_25)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

id soft_MCDMusicGeneralLogging_2()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDMusicGeneralLoggingSymbolLoc_ptr_9;
  v9 = getMCDMusicGeneralLoggingSymbolLoc_ptr_9;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr_9)
  {
    v1 = (void *)MusicCarDisplayUILibrary_13();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    getMCDMusicGeneralLoggingSymbolLoc_ptr_9 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

id getMCDRadioViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDRadioViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDRadioViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDRadioViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_13();
    v0 = (id *)dlsym(v1, "MCDRadioViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDRadioViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDLibraryViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDLibraryViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDLibraryViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDLibraryViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_13();
    v0 = (id *)dlsym(v1, "MCDLibraryViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDLibraryViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDForYouTableViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDForYouTableViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDForYouTableViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDForYouTableViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_13();
    v0 = (id *)dlsym(v1, "MCDForYouTableViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDForYouTableViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDBrowseViewControllerIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDBrowseViewControllerIdentifierSymbolLoc_ptr;
  v7 = getMCDBrowseViewControllerIdentifierSymbolLoc_ptr;
  if (!getMCDBrowseViewControllerIdentifierSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_13();
    v0 = (id *)dlsym(v1, "MCDBrowseViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDBrowseViewControllerIdentifierSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDPlaylistsViewControllerIdentifier_1()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_2;
  v7 = getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_2;
  if (!getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_2)
  {
    v1 = (void *)MusicCarDisplayUILibrary_13();
    v0 = (id *)dlsym(v1, "MCDPlaylistsViewControllerIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDPlaylistsViewControllerIdentifierSymbolLoc_ptr_2 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDNowPlayingViewControllerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCDNowPlayingViewControllerClass_softClass;
  v7 = getMCDNowPlayingViewControllerClass_softClass;
  if (!getMCDNowPlayingViewControllerClass_softClass)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = __getMCDNowPlayingViewControllerClass_block_invoke;
    v3[3] = &unk_1339000;
    v3[4] = &v4;
    __getMCDNowPlayingViewControllerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_2E1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_13()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_26)
  {
    v4 = off_133A058;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_26 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_26;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_26)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class __getMCDNowPlayingViewControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;

  MusicCarDisplayUILibrary_13();
  result = objc_getClass("MCDNowPlayingViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDNowPlayingViewControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)__getMCDNowPlayingViewControllerClass_block_invoke_cold_1();
    return (Class)+[MCDAlbumsDetailTableHeaderView reuseIdentifier](v3, v4);
  }
  return result;
}

void sub_30980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_14()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_27)
  {
    v4 = off_133A070;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_27 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_27;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_27)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_310F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke_3(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_28)
  {
    v6 = off_133A0B0;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_28 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_28;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_28)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_28;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_10 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_31F08(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_15()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_29)
  {
    v4 = off_133A0C8;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_29 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_29;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_29)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void *__getMCDCarDisplayBundleSymbolLoc_block_invoke_7(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_30)
  {
    v6 = off_133A100;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_30 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_30;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_30)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_30;
LABEL_5:
  result = dlsym(v2, "MCDCarDisplayBundle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDCarDisplayBundleSymbolLoc_ptr_12 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_33FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_34C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getMCDPlaylistTracksViewControllerIdentifierSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_31)
  {
    v6 = off_133A170;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_31 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_31;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_31)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_31;
LABEL_5:
  result = dlsym(v2, "MCDPlaylistTracksViewControllerIdentifier");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDPlaylistTracksViewControllerIdentifierSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_35C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_36320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id soft_MCDMusicGeneralLogging_3()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDMusicGeneralLoggingSymbolLoc_ptr_12;
  v9 = getMCDMusicGeneralLoggingSymbolLoc_ptr_12;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr_12)
  {
    v1 = (void *)MusicCarDisplayUILibrary_16();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    getMCDMusicGeneralLoggingSymbolLoc_ptr_12 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_367EC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  uint64_t v5;

  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 80));
  objc_destroyWeak((id *)(v5 - 72));
  _Unwind_Resume(a1);
}

void sub_368B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_36A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id soft_MCDCarDisplayBundle_1()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDCarDisplayBundleSymbolLoc_ptr_13;
  v9 = getMCDCarDisplayBundleSymbolLoc_ptr_13;
  if (!getMCDCarDisplayBundleSymbolLoc_ptr_13)
  {
    v1 = (void *)MusicCarDisplayUILibrary_16();
    v0 = dlsym(v1, "MCDCarDisplayBundle");
    v7[3] = (uint64_t)v0;
    getMCDCarDisplayBundleSymbolLoc_ptr_13 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_38F74(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id getMCDAlertControllerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCDAlertControllerClass_softClass_0;
  v7 = getMCDAlertControllerClass_softClass_0;
  if (!getMCDAlertControllerClass_softClass_0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = __getMCDAlertControllerClass_block_invoke_0;
    v3[3] = &unk_1339000;
    v3[4] = &v4;
    __getMCDAlertControllerClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_39058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_39968(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_3A7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3A9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_16()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_32)
  {
    v4 = off_133A3A0;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_32 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_32;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_32)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

MCDPlaylistDataSource *__getMCDAlertControllerClass_block_invoke_0(uint64_t a1)
{
  MCDPlaylistDataSource *result;
  MCDPlaylistDataSource *v3;
  SEL v4;
  BOOL v5;
  id v6;

  MusicCarDisplayUILibrary_16();
  result = (MCDPlaylistDataSource *)objc_getClass("MCDAlertController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDAlertControllerClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDPlaylistDataSource *)__getMCDAlertControllerClass_block_invoke_cold_1();
    return -[MCDPlaylistDataSource initWithLimitedUI:playlist:](v3, v4, v5, v6);
  }
  return result;
}

id getMCDSortByRecentlyPlayed_2()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByRecentlyPlayedSymbolLoc_ptr_2;
  v7 = getMCDSortByRecentlyPlayedSymbolLoc_ptr_2;
  if (!getMCDSortByRecentlyPlayedSymbolLoc_ptr_2)
  {
    v1 = (void *)MusicCarDisplayUILibrary_17();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyPlayed");
    v5[3] = (uint64_t)v0;
    getMCDSortByRecentlyPlayedSymbolLoc_ptr_2 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDSortByRecentlyAdded()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByRecentlyAddedSymbolLoc_ptr_2;
  v7 = getMCDSortByRecentlyAddedSymbolLoc_ptr_2;
  if (!getMCDSortByRecentlyAddedSymbolLoc_ptr_2)
  {
    v1 = (void *)MusicCarDisplayUILibrary_17();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyAdded");
    v5[3] = (uint64_t)v0;
    getMCDSortByRecentlyAddedSymbolLoc_ptr_2 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDSortByRecentlyUpdated()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByRecentlyUpdatedSymbolLoc_ptr;
  v7 = getMCDSortByRecentlyUpdatedSymbolLoc_ptr;
  if (!getMCDSortByRecentlyUpdatedSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_17();
    v0 = (id *)dlsym(v1, "MCDSortByRecentlyUpdated");
    v5[3] = (uint64_t)v0;
    getMCDSortByRecentlyUpdatedSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id getMCDSortByTitle()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDSortByTitleSymbolLoc_ptr;
  v7 = getMCDSortByTitleSymbolLoc_ptr;
  if (!getMCDSortByTitleSymbolLoc_ptr)
  {
    v1 = (void *)MusicCarDisplayUILibrary_17();
    v0 = (id *)dlsym(v1, "MCDSortByTitle");
    v5[3] = (uint64_t)v0;
    getMCDSortByTitleSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

uint64_t MusicCarDisplayUILibrary_17()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_33)
  {
    v4 = off_133A3B8;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_33 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_33;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_33)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_3CA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3CDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose((const void *)(v8 - 128), 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

Class __getFAFamilyMessageGroupClass_block_invoke(uint64_t a1)
{
  Class result;

  FamilyCircleUILibrary();
  result = objc_getClass("FAFamilyMessageGroup");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getFAFamilyMessageGroupClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getFAFamilyMessageGroupClass_block_invoke_cold_1();
    return (Class)FamilyCircleUILibrary();
  }
  return result;
}

uint64_t FamilyCircleUILibrary()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!FamilyCircleUILibraryCore_frameworkLibrary)
  {
    v4 = off_133A420;
    v5 = 0;
    FamilyCircleUILibraryCore_frameworkLibrary = _sl_dlopen(&v4, &v3);
  }
  v0 = FamilyCircleUILibraryCore_frameworkLibrary;
  v1 = v3;
  if (!FamilyCircleUILibraryCore_frameworkLibrary)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

Class __getFACircleStateControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  FamilyCircleUILibrary();
  result = objc_getClass("FACircleStateController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getFACircleStateControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getFACircleStateControllerClass_block_invoke_cold_1();
    return (Class)__getFACircleContextClass_block_invoke(v3);
  }
  return result;
}

MCDRadioMusicKitTableViewController *__getFACircleContextClass_block_invoke(uint64_t a1)
{
  MCDRadioMusicKitTableViewController *result;
  MCDRadioMusicKitTableViewController *v3;
  SEL v4;
  BOOL v5;

  FamilyCircleUILibrary();
  result = (MCDRadioMusicKitTableViewController *)objc_getClass("FACircleContext");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getFACircleContextClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (MCDRadioMusicKitTableViewController *)__getFACircleContextClass_block_invoke_cold_1();
    return -[MCDRadioMusicKitTableViewController initWithLimitedUI:](v3, v4, v5);
  }
  return result;
}

void sub_3D184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_3DB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3DDF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke_4(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_34)
  {
    v6 = off_133A458;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_34 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_34;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_34)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_34;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_13 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id soft_MCDCarDisplayBundle_2()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDCarDisplayBundleSymbolLoc_ptr_14;
  v9 = getMCDCarDisplayBundleSymbolLoc_ptr_14;
  if (!getMCDCarDisplayBundleSymbolLoc_ptr_14)
  {
    v1 = (void *)MusicCarDisplayUILibrary_18();
    v0 = dlsym(v1, "MCDCarDisplayBundle");
    v7[3] = (uint64_t)v0;
    getMCDCarDisplayBundleSymbolLoc_ptr_14 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

id getMCDPlaybackStateChangedNotification()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDPlaybackStateChangedNotificationSymbolLoc_ptr_0;
  v7 = getMCDPlaybackStateChangedNotificationSymbolLoc_ptr_0;
  if (!getMCDPlaybackStateChangedNotificationSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_18();
    v0 = (id *)dlsym(v1, "MCDPlaybackStateChangedNotification");
    v5[3] = (uint64_t)v0;
    getMCDPlaybackStateChangedNotificationSymbolLoc_ptr_0 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

id MCDTableCellExplicitLabel()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  _Unwind_Exception *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;

  v0 = objc_alloc_init((Class)UILabel);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont systemFontOfSize:](UIFont, "systemFontOfSize:", 15.0));
  objc_msgSend(v0, "setFont:", v1);

  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v2 = getMCDLocalizedExplicitStringSymbolLoc_ptr;
  v14 = getMCDLocalizedExplicitStringSymbolLoc_ptr;
  if (!getMCDLocalizedExplicitStringSymbolLoc_ptr)
  {
    v3 = (void *)MusicCarDisplayUILibrary_18();
    v2 = dlsym(v3, "MCDLocalizedExplicitString");
    v12[3] = (uint64_t)v2;
    getMCDLocalizedExplicitStringSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v11, 8);
  if (!v2)
  {
    v10 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v11, 8);
    _Unwind_Resume(v10);
  }
  v5 = ((uint64_t (*)(uint64_t))v2)(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v0, "setText:", v6, v11);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _carSystemSecondaryColor](UIColor, "_carSystemSecondaryColor"));
  objc_msgSend(v0, "setTextColor:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor _carSystemFocusSecondaryColor](UIColor, "_carSystemFocusSecondaryColor"));
  objc_msgSend(v0, "setHighlightedTextColor:", v8);

  objc_msgSend(v0, "sizeToFit");
  return v0;
}

id soft_MCDFavoriteIcon()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDFavoriteIconSymbolLoc_ptr_0;
  v9 = getMCDFavoriteIconSymbolLoc_ptr_0;
  if (!getMCDFavoriteIconSymbolLoc_ptr_0)
  {
    v1 = (void *)MusicCarDisplayUILibrary_18();
    v0 = dlsym(v1, "MCDFavoriteIcon");
    v7[3] = (uint64_t)v0;
    getMCDFavoriteIconSymbolLoc_ptr_0 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_41228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

uint64_t MusicCarDisplayUILibrary_18()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_35)
  {
    v4 = off_133A4E8;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_35 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_35;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_35)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_42844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getMCDMusicBundleIdentifier()
{
  id *v0;
  void *v1;
  _Unwind_Exception *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (id *)getMCDMusicBundleIdentifierSymbolLoc_ptr_3;
  v7 = getMCDMusicBundleIdentifierSymbolLoc_ptr_3;
  if (!getMCDMusicBundleIdentifierSymbolLoc_ptr_3)
  {
    v1 = (void *)MusicCarDisplayUILibrary_19();
    v0 = (id *)dlsym(v1, "MCDMusicBundleIdentifier");
    v5[3] = (uint64_t)v0;
    getMCDMusicBundleIdentifierSymbolLoc_ptr_3 = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v4, 8);
    _Unwind_Resume(v3);
  }
  return *v0;
}

Class __getMCDNowPlayingViewControllerClass_block_invoke_0(uint64_t a1)
{
  Class result;

  MusicCarDisplayUILibrary_19();
  result = objc_getClass("MCDNowPlayingViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getMCDNowPlayingViewControllerClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getMCDNowPlayingViewControllerClass_block_invoke_cold_1();
    return (Class)MusicCarDisplayUILibrary_19();
  }
  return result;
}

uint64_t MusicCarDisplayUILibrary_19()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_36)
  {
    v4 = off_133A560;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_36 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_36;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_36)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

id soft_MCDMusicGeneralLogging_4()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  _Unwind_Exception *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (uint64_t (*)(void))getMCDMusicGeneralLoggingSymbolLoc_ptr_14;
  v8 = getMCDMusicGeneralLoggingSymbolLoc_ptr_14;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr_14)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = __getMCDMusicGeneralLoggingSymbolLoc_block_invoke_5;
    v4[3] = &unk_1339000;
    v4[4] = &v5;
    __getMCDMusicGeneralLoggingSymbolLoc_block_invoke_5((uint64_t)v4);
    v0 = (uint64_t (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    v3 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  v1 = v0();
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

void sub_43954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getMCDMusicGeneralLoggingSymbolLoc_block_invoke_5(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_37)
  {
    v6 = off_133A5E0;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_37 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_37;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_37)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_37;
LABEL_5:
  result = dlsym(v2, "MCDMusicGeneralLogging");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMusicGeneralLoggingSymbolLoc_ptr_14 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id soft_MCDMusicGeneralLogging_5()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v0 = getMCDMusicGeneralLoggingSymbolLoc_ptr_15;
  v9 = getMCDMusicGeneralLoggingSymbolLoc_ptr_15;
  if (!getMCDMusicGeneralLoggingSymbolLoc_ptr_15)
  {
    v1 = (void *)MusicCarDisplayUILibrary_20();
    v0 = dlsym(v1, "MCDMusicGeneralLogging");
    v7[3] = (uint64_t)v0;
    getMCDMusicGeneralLoggingSymbolLoc_ptr_15 = v0;
  }
  _Block_object_dispose(&v6, 8);
  if (!v0)
  {
    v5 = (_Unwind_Exception *)soft_MCDMusicGeneralLogging_cold_1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  v3 = ((uint64_t (*)(uint64_t))v0)(v2);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

void sub_464E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t MusicCarDisplayUILibrary_20()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_38)
  {
    v4 = off_133A668;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_38 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_38;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_38)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void sub_479BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

uint64_t MusicCarDisplayUILibrary_21()
{
  uint64_t v0;
  char *v1;
  char *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_39)
  {
    v4 = off_133A6A8;
    v5 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_39 = _sl_dlopen(&v4, &v3);
  }
  v0 = MusicCarDisplayUILibraryCore_frameworkLibrary_39;
  v1 = v3;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_39)
  {
    v1 = (char *)abort_report_np("%s", v3);
    goto LABEL_7;
  }
  if (v3)
LABEL_7:
    free(v1);
  return v0;
}

void *__getMCDMPModelObjectForGenericObjectSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  char *v3;
  void *result;
  char *v5;
  __int128 v6;
  uint64_t v7;

  v5 = 0;
  if (!MusicCarDisplayUILibraryCore_frameworkLibrary_40)
  {
    v6 = off_133A6E0;
    v7 = 0;
    MusicCarDisplayUILibraryCore_frameworkLibrary_40 = _sl_dlopen(&v6, &v5);
    v3 = v5;
    v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_40;
    if (MusicCarDisplayUILibraryCore_frameworkLibrary_40)
    {
      if (!v5)
        goto LABEL_5;
    }
    else
    {
      v3 = (char *)abort_report_np("%s", v5);
    }
    free(v3);
    goto LABEL_5;
  }
  v2 = (void *)MusicCarDisplayUILibraryCore_frameworkLibrary_40;
LABEL_5:
  result = dlsym(v2, "MCDMPModelObjectForGenericObject");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getMCDMPModelObjectForGenericObjectSymbolLoc_ptr_0 = *(_UNKNOWN **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id static MPSectionedCollection.withModelObject(_:)(uint64_t a1)
{
  id v2;
  NSString v3;

  v2 = objc_msgSend(objc_allocWithZone((Class)MPMutableSectionedCollection), "init");
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "appendSection:", v3);

  objc_msgSend(v2, "appendItem:", a1);
  return v2;
}

id Array<A>.asSectionedCollection()()
{
  id v0;
  NSString v1;
  Class isa;

  __swift_instantiateConcreteTypeFromMangledName(&qword_14AC418);
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "appendSection:", v1);

  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "appendItems:", isa);

  return v0;
}

uint64_t static MPMediaLibraryFilteringOptions.none.getter()
{
  return 0;
}

uint64_t variable initialization expression of Library.Context.useDownloadedContentOnly()
{
  return 0;
}

uint64_t static MPCPlayerCommandRequest.isAvailable(in:)()
{
  return 1;
}

uint64_t static MPCPlayerRequestTracklistRange.nowPlayingItem.getter()
{
  return 0;
}

uint64_t variable initialization expression of JSSplitWidgetViewController.appearanceState()
{
  return 128;
}

void *variable initialization expression of Library.Context.playlistVariants()
{
  return &_swiftEmptyArrayStorage;
}

unint64_t variable initialization expression of JSDrivenViewController.trailingBarButtonItemMap()
{
  return sub_196FFC((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of JSDrivenViewController.metricsPageProperties@<X0>(uint64_t a1@<X8>)
{
  return sub_495F4(type metadata accessor for MetricsPageProperties, a1);
}

uint64_t static ActionDisplayConfiguration.Attributes.hidden.getter()
{
  return 4;
}

double variable initialization expression of ShelfCollectionViewLayout.maximumScrollingHeaderHeight()
{
  return 0.0;
}

double variable initialization expression of TextLabelProperties.defaultFirstBaselineOffset()
{
  return 16.0;
}

double BrowseCollectionViewCellArtworkPrefetching.artworkCatalogPreferredFittingSize(at:)()
{
  return 0.0;
}

double variable initialization expression of PromotionalParallaxViewController.lastSeenViewBounds()
{
  return 0.0;
}

unint64_t variable initialization expression of JSSplitWidgetViewController.contentSizeObserverMap()
{
  return sub_1973C4((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of UnifiedMessages.Coordinator.serviceType()
{
  return 0x636973756DLL;
}

id variable initialization expression of UnifiedMessages.Coordinator.bag()
{
  id v0;
  NSString v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;

  v0 = objc_allocWithZone((Class)AMSProcessInfo);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithBundleIdentifier:", v1);

  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(AMSBag), "bagForProfile:profileVersion:processInfo:", v3, v4, v2);

  return v5;
}

Swift::Int variable initialization expression of UnifiedMessages.Coordinator.observedPlacements()
{
  return sub_4C4F0((uint64_t)&off_133C338);
}

id variable initialization expression of UnifiedMessages.Coordinator.userDefaults()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;

  v0 = *((_QWORD *)UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor() + 1);
  v1 = objc_allocWithZone((Class)NSUserDefaults);
  swift_bridgeObjectRetain();
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v0);
  v3 = objc_msgSend(v1, "initWithSuiteName:", v2);

  return v3;
}

unint64_t variable initialization expression of UnifiedMessages.Coordinator._inlineBubbleTipRequests()
{
  return sub_19831C((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t *variable initialization expression of JSSearchLandingUpsellViewController.artworkVideoReportingController()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AC480);
  swift_allocObject(v0, 48, 7);
  return ArtworkVideoReportingController.init()();
}

double variable initialization expression of TextDrawing.Cache._displayScale()
{
  id v0;
  double v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "scale");
  v2 = v1;

  return v2;
}

id variable initialization expression of TextDrawing.Cache._tintColor()
{
  id result;

  result = sub_27870C();
  if (!result)
    return objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  return result;
}

double variable initialization expression of TextDrawing.Cache.reusableKey()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = _s5CacheC3KeyCMa();
  v1 = swift_allocObject(v0, 128, 7);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 32) = xmmword_105B340;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 48) = sub_277EE8;
  result = -0.0;
  *(_OWORD *)(v1 + 72) = xmmword_105B350;
  *(_QWORD *)(v1 + 88) = 1;
  *(_QWORD *)(v1 + 96) = 0x4030000000000000;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0;
  *(_QWORD *)(v1 + 104) = 0;
  return result;
}

uint64_t variable initialization expression of TextDrawing.Cache.reusableAttributesWrapper()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "blackColor");
  v3 = objc_msgSend(v1, "clearColor");
  v4 = _s5CacheC17AttributesWrapperCMa();
  result = swift_allocObject(v4, 72, 7);
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v3;
  *(_BYTE *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 4;
  *(_QWORD *)(result + 48) = 0;
  *(_BYTE *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = v0;
  return result;
}

void *variable initialization expression of Library.Menu.Request.excludedIdentifiers()
{
  return &_swiftEmptySetSingleton;
}

uint64_t variable initialization expression of TextDrawing.View._textDrawingContext@<X0>(uint64_t a1@<X8>)
{
  _OWORD v3[8];

  sub_4C718(v3);
  return sub_4C730((uint64_t)v3, a1);
}

uint64_t variable initialization expression of AlbumCell.title()
{
  return 0;
}

id variable initialization expression of RadioShowCell.backdropView()
{
  return objc_msgSend(objc_allocWithZone((Class)UIView), "init");
}

id variable initialization expression of BackgroundLockupCollectionViewCell.textStackView()
{
  return sub_49474((uint64_t (*)(_QWORD))type metadata accessor for TextStackView);
}

uint64_t static MPIdentifierSet.Purpose.Options.catalog.getter()
{
  return 2;
}

uint64_t variable initialization expression of TitleSectionHeaderView.systemStyleButtonAttributedTitle()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  NSString *v3;
  id v4;
  unint64_t v5;
  id v6;
  NSString v7;
  Class isa;
  _BYTE v10[72];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AC490);
  inited = swift_initStackObject(v0, v10);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = NSFontAttributeName;
  v4 = objc_msgSend(v2, "preferredFontForTextStyle:", UIFontTextStyleBody);
  *(_QWORD *)(inited + 64) = sub_4E684(0, qword_14ADF70, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v4;
  v5 = sub_196A6C(inited);
  v6 = objc_allocWithZone((Class)NSAttributedString);
  v7 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_4DD24((unint64_t *)&qword_14AC4A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_105D4DC);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v6, "initWithString:attributes:", v7, isa);

  return 0;
}

uint64_t variable initialization expression of TitleSectionHeaderView.compactLayoutStyle()
{
  return 0x4034000000000000;
}

uint64_t variable initialization expression of TitleSectionHeaderView.regularLayoutStyle()
{
  return 4;
}

uint64_t variable initialization expression of BackgroundLockupCollectionViewCell.artworkCornerTreatment@<X0>(uint64_t a1@<X8>)
{
  return sub_495F4((uint64_t (*)(_QWORD))&type metadata accessor for UIView.Corner, a1);
}

id variable initialization expression of TitleSectionHeaderView.artworkPlaceholder@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10;

  v2 = Artwork.Placeholder.music.unsafeMutableAddressor();
  v3 = (void *)*v2;
  v4 = (void *)v2[1];
  v5 = (void *)v2[2];
  v10 = (id)v2[3];
  *(_QWORD *)a1 = *v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v10;
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v2 + 2);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return v10;
}

uint64_t variable initialization expression of PlaylistPickerPresenterContext.sourcedReferralObject@<X0>(uint64_t a1@<X8>)
{
  return sub_495F4(type metadata accessor for SourcedModel, a1);
}

uint64_t variable initialization expression of LibraryModelRequest.itemRange()
{
  return 0;
}

uint64_t variable initialization expression of _NSRange.NSRangeIterator.current()
{
  return 0;
}

uint64_t variable initialization expression of PrivacyDisclaimerPresenter.welcomeViewModel@<X0>(uint64_t a1@<X8>)
{
  return sub_495F4(type metadata accessor for WelcomeViewModel, a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

char *variable initialization expression of CircleImageView.textStackView()
{
  char *v0;
  char *v1;
  char v3[24];

  type metadata accessor for TextStackView();
  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v1 = &v0[OBJC_IVAR____TtC16MusicApplication13TextStackView_verticalAlignment];
  swift_beginAccess(&v0[OBJC_IVAR____TtC16MusicApplication13TextStackView_verticalAlignment], v3, 1, 0);
  *v1 = 0;
  return v0;
}

double variable initialization expression of TextStackView.exclusionRectangle@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

double variable initialization expression of SharePlayTogetherSession._qrCode@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t variable initialization expression of TextStackView.indexedComponents()
{
  return sub_19955C((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of TextStackView.cacheKeyStackViewLayoutMetrics()
{
  return sub_19967C((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of BrowseCollectionViewController.textDrawingCache(uint64_t a1)
{
  return sub_490A4(a1, (uint64_t (*)(_QWORD))type metadata accessor for TextDrawing.Cache, 120, TextDrawing.Cache.init());
}

uint64_t variable initialization expression of JSInlineSocialUpsellViewController.artworkCachingReference()
{
  uint64_t v0;

  v0 = type metadata accessor for Artwork.CachingReference();
  return swift_allocObject(v0, 16, 7);
}

uint64_t variable initialization expression of BrowseCollectionViewController.modelResponseLock(uint64_t a1)
{
  return sub_490A4(a1, (uint64_t (*)(_QWORD))type metadata accessor for UnfairLock, 24, UnfairLock.init());
}

uint64_t sub_490A4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;

  v6 = a2(0);
  swift_allocObject(v6, a3, 7);
  return a4();
}

id variable initialization expression of BrowseCollectionViewController.artworkPrefetchingController()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for old_ArtworkPrefetchingController()), "init");
}

CGFloat variable initialization expression of ShelfCollectionViewLayout.GridMetrics.interItemOffset()
{
  return UIOffsetZero.horizontal;
}

double variable initialization expression of ShelfCollectionViewLayout._interSectionHorizontalOffset()
{
  return 10.0;
}

uint64_t variable initialization expression of ShelfCollectionViewLayout.startingIndexPath@<X0>(uint64_t a1@<X8>)
{
  return sub_495F4((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, a1);
}

unint64_t variable initialization expression of ShelfCollectionViewLayout.itemIndexPathRelativeFrameMap()
{
  return sub_199918((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of ShelfCollectionViewLayout.scrollingHeaderIndexPathMetricsMap()
{
  return sub_199AB4((uint64_t)_swiftEmptyArrayStorage);
}

id variable initialization expression of PageHeaderContentViewController.pageHeaderContentView()
{
  return sub_49474((uint64_t (*)(_QWORD))type metadata accessor for PageHeaderContentView);
}

double variable initialization expression of GroupActivitiesManager._reaction@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double variable initialization expression of BackgroundLockupCollectionViewCell.artworkAspectRatio()
{
  return 1.0;
}

double variable initialization expression of BackgroundLockupCollectionViewCell.artworkSize()
{
  return 335.0;
}

double _s16MusicApplication34BackgroundLockupCollectionViewCellC18_artworkEdgeInsets33_2DC3AE1F4A3D281B101150706684F91DLLSo06UIEdgeJ0Vvpfi_0()
{
  if (qword_14AB8A0 != -1)
    swift_once(&qword_14AB8A0, sub_782A64);
  return *(double *)&xmmword_1580E30;
}

double sub_491CC()
{
  if (qword_14AB8E8 != -1)
    swift_once(&qword_14AB8E8, sub_7A5960);
  return *(double *)&xmmword_1580EB0;
}

uint64_t variable initialization expression of VerticalLockupCollectionViewCell.artworkCornerTreatment@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = UIView.Corner.medium.unsafeMutableAddressor();
  v3 = type metadata accessor for UIView.Corner(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v2, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

uint64_t variable initialization expression of VerticalLockupCollectionViewCell.artworkAccessoryStyle()
{
  return 0;
}

double variable initialization expression of VerticalLockupCollectionViewCell.artworkImageSize()
{
  return 163.0;
}

uint64_t _s16MusicApplication34BackgroundLockupCollectionViewCellC16artworkComponent0A6CoreUI7ArtworkVAAE0I0Cvpfi_0()
{
  id v0;
  uint64_t v1;

  type metadata accessor for ArtworkComponentImageView();
  v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v1 = _s9ComponentCMa(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  return sub_150418(v0);
}

__n128 variable initialization expression of VerticalLockupCollectionViewCell.selectedBackgroundViewConfiguration@<Q0>(uint64_t a1@<X8>)
{
  id v2;
  __n128 result;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemLightGrayColor");
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v2;
  __asm { FMOV            V0.2D, #-6.0 }
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = xmmword_105B370;
  return result;
}

uint64_t variable initialization expression of CuratorActivityCell.textComponents()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  __int128 v6[2];
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __int128 v11;

  v0 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  if (qword_14ABD48 != -1)
    swift_once(&qword_14ABD48, sub_9B6C50);
  v1 = (void *)qword_15814D8;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v1;
  *(_QWORD *)&v6[0] = v1;
  *((_QWORD *)&v6[0] + 1) = objc_msgSend(v2, "clearColor");
  v6[1] = xmmword_105B380;
  v7 = 0;
  v8 = 0;
  v9 = v0;
  v10 = 2;
  v11 = xmmword_105B390;
  v4 = type metadata accessor for TextStackView.Component();
  swift_allocObject(v4, 264, 7);
  return TextStackView.Component.init(identifier:labelProperties:)(0x656C746974, 0xE500000000000000, v6);
}

CGFloat variable initialization expression of PromotionalParallaxViewController.sourceScrollViewExternalContentInsets()
{
  return UIEdgeInsetsZero.top;
}

id variable initialization expression of PromotionalParallaxViewController.promotionalImageryView()
{
  return sub_49474((uint64_t (*)(_QWORD))type metadata accessor for PromotionalImageryView);
}

id sub_49474(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = a1(0);
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
}

uint64_t _s16MusicApplication39JSSocialOnboardingWelcomeViewControllerC16textDrawingCache33_0080F1ABAF21DBC4A84736AD36882F7FLLAA04TextI0V0J0Cvpfi_0()
{
  uint64_t v0;

  v0 = type metadata accessor for TextDrawing.Cache();
  swift_allocObject(v0, 120, 7);
  return TextDrawing.Cache.init()();
}

uint64_t variable initialization expression of JSShelfViewController.playbackIndicator()
{
  uint64_t v0;

  v0 = type metadata accessor for PlaybackIndicator(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_7CCA00();
}

unint64_t variable initialization expression of JSShelfViewController.socialProfilesHelper()
{
  return 0xD000000000000015;
}

void *variable initialization expression of Player.NowPlayingConfiguration.tracklistRanges()
{
  return &_swiftEmptyDictionarySingleton;
}

id variable initialization expression of Search.configuration@<X0>(uint64_t a1@<X8>)
{
  id result;

  *(_QWORD *)a1 = 0;
  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    *(_QWORD *)(a1 + 8) = result;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_QWORD *)(a1 + 64) = &_swiftEmptySetSingleton;
    *(_QWORD *)(a1 + 72) = &_swiftEmptySetSingleton;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id variable initialization expression of Search.Configuration.mediaLibrary()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

uint64_t variable initialization expression of Search.ResultContext.sourcing()
{
  return 0;
}

uint64_t variable initialization expression of Library.Context.playlist@<X0>(uint64_t a1@<X8>)
{
  return sub_495F4((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_495F4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_49634(uint64_t a1, uint64_t a2)
{
  return sub_4A604(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_49658@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_49680(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_49688@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_4969C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_496B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_496C4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_496F0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_49714(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_49728(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_4973C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_49750@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_49764(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_49778(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_4978C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_497A0()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_497B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_497C8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

id UIView.Shadow.color.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_497E8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_497F0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_49804@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_49814(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_49824()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

uint64_t sub_49850(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_105E880, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_4988C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_105E880, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_498D4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  WitnessTable = swift_getWitnessTable(&unk_105E880, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

BOOL sub_4992C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

Swift::Int sub_4995C()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_499A0()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

_QWORD *sub_499E0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_499EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_49A00(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_49A74(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_49AF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_49B30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_4F258(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_49B6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_4BDE80();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_49BA8()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(AVFoundationErrorDomain);
}

uint64_t sub_49BB8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_49BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_49C38(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_49C9C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_49CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_49D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_49D7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_105E880, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

unsigned __int8 *sub_49DC8@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_49DD8(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_49DE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14ACF08, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_105EE20);
  v3 = sub_4DD24(&qword_14ACF10, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_105E61C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_49E68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14ACA30, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_105D2E8);
  v3 = sub_4DD24(&qword_14ACA38, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_105D288);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_49EEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24((unint64_t *)&qword_14AC4A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_105D4DC);
  v3 = sub_4DD24(&qword_14ACAB0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_105B9B0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_49F70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14ACA60, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_105C504);
  v3 = sub_4DD24(&qword_14ACA68, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_105C4AC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_49FF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14ACA50, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_105C7FC);
  v3 = sub_4DD24(&qword_14ACA58, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_105C7A4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A078(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24(&qword_14ACE78, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC20);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_4A0B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24(&qword_14ACE78, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC20);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_4A0FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_4A13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_4A194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14ACA40, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_105CB6C);
  v3 = sub_4DD24(&qword_14ACA48, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_105CB14);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24((unint64_t *)&qword_14ACA90, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_105D498);
  v3 = sub_4DD24(&qword_14ACA98, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_105BC28);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A29C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14ACAA0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_105BB30);
  v3 = sub_4DD24(&qword_14ACAA8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_105BAD0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24((unint64_t *)&qword_14CFAD0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_105EF30);
  v3 = sub_4DD24(&qword_14ACF50, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_105DFB4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A3A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24((unint64_t *)&unk_14D58B0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_105EDDC);
  v3 = sub_4DD24(&qword_14ACF00, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_105E730);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24((unint64_t *)&qword_14ACF18, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_105EE64);
  v3 = sub_4DD24((unint64_t *)&unk_14ACF20, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_105E508);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A4AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24(&qword_14E1530, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_105EEA8);
  v3 = sub_4DD24((unint64_t *)&unk_14ACF30, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_105E2BC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A530@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_4A574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_4DD24((unint64_t *)&unk_14E8690, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_105EEEC);
  v3 = sub_4DD24((unint64_t *)&unk_14ACF40, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_105E0C8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_4A5F8(uint64_t a1, uint64_t a2)
{
  return sub_4A604(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_4A604(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_4A640(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_4A680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_4A6F0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

void sub_4A778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB68);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v29 = v1;
    v30 = a1 + 32;
    while (1)
    {
      v9 = v30 + 24 * v4;
      v11 = *(void **)v9;
      v10 = *(_QWORD *)(v9 + 8);
      v12 = *(_BYTE *)(v9 + 16);
      Hasher.init(_seed:)(v32);
      if ((v12 & 1) != 0)
      {
        Hasher._combine(_:)(1uLL);
        v13 = v11;
        NSObject.hash(into:)(v32);
        sub_4E664(v11, v10, 1);
      }
      else
      {
        Hasher._combine(_:)(0);
        swift_bridgeObjectRetain();
        String.hash(into:)(v32, v11, v10);
      }
      v14 = Hasher._finalize()();
      v15 = ~(-1 << *(_BYTE *)(v3 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v5 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        v31 = v4;
        do
        {
          v20 = *(_QWORD *)(v3 + 48) + 24 * v16;
          v21 = *(void **)v20;
          v22 = *(_QWORD *)(v20 + 8);
          if ((*(_BYTE *)(v20 + 16) & 1) != 0)
          {
            if ((v12 & 1) != 0)
            {
              sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
              sub_4E674(v11, v10, 1);
              sub_4E674(v21, v22, 1);
              v23 = static NSObject.== infix(_:_:)(v21, v11);
              sub_4E664(v11, v10, 1);
              sub_4E664(v21, v22, 1);
              if ((v23 & 1) != 0)
              {
                v6 = v11;
                v7 = v10;
                v8 = 1;
                goto LABEL_4;
              }
            }
          }
          else if ((v12 & 1) == 0)
          {
            v24 = v21 == v11 && v22 == v10;
            if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v11, v10, 0) & 1) != 0)
            {
              v6 = v11;
              v7 = v10;
              v8 = 0;
LABEL_4:
              sub_4E664(v6, v7, v8);
              v1 = v29;
              v4 = v31;
              goto LABEL_5;
            }
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v5 + 8 * (v16 >> 6));
          v19 = 1 << v16;
        }
        while ((v18 & (1 << v16)) != 0);
        v1 = v29;
        v4 = v31;
      }
      *(_QWORD *)(v5 + 8 * v17) = v19 | v18;
      v25 = *(_QWORD *)(v3 + 48) + 24 * v16;
      *(_QWORD *)v25 = v11;
      *(_QWORD *)(v25 + 8) = v10;
      *(_BYTE *)(v25 + 16) = v12;
      v26 = *(_QWORD *)(v3 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v3 + 16) = v28;
LABEL_5:
      if (++v4 == v1)
        return;
    }
    __break(1u);
  }
}

void sub_4AA04(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::UInt v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::UInt v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[9];

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_14AC930);
      v4 = (_BYTE *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = v4 + 56;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
        break;
      v12 = v10;
      Hasher.init(_seed:)(v35);
      v13 = sub_308B9C();
      Hasher._combine(_:)(v13);
      v14 = Hasher._finalize()();
      v15 = ~(-1 << v4[32]);
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)&v8[8 * v17];
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        while (sub_308B9C() != *(_QWORD *)(v12 + 56))
        {
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)&v8[8 * (v16 >> 6)];
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            goto LABEL_22;
        }
        swift_unknownObjectRelease(v12);
        if (v9 == v5)
          return;
      }
      else
      {
LABEL_22:
        *(_QWORD *)&v8[8 * v17] = v19 | v18;
        *(_QWORD *)(*((_QWORD *)v4 + 6) + 8 * v16) = v12;
        v20 = *((_QWORD *)v4 + 2);
        v11 = __OFADD__(v20, 1);
        v21 = v20 + 1;
        if (v11)
          goto LABEL_34;
        *((_QWORD *)v4 + 2) = v21;
        if (v9 == v5)
          return;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    v22 = 0;
    v34 = a1 + 32;
    v23 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    while (v22 != v23)
    {
      v24 = *(_QWORD *)(v34 + 8 * v22);
      Hasher.init(_seed:)(v35);
      v25 = sub_308B9C();
      Hasher._combine(_:)(v25);
      v26 = Hasher._finalize()();
      v27 = ~(-1 << v4[32]);
      v28 = v26 & v27;
      v29 = (v26 & (unint64_t)v27) >> 6;
      v30 = *(_QWORD *)&v8[8 * v29];
      v31 = 1 << (v26 & v27);
      if ((v31 & v30) != 0)
      {
        while (sub_308B9C() != *(_QWORD *)(v24 + 56))
        {
          v28 = (v28 + 1) & v27;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)&v8[8 * (v28 >> 6)];
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_31;
        }
      }
      else
      {
LABEL_31:
        *(_QWORD *)&v8[8 * v29] = v31 | v30;
        *(_QWORD *)(*((_QWORD *)v4 + 6) + 8 * v28) = v24;
        v32 = *((_QWORD *)v4 + 2);
        v11 = __OFADD__(v32, 1);
        v33 = v32 + 1;
        if (v11)
          goto LABEL_36;
        *((_QWORD *)v4 + 2) = v33;
        swift_retain(v24);
      }
      if (++v22 == v5)
        return;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_4ACD0(uint64_t a1)
{
  sub_4BA74(a1, (uint64_t *)&unk_14AC920, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
}

Swift::Int sub_4ACEC(uint64_t a1)
{
  return sub_4B91C(a1, &qword_14ACAC8);
}

void *sub_4ACF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14ACBA0);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_4DD24((unint64_t *)&unk_14C1260, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_4DD24(&qword_14ACBB0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void *sub_4AF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::UInt v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v21[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return &_swiftEmptySetSingleton;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB60);
  v3 = static _SetStorage.allocate(capacity:)(v1);
  v4 = 0;
  v5 = v3 + 56;
  v6 = a1 + 32;
  do
  {
    v7 = *(unsigned __int8 *)(v6 + v4);
    Hasher.init(_seed:)(v21);
    if ((v7 - 3) >= 7u)
    {
      Hasher._combine(_:)(6uLL);
      v8 = v7;
    }
    else
    {
      v8 = qword_105F040[(char)(v7 - 3)];
    }
    Hasher._combine(_:)(v8);
    v9 = Hasher._finalize()();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = v9 & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    v15 = *(_QWORD *)(v3 + 48);
    if (((1 << v11) & v13) != 0)
    {
      v16 = ~v10;
      while (2)
      {
        switch(*(_BYTE *)(v15 + v11))
        {
          case 3:
            if ((_DWORD)v7 != 3)
              goto LABEL_10;
            break;
          case 4:
            if ((_DWORD)v7 != 4)
              goto LABEL_10;
            break;
          case 5:
            if ((_DWORD)v7 != 5)
              goto LABEL_10;
            break;
          case 6:
            if ((_DWORD)v7 != 6)
              goto LABEL_10;
            break;
          case 7:
            if ((_DWORD)v7 != 7)
              goto LABEL_10;
            break;
          case 8:
            if ((_DWORD)v7 != 8)
              goto LABEL_10;
            break;
          case 9:
            if ((_DWORD)v7 != 9)
              goto LABEL_10;
            break;
          default:
            if ((v7 - 10) > 0xF8u || *(unsigned __int8 *)(v15 + v11) != (_DWORD)v7)
            {
LABEL_10:
              v11 = (v11 + 1) & v16;
              v12 = v11 >> 6;
              v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
              v14 = 1 << v11;
              if ((v13 & (1 << v11)) == 0)
                goto LABEL_27;
              continue;
            }
            break;
        }
        break;
      }
    }
    else
    {
LABEL_27:
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v7;
      v17 = *(_QWORD *)(v3 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        JUMPOUT(0x4B14CLL);
      }
      *(_QWORD *)(v3 + 16) = v19;
    }
    ++v4;
  }
  while (v4 != v1);
  return (void *)v3;
}

void sub_4B168(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB30);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_4DD24(&qword_14ACB40, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8)))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void *sub_4B3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[10];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACA70);
    static _SetStorage.allocate(capacity:)(v1);
    v3 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(v5);
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_4B910(uint64_t a1)
{
  return sub_4B91C(a1, &qword_14ACAB8);
}

Swift::Int sub_4B91C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(unsigned __int8 *)(v7 + v5);
      Hasher.init(_seed:)(v20);
      Hasher._combine(_:)(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == (_DWORD)v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (*(unsigned __int8 *)(v15 + v11) == (_DWORD)v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_4BA58(uint64_t a1)
{
  sub_4BA74(a1, &qword_14ACC48, &qword_14ACC50, _UITab_ptr);
}

void sub_4BA74(uint64_t a1, uint64_t *a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  id v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v50;

  v5 = a1;
  v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v7)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v8 = (_QWORD *)static _SetStorage.allocate(capacity:)(v7);
      if (!v6)
        goto LABEL_4;
LABEL_11:
      if (v5 < 0)
        v11 = v5;
      else
        v11 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v5);
      if (!v9)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v7)
      goto LABEL_3;
  }
  v8 = &_swiftEmptySetSingleton;
  if (v6)
    goto LABEL_11;
LABEL_4:
  v9 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
  if (!v9)
    return;
LABEL_15:
  v12 = (char *)(v8 + 7);
  v50 = v9;
  if ((v5 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    v46 = v5;
    while (1)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v5);
      v15 = __OFADD__(v13++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_43;
      }
      v16 = v14;
      v17 = NSObject._rawHashValue(seed:)(v8[5]);
      v18 = -1 << *((_BYTE *)v8 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
      v22 = 1 << v19;
      if (((1 << v19) & v21) != 0)
      {
        sub_4E684(0, a3, a4);
        v23 = *(id *)(v8[6] + 8 * v19);
        v24 = static NSObject.== infix(_:_:)(v23, v16);

        if ((v24 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v16);
          v5 = v46;
          goto LABEL_18;
        }
        v25 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v25;
          v20 = v19 >> 6;
          v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
          v22 = 1 << v19;
          if ((v21 & (1 << v19)) == 0)
            break;
          v26 = *(id *)(v8[6] + 8 * v19);
          v27 = static NSObject.== infix(_:_:)(v26, v16);

          if ((v27 & 1) != 0)
            goto LABEL_17;
        }
        v5 = v46;
      }
      *(_QWORD *)&v12[8 * v20] = v22 | v21;
      *(_QWORD *)(v8[6] + 8 * v19) = v16;
      v28 = v8[2];
      v15 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (v15)
        goto LABEL_44;
      v8[2] = v29;
LABEL_18:
      if (v13 == v50)
        return;
    }
  }
  v30 = 0;
  v47 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
  while (v30 != v47)
  {
    v31 = v8[5];
    v32 = *(id *)(v5 + 32 + 8 * v30);
    v33 = NSObject._rawHashValue(seed:)(v31);
    v34 = -1 << *((_BYTE *)v8 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
    v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_4E684(0, a3, a4);
      v39 = *(id *)(v8[6] + 8 * v35);
      v40 = static NSObject.== infix(_:_:)(v39, v32);

      if ((v40 & 1) != 0)
        goto LABEL_30;
      v41 = ~v34;
      v35 = (v35 + 1) & v41;
      v36 = v35 >> 6;
      v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
      v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          v42 = *(id *)(v8[6] + 8 * v35);
          v43 = static NSObject.== infix(_:_:)(v42, v32);

          if ((v43 & 1) != 0)
            break;
          v35 = (v35 + 1) & v41;
          v36 = v35 >> 6;
          v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
          v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v9 = v50;
        goto LABEL_31;
      }
LABEL_38:
      v9 = v50;
    }
    *(_QWORD *)&v12[8 * v36] = v38 | v37;
    *(_QWORD *)(v8[6] + 8 * v35) = v32;
    v44 = v8[2];
    v15 = __OFADD__(v44, 1);
    v45 = v44 + 1;
    if (v15)
      goto LABEL_45;
    v8[2] = v45;
LABEL_31:
    if (++v30 == v9)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

Swift::Int sub_4BDD8(uint64_t a1)
{
  return sub_4D708(a1, &qword_14AC938);
}

Swift::Int sub_4BDE4(uint64_t a1)
{
  return sub_4D708(a1, &qword_14AC940);
}

void *sub_4BDF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14AC948);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_4DD24(&qword_14AC950, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_4DD24(&qword_14AC958, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

Swift::Int sub_4C058(uint64_t a1)
{
  return sub_4B91C(a1, &qword_14ACB90);
}

Swift::Int sub_4C064(uint64_t a1)
{
  return sub_4B91C(a1, &qword_14ACB58);
}

Swift::Int sub_4C070(uint64_t a1)
{
  return sub_4B91C(a1, &qword_14ACC40);
}

Swift::Int sub_4C07C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (Swift::Int)&_swiftEmptySetSingleton;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACAC0);
  v3 = static _SetStorage.allocate(capacity:)(v1);
  v4 = 0;
  v5 = v3 + 56;
  v28 = v1;
  v29 = a1 + 32;
  v30 = v3;
  while (2)
  {
    v6 = (uint64_t *)(v29 + 32 * v4);
    v7 = v6[1];
    v31 = *v6;
    v8 = v6[2];
    v9 = v6[3];
    Hasher.init(_seed:)(v33);
    v32 = v8;
    if (v9)
    {
      if (v9 == 1)
      {
        Hasher._combine(_:)(2uLL);
      }
      else
      {
        Hasher._combine(_:)(0);
        if (v7)
        {
          Hasher._combine(_:)(1u);
          sub_4E630(v31, v7, v8, v9);
          swift_bridgeObjectRetain();
          String.hash(into:)(v33, v31, v7);
          swift_bridgeObjectRelease(v7);
        }
        else
        {
          Hasher._combine(_:)(0);
          swift_bridgeObjectRetain();
        }
        String.hash(into:)(v33, v8, v9);
      }
    }
    else
    {
      Hasher._combine(_:)(1uLL);
    }
    result = Hasher._finalize()();
    v11 = ~(-1 << *(_BYTE *)(v3 + 32));
    v12 = result & v11;
    v13 = (result & (unint64_t)v11) >> 6;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    v15 = 1 << (result & v11);
    v16 = *(_QWORD *)(v3 + 48);
    if ((v15 & v14) == 0)
    {
      v17 = v30;
      goto LABEL_38;
    }
    do
    {
      v18 = (_QWORD *)(v16 + 32 * v12);
      v19 = v18[3];
      if (v19)
      {
        if (v19 == 1)
        {
          if (v9 == 1)
            goto LABEL_4;
        }
        else
        {
          if (v9 < 2)
            goto LABEL_16;
          v20 = v18[1];
          v21 = v18[2];
          if (v20)
          {
            if (!v7)
              goto LABEL_16;
            if (*v18 != v31 || v20 != v7)
            {
              result = _stringCompareWithSmolCheck(_:_:expecting:)(*v18, v20, v31, v7, 0);
              if ((result & 1) == 0)
                goto LABEL_16;
            }
          }
          else if (v7)
          {
            goto LABEL_16;
          }
          v23 = v21 == v32 && v19 == v9;
          if (v23 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v19, v32, v9, 0), (result & 1) != 0))
          {
            sub_4E5FC(v31, v7, v32, v9);
            goto LABEL_4;
          }
        }
      }
      else if (!v9)
      {
        goto LABEL_4;
      }
LABEL_16:
      v12 = (v12 + 1) & v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
      v15 = 1 << v12;
    }
    while ((v14 & (1 << v12)) != 0);
    v17 = v30;
    v16 = *(_QWORD *)(v30 + 48);
LABEL_38:
    *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
    v24 = (uint64_t *)(v16 + 32 * v12);
    *v24 = v31;
    v24[1] = v7;
    v24[2] = v32;
    v24[3] = v9;
    v25 = *(_QWORD *)(v17 + 16);
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v17 + 16) = v27;
LABEL_4:
      ++v4;
      v3 = v30;
      if (v4 != v28)
        continue;
      return v3;
    }
    return result;
  }
}

void sub_4C318(uint64_t a1)
{
  sub_4BA74(a1, (uint64_t *)&unk_14ACC30, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
}

void sub_4C334(uint64_t a1)
{
  sub_4BA74(a1, &qword_14ACB48, (unint64_t *)&qword_14ACB50, UIView_ptr);
}

Swift::Int sub_4C350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AC960);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28);
      swift_bridgeObjectRetain();
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_4C4F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACC58);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v24 = v1;
    v25 = a1 + 32;
    while (1)
    {
      v6 = *(unsigned __int8 *)(v25 + v4);
      Hasher.init(_seed:)(v26);
      if (v6)
        v7 = 0x6F4E6E657473696CLL;
      else
        v7 = 0x487972617262696CLL;
      if (v6)
        v8 = 0xEF72656461654877;
      else
        v8 = 0xED00007265646165;
      String.hash(into:)(v26, v7, v8);
      swift_bridgeObjectRelease(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v23 = v6;
        v15 = ~v10;
        do
        {
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11))
            v16 = 0x6F4E6E657473696CLL;
          else
            v16 = 0x487972617262696CLL;
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11))
            v17 = 0xEF72656461654877;
          else
            v17 = 0xED00007265646165;
          if (v16 == v7 && v17 == v8)
          {
            swift_bridgeObjectRelease_n(v8, 2);
            goto LABEL_4;
          }
          v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v7, v8, 0);
          swift_bridgeObjectRelease(v17);
          result = swift_bridgeObjectRelease(v8);
          if ((v19 & 1) != 0)
            goto LABEL_4;
          v11 = (v11 + 1) & v15;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
        }
        while ((v13 & (1 << v11)) != 0);
        LOBYTE(v6) = v23;
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v11) = v6;
      v20 = *(_QWORD *)(v3 + 16);
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
        break;
      *(_QWORD *)(v3 + 16) = v22;
LABEL_4:
      if (++v4 == v24)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

double sub_4C718(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_4C730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AC488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_4C778(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  _QWORD v41[9];

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_14ACC28);
      v4 = (_BYTE *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v40 = v4 + 56;
  v37 = v1;
  v38 = v1 & 0xC000000000000001;
  v34 = v1 + 32;
  v35 = v1 & 0xFFFFFFFFFFFFFF8;
  v36 = v5;
  while (v38)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v1);
    v10 = __OFADD__(v8++, 1);
    if (v10)
      goto LABEL_38;
LABEL_24:
    Hasher.init(_seed:)(v41);
    v11 = objc_msgSend(*(id *)(v9 + 16), "_identifier");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    String.hash(into:)(v41, v12, v14);
    swift_bridgeObjectRelease(v14);
    v15 = Hasher._finalize()();
    v16 = ~(-1 << v4[32]);
    v17 = v15 & v16;
    v18 = (v15 & (unint64_t)v16) >> 6;
    v19 = *(_QWORD *)&v40[8 * v18];
    v20 = 1 << (v15 & v16);
    if ((v20 & v19) != 0)
    {
      v39 = v8;
      while (1)
      {
        v21 = *(_QWORD *)(*((_QWORD *)v4 + 6) + 8 * v17);
        v22 = objc_msgSend(*(id *)(v21 + 16), "_identifier", swift_retain(v21).n128_f64[0]);
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

        v26 = objc_msgSend(*(id *)(v9 + 16), "_identifier");
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        if (v23 == v27 && v25 == v29)
        {
          swift_release(v9);
          swift_release(v21);
          swift_bridgeObjectRelease_n(v25, 2);
          goto LABEL_17;
        }
        v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v29, 0);
        swift_release(v21);
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v29);
        if ((v31 & 1) != 0)
          break;
        v17 = (v17 + 1) & v16;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v40[8 * (v17 >> 6)];
        v20 = 1 << v17;
        if ((v19 & (1 << v17)) == 0)
        {
          v5 = v36;
          v1 = v37;
          v8 = v39;
          goto LABEL_33;
        }
      }
      swift_release(v9);
LABEL_17:
      v5 = v36;
      v1 = v37;
      v8 = v39;
      if (v39 == v36)
        return;
    }
    else
    {
LABEL_33:
      *(_QWORD *)&v40[8 * v18] = v20 | v19;
      *(_QWORD *)(*((_QWORD *)v4 + 6) + 8 * v17) = v9;
      v32 = *((_QWORD *)v4 + 2);
      v10 = __OFADD__(v32, 1);
      v33 = v32 + 1;
      if (v10)
        goto LABEL_39;
      *((_QWORD *)v4 + 2) = v33;
      if (v8 == v5)
        return;
    }
  }
  if (v8 >= *(_QWORD *)(v35 + 16))
    goto LABEL_40;
  v9 = *(_QWORD *)(v34 + 8 * v8);
  swift_retain(v9);
  v10 = __OFADD__(v8++, 1);
  if (!v10)
    goto LABEL_24;
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void *sub_4CAB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB78);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_4DD24(&qword_14ACB80, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle.Unit);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_4DD24(&qword_14ACB88, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit, (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle.Unit);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC6B8, (uint64_t)&unk_1340BB0);
}

void sub_4CD34(uint64_t a1)
{
  sub_4BA74(a1, &qword_14ACBB8, &qword_14ACBC0, IAMMessageGroup_ptr);
}

void sub_4CD50(uint64_t a1)
{
  sub_4BA74(a1, (uint64_t *)&unk_14ACA80, (unint64_t *)&unk_14BA500, MPModelKind_ptr);
}

void *sub_4CD6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACA78);
    static _SetStorage.allocate(capacity:)(v1);
    v3 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(v5);
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_4D5BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB98);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      Hasher.init(_seed:)(v19);
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_4D6FC(uint64_t a1)
{
  return sub_4D708(a1, (uint64_t *)&unk_14ACEF0);
}

Swift::Int sub_4D708(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(unsigned __int8 *)(v7 + v5);
      Hasher.init(_seed:)(v20);
      Hasher._combine(_:)(v8);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if ((_DWORD)v8 == *(unsigned __int8 *)(v15 + v11))
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if ((_DWORD)v8 == *(unsigned __int8 *)(v15 + v11))
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC568, (uint64_t)&unk_1340340);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC570, (uint64_t)&unk_13403B8);
}

void type metadata accessor for CCSModuleEnabledState(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC578, (uint64_t)&unk_13403E8);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC580, (uint64_t)&unk_1340408);
}

void type metadata accessor for UICollectionViewTableCellAccessoryType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC588, (uint64_t)&unk_1340430);
}

void type metadata accessor for AuthChallengeDisposition(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC590, (uint64_t)&unk_1340450);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC598, (uint64_t)&unk_1340470);
}

void type metadata accessor for MPModelAlbumVariants(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5A0, (uint64_t)&unk_1340490);
}

void type metadata accessor for MPRepeatType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5A8, (uint64_t)&unk_13404B8);
}

void type metadata accessor for MPShuffleType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5B0, (uint64_t)&unk_13404D8);
}

void type metadata accessor for MPStoreSocialTransientFollowState(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5B8, (uint64_t)&unk_13404F8);
}

void type metadata accessor for NSStringDrawingOptions(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5C0, (uint64_t)&unk_1340518);
}

void type metadata accessor for DisplayMode(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5C8, (uint64_t)&unk_1340540);
}

void type metadata accessor for NSLineBreakMode(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5D0, (uint64_t)&unk_1340560);
}

void type metadata accessor for MusicModelFlowcaseItemThumbnailHorizontalAlignment(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5D8, (uint64_t)&unk_1340580);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5E0, (uint64_t)&unk_13405F8);
}

void type metadata accessor for WaitingReason(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5E8, (uint64_t)&unk_1340620);
}

void type metadata accessor for Status(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5F0, (uint64_t)&unk_1340648);
}

void type metadata accessor for MPArtworkRepresentationKinds(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC5F8, (uint64_t)&unk_1340668);
}

void type metadata accessor for ContentMode(uint64_t a1)
{
  sub_4F2B8(a1, (unint64_t *)&unk_14AC600, (uint64_t)&unk_1340690);
}

void type metadata accessor for ICStoreArtworkInfoCropStyle(uint64_t a1)
{
  sub_4F2B8(a1, (unint64_t *)&unk_150F6E0, (uint64_t)&unk_13406B0);
}

void type metadata accessor for UITextAutocorrectionType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC610, (uint64_t)&unk_13406D8);
}

void type metadata accessor for UITextAutocapitalizationType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC618, (uint64_t)&unk_13406F8);
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC620, (uint64_t)&unk_1340718);
}

void type metadata accessor for UIKeyboardType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC628, (uint64_t)&unk_1340738);
}

void type metadata accessor for MPCPlayerState(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC630, (uint64_t)&unk_1340758);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC638, (uint64_t)&unk_1340778);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC640, (uint64_t)&unk_13407A0);
}

{
  sub_4F2B8(a1, &qword_1504518, (uint64_t)&unk_13BEF40);
}

void type metadata accessor for MPLibraryAddStatus(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC648, (uint64_t)&unk_13407C8);
}

void type metadata accessor for MPLibraryActiveKeepLocalStatusType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC650, (uint64_t)&unk_13407E8);
}

void type metadata accessor for Column(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC658, (uint64_t)&unk_1340808);
}

void type metadata accessor for MPModelStoreBrowseContentItemType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC660, (uint64_t)&unk_1340828);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC668, (uint64_t)&unk_13408A0);
}

void type metadata accessor for MPModelLibraryRemovalSupportedOptions(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC670, (uint64_t)&unk_13408C8);
}

void type metadata accessor for MPMediaDownloadPauseReason(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC678, (uint64_t)&unk_13408F0);
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_4DB38(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_4DB8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

void type metadata accessor for MPCPlayerItemDurationSnapshot(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC680, (uint64_t)&unk_1340970);
}

void type metadata accessor for MPMediaLibraryFilteringOptions(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC688, (uint64_t)&unk_13409B8);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC690, (uint64_t)&unk_1340A38);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC698, (uint64_t)&unk_1340A60);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC6A0, (uint64_t)&unk_1340A88);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC6A8, (uint64_t)&unk_1340B08);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC6B0, (uint64_t)&unk_1340B88);
}

uint64_t initializeBufferWithCopyOfBuffer for Gradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14AC6C0, (uint64_t)&unk_1340C30);
}

uint64_t sub_4DCF8()
{
  return sub_4DD24(&qword_14AC788, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_105B974);
}

uint64_t sub_4DD24(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4DD64()
{
  return sub_4DD24(&qword_14AC790, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)"9Z.");
}

uint64_t sub_4DD90()
{
  return sub_4DD24(&qword_14AC798, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_105BA94);
}

uint64_t sub_4DDBC()
{
  return sub_4DD24(&qword_14AC7A0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_105BA68);
}

uint64_t sub_4DDE8()
{
  return sub_4DD24(&qword_14AC7A8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_105BB04);
}

uint64_t sub_4DE14()
{
  return sub_4DD24(&qword_14AC7B0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_105BBEC);
}

uint64_t sub_4DE40()
{
  return sub_4DD24(&qword_14AC7B8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_105BBC0);
}

uint64_t sub_4DE6C()
{
  return sub_4DD24(&qword_14AC7C0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_105BD04);
}

uint64_t sub_4DE98()
{
  return sub_4DD24(&qword_14AC7C8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_105BCD4);
}

uint64_t sub_4DEC4()
{
  return sub_4DD24(&qword_14AC7D0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_105BD2C);
}

uint64_t sub_4DEF0()
{
  return sub_4DD24(&qword_14AC7D8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_105BD64);
}

uint64_t sub_4DF1C()
{
  return sub_4DD24(&qword_14AC7E0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaDownloadPauseReason, (uint64_t)&unk_105BE94);
}

uint64_t sub_4DF48()
{
  return sub_4DD24(&qword_14AC7E8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaDownloadPauseReason, (uint64_t)&unk_105BE64);
}

uint64_t sub_4DF74()
{
  return sub_4DD24(&qword_14AC7F0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaDownloadPauseReason, (uint64_t)&unk_105BEBC);
}

uint64_t sub_4DFA0()
{
  return sub_4DD24(&qword_14AC7F8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaDownloadPauseReason, (uint64_t)&unk_105BEF4);
}

uint64_t sub_4DFCC()
{
  return sub_4DD24(&qword_14AC800, (uint64_t (*)(uint64_t))type metadata accessor for MPModelLibraryRemovalSupportedOptions, (uint64_t)&unk_105C024);
}

uint64_t sub_4DFF8()
{
  return sub_4DD24(&qword_14AC808, (uint64_t (*)(uint64_t))type metadata accessor for MPModelLibraryRemovalSupportedOptions, (uint64_t)&unk_105BFF4);
}

uint64_t sub_4E024()
{
  return sub_4DD24(&qword_14AC810, (uint64_t (*)(uint64_t))type metadata accessor for MPModelLibraryRemovalSupportedOptions, (uint64_t)&unk_105C04C);
}

uint64_t sub_4E050()
{
  return sub_4DD24(&qword_14AC818, (uint64_t (*)(uint64_t))type metadata accessor for MPModelLibraryRemovalSupportedOptions, (uint64_t)&unk_105C084);
}

uint64_t sub_4E07C()
{
  return sub_4DD24(&qword_14AC820, (uint64_t (*)(uint64_t))type metadata accessor for Column, (uint64_t)&unk_105D46C);
}

uint64_t sub_4E0A8()
{
  return sub_4DD24(&qword_14AC828, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_105D440);
}

uint64_t sub_4E0D4()
{
  return sub_4DD24(&qword_14AC830, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_105C2D4);
}

uint64_t sub_4E100()
{
  return sub_4DD24(&qword_14AC838, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_105C308);
}

uint64_t sub_4E12C()
{
  return sub_4DD24(&qword_14AC840, (uint64_t (*)(uint64_t))type metadata accessor for State, (uint64_t)&unk_105C344);
}

uint64_t sub_4E158()
{
  return sub_4DD24(&qword_14AC848, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_105C474);
}

uint64_t sub_4E184()
{
  return sub_4DD24(&qword_14AC850, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_105C44C);
}

uint64_t sub_4E1B0()
{
  return sub_4DD24(&qword_14AC858, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_105C4DC);
}

uint64_t sub_4E1DC()
{
  return sub_4DD24(&qword_14AC860, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_105C76C);
}

uint64_t sub_4E208()
{
  return sub_4DD24(&qword_14AC868, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_105C744);
}

uint64_t sub_4E234()
{
  return sub_4DD24(&qword_14AC870, (uint64_t (*)(uint64_t))type metadata accessor for ICStoreArtworkInfoCropStyle, (uint64_t)&unk_105C7D4);
}

uint64_t sub_4E260()
{
  return sub_4DD24(&qword_14AC878, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_105C91C);
}

uint64_t sub_4E28C()
{
  return sub_4DD24(&qword_14AC880, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_105C8EC);
}

uint64_t sub_4E2B8()
{
  return sub_4DD24(&qword_14AC888, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_105C944);
}

uint64_t sub_4E2E4()
{
  return sub_4DD24(&qword_14AC890, (uint64_t (*)(uint64_t))type metadata accessor for MPArtworkRepresentationKinds, (uint64_t)&unk_105C97C);
}

uint64_t sub_4E310()
{
  return sub_4DD24(&qword_14AC898, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_105CADC);
}

uint64_t sub_4E33C()
{
  return sub_4DD24(&qword_14AC8A0, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_105CAB4);
}

uint64_t sub_4E368()
{
  return sub_4DD24(&qword_14AC8A8, (uint64_t (*)(uint64_t))type metadata accessor for WaitingReason, (uint64_t)&unk_105CB44);
}

uint64_t sub_4E394()
{
  return sub_4DD24(&qword_14AC8B0, (uint64_t (*)(uint64_t))type metadata accessor for NSLineBreakMode, (uint64_t)&unk_105CC94);
}

uint64_t sub_4E3C0()
{
  return sub_4DD24(&qword_14AC8B8, (uint64_t (*)(uint64_t))type metadata accessor for NSStringDrawingOptions, (uint64_t)&unk_105CD8C);
}

uint64_t sub_4E3EC()
{
  return sub_4DD24(&qword_14AC8C0, (uint64_t (*)(uint64_t))type metadata accessor for NSStringDrawingOptions, (uint64_t)&unk_105CD5C);
}

uint64_t sub_4E418()
{
  return sub_4DD24(&qword_14AC8C8, (uint64_t (*)(uint64_t))type metadata accessor for NSStringDrawingOptions, (uint64_t)&unk_105CDB4);
}

uint64_t sub_4E444()
{
  return sub_4DD24(&qword_14AC8D0, (uint64_t (*)(uint64_t))type metadata accessor for NSStringDrawingOptions, (uint64_t)&unk_105CDEC);
}

uint64_t sub_4E470()
{
  return sub_4DD24(&qword_14AC8D8, (uint64_t (*)(uint64_t))type metadata accessor for MPModelAlbumVariants, (uint64_t)&unk_105CFF8);
}

uint64_t sub_4E49C()
{
  return sub_4DD24(&qword_14AC8E0, (uint64_t (*)(uint64_t))type metadata accessor for MPModelAlbumVariants, (uint64_t)&unk_105CFC8);
}

uint64_t sub_4E4C8()
{
  return sub_4DD24(&qword_14AC8E8, (uint64_t (*)(uint64_t))type metadata accessor for MPModelAlbumVariants, (uint64_t)&unk_105D020);
}

uint64_t sub_4E4F4()
{
  return sub_4DD24(&qword_14AC8F0, (uint64_t (*)(uint64_t))type metadata accessor for MPModelAlbumVariants, (uint64_t)&unk_105D058);
}

uint64_t sub_4E520()
{
  return sub_4DD24(&qword_14AC8F8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_105D24C);
}

uint64_t sub_4E54C()
{
  return sub_4DD24(&qword_14AC900, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_105D220);
}

uint64_t sub_4E578()
{
  return sub_4DD24(&qword_14AC908, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_105D2BC);
}

uint64_t sub_4E5A4()
{
  return sub_4DD24(&qword_14AC910, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_105BC5C);
}

uint64_t sub_4E5D0()
{
  return sub_4DD24(&qword_14AC918, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_105B9E4);
}

uint64_t sub_4E5FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >= 2)
  {
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t sub_4E630(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >= 2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

void sub_4E664(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease(a2);
}

id sub_4E674(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain(a2);
}

uint64_t sub_4E684(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for MPModelPlaylistEntryType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC60, (uint64_t)&unk_1340C60);
}

void type metadata accessor for AVError(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC68, (uint64_t)&unk_1340C80);
}

void type metadata accessor for MPCScriptedLooperStatus(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC70, (uint64_t)&unk_1340CA8);
}

void type metadata accessor for UIActivityViewControllerSharingStyle(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC78, (uint64_t)&unk_1340CC8);
}

void type metadata accessor for ICEnvironmentNetworkType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC80, (uint64_t)&unk_1340CE8);
}

void type metadata accessor for IAMPresentationPolicyGroup(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC88, (uint64_t)&unk_1340D08);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC90, (uint64_t)&unk_1340D28);
}

void type metadata accessor for WKNavigationActionPolicy(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACC98, (uint64_t)&unk_1340D50);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCA0, (uint64_t)&unk_1340D70);
}

void type metadata accessor for MPRemoteCommandDisabledReason(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCA8, (uint64_t)&unk_1340DA0);
}

void type metadata accessor for MPCReportingLyricsViewEventDisplayType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCB0, (uint64_t)&unk_1340DC0);
}

void type metadata accessor for ActivationState(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCB8, (uint64_t)&unk_1340DE0);
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCC0, (uint64_t)&unk_1340E00);
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCC8, (uint64_t)&unk_1340E28);
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCD0, (uint64_t)&unk_1340E50);
}

void type metadata accessor for MPCPlayerAudioFormatTier(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCD8, (uint64_t)&unk_1340E78);
}

void type metadata accessor for MPNowPlayingAudioFormatBadging(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCE0, (uint64_t)&unk_1340E98);
}

void type metadata accessor for MRGroupSessionRouteType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCE8, (uint64_t)&unk_1340EB8);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for JSContainerDetail.LyricsSnippetData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSContainerDetail.LyricsSnippetData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCF0, (uint64_t)&unk_1340F30);
}

void type metadata accessor for MPModelObjectKeepLocalManagedStatus(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACCF8, (uint64_t)&unk_1340F60);
}

void type metadata accessor for MPModelGenericObjectType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD00, (uint64_t)&unk_1340F80);
}

void type metadata accessor for Option(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD08, (uint64_t)&unk_1340FA0);
}

void type metadata accessor for AMSParserURLType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD10, (uint64_t)&unk_1340FC8);
}

void type metadata accessor for MPCloudControllerAddToPlaylistBehavior(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD18, (uint64_t)&unk_1340FE8);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD20, (uint64_t)&unk_1341008);
}

void type metadata accessor for MPStoreSocialTransientFollowPendingRequestState(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD28, (uint64_t)&unk_1341038);
}

void type metadata accessor for MPCPlaybackIntentShuffleMode(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD30, (uint64_t)&unk_1341058);
}

void type metadata accessor for InfoKey(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD38, (uint64_t)&unk_1341078);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD40, (uint64_t)&unk_13410A0);
}

void type metadata accessor for AKAppleIDAuthenticationType(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD48, (uint64_t)&unk_13410C8);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD50, (uint64_t)&unk_13410E8);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfCollectionViewLayout.ScrollingHeaderMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShelfCollectionViewLayout.ScrollingHeaderMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD58, (uint64_t)&unk_1341170);
}

void type metadata accessor for ICMusicSubscriptionStatusCapabilities(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD60, (uint64_t)&unk_13411A8);
}

void type metadata accessor for UIAxis(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD68, (uint64_t)&unk_13411D0);
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD70, (uint64_t)&unk_13411F8);
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD78, (uint64_t)&unk_1341228);
}

void type metadata accessor for TimeControlStatus(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD80, (uint64_t)&unk_1341248);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD88, (uint64_t)&unk_1341268);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD90, (uint64_t)&unk_1341288);
}

uint64_t _s16StoreFlowContextVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s16StoreFlowContextVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MPLibraryActiveKeepLocalStatus(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACD98, (uint64_t)&unk_1341300);
}

uint64_t sub_4EAF0()
{
  return sub_4DD24(&qword_14ACDA0, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_105DC74);
}

uint64_t sub_4EB1C()
{
  return sub_4DD24(&qword_14ACDA8, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_105DC40);
}

uint64_t sub_4EB48()
{
  return sub_4DD24(&qword_14ACDB0, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_105DCA0);
}

uint64_t sub_4EB74()
{
  return sub_4DD24(&qword_14ACDB8, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_105DCDC);
}

uint64_t sub_4EBA0()
{
  return sub_4DD24(&qword_14ACDC0, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_105EF74);
}

uint64_t sub_4EBCC()
{
  return sub_4DD24(&qword_14ACDC8, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_105DDE4);
}

uint64_t sub_4EBF8()
{
  return sub_4DD24(&qword_14ACDD0, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_105DE14);
}

uint64_t sub_4EC24()
{
  return sub_4DD24(&qword_14ACDD8, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_105DE4C);
}

uint64_t sub_4EC50()
{
  return sub_4DD24(&qword_14ACDE0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_105DF78);
}

uint64_t sub_4EC7C()
{
  return sub_4DD24(&qword_14ACDE8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_105DF4C);
}

uint64_t sub_4ECA8()
{
  return sub_4DD24(&qword_14ACDF0, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_105E08C);
}

uint64_t sub_4ECD4()
{
  return sub_4DD24(&qword_14ACDF8, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_105E060);
}

uint64_t sub_4ED00()
{
  return sub_4DD24(&qword_14ACE00, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_105E280);
}

uint64_t sub_4ED2C()
{
  return sub_4DD24(&qword_14ACE08, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_105E254);
}

uint64_t sub_4ED58()
{
  return sub_4DD24(&qword_14ACE10, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_105E4CC);
}

uint64_t sub_4ED84()
{
  return sub_4DD24(&qword_14ACE18, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_105E4A0);
}

uint64_t sub_4EDB0()
{
  return sub_4DD24(&qword_14ACE20, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_105E5E0);
}

uint64_t sub_4EDDC()
{
  return sub_4DD24(&qword_14ACE28, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_105E5B4);
}

uint64_t sub_4EE08()
{
  return sub_4DD24(&qword_14ACE30, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_105E6F4);
}

uint64_t sub_4EE34()
{
  return sub_4DD24(&qword_14ACE38, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_105E6C8);
}

uint64_t sub_4EE60()
{
  return sub_4DD24((unint64_t *)&qword_14ACE40, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_105ED98);
}

uint64_t sub_4EE8C()
{
  return sub_4DD24(&qword_14ACE48, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_105E8E0);
}

uint64_t sub_4EEB8()
{
  return sub_4DD24(&qword_14ACE50, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_105E8AC);
}

uint64_t sub_4EEE4()
{
  return sub_4DD24(&qword_14ACE58, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_105E90C);
}

uint64_t sub_4EF10()
{
  return sub_4DD24(&qword_14ACE60, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_105E948);
}

uint64_t sub_4EF3C()
{
  return sub_4DD24(&qword_14ACE68, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EB48);
}

uint64_t sub_4EF68()
{
  return sub_4DD24(&qword_14ACE70, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EB70);
}

uint64_t sub_4EF94()
{
  return sub_4DD24(&qword_14ACE78, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC20);
}

uint64_t sub_4EFC0()
{
  return sub_4DD24(&qword_14ACE80, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EBF0);
}

uint64_t sub_4EFEC()
{
  return sub_4DD24(&qword_14ACE88, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EBB0);
}

uint64_t sub_4F018()
{
  return sub_4DD24(&qword_14ACE90, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_105ED38);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACF58, (uint64_t)&unk_1341328);
}

uint64_t sub_4F058()
{
  return sub_4DD24(&qword_14ACE98, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_105ED00);
}

unint64_t sub_4F088()
{
  unint64_t result;

  result = qword_14ACEA0;
  if (!qword_14ACEA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_14ACEA0);
  }
  return result;
}

uint64_t sub_4F0CC()
{
  return sub_4DD24(&qword_14ACEA8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_105ED70);
}

uint64_t sub_4F0F8()
{
  return sub_4DD24(&qword_14ACEB0, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_105EC98);
}

uint64_t sub_4F124()
{
  return sub_4DD24(&qword_14ACEB8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_105E854);
}

uint64_t sub_4F150()
{
  return sub_4DD24(&qword_14ACEC0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_105E764);
}

uint64_t sub_4F17C()
{
  return sub_4DD24(&qword_14ACEC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenURLOptionsKey, (uint64_t)&unk_105E650);
}

uint64_t sub_4F1A8()
{
  return sub_4DD24(&qword_14ACED0, (uint64_t (*)(uint64_t))type metadata accessor for OptionsKey, (uint64_t)&unk_105E53C);
}

uint64_t sub_4F1D4()
{
  return sub_4DD24(&qword_14ACED8, (uint64_t (*)(uint64_t))type metadata accessor for Option, (uint64_t)&unk_105E2F0);
}

uint64_t sub_4F200()
{
  return sub_4DD24(&qword_14ACEE0, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_105E0FC);
}

uint64_t sub_4F22C()
{
  return sub_4DD24(&qword_14ACEE8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_105DFE8);
}

uint64_t sub_4F258(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACF60, (uint64_t)&unk_1341348);
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
  sub_4F2B8(a1, &qword_14ACF68, (uint64_t)&unk_1341370);
}

void sub_4F2B8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_4F388()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;

  v1 = v0;
  v2 = type metadata accessor for URLQueryItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v48 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(v1, "mediaContainer");
  if (!v15)
    return 0;
  v16 = v15;
  v53 = v13;
  v17 = objc_msgSend(v15, "identifier");
  if (!v17)
  {

    return 0;
  }
  v18 = v17;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;

  v22 = v21;
  URLComponents.init(string:)(v19, v21);
  v23 = v53;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v11, 1, v12) == 1)
  {
    sub_50CF8((uint64_t)v11);
    v24 = v22;
LABEL_22:
    swift_bridgeObjectRelease(v24);
    return 0;
  }
  v25 = v54;
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v54, v11, v12);
  v27 = URLComponents.queryItems.getter(v26);
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v12);
    v24 = v22;
    goto LABEL_22;
  }
  v28 = v27;
  v51 = v22;
  v29 = *(_QWORD *)(v27 + 16);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v12);
    swift_bridgeObjectRelease(v51);
    v24 = v28;
    goto LABEL_22;
  }
  v49 = v27;
  v50 = v12;
  v30 = v27 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v55 = *(_QWORD *)(v3 + 72);
  v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  v52 = 0x80000000010C3B70;
  while (1)
  {
    v33 = v31(v8, v30, v2);
    v34 = URLQueryItem.name.getter(v33);
    v36 = v35;
    if (v34 == 0xD000000000000014 && v35 == v52)
    {
      swift_bridgeObjectRelease(0x80000000010C3B70);
      v37 = v31(v6, (unint64_t)v8, v2);
    }
    else
    {
      v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, 0xD000000000000014, 0x80000000010C3B70, 0);
      swift_bridgeObjectRelease(v36);
      v37 = v31(v6, (unint64_t)v8, v2);
      if ((v38 & 1) == 0)
        goto LABEL_9;
    }
    v39 = URLQueryItem.value.getter(v37);
    if (!v40)
    {
LABEL_9:
      v32 = *(void (**)(char *, uint64_t))(v3 + 8);
      v32(v6, v2);
      v32(v8, v2);
      goto LABEL_10;
    }
    v41 = v40;
    if (v39 == 1702195828 && v40 == 0xE400000000000000)
      break;
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, 1702195828, 0xE400000000000000, 0);
    swift_bridgeObjectRelease(v41);
    v43 = *(void (**)(char *, uint64_t))(v3 + 8);
    v43(v6, v2);
    v43(v8, v2);
    if ((v42 & 1) != 0)
      goto LABEL_27;
LABEL_10:
    v30 += v55;
    if (!--v29)
    {
      v44 = 0;
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease(0xE400000000000000);
  v46 = *(void (**)(char *, uint64_t))(v3 + 8);
  v46(v6, v2);
  v46(v8, v2);
LABEL_27:
  v44 = 1;
LABEL_28:
  v47 = v49;
  swift_bridgeObjectRelease(v49);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v50);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v47);
  return v44;
}

void sub_4F774(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  void *v39;
  id v40;
  Class isa;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  void *v47;
  _OWORD v48[2];
  __int128 v49;
  _QWORD *v50;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    v16 = Logger.siriIntents.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
    v17 = a4;
    swift_errorRetain(a3);
    v18 = v17;
    v19 = swift_errorRetain(a3);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v44 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v49 = v44;
      *(_DWORD *)v22 = 136446466;
      v42 = v22 + 4;
      v23 = v18;
      v24 = objc_msgSend(v23, "description");
      v45 = a6;
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v43 = v12;
      v27 = v26;
      v46 = a5;
      v29 = v28;

      *(_QWORD *)&v48[0] = sub_23EAC8(v27, v29, (uint64_t *)&v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, (char *)v48 + 8);

      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v22 + 12) = 2082;
      *(_QWORD *)&v48[0] = a3;
      swift_errorRetain(a3);
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA560);
      v31 = String.init<A>(describing:)(v48, v30);
      v33 = v32;
      *(_QWORD *)&v48[0] = sub_23EAC8(v31, v32, (uint64_t *)&v49);
      a5 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, (char *)v48 + 8);
      swift_bridgeObjectRelease(v33);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl(&dword_0, v20, v21, "Failed to get playback queue for intent=%{public}s error=%{public}s", (uint8_t *)v22, 0x16u);
      v34 = v44;
      swift_arrayDestroy(v44, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v22, -1, -1);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v43);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

      swift_errorRelease(a3);
      swift_errorRelease(a3);
    }

    v40 = objc_msgSend(objc_allocWithZone((Class)INPlayMediaIntentResponse), "initWithCode:userActivity:", 6, 0);
    a5();
    goto LABEL_8;
  }
  if (kMRMediaRemoteOptionSystemAppPlaybackQueueData)
  {
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOptionSystemAppPlaybackQueueData);
    v37 = v36;
    v50 = &type metadata for Data;
    *(_QWORD *)&v49 = a1;
    *((_QWORD *)&v49 + 1) = a2;
    sub_50CA4(&v49, v48);
    sub_50CB4(a1, a2);
    sub_50CB4(a1, a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v47 = &_swiftEmptyDictionarySingleton;
    sub_19BFF4(v48, v35, v37, isUniquelyReferenced_nonNull_native);
    v39 = v47;
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(0x8000000000000000);
    v40 = objc_msgSend(objc_allocWithZone((Class)INPlayMediaIntentResponse), "initWithCode:userActivity:", 1, 0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v39);
    objc_msgSend(v40, "setNowPlayingInfo:", isa);

    ((void (*)(id))a5)(v40);
    sub_50C4C(a1, a2);
LABEL_8:

    return;
  }
  __break(1u);
}

double sub_4FB80(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  uint64_t v5;
  void (*v6)(void *, unint64_t, void *);
  id v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  double result;

  v4 = a2;
  v6 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v5);
    v7 = v4;
    v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v9 = v8;

  }
  else
  {
    swift_retain(v5);
    v9 = 0xF000000000000000;
  }
  v10 = a3;
  v6(v4, v9, a3);

  sub_50C4C((uint64_t)v4, v9);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_4FC20(void *a1, int a2, void *a3, void *aBlock, void (*a5)(id, void *))
{
  void *v8;
  id v9;
  id v10;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  v10 = a1;
  a5(v9, v8);
  _Block_release(v8);
  _Block_release(v8);

}

id sub_4FCD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaIntentHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MediaIntentHandler()
{
  return objc_opt_self(_TtC16MusicApplication18MediaIntentHandler);
}

uint64_t sub_4FD24(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(_QWORD);
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD v59[2];
  uint8_t *v60;
  uint64_t v61;
  os_log_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_QWORD);
  uint64_t v75;
  char *v76;
  char *v77;
  _OWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v4);
  v65 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v66);
  v67 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  v69 = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v71 = (uint64_t)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v59 - v11;
  v13 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v77 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v76 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)v59 - v20;
  v22 = Logger.siriIntents.unsafeMutableAddressor();
  v23 = *(void (**)(_QWORD))(v17 + 16);
  v73 = v22;
  v74 = v23;
  v75 = v17;
  v23(v21);
  v24 = a1;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  v27 = os_log_type_enabled(v25, v26);
  v70 = v9;
  if (v27)
  {
    v62 = v25;
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v61 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v78[0] = v61;
    v72 = a2;
    v60 = v28;
    *(_DWORD *)v28 = 136446210;
    v59[1] = v28 + 4;
    v29 = v24;
    v63 = v14;
    v30 = v29;
    v31 = v13;
    v32 = objc_msgSend(v29, "description");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v64 = v12;
    v35 = v34;

    v13 = v31;
    v80 = sub_23EAC8(v33, v35, (uint64_t *)v78);
    a2 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81);

    v14 = v63;
    v36 = v35;
    v12 = v64;
    swift_bridgeObjectRelease(v36);
    v37 = v62;
    v38 = v60;
    _os_log_impl(&dword_0, v62, v26, "Will handle intent=%{public}s", v60, 0xCu);
    v39 = v61;
    swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v16);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v16);

  }
  v40 = v77;
  v41 = v24;
  MusicPlaybackIntentDescriptor.init(from:)();
  v42 = objc_msgSend(objc_allocWithZone((Class)INPlayMediaIntentResponse), "initWithCode:userActivity:", 4, 0);
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v42);

  v43 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v44 = (uint64_t)v67;
  v59[0] = v13;
  v43(v67, v40, v13);
  swift_storeEnumTagMultiPayload(v44, v66, 1);
  v79 = 0;
  memset(v78, 0, sizeof(v78));
  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v44, (uint64_t)v78, 3, 0, 0, 1, 0, 1, (uint64_t)v12, 0);
  v12[*(int *)(v68 + 36)] = 1;
  v45 = type metadata accessor for TaskPriority(0);
  v46 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v65, 1, 1, v45);
  v47 = v71;
  sub_50D38((uint64_t)v12, v71);
  type metadata accessor for MainActor(0);
  v48 = static MainActor.shared.getter();
  v49 = *(unsigned __int8 *)(v69 + 80);
  v50 = (v49 + 32) & ~v49;
  v51 = v40;
  v52 = v14;
  v53 = (v70 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_1341688, v54 + 16, v49 | 7);
  *(_QWORD *)(v55 + 16) = v48;
  *(_QWORD *)(v55 + 24) = &protocol witness table for MainActor;
  sub_50E84(v47, v55 + v50);
  *(_QWORD *)(v55 + v53) = 0;
  v56 = (_QWORD *)(v55 + v54);
  *v56 = 0;
  v56[1] = 0;
  v57 = sub_2223C8(v46, (uint64_t)&unk_14AD200, v55);
  swift_release(v57);
  sub_50FD4((uint64_t)v12);
  return (*(uint64_t (**)(char *, _QWORD))(v52 + 8))(v51, v59[0]);
}

void sub_50458(void *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD);
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint8_t *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void (**v25)(_QWORD, _QWORD);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  void *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  os_log_t v44;
  uint8_t *v45;
  uint8_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD);
  char *v55;
  uint64_t aBlock[5];
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v52 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v55 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v11 = swift_allocObject(&unk_1341610, 24, 7);
  *(_QWORD *)(v11 + 16) = a2;
  _Block_copy(a2);
  v12 = Logger.siriIntents.unsafeMutableAddressor();
  v13 = *(void (**)(_QWORD))(v7 + 16);
  v53 = v12;
  v54 = v13;
  v13(v10);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v49 = v7;
    v18 = swift_slowAlloc(12, -1);
    v51 = v11;
    v47 = v17;
    v19 = (uint8_t *)v18;
    v48 = swift_slowAlloc(32, -1);
    aBlock[0] = v48;
    v46 = v19;
    *(_DWORD *)v19 = 136446210;
    v45 = v19 + 4;
    v20 = v14;
    v50 = v4;
    v21 = v20;
    v22 = v6;
    v23 = objc_msgSend(v20, "description");
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v44 = v15;
    v25 = a2;
    v26 = v24;
    v28 = v27;

    v29 = v22;
    v30 = v26;
    a2 = v25;
    v58 = sub_23EAC8(v30, v28, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);

    v4 = v50;
    swift_bridgeObjectRelease(v28);
    v31 = v44;
    v32 = v46;
    _os_log_impl(&dword_0, v44, (os_log_type_t)v47, "Will confirm intent=%{public}s", v46, 0xCu);
    v33 = v48;
    swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    v11 = v51;
    swift_slowDealloc(v32, -1, -1);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v29);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

  }
  v34 = v14;
  v35 = v55;
  MusicPlaybackIntentDescriptor.init(from:)();
  v36 = sub_4F388();
  v37 = v52;
  if ((v36 & 1) != 0)
  {
    v38 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(v36);
    v39 = (_QWORD *)swift_allocObject(&unk_1341638, 40, 7);
    v39[2] = v34;
    v39[3] = sub_50BEC;
    v39[4] = v11;
    aBlock[4] = (uint64_t)sub_50C28;
    v57 = v39;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_4FB80;
    aBlock[3] = (uint64_t)&block_descriptor;
    v40 = _Block_copy(aBlock);
    v41 = v57;
    v42 = v34;
    swift_retain(v11);
    objc_msgSend(v38, "getRemotePlaybackQueueDataWithCompletion:", v40, swift_release(v41).n128_f64[0]);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v4);
    _Block_release(v40);
  }
  else
  {
    v38 = objc_msgSend(objc_allocWithZone((Class)INPlayMediaIntentResponse), "initWithCode:userActivity:", 1, 0);
    ((void (**)(_QWORD, id))a2)[2](a2, v38);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v4);
  }
  swift_release(v11);

}

uint64_t sub_50BC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_50BEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_50BFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_50C28(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_4F774(a1, a2, a3, *(void **)(v3 + 16), *(void (**)(void))(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_50C4C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_50C60(result, a2);
  return result;
}

uint64_t sub_50C60(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_OWORD *sub_50CA4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_50CB4(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_50CF8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_50D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_50D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {

  }
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v10[3])
    __swift_destroy_boxed_opaque_existential_1(v10);

  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_50E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_50EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + v6);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_14E181C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_50F8C;
  return sub_806DFC(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_50F8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_50FD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_51010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  void *v35;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_4E684(0, &qword_14AD340, NSUserActivity_ptr);
    v5 = sub_55D8C(&qword_14AD348, &qword_14AD340, NSUserActivity_ptr);
    result = Set.Iterator.init(_cocoa:)(v34, v3, v4, v5);
    v1 = v34[0];
    v32 = v34[1];
    v7 = v34[2];
    v8 = v34[3];
    v9 = v34[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    result = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v30 = v7;
  v31 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v14 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v17 = __CocoaSet.Iterator.next()(result);
    if (!v17)
      goto LABEL_39;
    v18 = v17;
    v33 = v17;
    v19 = sub_4E684(0, &qword_14AD340, NSUserActivity_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v35, &v33, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v35;
    *(_QWORD *)&v21 = swift_unknownObjectRelease(v18).n128_u64[0];
    if (!v20)
      goto LABEL_39;
LABEL_35:
    v25 = objc_msgSend(v20, "activityType", v21, v30);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;
    if (v26 == 0xD00000000000001CLL && v27 == 0x80000000010C3E20)
    {

      swift_bridgeObjectRelease(0x80000000010C3E20);
LABEL_38:
      v29 = 1;
      goto LABEL_40;
    }
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, 0xD00000000000001CLL, 0x80000000010C3E20, 0);

    result = (_QWORD *)swift_bridgeObjectRelease(v28);
    if ((v13 & 1) != 0)
      goto LABEL_38;
  }
  if (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v8 << 6);
LABEL_34:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_39;
    goto LABEL_35;
  }
  v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 >= v31)
      goto LABEL_39;
    v23 = *(_QWORD *)(v32 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v14 + 2;
      if (v14 + 2 >= v31)
        goto LABEL_39;
      v23 = *(_QWORD *)(v32 + 8 * v8);
      if (!v23)
      {
        v8 = v14 + 3;
        if (v14 + 3 >= v31)
          goto LABEL_39;
        v23 = *(_QWORD *)(v32 + 8 * v8);
        if (!v23)
        {
          v8 = v14 + 4;
          if (v14 + 4 >= v31)
            goto LABEL_39;
          v23 = *(_QWORD *)(v32 + 8 * v8);
          if (!v23)
          {
            v8 = v14 + 5;
            if (v14 + 5 >= v31)
              goto LABEL_39;
            v23 = *(_QWORD *)(v32 + 8 * v8);
            if (!v23)
            {
              v24 = v14 + 6;
              while (v31 != v24)
              {
                v23 = *(_QWORD *)(v32 + 8 * v24++);
                if (v23)
                {
                  v8 = v24 - 1;
                  goto LABEL_33;
                }
              }
LABEL_39:
              v29 = 0;
LABEL_40:
              sub_55D68(v1);
              return (_QWORD *)v29;
            }
          }
        }
      }
    }
LABEL_33:
    v9 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v8 << 6);
    goto LABEL_34;
  }
  __break(1u);
  return result;
}

void sub_51390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  double v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  _QWORD v46[2];
  char *v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];
  void *v59;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v54 = (char *)v46 - v7;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
    v11 = sub_55D8C((unint64_t *)&unk_14AD320, &qword_14AD318, UIOpenURLContext_ptr);
    v12 = Set.Iterator.init(_cocoa:)(v58, v9, v10, v11);
    a1 = v58[0];
    v50 = v58[1];
    v13 = v58[2];
    v14 = v58[3];
    v15 = v58[4];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 56);
    v50 = a1 + 56;
    v13 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & v17;
    v12 = (_QWORD *)swift_bridgeObjectRetain();
    v14 = 0;
  }
  v46[1] = v13;
  v48 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v49 = (unint64_t)(v13 + 64) >> 6;
  v47 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    if (a1 < 0)
    {
      v25 = __CocoaSet.Iterator.next()(v12);
      v26 = v25;
      v22 = v54;
      if (!v25)
      {
        v52 = v14;
        goto LABEL_50;
      }
      v57 = v25;
      v27 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
      swift_unknownObjectRetain(v26);
      swift_dynamicCast(&v59, &v57, v47, v27, 7);
      v28 = v59;
      *(_QWORD *)&v29 = swift_unknownObjectRelease(v26).n128_u64[0];
      v24 = v14;
      v56 = v15;
      if (!v28)
        goto LABEL_46;
      goto LABEL_36;
    }
    v22 = v54;
    if (!v15)
      break;
    v56 = (v15 - 1) & v15;
    v23 = __clz(__rbit64(v15)) | (v14 << 6);
    v24 = v14;
LABEL_35:
    v28 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v23);
    if (!v28)
    {
LABEL_46:
      v52 = v14;
      goto LABEL_50;
    }
LABEL_36:
    v55 = v24;
    v53 = v15;
    v33 = objc_msgSend(v28, "URL", v29);
    v34 = static URL._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v35 = URL.scheme.getter(v34);
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v22, v2);
      goto LABEL_12;
    }
    v37 = v36;
    v52 = v14;
    if (v35 == 0x73636973756DLL && v36 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease(0xE600000000000000);
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v6, v22, v2);
    }
    else
    {
      v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, 0x73636973756DLL, 0xE600000000000000, 0);
      swift_bridgeObjectRelease(v37);
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v6, v22, v2);
      if ((v39 & 1) == 0)
        goto LABEL_12;
    }
    v40 = URL.host.getter(v38);
    if (v41)
    {
      v42 = v41;
      if (v40 == 0x72702D6563696F76 && v41 == 0xED00007765697665)
      {
        v45 = *(void (**)(char *, uint64_t))(v3 + 8);
        v45(v6, v2);
        swift_bridgeObjectRelease(0xED00007765697665);
        v45(v22, v2);

        goto LABEL_50;
      }
      v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, 0x72702D6563696F76, 0xED00007765697665, 0);
      v43 = a1;
      v44 = *(void (**)(char *, uint64_t))(v3 + 8);
      v44(v6, v2);
      swift_bridgeObjectRelease(v42);
      v44(v22, v2);
      a1 = v43;

      v14 = v55;
      v15 = v56;
      if ((v51 & 1) != 0)
        goto LABEL_50;
    }
    else
    {
LABEL_12:
      v20 = v22;
      v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v6, v2);
      v21(v20, v2);

      v14 = v55;
      v15 = v56;
    }
  }
  v30 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v30 >= v49)
      goto LABEL_47;
    v31 = *(_QWORD *)(v50 + 8 * v30);
    v24 = v14 + 1;
    if (!v31)
    {
      v24 = v14 + 2;
      if (v14 + 2 >= v49)
        goto LABEL_47;
      v31 = *(_QWORD *)(v50 + 8 * v24);
      if (!v31)
      {
        v24 = v14 + 3;
        if (v14 + 3 >= v49)
          goto LABEL_47;
        v31 = *(_QWORD *)(v50 + 8 * v24);
        if (!v31)
        {
          v24 = v14 + 4;
          if (v14 + 4 >= v49)
            goto LABEL_47;
          v31 = *(_QWORD *)(v50 + 8 * v24);
          if (!v31)
          {
            v24 = v14 + 5;
            if (v14 + 5 >= v49)
              goto LABEL_47;
            v31 = *(_QWORD *)(v50 + 8 * v24);
            if (!v31)
            {
              v32 = v14 + 6;
              while (v49 != v32)
              {
                v31 = *(_QWORD *)(v50 + 8 * v32++);
                if (v31)
                {
                  v24 = v32 - 1;
                  goto LABEL_34;
                }
              }
LABEL_47:
              v52 = v14;
LABEL_50:
              sub_55D68(a1);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v56 = (v31 - 1) & v31;
    v23 = __clz(__rbit64(v31)) + (v24 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

double sub_518D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  double result;
  objc_super v47;
  uint64_t v48;
  char v49[24];
  _QWORD v50[3];
  char v51[24];
  _QWORD v52[3];
  _BYTE v53[40];

  v3 = OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
  if (v4)
  {
    v5 = (objc_class *)type metadata accessor for KeyboardShortcutsManager();
    v6 = (char *)objc_allocWithZone(v5);
    *(_QWORD *)&v6[OBJC_IVAR____TtC16MusicApplication24KeyboardShortcutsManager____lazy_storage____keyCommands] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC16MusicApplication24KeyboardShortcutsManager_interfaceContext] = v4;
    v47.receiver = v6;
    v47.super_class = v5;
    swift_retain_n(v4, 2);
    v7 = objc_msgSendSuper2(&v47, "init");
    v8 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_keyboardShortcutsManager);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_keyboardShortcutsManager) = v7;
    swift_release(v4);

  }
  else
  {
    v9 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_keyboardShortcutsManager);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_keyboardShortcutsManager) = 0;

  }
  if (qword_14AB558 != -1)
    swift_once(&qword_14AB558, sub_5BBDBC);
  sub_55D1C(static UIApplication.playbackController + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)v53);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD2F0);
  v11 = _s11CoordinatorCMa_1();
  if ((swift_dynamicCast(v52, v53, v10, v11, 6) & 1) != 0)
  {
    v12 = v52[0];
    v13 = *(_QWORD *)(v1 + v3);
    v14 = *(_QWORD *)(v52[0] + 16);
    *(_QWORD *)(v52[0] + 16) = v13;
    swift_retain(v13);
    swift_release(v14);
  }
  else
  {
    v12 = 0;
  }
  if (qword_14AB568 != -1)
    swift_once(&qword_14AB568, sub_5BC10C);
  swift_beginAccess(&static UIApplication.groupActivitiesManager, v52, 0, 0);
  v15 = static UIApplication.groupActivitiesManager + 16;
  swift_beginAccess(static UIApplication.groupActivitiesManager + 16, v51, 0, 0);
  sub_55D1C(v15, (uint64_t)v53);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD2F8);
  v17 = _s11CoordinatorCMa();
  if ((swift_dynamicCast(v50, v53, v16, v17, 6) & 1) != 0)
  {
    v18 = v50[0];
    v19 = *(_QWORD *)(v1 + v3);
    v20 = *(_QWORD *)(v50[0] + 16);
    *(_QWORD *)(v50[0] + 16) = v19;
    swift_retain(v19);
    swift_release(v20);
  }
  else
  {
    v18 = 0;
  }
  if (qword_14AB570 != -1)
    swift_once(&qword_14AB570, sub_5BC224);
  swift_beginAccess(&static UIApplication.collaborationManager, v50, 0, 0);
  v21 = static UIApplication.collaborationManager + 16;
  swift_beginAccess(static UIApplication.collaborationManager + 16, v49, 0, 0);
  sub_55D1C(v21, (uint64_t)v53);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD300);
  v23 = _s11CoordinatorCMa_0();
  if ((swift_dynamicCast(&v48, v53, v22, v23, 6) & 1) != 0)
  {
    v24 = v48;
    v25 = *(_QWORD *)(v1 + v3);
    v26 = *(_QWORD *)(v48 + 16);
    *(_QWORD *)(v48 + 16) = v25;
    swift_retain(v25);
    swift_release(v26);
    if (!a1)
      goto LABEL_30;
LABEL_20:
    v27 = *(_QWORD *)(v1 + v3);
    if (!v27)
      goto LABEL_30;
    v28 = *(_QWORD *)(a1 + 32);
    v29 = v28 >> 62;
    v30 = v28;
    if (v28 >> 62)
      v30 = v28 & 0x3FFFFFFFFFFFFFFFLL;
    v31 = *(_QWORD *)(v27 + 32);
    v32 = v31 >> 62;
    v33 = v31;
    if (v31 >> 62)
      v33 = v31 & 0x3FFFFFFFFFFFFFFFLL;
    if (v30 == v33)
      goto LABEL_30;
    if ((_DWORD)v29)
    {
      if ((_DWORD)v29 == 1)
      {
        v34 = (void *)(v28 & 0x3FFFFFFFFFFFFFFFLL);
        if ((_DWORD)v32)
        {
          v35 = (id)(v31 & 0x3FFFFFFFFFFFFFFFLL);
          v36 = v34;
          swift_retain(a1);
          swift_retain(v27);
LABEL_36:
          swift_release(v18);
          swift_release(v24);
LABEL_39:
          swift_release(a1);
          swift_release(v27);

          goto LABEL_40;
        }
        v43 = (id)(v31 & 0x3FFFFFFFFFFFFFFFLL);
        v44 = v34;
        swift_retain(a1);
        swift_retain(v27);
        v35 = v43;
        v36 = v44;
        v40 = sub_B9100(v36);
LABEL_38:
        v45 = v40;
        swift_release(v18);
        swift_release(v24);

        swift_bridgeObjectRelease(v45);
        goto LABEL_39;
      }
      v41 = (void *)(v28 & 0x3FFFFFFFFFFFFFFFLL);
      v42 = (void *)(v31 & 0x3FFFFFFFFFFFFFFFLL);
    }
    else
    {
      if ((_DWORD)v32 == 1)
      {
        v37 = (void *)(v31 & 0x3FFFFFFFFFFFFFFFLL);
        v38 = (id)(v28 & 0x3FFFFFFFFFFFFFFFLL);
        swift_retain(a1);
        swift_retain(v27);
        v39 = v37;
        v36 = v38;
        v35 = v39;
        v40 = sub_B8DF4((char *)v28);
        goto LABEL_38;
      }
      v42 = (void *)(v31 & 0x3FFFFFFFFFFFFFFFLL);
      v41 = (void *)(v28 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v36 = v41;
    swift_retain(a1);
    swift_retain(v27);
    v35 = v42;
    goto LABEL_36;
  }
  v24 = 0;
  if (a1)
    goto LABEL_20;
LABEL_30:
  swift_release(v12);
  swift_release(v18);
  v12 = v24;
LABEL_40:
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_51DC8(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  void (*v37)(void (*)(CGFloat *), uint64_t, __n128);
  __n128 v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  char *v43;
  uint64_t inited;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id *v49;
  uint64_t (*v50)(void);
  _QWORD *v51;
  char v52;
  uint64_t v53;
  void (*v54)(double (*)(), uint64_t);
  id v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char v70;
  id v71;
  id v72;
  id v73;
  unint64_t v74;
  char v75;
  id v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  _BOOL4 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  void *v120;
  char *v121;
  __n128 v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  id v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  int64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int64_t v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  int64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  int64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  id v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  char *v185;
  id v186;
  uint64_t v187;
  void *v188;
  uint64_t v189;
  void **aBlock;
  uint64_t v191;
  uint64_t (*v192)(uint64_t);
  void *v193;
  uint64_t (*v194)();
  uint64_t v195;
  _QWORD v196[2];
  char v197[4];
  char v198[8];
  uint64_t v199;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v167 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v185 = (char *)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for DispatchQoS.QoSClass(0, v14);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v181 = (char *)&v167 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for DispatchPredicate(0);
  v177 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v176 = (uint64_t *)((char *)&v167 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  objc_opt_self(UIWindowScene);
  v18 = swift_dynamicCastObjCClass(a1);
  if (v18)
  {
    v19 = (void *)v18;
    v173 = v13;
    v174 = v12;
    v175 = v11;
    v20 = objc_allocWithZone((Class)type metadata accessor for Window());
    v180 = a1;
    v21 = objc_msgSend(v20, "initWithWindowScene:", v19);
    v22 = objc_allocWithZone((Class)UIColor);
    v23 = v21;
    v24 = objc_msgSend(v22, "initWithWhite:alpha:", 0.0, 0.2);
    objc_msgSend(v23, "setBackgroundColor:", v24);

    v25 = v23;
    objc_msgSend(v25, "setTintColor:", *UIColor.MusicTint.normal.unsafeMutableAddressor());

    v26 = *(void **)(v4 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window) = v25;
    v184 = v25;

    v186 = a3;
    v27 = objc_msgSend(a3, "userActivities");
    v28 = sub_4E684(0, &qword_14AD340, NSUserActivity_ptr);
    v29 = sub_55D8C(&qword_14AD348, &qword_14AD340, NSUserActivity_ptr);
    v187 = v28;
    v170 = v29;
    v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v27, v28, v29);

    v199 = v30;
    v31 = objc_msgSend(a2, "stateRestorationActivity");
    if (v31)
    {
      sub_6C74C((Swift::Int *)&aBlock, v31);

    }
    v32 = objc_msgSend(v19, "traitCollection");
    sub_5518C(v32, 0);

    objc_msgSend(v19, "setUserActivity:", 0);
    v33 = objc_msgSend(objc_allocWithZone((Class)UISceneActivationConditions), "init");
    v34 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 1);
    objc_msgSend(v33, "setPrefersToActivateForTargetContentIdentifierPredicate:", v34);

    v179 = v33;
    objc_msgSend(v19, "setActivationConditions:", v33);
    v35 = UIWindowScene.noticePresenter.getter();
    v36 = swift_allocObject(&unk_13417C8, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v4);
    v37 = *(void (**)(void (*)(CGFloat *), uint64_t, __n128))(*(_QWORD *)v35 + 264);
    v38 = swift_retain(v36);
    v37(sub_55E98, v36, v38);
    swift_release(v35);
    swift_release(v36);
    v39 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v188 = v19;
    objc_msgSend(v39, "_saveRestorationUserActivityStateForScene:", v19);

    v40 = v184;
    objc_msgSend(v184, "makeKeyAndVisible");
    sub_5534C();
    v41 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
    v42 = type metadata accessor for MusicSeguePerformer();
    v43 = v41;
    inited = swift_initStaticObject(v42, &unk_14AC398);
    v45 = &v43[OBJC_IVAR____TtC11MusicJSCore18JSSegueCoordinator_seguePerformingDelegate];
    swift_beginAccess(&v43[OBJC_IVAR____TtC11MusicJSCore18JSSegueCoordinator_seguePerformingDelegate], v198, 1, 0);
    *((_QWORD *)v45 + 1) = &protocol witness table for MusicSeguePerformer;
    swift_unknownObjectWeakAssign(v45, inited);

    v46 = *JSHTTPRequestCoordinator.shared.unsafeMutableAddressor();
    v47 = type metadata accessor for MusicHTTPRequestAuthenticator();
    swift_retain(v46);
    v48 = swift_initStaticObject(v47, &unk_14AC3B0);
    swift_beginAccess(v46 + 16, v197, 1, 0);
    *(_QWORD *)(v46 + 24) = &protocol witness table for MusicHTTPRequestAuthenticator;
    swift_unknownObjectWeakAssign(v46 + 16, v48);
    swift_release(v46);
    v49 = (id *)JSBridge.shared.unsafeMutableAddressor();
    v50 = *(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *(_QWORD *)*v49) - 8];
    v51 = *v49;
    v52 = v50();
    v172 = v9;
    if ((v52 & 1) != 0)
    {
      v53 = swift_allocObject(&unk_1341840, 24, 7);
      *(_QWORD *)(v53 + 16) = v40;
      v54 = *(void (**)(double (*)(), uint64_t))&stru_B8.segname[(swift_isaMask & *v51) + 16];
      v55 = v40;
      v54(sub_55FF0, v53);
      swift_release(v53);
      v56 = v188;
      goto LABEL_23;
    }
    v57 = v8;
    v58 = v51;
    v59 = objc_msgSend(v186, "URLContexts");
    v60 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
    v61 = sub_55D8C((unint64_t *)&unk_14AD320, &qword_14AD318, UIOpenURLContext_ptr);
    v62 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v59, v60, v61);

    if ((v62 & 0xC000000000000001) != 0)
    {
      if (v62 < 0)
        v64 = v62;
      else
        v64 = v62 & 0xFFFFFFFFFFFFFF8;
      v65 = __CocoaSet.count.getter(v64);
      v56 = v188;
      if (v65)
        goto LABEL_21;
    }
    else
    {
      v56 = v188;
      if (*(_QWORD *)(v62 + 16))
        goto LABEL_21;
    }
    v66 = v199;
    if ((v199 & 0xC000000000000001) != 0)
    {
      if (v199 < 0)
        v67 = v199;
      else
        v67 = v199 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v68 = __CocoaSet.count.getter(v67);
      *(_QWORD *)&v63 = swift_bridgeObjectRelease(v66).n128_u64[0];
      if (v68)
        goto LABEL_21;
    }
    else if (*(_QWORD *)(v199 + 16))
    {
      goto LABEL_21;
    }
    v69 = objc_msgSend(v186, "shortcutItem", v63);

    if (!v69)
    {
      v70 = 0;
      goto LABEL_22;
    }
LABEL_21:
    v70 = 1;
LABEL_22:
    v71 = v184;
    v72 = v184;
    JSBridge.start(mainWindow:applicationActivationMethod:)(v25, v70);

    v51 = v58;
    *(_BYTE *)(v4 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod) = v70;
    v40 = v71;
    swift_bridgeObjectRelease(v62);
    v8 = v57;
LABEL_23:
    v73 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v196[0] = 0xD00000000000001ELL;
    v196[1] = 0x80000000010C3E40;
    v74 = sub_55EA0();
    NSUserDefaults.subscript.getter((uint64_t)v196, (uint64_t)&type metadata for String, v74, (uint64_t)&aBlock);
    if (v193)
    {
      if ((swift_dynamicCast(v196, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v75 = v196[0];

        if ((v75 & 1) != 0)
          goto LABEL_30;
        goto LABEL_29;
      }
    }
    else
    {
      sub_56024((uint64_t)&aBlock, (uint64_t *)&unk_14AD640);
    }

LABEL_29:
    v76 = objc_msgSend((id)objc_opt_self(ICPrivacyInfo), "sharedPrivacyInfo");
    v77 = objc_msgSend(v76, "privacyAcknowledgementRequiredForMusic");

    if (!v77)
    {
      v171 = v51;
      v169 = 0;
      goto LABEL_39;
    }
LABEL_30:
    v78 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
    if (!v78)
    {

      v82 = v199;
LABEL_79:
      swift_bridgeObjectRelease(v82);
      return;
    }
    v79 = *(_QWORD *)(v78 + 32);
    v80 = v186;
    v171 = v51;
    v168 = v4;
    if (v79 >> 62 == 2 || v79 >> 62 == 1)
    {
      v81 = (void *)(v79 & 0x3FFFFFFFFFFFFFFFLL);
      v79 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v81 = (void *)(v79 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v83 = v199;
    v84 = v81;
    v85 = swift_bridgeObjectRetain();
    HIDWORD(v167) = sub_51010(v85);
    v86 = objc_msgSend(v80, "URLContexts", swift_bridgeObjectRelease(v83).n128_f64[0]);
    v87 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
    v88 = sub_55D8C((unint64_t *)&unk_14AD320, &qword_14AD318, UIOpenURLContext_ptr);
    v89 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v86, v87, v88);
    sub_51390(v89);
    v91 = v90;
    v169 = 0;

    swift_bridgeObjectRelease(v89);
    v92 = type metadata accessor for PrivacyDisclaimerPresenter(0);
    v93 = swift_allocObject(v92, *(unsigned int *)(v92 + 48), *(unsigned __int16 *)(v92 + 52));
    *(_QWORD *)(v93 + 16) = 0;
    *(_BYTE *)(v93 + 24) = 1;
    v94 = v93 + OBJC_IVAR____TtC16MusicApplication26PrivacyDisclaimerPresenter_welcomeViewModel;
    v95 = type metadata accessor for WelcomeViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 1, 1, v95);
    *(_QWORD *)(v93 + OBJC_IVAR____TtC16MusicApplication26PrivacyDisclaimerPresenter_contentViewController) = 0;
    v96 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v104 = static OS_dispatch_queue.main.getter(v96, v97, v98, v99, v100, v101, v102, v103, v167, v168, v169, v170, v171, v172, v173);
    v105 = v176;
    *v176 = v104;
    v106 = v177;
    v107 = v178;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v177 + 104))(v105, enum case for DispatchPredicate.onQueue(_:), v178);
    LOBYTE(v94) = _dispatchPreconditionTest(_:)(v105);
    (*(void (**)(uint64_t *, uint64_t))(v106 + 8))(v105, v107);
    if ((v94 & 1) == 0)
    {
      __break(1u);
      return;
    }
    v108 = ((BYTE4(v167) | v91) & 1) == 0;
    *(_BYTE *)(v93 + 24) = ((BYTE4(v167) | v91) & 1) == 0;
    sub_55489C((void *)v79, v108);

    swift_release(v93);
    v4 = v168;
    v56 = v188;
LABEL_39:
    v109 = swift_allocObject(&unk_13417C8, 24, 7);
    swift_unknownObjectWeakInit(v109 + 16, v4);
    v110 = swift_allocObject(&unk_13417F0, 32, 7);
    *(_QWORD *)(v110 + 16) = v109;
    *(_QWORD *)(v110 + 24) = v56;
    v111 = type metadata accessor for PrivacyAcknowledgementObserver();
    swift_allocObject(v111, 56, 7);
    v112 = v180;
    v113 = PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(1, (uint64_t)sub_55F10, v110);
    v114 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_privacyAcknowledgementObserver);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_privacyAcknowledgementObserver) = v113;
    swift_release(v114);
    sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v115 = v182;
    v116 = v181;
    v117 = v183;
    (*(void (**)(char *, _QWORD, uint64_t))(v182 + 104))(v181, enum case for DispatchQoS.QoSClass.background(_:), v183);
    v118 = (void *)static OS_dispatch_queue.global(qos:)(v116);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v117);
    v194 = sub_53174;
    v195 = 0;
    aBlock = _NSConcreteStackBlock;
    v191 = 1107296256;
    v192 = sub_42D124;
    v193 = &block_descriptor_26;
    v119 = v4;
    v120 = _Block_copy(&aBlock);
    v121 = v185;
    static DispatchQoS.unspecified.getter(v122);
    v196[0] = _swiftEmptyArrayStorage;
    v123 = sub_55F18();
    v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD370);
    v125 = sub_55F60();
    v126 = v175;
    dispatch thunk of SetAlgebra.init<A>(_:)(v196, v124, v125, v8, v123);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v121, v126, v120);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v126, v8);
    (*(void (**)(char *, uint64_t))(v173 + 8))(v121, v174);
    _Block_release(v120);

    v127 = v186;
    v128 = objc_msgSend(v186, "URLContexts");
    v129 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
    v130 = sub_55D8C((unint64_t *)&unk_14AD320, &qword_14AD318, UIOpenURLContext_ptr);
    v131 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v128, v129, v130);
    v132 = v119;
    sub_53AC0(v112, v131);

    v133 = objc_msgSend(v127, "shortcutItem", swift_bridgeObjectRelease(v131).n128_f64[0]);
    if (v133)
    {
      v134 = v133;
      v135 = type metadata accessor for LaunchOptions(0);
      swift_allocObject(v135, *(unsigned int *)(v135 + 48), *(unsigned __int16 *)(v135 + 52));
      v136 = v112;
      v137 = v134;
      v138 = sub_B3664C(v137, v56, (uint64_t)UIScreen.Dimensions.size.getter, 0);

      if (v138)
      {
        sub_B2C48C();
        v140 = v139;
        swift_release(v138);
        if ((v140 & 1) != 0)
          *(_BYTE *)(v119 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod) = 1;
      }

    }
    v141 = v199;
    v180 = v112;
    if ((v199 & 0xC000000000000001) != 0)
    {
      if (v199 < 0)
        v142 = v199;
      else
        v142 = v199 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v143 = __CocoaSet.makeIterator()(v142);
      v144 = Set.Iterator.init(_cocoa:)(&aBlock, v143, v187, v170);
      v141 = (uint64_t)aBlock;
      v145 = (_QWORD *)v191;
      v146 = (uint64_t)v192;
      v147 = (int64_t)v193;
      v148 = (unint64_t)v194;
    }
    else
    {
      v149 = -1 << *(_BYTE *)(v199 + 32);
      v145 = (_QWORD *)(v199 + 56);
      v146 = ~v149;
      v150 = -v149;
      if (v150 < 64)
        v151 = ~(-1 << v150);
      else
        v151 = -1;
      v148 = v151 & *(_QWORD *)(v199 + 56);
      v144 = (_QWORD *)swift_bridgeObjectRetain();
      v147 = 0;
    }
    v186 = (id)(v141 & 0x7FFFFFFFFFFFFFFFLL);
    v183 = v146;
    v152 = (unint64_t)(v146 + 64) >> 6;
    v185 = (char *)&type metadata for Swift.AnyObject + 8;
    if ((v141 & 0x8000000000000000) == 0)
      goto LABEL_57;
    while (1)
    {
      v153 = __CocoaSet.Iterator.next()(v144);
      if (!v153)
        break;
      v154 = v153;
      v189 = v153;
      swift_unknownObjectRetain(v153);
      swift_dynamicCast(v196, &v189, v185, v187, 7);
      v155 = (id)v196[0];
      swift_unknownObjectRelease(v154);
      v156 = v147;
      v157 = v148;
      if (!v155)
        break;
      while (1)
      {
        sub_532C8(v188, v155);

        v147 = v156;
        v148 = v157;
        if (v141 < 0)
          break;
LABEL_57:
        if (v148)
        {
          v157 = (v148 - 1) & v148;
          v158 = __clz(__rbit64(v148)) | (v147 << 6);
          v156 = v147;
        }
        else
        {
          v156 = v147 + 1;
          if (__OFADD__(v147, 1))
          {
            __break(1u);
            goto LABEL_83;
          }
          if (v156 >= v152)
            goto LABEL_77;
          v159 = v145[v156];
          if (!v159)
          {
            v160 = v147 + 2;
            if (v147 + 2 >= v152)
              goto LABEL_77;
            v159 = v145[v160];
            if (v159)
              goto LABEL_66;
            v160 = v147 + 3;
            if (v147 + 3 >= v152)
              goto LABEL_77;
            v159 = v145[v160];
            if (v159)
            {
LABEL_66:
              v156 = v160;
            }
            else
            {
              v156 = v147 + 4;
              if (v147 + 4 >= v152)
                goto LABEL_77;
              v159 = v145[v156];
              if (!v159)
              {
                v161 = (char *)(v147 + 5);
                while ((char *)v152 != v161)
                {
                  v159 = v145[(_QWORD)v161++];
                  if (v159)
                  {
                    v156 = (int64_t)(v161 - 1);
                    goto LABEL_67;
                  }
                }
                goto LABEL_77;
              }
            }
          }
LABEL_67:
          v157 = (v159 - 1) & v159;
          v158 = __clz(__rbit64(v159)) + (v156 << 6);
        }
        v155 = *(id *)(*(_QWORD *)(v141 + 48) + 8 * v158);
        if (!v155)
          goto LABEL_77;
      }
    }
LABEL_77:
    sub_55D68(v141);
    v162 = qword_14AB560;
    v145 = v180;
    if (v162 != -1)
LABEL_83:
      swift_once(&qword_14AB560, sub_5BBE68);
    v163 = static UIApplication.player;
    v164 = type metadata accessor for Player.SnapshotController();
    swift_allocObject(v164, 81, 7);
    swift_retain(v163);
    v165 = Player.SnapshotController.init(windowScene:player:)(v188, v163);
    v166 = *(_QWORD *)(v132 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_snapshotter);
    *(_QWORD *)(v132 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_snapshotter) = v165;

    swift_release(v166);
    v82 = v199;

    goto LABEL_79;
  }
}

void sub_52E30(CGFloat *a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  id v9;
  double v10;
  CGFloat top;
  double v12;
  CGFloat leading;
  double v14;
  CGFloat bottom;
  double v16;
  CGFloat trailing;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  _BYTE v23[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    goto LABEL_7;
  v5 = Strong;
  v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext];
  if (!v6)
  {

LABEL_7:
    v7 = 0xF000000000000007;
LABEL_8:
    top = NSDirectionalEdgeInsetsZero.top;
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
    sub_56094(v7);
    goto LABEL_9;
  }
  swift_retain(*(_QWORD *)&Strong[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext]);

  v7 = *(_QWORD *)(v6 + 32);
  v8 = (id)(v7 & 0x3FFFFFFFFFFFFFFFLL);
  swift_release(v6);
  if (!(v7 >> 62))
  {
    v18 = (id)v7;
    sub_2FD444();
    top = v19;
    leading = v20;
    bottom = v21;
    trailing = v22;

    goto LABEL_9;
  }
  if (v7 >> 62 != 1)
    goto LABEL_8;
  v9 = v8;
  sub_4555CC();
  top = v10;
  leading = v12;
  bottom = v14;
  trailing = v16;

LABEL_9:
  a1[3] = top;
  a1[4] = leading;
  a1[5] = bottom;
  a1[6] = trailing;
}

void sub_52F50(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t Strong;
  unsigned __int8 *v10;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[9];
  _BYTE v26[24];

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a1 & 1) != 0)
  {
    v8 = a2 + 16;
    swift_beginAccess(v8, v26, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v8);
    if (Strong)
    {
      v10 = (unsigned __int8 *)Strong;
      static PresentationSource.topmost(in:)((uint64_t)v25);
      if (v25[7] == 1)
      {
        sub_56024((uint64_t)v25, (uint64_t *)&unk_14AD380);

      }
      else
      {
        v11 = (void *)swift_unknownObjectWeakLoadStrong(v25);
        sub_56060((uint64_t)v25);
        if (v11)
        {
          v12 = v10[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_requiresVoiceActivationPrivacyDisclaimer];
          v13 = type metadata accessor for PrivacyDisclaimerPresenter(0);
          v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
          *(_QWORD *)(v14 + 16) = 0;
          *(_BYTE *)(v14 + 24) = 1;
          v15 = v14 + OBJC_IVAR____TtC16MusicApplication26PrivacyDisclaimerPresenter_welcomeViewModel;
          v16 = type metadata accessor for WelcomeViewModel(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
          *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicApplication26PrivacyDisclaimerPresenter_contentViewController) = 0;
          v17 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
          *v7 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24, v25[0], v25[1], v25[2], v25[3], v25[4], v25[5], v25[6]);
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
          LOBYTE(v15) = _dispatchPreconditionTest(_:)(v7);
          (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
          if ((v15 & 1) != 0)
          {
            *(_BYTE *)(v14 + 24) = v12 ^ 1;
            sub_55489C(v11, v12 ^ 1);

            swift_release(v14);
          }
          else
          {
            __break(1u);
          }
        }
        else
        {

        }
      }
    }
  }
  else
  {
    if (qword_14AB380 != -1)
      swift_once(&qword_14AB380, sub_513C90);
    sub_514644();
  }
}

uint64_t sub_53174()
{
  sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  return static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_531B8, 0);
}

uint64_t sub_531B8()
{
  uint64_t result;

  if (qword_14AB988 != -1)
    result = swift_once(&qword_14AB988, sub_80BCF4);
  if (qword_14AAB08 != -1)
    result = swift_once(&qword_14AAB08, sub_1E63B4);
  if (qword_14AB000 != -1)
    return swift_once(&qword_14AB000, sub_399F54);
  return result;
}

double sub_532C8(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  void *v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  id v50;
  void *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  double v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  id v63;
  char v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  void (*v68)(uint64_t (*)(id *), uint64_t);
  id v69;
  _QWORD *v70;
  double result;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  char *v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  void *v78;
  unint64_t v79;
  _OWORD v80[2];
  __int128 v81;
  _QWORD *v82;
  _BYTE v83[40];
  char v84[72];

  v78 = a1;
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v74 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v72 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v9);
  v76 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - v15;
  v17 = sub_19692C((uint64_t)_swiftEmptyArrayStorage);
  v18 = objc_msgSend(a2, "_sourceApplication");
  if (v18)
  {
    v19 = v18;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;

    *(_QWORD *)&v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIApplicationOpenURLOptionsSourceApplicationKey);
    *((_QWORD *)&v81 + 1) = v23;
    AnyHashable.init<A>(_:)(&v81, &type metadata for String, &protocol witness table for String);
    v82 = &type metadata for String;
    *(_QWORD *)&v81 = v20;
    *((_QWORD *)&v81 + 1) = v22;
    sub_50CA4(&v81, v80);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    v79 = v17;
    sub_19CAA0(v80, (uint64_t)v83, isUniquelyReferenced_nonNull_native);
    v17 = v79;
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_55E40((uint64_t)v83);
  }
  v25 = objc_msgSend(a2, "referrerURL");
  if (v25)
  {
    v26 = v25;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v25);

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v27(v13, 0, 1, v3);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v27(v13, 1, 1, v3);
  }
  sub_55DCC((uint64_t)v13, (uint64_t)v16);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v75(v16, 1, v3))
  {
    sub_56024((uint64_t)v16, &qword_14AED20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v16, v3);
    sub_56024((uint64_t)v16, &qword_14AED20);
    v28 = _s10Foundation3URLV11MusicJSCoreE12JSSerializedSSvg_0();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD330);
    inited = swift_initStackObject(v31, v84);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(LSReferrerURLKey);
    *(_QWORD *)(inited + 40) = v33;
    *(_QWORD *)(inited + 48) = v28;
    *(_QWORD *)(inited + 56) = v30;
    v34 = sub_196558(inited);
    *(_QWORD *)&v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIApplicationOpenURLOptionsAnnotationKey);
    *((_QWORD *)&v81 + 1) = v35;
    AnyHashable.init<A>(_:)(&v81, &type metadata for String, &protocol witness table for String);
    v82 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA550);
    *(_QWORD *)&v81 = v34;
    sub_50CA4(&v81, v80);
    v36 = swift_isUniquelyReferenced_nonNull_native(v17);
    v79 = v17;
    sub_19CAA0(v80, (uint64_t)v83, v36);
    v17 = v79;
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_55E40((uint64_t)v83);
  }
  objc_opt_self(UIWindowScene);
  v37 = v78;
  v38 = swift_dynamicCastObjCClass(v78);
  if (!v38)
  {
    swift_bridgeObjectRelease(v17);
    v48 = 0;
    goto LABEL_29;
  }
  v39 = (void *)v38;
  v73 = v27;
  v40 = v37;
  v41 = objc_msgSend(a2, "activityType");
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v44 = v43;
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
  v47 = v45;
  if (v42 == v46 && v44 == v45)
  {

    swift_bridgeObjectRelease_n(v44, 2);
  }
  else
  {
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v46, v45, 0);

    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v47);
    if ((v49 & 1) == 0)
    {
      *(_QWORD *)&v56 = swift_bridgeObjectRelease(v17).n128_u64[0];
      goto LABEL_21;
    }
  }
  v50 = objc_msgSend(a2, "webpageURL");
  if (!v50)
  {
    v53 = (uint64_t)v76;
    v73(v76, 1, 1, v3);
    goto LABEL_19;
  }
  v51 = v50;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v50);

  v52 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v53 = (uint64_t)v76;
  v52(v76, v8, v3);
  v73((char *)v53, 0, 1, v3);
  if (v75((char *)v53, 1, v3) == 1)
  {
LABEL_19:
    swift_bridgeObjectRelease(v17);
    sub_56024(v53, &qword_14AED20);
LABEL_21:
    v57 = objc_msgSend(a2, "activityType", v56);
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v60 = v59;
    if (v58 == 0xD00000000000001CLL && v59 == 0x80000000010C3E20)
    {

      swift_bridgeObjectRelease(0x80000000010C3E20);
    }
    else
    {
      v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v59, 0xD00000000000001CLL, 0x80000000010C3E20, 0);

      swift_bridgeObjectRelease(v60);
      if ((v61 & 1) == 0)
        goto LABEL_26;
    }
    *(_BYTE *)(v77 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_requiresVoiceActivationPrivacyDisclaimer) = 1;
LABEL_26:
    v62 = type metadata accessor for LaunchOptions(0);
    swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
    v63 = a2;
    v48 = (uint64_t)sub_B36EA8(v63, v39);

    if (!v48)
      goto LABEL_29;
    goto LABEL_27;
  }
  v54 = v74;
  v52(v74, (char *)v53, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v54, v3);
  v55 = type metadata accessor for LaunchOptions(0);
  swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
  v48 = sub_B1E708((uint64_t)v8, v17, v39);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v54, v3);
LABEL_27:
  swift_retain(v48);
  sub_B2C48C();
  v65 = v64;
  swift_release(v48);
  if ((v65 & 1) != 0)
    *(_BYTE *)(v77 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod) = 1;
LABEL_29:
  v66 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
  v67 = swift_allocObject(&unk_13417A0, 24, 7);
  *(_QWORD *)(v67 + 16) = a2;
  v68 = *(void (**)(uint64_t (*)(id *), uint64_t))&stru_B8.segname[(swift_isaMask & *v66) + 16];
  v69 = a2;
  v70 = v66;
  v68(sub_55E38, v67);

  swift_release(v67);
  *(_QWORD *)&result = swift_release(v48).n128_u64[0];
  return result;
}

uint64_t sub_539F4(id *a1, void *a2)
{
  id v3;
  id v4;
  Swift::String v5;
  void *object;

  v3 = *a1;
  v4 = objc_msgSend(a2, "activityType");
  v5._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  object = v5._object;
  JSApplication.willContinueUserActivity(with:)(v5);

  return swift_bridgeObjectRelease(object);
}

void sub_53AC0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  __n128 v44;
  uint64_t v45;
  char v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_BYTE *, uint64_t);
  _BYTE *v52;
  uint64_t v53;
  __n128 v54;
  _BYTE *v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t);
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_BYTE *, uint64_t);
  _BYTE *v62;
  uint64_t v63;
  __n128 v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE v67[4];
  int v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  void *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  _QWORD v84[6];

  v5 = type metadata accessor for URL(0);
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  __chkstk_darwin(v5);
  v74 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v67[-v8];
  v75 = v2;
  v73 = OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod) = 0;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v10 = a2;
    else
      v10 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
    v13 = sub_55D8C((unint64_t *)&unk_14AD320, &qword_14AD318, UIOpenURLContext_ptr);
    v14 = Set.Iterator.init(_cocoa:)(v84, v11, v12, v13);
    a2 = v84[0];
    v79 = v84[1];
    v16 = v84[2];
    v15 = v84[3];
    v17 = v84[4];
  }
  else
  {
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = *(_QWORD *)(a2 + 56);
    v79 = a2 + 56;
    v16 = ~v18;
    v20 = -v18;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v17 = v21 & v19;
    v14 = (_QWORD *)swift_bridgeObjectRetain();
    v15 = 0;
  }
  v77 = a2 & 0x7FFFFFFFFFFFFFFFLL;
  v78 = (unint64_t)(v16 + 64) >> 6;
  v76 = (char *)&type metadata for Swift.AnyObject + 8;
  v71 = v9;
  v72 = a1;
  v69 = v16;
  v70 = a2;
  while (a2 < 0)
  {
    v25 = __CocoaSet.Iterator.next()(v14);
    if (!v25)
      goto LABEL_51;
    v26 = v25;
    v82 = v25;
    v27 = sub_4E684(0, &qword_14AD318, UIOpenURLContext_ptr);
    swift_unknownObjectRetain(v26);
    swift_dynamicCast(&v83, &v82, v76, v27, 7);
    v28 = v83;
    swift_unknownObjectRelease(v26);
    v24 = v15;
    v22 = v17;
    if (!v28)
      goto LABEL_51;
LABEL_34:
    objc_opt_self(UIWindowScene);
    v32 = swift_dynamicCastObjCClass(a1);
    if (!v32)
    {

      goto LABEL_12;
    }
    v33 = (void *)v32;
    v34 = a1;
    v35 = v28;
    v36 = sub_B36428(v35, v33);

    sub_B2C48C();
    if ((v37 & 1) == 0)
    {
      swift_release(v36);

      goto LABEL_12;
    }
    *(_BYTE *)(v75 + v73) = 1;
    v38 = objc_msgSend(v35, "URL");
    v39 = static URL._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v40 = URL.scheme.getter(v39);
    if (!v41)
    {
      v43 = v74;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v80 + 16))(v74, v9, v81);
LABEL_47:
      v57 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
      v58 = v43;
      v59 = v81;
      v57(v58, v81);

      v9 = v71;
      v60 = v59;
      a1 = v72;
      v57(v71, v60);

      a2 = v70;
      goto LABEL_50;
    }
    v42 = v41;
    v43 = v74;
    if (v40 == 0x73636973756DLL && v41 == 0xE600000000000000)
    {
      v44 = swift_bridgeObjectRelease(0xE600000000000000);
      v45 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v80 + 16))(v43, v9, v81, v44);
    }
    else
    {
      v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, 0x73636973756DLL, 0xE600000000000000, 0);
      v47 = swift_bridgeObjectRelease(v42);
      v45 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v80 + 16))(v43, v9, v81, v47);
      if ((v46 & 1) == 0)
        goto LABEL_47;
    }
    v48 = URL.host.getter(v45);
    if (!v49)
      goto LABEL_47;
    v50 = v49;
    if (v48 == 0x72702D6563696F76 && v49 == 0xED00007765697665)
    {
      v51 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
      v52 = v43;
      v53 = v81;
      v51(v52, v81);

      v54 = swift_bridgeObjectRelease(0xED00007765697665);
      v55 = v71;
      v56 = v53;
      a1 = v72;
      ((void (*)(_BYTE *, uint64_t, __n128))v51)(v71, v56, v54);
      v9 = v55;

      a2 = v70;
LABEL_49:
      *(_BYTE *)(v75 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_requiresVoiceActivationPrivacyDisclaimer) = 1;
      goto LABEL_50;
    }
    v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, 0x72702D6563696F76, 0xED00007765697665, 0);
    v61 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
    v62 = v43;
    v63 = v81;
    v61(v62, v81);

    v64 = swift_bridgeObjectRelease(v50);
    v65 = v71;
    v66 = v63;
    a1 = v72;
    ((void (*)(_BYTE *, uint64_t, __n128))v61)(v71, v66, v64);
    v9 = v65;

    a2 = v70;
    if ((v68 & 1) != 0)
      goto LABEL_49;
LABEL_50:
    swift_release(v36);
LABEL_12:
    v15 = v24;
    v17 = v22;
  }
  if (v17)
  {
    v22 = (v17 - 1) & v17;
    v23 = __clz(__rbit64(v17)) | (v15 << 6);
    v24 = v15;
LABEL_33:
    v28 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v23);
    if (!v28)
      goto LABEL_51;
    goto LABEL_34;
  }
  v29 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    if (v29 >= v78)
      goto LABEL_51;
    v30 = *(_QWORD *)(v79 + 8 * v29);
    v24 = v15 + 1;
    if (!v30)
    {
      v24 = v15 + 2;
      if (v15 + 2 >= v78)
        goto LABEL_51;
      v30 = *(_QWORD *)(v79 + 8 * v24);
      if (!v30)
      {
        v24 = v15 + 3;
        if (v15 + 3 >= v78)
          goto LABEL_51;
        v30 = *(_QWORD *)(v79 + 8 * v24);
        if (!v30)
        {
          v24 = v15 + 4;
          if (v15 + 4 >= v78)
            goto LABEL_51;
          v30 = *(_QWORD *)(v79 + 8 * v24);
          if (!v30)
          {
            v31 = v15 + 5;
            while (v78 != v31)
            {
              v30 = *(_QWORD *)(v79 + 8 * v31++);
              if (v30)
              {
                v24 = v31 - 1;
                goto LABEL_32;
              }
            }
LABEL_51:
            sub_55D68(a2);
            return;
          }
        }
      }
    }
LABEL_32:
    v22 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v24 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

void sub_542D8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;

  objc_opt_self(UIWindowScene);
  if (swift_dynamicCastObjCClass(a1))
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext) = 0;
    v4 = a1;
    sub_518D4(v3);
    swift_release(v3);
    v5 = *(id *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window) = 0;

  }
}

double sub_543CC(void **a1, void *a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  double result;

  v3 = *a1;
  v4 = swift_allocObject(&unk_13418B8, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = v3;
  v6 = a2;
  JSApplication.didBecomeActive(completion:)((uint64_t)sub_56268, v4);

  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void sub_54438(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _OWORD v13[2];
  uint64_t v14;
  _BYTE v15[72];
  _BYTE v16[56];
  _OWORD v17[2];
  uint64_t v18;
  char v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    memset(v17, 0, sizeof(v17));
    v18 = 0;
    v19 = -1;
    v9 = a1;
    PresentationSource.init(windowScene:position:)(a3, (uint64_t)v17, (uint64_t)v15);
    v10 = type metadata accessor for PlaybackIntentDescriptor(0);
    memset(v13, 0, sizeof(v13));
    v14 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
    v11 = a2;
    sub_90615C((uint64_t)a2, (uint64_t)v15, 0, (uint64_t)v13, (uint64_t)v8, 0, 0, (uint64_t)v16);
    v12 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
    JSSegueCoordinator.perform(segue:with:)((uint64_t)v9, (uint64_t)v16);
    sub_56270((uint64_t)v16);

  }
}

void sub_545AC(id *a1)
{
  id v1;

  v1 = *a1;
  JSApplication.willResignActive()();

}

void sub_54700(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(void (*)(id *), uint64_t);
  _QWORD *v16;
  _BYTE v17[24];
  id v18;

  v2 = v1;
  v4 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  swift_retain(v4);
  ApplicationCapabilities.Controller.setNeedsNetworkReachabilityUpdate()();
  swift_release(v4);
  if (qword_14AB908 != -1)
    swift_once(&qword_14AB908, sub_7C35C0);
  swift_beginAccess(qword_1580F40 + 16, v17, 33, 0);
  sub_6C768((Swift::Int *)&v18, a1);
  swift_endAccess(v17);
  sub_7C35F8();

  v5 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "becomeActive");

    objc_msgSend((id)objc_opt_self(MPMediaLibrary), "beginDiscoveringMediaLibraries");
    v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod);
    v8 = (void *)objc_opt_self(UIApplication);
    v9 = objc_msgSend(v8, "sharedApplication");
    v10 = objc_msgSend(v9, "applicationIconBadgeNumber");

    if ((uint64_t)v10 >= 1)
    {
      v11 = objc_msgSend(v8, "sharedApplication");
      objc_msgSend(v11, "setApplicationIconBadgeNumber:", 0);

    }
    if (qword_14AB000 != -1)
      swift_once(&qword_14AB000, sub_399F54);
    v12 = (uint64_t)v10 > 0;
    sub_39A0B0(v7);
    v13 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v14 = swift_allocObject(&unk_1341778, 18, 7);
    *(_BYTE *)(v14 + 16) = v7;
    *(_BYTE *)(v14 + 17) = v12;
    v15 = *(void (**)(void (*)(id *), uint64_t))&stru_B8.segname[(swift_isaMask & *v13) + 16];
    v16 = v13;
    v15(sub_55D80, v14);

    swift_release(v14);
  }
  else
  {
    __break(1u);
  }
}

void sub_54938(id *a1, char a2, Swift::Bool a3)
{
  MusicJSCore::JSApplication::ActivationMethod v4;
  id v5;

  v4 = a2 & 1;
  v5 = *a1;
  JSApplication.willEnterForeground(with:isBadged:)(v4, a3);

}

void sub_549D8(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(void (*)(id *), uint64_t);
  _QWORD *v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE v20[24];

  v2 = v1;
  if (qword_14AB908 != -1)
    swift_once(&qword_14AB908, sub_7C35C0);
  swift_beginAccess(qword_1580F40 + 16, v20, 33, 0);
  v4 = (void *)sub_70B7BC(a1);
  swift_endAccess(v20);
  sub_7C35F8();

  v5 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v6 = objc_msgSend(v5, "connectedScenes");
  v7 = sub_4E684(0, (unint64_t *)&qword_14C5D80, UIScene_ptr);
  v8 = sub_55D8C((unint64_t *)&qword_14AD310, (unint64_t *)&qword_14C5D80, UIScene_ptr);
  v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v6, v7, v8);

  sub_54C0C(v9);
  v11 = v10;

  swift_bridgeObjectRelease(v9);
  if (v11)
    goto LABEL_6;
  v12 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "resignActive");

    objc_msgSend((id)objc_opt_self(MPMediaLibrary), "endDiscoveringMediaLibraries");
LABEL_6:
    v2[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_requiresVoiceActivationPrivacyDisclaimer] = 0;
    v14 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v15 = swift_allocObject(&unk_1341750, 24, 7);
    *(_QWORD *)(v15 + 16) = v2;
    v16 = *(void (**)(void (*)(id *), uint64_t))&stru_B8.segname[(swift_isaMask & *v14) + 16];
    v17 = v14;
    v18 = v2;
    v16(sub_55D60, v15);

    swift_release(v15);
    v19 = *BackgroundRefreshController.shared.unsafeMutableAddressor();
    swift_retain(v19);
    BackgroundRefreshController.scheduleAllTasks()();
    swift_release(v19);
    return;
  }
  __break(1u);
}

void sub_54C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id i;
  double v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  void *v29;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_4E684(0, (unint64_t *)&qword_14C5D80, UIScene_ptr);
    v5 = sub_55D8C((unint64_t *)&qword_14AD310, (unint64_t *)&qword_14C5D80, UIScene_ptr);
    v6 = Set.Iterator.init(_cocoa:)(v28, v3, v4, v5);
    v1 = v28[0];
    v26 = v28[1];
    v7 = v28[2];
    v8 = v28[3];
    v9 = v28[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v25 = v7;
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
    goto LABEL_32;
  }
  v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 < v13)
    {
      v23 = *(_QWORD *)(v26 + 8 * v22);
      v16 = v8 + 1;
      if (v23)
        goto LABEL_31;
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_36;
      v23 = *(_QWORD *)(v26 + 8 * v16);
      if (v23)
        goto LABEL_31;
      v16 = v8 + 3;
      if (v8 + 3 >= v13)
        goto LABEL_36;
      v23 = *(_QWORD *)(v26 + 8 * v16);
      if (v23)
        goto LABEL_31;
      v16 = v8 + 4;
      if (v8 + 4 >= v13)
        goto LABEL_36;
      v23 = *(_QWORD *)(v26 + 8 * v16);
      if (v23)
      {
LABEL_31:
        v14 = (v23 - 1) & v23;
        v15 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_32:
        for (i = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15); i; v14 = v9)
        {
          if (!objc_msgSend(i, "activationState", v21, v25))
            break;

          v8 = v16;
          v9 = v14;
          if ((v1 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v17 = __CocoaSet.Iterator.next()(v6);
          if (!v17)
            break;
          v18 = v17;
          v27 = v17;
          v19 = sub_4E684(0, (unint64_t *)&qword_14C5D80, UIScene_ptr);
          swift_unknownObjectRetain(v18);
          swift_dynamicCast(&v29, &v27, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
          i = v29;
          *(_QWORD *)&v21 = swift_unknownObjectRelease(v18).n128_u64[0];
          v16 = v8;
        }
        goto LABEL_36;
      }
      v16 = v8 + 5;
      if (v8 + 5 < v13)
      {
        v23 = *(_QWORD *)(v26 + 8 * v16);
        if (!v23)
        {
          v24 = v8 + 6;
          while (v13 != v24)
          {
            v23 = *(_QWORD *)(v26 + 8 * v24++);
            if (v23)
            {
              v16 = v24 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_31;
      }
    }
LABEL_36:
    sub_55D68(v1);
    return;
  }
  __break(1u);
}

void sub_54EE0(id *a1, uint64_t a2)
{
  id v3;

  v3 = *a1;
  JSApplication.didEnterBackground()();
  *(_BYTE *)(a2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod) = 0;

}

id sub_54FA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___tabBarController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___tabBarController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___tabBarController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TabBarController()), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_55014()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___splitViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___splitViewController);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___splitViewController);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for SplitViewController(0));
    v6 = sub_453468(0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

double sub_55088(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  double result;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;

  v2 = v1;
  v4 = OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + 32);
    *(_QWORD *)(v5 + 32) = a1;
    v7 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    swift_retain(v5);
    sub_B050C(v6);
    swift_release(v5);

  }
  else
  {
    v9 = type metadata accessor for AppInterfaceContext();
    swift_allocObject(v9, 120, 7);
    v10 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    v11 = sub_BC7C4(a1);

    v12 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v11;
    swift_retain(v11);
    sub_518D4(v12);
    swift_release(v11);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

void sub_5518C(void *a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  void *v6;
  id v7;
  id v8;
  char *v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  id v17;
  id v18;

  if ((Feature.UIP.isEnabled.getter(0) & 1) == 0)
  {
    v9 = (char *)objc_msgSend(a1, "userInterfaceIdiom");
    v10 = objc_msgSend(a1, "userInterfaceIdiom");
    if (v9 == (_BYTE *)&dword_0 + 1)
    {
      if (!a2 || v10 != objc_msgSend(a2, "userInterfaceIdiom"))
      {
        v11 = sub_55014();
        v12 = sub_54FA4();
        objc_msgSend(v11, "setViewController:forColumn:", v12, 3);

        v13 = *(void **)(v2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window);
        if (v13)
        {
          v14 = v13;
          v15 = sub_55014();
          objc_msgSend(v14, "setRootViewController:", v15);

        }
      }
      if (objc_msgSend(a1, "horizontalSizeClass") != (char *)&dword_0 + 1)
      {
        v5 = (unint64_t)sub_55014() | 0x4000000000000000;
        goto LABEL_16;
      }
    }
    else if (!a2 || v10 != objc_msgSend(a2, "userInterfaceIdiom"))
    {
      v16 = *(void **)(v2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window);
      if (v16)
      {
        v17 = v16;
        v18 = sub_54FA4();
        objc_msgSend(v17, "setRootViewController:", v18);

      }
    }
    v5 = (unint64_t)sub_54FA4();
    goto LABEL_16;
  }
  v5 = (unint64_t)sub_54FA4();
  v6 = *(void **)(v2 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window);
  if (v6)
  {
    v7 = v6;
    v8 = sub_54FA4();
    objc_msgSend(v7, "setRootViewController:", v8);

  }
LABEL_16:
  sub_55088(v5);

}

void sub_5534C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  NSString v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  void *v14;
  void *v15;
  id v16;
  NSString v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(void (*)(void **), uint64_t, __n128);
  _QWORD *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void **aBlock;
  uint64_t v35;
  void (*v36)(uint64_t, void *);
  void *v37;
  void (*v38)();
  uint64_t v39;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - v6;
  v8 = static StagedInstall.current()();
  if (v8 != 2 && (v8 & 1) == 0)
  {
    v32 = v2;
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v9, v10, 1);
    v33 = v0;
    v12 = v11;

    v13 = String._bridgeToObjectiveC()();
    v38 = sub_55720;
    v39 = 0;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_5FEBC;
    v37 = &block_descriptor_0;
    v14 = _Block_copy(&aBlock);
    swift_release(v39);
    v15 = (void *)objc_opt_self(UIAlertAction);
    v16 = objc_msgSend(v15, "actionWithTitle:style:handler:", v13, 2, v14);
    _Block_release(v14);

    objc_msgSend(v12, "addAction:", v16);
    v17 = String._bridgeToObjectiveC()();
    v38 = (void (*)())UIScreen.Dimensions.size.getter;
    v39 = 0;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_5FEBC;
    v37 = &block_descriptor_4;
    v18 = _Block_copy(&aBlock);
    v19 = objc_msgSend(v15, "actionWithTitle:style:handler:", v17, 0, v18, swift_release(v39).n128_f64[0]);
    _Block_release(v18);

    objc_msgSend(v12, "addAction:", v19);
    v20 = *(_QWORD *)(v33 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
    if (v20)
    {
      *(_QWORD *)v7 = v12;
      v7[8] = 1;
      *((_QWORD *)v7 + 2) = &_swiftEmptySetSingleton;
      swift_storeEnumTagMultiPayload(v7, v1, 2);
      sub_558DC((uint64_t)v7, (uint64_t)v4);
      v21 = *(unsigned __int8 *)(v32 + 80);
      v22 = (v21 + 24) & ~v21;
      v23 = (v3 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
      v24 = swift_allocObject(&unk_1341700, v23 + 16, v21 | 7);
      *(_QWORD *)(v24 + 16) = v20;
      sub_55C28((uint64_t)v4, v24 + v22);
      v25 = (_QWORD *)(v24 + v23);
      *v25 = 0;
      v25[1] = 0;
      swift_retain_n(v20, 2);
      v26 = v12;
      v27 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
      v28 = swift_allocObject(&unk_1341728, 32, 7);
      *(_QWORD *)(v28 + 16) = sub_55C6C;
      *(_QWORD *)(v28 + 24) = v24;
      v29 = *(void (**)(void (*)(void **), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v27)
                                                                                                 + 16];
      v30 = v27;
      v31 = swift_retain(v24);
      v29(sub_55CD8, v28, v31);

      swift_release(v24);
      swift_release(v28);
      sub_55CE0((uint64_t)v7);
      swift_release(v20);
    }
    else
    {

    }
  }
}

void sub_55720()
{
  exit(0);
}

id sub_55730()
{
  _BYTE *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_keyboardShortcutsManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_snapshotter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_window] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___tabBarController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate____lazy_storage___splitViewController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_privacyAcknowledgementObserver] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_requiresVoiceActivationPrivacyDisclaimer] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_scriptedApplicationActivationMethod] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppSceneDelegate();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_557EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppSceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppSceneDelegate()
{
  return objc_opt_self(_TtC16MusicApplication16AppSceneDelegate);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_558DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_55920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v6, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease(v6[1]);
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      break;
    case 2u:

      v13 = (char *)v6[2];
      goto LABEL_17;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14))
        (*(void (**)(id *, uint64_t))(v15 + 8))(v6, v14);
      v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v6 + v16[5] + 8));
      v17 = (char *)v6 + v16[6];
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = v16[7];
      goto LABEL_21;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v6 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_21:
      v26 = (id *)((char *)v6 + v20);
      if (*v26)
        swift_release(v26[1]);
      break;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v6, v25);
      v13 = *(char **)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v13 != (_BYTE *)&dword_0 + 1)
LABEL_17:
        swift_bridgeObjectRelease(v13);
      break;
    default:
      break;
  }
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_55C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_55C6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_B0D10(*(_QWORD *)(v0 + 16), v0 + v2, *v3, v3[1]);
}

uint64_t sub_55CB4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_55CD8(void **a1)
{
  uint64_t v1;

  sub_B5000(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_55CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppInterfaceContext.Activity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_55D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_55D60(id *a1)
{
  uint64_t v1;

  sub_54EE0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_55D68(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_55D70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 18, 7);
}

void sub_55D80(id *a1)
{
  uint64_t v1;

  sub_54938(a1, *(_BYTE *)(v1 + 16), *(_BYTE *)(v1 + 17));
}

uint64_t sub_55D8C(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_4E684(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_55DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_55E14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_55E38(id *a1)
{
  uint64_t v1;

  return sub_539F4(a1, *(void **)(v1 + 16));
}

uint64_t sub_55E40(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_55E74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_55E98(CGFloat *a1)
{
  uint64_t v1;

  sub_52E30(a1, v1);
}

unint64_t sub_55EA0()
{
  unint64_t result;

  result = qword_14AD350;
  if (!qword_14AD350)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_14AD350);
  }
  return result;
}

uint64_t sub_55EE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_55F10(char a1)
{
  uint64_t v1;

  sub_52F50(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_55F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14B1FC0;
  if (!qword_14B1FC0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_14B1FC0);
  }
  return result;
}

unint64_t sub_55F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14B1FD0;
  if (!qword_14B1FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14AD370);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14B1FD0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

double sub_55FF0()
{
  uint64_t v0;

  return JSDevice.configureWithRootElementSizing(_:isRequiredForInitialSetup:)(*(_QWORD *)(v0 + 16), (uint64_t)&protocol witness table for Window, 0);
}

uint64_t sub_56024(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_56060(uint64_t a1)
{
  destroy for PresentationSource(a1);
  return a1;
}

void sub_56094(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

uint64_t sub_560AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_560BC(id *a1)
{
  uint64_t v1;

  sub_39A738(a1, *(_BYTE *)(v1 + 16));
}

double sub_560C4(void *a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(double (*)(void **), uint64_t);
  id v14;
  _QWORD *v15;

  objc_opt_self(UIWindowScene);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v4 = v2;
    v5 = qword_14AB000;
    v6 = a1;
    if (v5 != -1)
      swift_once(&qword_14AB000, sub_399F54);
    v7 = *(void **)(qword_1580168 + OBJC_IVAR____TtC16MusicApplication29ApplicationMessageCoordinator_messageCoordinator);
    if (v7)
    {
      v8 = objc_allocWithZone((Class)IAMApplicationDidBecomeActiveEvent);
      v9 = v7;
      v10 = objc_msgSend(v8, "init");
      objc_msgSend(v9, "receiveEvent:", v10);

    }
    objc_msgSend((id)*JSAppReviewSegue.storeReview.unsafeMutableAddressor(), "applicationDidForeground");
    v11 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v12 = swift_allocObject(&unk_1341890, 24, 7);
    *(_QWORD *)(v12 + 16) = v4;
    v13 = *(void (**)(double (*)(void **), uint64_t))&stru_B8.segname[(swift_isaMask & *v11) + 16];
    v14 = v6;
    v15 = v11;
    v13(sub_56234, v12);

    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_56234(void **a1)
{
  uint64_t v1;

  return sub_543CC(a1, *(void **)(v1 + 16));
}

uint64_t sub_5623C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_56268(void *a1)
{
  uint64_t v1;

  sub_54438(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_56270(uint64_t a1)
{
  destroy for JSSegue.Context(a1);
  return a1;
}

uint64_t sub_562A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_562C8(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

double sub_562F8()
{
  double result;

  result = 113.777778;
  xmmword_14AD3F0 = xmmword_105F100;
  return result;
}

id sub_56310(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  objc_class *v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  objc_class *ObjectType;
  uint64_t v56;
  objc_super v57;

  v3 = v2;
  LODWORD(v54) = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = type metadata accessor for TVSeason(0);
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  __chkstk_darwin(v5);
  v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)_s10TVEpisodesVMa(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = &v2[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___headerRegistration];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B0F10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = &v3[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD4F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___collectionView] = 0;
  v20 = OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_prefetchingController;
  v21 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v22 = v3;
  *(_QWORD *)&v3[v20] = sub_53A034(0xD00000000000001ALL, 0x80000000010C4040);
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_dragDropController] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___searchController] = 0;
  v23 = &v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext];
  v24 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  sub_5BDB8(a1, (uint64_t)&v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_scope], _s10TVEpisodesV5ScopeOMa);
  v25 = (uint64_t)v15 + v13[5];
  v56 = a1;
  sub_5BDB8(a1, v25, _s10TVEpisodesV5ScopeOMa);
  type metadata accessor for MusicLibrary(0);
  *v15 = static MusicLibrary.shared.getter();
  v26 = (_QWORD *)((char *)v15 + v13[7]);
  *v26 = 0;
  v26[1] = 0xE000000000000000;
  *(_WORD *)((char *)v15 + v13[8]) = 259;
  *(_WORD *)((char *)v15 + v13[9]) = 259;
  *(_QWORD *)((char *)v15 + v13[10]) = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v15 + v13[11]) = &_swiftEmptySetSingleton;
  *((_BYTE *)v15 + v13[12]) = 7;
  v27 = (_QWORD *)((char *)v15 + v13[13]);
  *v27 = 0;
  v27[1] = 0xE000000000000000;
  *(_QWORD *)((char *)v15 + v13[14]) = _swiftEmptyArrayStorage;
  *((_BYTE *)v15 + v13[6]) = v54;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD508);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController] = sub_63F080((uint64_t)v15);

  v57.receiver = v22;
  v29 = ObjectType;
  v57.super_class = ObjectType;
  v30 = objc_msgSendSuper2(&v57, "initWithNibName:bundle:", 0, 0);
  sub_5BDB8((uint64_t)v30 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_scope, (uint64_t)v12, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload(v12, v10) == 1)
  {
    v32 = v51;
    v31 = v52;
    v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v12, v53);
    TVSeason.showName.getter(v30);
    v35 = v34;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  }
  else
  {
    v37 = v49;
    v36 = v50;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v9, v12, v50);
    TVShow.name.getter(v30);
    v35 = v38;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v36);
  }
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v30, "setTitle:", v39);

  UIViewController.playActivityFeatureIdentifier.setter(0xFu);
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD510);
  v41 = swift_allocObject(v40, 48, 7);
  v54 = xmmword_105B360;
  *(_OWORD *)(v41 + 16) = xmmword_105B360;
  v42 = sub_5AECC();
  *(_QWORD *)(v41 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = UIViewController.registerForTraitChanges<A>(_:handler:)(v41, sub_5AF10, 0, v29);
  swift_unknownObjectRelease(v43);

  swift_bridgeObjectRelease(v41);
  v44 = swift_allocObject(v40, 48, 7);
  *(_OWORD *)(v44 + 16) = v54;
  v45 = sub_5AF14();
  *(_QWORD *)(v44 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v44 + 40) = v45;
  v46 = UIViewController.registerForTraitChanges<A>(_:handler:)(v44, sub_5AF58, 0, v29);
  sub_5C0DC(v56, _s10TVEpisodesV5ScopeOMa);
  swift_unknownObjectRelease(v46);
  swift_bridgeObjectRelease(v44);

  return v30;
}

double sub_56844()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  double (**v7)();
  uint64_t v8;
  uint64_t v9;
  unint64_t (**v10)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *boxed_opaque_existential_1Tm;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  _QWORD v30[4];
  _QWORD v31[4];
  objc_super v32;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, "viewDidLoad");
  v2 = sub_56AEC();
  v3 = sub_56AEC();
  v4 = sub_728FBC((uint64_t)v3, 0, 0, 0, 0, 0);

  objc_msgSend(v2, "setCollectionViewLayout:", v4);
  v5 = sub_56AEC();
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_prefetchingController];
  objc_msgSend(v5, "setPrefetchDataSource:", v6);

  v7 = (double (**)())(v6
                     + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_defaultArtworkMetricsProvider);
  v9 = *(_QWORD *)(v6
                 + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_defaultArtworkMetricsProvider
                 + 8);
  *v7 = sub_5AF5C;
  v7[1] = 0;
  sub_5C198(v8, v9);
  v10 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v6
                                                                                        + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_artworkProvider);
  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_artworkProvider);
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_artworkProvider + 8);
  *v10 = sub_56D34;
  v10[1] = 0;
  sub_5C198(v11, v12);
  v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController];
  v14 = swift_allocObject(&unk_1341968, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v1);
  v15 = (uint64_t *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 104));
  v16 = *v15;
  v17 = v15[1];
  *v15 = (uint64_t)sub_5C190;
  v15[1] = v14;
  sub_5C198(v16, v17);
  v18 = sub_572E4();
  v19 = swift_allocObject(&unk_1341968, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  v20 = *(_QWORD *)(v18 + 72);
  v21 = *(_QWORD *)(v18 + 80);
  *(_QWORD *)(v18 + 72) = sub_5C1A8;
  *(_QWORD *)(v18 + 80) = v19;
  sub_5C198(v20, v21);
  swift_release(v18);
  v30[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_14B0F10);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v30);
  sub_57524((uint64_t)boxed_opaque_existential_1Tm);
  v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD4F8);
  v23 = __swift_allocate_boxed_opaque_existential_1Tm(v31);
  sub_57718((uint64_t)v23);
  swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
  v24 = sub_56AEC();
  v25 = swift_allocObject(&unk_1341968, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v1);
  v26 = type metadata accessor for CollectionViewDragDropController(0);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v27 = sub_84CEC8(v24, (uint64_t)sub_5C1EC, v25, 0, 0, 0, 0, 0, 0);

  swift_release(v25);
  v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_dragDropController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_dragDropController] = v27;
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

id sub_56AEC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  MusicCore::AccessibilityIdentifier v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;

  v1 = _s10TVEpisodesV5ScopeOMa(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UICollectionLayoutListConfiguration(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v0
                 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___collectionView);
  if (v14)
  {
    v15 = *(id *)(v0
                + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___collectionView);
  }
  else
  {
    v27 = OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___collectionView;
    sub_4E684(0, (unint64_t *)&unk_14AD590, UICollectionViewCompositionalLayout_ptr);
    v16 = v0;
    v26 = v1;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v5);
    UICollectionLayoutListConfiguration.init(appearance:)(v9);
    v17 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v18 = (void *)sub_AC183C(v17);

    sub_5BDB8(v16 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_scope, (uint64_t)v4, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload(v4, v26) == 1)
    {
      v19 = 0xD00000000000001ELL;
      v20 = 0x80000000010C4170;
    }
    else
    {
      v20 = 0x80000000010C4190;
      v19 = 0xD00000000000001CLL;
    }
    v21 = AccessibilityIdentifier.init(name:)(*(Swift::String *)&v19);
    sub_5C0DC((uint64_t)v4, _s10TVEpisodesV5ScopeOMa);
    v22 = UIView.withAccessibilityIdentifier(_:)(v21.rawValue._countAndFlagsBits, (uint64_t)v21.rawValue._object);

    swift_bridgeObjectRelease(v21.rawValue._object);
    v23 = *(void **)(v16 + v27);
    *(_QWORD *)(v16 + v27) = v22;
    v15 = v22;

    v14 = 0;
  }
  v24 = v14;
  return v15;
}

unint64_t sub_56D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  unint64_t result;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v34 = a2;
  v35 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD630);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DF4B0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7DF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD530);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v36, (uint64_t *)&unk_14AD640);
  if (!v37)
  {
    sub_56024((uint64_t)v36, (uint64_t *)&unk_14AD640);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_7;
  }
  v21 = swift_dynamicCast(v16, v36, (char *)&type metadata for Any + 8, v17, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v21 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_7:
    sub_56024((uint64_t)v16, &qword_14D7DF0);
    v29 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v22 = MusicLibrarySectionedResponse.sections.getter(v17);
  result = IndexPath.section.getter(v22);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v22+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * result, v7);
    v24 = swift_bridgeObjectRelease(v22);
    MusicLibrarySection.items.getter(v7, v24);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v26 = IndexPath.item.getter(v25);
    v27 = v33;
    MusicItemCollection.subscript.getter(v26, v33);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v6, v27);
    TVEpisode.artwork.getter(v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  __break(1u);
  return result;
}

double sub_57060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  double result;
  char *v13;
  uint64_t v14;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  char v27;
  char v28;
  _BYTE v29[24];
  _QWORD v30[4];
  _BYTE v31[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7DF0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD530);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (char *)Strong;
    sub_5C238(a1, (uint64_t)v6, &qword_14D7DF0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_56024((uint64_t)v6, &qword_14D7DF0);

      return result;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_prefetchingController];
    v30[3] = v7;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v30);
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v8 + 16))(boxed_opaque_existential_1Tm, v10, v7);
    v16 = v14 + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_context;
    swift_beginAccess(v16, v29, 33, 0);
    sub_5C1F4((uint64_t)v30, v16, (uint64_t *)&unk_14AD640);
    swift_endAccess(v29);
    objc_msgSend(v13, "setNeedsUpdateContentUnavailableConfiguration");
    v17 = sub_56AEC();
    objc_msgSend(v17, "reloadData");

    v18 = sub_572E4();
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      v20 = sub_572E4();
      v21 = (uint64_t *)(*(_QWORD *)(v20 + 104)
                      + OBJC_IVAR____TtCC16MusicApplication23LibrarySearchControllerP33_74DC0E8E86C2700EAF59346E7D7979E311BarDelegate_text);
      v22 = v21[1];
      if (v22)
      {
        v23 = *v21;
        v19 = swift_release(v20);
        v24 = HIBYTE(v22) & 0xF;
        if ((v22 & 0x2000000000000000) == 0)
          v24 = v23 & 0xFFFFFFFFFFFFLL;
        v25 = v24 != 0;
        v26 = *(unsigned __int8 *)(v18 + 48);
        *(_BYTE *)(v18 + 48) = v25;
        if (v26 == v25)
          goto LABEL_12;
      }
      else
      {
        v19 = swift_release(v20);
        v28 = *(_BYTE *)(v18 + 48);
        *(_BYTE *)(v18 + 48) = 0;
        if ((v28 & 1) == 0)
          goto LABEL_12;
      }
    }
    else
    {
      v27 = *(_BYTE *)(v18 + 48);
      *(_BYTE *)(v18 + 48) = 1;
      if ((v27 & 1) != 0)
      {
LABEL_12:
        (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v19);

        *(_QWORD *)&result = swift_release(v18).n128_u64[0];
        return result;
      }
    }
    sub_3C4EC0();
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_572E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___searchController;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___searchController];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___searchController];
  }
  else
  {
    v4 = v0;
    v5 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v5, 121, 7);
    v6 = v0;
    v3 = sub_3C5484(0, 0, 0, (uint64_t)v6);

    v7 = *(_QWORD *)&v4[v1];
    *(_QWORD *)&v4[v1] = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

double sub_5737C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t Strong;
  double result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v6 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v22[-v10 - 8];
  a3 += 16;
  swift_beginAccess(a3, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController);
    swift_retain(v15);

    if (a2)
      v16 = a1;
    else
      v16 = 0;
    if (a2)
      v17 = a2;
    else
      v17 = 0xE000000000000000;
    v18 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
    swift_beginAccess(v18, v23, 0, 0);
    sub_5BDB8(v18, (uint64_t)v11, _s10TVEpisodesVMa);
    v19 = &v11[*(int *)(v6 + 28)];
    v20 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v20);
    *v19 = v16;
    v19[1] = v17;
    sub_5BDB8(v18, (uint64_t)v8, _s10TVEpisodesVMa);
    swift_beginAccess(v18, v22, 33, 0);
    sub_5B2FC((uint64_t)v11, v18);
    swift_endAccess(v22);
    sub_6342E8(v8);
    sub_5C0DC((uint64_t)v11, _s10TVEpisodesVMa);
    sub_5C0DC((uint64_t)v8, _s10TVEpisodesVMa);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_57524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD620);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_5C238(v9, (uint64_t)v8, (uint64_t *)&unk_14AD620);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B0F10);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_56024((uint64_t)v8, (uint64_t *)&unk_14AD620);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1341968, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_4E684(0, (unint64_t *)&qword_14B5260, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_5C118, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_5C1F4((uint64_t)v5, v9, (uint64_t *)&unk_14AD620);
  return swift_endAccess(v18);
}

uint64_t sub_57718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD5B8);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration, v20, 0, 0);
  sub_5C238(v11, (uint64_t)v10, &qword_14AD5B8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD4F8);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_56024((uint64_t)v10, &qword_14AD5B8);
  v14 = swift_allocObject(&unk_1341968, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v2);
  v15 = swift_allocObject(&unk_1341A30, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_4E684(0, (unint64_t *)&unk_14AD5C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for TVEpisode(0);
  UICollectionView.CellRegistration.init(handler:)(sub_5BF08, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_5C1F4((uint64_t)v7, v11, &qword_14AD5B8);
  return swift_endAccess(v19);
}

void sub_57928(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  char v41[24];
  char v42[24];

  v6 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F98C0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TVEpisode(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    goto LABEL_4;
  v20 = (char *)Strong;
  v40 = a3;
  v21 = OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController;
  sub_7B0B40(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_56024((uint64_t)v14, &qword_14F98C0);

    a3 = v40;
LABEL_4:
    v22 = type metadata accessor for DragItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v23 = *(_QWORD *)&v20[v21] + *(_QWORD *)(**(_QWORD **)&v20[v21] + 96);
  swift_beginAccess(v23, v41, 0, 0);
  sub_5BDB8(v23, (uint64_t)v8, _s10TVEpisodesVMa);
  sub_4CCEF4((uint64_t)v11);
  sub_5C0DC((uint64_t)v8, _s10TVEpisodesVMa);
  v24 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24);
  if ((_DWORD)v26 == 1)
  {
    sub_56024((uint64_t)v11, &qword_14AE6E0);
    v27 = 0;
  }
  else
  {
    v27 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v26);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v24);
  }
  v39 = v27;
  v28 = sub_451C50(v27);
  v29 = sub_452934(v28, (uint64_t)&off_133AC10);
  swift_bridgeObjectRelease(v28);
  v30 = sub_30C014((uint64_t)v29);
  v31 = type metadata accessor for DragItem(0);
  v32 = v40;
  v33 = (char *)v40 + *(int *)(v31 + 20);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v18, v15);
  v34 = enum case for GenericMusicItem.tvEpisode(_:);
  v35 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
  v36 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v33, v36, 1);
  v37 = swift_bridgeObjectRelease(v29);
  *v32 = v30;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(v31 - 8) + 56))(v32, 0, 1, v31, v37);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);

}

void sub_57E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t KeyPath;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  _QWORD v43[2];
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _BYTE v50[24];
  _BYTE v51[24];

  v46 = a4;
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v45 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v44 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v11);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD530);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DF4B0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)v43 - v23;
  a5 += 16;
  swift_beginAccess(a5, v51, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v26 = (void *)Strong;
    v43[1] = a1;
    v27 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController)
        + *(_QWORD *)(**(_QWORD **)(Strong
                                  + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController)
                    + 112);
    v28 = swift_beginAccess(v27, v50, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 48))(v27, 1, v14, v28))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v27, v14);
      v29 = MusicLibrarySectionedResponse.sections.getter(v14);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v31 = IndexPath.section.getter(v30);
      if ((v31 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v31 < *(_QWORD *)(v29 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v21, v29+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v31, v18);
        v32 = swift_bridgeObjectRelease(v29);
        (*(void (**)(char *, char *, uint64_t, __n128))(v19 + 32))(v24, v21, v18, v32);
        KeyPath = swift_getKeyPath(&unk_105F198);
        MusicLibrarySection.subscript.getter(&v48, KeyPath, v18);
        if ((v49 & 1) != 0)
        {
          swift_release(KeyPath);
          v34 = 0;
          v35 = 0xE000000000000000;
        }
        else
        {
          v36 = v48;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
          v37._countAndFlagsBits = 0x206E6F73616553;
          v37._object = (void *)0xE700000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
          v47 = v36;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v47, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v38._countAndFlagsBits = 0;
          v38._object = (void *)0xE000000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v38);
          v39 = v44;
          v40 = String.LocalizationValue.init(stringInterpolation:)(v13);
          v41 = v45;
          static Locale.current.getter(v40);
          v34 = String.init(localized:table:bundle:locale:comment:)(v39, 0, 0, 0, v41, 0, 0, 256);
          v35 = v42;
          swift_release(KeyPath);
        }
        sub_7E1CB8(v34, v35, &v48);
        swift_bridgeObjectRelease(v35);
        UICollectionViewCell.contentConfiguration.setter(&v48);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
        goto LABEL_9;
      }
      __break(1u);
      return;
    }
LABEL_9:

  }
}

void sub_581C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  double v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[5];
  _BYTE v33[24];

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0F80);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v31 - v15;
  a4 += 16;
  swift_beginAccess(a4, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v18 = (void *)Strong;
    v31[1] = a1;
    __chkstk_darwin(Strong);
    v31[-4] = a3;
    v31[-3] = v19;
    v31[-2] = a2;
    v31[-1] = a5;
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5D0);
    v21 = _s8ListCellVMa(255);
    v22 = sub_4DD24((unint64_t *)&unk_14B0F90, _s8ListCellVMa, (uint64_t)&unk_1086240);
    v32[0] = v21;
    v32[1] = v22;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v24 = UIHostingConfiguration<>.init(content:)(sub_5BF10, &v31[-6], v20, OpaqueTypeConformance2);
    v25 = static Edge.Set.horizontal.getter(v24);
    v26 = (char *)sub_56AEC();
    v27 = *(double *)&v26[OBJC_IVAR____TtC16MusicApplication23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v25, v10, v27);
    v28 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v29 = v28(v13, v10);
    v30 = static Edge.Set.vertical.getter(v29);
    v32[3] = v10;
    v32[4] = sub_5C150((unint64_t *)&unk_14AD5E0, (uint64_t *)&unk_14B0F80, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1Tm(v32);
    UIHostingConfiguration.margins(_:_:)(v30, v10, 8.0);
    v28(v16, v10);
    UICollectionViewCell.contentConfiguration.setter(v32);

  }
}

uint64_t sub_583F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSString *v55;
  __n128 v56;
  int v57;
  int *v58;
  uint64_t v59;
  char *v60;
  NSString *v61;
  int v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  __n128 v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[56];

  v89 = a3;
  v99 = a2;
  v97 = a4;
  v5 = type metadata accessor for IndexPath(0);
  v95 = *(_QWORD *)(v5 - 8);
  v96 = v5;
  __chkstk_darwin(v5);
  v91 = v6;
  v92 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TVEpisode(0);
  v83 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v85 = v7;
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD1E0);
  v10 = __chkstk_darwin(v9);
  v98 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for Date.FormatStyle.TimeStyle(0, v10);
  v77 = *(_QWORD *)(v78 - 8);
  v12 = __chkstk_darwin(v78);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for Date.FormatStyle.DateStyle(0, v12);
  v15 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5F0);
  __chkstk_darwin(v18);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  __chkstk_darwin(v24);
  v26 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v27);
  v29 = (char *)&v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = _s8ListCellVMa(0);
  __chkstk_darwin(v87);
  v86 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5D0);
  v93 = *(_QWORD *)(v31 - 8);
  v94 = v31;
  __chkstk_darwin(v31);
  v90 = (char *)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  TVEpisode.artworkViewModel.getter(v26);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 5, 10, v33);
  if (qword_14AA8B0 != -1)
    swift_once(&qword_14AA8B0, sub_562F8);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(xmmword_14AD3F0, 0, *((uint64_t *)&xmmword_14AD3F0 + 1), 0, 0x3FFC71C71C71C71CLL, 0, 2, (uint64_t)v100);
  v34 = Corner.small.unsafeMutableAddressor();
  v35 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v26, (uint64_t)v23, 0, 1, (uint64_t)v100, *v34, v34[1], *((_BYTE *)v34 + 16), (uint64_t)v29);
  v82 = TVEpisode.title.getter(v35);
  v81 = v36;
  TVEpisode.releaseDate.getter();
  v37 = type metadata accessor for Date(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v20, 1, v37);
  v84 = v29;
  if (v39 == 1)
  {
    sub_56024((uint64_t)v20, (uint64_t *)&unk_14AD5F0);
    v80 = 0;
    v79 = 0;
  }
  else
  {
    v40 = static Date.FormatStyle.DateStyle.long.getter();
    static Date.FormatStyle.TimeStyle.omitted.getter(v40);
    v80 = Date.formatted(date:time:)(v17, v14);
    v79 = v41;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v14, v78);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v76);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v37);
  }
  v42 = type metadata accessor for ContentRating(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v98, 1, 1, v42);
  v43 = swift_allocObject(&unk_1341968, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v99);
  v44 = v83;
  v45 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v8, a1, v88);
  v47 = v95;
  v46 = v96;
  v48 = v8;
  v49 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v92, v89, v96);
  v50 = *(unsigned __int8 *)(v44 + 80);
  v51 = (v50 + 24) & ~v50;
  v52 = *(unsigned __int8 *)(v47 + 80);
  v53 = (v85 + v52 + v51) & ~v52;
  v54 = swift_allocObject(&unk_1341A58, v53 + v91, v50 | v52 | 7);
  *(_QWORD *)(v54 + 16) = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v54 + v51, v48, v45);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v54 + v53, v49, v46);
  swift_retain(v43);
  v55 = UIFontTextStyleBody;
  v57 = static HierarchicalShapeStyle.primary.getter(v56);
  v59 = (uint64_t)v86;
  v58 = (int *)v87;
  v60 = &v86[*(int *)(v87 + 36)];
  *((_QWORD *)v60 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v60 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v60 + 2) = v57;
  v61 = UIFontTextStyleSubheadline;
  v62 = static HierarchicalShapeStyle.secondary.getter();
  *((_QWORD *)v60 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v60 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v60 + 14) = v62;
  *(_QWORD *)v60 = v55;
  *((_QWORD *)v60 + 6) = v61;
  v60[96] = 0;
  sub_5C04C((uint64_t)v84, v59, type metadata accessor for ArtworkImage.Info);
  v63 = (uint64_t *)(v59 + v58[5]);
  v64 = v81;
  *v63 = v82;
  v63[1] = v64;
  v65 = (uint64_t *)(v59 + v58[6]);
  v66 = v79;
  *v65 = v80;
  v65[1] = v66;
  *(_BYTE *)(v59 + v58[7]) = 0;
  sub_5C090(v98, v59 + v58[8], (uint64_t *)&unk_14CD1E0);
  v67 = (_QWORD *)(v59 + v58[10]);
  *v67 = sub_5BCF0;
  v67[1] = v54;
  v68 = (_QWORD *)(v59 + v58[11]);
  *v68 = swift_getKeyPath(&unk_105F168);
  v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v68, v69, 0);
  swift_release(v43);
  v70 = *(_QWORD *)(*(_QWORD *)(v99
                              + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_prefetchingController)
                  + OBJC_IVAR____TtC16MusicApplication28ArtworkPrefetchingController_cachingReference);
  sub_4DD24((unint64_t *)&qword_14AD610, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_107A160);
  sub_4DD24((unint64_t *)&unk_14B0F90, _s8ListCellVMa, (uint64_t)&unk_1086240);
  v71 = swift_retain(v70);
  v72 = v90;
  View.artworkCaching(owner:)(v71);
  sub_5C0DC(v59, _s8ListCellVMa);
  v73 = swift_release(v70);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v93 + 32))(v97, v72, v94, v73);
}

uint64_t sub_58B50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BB530);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = v1
      + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1+ OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext, v38, 0, 0);
  sub_5C238(v15, (uint64_t)v14, &qword_14BB530);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
    return sub_5C04C((uint64_t)v14, (uint64_t)a1, type metadata accessor for Actions.MetricsReportingContext);
  v34 = a1;
  sub_56024((uint64_t)v14, &qword_14BB530);
  v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  sub_5C238((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_14AE6F0);
  v19 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_53F8B4();
  v32 = v21;
  v33 = v20;
  v22 = qword_14AB568;
  v31 = (id)*v19;
  if (v22 != -1)
    swift_once(&qword_14AB568, sub_5BC10C);
  swift_beginAccess(&static UIApplication.groupActivitiesManager, v37, 0, 0);
  v23 = static UIApplication.groupActivitiesManager;
  swift_retain(static UIApplication.groupActivitiesManager);
  v24 = GroupActivitiesManager.hasJoined.getter();
  v25 = GroupActivitiesManager.participantsCount.getter();
  v26 = (uint64_t *)(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v36, 0, 0);
  v27 = *v26;

  swift_release(v23);
  v30 = v27;
  v28 = v34;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v5, v33, v32, 0, 0, v24 & 1, v34, v25, v30);
  sub_56024((uint64_t)v8, (uint64_t *)&unk_14AE6F0);
  sub_5BDB8((uint64_t)v28, (uint64_t)v11, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
  swift_beginAccess(v15, v35, 33, 0);
  sub_5C1F4((uint64_t)v11, v15, &qword_14BB530);
  return swift_endAccess(v35);
}

uint64_t sub_58FC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v14;
  char v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B0F10);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v11 == a2 && v12 == a3)
    goto LABEL_7;
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, a2, a3, 0);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
  {
    strcpy((char *)v20, "Unknown kind=");
    HIWORD(v20[1]) = -4864;
    v16._countAndFlagsBits = a2;
    v16._object = a3;
    String.append(_:)(v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v20[0], v20[1], "MusicApplication/LibraryTVEpisodesViewController.swift", 54, 2, 178, 0);
    __break(1u);
LABEL_7:
    swift_bridgeObjectRelease(a3);
  }
  sub_57524((uint64_t)v10);
  v17 = sub_4E684(0, (unint64_t *)&qword_14B5260, UICollectionViewCell_ptr);
  v18 = UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v10, a4, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

void *sub_59258(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD4F8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F98C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  sub_7B0B40(a2, (uint64_t)&v19 - v11);
  sub_57718((uint64_t)v6);
  v13 = (void *)sub_B4F190((uint64_t)v6, a2, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_5C238((uint64_t)v12, (uint64_t)v9, &qword_14F98C0);
  v14 = type metadata accessor for TVEpisode(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    sub_56024((uint64_t)v9, &qword_14F98C0);
    v19 = 0u;
    v20 = 0u;
    v21 = 0;
  }
  else
  {
    *((_QWORD *)&v20 + 1) = v14;
    v21 = sub_4DD24(&qword_14AD5B0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
    v16 = __swift_allocate_boxed_opaque_existential_1Tm(&v19);
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 32))(v16, v9, v14);
  }
  v17 = sub_39B9D8((uint64_t)&v19);
  sub_56024((uint64_t)v12, &qword_14F98C0);
  sub_56024((uint64_t)&v19, (uint64_t *)&unk_14B0AD0);

  return v17;
}

uint64_t sub_595F0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Class isa;
  char *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t *v50;
  uint64_t v51;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint8_t *v57;
  void (**v58)(char *, _QWORD, uint64_t);
  uint64_t v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint8_t *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  objc_class *v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  void *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void (**v127)(char *, _QWORD, uint64_t);
  uint8_t *v128;
  uint64_t v129;
  char *v130;
  char v131[24];
  __int128 v132;
  __int128 v133;
  uint64_t v134;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v6);
  v122 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v8);
  v114 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v108);
  v110 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v11);
  v120 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0);
  __chkstk_darwin(v13);
  v121 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v16 = *(_QWORD *)(v15 - 8);
  v123 = v15;
  v124 = v16;
  __chkstk_darwin(v15);
  v109 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v18);
  v117 = (uint64_t)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for PlaybackIntentDescriptor(0);
  v118 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v112 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = v20;
  __chkstk_darwin(v21);
  v113 = (uint64_t)&v104 - v22;
  v126 = type metadata accessor for GenericMusicItem(0);
  v23 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v25 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v127 = *(void (***)(char *, _QWORD, uint64_t))(v129 - 8);
  __chkstk_darwin(v129);
  v27 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v128 = (uint8_t *)&v104 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F98C0);
  __chkstk_darwin(v30);
  v107 = (uint64_t)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v125 = (char *)&v104 - v33;
  __chkstk_darwin(v34);
  v36 = (char *)&v104 - v35;
  v37 = type metadata accessor for TVEpisode(0);
  v38 = *(_QWORD **)(v37 - 8);
  __chkstk_darwin(v37);
  v119 = (uint8_t *)&v104 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v130 = (char *)&v104 - v41;
  v42 = a2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

  v44 = v3;
  v45 = objc_msgSend(v3, "navigationItem");
  v46 = objc_msgSend(v45, "searchController");

  if (v46)
  {
    v47 = objc_msgSend(v46, "searchBar");

    objc_msgSend(v47, "resignFirstResponder");
  }
  v48 = *(_QWORD *)&v44[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController];
  sub_7B0B40(v42, (uint64_t)v36);
  v49 = (unsigned int (*)(char *, uint64_t, uint64_t))v38[6];
  if (v49(v36, 1, v37) == 1)
  {
    v50 = &qword_14F98C0;
    v51 = (uint64_t)v36;
    return sub_56024(v51, v50);
  }
  v105 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
  v106 = v44;
  v53 = (void (*)(char *, char *, uint64_t))v38[4];
  v54 = v130;
  v53(v130, v36, v37);
  v55 = (void (*)(char *, char *, uint64_t))v38[2];
  v55(v25, v54, v37);
  v56 = v126;
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for GenericMusicItem.tvEpisode(_:), v126);
  v115 = v38;
  v57 = v128;
  sub_AD2764((uint64_t)v25, (uint64_t)v128);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v56);
  v58 = v127;
  v59 = v129;
  v127[13](v27, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v129);
  v60 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v57, v27);
  v61 = (void (*)(char *, uint64_t))v58[1];
  v61(v27, v59);
  if ((v60 & 1) != 0)
  {
    v127 = (void (**)(char *, _QWORD, uint64_t))v53;
    v62 = (uint64_t)v125;
    v63 = v130;
    v55(v125, v130, v37);
    v64 = v115;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v115[7])(v62, 0, 1, v37);
    v65 = v48 + *(_QWORD *)(*(_QWORD *)v48 + 96);
    swift_beginAccess(v65, v131, 0, 0);
    v66 = v120;
    sub_5BDB8(v65, v120, _s10TVEpisodesVMa);
    v67 = v121;
    sub_4CD564(v62, v121);
    v68 = v67;
    sub_5C0DC(v66, _s10TVEpisodesVMa);
    v70 = v123;
    v69 = v124;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v68, 1, v123) == 1)
    {
      v71 = v64;
      v72 = v63;
      sub_56024(v68, &qword_14AE6E0);
      v73 = 1;
      v74 = v118;
      v75 = v117;
      v76 = v116;
    }
    else
    {
      v82 = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v109, v68, v70);
      v83 = (uint64_t)v110;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v110, v82, v70);
      swift_storeEnumTagMultiPayload(v83, v108, 1);
      v84 = v107;
      sub_5C238(v62, v107, &qword_14F98C0);
      v85 = v105(v84, 1, v37);
      v86 = v106;
      v74 = v118;
      if (v85 == 1)
      {
        v87 = v37;
        sub_56024(v84, &qword_14F98C0);
        v132 = 0u;
        v133 = 0u;
        v134 = 0;
      }
      else
      {
        *((_QWORD *)&v133 + 1) = v37;
        v134 = sub_4DD24(&qword_14F98A0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
        v88 = __swift_allocate_boxed_opaque_existential_1Tm(&v132);
        v87 = v37;
        ((void (*)(_QWORD *, uint64_t, uint64_t))v127)(v88, v84, v37);
      }
      v89 = v86;
      v103 = (objc_class *)v86;
      v75 = v117;
      PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v83, (uint64_t)&v132, 3, 0, 0, 1, 0, 1, v117, v103);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v82, v70);
      v73 = 0;
      v76 = v116;
      v37 = v87;
      v72 = v130;
      v71 = v115;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, v73, 1, v76);
    sub_56024((uint64_t)v125, &qword_14F98C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v75, 1, v76) == 1)
    {
      v61((char *)v128, v129);
      ((void (*)(char *, uint64_t))v71[1])(v72, v37);
      v50 = (uint64_t *)&unk_14B0AC0;
      v51 = v75;
      return sub_56024(v51, v50);
    }
    v127 = (void (**)(char *, _QWORD, uint64_t))v37;
    v90 = v113;
    sub_5C04C(v75, v113, type metadata accessor for PlaybackIntentDescriptor);
    v91 = type metadata accessor for TaskPriority(0);
    v92 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v114, 1, 1, v91);
    v93 = v112;
    sub_5BDB8(v90, v112, type metadata accessor for PlaybackIntentDescriptor);
    type metadata accessor for MainActor(0);
    v95 = static MainActor.shared.getter(v94);
    v96 = *(unsigned __int8 *)(v74 + 80);
    v97 = (v96 + 32) & ~v96;
    v98 = (v111 + v97 + 7) & 0xFFFFFFFFFFFFFFF8;
    v99 = (v98 + 15) & 0xFFFFFFFFFFFFFFF8;
    v100 = swift_allocObject(&unk_1341A08, v99 + 16, v96 | 7);
    *(_QWORD *)(v100 + 16) = v95;
    *(_QWORD *)(v100 + 24) = &protocol witness table for MainActor;
    sub_5C04C(v93, v100 + v97, type metadata accessor for PlaybackIntentDescriptor);
    *(_QWORD *)(v100 + v98) = 0;
    v101 = (_QWORD *)(v100 + v99);
    *v101 = 0;
    v101[1] = 0;
    v102 = sub_2223C8(v92, (uint64_t)&unk_14AD200, v100);
    swift_release(v102);
    sub_5C0DC(v90, type metadata accessor for PlaybackIntentDescriptor);
    v61((char *)v128, v129);
    return ((uint64_t (*)(char *, void (**)(char *, _QWORD, uint64_t)))v115[1])(v130, v127);
  }
  else
  {
    v77 = v119;
    v78 = v130;
    v55((char *)v119, v130, v37);
    v79 = type metadata accessor for IndexPath(0);
    v80 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v122, 1, 1, v79);
    sub_7B24FC(v80, (uint64_t)&v132);
    sub_56024(v80, (uint64_t *)&unk_14AD540);
    sub_B8868C(v57, v77, (uint64_t)&v132);
    sub_56060((uint64_t)&v132);
    v61((char *)v57, v59);
    v81 = (void (*)(char *, uint64_t))v115[1];
    v81(v78, v37);
    return ((uint64_t (*)(uint8_t *, uint64_t))v81)(v77, v37);
  }
}

uint64_t sub_5A100(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for TVEpisode(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return sub_4A30C0((uint64_t)v5);
}

unint64_t sub_5A170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  char *v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  _BYTE v55[72];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[10];
  _OWORD v60[10];
  _QWORD v61[12];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BB530);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD550);
  __chkstk_darwin(v13);
  v53 = (unint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0);
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v58, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v22 = (char *)Strong;
  v50 = a4;
  v52 = v12;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD560);
  inited = swift_initStackObject(v23, &v57);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  v25 = type metadata accessor for TVEpisode(0);
  *(_QWORD *)(inited + 56) = v25;
  *(_QWORD *)(inited + 64) = sub_4DD24(&qword_14F98A0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v51 = inited + 32;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((_QWORD *)(inited + 32));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(boxed_opaque_existential_1Tm, a3, v25);
  v27 = *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController]
      + *(_QWORD *)(**(_QWORD **)&v22[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController]
                  + 96);
  swift_beginAccess(v27, &v56, 0, 0);
  sub_5BDB8(v27, (uint64_t)v17, _s10TVEpisodesVMa);
  sub_4CCEF4((uint64_t)v20);
  sub_5C0DC((uint64_t)v17, _s10TVEpisodesVMa);
  v28 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v20, 1, v28);
  if ((_DWORD)v30 == 1)
  {
    sub_56024((uint64_t)v20, &qword_14AE6E0);
    v31 = 0;
  }
  else
  {
    v31 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v30);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v28);
  }
  v33 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v53, 1, 1, v33);
  v34 = v22;
  v35 = objc_msgSend(v34, "traitCollection");
  v36 = sub_5AF14();
  UITraitCollection.subscript.getter(v61, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v36);

  v37 = v61[0];
  v38 = v52;
  sub_58B50(v52);
  v39 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
  memset(v61, 0, 80);
  v40 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v9, v50, v40);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v9, 0, 1, v40);
  sub_7B24FC((uint64_t)v9, (uint64_t)v55);
  sub_56024((uint64_t)v9, (uint64_t *)&unk_14AD540);
  if (qword_14AB558 != -1)
    swift_once(&qword_14AB558, sub_5BBDBC);
  v42 = qword_14AB570;
  v43 = (id)static UIApplication.playbackController;
  if (v42 != -1)
    swift_once(&qword_14AB570, sub_5BC224);
  swift_beginAccess(&static UIApplication.collaborationManager, &v54, 0, 0);
  v44 = static UIApplication.collaborationManager;
  swift_retain(static UIApplication.collaborationManager);
  v45 = v52;
  sub_8AAF64(inited, v31, v53, v37, v43, v44, (unint64_t)v52, (uint64_t)v61, v59, (uint64_t)v55, 1);
  sub_5C090((uint64_t)v59, (uint64_t)v60, (uint64_t *)&unk_14AD570);
  if (*((_QWORD *)&v60[0] + 1))
  {
    v60[7] = v60[2];
    v60[8] = v60[3];
    v60[9] = v60[4];
    v60[5] = v60[0];
    v60[6] = v60[1];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C06C0);
    v32 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_5BD0C((uint64_t)v59);
  }
  else
  {
    v32 = 0;
  }
  sub_56024((uint64_t)v55, (uint64_t *)&unk_14AD380);
  sub_56024((uint64_t)v45, &qword_14BB530);
  sub_56024(v53, (uint64_t *)&unk_14AD550);
  swift_release(v37);

  swift_release(v44);
  swift_setDeallocating(inited);
  v46 = *(_QWORD *)(inited + 16);
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD580);
  swift_arrayDestroy(v51, v46, v47);

  return v32;
}

uint64_t sub_5A938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  void *v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7DF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD530);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController)
     + *(_QWORD *)(**(_QWORD **)(v1
                               + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController)
                 + 112);
  swift_beginAccess(v9, v15, 0, 0);
  sub_5C238(v9, (uint64_t)v4, &qword_14D7DF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_56024((uint64_t)v4, &qword_14D7DF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (MusicLibrarySectionedResponse.isEmpty.getter())
    {
      *((_QWORD *)&v13 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
      v14 = &protocol witness table for UIContentUnavailableConfiguration;
      v10 = __swift_allocate_boxed_opaque_existential_1Tm(&v12);
      sub_7B278C((uint64_t)v10);
      UIViewController.contentUnavailableConfiguration.setter(&v12);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  return UIViewController.contentUnavailableConfiguration.setter(&v12);
}

id DeviceCapabilitiesObjC.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_5ACE4()
{
  return type metadata accessor for LibraryTVEpisodesViewController(0);
}

uint64_t type metadata accessor for LibraryTVEpisodesViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_14AD4D0;
  if (!qword_14AD4D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryTVEpisodesViewController);
  return result;
}

void sub_5AD28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[9];

  sub_5AE2C(319, (unint64_t *)&unk_14AD4E0, &qword_14B0F10);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_5AE2C(319, &qword_14AD4F0, &qword_14AD4F8);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = _s10TVEpisodesV5ScopeOMa(319);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        v10[3] = "\b";
        v10[4] = (char *)&value witness table for Builtin.NativeObject + 64;
        v10[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v10[6] = "\b";
        v10[7] = "\b";
        sub_5AE78(319);
        if (v9 <= 0x3F)
        {
          v10[8] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 9, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_5AE2C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_5AE78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14AD500)
  {
    v2 = type metadata accessor for Actions.MetricsReportingContext(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14AD500);
  }
}

unint64_t sub_5AECC()
{
  unint64_t result;

  result = qword_14B0F50;
  if (!qword_14B0F50)
  {
    result = swift_getWitnessTable(&unk_106D834, &type metadata for LibraryFilterTrait);
    atomic_store(result, (unint64_t *)&qword_14B0F50);
  }
  return result;
}

unint64_t sub_5AF14()
{
  unint64_t result;

  result = qword_14AD520;
  if (!qword_14AD520)
  {
    result = swift_getWitnessTable(&unk_106D88C, &type metadata for MusicLibraryTrait);
    atomic_store(result, (unint64_t *)&qword_14AD520);
  }
  return result;
}

double sub_5AF5C()
{
  double v0;
  id v1;

  if (qword_14AA8B0 != -1)
    swift_once(&qword_14AA8B0, sub_562F8);
  v0 = *(double *)&xmmword_14AD3F0;
  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v1, "displayScale");

  return v0;
}

uint64_t sub_5AFFC(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE v16[24];
  _QWORD v17[3];

  v2 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v5);
  v8 = &v16[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_5AECC();
  UITraitCollection.subscript.getter(v17, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v11);

  v12 = v17[0];
  v13 = sub_A448E8(v17[0]);
  swift_bridgeObjectRelease(v12);
  v14 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v14, v17, 0, 0);
  sub_5BDB8(v14, (uint64_t)v8, _s10TVEpisodesVMa);
  v8[*(int *)(v2 + 24)] = v13 & 1;
  sub_5BDB8(v14, (uint64_t)v4, _s10TVEpisodesVMa);
  swift_beginAccess(v14, v16, 33, 0);
  sub_5B2FC((uint64_t)v8, v14);
  swift_endAccess(v16);
  sub_6342E8(v4);
  sub_5C0DC((uint64_t)v8, _s10TVEpisodesVMa);
  return sub_5C0DC((uint64_t)v4, _s10TVEpisodesVMa);
}

uint64_t sub_5B18C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  _QWORD v16[3];

  v2 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)&v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v5);
  v8 = &v15[-v7];
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController];
  v10 = objc_msgSend(a1, "traitCollection", v6);
  v11 = sub_5AF14();
  UITraitCollection.subscript.getter(v16, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v11);

  v12 = v16[0];
  v13 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 96);
  swift_beginAccess(v13, v16, 0, 0);
  sub_5BDB8(v13, (uint64_t)v8, _s10TVEpisodesVMa);
  swift_release(*v8);
  *v8 = v12;
  sub_5BDB8(v13, (uint64_t)v4, _s10TVEpisodesVMa);
  swift_beginAccess(v13, v15, 33, 0);
  sub_5B2FC((uint64_t)v8, v13);
  swift_endAccess(v15);
  sub_6342E8(v4);
  sub_5C0DC((uint64_t)v8, _s10TVEpisodesVMa);
  return sub_5C0DC((uint64_t)v4, _s10TVEpisodesVMa);
}

uint64_t sub_5B2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10TVEpisodesVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_5B340(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25[8];
  char v26[8];
  char v27[24];

  v24 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD630);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DF4B0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD530);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController)
      + *(_QWORD *)(**(_QWORD **)(v1
                                + OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_responseController)
                  + 112);
  v14 = swift_beginAccess(v13, v27, 0, 0);
  v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(v13, 1, v9, v14))
    return v15;
  v16 = v5;
  v17 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v18 = MusicLibrarySectionedResponse.sections.getter(v9);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v18 + 16) > v24)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24, v16);
    v20 = swift_bridgeObjectRelease(v18);
    MusicLibrarySection.items.getter(v16, v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v16);
    v21 = sub_5C150(&qword_14AD638, &qword_14AD630, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v17);
    dispatch thunk of Collection.endIndex.getter(v17, v21);
    v15 = dispatch thunk of Collection.distance(from:to:)(v26, v25, v17, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v17);
    return v15;
  }
  __break(1u);
  return result;
}

id sub_5B5A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, double);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  id v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  double v51;
  Class v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  Class isa;
  void (*v61)(char *, char *, uint64_t);
  void (*v62)(char *, char *, uint64_t);
  void (*v63)(uint64_t, char *, uint64_t);
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void **aBlock;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t (*v74)();
  uint64_t v75;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F98C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVEpisode(0);
  v69 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v69 + 64);
  __chkstk_darwin(v5);
  v66 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v65 = (char *)&v53 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v53 - v21;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v16 + 56))(v14, 1, 1, v15, v20);
    goto LABEL_6;
  }
  v64 = v19;
  v67 = v11;
  v23 = v5;
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = a1 + ((v24 + 32) & ~v24);
  v26 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  v26(v14, v25, v15, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    v28 = (uint64_t *)&unk_14AD540;
    v29 = (uint64_t)v14;
    goto LABEL_7;
  }
  v62 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v63 = (void (*)(uint64_t, char *, uint64_t))v26;
  v62(v22, v14, v15);
  sub_7B0B40((uint64_t)v22, (uint64_t)v4);
  v27 = v69;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v4, 1, v23) != 1)
  {
    v57 = ~v24;
    v61 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v61(v67, v4, v23);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v54 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v32 = v65;
    v54(v65, v67, v23);
    v33 = *(unsigned __int8 *)(v27 + 80);
    v34 = (v33 + 16) & ~v33;
    v55 = v33 | 7;
    v56 = swift_allocObject(&unk_1341940, v34 + v6, v33 | 7);
    v61((char *)(v56 + v34), v32, v23);
    v35 = swift_allocObject(&unk_1341968, 24, 7);
    v36 = v22;
    v59 = v22;
    v65 = (char *)v35;
    swift_unknownObjectWeakInit(v35 + 16, v68);
    v37 = v23;
    v38 = v66;
    v58 = v37;
    v54(v66, v67, v37);
    v63((uint64_t)v64, v36, v15);
    v39 = (v33 + 24) & ~v33;
    v40 = (v6 + v24 + v39) & v57;
    v41 = swift_allocObject(&unk_1341990, v40 + v17, v55 | v24);
    v42 = v65;
    *(_QWORD *)(v41 + 16) = v65;
    v61((char *)(v41 + v39), v38, v37);
    v62((char *)(v41 + v40), v64, v15);
    v43 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v44 = v56;
    v74 = sub_5BC9C;
    v75 = v56;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_873228;
    v73 = &block_descriptor_1;
    v45 = _Block_copy(&aBlock);
    v46 = v75;
    v47 = v42;
    swift_retain(v42);
    v48 = v44;
    swift_retain(v44);
    swift_release(v46);
    v74 = sub_5BCF0;
    v75 = v41;
    aBlock = _NSConcreteStackBlock;
    v71 = 1107296256;
    v72 = sub_B88614;
    v73 = &block_descriptor_10;
    v49 = _Block_copy(&aBlock);
    v50 = v75;
    swift_retain(v41);
    *(_QWORD *)&v51 = swift_release(v50).n128_u64[0];
    v52 = isa;
    v30 = objc_msgSend(v43, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v45, v49, v51);

    swift_release(v48);
    swift_release(v41);
    _Block_release(v49);
    _Block_release(v45);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v58);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v15);
    swift_release(v47);
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
  v28 = &qword_14F98C0;
  v29 = (uint64_t)v4;
LABEL_7:
  sub_56024(v29, v28);
  return 0;
}

void sub_5BADC()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___headerRegistration];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B0F10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___listCellRegistration];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD4F8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___collectionView] = 0;
  v6 = OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_prefetchingController;
  v7 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  *(_QWORD *)&v1[v6] = sub_53A034(0xD00000000000001ALL, 0x80000000010C4040);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController_dragDropController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___searchController] = 0;
  v8 = &v1[OBJC_IVAR____TtC16MusicApplication31LibraryTVEpisodesViewController____lazy_storage___actionMetricsReportingContext];
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/LibraryTVEpisodesViewController.swift", 54, 2, 265, 0);
  __break(1u);
}

uint64_t sub_5BC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TVEpisode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_5BC9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TVEpisode(0) - 8) + 80);
  return sub_5A100(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_5BCC8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_1(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_5BD0C(uint64_t a1)
{
  sub_5BD54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

void sub_5BD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_release(a10);

  }
}

uint64_t sub_5BDB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_5BDFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {

  }
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v10[3])
    __swift_destroy_boxed_opaque_existential_1(v10);

  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

uint64_t sub_5BEE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_5BF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_581C8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_5BF10@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_583F8(v1[2], v1[3], v1[4], a1);
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for TVEpisode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_5BFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for TVEpisode(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_5A170(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_5C04C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_5C090(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_5C0DC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_5C118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_57E18(a1, a2, a3, a4, v4);
}

uint64_t sub_5C120@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = TVSeason.number.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_5C150(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

double sub_5C190(uint64_t a1)
{
  uint64_t v1;

  return sub_57060(a1, v1);
}

uint64_t sub_5C198(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

double sub_5C1A8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_5737C(a1, a2, v2);
}

_QWORD *__swift_allocate_boxed_opaque_existential_1Tm(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

void sub_5C1EC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_57928(a1, v2, a2);
}

uint64_t sub_5C1F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_5C238(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_5C284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaAlbumMetadata), "init");
  _s8MusicKit5AlbumV0A11ApplicationE10storyTitleSSSgvg_0();
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setName:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  _s8MusicKit5AlbumV0A11ApplicationE13storySubtitleSSSgvg_0();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setArtist:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  Album.catalogID.getter(v13);
  if (v14)
  {
    v16 = v14;
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v6, "setStoreIdentifier:", v17, v15);

  v18 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v5, v1, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for GenericMusicItem.album(_:), v2);
  v19 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, "setArtwork:", v19);

  v20 = objc_allocWithZone((Class)LPLinkMetadata);
  v21 = v6;
  v22 = objc_msgSend(v20, "init");
  objc_msgSend(v22, "setSpecialization:", v21);

  _s8MusicKit5AlbumV0A11ApplicationE10storyTitleSSSgvg_0();
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setTitle:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  return v22;
}

id sub_5C49C()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __int128 v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  _BYTE v15[8];
  uint64_t v16;
  id v17[4];
  id v18;
  id v19;
  id v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD650);
  v1 = __chkstk_darwin(v0);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  GenericMusicItem.artwork.getter(v1);
  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_56024((uint64_t)v3, (uint64_t *)&unk_14AD650);
    v6 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  }
  else
  {
    v6 = sub_5D5A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  GenericMusicItem.artworkPlaceholder.getter((uint64_t)v15);
  if (qword_14AA910 != -1)
    swift_once(&qword_14AA910, sub_9FA18);
  v7 = xmmword_157F5F0;
  sub_5F0F0();
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v8, *(double *)&v7, *((double *)&v7 + 1));
  v10 = v9;

  sub_5C090((uint64_t)v15, (uint64_t)&v20, &qword_14AD660);
  sub_5F12C(&v20);
  sub_5C090((uint64_t)&v16, (uint64_t)&v19, &qword_14AD660);
  sub_5F12C(&v19);
  sub_5C090((uint64_t)v17, (uint64_t)&v18, &qword_14AEE30);
  sub_5F12C(&v18);

  if (v10)
  {
    v11 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v10);

  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v6, 0, v11);

  return v12;
}

id sub_5C6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v23;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaArtistMetadata), "init");
  Artist.name.getter(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  Artist.catalogID.getter(v9);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v13, v11);

  v14 = Artist.genreNames.getter();
  v15 = (NSString)v14;
  if (v14)
  {
    if (*(_QWORD *)(v14 + 16))
    {
      v16 = *(_QWORD *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v15);
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      swift_bridgeObjectRelease(v14);
      v15 = 0;
    }
  }
  objc_msgSend(v5, "setGenre:", v15);

  v17 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v4, v0, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.artist(_:), v1);
  v18 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v18);

  v19 = objc_allocWithZone((Class)LPLinkMetadata);
  v20 = v5;
  v21 = objc_msgSend(v19, "init");
  objc_msgSend(v21, "setSpecialization:", v20);

  return v21;
}

id sub_5C8EC()
{
  return sub_5D7C0((Class *)LPiTunesUserProfileMetadata_ptr, (void (*)(void))&Composer.name.getter, (uint64_t (*)(_QWORD))&type metadata accessor for Composer, (unsigned int *)&enum case for GenericMusicItem.composer(_:));
}

id sub_5C920()
{
  return sub_5D7C0((Class *)LPiTunesUserProfileMetadata_ptr, (void (*)(void))&Curator.name.getter, (uint64_t (*)(_QWORD))&type metadata accessor for Curator, (unsigned int *)&enum case for GenericMusicItem.curator(_:));
}

id sub_5C954()
{
  return sub_5D7C0((Class *)LPiTunesUserProfileMetadata_ptr, (void (*)(void))&Genre.name.getter, (uint64_t (*)(_QWORD))&type metadata accessor for Genre, (unsigned int *)&enum case for GenericMusicItem.genre(_:));
}

id sub_5C988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v23;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaMusicVideoMetadata), "init");
  MusicVideo.title.getter(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  MusicVideo.artistName.getter();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setArtist:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  MusicVideo.catalogID.getter(v12);
  if (v13)
  {
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v16, v14);

  v17 = type metadata accessor for MusicVideo(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v4, v0, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.musicVideo(_:), v1);
  v18 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v18);

  v19 = objc_allocWithZone((Class)LPLinkMetadata);
  v20 = v5;
  v21 = objc_msgSend(v19, "init");
  objc_msgSend(v21, "setSpecialization:", v20);

  return v21;
}

id sub_5CB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaMovieMetadata), "init");
  MusicMovie.title.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  MusicMovie.catalogID.getter(v9);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v13, v11);

  v14 = type metadata accessor for MusicMovie(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v4, v0, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.musicMovie(_:), v1);
  v15 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v15);

  v16 = objc_allocWithZone((Class)LPLinkMetadata);
  v17 = v5;
  v18 = objc_msgSend(v16, "init");
  objc_msgSend(v18, "setSpecialization:", v17);

  return v18;
}

id sub_5CD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for GenericMusicItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata), "init");
  _s8MusicKit8PlaylistV0A11ApplicationE10storyTitleSSSgvg_0();
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setName:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  _s8MusicKit8PlaylistV0A11ApplicationE13storySubtitleSSSgvg_0();
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v6, "setCurator:", v13, v11);

  Playlist.catalogID.getter(v14);
  if (v15)
  {
    v17 = v15;
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v6, "setStoreIdentifier:", v18, v16);

  v19 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for GenericMusicItem.playlist(_:), v2);
  v20 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, "setArtwork:", v20);

  v21 = objc_allocWithZone((Class)LPLinkMetadata);
  v22 = v6;
  v23 = objc_msgSend(v21, "init");
  objc_msgSend(v23, "setSpecialization:", v22);

  _s8MusicKit8PlaylistV0A11ApplicationE10storyTitleSSSgvg_0();
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setTitle:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  return v23;
}

id sub_5CF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaRadioMetadata), "init");
  RadioShow.name.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  RadioShow.hostName.getter(v9);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v5, "setCurator:", v13, v11);

  v14 = type metadata accessor for RadioShow(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v4, v0, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.radioShow(_:), v1);
  v15 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v15);

  v16 = objc_allocWithZone((Class)LPLinkMetadata);
  v17 = v5;
  v18 = objc_msgSend(v16, "init");
  objc_msgSend(v18, "setSpecialization:", v17);

  return v18;
}

id sub_5D0E4()
{
  return sub_5D7C0((Class *)LPiTunesUserProfileMetadata_ptr, (void (*)(void))&RecordLabel.name.getter, (uint64_t (*)(_QWORD))&type metadata accessor for RecordLabel, (unsigned int *)&enum case for GenericMusicItem.recordLabel(_:));
}

id sub_5D118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesUserProfileMetadata), "init");
  SocialProfile.name.getter(v5);
  if (v6)
  {
    v8 = v6;
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v5, "setName:", v9, v7);

  v10 = type metadata accessor for SocialProfile(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v4, v0, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.socialProfile(_:), v1);
  v11 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v11);

  v12 = objc_allocWithZone((Class)LPLinkMetadata);
  v13 = v5;
  v14 = objc_msgSend(v12, "init");
  objc_msgSend(v14, "setSpecialization:", v13);

  return v14;
}

id sub_5D294()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  __int128 v12;
  __int128 v13;
  id v14;
  __int128 v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  __int128 v25;
  _OWORD v26[2];
  id v27;
  id v28;
  id v29;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD650);
  __chkstk_darwin(v0);
  v2 = (char *)&v26[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend(objc_allocWithZone((Class)LPiTunesUserProfileMetadata), "init");
  SocialProfileDescriptor.name.getter();
  if (v4)
  {
    v6 = v4;
    v7 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v3, "setName:", v7, v5);

  SocialProfileDescriptor.artwork.getter();
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) == 1)
  {
    sub_56024((uint64_t)v2, (uint64_t *)&unk_14AD650);
    v10 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  }
  else
  {
    v10 = sub_5D5A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v2, v8);
  }
  v11 = Artwork.Placeholder.person.unsafeMutableAddressor();
  v13 = *((_OWORD *)v11 + 1);
  v12 = *((_OWORD *)v11 + 2);
  v25 = *(_OWORD *)v11;
  v26[0] = v13;
  v26[1] = v12;
  sub_5C090((uint64_t)&v25, (uint64_t)&v27, &qword_14AD660);
  sub_5C090((uint64_t)&v25 + 8, (uint64_t)&v28, &qword_14AD660);
  sub_5C090((uint64_t)v26, (uint64_t)&v29, &qword_14AEE30);
  v14 = *((id *)&v26[0] + 1);
  sub_5F430(&v27);
  sub_5F430(&v28);
  sub_5F430(&v29);
  if (qword_14AA910 != -1)
    swift_once(&qword_14AA910, sub_9FA18);
  v15 = xmmword_157F5F0;
  sub_5F0F0();
  v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v16, *(double *)&v15, *((double *)&v15 + 1));
  v18 = v17;

  sub_5F12C(&v27);
  sub_5F12C(&v28);
  sub_5F12C(&v29);

  if (v18)
  {
    v19 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v18);

  }
  else
  {
    v19 = 0;
  }
  v20 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v10, 0, v19);

  objc_msgSend(v3, "setArtwork:", v20);
  v21 = objc_allocWithZone((Class)LPLinkMetadata);
  v22 = v3;
  v23 = objc_msgSend(v21, "init");
  objc_msgSend(v23, "setSpecialization:", v22);

  return v23;
}

id sub_5D5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  __n128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v23[2];
  _QWORD aBlock[5];
  uint64_t v25;

  v0 = type metadata accessor for Artwork(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  v3 = __chkstk_darwin(v0);
  v4 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UTType(0, v3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  if (qword_14AA910 != -1)
    swift_once(&qword_14AA910, sub_9FA18);
  v11 = xmmword_157F5F0;
  v12 = static UTType.png.getter(v10);
  UTType.identifier.getter(v12);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = String._bridgeToObjectiveC()();
  v16 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 16))((char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v23[1], v0, v16);
  v17 = *(unsigned __int8 *)(v1 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v2 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1341BE8, v19 + 16, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v20 + v18, v4, v0);
  *(_OWORD *)(v20 + v19) = v11;
  aBlock[4] = sub_5F1C0;
  v25 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5EFB4;
  aBlock[3] = &block_descriptor_2;
  v21 = _Block_copy(aBlock);
  objc_msgSend(v9, "registerItemForTypeIdentifier:loadHandler:", v15, v21, swift_release(v25).n128_f64[0]);
  _Block_release(v21);

  return v9;
}

id sub_5D7C0(Class *a1, void (*a2)(void), uint64_t (*a3)(_QWORD), unsigned int *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v23;

  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone(*a1), "init");
  a2();
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setName:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v17 = a3(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v4, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *a4, v9);
  v18 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v13, "setArtwork:", v18);

  v19 = objc_allocWithZone((Class)LPLinkMetadata);
  v20 = v13;
  v21 = objc_msgSend(v19, "init");
  objc_msgSend(v21, "setSpecialization:", v20);

  return v21;
}

id sub_5D938()
{
  return sub_5D7C0((Class *)LPiTunesMediaRadioMetadata_ptr, (void (*)(void))&Station.name.getter, (uint64_t (*)(_QWORD))&type metadata accessor for Station, (unsigned int *)&enum case for GenericMusicItem.station(_:));
}

id sub_5D96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v28;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaSongMetadata), "init");
  _s8MusicKit4SongV0A11ApplicationE10storyTitleSSSgvg_0();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  _s8MusicKit4SongV0A11ApplicationE13storySubtitleSSSgvg_0();
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setArtist:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

  Song.albumTitle.getter(v12);
  if (v13)
  {
    v15 = v13;
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v5, "setAlbum:", v16, v14);

  Song.catalogID.getter(v17);
  if (v18)
  {
    v20 = v18;
    v21 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v21, v19);

  v22 = type metadata accessor for Song(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v4, v0, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.song(_:), v1);
  v23 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v23);

  v24 = objc_allocWithZone((Class)LPLinkMetadata);
  v25 = v5;
  v26 = objc_msgSend(v24, "init");
  objc_msgSend(v26, "setSpecialization:", v25);

  return v26;
}

id sub_5DB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  int v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  NSString v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t *v41;
  __int128 v42;
  __int128 v43;
  id v44;
  __int128 v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v55;
  char *v56;
  __int128 v57;
  _OWORD v58[2];
  id v59;
  id v60;
  id v61;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD650);
  __chkstk_darwin(v2);
  v56 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicVideo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Track(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, v1, v12, v14);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v16, v8);
    v18 = sub_5D96C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v55 = v13;
    if (v17 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v55 + 96))(v16, v12);
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v16, v4);
      v18 = sub_5C988();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v19 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaSongMetadata), "init");
      Track.title.getter(v19);
      v21 = v20;
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "setName:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

      Track.artistName.getter(v23);
      v25 = v24;
      v26 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "setArtist:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

      Track.albumTitle.getter(v27);
      if (v28)
      {
        v30 = v28;
        v31 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
      }
      else
      {
        v31 = 0;
      }
      v32 = (uint64_t)v56;
      objc_msgSend(v19, "setAlbum:", v31, v29, v55);

      Track.catalogID.getter();
      if (v33)
      {
        v35 = v33;
        v36 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v34 = swift_bridgeObjectRelease(v35).n128_u64[0];
      }
      else
      {
        v36 = 0;
      }
      objc_msgSend(v19, "setStoreIdentifier:", v36, v34);

      Track.artwork.getter(v37);
      v38 = type metadata accessor for Artwork(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38) == 1)
      {
        sub_56024(v32, (uint64_t *)&unk_14AD650);
        v40 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
      }
      else
      {
        v40 = sub_5D5A0();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v32, v38);
      }
      v41 = Artwork.Placeholder.music.unsafeMutableAddressor();
      v43 = *((_OWORD *)v41 + 1);
      v42 = *((_OWORD *)v41 + 2);
      v57 = *(_OWORD *)v41;
      v58[0] = v43;
      v58[1] = v42;
      sub_5C090((uint64_t)&v57, (uint64_t)&v59, &qword_14AD660);
      sub_5C090((uint64_t)&v57 + 8, (uint64_t)&v60, &qword_14AD660);
      sub_5C090((uint64_t)v58, (uint64_t)&v61, &qword_14AEE30);
      v44 = *((id *)&v58[0] + 1);
      sub_5F430(&v59);
      sub_5F430(&v60);
      sub_5F430(&v61);
      if (qword_14AA910 != -1)
        swift_once(&qword_14AA910, sub_9FA18);
      v45 = xmmword_157F5F0;
      sub_5F0F0();
      v46 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
      Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v46, *(double *)&v45, *((double *)&v45 + 1));
      v48 = v47;

      sub_5F12C(&v59);
      sub_5F12C(&v60);
      sub_5F12C(&v61);

      if (v48)
      {
        v49 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v48);

      }
      else
      {
        v49 = 0;
      }
      v50 = v55;
      v51 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v40, 0, v49);

      objc_msgSend(v19, "setArtwork:", v51);
      v52 = objc_allocWithZone((Class)LPLinkMetadata);
      v53 = v19;
      v18 = objc_msgSend(v52, "init");
      objc_msgSend(v18, "setSpecialization:", v53);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v12);
    }
  }
  return v18;
}

id sub_5E0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaTVEpisodeMetadata), "init");
  TVEpisode.title.getter(v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setEpisodeName:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  TVEpisode.showName.getter();
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setSeasonName:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  TVEpisode.catalogID.getter(v13);
  if (v14)
  {
    v16 = v14;
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v17, v15);

  v18 = type metadata accessor for TVEpisode(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v4, v0, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.tvEpisode(_:), v1);
  v19 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v19);

  v20 = objc_allocWithZone((Class)LPLinkMetadata);
  v21 = v5;
  v22 = objc_msgSend(v20, "init");
  objc_msgSend(v22, "setSpecialization:", v21);

  return v22;
}

id sub_5E2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaTVSeasonMetadata), "init");
  TVSeason.showName.getter(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  TVSeason.catalogID.getter(v9);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v13, v11);

  v14 = type metadata accessor for TVSeason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v4, v0, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.tvSeason(_:), v1);
  v15 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v15);

  v16 = objc_allocWithZone((Class)LPLinkMetadata);
  v17 = v5;
  v18 = objc_msgSend(v16, "init");
  objc_msgSend(v18, "setSpecialization:", v17);

  return v18;
}

id sub_5E464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;

  v1 = type metadata accessor for GenericMusicItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)LPAppleMusicTVShowMetadata), "init");
  TVShow.name.getter(v5);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setName:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  TVShow.catalogID.getter(v9);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v5, "setStoreIdentifier:", v13, v11);

  v14 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v4, v0, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for GenericMusicItem.tvShow(_:), v1);
  v15 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "setArtwork:", v15);

  v16 = objc_allocWithZone((Class)LPLinkMetadata);
  v17 = v5;
  v18 = objc_msgSend(v16, "init");
  objc_msgSend(v18, "setSpecialization:", v17);

  return v18;
}

id sub_5E610()
{
  return sub_5E644((void (*)(void))&UploadedAudio.title.getter, (void (*)(void))&UploadedAudio.artistName.getter, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, (unsigned int *)&enum case for GenericMusicItem.uploadedAudio(_:));
}

id sub_5E644(void (*a1)(void), void (*a2)(void), uint64_t (*a3)(_QWORD), unsigned int *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v27;

  v9 = type metadata accessor for GenericMusicItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaSongMetadata), "init");
  a1();
  if (v14)
  {
    v16 = v14;
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v13, "setName:", v17, v15);

  a2();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setArtist:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = a3(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v12, v4, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *a4, v9);
  v22 = sub_5C49C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v13, "setArtwork:", v22);

  v23 = objc_allocWithZone((Class)LPLinkMetadata);
  v24 = v13;
  v25 = objc_msgSend(v23, "init");
  objc_msgSend(v25, "setSpecialization:", v24);

  return v25;
}

id sub_5E800()
{
  return sub_5E644((void (*)(void))&UploadedVideo.title.getter, (void (*)(void))&UploadedVideo.artistName.getter, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, (unsigned int *)&enum case for GenericMusicItem.uploadedVideo(_:));
}

void sub_5E834(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v12);
    v20 = *(unsigned __int8 *)(v13 + 80);
    v21 = (v20 + 32) & ~v20;
    v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_1341C60, v23 + 16, v20 | 7);
    *(_QWORD *)(v24 + 16) = 0;
    *(_QWORD *)(v24 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
    v25 = (double *)(v24 + v22);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v24 + v23);
    *v26 = a1;
    v26[1] = a2;
    swift_retain(a2);
    v27 = sub_2223C8((uint64_t)v18, (uint64_t)&unk_14AD670, v24);
    swift_release(v27);
  }
}

uint64_t sub_5E9B8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(double *)(v8 + 48) = a1;
  *(double *)(v8 + 56) = a2;
  *(_QWORD *)(v8 + 40) = a6;
  v9 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v8 + 80) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 96) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  *(_QWORD *)(v8 + 104) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 112) = v12;
  *(_QWORD *)(v8 + 120) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE700);
  *(_QWORD *)(v8 + 128) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
  *(_QWORD *)(v8 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_5EA90, 0, 0);
}

uint64_t sub_5EA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v3, "displayScale");
  v5 = v4;

  v6 = type metadata accessor for Artwork.CropStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  v7 = type metadata accessor for Artwork.ImageFormat(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
  *(_QWORD *)(v0 + 144) = v8;
  *v8 = v0;
  v8[1] = sub_5EB88;
  return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128), 0, 0, *(double *)(v0 + 48), *(double *)(v0 + 56), 1.0 / v5);
}

uint64_t sub_5EB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 136);
  v4 = *(_QWORD *)(*v2 + 144);
  v6 = *(_QWORD *)(*v2 + 128);
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc(v4);
  sub_56024(v6, (uint64_t *)&unk_14AE700);
  sub_56024(v5, &qword_14AD680);
  if (v1)
    v7 = sub_5ECE4;
  else
    v7 = sub_5EC20;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_5EC20()
{
  uint64_t v0;
  NSData *v1;
  NSData *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  NSData v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = UIImagePNGRepresentation(*(UIImage **)(v0 + 152));
  if (v1)
  {
    v2 = v1;
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    v6.super.isa = Data._bridgeToObjectiveC()().super.isa;
    sub_50C60(v3, v5);
  }
  else
  {
    v6.super.isa = 0;
  }
  v7 = *(void **)(v0 + 152);
  (*(void (**)(Class, _QWORD))(v0 + 64))(v6.super.isa, 0);

  swift_unknownObjectRelease(v6.super.isa);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_5ECE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = Logger.musicKit.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v9, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v1, v7);
  swift_errorRetain(v2);
  v10 = swift_errorRetain(v2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 160);
    v39 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 104);
    v41 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 80);
    v37 = *(_QWORD *)(v0 + 88);
    v16 = swift_slowAlloc(22, -1);
    v38 = swift_slowAlloc(64, -1);
    v42 = v38;
    *(_DWORD *)v16 = 136446466;
    v17 = sub_5F3E8();
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v15, v17);
    v20 = v19;
    *(_QWORD *)(v0 + 16) = sub_23EAC8(v18, v19, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    v21 = swift_bridgeObjectRelease(v20);
    (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v14, v15, v21);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v13;
    swift_errorRetain(v13);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v23 = String.init<A>(describing:)(v0 + 24, v22);
    v25 = v24;
    *(_QWORD *)(v0 + 32) = sub_23EAC8(v23, v24, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v25);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    _os_log_impl(&dword_0, v11, v12, "Error generating UIImage from MusicKit.Artwork=%{public}s, error=%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v38, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_errorRelease(v13);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 104);
    v31 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(v26);
    swift_errorRelease(v26);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    swift_errorRelease(v26);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }

  v33 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 120);
  v35 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_5EFB4(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(void *, uint64_t, uint64_t, uint64_t, __n128);
  void *v8;
  uint64_t v9;
  __n128 v10;
  double result;

  v7 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  if (v8)
  {
    v9 = swift_allocObject(&unk_1341C38, 24, 7);
    *(_QWORD *)(v9 + 16) = v8;
    v8 = sub_5F278;
    if (!ObjCClassMetadata)
      goto LABEL_4;
    goto LABEL_3;
  }
  v9 = 0;
  if (ObjCClassMetadata)
LABEL_3:
    ObjCClassMetadata = swift_getObjCClassMetadata(ObjCClassMetadata);
LABEL_4:
  if (a4)
    a4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v10 = swift_retain(v6);
  v7(v8, v9, ObjCClassMetadata, a4, v10);
  swift_bridgeObjectRelease(a4);
  sub_5C198((uint64_t)v8, v9);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_5F098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

unint64_t sub_5F0F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14B7160;
  if (!qword_14B7160)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14B7160);
  }
  return result;
}

id *sub_5F12C(id *a1)
{

  return a1;
}

uint64_t sub_5F154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Artwork(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_5F1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  double *v11;

  v9 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (double *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_5E834(a1, a2, *v11, v11[1], a3, a4, v4 + v10);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_2(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_5F254()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_5F278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_5F098(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_5F280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Artwork(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_5F31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (double *)(v1 + v6);
  v12 = *v11;
  v13 = v11[1];
  v14 = v1 + v7;
  v15 = *(_QWORD *)(v1 + v7);
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (_QWORD *)swift_task_alloc(dword_14AD66C);
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_50F8C;
  return sub_5E9B8(v12, v13, a1, v8, v9, v10, v15, v16);
}

unint64_t sub_5F3E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AD688;
  if (!qword_14AD688)
  {
    v1 = type metadata accessor for Artwork(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Artwork, v1);
    atomic_store(result, (unint64_t *)&qword_14AD688);
  }
  return result;
}

id *sub_5F430(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id JSUserNotificationAuthorizationViewController.__allocating_init(with:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_60684(a1);

  return v4;
}

id JSUserNotificationAuthorizationViewController.init(with:)(void *a1)
{
  id v2;

  v2 = sub_60684(a1);

  return v2;
}

id UIStackView.SpacerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

void JSUserNotificationAuthorizationViewController.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_engagementViewController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/JSUserNotificationAuthorizationViewController.swift", 68, 2, 26, 0);
  __break(1u);
}

Swift::Void __swiftcall JSUserNotificationAuthorizationViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "viewDidLoad");
  v2 = objc_msgSend(v0, "navigationController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setModalInPresentation:", (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & **(_QWORD **)&v0[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_userNotificationAuthorizationViewModel]])() & 1);

  }
  v4 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_engagementViewController];
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v1, "view");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v5, "view");
      objc_msgSend(v7, "addSubview:", v8);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_5F72C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(void (*)(void *), uint64_t);
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD v31[3];
  char v32[8];
  uint64_t v33;
  char v34[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    if (a2)
    {
      swift_errorRetain(a2);
      if (qword_14AA8B8 != -1)
        swift_once(&qword_14AA8B8, sub_60600);
      v8 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v8, (uint64_t)qword_14AD6A0);
      swift_errorRetain(a2);
      v9 = swift_errorRetain(a2);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(12, -1);
        v13 = swift_slowAlloc(32, -1);
        v33 = v13;
        *(_DWORD *)v12 = 136315138;
        swift_getErrorValue(a2, v32, v31);
        v14 = Error.localizedDescription.getter(v31[1], v31[2]);
        v16 = v15;
        v30 = sub_23EAC8(v14, v15, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
        swift_bridgeObjectRelease(v16);
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl(&dword_0, v10, v11, "Authorization failed with error: %s", v12, 0xCu);
        swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v13, -1, -1);
        swift_slowDealloc(v12, -1, -1);
      }
      else
      {
        swift_errorRelease(a2);
        swift_errorRelease(a2);
      }

      v22 = *(_QWORD **)&v7[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_userNotificationAuthorizationViewModel];
      v23 = swift_allocObject(&unk_1341C88, 24, 7);
      swift_unknownObjectWeakInit(v23 + 16, v7);
      v24 = *(void (**)(void (*)(void *), uint64_t))&stru_108.segname[(swift_isaMask & *v22) + 8];
      swift_retain(v23);
      v24(sub_60874, v23);
      swift_release_n(v23, 2);
      swift_errorRelease(a2);
    }
    else if (a1 && (v17 = objc_msgSend(a1, "request")) != 0)
    {
      v18 = v17;
      sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
      v19 = swift_allocObject(&unk_1341CD8, 32, 7);
      *(_QWORD *)(v19 + 16) = v18;
      *(_QWORD *)(v19 + 24) = v7;
      v20 = v18;
      v21 = v7;
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_6086C, v19);

      swift_release(v19);
    }
    else
    {
      if (qword_14AA8B8 != -1)
        swift_once(&qword_14AA8B8, sub_60600);
      v25 = type metadata accessor for Logger(0);
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_14AD6A0);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_0, v27, v28, "Authorization request is missing.", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

    }
  }
}

void sub_5FAD8(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  sub_4E684(0, (unint64_t *)&qword_14BA520, ICStoreRequestContext_ptr);
  v4 = (void *)static ICStoreRequestContext.storeFlow.getter();
  v5 = objc_msgSend(objc_allocWithZone((Class)ICAMSBagAdapter), "initWithRequestContext:", v4);

  v6 = objc_msgSend(objc_allocWithZone((Class)AMSUIEngagementTaskViewController), "initWithRequest:bag:", a1, v5);
  v7 = objc_msgSend(v6, "navigationItem");
  objc_msgSend(v7, "setHidesBackButton:animated:", 1, 0);

  v13 = v6;
  sub_608B8(v6);

  objc_msgSend(a2, "addChildViewController:", v13);
  if (!objc_msgSend(a2, "isViewLoaded"))
    goto LABEL_5;
  v8 = objc_msgSend(v13, "view");
  v9 = objc_msgSend(a2, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "bounds");
    objc_msgSend(v8, "setFrame:");

    v11 = objc_msgSend(a2, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "addSubview:", v8);

LABEL_5:
      objc_msgSend(v13, "didMoveToParentViewController:", a2);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_5FCA8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *oslog;
  int v11;
  uint64_t v12;

  if (objc_msgSend(a1, "authorizationStatus") == (char *)&dword_0 + 2)
  {
    v1 = objc_msgSend((id)objc_opt_self(ICMusicAccountNotificationsSettingsManager), "sharedManager");
    objc_msgSend(v1, "setAccountNotificationsArtistContentFeature:withCompletionHandler:", 1, 0);

    if (qword_14AA8B8 != -1)
      swift_once(&qword_14AA8B8, sub_60600);
    v2 = type metadata accessor for Logger(0);
    v3 = __swift_project_value_buffer(v2, (uint64_t)qword_14AD6A0);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v5 = 67109120;
      v11 = 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
      _os_log_impl(&dword_0, oslog, v4, "Attempting to update account notification settings. Notifications enabled: %{BOOL}d.", v5, 8u);
      swift_slowDealloc(v5, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_14AA8B8 != -1)
      swift_once(&qword_14AA8B8, sub_60600);
    v6 = type metadata accessor for Logger(0);
    v7 = __swift_project_value_buffer(v6, (uint64_t)qword_14AD6A0);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_0, oslog, v8, "Did not update account notification settings. User did not authorize device notifications.", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
  }

}

void sub_5FEBC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_5FF0C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *Strong;
  id v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _BYTE v27[32];
  uint64_t v28;
  _BYTE v29[72];
  _BYTE v30[56];
  _BYTE v31[72];
  _BYTE v32[24];
  _OWORD v33[2];
  uint64_t v34;
  char v35;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    v9 = objc_msgSend(v8, "presentingViewController");

    if (v9)
    {
      if (a1)
      {
        v10 = (char *)v8;
        v8 = a1;
        v11 = objc_msgSend(v10, "navigationController");

        if (v11)
        {
          memset(v33, 0, sizeof(v33));
          v34 = 0;
          v35 = -1;
          v12 = v11;
          PresentationSource.init(viewController:position:)(v12, (uint64_t)v33, (uint64_t)v31);
          v13 = *(void **)&v10[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_userNotificationAuthorizationViewModel];
          sub_6087C((uint64_t)v31, (uint64_t)v29);
          v14 = type metadata accessor for PlaybackIntentDescriptor(0);
          memset(v27, 0, sizeof(v27));
          v28 = 0;
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
          v15 = v13;
          sub_90615C((uint64_t)v13, (uint64_t)v29, 0, (uint64_t)v27, (uint64_t)v6, 0, 0, (uint64_t)v30);
          v16 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
          JSSegueCoordinator.perform(segue:with:)((uint64_t)v8, (uint64_t)v30);

          sub_56270((uint64_t)v30);
          sub_56060((uint64_t)v31);

          return;
        }
        if (qword_14AA8B8 != -1)
          swift_once(&qword_14AA8B8, sub_60600);
        v22 = type metadata accessor for Logger(0);
        v23 = __swift_project_value_buffer(v22, (uint64_t)qword_14AD6A0);
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v26 = 0;
          _os_log_impl(&dword_0, v24, v25, "AuthorizationViewController does not have a navigationController, dismissing prewarm sheet.", v26, 2u);
          swift_slowDealloc(v26, -1, -1);
        }

        objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
      }
      else
      {
        objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
        if (qword_14AA8B8 != -1)
          swift_once(&qword_14AA8B8, sub_60600);
        v17 = type metadata accessor for Logger(0);
        v18 = __swift_project_value_buffer(v17, (uint64_t)qword_14AD6A0);
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.default.getter(v19);
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v21 = 0;
          _os_log_impl(&dword_0, v19, v20, "No segue provided from scripting environment, dismissing prewarm sheet.", v21, 2u);
          swift_slowDealloc(v21, -1, -1);
        }

      }
    }

  }
}

uint64_t sub_60284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(void (*)(void *), uint64_t);
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;
  _BYTE v23[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v23, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = (char *)result;
    if (a2)
    {
      swift_errorRetain(a2);
      if (qword_14AA8B8 != -1)
        swift_once(&qword_14AA8B8, sub_60600);
      v7 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v7, (uint64_t)qword_14AD6A0);
      swift_errorRetain(a2);
      v8 = swift_errorRetain(a2);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(12, -1);
        v12 = swift_slowAlloc(32, -1);
        v22 = v12;
        *(_DWORD *)v11 = 136315138;
        swift_getErrorValue(a2, v21, v20);
        v13 = Error.localizedDescription.getter(v20[1], v20[2]);
        v15 = v14;
        v19 = sub_23EAC8(v13, v14, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
        swift_bridgeObjectRelease(v15);
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl(&dword_0, v9, v10, "startEngagement failed with error: %s", v11, 0xCu);
        swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);
      }
      else
      {
        swift_errorRelease(a2);
        swift_errorRelease(a2);
      }
      swift_errorRelease(a2);

    }
    else
    {
      sub_609BC();
    }
    v16 = *(_QWORD **)&v6[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_userNotificationAuthorizationViewModel];
    v17 = swift_allocObject(&unk_1341C88, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v6);
    v18 = *(void (**)(void (*)(void *), uint64_t))&stru_108.segname[(swift_isaMask & *v16) + 8];
    swift_retain(v17);
    v18(sub_60874, v17);

    return swift_release_n(v17, 2);
  }
  return result;
}

id JSUserNotificationAuthorizationViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void JSUserNotificationAuthorizationViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.JSUserNotificationAuthorizationViewController", 62, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_60600()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14AD6A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_14AD6A0);
  sub_4E684(0, (unint64_t *)&qword_14E8620, OS_os_log_ptr);
  v1 = OS_os_log.init(musicCategory:)(0xD000000000000027, 0x80000000010C43C0);
  return Logger.init(_:)(v1);
}

id sub_60684(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[5];
  uint64_t v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_engagementViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_userNotificationAuthorizationViewModel] = a1;
  v14.receiver = v1;
  v14.super_class = ObjectType;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v14, "initWithNibName:bundle:", 0, 0);
  v6 = (void *)objc_opt_self(AMSUserNotificationAuthorizationTask);
  v7 = v5;
  v8 = objc_msgSend(v6, "engagementRequestForFullSheet");
  v9 = swift_allocObject(&unk_1341C88, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v7);
  v12[4] = sub_60808;
  v13 = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_21B54C;
  v12[3] = &block_descriptor_3;
  v10 = _Block_copy(v12);
  objc_msgSend(v8, "addFinishBlock:", v10, swift_release(v13).n128_f64[0]);
  _Block_release(v10);

  return v7;
}

uint64_t type metadata accessor for JSUserNotificationAuthorizationViewController()
{
  return objc_opt_self(_TtC16MusicApplication45JSUserNotificationAuthorizationViewController);
}

uint64_t sub_607E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_60808(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_5F72C(a1, a2, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_3(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_60840()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_6086C()
{
  uint64_t v0;

  sub_5FAD8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_60874(void *a1)
{
  uint64_t v1;

  sub_5FF0C(a1, v1);
}

uint64_t sub_6087C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PresentationSource(a2, a1);
  return a2;
}

void sub_608B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[5];
  uint64_t v11;

  v2 = OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_engagementViewController;
  v3 = *(void **)(v1
                + OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_engagementViewController);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC16MusicApplication45JSUserNotificationAuthorizationViewController_engagementViewController) = a1;
  v4 = a1;

  v5 = *(void **)(v1 + v2);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v6, "startEngagement");
    v8 = swift_allocObject(&unk_1341C88, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v1);
    v10[4] = sub_609B4;
    v11 = v8;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_2199A0;
    v10[3] = &block_descriptor_8;
    v9 = _Block_copy(v10);
    objc_msgSend(v7, "addFinishBlock:", v9, swift_release(v11).n128_f64[0]);
    _Block_release(v9);

  }
}

uint64_t sub_609B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_60284(a1, a2, v2);
}

void sub_609BC()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;
  _QWORD aBlock[6];

  sub_4E684(0, (unint64_t *)&unk_14BA540, ICUserIdentityStore_ptr);
  v0 = static ICUserIdentityStore.activeAccountDSID.getter();

  if (v0)
  {
    v1 = objc_msgSend((id)objc_opt_self(UNUserNotificationCenter), "currentNotificationCenter");
    aBlock[4] = sub_5FCA8;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_5FEBC;
    aBlock[3] = &block_descriptor_13;
    v2 = _Block_copy(aBlock);
    objc_msgSend(v1, "getNotificationSettingsWithCompletionHandler:", v2);
    _Block_release(v2);

  }
  else
  {
    if (qword_14AA8B8 != -1)
      swift_once(&qword_14AA8B8, sub_60600);
    v3 = type metadata accessor for Logger(0);
    v4 = __swift_project_value_buffer(v3, (uint64_t)qword_14AD6A0);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_0, oslog, v5, "Unable to update Music Account settings because there is no active account.", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

Swift::Int sub_60B9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v0 = Hasher.init(_seed:)(v5);
  v1 = GenericMusicItem.id.getter(v0);
  v3 = v2;
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_60BF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = GenericMusicItem.id.getter(a1);
  v4 = v3;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_60C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v0 = Hasher.init(_seed:)(v5);
  v1 = GenericMusicItem.id.getter(v0);
  v3 = v2;
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_60C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = GenericMusicItem.id.getter(a1);
  v3 = v2;
  v5 = GenericMusicItem.id.getter(v1);
  v6 = v4;
  if (v1 == v5 && v3 == v4)
  {
    v7 = 1;
    v6 = v3;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v5, v4, 0);
  }
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_60D10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void (*v30)(_BYTE *, uint64_t, __n128);
  _BOOL8 v31;
  __n128 v32;
  void (*v33)(_BYTE *, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  void (*v44)(_BYTE *, uint64_t);
  BOOL v46;
  BOOL v47;
  _BYTE v49[12];
  int v50;
  _BYTE *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v53 = a1;
  v2 = type metadata accessor for MusicLibrary.AddAction(0);
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  __chkstk_darwin(v2);
  v56 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for DragDropToLibrary.Origin(0);
  __chkstk_darwin(v4);
  v6 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD988);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v11);
  v14 = &v49[-v13];
  v15 = type metadata accessor for MusicAuthorization.Status(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  v55 = v16;
  __chkstk_darwin(v15);
  v18 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v21 = &v49[-v20];
  type metadata accessor for MusicLibrary(0);
  v52 = v1;
  v22 = *v1;
  v24 = static MusicLibrary.shared.getter(v23);
  LOBYTE(v22) = static MusicLibrary.== infix(_:_:)(v22, v24);
  v25 = swift_release(v24);
  if ((v22 & 1) == 0)
    return 0;
  static MusicAuthorization.currentStatus.getter(v25);
  v26 = v54;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v55 + 104))(v18, enum case for MusicAuthorization.Status.authorized(_:), v54);
  v27 = sub_4DD24(&qword_14AD990, (uint64_t (*)(uint64_t))&type metadata accessor for MusicAuthorization.Status, (uint64_t)&protocol conformance descriptor for MusicAuthorization.Status);
  dispatch thunk of RawRepresentable.rawValue.getter(&v61, v26, v27);
  v51 = v18;
  dispatch thunk of RawRepresentable.rawValue.getter(&v59, v26, v27);
  v28 = v55;
  if (v61 == v59 && v62 == v60)
  {
    v29 = swift_bridgeObjectRelease_n(v62, 2);
    v30 = *(void (**)(_BYTE *, uint64_t, __n128))(v28 + 8);
    v30(v51, v26, v29);
    ((void (*)(_BYTE *, uint64_t))v30)(v21, v26);
  }
  else
  {
    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, v59, v60, 0);
    swift_bridgeObjectRelease();
    v32 = swift_bridgeObjectRelease();
    v33 = *(void (**)(_BYTE *, uint64_t, __n128))(v28 + 8);
    v33(v51, v26, v32);
    ((void (*)(_BYTE *, uint64_t))v33)(v21, v26);
    v31 = 0;
    if ((v50 & 1) == 0)
      return v31;
  }
  v34 = v53;
  v35 = *(_QWORD *)(v53 + 16);
  if (!v35)
    return 1;
  v36 = *(_QWORD *)(type metadata accessor for DragDropToLibrary(0) - 8);
  v37 = v34 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  LODWORD(v55) = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
  v54 = *(_QWORD *)(v36 + 72);
  swift_bridgeObjectRetain();
  v38 = v35 - 1;
  do
  {
    v39 = sub_5BDB8(v37, (uint64_t)v6, type metadata accessor for DragDropToLibrary.Origin);
    v40 = v56;
    static MusicLibraryAction<>.add.getter(v39);
    v41 = v58;
    MusicLibrary.supportedStatus<A>(for:action:)(v6, v40, v58, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v40, v41);
    v42 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v6, v42);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v14, v7);
    v43 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 88))(v10, v7);
    v44 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v44(v10, v7);
    v44(v14, v7);
    v46 = v38-- != 0;
    v47 = v43 == (_DWORD)v55;
    v31 = v43 == (_DWORD)v55;
    if (!v47)
      break;
    v37 += v54;
  }
  while (v46);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_610F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for Notice.Variant(0);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DB120);
  v3[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DragDropToLibrary.Origin(0);
  v3[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v3[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[10] = v8;
  v3[11] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(type metadata accessor for DragDropToLibrary(0) - 8);
  v3[12] = v9;
  v3[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_611E8, 0, 0);
}

uint64_t sub_611E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 112) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(v0 + 128) = 0;
    v7 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = v1 + ((v5 + 32) & ~(unint64_t)v5);
    swift_bridgeObjectRetain();
    sub_5BDB8(v10, v4, type metadata accessor for DragDropToLibrary);
    sub_5BDB8(v4, v9, type metadata accessor for DragDropToLibrary.Origin);
    sub_5C0DC(v4, type metadata accessor for DragDropToLibrary);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v9, v8);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add(_:)[1]);
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_61394;
    return MusicLibrary.add(_:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 88));
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 16);
    swift_storeEnumTagMultiPayload(v17, *(_QWORD *)(v0 + 40), 7);
    static Notice.variant(_:)(v17);
    sub_5C0DC(v17, type metadata accessor for Notice.Variant);
    v19 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_61394()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease();
    v4 = sub_615C8;
  }
  else
  {
    sub_63B6C(*(_QWORD *)(v2 + 56));
    v4 = sub_61408;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_61408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 128) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 16);
    swift_storeEnumTagMultiPayload(v7, *(_QWORD *)(v0 + 40), 7);
    static Notice.variant(_:)(v7);
    sub_5C0DC(v7, type metadata accessor for Notice.Variant);
    v9 = type metadata accessor for Notice(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 128) + 1;
    *(_QWORD *)(v0 + 128) = v12;
    v13 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    sub_5BDB8(*(_QWORD *)(v0 + 24)+ ((*(unsigned __int8 *)(v0 + 152) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 152))+ v11 * v12, v13, type metadata accessor for DragDropToLibrary);
    sub_5BDB8(v13, v17, type metadata accessor for DragDropToLibrary.Origin);
    sub_5C0DC(v13, type metadata accessor for DragDropToLibrary);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v17, v16);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add(_:)[1]);
    *(_QWORD *)(v0 + 136) = v18;
    *v18 = v0;
    v18[1] = sub_61394;
    return MusicLibrary.add(_:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_615C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v2, *(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_61648(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v6;
  _QWORD v7[9];

  v7[0] = *v1;
  v3 = type metadata accessor for MusicLibrary(0);
  v4 = sub_4DD24((unint64_t *)&qword_14AD9A0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  sub_6087C((uint64_t)(v1 + 1), (uint64_t)v7);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  sub_56060((uint64_t)v7);
  if (Strong)
  {
    Hasher._combine(_:)(1u);
    v6 = Strong;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_61714()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_61648((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_61754()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_61648((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_61790(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

double sub_6179C(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  uint64_t v10;
  double result;

  v4 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = a2;
  v5 = a2;
  if (!a2)
  {
    if (!v4)
      goto LABEL_7;
LABEL_6:
    v9 = *(void **)(a1 + 136);
    *(_QWORD *)(a1 + 136) = 0;

    goto LABEL_7;
  }
  if (!v4)
    goto LABEL_6;
  sub_4E684(0, (unint64_t *)&qword_14B2100, MPModelObject_ptr);
  v6 = v4;
  v7 = v5;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  if ((v8 & 1) == 0)
    goto LABEL_6;
LABEL_7:
  swift_retain(a1);
  sub_59E354(v10, a1);

  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

Swift::Int sub_6185C()
{
  void **v0;

  return sub_63C0C(*v0, v0[1]);
}

void sub_61864(uint64_t a1)
{
  id *v1;

  sub_61E34(a1, *v1, v1[1]);
}

Swift::Int sub_6186C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v8[9];

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)(v8);
  v3 = objc_msgSend(v2, "identifiers");
  NSObject.hash(into:)(v8);

  if (v1 && (v4 = objc_msgSend(v1, "identifiers")) != 0)
  {
    v5 = v4;
    Hasher._combine(_:)(1u);
    v6 = v5;
    NSObject.hash(into:)(v8);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

id sub_61924(id *a1, void **a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = *a2;
  v3 = objc_msgSend(*a1, "identifiers");
  v4 = objc_msgSend(v2, "identifiers");
  v5 = objc_msgSend(v3, "intersectsSet:", v4);

  return v5;
}

uint64_t sub_619A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_619BC, 0, 0);
}

uint64_t sub_619BC()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;

  v1 = v0[3];
  v2 = objc_msgSend(objc_allocWithZone((Class)MPMutableSectionedCollection), "init");
  v0[5] = v2;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "appendSection:", v3);

  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v5 = v0[3];
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v6 = (void **)(v5 + 32);
    do
    {
      v7 = *v6;
      v6 += 4;
      v8 = v7;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
      specialized ContiguousArray._endMutation()(v10);
      --v4;
    }
    while (v4);
  }
  v11 = v0[4];
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "appendItems:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  type metadata accessor for LibraryAddKeepLocalHandlingController();
  v13 = v11 + 8;
  v14 = dword_14D963C;
  v15 = v2;
  v16 = (_QWORD *)swift_task_alloc(v14);
  v0[6] = v16;
  *v16 = v0;
  v16[1] = sub_61B40;
  return sub_6A05B8((uint64_t)v2, 2, 0, 0, v13);
}

uint64_t sub_61B40()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 40);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));

  return swift_task_switch(sub_61B98, 0, 0);
}

uint64_t sub_61B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);

  v2 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Int sub_61BF4()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7);
  v1 = objc_msgSend(*v0, "uniqueIdentifier");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v7, v3, v5);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_61CA0(uint64_t a1)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*v1, "uniqueIdentifier");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(a1, v5, v7);
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_61D38()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7);
  v1 = objc_msgSend(*v0, "uniqueIdentifier");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v7, v3, v5);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_61DDC(_QWORD *a1, _QWORD *a2)
{
  sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  return static NSObject.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t Lyrics.TextLine.agentAlignment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

void sub_61E34(uint64_t a1, id a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v5 = objc_msgSend(a2, "identifiers");
  NSObject.hash(into:)(a1);

  if (a3 && (v6 = objc_msgSend(a3, "identifiers")) != 0)
  {
    v7 = v6;
    Hasher._combine(_:)(1u);
    v8 = v7;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_61F00(uint64_t *a1, uint64_t *a2)
{
  char v4;
  void *Strong;
  id v6;
  id v7;
  char v8;
  _BYTE v10[72];
  _BYTE v11[72];
  _BYTE v12[8];
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;

  type metadata accessor for MusicLibrary(0);
  v4 = static MusicLibrary.== infix(_:_:)(*a1, *a2);
  sub_63BAC(a1, (uint64_t)v14);
  sub_63BAC(a2, (uint64_t)v12);
  if ((v4 & 1) != 0)
  {
    sub_6087C((uint64_t)&v15, (uint64_t)v11);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
    sub_56060((uint64_t)v11);
    sub_6087C((uint64_t)&v13, (uint64_t)v10);
    v6 = (id)swift_unknownObjectWeakLoadStrong(v10);
    sub_56060((uint64_t)v10);
    if (Strong)
    {
      if (v6)
      {
        sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
        v7 = Strong;
        v8 = static NSObject.== infix(_:_:)(v7, v6);
        sub_63BE0((uint64_t)v12);
        sub_63BE0((uint64_t)v14);

      }
      else
      {
        v6 = Strong;
        sub_63BE0((uint64_t)v12);
        sub_63BE0((uint64_t)v14);
        v8 = 0;
      }

    }
    else
    {
      sub_63BE0((uint64_t)v12);
      sub_63BE0((uint64_t)v14);
      if (!v6)
      {
        v8 = 1;
        return v8 & 1;
      }
      v8 = 0;
    }

  }
  else
  {
    sub_63BE0((uint64_t)v12);
    sub_63BE0((uint64_t)v14);
    v8 = 0;
  }
  return v8 & 1;
}

id sub_6206C(void *a1, void *a2)
{
  id v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v37;
  __int128 aBlock;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v4 = objc_msgSend(a1, "innermostModelObject");
  if (!objc_msgSend((id)swift_getObjCClassFromObject(v4), "supportsLibraryAddStatusObservation"))
  {
    if (qword_14ABA88 == -1)
    {
LABEL_9:
      v14 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v14, (uint64_t)qword_15810B8);
      v15 = v4;
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter(v16);
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc(12, -1);
        v19 = swift_slowAlloc(32, -1);
        v37 = a2;
        *(_QWORD *)&aBlock = v19;
        *(_DWORD *)v18 = 136446210;
        v20 = sub_2A1D90((uint64_t)&off_133AC38);
        MPModelObject.humanDescription(including:)(v20);
        v22 = v21;
        v24 = v23;
        swift_bridgeObjectRelease(v20);
        v41 = sub_23EAC8(v22, v24, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);

        swift_bridgeObjectRelease(v24);
        _os_log_impl(&dword_0, v16, v17, "No Library Add Status Observation support for modelObject=%{public}s", v18, 0xCu);
        swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v19, -1, -1);
        swift_slowDealloc(v18, -1, -1);

LABEL_15:
        return 0;
      }

LABEL_18:
      return 0;
    }
LABEL_22:
    swift_once(&qword_14ABA88, sub_873864);
    goto LABEL_9;
  }
  v5 = type metadata accessor for LibraryAddKeepLocalStatusObserver();
  swift_allocObject(v5, 144, 7);
  v6 = (char *)sub_59B96C();
  v7 = objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_1341D50, 32, 7);
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v4;
  v9 = swift_allocObject(&unk_1341D78, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_625EC;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)&v40 = sub_62604;
  *((_QWORD *)&v40 + 1) = v9;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v39 = sub_3A1A94;
  *((_QWORD *)&v39 + 1) = &block_descriptor_4;
  v10 = _Block_copy(&aBlock);
  v11 = *((_QWORD *)&v40 + 1);
  swift_retain(v6);
  v4 = v4;
  swift_retain(v9);
  objc_msgSend((id)v7, "performWithoutEnforcement:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v9, "", 88, 85, 53, 1, v12);
  swift_release(v9);
  if ((v7 & 1) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v13 = *((_QWORD *)v6 + 15);
  if ((v13 & 0xFE) == 0xF8
    || *((_QWORD *)v6 + 15) < 0xFEu
    || (v13 & 0xFE) == 0x7A
    || *((_QWORD *)v6 + 11) != 2)
  {
    if (qword_14ABA88 != -1)
      swift_once(&qword_14ABA88, sub_873864);
    v25 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v25, (uint64_t)qword_15810B8);
    v26 = swift_retain_n(v6, 2);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v37 = a2;
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v41 = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = *(_OWORD *)(v6 + 104);
      aBlock = *(_OWORD *)(v6 + 88);
      v39 = v31;
      v40 = *(_OWORD *)(v6 + 120);
      v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1F80);
      v33 = String.init<A>(describing:)(&aBlock, v32);
      v35 = v34;
      *(_QWORD *)&aBlock = sub_23EAC8(v33, v34, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8);
      swift_release_n(v6, 2);
      swift_bridgeObjectRelease(v35);
      _os_log_impl(&dword_0, v27, v28, "Not addable with current status=%{public}s", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
      swift_release(v8);

      swift_release(v6);
      goto LABEL_15;
    }
    swift_release(v8);

    swift_release_n(v6, 3);
    goto LABEL_18;
  }
  swift_release(v8);

  return v4;
}

uint64_t sub_625C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_625EC()
{
  uint64_t v0;

  return sub_6179C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_625F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_62604()
{
  uint64_t v0;

  return static MPPropertySet.with(_:)(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_62624(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
    return (id)swift_unknownObjectRetain(result);
  if (a6 <= 1u)
    return result;
  return result;
}

double destroy for DragDropToLibrary_Legacy.Destination(uint64_t a1)
{
  double result;
  int v3;

  swift_unknownObjectWeakDestroy(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255)
    sub_626A8(*(id *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v3);
  if (*(_QWORD *)(a1 + 64))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 72)).n128_u64[0];
  return result;
}

void sub_626A8(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease(a1);
  }
  else if (a6 <= 1u)
  {

  }
}

uint64_t initializeWithCopy for DragDropToLibrary_Legacy.Destination(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a1 + 16);
  v6 = a1 + 8;
  v7 = a2 + 8;
  v8 = v4;
  swift_unknownObjectWeakCopyInit(v6, v7);
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 == 255)
  {
    v15 = *(_OWORD *)(a2 + 32);
    *v5 = *(_OWORD *)(a2 + 16);
    v5[1] = v15;
    *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    v10 = *(void **)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    sub_62624(v10, v11, v12, v13, v14, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v14;
    *(_BYTE *)(a1 + 56) = v9;
  }
  v16 = *(_QWORD *)(a2 + 64);
  if (v16)
  {
    v17 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    swift_retain(v17);
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

uint64_t assignWithCopy for DragDropToLibrary_Legacy.Destination(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 *v7;
  __int128 *v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  swift_unknownObjectWeakCopyAssign(a1 + 8, a2 + 8);
  v7 = (__int128 *)(a1 + 16);
  v8 = (__int128 *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v9 == 255)
    {
      v28 = *v8;
      v29 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      *v7 = v28;
      *(_OWORD *)(a1 + 32) = v29;
    }
    else
    {
      v21 = *(void **)(a2 + 16);
      v22 = *(_QWORD *)(a2 + 24);
      v23 = *(_QWORD *)(a2 + 32);
      v24 = *(_QWORD *)(a2 + 40);
      v25 = *(_QWORD *)(a2 + 48);
      sub_62624(v21, v22, v23, v24, v25, *(_BYTE *)(a2 + 56));
      *(_QWORD *)(a1 + 16) = v21;
      *(_QWORD *)(a1 + 24) = v22;
      *(_QWORD *)(a1 + 32) = v23;
      *(_QWORD *)(a1 + 40) = v24;
      *(_QWORD *)(a1 + 48) = v25;
      *(_BYTE *)(a1 + 56) = v9;
    }
  }
  else if (v9 == 255)
  {
    sub_62944(a1 + 16);
    v26 = *(_OWORD *)(a2 + 41);
    v27 = *(_OWORD *)(a2 + 32);
    *v7 = *v8;
    *(_OWORD *)(a1 + 32) = v27;
    *(_OWORD *)(a1 + 41) = v26;
  }
  else
  {
    v10 = *(void **)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    sub_62624(v10, v11, v12, v13, v14, *(_BYTE *)(a2 + 56));
    v15 = *(void **)(a1 + 16);
    v16 = *(_QWORD *)(a1 + 24);
    v17 = *(_QWORD *)(a1 + 32);
    v18 = *(_QWORD *)(a1 + 40);
    v19 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v14;
    v20 = *(_BYTE *)(a1 + 56);
    *(_BYTE *)(a1 + 56) = v9;
    sub_626A8(v15, v16, v17, v18, v19, v20);
  }
  v30 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v30)
    {
      v33 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v30;
      *(_QWORD *)(a1 + 72) = v33;
      swift_retain(v33);
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v30)
  {
    swift_release(*(_QWORD *)(a1 + 72));
    goto LABEL_14;
  }
  v31 = *(_QWORD *)(a2 + 72);
  v32 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v30;
  *(_QWORD *)(a1 + 72) = v31;
  swift_retain(v31);
  swift_release(v32);
  return a1;
}

uint64_t sub_62944(uint64_t a1)
{
  destroy for PresentationSource.Position(a1);
  return a1;
}

uint64_t assignWithTake for DragDropToLibrary_Legacy.Destination(uint64_t a1, uint64_t a2)
{
  void *v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  swift_unknownObjectWeakTakeAssign(a1 + 8, a2 + 8);
  v5 = *(unsigned __int8 *)(a1 + 56);
  if (v5 != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 56);
    if (v6 != 255)
    {
      v7 = *(_QWORD *)(a2 + 48);
      v8 = *(void **)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      v11 = *(_QWORD *)(a1 + 40);
      v12 = *(_QWORD *)(a1 + 48);
      v13 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 48) = v7;
      *(_BYTE *)(a1 + 56) = v6;
      sub_626A8(v8, v9, v10, v11, v12, v5);
      goto LABEL_6;
    }
    sub_62944(a1 + 16);
  }
  v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_6:
  v15 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v15)
    {
      v18 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v18;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v15)
  {
    swift_release(*(_QWORD *)(a1 + 72));
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(a2 + 72);
  v17 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  swift_release(v17);
  return a1;
}

ValueMetadata *type metadata accessor for DragDropToLibrary_Legacy.Destination()
{
  return &type metadata for DragDropToLibrary_Legacy.Destination;
}

double destroy for DragDropToLibrary.Destination(uint64_t a1)
{
  double result;
  int v3;

  swift_release(*(_QWORD *)a1);
  swift_unknownObjectWeakDestroy(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255)
    sub_626A8(*(id *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v3);
  if (*(_QWORD *)(a1 + 64))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 72)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for DragDropToLibrary.Destination(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  swift_retain(v4);
  swift_unknownObjectWeakCopyInit(a1 + 8, v5);
  v6 = *((unsigned __int8 *)a2 + 56);
  if (v6 == 255)
  {
    v12 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    v7 = (void *)a2[2];
    v8 = a2[3];
    v9 = a2[4];
    v10 = a2[5];
    v11 = a2[6];
    sub_62624(v7, v8, v9, v10, v11, *((_BYTE *)a2 + 56));
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v6;
  }
  v13 = a2[8];
  if (v13)
  {
    v14 = a2[9];
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  }
  return a1;
}

uint64_t *assignWithCopy for DragDropToLibrary.Destination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 *v7;
  int v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  swift_unknownObjectWeakCopyAssign(a1 + 1, a2 + 1);
  v6 = (__int128 *)(a1 + 2);
  v7 = (__int128 *)(a2 + 2);
  v8 = *((unsigned __int8 *)a2 + 56);
  if (*((unsigned __int8 *)a1 + 56) == 255)
  {
    if (v8 == 255)
    {
      v27 = *v7;
      v28 = *((_OWORD *)a2 + 2);
      *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      *v6 = v27;
      *((_OWORD *)a1 + 2) = v28;
    }
    else
    {
      v20 = (void *)a2[2];
      v21 = a2[3];
      v22 = a2[4];
      v23 = a2[5];
      v24 = a2[6];
      sub_62624(v20, v21, v22, v23, v24, *((_BYTE *)a2 + 56));
      a1[2] = (uint64_t)v20;
      a1[3] = v21;
      a1[4] = v22;
      a1[5] = v23;
      a1[6] = v24;
      *((_BYTE *)a1 + 56) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_62944((uint64_t)(a1 + 2));
    v25 = *(_OWORD *)((char *)a2 + 41);
    v26 = *((_OWORD *)a2 + 2);
    *v6 = *v7;
    *((_OWORD *)a1 + 2) = v26;
    *(_OWORD *)((char *)a1 + 41) = v25;
  }
  else
  {
    v9 = (void *)a2[2];
    v10 = a2[3];
    v11 = a2[4];
    v12 = a2[5];
    v13 = a2[6];
    sub_62624(v9, v10, v11, v12, v13, *((_BYTE *)a2 + 56));
    v14 = (void *)a1[2];
    v15 = a1[3];
    v16 = a1[4];
    v17 = a1[5];
    v18 = a1[6];
    a1[2] = (uint64_t)v9;
    a1[3] = v10;
    a1[4] = v11;
    a1[5] = v12;
    a1[6] = v13;
    v19 = *((_BYTE *)a1 + 56);
    *((_BYTE *)a1 + 56) = v8;
    sub_626A8(v14, v15, v16, v17, v18, v19);
  }
  v29 = a2[8];
  if (!a1[8])
  {
    if (v29)
    {
      v32 = a2[9];
      a1[8] = v29;
      a1[9] = v32;
      swift_retain(v32);
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v29)
  {
    swift_release(a1[9]);
    goto LABEL_14;
  }
  v30 = a2[9];
  v31 = a1[9];
  a1[8] = v29;
  a1[9] = v30;
  swift_retain(v30);
  swift_release(v31);
  return a1;
}

uint64_t _s16MusicApplication24DragDropToLibrary_LegacyV11DestinationVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectWeakTakeInit(a1 + 8, a2 + 8);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v4;
    *(_QWORD *)(a1 + 72) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

uint64_t *assignWithTake for DragDropToLibrary.Destination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  swift_unknownObjectWeakTakeAssign(a1 + 1, a2 + 1);
  v5 = *((unsigned __int8 *)a1 + 56);
  if (v5 != 255)
  {
    v6 = *((unsigned __int8 *)a2 + 56);
    if (v6 != 255)
    {
      v7 = a2[6];
      v8 = (void *)a1[2];
      v9 = a1[3];
      v10 = a1[4];
      v11 = a1[5];
      v12 = a1[6];
      v13 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v13;
      a1[6] = v7;
      *((_BYTE *)a1 + 56) = v6;
      sub_626A8(v8, v9, v10, v11, v12, v5);
      goto LABEL_6;
    }
    sub_62944((uint64_t)(a1 + 2));
  }
  v14 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v14;
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)a2 + 41);
LABEL_6:
  v15 = a2[8];
  if (!a1[8])
  {
    if (v15)
    {
      v18 = a2[9];
      a1[8] = v15;
      a1[9] = v18;
      return a1;
    }
LABEL_12:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v15)
  {
    swift_release(a1[9]);
    goto LABEL_12;
  }
  v16 = a2[9];
  v17 = a1[9];
  a1[8] = v15;
  a1[9] = v16;
  swift_release(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCovers.Cover(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistCovers.Cover(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropToLibrary.Destination()
{
  return &type metadata for DragDropToLibrary.Destination;
}

uint64_t initializeWithCopy for DragDropToLibrary_Legacy(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = v3;
  v7 = v4;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for DragDropToLibrary_Legacy(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_retain(v10);
  swift_release(v11);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DragDropToLibrary_Legacy(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DragDropToLibrary_Legacy(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DragDropToLibrary_Legacy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropToLibrary_Legacy()
{
  return &type metadata for DragDropToLibrary_Legacy;
}

_QWORD *sub_63130(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for GenericMusicItem(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_631BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_63218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_63274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_632D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_6332C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_63338);
}

uint64_t sub_63338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for DragDropToLibrary.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t type metadata accessor for DragDropToLibrary.Origin(uint64_t a1)
{
  return sub_6345C(a1, qword_14AD7D8, (uint64_t)&nominal type descriptor for DragDropToLibrary.Origin);
}

uint64_t sub_633C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_633D0);
}

uint64_t sub_633D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DragDropToLibrary.Origin(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t type metadata accessor for DragDropToLibrary(uint64_t a1)
{
  return sub_6345C(a1, qword_14AD748, (uint64_t)&nominal type descriptor for DragDropToLibrary);
}

uint64_t sub_6345C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_63490(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_105F3D8;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_63500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_6353C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_63570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_635B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_635F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_6363C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_63680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6368C);
}

uint64_t sub_6368C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_636C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_636D4);
}

uint64_t sub_636D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GenericMusicItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_63714(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for GenericMusicItem(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_6377C()
{
  return sub_4DD24(&qword_14AD810, type metadata accessor for DragDropToLibrary.Origin, (uint64_t)"Y,.");
}

uint64_t sub_637A8(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_14AD818, type metadata accessor for DragDropToLibrary.Origin, (uint64_t)&unk_105F420);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_637E8()
{
  unint64_t result;

  result = qword_14AD820;
  if (!qword_14AD820)
  {
    result = swift_getWitnessTable(&unk_105F638, &type metadata for DragDropToLibrary_Legacy.Destination);
    atomic_store(result, (unint64_t *)&qword_14AD820);
  }
  return result;
}

unint64_t sub_63830()
{
  unint64_t result;

  result = qword_14AD828;
  if (!qword_14AD828)
  {
    result = swift_getWitnessTable(&unk_105F4B8, &type metadata for DragDropToLibrary_Legacy.Origin);
    atomic_store(result, (unint64_t *)&qword_14AD828);
  }
  return result;
}

unint64_t sub_63874(uint64_t a1)
{
  unint64_t result;

  result = sub_63898();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_63898()
{
  unint64_t result;

  result = qword_14AD870;
  if (!qword_14AD870)
  {
    result = swift_getWitnessTable(&unk_105F4D4, &type metadata for DragDropToLibrary_Legacy.Origin);
    atomic_store(result, (unint64_t *)&qword_14AD870);
  }
  return result;
}

unint64_t sub_638E0()
{
  unint64_t result;

  result = qword_14AD878;
  if (!qword_14AD878)
  {
    result = swift_getWitnessTable(&unk_105F514, &type metadata for DragDropToLibrary_Legacy.Origin);
    atomic_store(result, (unint64_t *)&qword_14AD878);
  }
  return result;
}

unint64_t sub_63928()
{
  unint64_t result;

  result = qword_14AD880;
  if (!qword_14AD880)
  {
    result = swift_getWitnessTable(&unk_105F54C, &type metadata for DragDropToLibrary.Destination);
    atomic_store(result, (unint64_t *)&qword_14AD880);
  }
  return result;
}

uint64_t sub_6396C()
{
  return sub_4DD24(&qword_14AD888, type metadata accessor for DragDropToLibrary, (uint64_t)&unk_105F684);
}

unint64_t sub_63998(uint64_t a1)
{
  unint64_t result;

  result = sub_639BC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_639BC()
{
  unint64_t result;

  result = qword_14AD8D0;
  if (!qword_14AD8D0)
  {
    result = swift_getWitnessTable(&unk_105F574, &type metadata for DragDropToLibrary.Destination);
    atomic_store(result, (unint64_t *)&qword_14AD8D0);
  }
  return result;
}

unint64_t sub_63A04()
{
  unint64_t result;

  result = qword_14AD8D8;
  if (!qword_14AD8D8)
  {
    result = swift_getWitnessTable(&unk_105F5D0, &type metadata for DragDropToLibrary_Legacy.Destination);
    atomic_store(result, (unint64_t *)&qword_14AD8D8);
  }
  return result;
}

unint64_t sub_63A4C()
{
  unint64_t result;

  result = qword_14AD8E0;
  if (!qword_14AD8E0)
  {
    result = swift_getWitnessTable(&unk_105F49C, &type metadata for DragDropToLibrary_Legacy);
    atomic_store(result, (unint64_t *)&qword_14AD8E0);
  }
  return result;
}

unint64_t sub_63A90(uint64_t a1)
{
  unint64_t result;

  result = sub_63AB4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_63AB4()
{
  unint64_t result;

  result = qword_14AD928;
  if (!qword_14AD928)
  {
    result = swift_getWitnessTable(&unk_105F5F8, &type metadata for DragDropToLibrary_Legacy.Destination);
    atomic_store(result, (unint64_t *)&qword_14AD928);
  }
  return result;
}

unint64_t sub_63AFC()
{
  unint64_t result;

  result = qword_14AD930;
  if (!qword_14AD930)
  {
    result = swift_getWitnessTable(&unk_105F5B4, &type metadata for DragDropToLibrary.Destination);
    atomic_store(result, (unint64_t *)&qword_14AD930);
  }
  return result;
}

uint64_t sub_63B40()
{
  return sub_4DD24(&qword_14AD938, type metadata accessor for DragDropToLibrary.Origin, (uint64_t)&unk_105F470);
}

uint64_t sub_63B6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DB120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_63BAC(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for DragDropToLibrary.Destination(a2, a1);
  return a2;
}

uint64_t sub_63BE0(uint64_t a1)
{
  destroy for DragDropToLibrary.Destination(a1);
  return a1;
}

Swift::Int sub_63C0C(void *a1, void *a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9);
  v4 = objc_msgSend(a1, "identifiers");
  NSObject.hash(into:)(v9);

  if (a2 && (v5 = objc_msgSend(a2, "identifiers")) != 0)
  {
    v6 = v5;
    Hasher._combine(_:)(1u);
    v7 = v6;
    NSObject.hash(into:)(v9);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t destroy for DragDropToLibrary_Legacy.Origin(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s16MusicApplication24DragDropToLibrary_LegacyV6OriginVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for DragDropToLibrary_Legacy.Origin(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DragDropToLibrary_Legacy.Origin(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushNotificationObserver.Connection(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushNotificationObserver.Connection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DragDropToLibrary_Legacy.Origin()
{
  return &type metadata for DragDropToLibrary_Legacy.Origin;
}

void sub_63EB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t, __n128);
  uint64_t v17;
  __n128 v18;
  uint64_t (*v19)(_BYTE *, __n128);
  uint64_t v20;
  __n128 v21;
  void *v22;
  uint64_t ObjectType;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t (*v35)(void);
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[12];
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void);
  void *v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  _QWORD v62[9];
  uint64_t v63;
  void *v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  _QWORD v70[6];
  _OWORD v71[2];
  __int128 v72;
  _OWORD v73[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v8);
  v10 = &v50[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = (void (*)(uint64_t *, uint64_t, uint64_t, __n128))v4[8];
  if (!v16)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double))(v12 + 56))(v10, 1, 1, v11, v13);
    goto LABEL_12;
  }
  v61 = a3;
  v17 = v4[9];
  v18 = swift_retain(v17);
  v16(v4, a1, a2, v18);
  sub_5C198((uint64_t)v16, v17);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    sub_56024((uint64_t)v10, (uint64_t *)&unk_14AD540);
    return;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v15, v10, v11);
  v19 = (uint64_t (*)(_BYTE *, __n128))v4[4];
  if (!v19 || (v20 = v4[5], v21 = swift_retain(v20), v22 = (void *)v19(v15, v21), sub_5C198((uint64_t)v19, v20), !v22))
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    return;
  }
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 40))(v70, ObjectType, a2);
  sub_5C090((uint64_t)v70, (uint64_t)v71, (uint64_t *)&unk_14B1F80);
  if ((v72 & 0xFE) == 0xF8)
    goto LABEL_15;
  v73[0] = v71[0];
  v73[1] = v71[1];
  v73[2] = v72;
  v24 = objc_msgSend(v22, "relativeModelObjectForStoreLibraryPersonalization");
  if (!v24)
    goto LABEL_15;
  v25 = v24;
  v26 = objc_msgSend(v61, "window");
  if (!v26)
    goto LABEL_14;
  v27 = v26;
  v28 = objc_msgSend(v26, "windowScene");
  v60 = v22;
  v29 = v25;
  v30 = v28;

  v31 = v30;
  v25 = v29;
  v22 = v60;
  if (!v31)
  {
LABEL_14:

LABEL_15:
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);

    return;
  }
  static PresentationSource.topmost(in:)((uint64_t)v62);
  if (v62[7] == 1)
  {

    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    sub_56024((uint64_t)v62, (uint64_t *)&unk_14AD380);

  }
  else
  {
    v58 = v31;
    v59 = v25;
    sub_648A4((uint64_t)v62, (uint64_t)&v63);
    v32 = objc_msgSend(objc_allocWithZone((Class)MPMutableSectionedCollection), "init");
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v32, "appendSection:", v33);

    v56 = v32;
    objc_msgSend(v32, "appendItem:", v59);
    v34 = v61;
    objc_msgSend(v61, "bounds");
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v57 = v64;
    v54 = v66;
    v55 = v65;
    v52 = v68;
    v53 = v67;
    v51 = v69;
    v43 = v34;
    sub_648E0(v57, (uint64_t)v55, v54, v53, v52, v51);
    v64 = v34;
    v65 = v36;
    v66 = v38;
    v67 = v40;
    v68 = v42;
    v69 = 0;
    v57 = (id)type metadata accessor for LibraryAddKeepLocalHandlingController();
    v44 = *v4;
    v61 = v4 + 2;
    v55 = *(uint64_t (**)(void))(v44 + 240);
    v45 = v32;
    v55 = (uint64_t (*)(void))v55();
    sub_6A1400(v56, v55, 0, (uint64_t)&v63, (uint64_t)v73);
    v57 = v45;

    Strong = swift_unknownObjectWeakLoadStrong(v61);
    if (Strong)
    {
      v47 = Strong;
      v48 = v4[3];
      v49 = swift_getObjectType();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, _OWORD *, _BYTE *, uint64_t, uint64_t))(v48 + 8))(v4, a1, a2, v73, v15, v49, v48);

      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
      swift_unknownObjectRelease(v47);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    }
    sub_56060((uint64_t)&v63);

  }
}

void *ApplicationCapabilities.subscriptionStatus.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

uint64_t sub_64384()
{
  uint64_t v0;

  sub_64880(v0 + 16);
  sub_5C198(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_5C198(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  sub_5C198(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));

  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for LibraryAddKeepLocalController()
{
  return objc_opt_self(_TtC16MusicApplication29LibraryAddKeepLocalController);
}

uint64_t sub_643EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v1 + 88) = a1;
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit(v1 + 16);
  *(_QWORD *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  v3 = swift_allocObject(&unk_1342198, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v1 + 48) = sub_64918;
  *(_QWORD *)(v1 + 56) = v3;
  v4 = a1;
  swift_retain(v1);
  sub_5C198(0, 0);
  v5 = swift_allocObject(&unk_13421C0, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v7 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 64) = sub_64920;
  *(_QWORD *)(v1 + 72) = v5;
  sub_5C198(v7, v6);
  swift_release(v1);
  return v1;
}

id sub_644AC(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa;
  id v5;
  uint64_t ObjectType;
  id result;

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a3, "cellForItemAtIndexPath:", isa);

  if (!v5)
    return 0;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddKeepLocalStatusControllable))
    result = v5;
  else
    result = 0;
  if (!result)
  {

    return 0;
  }
  return result;
}

double sub_6452C@<D0>(uint64_t a1@<X1>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self(UICollectionViewCell);
  v9 = swift_dynamicCastObjCClass(a1);
  if (v9)
  {
    v10 = v9;
    swift_unknownObjectRetain(a1);
    v11 = objc_msgSend(a2, "indexPathForCell:", v10);
    if (v11)
    {
      v12 = v11;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v11);

      v13 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
    }
    else
    {
      v16 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    }
    sub_5C090((uint64_t)v8, a3, (uint64_t *)&unk_14AD540);
    *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  }
  else
  {
    v14 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
  return result;
}

void sub_64684()
{
  uint64_t v0;

}

uint64_t sub_6468C()
{
  uint64_t v0;

  sub_64880(v0 + 16);
  sub_5C198(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_5C198(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  sub_5C198(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));

  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for LibraryCollectionViewAddKeepLocalController()
{
  return objc_opt_self(_TtC16MusicApplication43LibraryCollectionViewAddKeepLocalController);
}

id sub_646F8()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  result = *(id *)(v0 + 88);
  if (result)
  {
    result = objc_msgSend(result, "results");
    if (!result)
    {
      __break(1u);
      return result;
    }
    v2 = result;
    v3 = objc_msgSend(result, "firstSection");

    if (!v3)
      return 0;
    v4 = objc_opt_self(MPModelPlaylist);
    result = (id)swift_dynamicCastObjCClass(v3, v4);
    if (!result)
    {
      v5 = objc_opt_self(MPModelAlbum);
      result = (id)swift_dynamicCastObjCClass(v3, v5);
      if (!result)
      {
        swift_unknownObjectRelease(v3);
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ModelResponseLibraryAddKeepLocalController()
{
  return objc_opt_self(_TtC16MusicApplication42ModelResponseLibraryAddKeepLocalController);
}

uint64_t sub_647C0(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 312);
}

void sub_64800()
{
  uint64_t v0;

}

uint64_t sub_64808()
{
  uint64_t v0;

  sub_64880(v0 + 16);
  sub_5C198(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_5C198(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  sub_5C198(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));

  return v0;
}

uint64_t sub_64854()
{
  uint64_t v0;

  sub_64808();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for ModelResponseLibraryCollectionViewAddKeepLocalController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModelResponseLibraryCollectionViewAddKeepLocalController);
}

uint64_t sub_64880(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

uint64_t sub_648A4(uint64_t a1, uint64_t a2)
{
  initializeWithTake for PresentationSource(a2, a1);
  return a2;
}

void sub_648E0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    sub_626A8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_648F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_64918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_644AC(a1, a2, *(void **)(v2 + 16));
}

double sub_64920@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_6452C(a1, *(void **)(v2 + 16), a2);
}

void sub_64928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v7)(uint64_t, __n128);
  uint64_t v8;
  uint64_t v10;
  __n128 v11;
  void *v12;
  _UNKNOWN **v13;
  id v14;

  v7 = *(uint64_t (**)(uint64_t, __n128))(a3 + 32);
  if (v7
    && (v8 = a3,
        v10 = *(_QWORD *)(a3 + 40),
        v11 = swift_retain(v10),
        v12 = (void *)v7(a2, v11),
        sub_5C198((uint64_t)v7, v10),
        v12))
  {
    v14 = objc_msgSend(v12, "relativeModelObjectForStoreLibraryPersonalization");
    if (v14)
    {
      swift_unknownObjectRetain(v8);
      v13 = &off_1342178;
    }
    else
    {
      v8 = 0;
      v13 = 0;
    }
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a5 + 16))(v8, v13, a4, a5);
    (*(void (**)(id, _QWORD, uint64_t, uint64_t))(a5 + 32))(v14, 0, a4, a5);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a5 + 16))(0, 0, a4, a5);
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(a5 + 32))(0, 0, a4, a5);
  }
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void sub_64B8C()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v23.receiver = v0;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = sub_64E3C();
  objc_msgSend(v6, "addSubview:", v7);

  if (qword_14AA8C8 != -1)
    swift_once(&qword_14AA8C8, sub_65C5C);
  v8 = *(double *)&qword_14ADE78;
  sub_64E9C(0.0, 0.0, *(double *)&qword_14ADE78, 0.0);
  v9 = sub_64E3C();
  objc_msgSend(v9, "sizeThatFits:", v8, 0.0);
  v11 = v10;

  v12 = *(double *)&qword_14ADE78;
  if (qword_14AA8C0 != -1)
    swift_once(&qword_14AA8C0, sub_65C48);
  if (*(double *)&qword_14ADE70 >= v11)
    v13 = v11;
  else
    v13 = *(double *)&qword_14ADE70;
  objc_msgSend(v0, "setPreferredContentSize:", v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD510);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_105B360;
  *(_QWORD *)(v15 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v15 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v16 = swift_allocObject(&unk_13421E8, 32, 7);
  *(_QWORD *)(v16 + 16) = v0;
  *(_QWORD *)(v16 + 24) = ObjectType;
  v17 = v0;
  v18 = UIViewController.registerForTraitChanges<A>(_:handler:)(v15, sub_66850, v16, ObjectType);
  swift_unknownObjectRelease(v18);
  swift_bridgeObjectRelease(v15);
  swift_release(v16);
  v19 = sub_64E3C();
  v20 = sub_65128();
  objc_msgSend(v19, "setMaskView:", v20);

  sub_651D4(1.0);
  v21 = sub_64E3C();
  v22 = sub_65300();
  objc_msgSend(v21, "_addContentSubview:atBack:", v22, 0);

  sub_65378(0.0);
}

id sub_64E3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___descriptionTextView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___descriptionTextView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___descriptionTextView);
  }
  else
  {
    v4 = sub_657C0(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_64E9C(double a1, double a2, double a3, double a4)
{
  double Width;
  char v5;
  id v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v24;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v5 = HI.SizeClass.init(_:)(Width);
  v6 = sub_64E3C();
  objc_msgSend(v6, "textContainerInset");

  v7 = HI.SizeClass.margin.getter(v5);
  v8 = sub_64E3C();
  objc_msgSend(v8, "adjustedContentInset");
  v10 = v9;

  if (20.0 - v10 < 0.0)
    v11 = 0.0;
  else
    v11 = 20.0 - v10;
  v12 = sub_64E3C();
  objc_msgSend(v12, "textContainerInset");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  if (v14 != 20.0 || v7 != v16 || v11 != v18 || v7 != v20)
  {
    v24 = sub_64E3C();
    objc_msgSend(v24, "setTextContainerInset:", 20.0, v7, v11, v7);

  }
}

void sub_64FC8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;

  v4 = sub_64E3C();
  v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v4, "setFont:", v5);

  v6 = sub_64E3C();
  if (qword_14AA8C8 != -1)
    swift_once(&qword_14AA8C8, sub_65C5C);
  objc_msgSend(v6, "sizeThatFits:", *(double *)&qword_14ADE78, 0.0);
  v8 = v7;

  v9 = *(double *)&qword_14ADE78;
  if (qword_14AA8C0 != -1)
    swift_once(&qword_14AA8C0, sub_65C48);
  if (*(double *)&qword_14ADE70 >= v8)
    v10 = v8;
  else
    v10 = *(double *)&qword_14ADE70;
  objc_msgSend(a3, "setPreferredContentSize:", v9, v10);
  v11 = objc_msgSend(a3, "view");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

char *sub_65128()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  double v5;
  id v6;
  char *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___maskView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___maskView);
  if (v2)
  {
    v3 = *(char **)(v0
                  + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___maskView);
  }
  else
  {
    v4 = v0;
    if (qword_14AA8D0 != -1)
      swift_once(&qword_14AA8D0, sub_65C70);
    v5 = *(double *)&qword_14ADE80;
    v6 = objc_allocWithZone((Class)type metadata accessor for DescriptionModal.Content.MaskView());
    v7 = sub_65DC8(v5);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_651D4(double a1)
{
  char *v2;
  id v3;
  double v4;
  double v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Width;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  char *v25;
  CGRect v26;
  CGRect v27;

  v2 = sub_65128();
  sub_65C80(a1);

  v25 = sub_65128();
  v3 = sub_64E3C();
  objc_msgSend(v3, "contentOffset");
  v5 = v4;

  v6 = sub_64E3C();
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v26.origin.x = v8;
  v26.origin.y = v10;
  v26.size.width = v12;
  v26.size.height = v14;
  Width = CGRectGetWidth(v26);
  v16 = sub_64E3C();
  objc_msgSend(v16, "frame");
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v27.origin.x = v18;
  v27.origin.y = v20;
  v27.size.width = v22;
  v27.size.height = v24;
  objc_msgSend(v25, "setFrame:", 0.0, v5, Width, CGRectGetHeight(v27));

}

id sub_65300()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___blurView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___blurView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___blurView);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone((Class)type metadata accessor for ProgressiveBlurView());
    v6 = ProgressiveBlurView.init(blurRadius:edge:)(3, 6.0);
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_65378(double a1)
{
  id v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double Height;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  id v27;
  CGRect v28;
  CGRect v29;

  v2 = sub_65300();
  objc_msgSend(v2, "setAlpha:", a1);

  v27 = sub_65300();
  v3 = sub_64E3C();
  objc_msgSend(v3, "frame");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v28.origin.x = v5;
  v28.origin.y = v7;
  v28.size.width = v9;
  v28.size.height = v11;
  Height = CGRectGetHeight(v28);
  if (qword_14AA8D0 != -1)
    swift_once(&qword_14AA8D0, sub_65C70);
  v13 = Height - *(double *)&qword_14ADE80;
  v14 = sub_64E3C();
  objc_msgSend(v14, "contentOffset");
  v16 = v15;

  v17 = v13 + v16;
  v18 = sub_64E3C();
  objc_msgSend(v18, "frame");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;

  v29.origin.x = v20;
  v29.origin.y = v22;
  v29.size.width = v24;
  v29.size.height = v26;
  objc_msgSend(v27, "setFrame:", 0.0, v17, CGRectGetWidth(v29), *(double *)&qword_14ADE80);

}

void sub_65504()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  objc_super v36;

  v36.receiver = v0;
  v36.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v36, "viewDidLayoutSubviews");
  v1 = sub_64E3C();
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  objc_msgSend(v1, "setFrame:");

  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4;
  objc_msgSend(v4, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  sub_64E9C(v7, v9, v11, v13);
  v14 = sub_64E3C();
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v16 = v15;
  objc_msgSend(v15, "bounds");
  v18 = v17;
  v20 = v19;

  objc_msgSend(v14, "sizeThatFits:", v18, v20);
  v22 = v21;

  v23 = OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_heightNeeded;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_heightNeeded] = v22;
  v24 = sub_64E3C();
  objc_msgSend(v24, "contentOffset");
  v26 = v25;

  v27 = sub_64E3C();
  objc_msgSend(v27, "frame");
  v29 = v28;

  v30 = sub_64E3C();
  objc_msgSend(v30, "adjustedContentInset");
  v32 = v31;

  v33 = *(double *)&v0[v23];
  if (qword_14AA8D0 != -1)
    swift_once(&qword_14AA8D0, sub_65C70);
  v34 = (*(double *)&qword_14ADE80 - (v33 - (v26 + v29 - v32))) / *(double *)&qword_14ADE80;
  if (v34 < 0.0)
    v34 = 0.0;
  if (v34 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  sub_651D4(v35);
  sub_65378(1.0 - v35);
}

id sub_657C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  NSString *v21;
  id v22;
  NSString *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[112];
  void *v47;
  _QWORD v48[5];

  v37 = a1;
  v43 = type metadata accessor for AttributedString.AttributeMergePolicy(0);
  v40 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v38 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for AttributeContainer(0);
  v42 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for AttributedString(0);
  v41 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  objc_msgSend(v9, "setEditable:", 0);
  v10 = objc_msgSend(v9, "textContainer");
  objc_msgSend(v10, "setLineFragmentPadding:", 0.0);

  v11 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v11, "setMinimumLineHeight:", 22.0);
  v12 = objc_msgSend(v11, "copy");
  _bridgeAnyObjectToAny(_:)(v48, v12);
  v13 = sub_4E684(0, (unint64_t *)&qword_14ADF58, NSParagraphStyle_ptr);
  swift_dynamicCast(&v47, v48, (char *)&type metadata for Any + 8, v13, 7);
  v14 = v47;

  swift_unknownObjectRelease(v12);
  v15 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_descriptionText
                  + 8);
  v48[0] = *(_QWORD *)(a1
                     + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_descriptionText);
  v48[1] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14ADF60);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  swift_bridgeObjectRetain();
  v17 = MarkupRenderer.init(_:)(v48);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release(v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AC490);
  inited = swift_initStackObject(v18, v46);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = NSFontAttributeName;
  v20 = (void *)objc_opt_self(UIFont);
  v21 = NSParagraphStyleAttributeName;
  v22 = v14;
  v23 = NSFontAttributeName;
  v24 = objc_msgSend(v20, "preferredFontForTextStyle:", UIFontTextStyleBody);
  *(_QWORD *)(inited + 104) = sub_4E684(0, qword_14ADF70, UIFont_ptr);
  *(_QWORD *)(inited + 80) = v24;
  v25 = sub_196A6C(inited);
  AttributeContainer.init(_:)(v25);
  v26 = v40;
  v27 = v38;
  v28 = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v38, enum case for AttributedString.AttributeMergePolicy.keepNew(_:), v43);
  AttributedString.mergeAttributes(_:mergePolicy:)(v4, v27);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v45);
  sub_4E684(0, &qword_14B5190, NSAttributedString_ptr);
  v29 = v41;
  v30 = v39;
  v31 = v44;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v39, v8, v44);
  v32 = (void *)NSAttributedString.init(_:)(v30);
  objc_msgSend(v9, "setAttributedText:", v32);

  v33 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v9, "setTextColor:", v33);

  v34 = v9;
  objc_msgSend(v34, "setDelegate:", v37);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v31);
  return v34;
}

void sub_65C48()
{
  qword_14ADE70 = 0x4084400000000000;
}

void sub_65C5C()
{
  qword_14ADE78 = 0x4080E00000000000;
}

void sub_65C70()
{
  qword_14ADE80 = 0x4050000000000000;
}

void sub_65C80(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  _BYTE v18[24];
  _QWORD v19[4];
  __int128 v20;
  __int128 v21;

  v2 = OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientOpacity;
  v3 = *(double *)(v1
                 + OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientOpacity);
  *(double *)(v1
            + OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientOpacity) = a1;
  if (v3 != a1)
  {
    v4 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradient);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
    v6 = swift_allocObject(v5, 48, 7);
    *(_OWORD *)(v6 + 16) = xmmword_105F8A0;
    v7 = (void *)objc_opt_self(UIColor);
    *(_QWORD *)(v6 + 32) = objc_msgSend(v7, "blackColor");
    v8 = objc_msgSend(v7, "blackColor");
    v9 = objc_msgSend(v8, "colorWithAlphaComponent:", *(double *)(v1 + v2));

    *(_QWORD *)(v6 + 40) = v9;
    v19[0] = v6;
    specialized Array._endMutation()(v10);
    v11 = v6;
    v12 = v4 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
    swift_beginAccess(v4 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v18, 0, 0);
    v14 = *(_QWORD *)(v12 + 16);
    v15 = *(_QWORD *)(v12 + 24);
    v19[0] = *(_QWORD *)v12;
    v13 = (void *)v19[0];
    v19[1] = v11;
    v19[2] = v14;
    v19[3] = v15;
    v16 = *(_OWORD *)(v12 + 48);
    v20 = *(_OWORD *)(v12 + 32);
    v21 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v13;
    Gradient.View.typedConfiguration.setter((uint64_t)v19);
  }
}

char *sub_65DC8(double a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  double v17;
  double v18;
  double *v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  objc_super v25;
  char v26[24];
  char v27[24];
  _QWORD v28[9];

  v3 = OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_opaqueFiller;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v1;
  v6 = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "blackColor");
  objc_msgSend(v6, "setBackgroundColor:", v8);

  *(_QWORD *)&v1[v3] = v6;
  v9 = OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradient;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_105F8A0;
  v12 = kCAGradientLayerAxial;
  *(_QWORD *)(v11 + 32) = objc_msgSend(v7, "blackColor");
  v13 = objc_msgSend(v7, "blackColor");
  v14 = objc_msgSend(v13, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v11 + 40) = v14;
  v28[0] = v11;
  specialized Array._endMutation()(v15);
  v16 = CGPoint.topCenter.unsafeMutableAddressor();
  swift_beginAccess(v16, v27, 0, 0);
  v17 = *(double *)v16;
  v18 = *((double *)v16 + 1);
  v19 = (double *)CGPoint.bottomCenter.unsafeMutableAddressor();
  swift_beginAccess(v19, v26, 0, 0);
  Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)((uint64_t)v12, v11, 0, 0, (uint64_t)v28, v17, v18, *v19, v19[1]);
  v20 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
  *(_QWORD *)&v5[v9] = Gradient.View.init(configuration:)((uint64_t)v28);
  *(_QWORD *)&v5[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientOpacity] = 0x3FF0000000000000;
  *(double *)&v5[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientHeight] = a1;

  v25.receiver = v5;
  v25.super_class = (Class)type metadata accessor for DescriptionModal.Content.MaskView();
  v21 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_opaqueFiller];
  v23 = v21;
  objc_msgSend(v23, "addSubview:", v22);
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v23[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradient]);

  return v23;
}

id sub_66068()
{
  char *v0;
  void *v1;
  double Width;
  CGFloat Height;
  uint64_t v4;
  void *v5;
  CGFloat v6;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_opaqueFiller];
  objc_msgSend(v0, "frame");
  Width = CGRectGetWidth(v8);
  objc_msgSend(v0, "frame");
  Height = CGRectGetHeight(v9);
  v4 = OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientHeight;
  objc_msgSend(v1, "setFrame:", 0.0, 0.0, Width, Height- *(double *)&v0[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradientHeight]);
  v5 = *(void **)&v0[OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradient];
  objc_msgSend(v0, "frame");
  v6 = CGRectGetHeight(v10) - *(double *)&v0[v4];
  objc_msgSend(v0, "frame");
  return objc_msgSend(v5, "setFrame:", 0.0, v6, CGRectGetWidth(v11), *(double *)&v0[v4]);
}

id sub_661A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DescriptionModal.Content.MaskView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_662EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for DescriptionModal()
{
  return objc_opt_self(_TtC16MusicApplication16DescriptionModal);
}

uint64_t type metadata accessor for DescriptionModal.Content()
{
  return objc_opt_self(_TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content);
}

uint64_t type metadata accessor for DescriptionModal.Content.MaskView()
{
  return objc_opt_self(_TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView);
}

id sub_66384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_heightNeeded] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___descriptionTextView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___maskView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content____lazy_storage___blurView] = 0;
  v8 = &v4[OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_descriptionText];
  *(_QWORD *)v8 = a3;
  *((_QWORD *)v8 + 1) = a4;
  v18.receiver = v4;
  v18.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setTitle:", v10);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v9, "dismissAnimated");
  v12 = v11;
  v13 = objc_msgSend(v9, "navigationItem");

  objc_msgSend(v13, "setRightBarButtonItem:", v12);
  v14 = AccessibilityIdentifier.doneButton.unsafeMutableAddressor();
  v15 = *v14;
  v16 = v14[1];
  sub_4E684(0, (unint64_t *)&unk_14C11B0, UIBarButtonItem_ptr);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v15, v16);

  return v9;
}

void sub_66538()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v1 = sub_64E3C();
  objc_msgSend(v1, "contentOffset");
  v3 = v2;

  v4 = sub_64E3C();
  objc_msgSend(v4, "frame");
  v6 = v5;

  v7 = sub_64E3C();
  objc_msgSend(v7, "adjustedContentInset");
  v9 = v8;

  v10 = *(double *)(v0
                  + OBJC_IVAR____TtCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content_heightNeeded);
  if (qword_14AA8D0 != -1)
    swift_once(&qword_14AA8D0, sub_65C70);
  v11 = (*(double *)&qword_14ADE80 - (v10 - (v3 + v6 - v9))) / *(double *)&qword_14ADE80;
  if (v11 < 0.0)
    v11 = 0.0;
  if (v11 > 1.0)
    v11 = 1.0;
  v12 = 1.0 - v11;
  sub_651D4(v11);
  sub_65378(v12);
}

void sub_66628()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  double v15;
  double v16;
  double *v17;
  id v18;
  char v19[24];
  char v20[24];
  _QWORD v21[8];

  v1 = v0;
  v2 = OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_opaqueFiller;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "blackColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  *(_QWORD *)&v1[v2] = v3;
  v6 = OBJC_IVAR____TtCCC16MusicApplication16DescriptionModalP33_003B5E72AE51392282BD208E8EE7BE767Content8MaskView_gradient;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_105F8A0;
  v9 = kCAGradientLayerAxial;
  *(_QWORD *)(v8 + 32) = objc_msgSend(v4, "blackColor");
  v10 = objc_msgSend(v4, "blackColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v8 + 40) = v11;
  v21[0] = v8;
  specialized Array._endMutation()(v12);
  v13 = v8;
  v14 = CGPoint.topCenter.unsafeMutableAddressor();
  swift_beginAccess(v14, v20, 0, 0);
  v15 = *(double *)v14;
  v16 = *((double *)v14 + 1);
  v17 = (double *)CGPoint.bottomCenter.unsafeMutableAddressor();
  swift_beginAccess(v17, v19, 0, 0);
  Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)((uint64_t)v9, v13, 0, 0, (uint64_t)v21, v15, v16, *v17, v17[1]);
  v18 = objc_allocWithZone((Class)type metadata accessor for Gradient.View());
  *(_QWORD *)&v1[v6] = Gradient.View.init(configuration:)((uint64_t)v21);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/Header+DescriptionModal.swift", 46, 2, 289, 0);
  __break(1u);
}

uint64_t sub_6682C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_66850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_64FC8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_66858(uint64_t a1)
{
  _QWORD v2[6];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = "\b";
  v2[4] = "\b";
  v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 6, v2, a1 + 952);
}

void sub_668AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  void *v36;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
    v5 = sub_87A44();
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v35, v3, v4, v5);
    v1 = v35[0];
    v33 = v35[1];
    v7 = v35[2];
    v8 = v35[3];
    v9 = v35[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
    v8 = 0;
  }
  v32 = _swiftEmptyArrayStorage;
  v13 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v14 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v17 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
    if (!v17)
      goto LABEL_47;
    v18 = v17;
    v34 = v17;
    v19 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v36;
    swift_unknownObjectRelease(v18);
    v8 = v14;
    if (!v20)
      goto LABEL_47;
LABEL_34:
    ObjectType = swift_getObjectType();
    v25 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionsBuilderBase);
    if (v25)
      v26 = v25;
    else
      v26 = 0;
    if (v25)
      v27 = v20;
    else
      v27 = 0;
    if (v27)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1201AC(0, v32[2] + 1, 1, v32);
        v32 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v29 = v32[2];
      v28 = v32[3];
      v30 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1201AC((_QWORD *)(v28 > 1), v29 + 1, 1, v32);
        v30 = v29 + 1;
        v32 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v32[2] = v30;
      v31 = &v32[2 * v29];
      v31[4] = v27;
      v31[5] = v26;
    }
    else
    {

    }
  }
  if (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v8 << 6);
LABEL_33:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_47;
    goto LABEL_34;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 >= v13)
      goto LABEL_47;
    v22 = *(_QWORD *)(v33 + 8 * v21);
    ++v8;
    if (!v22)
    {
      v8 = v14 + 2;
      if (v14 + 2 >= v13)
        goto LABEL_47;
      v22 = *(_QWORD *)(v33 + 8 * v8);
      if (!v22)
      {
        v8 = v14 + 3;
        if (v14 + 3 >= v13)
          goto LABEL_47;
        v22 = *(_QWORD *)(v33 + 8 * v8);
        if (!v22)
        {
          v8 = v14 + 4;
          if (v14 + 4 >= v13)
            goto LABEL_47;
          v22 = *(_QWORD *)(v33 + 8 * v8);
          if (!v22)
          {
            v8 = v14 + 5;
            if (v14 + 5 >= v13)
              goto LABEL_47;
            v22 = *(_QWORD *)(v33 + 8 * v8);
            if (!v22)
            {
              v23 = v14 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v33 + 8 * v23++);
                if (v22)
                {
                  v8 = v23 - 1;
                  goto LABEL_32;
                }
              }
LABEL_47:
              sub_55D68(v1);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v9 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v8 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

unint64_t sub_66BF8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 232))
  {
    v1 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v1 = sub_196A88((uint64_t)_swiftEmptyArrayStorage);
    v2 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v0 + 232) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v2);
  }
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_66C58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v4;

  if (*(_QWORD *)(v0 + 240))
  {
    v1 = *(void **)(v0 + 240);
  }
  else
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_4ACD0((uint64_t)_swiftEmptyArrayStorage);
      v1 = v4;
    }
    else
    {
      v1 = &_swiftEmptySetSingleton;
    }
    v2 = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v0 + 240) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v2);
  }
  swift_bridgeObjectRetain();
  return v1;
}

double sub_66CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  double result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t (*)(void *), uint64_t);
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 96);
  if (Strong)
  {
    v4 = (_QWORD *)Strong;
    v5 = *(_QWORD *)(v1 + 224);
    v6 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
    v7 = swift_bridgeObjectRetain();
    v10 = WeakArray.allElements.getter(v7, v6, v8, v9);
    swift_bridgeObjectRelease(v5);
    v11 = *(uint64_t (**)(uint64_t, uint64_t (*)(void *), uint64_t))&stru_108.segname[(swift_isaMask & *v4) - 8];
    v12 = v4;
    v13 = v11(v10, sub_879D8, v1);

    v14 = sub_66C58();
    sub_668AC((uint64_t)v14);
    v16 = v15;
    swift_bridgeObjectRelease(v14);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v38 = v13;
      v39 = v10;
      swift_bridgeObjectRetain();
      v18 = (uint64_t *)(v16 + 40);
      do
      {
        v24 = *(v18 - 1);
        v25 = *v18;
        ObjectType = swift_getObjectType();
        v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
        swift_unknownObjectRetain(v24);
        v28 = v27(ObjectType, v25);
        v29 = type metadata accessor for ImpressionTracker();
        v30 = swift_dynamicCastClass(v28, v29);
        if (v30)
          *(_BYTE *)(v30 + 40) = 1;
        v19 = swift_unknownObjectRelease(v28);
        v20 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v27)(ObjectType, v25, v19);
        v22 = v21;
        v23 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v22 + 96))(v23, v22);
        swift_unknownObjectRelease(v24);
        swift_unknownObjectRelease(v20);
        v18 += 2;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease(v16);
      v10 = v39;
      v13 = v38;
    }
    swift_bridgeObjectRelease(v16);
    v31 = *(_QWORD *)(v1 + 208);
    if (*(_QWORD *)(v31 + 16) <= *(_QWORD *)(v13 + 16) >> 3)
    {
      swift_bridgeObjectRetain();
      v34 = swift_bridgeObjectRetain();
      sub_43C65C(v34);
      swift_bridgeObjectRelease(v31);
      v33 = v13;
    }
    else
    {
      swift_bridgeObjectRetain();
      v32 = swift_bridgeObjectRetain();
      v33 = (uint64_t)sub_43D938(v32, v13);
      swift_bridgeObjectRelease(v31);
    }
    sub_67120(v33, (uint64_t (*)(uint64_t *))sub_87A24);
    v35 = *(_QWORD *)(v1 + 208);
    if (*(_QWORD *)(v13 + 16) <= *(_QWORD *)(v35 + 16) >> 3)
    {
      v40 = *(void **)(v1 + 208);
      swift_bridgeObjectRetain();
      sub_43C65C(v13);
      v36 = v40;
    }
    else
    {
      swift_bridgeObjectRetain();
      v36 = sub_43D938(v13, v35);
    }
    sub_67120((uint64_t)v36, (uint64_t (*)(uint64_t *))sub_87A04);
    v37 = *(_QWORD *)(v1 + 208);
    *(_QWORD *)(v1 + 208) = v13;
    swift_bridgeObjectRelease(v37);
    sub_308984();

    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v33);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v36).n128_u64[0];
  }
  return result;
}

uint64_t sub_66FD0(void *a1, uint64_t a2)
{
  uint64_t Strong;
  _QWORD *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t (*v10)(_QWORD *);
  _QWORD *v11;
  _QWORD *v12;
  char v13;
  void *v14;
  char v15;
  uint64_t (*v16)(id);

  Strong = swift_unknownObjectWeakLoadStrong(a2 + 96);
  if (Strong)
  {
    v4 = (_QWORD *)Strong;
    v5 = a1;
    v6 = sub_66BF8();
    if (*(_QWORD *)(v6 + 16) && (v7 = sub_21C0A0((uint64_t)v5), (v8 & 1) != 0))
    {
      v9 = *(id *)(*(_QWORD *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease(v6);

      v10 = *(uint64_t (**)(_QWORD *))&stru_108.segname[swift_isaMask & *v4];
      v11 = v9;
      v12 = v4;
      v13 = v10(v11);

      v4 = v11;
    }
    else
    {
      swift_bridgeObjectRelease(v6);

      v14 = sub_66C58();
      v15 = sub_A325D4(v5, (uint64_t)v14);
      swift_bridgeObjectRelease(v14);
      if ((v15 & 1) != 0)
      {
        v13 = 1;
LABEL_10:

        return v13 & 1;
      }
      v16 = *(uint64_t (**)(id))&stru_108.segname[swift_isaMask & *v4];
      v4 = v4;
      v13 = v16(v5);
    }

    goto LABEL_10;
  }
  v13 = 0;
  return v13 & 1;
}

double sub_67120(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v2;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = swift_allocObject(&unk_13422D8, 24, 7);
  swift_weakInit(v5 + 16);
  v8 = v2;
  v9 = v5;
  sub_95F95C(a2, (uint64_t)&v7, a1);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_67194(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = a2;
  if (qword_14AC030 != -1)
    swift_once(&qword_14AC030, sub_A826EC);
  UnfairLock.locked<A>(_:)(sub_874C0);
  return sub_308F08(a1, (uint64_t)&v4, qword_14F3380, 0, 3);
}

void sub_67238(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char **v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t (*v17)(uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unsigned int v51;
  void *v52;
  char v53;
  id v54;
  void *v55;
  int v56;
  uint64_t v57;
  void (*v58)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD v63[3];
  id v64;
  _BYTE v65[24];

  v3 = v2;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 96);
  if (!Strong)
    return;
  v7 = (void *)Strong;
  ObjectType = swift_getObjectType();
  v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionsBuilderBase);
  if (v9)
    v10 = v9;
  else
    v10 = 0;
  if (v9)
    v11 = a1;
  else
    v11 = 0;
  v12 = &selRef_sharedPreferences;
  if (v11)
  {
    v61 = a2;
    swift_beginAccess(v2 + 248, v65, 0, 0);
    v13 = *(_QWORD *)(v2 + 248);
    v14 = swift_getObjectType();
    v62 = a1;
    swift_bridgeObjectRetain();
    v15 = sub_A325D4(v11, v13);
    v16 = swift_bridgeObjectRelease(v13);
    v17 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8);
    if ((v15 & 1) == 0)
    {
      v18 = v17(v14, v10, v16);
      v20 = v19;
      v21 = swift_getObjectType();
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v21, v20);
      swift_unknownObjectRelease(v18);
      v16 = swift_unknownObjectRelease(v22);
      if (!v22)
      {
        v23 = v17(v14, v10, v16);
        v25 = v24;
        v60 = v14;
        v26 = swift_getObjectType();
        v58 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v25 + 40);
        v27 = swift_unknownObjectRetain(v3);
        v58(v27, &off_1358878, v26, v25);
        v28 = swift_unknownObjectRelease(v23);
        v29 = v17(v60, v10, v28);
        v57 = v30;
        v59 = v29;
        v31 = *(_QWORD **)(v3 + 32);
        v32 = swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
          v31 = sub_120880(0, v31[2] + 1, 1, v31);
        v34 = v31[2];
        v33 = v31[3];
        if (v34 >= v33 >> 1)
          v31 = sub_120880((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
        v31[2] = v34 + 1;
        v35 = &v31[2 * v34];
        v35[4] = v59;
        v35[5] = v57;
        v36 = *(_QWORD *)(v3 + 32);
        *(_QWORD *)(v3 + 32) = v31;
        sub_3108CC(v36);
        swift_bridgeObjectRelease(v36);
        swift_beginAccess(v3 + 248, v63, 33, 0);
        v37 = v62;
        sub_6DE68((Swift::Int *)&v64, v11, (unint64_t *)&qword_14C9D90, UIViewController_ptr, (uint64_t *)&unk_14AC920);
        swift_endAccess(v63);

        v14 = v60;
      }
    }
    v38 = v17(v14, v10, v16);
    v39 = v14;
    v41 = v40;
    v42 = swift_getObjectType();
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 80))(v42, v41);
    v44 = swift_unknownObjectRelease(v38);
    v45 = v17(v39, v10, v44);
    v47 = v46;
    v48 = objc_msgSend(v7, "view");
    if (!v48)
      goto LABEL_26;
    v49 = v48;
    v50 = swift_getObjectType();
    v51 = objc_msgSend(v49, "isHidden");

    (*(void (**)(_QWORD, uint64_t, uint64_t))(v47 + 16))(v51 ^ 1, v50, v47);
    swift_unknownObjectRelease(v45);
    a2 = v61;
    v12 = &selRef_sharedPreferences;
  }
  else
  {
    v43 = 0;
  }
  v52 = sub_66C58();
  v53 = sub_A325D4(a1, (uint64_t)v52);
  v54 = objc_msgSend(a1, v12[166], swift_bridgeObjectRelease(v52).n128_f64[0]);
  if (!v54)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    return;
  }
  v55 = v54;
  v63[0] = a2;
  if ((v53 & 1) != 0)
    v56 = 2;
  else
    v56 = 0;
  sub_308F08(v54, (uint64_t)v63, v43, v11 == 0, v56);

}

void sub_675EC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  _BYTE v14[24];

  v6 = *a1;
  v7 = *(_QWORD *)(a2 + 224);
  v8 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
  swift_bridgeObjectRetain();
  v10 = (void *)WeakArray.subscript.getter(v6, v7, v8, v9);
  swift_bridgeObjectRelease(v7);
  if (v10)
  {
    v11 = a3 + 16;
    swift_beginAccess(v11, v14, 0, 0);
    Strong = swift_weakLoadStrong(v11);
    if (Strong)
    {
      v13 = Strong;
      a4(v10, v6);

      swift_release(v13);
    }
    else
    {

    }
  }
}

void sub_676C4(void *a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;

  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionsBuilderBase);
  if (v5)
    v7 = v5;
  else
    v7 = 0;
  if (v5)
    v8 = a1;
  else
    v8 = 0;
  if (v8)
  {
    v9 = swift_getObjectType();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    v11 = a1;
    v12 = v10(v9, v7);
    v14 = v13;
    v15 = swift_getObjectType();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v14 + 16))(0, v15, v14);

    *(_QWORD *)&v6 = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  v16 = objc_msgSend(a1, "view", v6);
  if (v16)
  {
    v17 = v16;
    v18 = a2;
    sub_317BBC((uint64_t)&v18);

  }
  else
  {
    __break(1u);
  }
}

void sub_677B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  unint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[7];
  unint64_t v25;

  v2 = v1;
  v25 = (unint64_t)_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicApplication27VerticalStackViewController__viewControllers);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease(v3);
    v19 = _swiftEmptyArrayStorage;
LABEL_27:
    v21 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
    v22 = WeakArray.init(_:)((uint64_t)v19, v21);
    v23 = *(_QWORD *)(v2 + 224);
    *(_QWORD *)(v2 + 224) = v22;
    swift_bridgeObjectRelease(v23);
    return;
  }
  if (v3 < 0)
    v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicApplication27VerticalStackViewController__viewControllers);
  else
    v20 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v4)
    goto LABEL_26;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v9 = *(id *)(v3 + 8 * i + 32);
      v10 = v9;
      ObjectType = swift_getObjectType();
      v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionTrackerNestedViewControllerProviding);
      if (v12)
        v13 = v12;
      else
        v13 = 0;
      if (v12)
        v14 = v10;
      else
        v14 = 0;
      if (v14)
      {
        v6 = sub_20B71C();
        __chkstk_darwin(v6);
        v24[2] = v2;
        v24[3] = v14;
        v24[4] = v13;
        v8 = sub_67AE0((uint64_t (*)(id *))sub_86F84, v24, v7);
        sub_6B604((uint64_t)v8, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_84764);
      }
      else if (!sub_A323D8(ObjectType, *(_QWORD *)(v2 + 216)))
      {
        v15 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v17 = *(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFFF8));
        v16 = *(_QWORD *)((char *)&dword_18 + (v25 & 0xFFFFFFFFFFFFFF8));
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v18);
      }

    }
    swift_bridgeObjectRelease(v3);
    v19 = (_QWORD *)v25;
    goto LABEL_27;
  }
  __break(1u);
}

BOOL sub_679C4(void **a1, uint64_t *a2, void *a3, uint64_t a4)
{
  void *v7;
  uint64_t ObjectType;
  BOOL v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  id v20;

  v7 = *a1;
  ObjectType = swift_getObjectType();
  v9 = sub_A323D8(ObjectType, a2[27]);
  if (!v9)
  {
    v10 = v7;
    v19 = sub_66C58();
    sub_6DE68((Swift::Int *)&v20, v10, (unint64_t *)&qword_14C9D90, UIViewController_ptr, (uint64_t *)&unk_14AC920);
    v11 = a2[30];
    a2[30] = (uint64_t)v19;
    swift_bridgeObjectRelease(v11);

    v12 = v10;
    v13 = a3;
    v14 = (void *)sub_66BF8();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    v20 = v14;
    sub_19CE88((uint64_t)v13, a4, v12, isUniquelyReferenced_nonNull_native);
    v16 = (uint64_t)v20;

    swift_bridgeObjectRelease(0x8000000000000000);
    v17 = a2[29];
    a2[29] = v16;
    swift_bridgeObjectRelease(v17);
  }
  return !v9;
}

void *sub_67AE0(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = &_swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = &_swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

void sub_67C84(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v7 = type metadata accessor for SidebarMenu.Item(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - v10;
  v24 = _swiftEmptyArrayStorage;
  v21 = *(_QWORD *)(a3 + 16);
  if (v21)
  {
    v12 = 0;
    v13 = _swiftEmptyArrayStorage;
    v19[1] = a2;
    v20 = a3;
    v19[0] = a1;
    while (v12 < *(_QWORD *)(a3 + 16))
    {
      v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v15 = *(_QWORD *)(v23 + 72);
      sub_877CC(a3 + v14 + v15 * v12, (uint64_t)v11);
      v16 = a1(v11);
      if (v3)
      {
        sub_87810((uint64_t)v11);
        swift_release(v13);
        swift_bridgeObjectRelease(a3);
        return;
      }
      if ((v16 & 1) != 0)
      {
        sub_8784C((uint64_t)v11, v22);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          sub_123F64(0, v13[2] + 1, 1);
        v13 = v24;
        v18 = v24[2];
        v17 = v24[3];
        if (v18 >= v17 >> 1)
        {
          sub_123F64(v17 > 1, v18 + 1, 1);
          v13 = v24;
        }
        v13[2] = v18 + 1;
        sub_8784C(v22, (uint64_t)v13 + v14 + v18 * v15);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_87810((uint64_t)v11);
      }
      if (v21 == ++v12)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease(a3);
  }
}

uint64_t sub_67E74(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_84764);
}

uint64_t sub_67E80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((char *)&dword_18 + (v4 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_84980(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for JSImpression, &qword_14AE008, &qword_14AE000, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_45BC74);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_68058(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_84B90);
}

uint64_t sub_68064(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_84FC8);
}

uint64_t sub_68070(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_84DAC);
}

uint64_t sub_6807C(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_851E4);
}

uint64_t sub_68088(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((char *)&dword_18 + (v4 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_8693C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))&type metadata accessor for MusicLibrary, &qword_14AE1F0, &qword_14AE1E8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_45BCC8);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_68260(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_85400);
}

void sub_6826C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_12102C(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    *v1 = v3;
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_19;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 < v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  v12 = (unint64_t)&v3[4 * v10 + 4];
  if (a1 + 32 < v12 + 32 * v2 && v12 < a1 + 32 + 32 * v2)
    goto LABEL_26;
  swift_arrayInitWithCopy(v12);
  if (v2)
  {
    v14 = v3[2];
    v15 = __OFADD__(v14, v2);
    v16 = v14 + v2;
    if (!v15)
    {
      v3[2] = v16;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    v17 = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
    __break(1u);
    return;
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  if (v2 == v11)
LABEL_23:
    *v1 = v3;
}

void sub_683D4(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      v9 = *(_QWORD *)(a1 + 16);
      if (v9)
        goto LABEL_5;
LABEL_18:
      if (!v2)
        goto LABEL_19;
      goto LABEL_21;
    }
  }
  if (v4 <= v5)
    v16 = v4 + v2;
  else
    v16 = v4;
  v3 = sub_120F20(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  v8 = v3[3] >> 1;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_18;
LABEL_5:
  v10 = v3[2];
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9)
    goto LABEL_24;
  type metadata accessor for ActivityType(0);
  swift_arrayInitWithCopy(v11);
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = v3[2];
  v14 = __OFADD__(v13, v9);
  v15 = v13 + v9;
  if (!v14)
  {
    v3[2] = v15;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
}

uint64_t sub_68544(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_8561C);
}

uint64_t sub_68550(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_85838);
}

uint64_t sub_6855C(uint64_t a1)
{
  return sub_6A068(a1, (uint64_t (*)(void))sub_12137C);
}

uint64_t sub_68568(uint64_t a1)
{
  return sub_6B924(a1, (uint64_t (*)(void))sub_120C94, (uint64_t (*)(_QWORD))&type metadata accessor for Track);
}

uint64_t sub_6857C(uint64_t a1)
{
  return sub_685A4(a1, (uint64_t (*)(void))sub_120C80, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
}

uint64_t sub_68590(uint64_t a1)
{
  return sub_685A4(a1, (uint64_t (*)(void))sub_1215E4, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

uint64_t sub_685A4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  char v27;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3)
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v27 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v27, 1092, 0);
  __break(1u);
  return result;
}

void sub_68720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_5;
      goto LABEL_18;
    }
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1202EC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = v3[3] >> 1;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v9 = v3[2];
  if (v8 - v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v2 && v10 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE230);
  swift_arrayInitWithCopy(v10);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v2);
  v14 = v12 + v2;
  if (!v13)
  {
    v3[2] = v14;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_68888(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_120780(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_689CC(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1218B4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[15 * v9 + 4];
  if (a1 + 32 < v10 + 120 * v8 && v10 < a1 + 32 + 120 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_68B28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((char *)&dword_18 + (v4 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_84980(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for BottomPlayerManager.Queue, &qword_14AE138, &qword_14AE130, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_45BC20);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void sub_68D00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1219EC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[13 * v8 + 4];
  if (a1 + 32 < v9 + 104 * v2 && v9 < a1 + 32 + 104 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_68E58(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for RecentlyAddedMusicItem(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BFE50);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BFF40);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1F8);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_5C150(&qword_14AE200, (uint64_t *)&unk_14BFF40, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_121C50(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_14AE1F8;
    v35 = (uint64_t)v91;
    return sub_56024(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_5C150(&qword_14AE208, (uint64_t *)&unk_14BFF40, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_5C238(v40, v82, (uint64_t *)&unk_14BFE50);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_56024(v45, (uint64_t *)&unk_14BFE50);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_121C50(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_5C238(v88, v46, (uint64_t *)&unk_14BFE50);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_56024(v54, (uint64_t *)&unk_14BFE50);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_56024(v88, (uint64_t *)&unk_14BFE50);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_5C238(v69, v86, (uint64_t *)&unk_14BFE50);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_5C238(v88, v82, (uint64_t *)&unk_14BFE50);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_56024(v88, (uint64_t *)&unk_14BFE50);
  sub_56024(v27, &qword_14AE1F8);
  v35 = v45;
  v34 = (uint64_t *)&unk_14BFE50;
  return sub_56024(v35, v34);
}

uint64_t sub_6954C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_121E08(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_696A4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for Playlist.Folder.Item(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1D0);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1D8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8570);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_5C150((unint64_t *)&unk_14C8330, &qword_14AE1D8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_121E58(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = (uint64_t *)&unk_14C8570;
    v35 = (uint64_t)v91;
    return sub_56024(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_5C150((unint64_t *)&qword_14C82E0, &qword_14AE1D8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_5C238(v40, v82, &qword_14AE1D0);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_56024(v45, &qword_14AE1D0);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_121E58(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_5C238(v88, v46, &qword_14AE1D0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_56024(v54, &qword_14AE1D0);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_56024(v88, &qword_14AE1D0);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_5C238(v69, v86, &qword_14AE1D0);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_5C238(v88, v82, &qword_14AE1D0);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_56024(v88, &qword_14AE1D0);
  sub_56024(v27, (uint64_t *)&unk_14C8570);
  v35 = v45;
  v34 = &qword_14AE1D0;
  return sub_56024(v35, v34);
}

void sub_69D98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_12210C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_69EE8(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_85C94);
}

uint64_t sub_69EF4(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_85EB0);
}

void sub_69F00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_11FD80(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_6A050(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_860CC);
}

uint64_t sub_6A05C(uint64_t a1)
{
  return sub_6A068(a1, (uint64_t (*)(void))sub_122810);
}

uint64_t sub_6A068(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t result;
  char v15;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v2) && v5 + v3 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v4 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v3)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v8 = *(_QWORD *)(v4 + 16);
  if ((*(_QWORD *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = (void *)(v4 + v8 + 32);
  if (a1 + 32 < (unint64_t)v9 + v3 && (unint64_t)v9 < a1 + 32 + v3)
    goto LABEL_21;
  memcpy(v9, (const void *)(a1 + 32), v3);
  if (!v3)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v2 = v4;
    return result;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v11, v3);
  v13 = v11 + v3;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_6A1B8(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for MusicVideo(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE170);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BB0B0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE178);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_5C150(&qword_14AE180, (uint64_t *)&unk_14BB0B0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_122CCC(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_14AE178;
    v35 = (uint64_t)v91;
    return sub_56024(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_5C150(&qword_14AE188, (uint64_t *)&unk_14BB0B0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_5C238(v40, v82, &qword_14AE170);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_56024(v45, &qword_14AE170);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_122CCC(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_5C238(v88, v46, &qword_14AE170);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_56024(v54, &qword_14AE170);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_56024(v88, &qword_14AE170);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_5C238(v69, v86, &qword_14AE170);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_5C238(v88, v82, &qword_14AE170);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_56024(v88, &qword_14AE170);
  sub_56024(v27, &qword_14AE178);
  v35 = v45;
  v34 = &qword_14AE170;
  return sub_56024(v35, v34);
}

uint64_t sub_6A8AC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v20;
  char *v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, _QWORD);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(unint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(unint64_t, char *, uint64_t);
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[5];

  v2 = v1;
  v87 = type metadata accessor for Album(0);
  v4 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BB520);
  __chkstk_darwin(v6);
  v86 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  v88 = (uint64_t)&v73 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7E40);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v89 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE160);
  __chkstk_darwin(v80);
  v91 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, uint64_t))sub_5C150(&qword_14AE168, &qword_14D7E40, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = dispatch thunk of Sequence.underestimatedCount.getter(v12, v16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v2 + 16);
  v20 = (unint64_t *)(v19 + v17);
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = (char *)v17;
  v90 = v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v18);
  *v2 = v18;
  if (isUniquelyReferenced_nonNull_native && (v23 = *(_QWORD *)(v18 + 24) >> 1, v23 >= (uint64_t)v20))
  {
    v20 = v2;
  }
  else
  {
    if (v19 <= (uint64_t)v20)
      v24 = (int64_t)v20;
    else
      v24 = v19;
    v18 = sub_121DD4(isUniquelyReferenced_nonNull_native, v24, 1, v18);
    v20 = v2;
    *v2 = v18;
    v23 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v18 + 16);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = v23 - v25;
  v81 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = v18 + v81 + v26 * v25;
  v29 = (uint64_t)v89;
  v12 = v90;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v84 = v26;
  v83(v89, a1, v90);
  v30 = dispatch thunk of Sequence._copyContents(initializing:)(v91, v28, v27, v12, v16);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(a1, v12);
  if (v30 < (uint64_t)v21)
    goto LABEL_17;
  if (v30 >= 1)
  {
    v31 = *(_QWORD *)(*v20 + 16);
    v32 = __OFADD__(v31, v30);
    v33 = v31 + v30;
    if (v32)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(*v20 + 16) = v33;
  }
  if (v30 != v27)
  {
    v34 = &qword_14AE160;
    v35 = (uint64_t)v91;
    return sub_56024(v35, v34);
  }
LABEL_18:
  v79 = *(_QWORD *)(*v20 + 16);
  v27 = (uint64_t)v91;
  v21 = &v91[*(int *)(v80 + 36)];
  v37 = *(_QWORD *)v21;
  v29 = sub_5C150((unint64_t *)&qword_14BAFE0, &qword_14D7E40, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v12, v29);
  v76 = v29;
  if (v37 != v92[0])
  {
LABEL_21:
    v43 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v21, v12, v29);
    v39 = v87;
    v40 = v88;
    (*(void (**)(uint64_t))(v4 + 16))(v88);
    v43(v92, 0);
    v44 = v89;
    v83(v89, v27, v12);
    dispatch thunk of Collection.formIndex(after:)(v21, v12, v29);
    v16((uint64_t)v44, v12);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v41 = v40;
    v42 = 0;
    goto LABEL_22;
  }
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39 = v87;
  v40 = v88;
  v41 = v88;
  v42 = 1;
LABEL_22:
  v75 = v38;
  v38(v41, v42, 1, v39);
  v45 = v82;
  v46 = v86;
  sub_5C238(v40, v82, (uint64_t *)&unk_14BB520);
  v80 = *(_QWORD *)(v4 + 48);
  v47 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v39);
  v48 = v79;
  if (v47 != 1)
  {
    v74 = v21;
    do
    {
      sub_56024(v45, (uint64_t *)&unk_14BB520);
      v50 = *v20;
      v51 = *(_QWORD *)(*v20 + 24);
      v52 = v51 >> 1;
      if ((uint64_t)(v51 >> 1) < v48 + 1)
      {
        v50 = sub_121DD4(v51 > 1, v48 + 1, 1, *v20);
        *v20 = v50;
        v52 = *(_QWORD *)(v50 + 24) >> 1;
      }
      sub_5C238(v88, v46, (uint64_t *)&unk_14BB520);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v46, 1, v87) == 1)
      {
        v54 = v86;
        v53 = v87;
LABEL_31:
        sub_56024(v54, (uint64_t *)&unk_14BB520);
        v49 = v48;
        v46 = v54;
      }
      else
      {
        if (v48 <= v52)
          v55 = v52;
        else
          v55 = v48;
        v77 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
        v78 = v55;
        v56 = v50 + v81;
        v57 = v85;
        v58 = v56 + v84 * v48;
        v54 = v86;
        v53 = v87;
        while (1)
        {
          v67 = v54;
          v68 = v77;
          v77((unint64_t)v57, (char *)v67, v53);
          if (v78 == v48)
            break;
          v79 = v48;
          v69 = v88;
          sub_56024(v88, (uint64_t *)&unk_14BB520);
          v68(v58, v57, v53);
          v70 = *(_QWORD *)v21;
          v63 = v21;
          v71 = v90;
          v72 = v76;
          dispatch thunk of Collection.endIndex.getter(v90, v76);
          if (v70 == v92[0])
          {
            v64 = v69;
            v65 = 1;
            v53 = v87;
          }
          else
          {
            v59 = v63;
            v60 = v91;
            v61 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v92, v59, v71, v72);
            v53 = v87;
            (*(void (**)(uint64_t))(v4 + 16))(v69);
            v61(v92, 0);
            v62 = v89;
            v83(v89, (uint64_t)v60, v71);
            v63 = v74;
            dispatch thunk of Collection.formIndex(after:)(v74, v71, v72);
            v16((uint64_t)v62, v71);
            v64 = v69;
            v65 = 0;
          }
          v75(v64, v65, 1, v53);
          v21 = v63;
          v54 = v86;
          sub_5C238(v69, v86, (uint64_t *)&unk_14BB520);
          v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v54, 1, v53);
          v57 = v85;
          v58 += v84;
          v48 = v79 + 1;
          v27 = (uint64_t)v91;
          if (v66 == 1)
            goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v53);
        v49 = v78;
        v48 = v78;
        v46 = v86;
      }
      *(_QWORD *)(*v20 + 16) = v49;
      v45 = v82;
      sub_5C238(v88, v82, (uint64_t *)&unk_14BB520);
    }
    while (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v45, 1, v53) != 1);
  }
  sub_56024(v88, (uint64_t *)&unk_14BB520);
  sub_56024(v27, &qword_14AE160);
  v35 = v45;
  v34 = (uint64_t *)&unk_14BB520;
  return sub_56024(v35, v34);
}

uint64_t sub_6AFA0(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_862E8);
}

uint64_t sub_6AFAC(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_86504);
}

void sub_6AFB8(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      v9 = *(_QWORD *)(a1 + 16);
      if (v9)
        goto LABEL_5;
LABEL_18:
      if (!v2)
        goto LABEL_19;
      goto LABEL_21;
    }
  }
  if (v4 <= v5)
    v16 = v4 + v2;
  else
    v16 = v4;
  v3 = sub_122E00(isUniquelyReferenced_nonNull_native, v16, 1, v3);
  v8 = v3[3] >> 1;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_18;
LABEL_5:
  v10 = v3[2];
  if (v8 - v10 < (uint64_t)v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v11 + 8 * v9 && v11 < a1 + 32 + 8 * v9)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14B8480);
  swift_arrayInitWithCopy(v11);
  if (v9 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = v3[2];
  v14 = __OFADD__(v13, v9);
  v15 = v13 + v9;
  if (!v14)
  {
    v3[2] = v15;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
}

uint64_t sub_6B12C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease();
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((char *)&dword_18 + (v4 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_8693C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))_s9ComponentCMa, &qword_14AE128, &qword_14AE120, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_45BD1C);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void sub_6B304(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_121B28(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_6B45C(uint64_t a1)
{
  sub_6B484(a1, (uint64_t (*)(void))sub_122F54, (uint64_t *)&unk_14C1270);
}

void sub_6B470(uint64_t a1)
{
  sub_6B484(a1, (uint64_t (*)(void))sub_122280, &qword_14AE0F0);
}

void sub_6B484(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4)
    goto LABEL_21;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy(v11);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return;
  }
  v13 = *(_QWORD *)(v5 + 16);
  v14 = __OFADD__(v13, v4);
  v15 = v13 + v4;
  if (!v14)
  {
    *(_QWORD *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_6B5F8(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_86B4C);
}

uint64_t sub_6B604(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((char *)&dword_18 + (v6 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8));
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8)) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

void sub_6B7C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_121C84(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_6B910(uint64_t a1)
{
  return sub_6B924(a1, (uint64_t (*)(void))sub_123908, type metadata accessor for Search.Recents.Result.Item);
}

uint64_t sub_6B924(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_6BA9C(uint64_t a1)
{
  return sub_6B604(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_86D68);
}

uint64_t sub_6BAA8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[26]);
  swift_bridgeObjectRelease(v0[27]);
  swift_bridgeObjectRelease(v0[28]);
  swift_bridgeObjectRelease(v0[29]);
  swift_bridgeObjectRelease(v0[30]);
  return swift_bridgeObjectRelease(v0[31]);
}

_QWORD *sub_6BAE4()
{
  _QWORD *v0;

  v0 = (_QWORD *)sub_308B28();
  swift_bridgeObjectRelease(v0[26]);
  swift_bridgeObjectRelease(v0[27]);
  swift_bridgeObjectRelease(v0[28]);
  swift_bridgeObjectRelease(v0[29]);
  swift_bridgeObjectRelease(v0[30]);
  swift_bridgeObjectRelease(v0[31]);
  return v0;
}

uint64_t sub_6BB38()
{
  _QWORD *v0;

  v0 = sub_6BAE4();
  return swift_deallocClassInstance(v0, 256, 7);
}

uint64_t type metadata accessor for VerticalStackViewControllerImpressionTracker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VerticalStackViewControllerImpressionTracker);
}

void sub_6BB64(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

uint64_t sub_6BBD0()
{
  char *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  swift_bridgeObjectRetain();
  String.hash(into:)(&v8, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  v4 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v8 = *v1;
  *v1 = 0x8000000000000000;
  sub_77AAC(v2, v4, isUniquelyReferenced_nonNull_native);
  v6 = *v1;
  *v1 = v8;
  swift_bridgeObjectRelease(v6);
  result = 1;
  *v0 = v2;
  return result;
}

uint64_t sub_6BEF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[9];

  v3 = v2;
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  Hasher.init(_seed:)(v22);
  swift_bridgeObjectRetain();
  sub_8CF8B8();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v21 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_877CC(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9);
      sub_8D1AA0((uint64_t)v9, a2);
      v17 = v16;
      sub_87810((uint64_t)v9);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease(v10);
        a1 = v21;
        goto LABEL_7;
      }
    }
    sub_87810(a2);
    swift_bridgeObjectRelease(v10);
    sub_877CC(*(_QWORD *)(*v3 + 48) + v15 * v13, v21);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_877CC(a2, (uint64_t)v9);
    v22[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_77E84((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    v19 = *v3;
    *v3 = v22[0];
    swift_bridgeObjectRelease(v19);
    sub_8784C(a2, a1);
    return 1;
  }
}

BOOL sub_6C0BC(uint64_t a1)
{
  return sub_6E8E4(a1, &qword_14AE1E0, (uint64_t)&_s6FilterON);
}

uint64_t sub_6C0D0(unsigned __int8 *a1, unsigned __int8 a2)
{
  unint64_t *v2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t result;
  unint64_t *v21;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22);
  v21 = v2;
  if (a2)
  {
    if (a2 == 1)
      v6 = 0x657469726F766166;
    else
      v6 = 0x64616F6C6E776F64;
    v7 = 0xE900000000000073;
  }
  else
  {
    v7 = 0xE300000000000000;
    v6 = 7105633;
  }
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v21);
    v22[0] = *v21;
    *v21 = 0x8000000000000000;
    sub_78040(a2, v10, isUniquelyReferenced_nonNull_native);
    v19 = *v21;
    *v21 = v22[0];
    swift_bridgeObjectRelease(v19);
    result = 1;
    goto LABEL_28;
  }
  v11 = ~v9;
  while (1)
  {
    if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v10))
    {
      if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v10) == 1)
        v12 = 0x657469726F766166;
      else
        v12 = 0x64616F6C6E776F64;
      v13 = 0xE900000000000073;
      v14 = a2;
      if (a2)
      {
LABEL_17:
        if (v14 == 1)
          v16 = 0x657469726F766166;
        else
          v16 = 0x64616F6C6E776F64;
        v15 = 0xE900000000000073;
        if (v12 != v16)
          goto LABEL_22;
        goto LABEL_21;
      }
    }
    else
    {
      v13 = 0xE300000000000000;
      v12 = 7105633;
      v14 = a2;
      if (a2)
        goto LABEL_17;
    }
    v15 = 0xE300000000000000;
    v16 = 7105633;
    if (v12 != 7105633)
      goto LABEL_22;
LABEL_21:
    if (v13 == v15)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v13);
      goto LABEL_27;
    }
LABEL_22:
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v16, v15, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
    if ((v17 & 1) != 0)
      break;
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_24;
  }
  v13 = v5;
LABEL_27:
  swift_bridgeObjectRelease(v13);
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v21 + 48) + v10);
LABEL_28:
  *a1 = a2;
  return result;
}

uint64_t sub_6C34C(Swift::Int *a1, void *a2)
{
  return sub_6DE68(a1, a2, (unint64_t *)&qword_14C9D90, UIViewController_ptr, (uint64_t *)&unk_14AC920);
}

uint64_t sub_6C368(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  int v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  char v20;
  BOOL v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[9];

  v9 = a4 & 1;
  v10 = *v4;
  Hasher.init(_seed:)(v33);
  v30 = v4;
  v31 = a1;
  if ((a4 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    swift_bridgeObjectRetain();
    sub_4E674(a2, a3, 1);
    NSObject.hash(into:)(v33);
    sub_4E664(a2, a3, 1);
  }
  else
  {
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain();
    String.hash(into:)(v33, a2, a3);
  }
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v32 = ~v12;
    do
    {
      v16 = *(_QWORD *)(v10 + 48) + 24 * v13;
      v17 = *(void **)v16;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = *(_BYTE *)(v16 + 16);
      if ((v19 & 1) != 0)
      {
        if (v9)
        {
          sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
          sub_4E674(a2, a3, 1);
          sub_4E674(v17, v18, 1);
          v20 = static NSObject.== infix(_:_:)(v17, a2);
          v14 = v10 + 56;
          sub_4E664(a2, a3, 1);
          sub_4E664(v17, v18, 1);
          v15 = v32;
          if ((v20 & 1) != 0)
            goto LABEL_17;
        }
      }
      else if (!v9)
      {
        v21 = v17 == a2 && v18 == a3;
        if (v21
          || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, a2, a3, 0), v15 = v32, (v22 & 1) != 0))
        {
LABEL_17:
          sub_4E664(a2, a3, v19);
          swift_bridgeObjectRelease(v10);
          v23 = *(_QWORD *)(*v30 + 48) + 24 * v13;
          v24 = *(void **)v23;
          v25 = *(_QWORD *)(v23 + 8);
          v26 = *(_BYTE *)(v23 + 16);
          *(_QWORD *)v31 = *(_QWORD *)v23;
          *(_QWORD *)(v31 + 8) = v25;
          *(_BYTE *)(v31 + 16) = v26;
          sub_4E674(v24, v25, v26);
          return 0;
        }
      }
      v13 = (v13 + 1) & v15;
    }
    while (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease(v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
  v33[0] = *v30;
  *v30 = 0x8000000000000000;
  sub_4E674(a2, a3, v9);
  sub_782C0(a2, a3, v9, v13, isUniquelyReferenced_nonNull_native);
  v29 = *v30;
  *v30 = v33[0];
  swift_bridgeObjectRelease(v29);
  *(_QWORD *)v31 = a2;
  *(_QWORD *)(v31 + 8) = a3;
  result = 1;
  *(_BYTE *)(v31 + 16) = v9 != 0;
  return result;
}

uint64_t sub_6C640(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_78530(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_6C738(uint64_t *a1, uint64_t a2)
{
  return sub_6DD3C(a1, a2, &qword_14D8170, (uint64_t)&type metadata for Int);
}

uint64_t sub_6C74C(Swift::Int *a1, void *a2)
{
  return sub_6DE68(a1, a2, &qword_14AD340, NSUserActivity_ptr, &qword_14AE280);
}

uint64_t sub_6C768(Swift::Int *a1, void *a2)
{
  return sub_6DE68(a1, a2, (unint64_t *)&qword_14C5D80, UIScene_ptr, &qword_14AE278);
}

uint64_t sub_6C784(unsigned __int8 *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::UInt v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14);
  if ((a2 - 3) >= 7u)
  {
    Hasher._combine(_:)(6uLL);
    v6 = a2;
  }
  else
  {
    v6 = qword_105FA68[(char)(a2 - 3)];
  }
  Hasher._combine(_:)(v6);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_24:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_787E8(a2, v9, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_25;
  }
  v10 = ~v8;
  while (2)
  {
    switch(*(_BYTE *)(*(_QWORD *)(v5 + 48) + v9))
    {
      case 3:
        if (a2 == 3)
          goto LABEL_23;
        goto LABEL_7;
      case 4:
        if (a2 == 4)
          goto LABEL_23;
        goto LABEL_7;
      case 5:
        if (a2 == 5)
          goto LABEL_23;
        goto LABEL_7;
      case 6:
        if (a2 == 6)
          goto LABEL_23;
        goto LABEL_7;
      case 7:
        if (a2 == 7)
          goto LABEL_23;
        goto LABEL_7;
      case 8:
        if (a2 == 8)
          goto LABEL_23;
        goto LABEL_7;
      case 9:
        if (a2 == 9)
          goto LABEL_23;
        goto LABEL_7;
      default:
        if ((a2 - 10) > 0xF8u || *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v9) != a2)
        {
LABEL_7:
          v9 = (v9 + 1) & v10;
          if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
            goto LABEL_24;
          continue;
        }
LABEL_23:
        result = 0;
        a2 = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v9);
LABEL_25:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_6C968(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::UInt v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain(a2);
    swift_bridgeObjectRetain();
    v9 = __CocoaSet.member(for:)(v8);
    swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v26 = v9;
      v10 = type metadata accessor for ImpressionTracker();
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(v25, &v26, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v25[0];
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v20 = sub_7107C(v7, result + 1);
    v25[0] = v20;
    v21 = *(_QWORD *)(v20 + 16);
    if (*(_QWORD *)(v20 + 24) <= v21)
    {
      v24 = v21 + 1;
      swift_retain(a2);
      sub_72C0C(v24);
      v22 = v25[0];
    }
    else
    {
      v22 = v20;
      swift_retain(a2);
    }
    sub_777DC(a2, v22);
    v19 = *v3;
    *v3 = v22;
    goto LABEL_18;
  }
  Hasher.init(_seed:)(v25);
  v12 = sub_308B9C();
  Hasher._combine(_:)(v12);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v6 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v25[0] = *v2;
    *v2 = 0x8000000000000000;
    swift_retain(a2);
    sub_78A18(v18, v15, isUniquelyReferenced_nonNull_native);
    v19 = *v2;
    *v2 = v25[0];
LABEL_18:
    swift_bridgeObjectRelease(v19);
    *a1 = a2;
    return 1;
  }
  v16 = ~v14;
  while (sub_308B9C() != *(_QWORD *)(a2 + 56))
  {
    v15 = (v15 + 1) & v16;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_11;
  }
  swift_release(a2);
  v23 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v15);
  *a1 = v23;
  swift_retain(v23);
  return 0;
}

uint64_t sub_6CBB4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  Swift::Int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v42;
  _QWORD v43[9];
  uint64_t v44;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    v40 = v2;
    Hasher.init(_seed:)(v43);
    v11 = *(void **)(a2 + 16);
    swift_bridgeObjectRetain();
    v12 = objc_msgSend(v11, "_identifier");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    String.hash(into:)(v43, v13, v15);
    swift_bridgeObjectRelease(v15);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      v42 = ~v17;
      while (1)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v20 = objc_msgSend(*(id *)(v19 + 16), "_identifier", swift_retain(v19).n128_f64[0]);
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        v24 = objc_msgSend(*(id *)(a2 + 16), "_identifier");
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v27 = v26;

        if (v21 == v25 && v23 == v27)
        {
          swift_bridgeObjectRelease(v6);
          swift_release(a2);
          swift_release(v19);
          swift_bridgeObjectRelease_n(v23, 2);
          goto LABEL_24;
        }
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v27, 0);
        swift_release(v19);
        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v27);
        if ((v29 & 1) != 0)
          break;
        v18 = (v18 + 1) & v42;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
LABEL_24:
      v39 = *(_QWORD *)(*(_QWORD *)(*v40 + 48) + 8 * v18);
      *a1 = v39;
      swift_retain(v39);
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v40);
    v43[0] = *v40;
    *v40 = 0x8000000000000000;
    swift_retain(a2);
    sub_78B84(v31, v18, isUniquelyReferenced_nonNull_native);
    v32 = *v40;
    *v40 = v43[0];
    swift_bridgeObjectRelease(v32);
    *a1 = a2;
    return 1;
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = swift_retain(a2);
  v9 = __CocoaSet.member(for:)(v8);
  swift_release(a2);
  if (!v9)
  {
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v34 = sub_71284(v7, result + 1);
    v43[0] = v34;
    v35 = *(_QWORD *)(v34 + 16);
    if (*(_QWORD *)(v34 + 24) <= v35)
    {
      v37 = v35 + 1;
      swift_retain(a2);
      sub_72EB8(v37);
      v36 = v43[0];
    }
    else
    {
      v36 = v34;
      swift_retain(a2);
    }
    sub_77880(a2, v36);
    v38 = *v3;
    *v3 = v36;
    swift_bridgeObjectRelease(v38);
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease(v6);
  swift_release(a2);
  v44 = v9;
  v10 = type metadata accessor for TabNavigationController.TabElementStack();
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(v43, &v44, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  *a1 = v43[0];
  swift_unknownObjectRelease(v9);
  return 0;
}

uint64_t sub_6CF30(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v27;
  uint64_t v28;
  __n128 v29;
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24(&qword_14D7DA0, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v36 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a1;
    v34 = ~v15;
    v35 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_4DD24(&qword_14AE0B8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v36, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v35 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v34;
      v17 = v21;
      v20 = (void (*)(_QWORD, _QWORD, _QWORD))v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v32;
        a1 = v33;
        v7 = v35;
        goto LABEL_7;
      }
    }
    v25(v36, v6);
    v31 = swift_bridgeObjectRelease(v21);
    v22(v33, *(_QWORD *)(*v32 + 48) + v19 * v16, v6, v31);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v27 = v36;
    v20(v9, v36, v6);
    v37 = *v3;
    *v3 = 0x8000000000000000;
    sub_78DD4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v37;
    v29 = swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v7 + 32))(a1, v27, v6, v29);
    return 1;
  }
}

uint64_t sub_6D18C(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[10];

  v4 = *v2;
  Hasher.init(_seed:)(v14);
  v5 = Library.Menu.Identifier.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_79028(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_6D568(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v24, a2, a3);
  swift_bridgeObjectRelease(a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a3);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_79478(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_6D724(unsigned __int8 *a1, unsigned __int8 a2)
{
  return sub_6DBD8(a1, a2, &qword_14AE060, (uint64_t)&type metadata for BadgeView.Badge);
}

uint64_t sub_6D738(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24);
  swift_bridgeObjectRetain();
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a3);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_79620(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_6D8E4(unsigned __int8 *a1, unsigned __int8 a2)
{
  return sub_6DBD8(a1, a2, &qword_14ACC40, (uint64_t)&_s13EditableFieldON);
}

uint64_t sub_6D8F8(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v28[15];

  v3 = v2;
  v6 = *v3;
  Hasher.init(_seed:)(v28);
  v26 = a2;
  v7 = 0x80000000010C3150;
  v8 = 0xD000000000000029;
  if (*a2 == 1)
    v8 = 0xD00000000000001CLL;
  else
    v7 = 0x80000000010C3170;
  if (*a2)
    v9 = v8;
  else
    v9 = 0xD00000000000002CLL;
  if (*a2)
    v10 = v7;
  else
    v10 = 0x80000000010C3120;
  swift_bridgeObjectRetain();
  String.hash(into:)(v28, v9, v10);
  swift_bridgeObjectRelease(v10);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v25 = a1;
    v14 = ~v12;
    while (1)
    {
      sub_87720(*(_QWORD *)(v6 + 48) + 112 * v13, (uint64_t)v28);
      if (LOBYTE(v28[0]))
      {
        v15 = LOBYTE(v28[0]) == 1 ? 0xD00000000000001CLL : 0xD000000000000029;
        v16 = LOBYTE(v28[0]) == 1 ? 0x80000000010C3150 : 0x80000000010C3170;
      }
      else
      {
        v15 = 0xD00000000000002CLL;
        v16 = 0x80000000010C3120;
      }
      v17 = 0xD000000000000029;
      if (*(_BYTE *)v26 == 1)
      {
        v17 = 0xD00000000000001CLL;
        v18 = 0x80000000010C3150;
      }
      else
      {
        v18 = 0x80000000010C3170;
      }
      v19 = *(_BYTE *)v26 ? v17 : 0xD00000000000002CLL;
      v20 = *(_BYTE *)v26 ? v18 : 0x80000000010C3120;
      if (v15 == v19 && v16 == v20)
        break;
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v19, v20, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v20);
      sub_8775C(v28);
      if ((v21 & 1) != 0)
        goto LABEL_37;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease(v6);
        a1 = v25;
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRelease_n(v16, 2);
    sub_8775C(v28);
LABEL_37:
    sub_8775C(v26);
    swift_bridgeObjectRelease(v6);
    sub_87720(*(_QWORD *)(*v3 + 48) + 112 * v13, v25);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v6);
LABEL_35:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_87720((uint64_t)v26, (uint64_t)v28);
    v27 = *v3;
    *v3 = 0x8000000000000000;
    sub_79910(v28, v13, isUniquelyReferenced_nonNull_native);
    v23 = *v3;
    *v3 = v27;
    swift_bridgeObjectRelease(v23);
    sub_87790((uint64_t)v26, a1);
    return 1;
  }
}

uint64_t sub_6DBB0(unsigned __int8 *a1, unsigned __int8 a2)
{
  return sub_6DBD8(a1, a2, &qword_14ACB90, (uint64_t)&type metadata for Tooltip.AcknowledgmentOption);
}

uint64_t sub_6DBC4(unsigned __int8 *a1, unsigned __int8 a2)
{
  return sub_6DBD8(a1, a2, &qword_14ACB58, (uint64_t)&type metadata for PlaylistEditing.Field);
}

uint64_t sub_6DBD8(unsigned __int8 *a1, unsigned __int8 a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  _QWORD v18[9];

  v9 = *v4;
  Hasher.init(_seed:)(v18);
  Hasher._combine(_:)(a2);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v18[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_797B8(a2, v12, isUniquelyReferenced_nonNull_native, a3, a4);
    v17 = *v4;
    *v4 = v18[0];
    swift_bridgeObjectRelease(v17);
    result = 1;
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(v9 + 48);
  if (*(unsigned __int8 *)(v13 + v12) != a2)
  {
    v14 = ~v11;
    do
    {
      v12 = (v12 + 1) & v14;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v13 + v12) != a2);
  }
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v4 + 48) + v12);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_6DD0C(Swift::Int *a1, void *a2)
{
  return sub_6DE68(a1, a2, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr, (uint64_t *)&unk_14ACC30);
}

uint64_t sub_6DD28(uint64_t *a1, uint64_t a2)
{
  return sub_6DD3C(a1, a2, &qword_14AE1A8, (uint64_t)&type metadata for Int64);
}

uint64_t sub_6DD3C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v7 = v4;
  v10 = *v4;
  v11 = static Hasher._hash(seed:_:)(*(_QWORD *)(v10 + 40), a2);
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
    v19 = *v7;
    *v7 = 0x8000000000000000;
    sub_79B98(a2, v13, isUniquelyReferenced_nonNull_native, a3, a4);
    v18 = *v7;
    *v7 = v19;
    swift_bridgeObjectRelease(v18);
    result = 1;
    goto LABEL_8;
  }
  v14 = *(_QWORD *)(v10 + 48);
  if (*(_QWORD *)(v14 + 8 * v13) != a2)
  {
    v15 = ~v12;
    do
    {
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v14 + 8 * v13) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_6DE4C(Swift::Int *a1, void *a2)
{
  return sub_6DE68(a1, a2, (unint64_t *)&qword_14AE228, MPCPlayerPath_ptr, &qword_14AE220);
}

uint64_t sub_6DE68(Swift::Int *a1, void *a2, unint64_t *a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  Swift::Int v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v42;
  Swift::Int v43;

  v9 = v5;
  v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0)
      v13 = *v5;
    else
      v13 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v14 = a2;
    v15 = __CocoaSet.member(for:)();

    if (v15)
    {
      swift_bridgeObjectRelease(v12);

      v42 = v15;
      v16 = sub_4E684(0, a3, a4);
      swift_unknownObjectRetain(v15);
      swift_dynamicCast(&v43, &v42, (char *)&type metadata for Swift.AnyObject + 8, v16, 7);
      *a1 = v43;
      swift_unknownObjectRelease(v15);
      return 0;
    }
    result = __CocoaSet.count.getter(v13);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v29 = sub_70E60(v13, result + 1, a5, a3, a4);
    v43 = v29;
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v29 + 24) <= v30)
    {
      v36 = v30 + 1;
      v37 = v14;
      sub_744C4(v36, a5);
      v31 = v43;
    }
    else
    {
      v31 = v29;
      v32 = v14;
    }
    sub_77960((uint64_t)v14, v31);
    v38 = *v9;
    *v9 = v31;
    swift_bridgeObjectRelease(v38);
    *a1 = (Swift::Int)v14;
  }
  else
  {
    v18 = *(_QWORD *)(v12 + 40);
    swift_bridgeObjectRetain();
    v19 = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *(_BYTE *)(v12 + 32);
    v21 = v19 & ~v20;
    v39 = a4;
    if (((*(_QWORD *)(v12 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      sub_4E684(0, a3, a4);
      v22 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v21);
      v23 = static NSObject.== infix(_:_:)(v22, a2);

      if ((v23 & 1) != 0)
      {
LABEL_12:
        swift_bridgeObjectRelease(v12);

        v27 = *(void **)(*(_QWORD *)(*v9 + 48) + 8 * v21);
        *a1 = (Swift::Int)v27;
        v28 = v27;
        return 0;
      }
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v21);
        v26 = static NSObject.== infix(_:_:)(v25, a2);

        if ((v26 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    v43 = *v9;
    *v9 = 0x8000000000000000;
    v34 = a2;
    sub_78658((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v39);
    v35 = *v9;
    *v9 = v43;
    swift_bridgeObjectRelease(v35);
    *a1 = (Swift::Int)v34;
  }
  return 1;
}

uint64_t sub_6E130(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  _QWORD v46[9];

  v4 = *v2;
  Hasher.init(_seed:)(v46);
  swift_bridgeObjectRetain();
  Lyrics.TextLine.hash(into:)((uint64_t)v46);
  v5 = Hasher._finalize()();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
    v46[0] = *v39;
    *v39 = 0x8000000000000000;
    sub_87890((_QWORD *)a2);
    sub_79CCC(a2, v7, isUniquelyReferenced_nonNull_native);
    v26 = *v39;
    *v39 = v46[0];
    swift_bridgeObjectRelease(v26);
    v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    v28 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v28;
    v29 = *(_OWORD *)(a2 + 48);
    result = 1;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v29;
    return result;
  }
  v8 = ~v6;
  v9 = *(_QWORD *)(a2 + 16);
  while (1)
  {
    v10 = *(_QWORD *)(v4 + 48);
    v11 = v10 + 104 * v7;
    if (*(_QWORD *)(v11 + 16) != v9
      || *(double *)(v10 + 104 * v7) != *(double *)a2
      || *(double *)(v11 + 8) != *(double *)(a2 + 8)
      || *(double *)(v11 + 40) != *(double *)(a2 + 40)
      || *(double *)(v11 + 48) != *(double *)(a2 + 48))
    {
      goto LABEL_3;
    }
    v12 = *(uint64_t (**)(__n128))(v11 + 56);
    v13 = *(_QWORD *)(v11 + 64);
    v14 = *(_QWORD *)(v11 + 80);
    v15 = *(_QWORD *)(v11 + 96);
    v44 = *(_QWORD *)(v11 + 32);
    swift_bridgeObjectRetain();
    swift_retain(v13);
    v41 = v14;
    swift_retain(v14);
    v16 = swift_retain(v15);
    v42 = v13;
    v17 = v12(v16);
    v19 = v18;
    v20 = (*(uint64_t (**)(void))(a2 + 56))();
    if (v17 == v20 && v19 == v21)
      break;
    v23 = v21;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
    swift_release(v15);
    swift_release(v41);
    swift_release(v42);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) != 0)
      goto LABEL_18;
LABEL_3:
    v7 = (v7 + 1) & v8;
    if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_15;
  }
  swift_release(v15);
  swift_release(v41);
  swift_release(v13);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease_n(v19, 2);
LABEL_18:
  sub_878E4((_QWORD *)a2);
  swift_bridgeObjectRelease(v4);
  v31 = *(_QWORD *)(*v39 + 48) + 104 * v7;
  v32 = *(_QWORD *)(v31 + 16);
  v33 = *(_BYTE *)(v31 + 24);
  v34 = *(_BYTE *)(v31 + 25);
  v35 = *(_BYTE *)(v31 + 26);
  v36 = *(_QWORD *)(v31 + 32);
  v37 = *(_QWORD *)(v31 + 56);
  v38 = *(_QWORD *)(v31 + 96);
  *(_OWORD *)a1 = *(_OWORD *)v31;
  *(_QWORD *)(a1 + 16) = v32;
  *(_BYTE *)(a1 + 24) = v33;
  *(_BYTE *)(a1 + 25) = v34;
  *(_BYTE *)(a1 + 26) = v35;
  *(_QWORD *)(a1 + 32) = v36;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v31 + 40);
  *(_QWORD *)(a1 + 56) = v37;
  v43 = *(_OWORD *)(v31 + 64);
  v45 = *(_OWORD *)(v31 + 80);
  *(_OWORD *)(a1 + 64) = v43;
  *(_OWORD *)(a1 + 80) = v45;
  *(_QWORD *)(a1 + 96) = v38;
  swift_bridgeObjectRetain();
  swift_retain(v43);
  swift_retain(v45);
  swift_retain(v38);
  return 0;
}

uint64_t sub_6E450(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[9];

  v5 = *v2;
  Hasher.init(_seed:)(v32);
  v6 = *a2;
  v7 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v32, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v5 + 48);
    v12 = (_QWORD *)(v11 + (v10 << 6));
    v13 = v12[1];
    v14 = *v12 == v6 && v13 == v7;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, v6, v7, 0) & 1) != 0)
    {
LABEL_7:
      sub_87988(a2);
      swift_bridgeObjectRelease(v5);
      v15 = (_QWORD *)(*(_QWORD *)(*v2 + 48) + (v10 << 6));
      v16 = v15[1];
      v17 = v15[2];
      v18 = v15[3];
      v20 = v15[4];
      v19 = v15[5];
      v21 = v15[6];
      v22 = v15[7];
      *a1 = *v15;
      a1[1] = v16;
      a1[2] = v17;
      a1[3] = v18;
      a1[4] = v20;
      a1[5] = v19;
      a1[6] = v21;
      a1[7] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return 0;
    }
    v24 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v24;
      if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v25 = (_QWORD *)(v11 + (v10 << 6));
      v26 = v25[1];
      v27 = *v25 == v6 && v26 == v7;
      if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v25, v26, v6, v7, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v32[0] = *v2;
  *v2 = 0x8000000000000000;
  sub_87938(a2);
  sub_79F7C(a2, v10, isUniquelyReferenced_nonNull_native);
  v29 = *v2;
  *v2 = v32[0];
  swift_bridgeObjectRelease(v29);
  v30 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v30;
  v31 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v31;
  return 1;
}

uint64_t sub_6E64C(_OWORD *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  _OWORD v45[9];

  v4 = *v2;
  Hasher.init(_seed:)(v45);
  v5 = a2[11];
  v6 = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v45, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = *a2;
  v8 = a2[1];
  v43 = a2;
  if (v8)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v45, v7, v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v4 + 32);
  v11 = v9 & ~v10;
  v12 = v4 + 56;
  v41 = v4;
  if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v13 = ~v10;
    v14 = *(_QWORD *)(v4 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + (v11 << 7));
      v16 = v15[1];
      v17 = v15[11];
      v18 = v15[12];
      if (v16)
      {
        if (!v8)
          goto LABEL_7;
        v19 = *v15 == v7 && v16 == v8;
        if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v15, v16, v7, v8, 0) & 1) == 0)
          goto LABEL_7;
      }
      else if (v8)
      {
        goto LABEL_7;
      }
      v20 = v17 == v5 && v18 == v6;
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v5, v6, 0) & 1) != 0)
      {
        sub_87040(v43);
        swift_bridgeObjectRelease(v41);
        v21 = (__int128 *)(*(_QWORD *)(*v42 + 48) + (v11 << 7));
        v22 = *v21;
        v23 = v21[1];
        v24 = v21[3];
        v45[2] = v21[2];
        v45[3] = v24;
        v45[0] = v22;
        v45[1] = v23;
        v25 = v21[4];
        v26 = v21[5];
        v27 = v21[7];
        v45[6] = v21[6];
        v45[7] = v27;
        v45[4] = v25;
        v45[5] = v26;
        v28 = *v21;
        v29 = v21[1];
        v30 = v21[3];
        a1[2] = v21[2];
        a1[3] = v30;
        *a1 = v28;
        a1[1] = v29;
        v31 = v21[4];
        v32 = v21[5];
        v33 = v21[7];
        a1[6] = v21[6];
        a1[7] = v33;
        a1[4] = v31;
        a1[5] = v32;
        sub_86FA4(v45);
        return 0;
      }
LABEL_7:
      v11 = (v11 + 1) & v13;
    }
    while (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  swift_bridgeObjectRelease(v41);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
  *(_QWORD *)&v45[0] = *v42;
  *v42 = 0x8000000000000000;
  sub_86FA4(v43);
  sub_7A130(v43, v11, isUniquelyReferenced_nonNull_native);
  v36 = *v42;
  *v42 = *(_QWORD *)&v45[0];
  swift_bridgeObjectRelease(v36);
  v37 = *((_OWORD *)v43 + 5);
  a1[4] = *((_OWORD *)v43 + 4);
  a1[5] = v37;
  v38 = *((_OWORD *)v43 + 7);
  a1[6] = *((_OWORD *)v43 + 6);
  a1[7] = v38;
  v39 = *((_OWORD *)v43 + 1);
  *a1 = *(_OWORD *)v43;
  a1[1] = v39;
  v40 = *((_OWORD *)v43 + 3);
  result = 1;
  a1[2] = *((_OWORD *)v43 + 2);
  a1[3] = v40;
  return result;
}

BOOL sub_6E8D0(uint64_t a1)
{
  return sub_6E8E4(a1, &qword_14AE1B8, (uint64_t)&type metadata for JSContainerDetailModelRequestOperation.JSDrivenRequestedProperty);
}

BOOL sub_6E8E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _QWORD v12[9];

  v6 = *v3;
  Hasher.init(_seed:)(v12);
  Hasher._combine(_:)(0);
  v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v6 + 32));
  v8 = (1 << v7) & *(_QWORD *)(v6 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8) + 56);
  if (!v8)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v12[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_7A35C(v7, isUniquelyReferenced_nonNull_native, a2, a3);
    v10 = *v3;
    *v3 = v12[0];
    swift_bridgeObjectRelease(v10);
  }
  return v8 == 0;
}

uint64_t sub_6E9BC(uint64_t a1, void *a2, unsigned __int8 a3)
{
  uint64_t *v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  id v19;
  uint64_t v20;
  _QWORD *v22;
  _QWORD v24[9];

  v6 = *v3;
  Hasher.init(_seed:)(v24);
  swift_bridgeObjectRetain();
  v7 = a2;
  NSObject.hash(into:)(v24);

  v8 = sub_435A30(a3);
  v10 = v9;
  String.hash(into:)(v24, v8, v9);
  swift_bridgeObjectRelease(v10);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
    do
    {
      v15 = *(_QWORD *)(v6 + 48) + 16 * v13;
      v16 = *(unsigned __int8 *)(v15 + 8);
      v17 = *(id *)v15;
      if ((static NSObject.== infix(_:_:)(v17, v7) & 1) != 0)
        __asm { BR              X8 }

      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  swift_bridgeObjectRelease(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
  v24[0] = *v22;
  *v22 = 0x8000000000000000;
  v19 = v7;
  sub_7A46C(v19, a3, v13, isUniquelyReferenced_nonNull_native);
  v20 = *v22;
  *v22 = v24[0];
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)a1 = v19;
  *(_BYTE *)(a1 + 8) = a3;
  return 1;
}

uint64_t sub_6F034(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[9];

  v4 = *v2;
  Hasher.init(_seed:)(v14);
  v5 = sub_435A30(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_7AB3C(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_6F608(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v27;
  __n128 v28;
  __n128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24((unint64_t *)&qword_14B2010, v12, (uint64_t)&protocol conformance descriptor for IndexPath);
  swift_bridgeObjectRetain();
  v35 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a1;
    v33 = ~v15;
    v34 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v35, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v34 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v33;
      v17 = v21;
      v20 = (void (*)(_QWORD, _QWORD, _QWORD))v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v31;
        a1 = v32;
        v7 = v34;
        goto LABEL_7;
      }
    }
    v25(v35, v6);
    v30 = swift_bridgeObjectRelease();
    v22(v32, *(_QWORD *)(*v31 + 48) + v19 * v16, v6, v30);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v27 = v35;
    v20(v9, v35, v6);
    v36 = *v3;
    *v3 = 0x8000000000000000;
    sub_7B18C((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v36;
    v28 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v7 + 32))(a1, v27, v6, v28);
    return 1;
  }
}

uint64_t sub_6F864(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[10];

  v4 = *v2;
  Hasher.init(_seed:)(v14);
  v5 = SortOptions.SortType.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_7B3E0(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_6FCCC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v32 = a2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8);
    swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v30 = v9;
      v10 = type metadata accessor for AnyCancellable(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v31;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_714DC(v7, result + 1);
    v31 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v28 = v25 + 1;
      swift_retain(a2);
      sub_76294(v28);
      v26 = v31;
    }
    else
    {
      v26 = v24;
      swift_retain(a2);
    }
    sub_779E0(a2, v26);
    v29 = *v3;
    *v3 = v26;
    swift_bridgeObjectRelease(v29);
    *a1 = a2;
    return 1;
  }
  v12 = *(_QWORD *)(v6 + 40);
  v13 = type metadata accessor for AnyCancellable(0);
  v14 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_bridgeObjectRetain();
  v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
  v16 = -1 << *(_BYTE *)(v6 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v21 = v32;
    v31 = *v2;
    *v2 = 0x8000000000000000;
    swift_retain(v21);
    sub_7B8BC(v22, v17, isUniquelyReferenced_nonNull_native);
    v23 = *v2;
    *v2 = v31;
    swift_bridgeObjectRelease(v23);
    *a1 = v21;
    return 1;
  }
  v18 = ~v16;
  v19 = sub_4DD24(&qword_14ACB40, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  while (1)
  {
    v31 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v17);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v31, &v32, v13, v19) & 1) != 0)
      break;
    v17 = (v17 + 1) & v18;
    if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(v6);
  swift_release(a2);
  v27 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v17);
  *a1 = v27;
  swift_retain(v27);
  return 0;
}

uint64_t sub_6FF94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _UNKNOWN **v23;
  ValueMetadata *v24;
  uint64_t (*v25)(ValueMetadata *, _UNKNOWN **);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, _UNKNOWN **);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t result;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  _UNKNOWN **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _UNKNOWN **v58;

  v5 = v4;
  v10 = *v5;
  Hasher.init(_seed:)(&v54);
  swift_bridgeObjectRetain();
  v50 = a2;
  v51 = a3;
  sub_A3A3DC((uint64_t)&v54, a2, a3, a4);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v53 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
    swift_bridgeObjectRelease(v10);
LABEL_32:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v54 = *v5;
    *v5 = 0x8000000000000000;
    sub_87A9C(v50, v51, a4);
    sub_7BA74(v50, v51, a4, v13, isUniquelyReferenced_nonNull_native);
    v36 = *v5;
    *v5 = v54;
    swift_bridgeObjectRelease(v36);
    *a1 = v50;
    a1[1] = v51;
    result = 1;
    a1[2] = a4;
    return result;
  }
  v42 = v5;
  v43 = a1;
  v52 = ~v12;
  if (a4 < 0)
    v14 = 0x7972617262696CLL;
  else
    v14 = 0x676F6C61746163;
  v49 = a4;
  v47 = a4 & 0x7FFFFFFFFFFFFFFFLL;
  v15 = &_s7LibraryVN;
  if (a4 >= 0)
    v15 = &_s7CatalogVN;
  v46 = (uint64_t)v15;
  v16 = &off_1398C58;
  if (a4 >= 0)
    v16 = &off_1362C00;
  v44 = v14;
  v45 = v16;
  v48 = v10;
  while (1)
  {
    v17 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 24 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    v21 = v20 < 0 ? 0x7972617262696CLL : 0x676F6C61746163;
    if (v21 == v14)
    {
      sub_87A9C(v19, v18, v20);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, 0xE700000000000000, v14, 0xE700000000000000, 0);
      sub_87A9C(v19, v18, v20);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v22 & 1) == 0)
      {
        sub_87AC4(v19, v18, v20);
        goto LABEL_11;
      }
    }
    v23 = v20 < 0 ? &off_1398C58 : &off_1362C00;
    v58 = v23;
    v24 = v20 < 0 ? &_s7LibraryVN : &_s7CatalogVN;
    v54 = v19;
    v55 = v18;
    v56 = v20 & 0x7FFFFFFFFFFFFFFFLL;
    v57 = (uint64_t)v24;
    __swift_project_boxed_opaque_existential_1(&v54, (uint64_t)v24);
    v25 = (uint64_t (*)(ValueMetadata *, _UNKNOWN **))v23[1];
    sub_87A9C(v19, v18, v20);
    v26 = v25(v24, v23);
    v28 = v27;
    __swift_destroy_boxed_opaque_existential_1(&v54);
    v57 = v46;
    v58 = v45;
    v54 = v50;
    v55 = v51;
    v56 = v47;
    __swift_project_boxed_opaque_existential_1(&v54, v46);
    v29 = (uint64_t (*)(uint64_t, _UNKNOWN **))v45[1];
    sub_87A9C(v50, v51, v49);
    v30 = v29(v46, v45);
    v32 = v31;
    __swift_destroy_boxed_opaque_existential_1(&v54);
    if (v26 == v30 && v28 == v32)
      break;
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v32, 0);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v32);
    sub_87AC4(v19, v18, v20);
    v10 = v48;
    v14 = v44;
    if ((v34 & 1) != 0)
      goto LABEL_34;
LABEL_11:
    v13 = (v13 + 1) & v52;
    if (((*(_QWORD *)(v53 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      swift_bridgeObjectRelease(v10);
      v5 = v42;
      a1 = v43;
      a4 = v49;
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease_n(v28, 2);
  sub_87AC4(v19, v18, v20);
  v10 = v48;
LABEL_34:
  sub_87AC4(v50, v51, v49);
  swift_bridgeObjectRelease(v10);
  v38 = (uint64_t *)(*(_QWORD *)(*v42 + 48) + 24 * v13);
  v39 = *v38;
  v40 = v38[1];
  v41 = v38[2];
  *v43 = *v38;
  v43[1] = v40;
  v43[2] = v41;
  sub_87A9C(v39, v40, v41);
  return 0;
}

uint64_t sub_703C0(char *a1, char a2)
{
  unint64_t *v2;
  unint64_t *v3;
  unint64_t v5;
  char v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  uint64_t result;
  _QWORD v18[9];

  v3 = v2;
  v5 = *v3;
  Hasher.init(_seed:)(v18);
  v6 = a2 & 1;
  if ((a2 & 1) != 0)
    v7 = 0x7972617262696CLL;
  else
    v7 = 0x676F6C61746163;
  swift_bridgeObjectRetain();
  String.hash(into:)(v18, v7, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v10) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v12 == v7)
        break;
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, 0xE700000000000000, v7, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v13 & 1) != 0)
        goto LABEL_14;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease(v5);
    v5 = 0xE700000000000000;
    swift_bridgeObjectRelease(0xE700000000000000);
LABEL_14:
    swift_bridgeObjectRelease(v5);
    result = 0;
    v6 = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_7BE54(v6, v10, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v18[0];
    swift_bridgeObjectRelease(v15);
    result = 1;
  }
  *a1 = v6;
  return result;
}

uint64_t sub_70574(_OWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  Swift::Int v26;
  Swift::Int v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t result;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD *v57;
  _OWORD v58[15];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;

  v3 = v2;
  v6 = *v2;
  Hasher.init(_seed:)(&v59);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(&v59, v7, v8);
  swift_bridgeObjectRelease(v8);
  v9 = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v6 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v57 = v2;
    v12 = ~v10;
    while (1)
    {
      v13 = (__int128 *)(*(_QWORD *)(v6 + 48) + 240 * v11);
      v15 = v13[1];
      v14 = v13[2];
      v59 = *v13;
      v60 = v15;
      v61 = v14;
      v16 = v13[3];
      v17 = v13[4];
      v18 = v13[6];
      v64 = v13[5];
      v65 = v18;
      v62 = v16;
      v63 = v17;
      v19 = v13[7];
      v20 = v13[8];
      v21 = v13[10];
      v68 = v13[9];
      v69 = v21;
      v66 = v19;
      v67 = v20;
      v22 = v13[11];
      v23 = v13[12];
      v24 = v13[14];
      v72 = v13[13];
      v73 = v24;
      v70 = v22;
      v71 = v23;
      Hasher.init(_seed:)(v58);
      v25 = v60;
      sub_87124((uint64_t)&v59);
      swift_bridgeObjectRetain();
      String.hash(into:)(v58, v25, *((_QWORD *)&v25 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)&v25 + 1));
      v26 = Hasher._finalize()();
      Hasher.init(_seed:)(v58);
      swift_bridgeObjectRetain();
      String.hash(into:)(v58, v7, v8);
      swift_bridgeObjectRelease(v8);
      v27 = Hasher._finalize()();
      sub_87308((uint64_t)&v59);
      if (v26 == v27)
        break;
      v11 = (v11 + 1) & v12;
      if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease(v6);
        v3 = v57;
        goto LABEL_7;
      }
    }
    sub_87308(a2);
    swift_bridgeObjectRelease(v6);
    v38 = (_OWORD *)(*(_QWORD *)(*v57 + 48) + 240 * v11);
    v40 = v38[1];
    v39 = v38[2];
    v58[0] = *v38;
    v58[1] = v40;
    v58[2] = v39;
    v41 = v38[6];
    v43 = v38[3];
    v42 = v38[4];
    v58[5] = v38[5];
    v58[6] = v41;
    v58[3] = v43;
    v58[4] = v42;
    v44 = v38[10];
    v46 = v38[7];
    v45 = v38[8];
    v58[9] = v38[9];
    v58[10] = v44;
    v58[7] = v46;
    v58[8] = v45;
    v47 = v38[14];
    v49 = v38[11];
    v48 = v38[12];
    v58[13] = v38[13];
    v58[14] = v47;
    v58[11] = v49;
    v58[12] = v48;
    v50 = v38[13];
    a1[12] = v38[12];
    a1[13] = v50;
    a1[14] = v38[14];
    v51 = v38[9];
    a1[8] = v38[8];
    a1[9] = v51;
    v52 = v38[11];
    a1[10] = v38[10];
    a1[11] = v52;
    v53 = v38[5];
    a1[4] = v38[4];
    a1[5] = v53;
    v54 = v38[7];
    a1[6] = v38[6];
    a1[7] = v54;
    v55 = v38[1];
    *a1 = *v38;
    a1[1] = v55;
    v56 = v38[3];
    a1[2] = v38[2];
    a1[3] = v56;
    sub_87124((uint64_t)v58);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v6);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    *(_QWORD *)&v59 = *v3;
    *v3 = 0x8000000000000000;
    sub_87124(a2);
    sub_7C014(a2, v11, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v59;
    swift_bridgeObjectRelease(v29);
    v30 = *(_OWORD *)(a2 + 208);
    a1[12] = *(_OWORD *)(a2 + 192);
    a1[13] = v30;
    a1[14] = *(_OWORD *)(a2 + 224);
    v31 = *(_OWORD *)(a2 + 144);
    a1[8] = *(_OWORD *)(a2 + 128);
    a1[9] = v31;
    v32 = *(_OWORD *)(a2 + 176);
    a1[10] = *(_OWORD *)(a2 + 160);
    a1[11] = v32;
    v33 = *(_OWORD *)(a2 + 80);
    a1[4] = *(_OWORD *)(a2 + 64);
    a1[5] = v33;
    v34 = *(_OWORD *)(a2 + 112);
    a1[6] = *(_OWORD *)(a2 + 96);
    a1[7] = v34;
    v35 = *(_OWORD *)(a2 + 16);
    *a1 = *(_OWORD *)a2;
    a1[1] = v35;
    v36 = *(_OWORD *)(a2 + 48);
    result = 1;
    a1[2] = *(_OWORD *)(a2 + 32);
    a1[3] = v36;
  }
  return result;
}

uint64_t sub_70880(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v27;
  __n128 v28;
  __n128 v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24(&qword_14AE108, v12, (uint64_t)&protocol conformance descriptor for Song);
  swift_bridgeObjectRetain();
  v35 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a1;
    v33 = ~v15;
    v34 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_4DD24(&qword_14AE110, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v35, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v34 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v33;
      v17 = v21;
      v20 = (void (*)(_QWORD, _QWORD, _QWORD))v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v31;
        a1 = v32;
        v7 = v34;
        goto LABEL_7;
      }
    }
    v25(v35, v6);
    v30 = swift_bridgeObjectRelease();
    v22(v32, *(_QWORD *)(*v31 + 48) + v19 * v16, v6, v30);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v27 = v35;
    v20(v9, v35, v6);
    v36 = *v3;
    *v3 = 0x8000000000000000;
    sub_7C290((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v36;
    v28 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v7 + 32))(a1, v27, v6, v28);
    return 1;
  }
}

uint64_t sub_70ADC(char *a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _QWORD *v10;
  uint64_t v12;

  v4 = *v2;
  v5 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  sub_4D9250(v5, a2);
  v7 = v6 & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v12 = *v10;
  *v10 = 0x8000000000000000;
  sub_7C4E4(a2, v7, isUniquelyReferenced_nonNull_native);
  *v10 = v12;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

Swift::Int sub_70E44(uint64_t a1, uint64_t a2)
{
  return sub_70E60(a1, a2, (uint64_t *)&unk_14AC920, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
}

Swift::Int sub_70E60(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v10 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v29 = v10;
    v11 = __CocoaSet.makeIterator()(a1);
    v12 = __CocoaSet.Iterator.next()(v11);
    if (v12)
    {
      v13 = v12;
      v14 = sub_4E684(0, a4, a5);
      do
      {
        v27 = v13;
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
        v10 = v29;
        v22 = *(_QWORD *)(v29 + 16);
        if (*(_QWORD *)(v29 + 24) <= v22)
        {
          sub_744C4(v22 + 1, a3);
          v10 = v29;
        }
        v15 = v28;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v10 + 40));
        v17 = v10 + 56;
        v18 = -1 << *(_BYTE *)(v10 + 32);
        v19 = result & ~v18;
        v20 = v19 >> 6;
        if (((-1 << v19) & ~*(_QWORD *)(v10 + 56 + 8 * (v19 >> 6))) != 0)
        {
          v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v10 + 56 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v18) >> 6;
          do
          {
            if (++v20 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v20 == v24;
            if (v20 == v24)
              v20 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v17 + 8 * v20);
          }
          while (v26 == -1);
          v21 = __clz(__rbit64(~v26)) + (v20 << 6);
        }
        *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v21) = v15;
        ++*(_QWORD *)(v10 + 16);
        v13 = __CocoaSet.Iterator.next()(result);
      }
      while (v13);
    }
    swift_release(v11);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v10;
}

Swift::Int sub_71060(uint64_t a1, uint64_t a2)
{
  return sub_70E60(a1, a2, &qword_14AE278, (unint64_t *)&qword_14C5D80, UIScene_ptr);
}

Swift::Int sub_7107C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::UInt v10;
  Swift::Int result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[9];
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14AC930);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v24 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for ImpressionTracker();
      do
      {
        v22[0] = v7;
        swift_dynamicCast(&v23, v22, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v24;
        v17 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v17)
        {
          sub_72C0C(v17 + 1);
          v4 = v24;
        }
        v9 = v23;
        Hasher.init(_seed:)(v22);
        v10 = sub_308B9C();
        Hasher._combine(_:)(v10);
        result = Hasher._finalize()();
        v12 = v4 + 56;
        v13 = -1 << *(_BYTE *)(v4 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_71284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t v26;
  uint64_t v27;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACC28);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v27 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for TabNavigationController.TabElementStack();
      do
      {
        v25[0] = v7;
        swift_dynamicCast(&v26, v25, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v27;
        v20 = *(_QWORD *)(v27 + 16);
        if (*(_QWORD *)(v27 + 24) <= v20)
        {
          sub_72EB8(v20 + 1);
          v4 = v27;
        }
        v9 = v26;
        Hasher.init(_seed:)(v25);
        v10 = objc_msgSend(*(id *)(v9 + 16), "_identifier");
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v13 = v12;

        String.hash(into:)(v25, v11, v13);
        swift_bridgeObjectRelease(v13);
        result = Hasher._finalize()();
        v15 = v4 + 56;
        v16 = -1 << *(_BYTE *)(v4 + 32);
        v17 = result & ~v16;
        v18 = v17 >> 6;
        if (((-1 << v17) & ~*(_QWORD *)(v4 + 56 + 8 * (v17 >> 6))) != 0)
        {
          v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v4 + 56 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v21 = 0;
          v22 = (unint64_t)(63 - v16) >> 6;
          do
          {
            if (++v18 == v22 && (v21 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v23 = v18 == v22;
            if (v18 == v22)
              v18 = 0;
            v21 |= v23;
            v24 = *(_QWORD *)(v15 + 8 * v18);
          }
          while (v24 == -1);
          v19 = __clz(__rbit64(~v24)) + (v18 << 6);
        }
        *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v19) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_714C0(uint64_t a1, uint64_t a2)
{
  return sub_70E60(a1, a2, &qword_14AE220, (unint64_t *)&qword_14AE228, MPCPlayerPath_ptr);
}

uint64_t sub_714DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB30);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v25 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for AnyCancellable(0);
      do
      {
        v23 = v7;
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        if (*(_QWORD *)(v25 + 24) <= v18)
        {
          sub_76294(v18 + 1);
          v4 = v25;
        }
        v9 = v24;
        v23 = v24;
        v10 = *(_QWORD *)(v4 + 40);
        v11 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
        result = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v8, v11);
        v13 = v4 + 56;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v16 == v20;
            if (v16 == v20)
              v16 = 0;
            v19 |= v21;
            v22 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v22 == -1);
          v17 = __clz(__rbit64(~v22)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_716FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE260);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x71A50);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v18);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v2 = v17;
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_71A68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD v24[13];
  uint64_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[9];

  v2 = v1;
  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  __chkstk_darwin(v4);
  v29 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for SidebarMenu.Item(0);
  v6 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v34 = (uint64_t)v24 - v10;
  v11 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE268);
  v12 = static _SetStorage.resize(original:capacity:move:)(v11, a1, 1);
  if (*(_QWORD *)(v11 + 16))
  {
    v25 = v1;
    v13 = 1 << *(_BYTE *)(v11 + 32);
    v14 = *(_QWORD *)(v11 + 56);
    v33 = (_QWORD *)(v11 + 56);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v32 = (unint64_t)(v13 + 63) >> 6;
    swift_retain(v11);
    v26 = "library";
    v24[12] = "LibraryView.RecentlyAdded";
    v24[11] = "LibraryView.Playlists";
    v24[10] = "LibraryView.Artists";
    v24[9] = "LibraryView.Albums";
    v24[8] = "LibraryView.Songs";
    v24[7] = "LibraryView.MadeForYou";
    v24[6] = "LibraryView.MusicVideos";
    v24[5] = "LibraryView.Genres";
    v24[4] = "LibraryView.Compilations";
    v24[3] = "LibraryView.Composers";
    v24[2] = "LibraryView.Shows";
    v24[1] = "LibraryView.Downloaded";
    v17 = v34;
    v27 = v6;
    v28 = v11;
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      goto LABEL_22;
    }
    if (v32 > 1)
    {
      v19 = v33[1];
      v20 = 1;
      if (v19)
        goto LABEL_21;
      v20 = 2;
      if (v32 > 2)
      {
        v19 = v33[2];
        if (v19)
          goto LABEL_21;
        v20 = 3;
        if (v32 > 3)
        {
          v19 = v33[3];
          if (!v19)
          {
            v21 = 4;
            if (v32 > 4)
            {
              v19 = v33[4];
              if (v19)
              {
                v20 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                {
                  __break(1u);
                  JUMPOUT(0x72128);
                }
                if (v20 >= v32)
                  break;
                v19 = v33[v20];
                ++v21;
                if (v19)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v18 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_22:
          sub_8784C(*(_QWORD *)(v11 + 48) + *(_QWORD *)(v6 + 72) * v18, v34);
          Hasher.init(_seed:)(v36);
          sub_877CC(v17, (uint64_t)v8);
          v22 = (char *)&loc_71E14 + *((int *)qword_72128 + swift_getEnumCaseMultiPayload(v8, v35));
          __asm { BR              X9 }
        }
      }
    }
LABEL_23:
    swift_release(v11);
    v2 = v25;
    v23 = 1 << *(_BYTE *)(v11 + 32);
    if (v23 > 63)
      bzero(v33, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v33 = -1 << v23;
    *(_QWORD *)(v11 + 16) = 0;
  }
  swift_release(v11);
  *v2 = v12;
}

void sub_72174(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE020);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v32 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_42;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_42;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_42;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_42:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_48;
                  if (v13 >= v11)
                    goto LABEL_42;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v33);
      if (v20)
      {
        if (v20 == 1)
          v21 = 0x657469726F766166;
        else
          v21 = 0x64616F6C6E776F64;
        v22 = 0xE900000000000073;
      }
      else
      {
        v22 = 0xE300000000000000;
        v21 = 7105633;
      }
      String.hash(into:)(v33, v21, v22);
      swift_bridgeObjectRelease(v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_7247C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  id v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB68);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v36 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v34 = v2;
    v35 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v16 >= v35)
          goto LABEL_39;
        v17 = v36[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v35)
            goto LABEL_39;
          v17 = v36[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v35)
              goto LABEL_39;
            v17 = v36[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v35)
              {
LABEL_39:
                swift_release(v3);
                v2 = v34;
                v33 = 1 << *(_BYTE *)(v3 + 32);
                if (v33 > 63)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v17 = v36[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_45;
                  if (v11 >= v35)
                    goto LABEL_39;
                  v17 = v36[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_26;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_26:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = v3;
      v20 = *(_QWORD *)(v3 + 48) + 24 * v15;
      v22 = *(void **)v20;
      v21 = *(_QWORD *)(v20 + 8);
      v23 = *(_BYTE *)(v20 + 16);
      Hasher.init(_seed:)(v37);
      if ((v23 & 1) != 0)
      {
        Hasher._combine(_:)(1uLL);
        v24 = v22;
        NSObject.hash(into:)(v37);
        sub_4E664(v22, v21, 1);
      }
      else
      {
        Hasher._combine(_:)(0);
        String.hash(into:)(v37, v22, v21);
      }
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v6 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v10 + 8 * v28);
        }
        while (v32 == -1);
        v12 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = *(_QWORD *)(v6 + 48) + 24 * v12;
      *(_QWORD *)v13 = v22;
      *(_QWORD *)(v13 + 8) = v21;
      *(_BYTE *)(v13 + 16) = v23;
      ++*(_QWORD *)(v6 + 16);
      v3 = v19;
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_727C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE010);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_72A44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB60);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (*(_QWORD *)(v3 + 16))
  {
    v6 = 1 << *(_BYTE *)(v3 + 32);
    v7 = (_QWORD *)(v3 + 56);
    v8 = -1;
    if (v6 < 64)
      v8 = ~(-1 << v6);
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v6 + 63) >> 6;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v13 = v12 | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return;
        }
        if (v14 >= v10)
          goto LABEL_25;
        v15 = v7[v14];
        ++v11;
        if (!v15)
        {
          v11 = v14 + 1;
          if (v14 + 1 >= v10)
            goto LABEL_25;
          v15 = v7[v11];
          if (!v15)
          {
            v11 = v14 + 2;
            if (v14 + 2 >= v10)
              goto LABEL_25;
            v15 = v7[v11];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v10)
              {
LABEL_25:
                swift_release(v3);
                v17 = 1 << *(_BYTE *)(v3 + 32);
                if (v17 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v7 = -1 << v17;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v15 = v7[v16];
              if (!v15)
              {
                while (1)
                {
                  v11 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_31;
                  if (v11 >= v10)
                    goto LABEL_25;
                  v15 = v7[v11];
                  ++v16;
                  if (v15)
                    goto LABEL_24;
                }
              }
              v11 = v16;
            }
          }
        }
LABEL_24:
        v9 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      sub_7770C(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v13), v5);
    }
  }
  swift_release(v3);
  *v2 = v5;
}

void sub_72C0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AC930);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v30;
                v2 = v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      Hasher.init(_seed:)(v32);
      v21 = sub_308B9C();
      Hasher._combine(_:)(v21);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_72EB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACC28);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v34 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v32 = v2;
    v33 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v33)
          goto LABEL_36;
        v16 = v34[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v33)
            goto LABEL_36;
          v16 = v34[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v33)
              goto LABEL_36;
            v16 = v34[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v33)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v34[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v33)
                    goto LABEL_36;
                  v16 = v34[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      Hasher.init(_seed:)(v35);
      v19 = objc_msgSend(*(id *)(v18 + 16), "_identifier");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      String.hash(into:)(v35, v20, v22);
      swift_bridgeObjectRelease(v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v10 + 8 * v26);
        }
        while (v30 == -1);
        v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_731D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACA70);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v16 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v15 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v15 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v15 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x7363CLL);
              }
              if (v11 >= v15)
                break;
              v10 = v16[v11];
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v17);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v14 = 1 << *(_BYTE *)(v3 + 32);
  if (v14 > 63)
    bzero(v16, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v14;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_73670(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE068);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34);
      swift_bridgeObjectRetain();
      String.hash(into:)(v34, v21, v22);
      swift_bridgeObjectRelease(v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_7395C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AC960);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34);
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_73C38(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  _QWORD v31[9];
  _BYTE v32[120];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1B0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v30 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v29 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          return;
        }
        if (v15 >= v29)
          goto LABEL_44;
        v16 = v30[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v29)
            goto LABEL_44;
          v16 = v30[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v29)
              goto LABEL_44;
            v16 = v30[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v29)
              {
LABEL_44:
                swift_release(v3);
                v28 = 1 << *(_BYTE *)(v3 + 32);
                if (v28 > 63)
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v28;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_50;
                  if (v11 >= v29)
                    goto LABEL_44;
                  v16 = v30[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      sub_87790(*(_QWORD *)(v3 + 48) + 112 * v14, (uint64_t)v32);
      Hasher.init(_seed:)(v31);
      if (v32[0])
      {
        if (v32[0] == 1)
          v18 = 0xD00000000000001CLL;
        else
          v18 = 0xD000000000000029;
        if (v32[0] == 1)
          v19 = 0x80000000010C3150;
        else
          v19 = 0x80000000010C3170;
      }
      else
      {
        v18 = 0xD00000000000002CLL;
        v19 = 0x80000000010C3120;
      }
      String.hash(into:)(v31, v18, v19);
      swift_bridgeObjectRelease(v19);
      v20 = Hasher._finalize()();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = v20 & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_49;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v12 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      sub_87790((uint64_t)v32, *(_QWORD *)(v6 + 48) + 112 * v12);
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_73FA4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32[9];

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v4 + 56);
    v10 = 1 << *(_BYTE *)(v4 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v4 + 56);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v6 + 56;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_36;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_36;
          v19 = v9[v8];
          if (!v19)
          {
            v8 = v18 + 2;
            if (v18 + 2 >= v13)
              goto LABEL_36;
            v19 = v9[v8];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v13)
              {
LABEL_36:
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                v3 = v31;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v8 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v8 >= v13)
                    goto LABEL_36;
                  v19 = v9[v8];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v8 = v20;
            }
          }
        }
LABEL_26:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v17);
      Hasher.init(_seed:)(v32);
      Hasher._combine(_:)(v21);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_74248(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v4 + 56);
    v10 = 1 << *(_BYTE *)(v4 + 32);
    v30 = -1 << v10;
    v31 = v3;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v4 + 56);
    v32 = 1 << *(_BYTE *)(v4 + 32);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v6 + 56;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_36;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_36;
          v19 = v9[v8];
          if (!v19)
          {
            v8 = v18 + 2;
            if (v18 + 2 >= v13)
              goto LABEL_36;
            v19 = v9[v8];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v13)
              {
LABEL_36:
                if (v32 >= 64)
                  bzero((void *)(v4 + 56), 8 * v13);
                else
                  *v9 = v30;
                v3 = v31;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v8 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v8 >= v13)
                    goto LABEL_36;
                  v19 = v9[v8];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v8 = v20;
            }
          }
        }
LABEL_26:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = static Hasher._hash(seed:_:)(*(_QWORD *)(v7 + 40), v21);
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_744C4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    swift_retain(v4);
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v12)
          goto LABEL_36;
        v19 = v9[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_36;
          v19 = v9[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v12)
              goto LABEL_36;
            v19 = v9[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v12)
              {
LABEL_36:
                swift_release(v4);
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v12)
                    goto LABEL_36;
                  v19 = v9[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_7475C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE210);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v36 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v18 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v19 = v18 | (v12 << 6);
      }
      else
      {
        v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v20 >= v10)
          goto LABEL_36;
        v21 = v36[v20];
        ++v12;
        if (!v21)
        {
          v12 = v20 + 1;
          if (v20 + 1 >= v10)
            goto LABEL_36;
          v21 = v36[v12];
          if (!v21)
          {
            v12 = v20 + 2;
            if (v20 + 2 >= v10)
              goto LABEL_36;
            v21 = v36[v12];
            if (!v21)
            {
              v22 = v20 + 3;
              if (v22 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v35 = 1 << *(_BYTE *)(v3 + 32);
                if (v35 > 63)
                  bzero(v36, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v35;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v21 = v36[v22];
              if (!v21)
              {
                while (1)
                {
                  v12 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v21 = v36[v12];
                  ++v22;
                  if (v21)
                    goto LABEL_26;
                }
              }
              v12 = v22;
            }
          }
        }
LABEL_26:
        v9 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v12 << 6);
      }
      v23 = *(_QWORD *)(v3 + 48) + 104 * v19;
      v24 = *(_OWORD *)(v23 + 80);
      v42 = *(_OWORD *)(v23 + 64);
      v43 = v24;
      v44 = *(_QWORD *)(v23 + 96);
      v25 = *(_OWORD *)(v23 + 16);
      v38 = *(_OWORD *)v23;
      v39 = v25;
      v26 = *(_OWORD *)(v23 + 48);
      v40 = *(_OWORD *)(v23 + 32);
      v41 = v26;
      Hasher.init(_seed:)(v37);
      Lyrics.TextLine.hash(into:)((uint64_t)v37);
      v27 = Hasher._finalize()();
      v28 = -1 << *(_BYTE *)(v6 + 32);
      v29 = v27 & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v11 + 8 * v30);
        }
        while (v34 == -1);
        v13 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v6 + 48) + 104 * v13;
      v15 = v43;
      *(_OWORD *)(v14 + 64) = v42;
      *(_OWORD *)(v14 + 80) = v15;
      *(_QWORD *)(v14 + 96) = v44;
      v16 = v39;
      *(_OWORD *)v14 = v38;
      *(_OWORD *)(v14 + 16) = v16;
      v17 = v41;
      *(_OWORD *)(v14 + 32) = v40;
      *(_OWORD *)(v14 + 48) = v17;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_74A74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t i;
  __int128 v39;
  _QWORD v40[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE218);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v37 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v35 = v2;
    v36 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    for (i = v3; ; v3 = i)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v16 >= v36)
          goto LABEL_36;
        v17 = v37[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v36)
            goto LABEL_36;
          v17 = v37[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v36)
              goto LABEL_36;
            v17 = v37[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v36)
              {
LABEL_36:
                swift_release(v3);
                v2 = v35;
                v34 = 1 << *(_BYTE *)(v3 + 32);
                if (v34 > 63)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v17 = v37[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_42;
                  if (v11 >= v36)
                    goto LABEL_36;
                  v17 = v37[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_26;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_26:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = *(_QWORD *)(v3 + 48) + (v15 << 6);
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v39 = *(_OWORD *)(v19 + 24);
      v23 = *(_QWORD *)(v19 + 40);
      v24 = *(_QWORD *)(v19 + 48);
      v25 = *(_QWORD *)(v19 + 56);
      Hasher.init(_seed:)(v40);
      swift_bridgeObjectRetain();
      String.hash(into:)(v40, v20, v21);
      swift_bridgeObjectRelease(v21);
      v26 = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v6 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v10 + 8 * (v28 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v10 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v10 + 8 * v29);
        }
        while (v33 == -1);
        v12 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = *(_QWORD *)(v6 + 48) + (v12 << 6);
      *(_QWORD *)v13 = v20;
      *(_QWORD *)(v13 + 8) = v21;
      *(_QWORD *)(v13 + 16) = v22;
      *(_OWORD *)(v13 + 24) = v39;
      *(_QWORD *)(v13 + 40) = v23;
      *(_QWORD *)(v13 + 48) = v24;
      *(_QWORD *)(v13 + 56) = v25;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_74DB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  _QWORD v43[9];
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE018);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v42 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v40 = v2;
    v41 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v17 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v18 = v17 | (v11 << 6);
      }
      else
      {
        v19 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v19 >= v41)
          goto LABEL_39;
        v20 = v42[v19];
        ++v11;
        if (!v20)
        {
          v11 = v19 + 1;
          if (v19 + 1 >= v41)
            goto LABEL_39;
          v20 = v42[v11];
          if (!v20)
          {
            v11 = v19 + 2;
            if (v19 + 2 >= v41)
              goto LABEL_39;
            v20 = v42[v11];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v41)
              {
LABEL_39:
                swift_release(v3);
                v2 = v40;
                v39 = 1 << *(_BYTE *)(v3 + 32);
                if (v39 > 63)
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v39;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v20 = v42[v21];
              if (!v20)
              {
                while (1)
                {
                  v11 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_45;
                  if (v11 >= v41)
                    goto LABEL_39;
                  v20 = v42[v11];
                  ++v21;
                  if (v20)
                    goto LABEL_26;
                }
              }
              v11 = v21;
            }
          }
        }
LABEL_26:
        v9 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v11 << 6);
      }
      v22 = v3;
      v23 = *(_QWORD *)(v3 + 48) + (v18 << 7);
      v25 = *(_QWORD *)v23;
      v24 = *(_QWORD *)(v23 + 8);
      v26 = *(_OWORD *)(v23 + 64);
      v48 = *(_OWORD *)(v23 + 48);
      v49 = v26;
      v27 = *(_QWORD *)(v23 + 88);
      v50 = *(_QWORD *)(v23 + 80);
      v28 = *(_OWORD *)(v23 + 32);
      v46 = *(_OWORD *)(v23 + 16);
      v47 = v28;
      v29 = *(_QWORD *)(v23 + 96);
      v30 = *(_OWORD *)(v23 + 104);
      v45 = *(_QWORD *)(v23 + 120);
      v44 = v30;
      Hasher.init(_seed:)(v43);
      swift_bridgeObjectRetain();
      String.hash(into:)(v43, v27, v29);
      swift_bridgeObjectRelease(v29);
      if (v24)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)(v43, v25, v24);
        swift_bridgeObjectRelease(v24);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      v31 = Hasher._finalize()();
      v32 = -1 << *(_BYTE *)(v6 + 32);
      v33 = v31 & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v10 + 8 * (v33 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v10 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v10 + 8 * v34);
        }
        while (v38 == -1);
        v12 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = *(_QWORD *)(v6 + 48) + (v12 << 7);
      *(_QWORD *)v13 = v25;
      *(_QWORD *)(v13 + 8) = v24;
      v14 = v49;
      *(_OWORD *)(v13 + 48) = v48;
      *(_OWORD *)(v13 + 64) = v14;
      v15 = v50;
      v16 = v47;
      *(_OWORD *)(v13 + 16) = v46;
      *(_OWORD *)(v13 + 32) = v16;
      *(_QWORD *)(v13 + 80) = v15;
      *(_QWORD *)(v13 + 88) = v27;
      *(_QWORD *)(v13 + 96) = v29;
      *(_OWORD *)(v13 + 104) = v44;
      *(_QWORD *)(v13 + 120) = v45;
      ++*(_QWORD *)(v6 + 16);
      v3 = v22;
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_75164(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29[9];

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v27 = v3;
    v28 = v4;
    v8 = 0;
    v9 = (_QWORD *)(v4 + 56);
    v10 = 1 << *(_BYTE *)(v4 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v4 + 56);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v6 + 56;
    while (1)
    {
      if (!v12)
      {
        v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return;
        }
        if (v16 >= v13)
          goto LABEL_34;
        v12 = v9[v16];
        ++v8;
        if (!v12)
        {
          v8 = v16 + 1;
          if (v16 + 1 >= v13)
            goto LABEL_34;
          v12 = v9[v8];
          if (!v12)
          {
            v8 = v16 + 2;
            if (v16 + 2 >= v13)
              goto LABEL_34;
            v12 = v9[v8];
            if (!v12)
            {
              v17 = v16 + 3;
              if (v17 >= v13)
              {
LABEL_34:
                v4 = v28;
                v26 = 1 << *(_BYTE *)(v28 + 32);
                if (v26 > 63)
                  bzero(v9, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v26;
                v3 = v27;
                *(_QWORD *)(v28 + 16) = 0;
                break;
              }
              v12 = v9[v17];
              if (!v12)
              {
                while (1)
                {
                  v8 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_40;
                  if (v8 >= v13)
                    goto LABEL_34;
                  v12 = v9[v8];
                  ++v17;
                  if (v12)
                    goto LABEL_25;
                }
              }
              v8 = v17;
            }
          }
        }
      }
LABEL_25:
      Hasher.init(_seed:)(v29);
      Hasher._combine(_:)(0);
      v18 = Hasher._finalize()();
      v19 = -1 << *(_BYTE *)(v7 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v14 + 8 * (v20 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v14 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v14 + 8 * v21);
        }
        while (v25 == -1);
        v15 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      v12 &= v12 - 1;
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_753D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  _QWORD v21[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D7D90);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v19 = v2;
  v20 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x758B8);
              }
              if (v12 >= v9)
                break;
              v11 = v20[v12];
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(_QWORD *)(v3 + 48) + 16 * v10;
        v15 = *(void **)v14;
        v16 = *(unsigned __int8 *)(v14 + 8);
        Hasher.init(_seed:)(v21);
        v17 = v15;
        NSObject.hash(into:)(v21);

        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v2 = v19;
  v18 = 1 << *(_BYTE *)(v3 + 32);
  if (v18 > 63)
    bzero(v20, ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v18;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_758F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACA78);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x75D9CLL);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v18);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v2 = v17;
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_75DDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1A0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v16 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x76260);
              }
              if (v12 >= v9)
                break;
              v11 = v16[v12];
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v17);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v15 = 1 << *(_BYTE *)(v3 + 32);
  if (v15 > 63)
    bzero(v16, ((unint64_t)(v15 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v15;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_76294(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB30);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v31 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v31)
          goto LABEL_36;
        v16 = v32[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_36;
          v16 = v32[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_36;
            v16 = v32[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release(v3);
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v31)
                    goto LABEL_36;
                  v16 = v32[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = *(_QWORD *)(v6 + 40);
      v20 = type metadata accessor for AnyCancellable(0);
      v21 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_765A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t (*v27)(ValueMetadata *, _UNKNOWN **);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD v46[5];
  _QWORD v47[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE288);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v40 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v42 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v41 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    v43 = v3;
    while (1)
    {
      if (v9)
      {
        v44 = (v9 - 1) & v9;
        v45 = v11;
        v14 = __clz(__rbit64(v9)) | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          return;
        }
        if (v15 >= v41)
          goto LABEL_47;
        v16 = v42[v15];
        v17 = v11 + 1;
        if (!v16)
        {
          v17 = v11 + 2;
          if (v11 + 2 >= v41)
            goto LABEL_47;
          v16 = v42[v17];
          if (!v16)
          {
            v17 = v11 + 3;
            if (v11 + 3 >= v41)
              goto LABEL_47;
            v16 = v42[v17];
            if (!v16)
            {
              v18 = v11 + 4;
              if (v11 + 4 >= v41)
              {
LABEL_47:
                swift_release(v3);
                v2 = v40;
                v39 = 1 << *(_BYTE *)(v3 + 32);
                if (v39 > 63)
                  bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v39;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v42[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_53;
                  if (v17 >= v41)
                    goto LABEL_47;
                  v16 = v42[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v17 = v11 + 4;
            }
          }
        }
LABEL_26:
        v44 = (v16 - 1) & v16;
        v45 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 24 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      Hasher.init(_seed:)(v47);
      if (v22 < 0)
        v23 = &off_1398C58;
      else
        v23 = &off_1362C00;
      v46[4] = v23;
      v24 = v22 & 0x7FFFFFFFFFFFFFFFLL;
      if (v22 < 0)
        v25 = &_s7LibraryVN;
      else
        v25 = &_s7CatalogVN;
      if (v22 >= 0)
        v24 = v22;
      v46[0] = v20;
      v46[1] = v21;
      if (v22 < 0)
        v26 = 0x7972617262696CLL;
      else
        v26 = 0x676F6C61746163;
      v46[2] = v24;
      v46[3] = v25;
      __swift_project_boxed_opaque_existential_1(v46, (uint64_t)v25);
      v27 = (uint64_t (*)(ValueMetadata *, _UNKNOWN **))v23[1];
      sub_87A9C(v20, v21, v22);
      v28 = v27(v25, v23);
      v30 = v29;
      __swift_destroy_boxed_opaque_existential_1(v46);
      String.hash(into:)(v47, v28, v30);
      swift_bridgeObjectRelease(v30);
      String.hash(into:)(v47, v26, 0xE700000000000000);
      swift_bridgeObjectRelease(0xE700000000000000);
      v31 = Hasher._finalize()();
      v32 = -1 << *(_BYTE *)(v6 + 32);
      v33 = v31 & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v10 + 8 * (v33 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v10 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_52;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v10 + 8 * v34);
        }
        while (v38 == -1);
        v12 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 24 * v12);
      *v13 = v20;
      v13[1] = v21;
      v13[2] = v22;
      ++*(_QWORD *)(v6 + 16);
      v3 = v43;
      v9 = v44;
      v11 = v45;
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_76988(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE290);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_39;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_39;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_39;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_39:
                swift_release(v3);
                v2 = v31;
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_45;
                  if (v13 >= v11)
                    goto LABEL_39;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v32);
      if (v20)
        v21 = 0x7972617262696CLL;
      else
        v21 = 0x676F6C61746163;
      String.hash(into:)(v32, v21, 0xE700000000000000);
      swift_bridgeObjectRelease(0xE700000000000000);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v25);
        }
        while (v29 == -1);
        v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_76C70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  _QWORD v48[9];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D7E30);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v47 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v45 = v2;
    v46 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v21 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v22 = v21 | (v11 << 6);
      }
      else
      {
        v23 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v23 >= v46)
          goto LABEL_36;
        v24 = v47[v23];
        ++v11;
        if (!v24)
        {
          v11 = v23 + 1;
          if (v23 + 1 >= v46)
            goto LABEL_36;
          v24 = v47[v11];
          if (!v24)
          {
            v11 = v23 + 2;
            if (v23 + 2 >= v46)
              goto LABEL_36;
            v24 = v47[v11];
            if (!v24)
            {
              v25 = v23 + 3;
              if (v25 >= v46)
              {
LABEL_36:
                swift_release(v3);
                v2 = v45;
                v44 = 1 << *(_BYTE *)(v3 + 32);
                if (v44 > 63)
                  bzero(v47, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v47 = -1 << v44;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v24 = v47[v25];
              if (!v24)
              {
                while (1)
                {
                  v11 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_42;
                  if (v11 >= v46)
                    goto LABEL_36;
                  v24 = v47[v11];
                  ++v25;
                  if (v24)
                    goto LABEL_26;
                }
              }
              v11 = v25;
            }
          }
        }
LABEL_26:
        v9 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v11 << 6);
      }
      v26 = *(_QWORD *)(v3 + 48) + 240 * v22;
      v27 = *(_OWORD *)v26;
      v28 = *(_QWORD *)(v26 + 16);
      v29 = *(_QWORD *)(v26 + 24);
      v30 = *(_OWORD *)(v26 + 208);
      v59 = *(_OWORD *)(v26 + 192);
      v60 = v30;
      v61 = *(_OWORD *)(v26 + 224);
      v62 = v27;
      v31 = *(_OWORD *)(v26 + 144);
      v55 = *(_OWORD *)(v26 + 128);
      v56 = v31;
      v32 = *(_OWORD *)(v26 + 176);
      v57 = *(_OWORD *)(v26 + 160);
      v58 = v32;
      v33 = *(_OWORD *)(v26 + 80);
      v51 = *(_OWORD *)(v26 + 64);
      v52 = v33;
      v34 = *(_OWORD *)(v26 + 112);
      v53 = *(_OWORD *)(v26 + 96);
      v54 = v34;
      v35 = *(_OWORD *)(v26 + 48);
      v49 = *(_OWORD *)(v26 + 32);
      v50 = v35;
      Hasher.init(_seed:)(v48);
      swift_bridgeObjectRetain();
      String.hash(into:)(v48, v28, v29);
      swift_bridgeObjectRelease(v29);
      v36 = Hasher._finalize()();
      v37 = -1 << *(_BYTE *)(v6 + 32);
      v38 = v36 & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v10 + 8 * (v38 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v10 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v40 = 0;
        v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v42 = v39 == v41;
          if (v39 == v41)
            v39 = 0;
          v40 |= v42;
          v43 = *(_QWORD *)(v10 + 8 * v39);
        }
        while (v43 == -1);
        v12 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = *(_QWORD *)(v6 + 48) + 240 * v12;
      v14 = v61;
      *(_OWORD *)v13 = v62;
      *(_QWORD *)(v13 + 16) = v28;
      *(_QWORD *)(v13 + 24) = v29;
      v15 = v60;
      *(_OWORD *)(v13 + 192) = v59;
      *(_OWORD *)(v13 + 208) = v15;
      *(_OWORD *)(v13 + 224) = v14;
      v16 = v56;
      *(_OWORD *)(v13 + 128) = v55;
      *(_OWORD *)(v13 + 144) = v16;
      v17 = v58;
      *(_OWORD *)(v13 + 160) = v57;
      *(_OWORD *)(v13 + 176) = v17;
      v18 = v52;
      *(_OWORD *)(v13 + 64) = v51;
      *(_OWORD *)(v13 + 80) = v18;
      v19 = v54;
      *(_OWORD *)(v13 + 96) = v53;
      *(_OWORD *)(v13 + 112) = v19;
      v20 = v50;
      *(_OWORD *)(v13 + 32) = v49;
      *(_OWORD *)(v13 + 48) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_76FF8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  unint64_t *v49;
  uint64_t v50;

  v49 = a4;
  v50 = a5;
  v7 = v5;
  v48 = a2;
  v9 = a2(0);
  v47 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v46 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v44 = v7;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  v20 = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v25 >= v45)
      goto LABEL_35;
    v26 = v46[v25];
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_35;
      v26 = v46[v21];
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v45)
          goto LABEL_35;
        v26 = v46[v21];
        if (!v26)
          break;
      }
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = v12;
    v29 = *(_QWORD *)(v12 + 48);
    v30 = *(_QWORD *)(v47 + 72);
    v31 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v47 + 32);
    v31(v11, v29 + v30 * v24, v9, v20);
    v32 = *(_QWORD *)(v14 + 40);
    v33 = sub_4DD24(v49, v48, v50);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v9, v33);
    v35 = -1 << *(_BYTE *)(v14 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    ((void (*)(unint64_t, char *, uint64_t))v31)(*(_QWORD *)(v14 + 48) + v22 * v30, v11, v9);
    ++*(_QWORD *)(v14 + 16);
    v12 = v28;
  }
  v27 = v25 + 3;
  if (v27 < v45)
  {
    v26 = v46[v27];
    if (!v26)
    {
      while (1)
      {
        v21 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_41;
        if (v21 >= v45)
          goto LABEL_35;
        v26 = v46[v21];
        ++v27;
        if (v26)
          goto LABEL_25;
      }
    }
    v21 = v27;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v12);
  v7 = v44;
  v42 = 1 << *(_BYTE *)(v12 + 32);
  if (v42 > 63)
    bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v46 = -1 << v42;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  swift_release(v12);
  *v7 = v14;
}

void sub_77358(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE098);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x776ECLL);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v18);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release();
  v2 = v17;
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release();
  *v2 = v5;
}

unint64_t sub_7770C(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::Int v5;
  unint64_t result;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7);
  if ((a1 - 3) >= 7u)
  {
    Hasher._combine(_:)(6uLL);
    v4 = a1;
  }
  else
  {
    v4 = qword_105FA68[(char)(a1 - 3)];
  }
  Hasher._combine(_:)(v4);
  v5 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v5 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_BYTE *)(*(_QWORD *)(a2 + 48) + result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_777DC(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::Int v5;
  unint64_t result;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7);
  v4 = sub_308B9C();
  Hasher._combine(_:)(v4);
  v5 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v5 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_77880(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  unint64_t result;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10);
  v4 = objc_msgSend(*(id *)(a1 + 16), "_identifier");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  String.hash(into:)(v10, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v8 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_77960(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_779E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = type metadata accessor for AnyCancellable(0);
  v6 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  result = _HashTable.nextHole(atOrAfter:)(v7 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_77AAC(char a1, unint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _QWORD v15[9];

  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_716FC(v8);
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_7EC84(v8);
LABEL_8:
      Hasher.init(_seed:)(v15);
      __asm { BR              X10 }
    }
    sub_7EAFC(&qword_14AE260);
  }
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x77E20);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

uint64_t sub_77E84(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v4 = v3;
  v8 = type metadata accessor for SidebarMenu.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_71A68(v14);
  }
  else
  {
    if (v13 > v12)
    {
      sub_7C880();
      goto LABEL_12;
    }
    sub_7EFBC(v14);
  }
  v15 = *v4;
  Hasher.init(_seed:)(v28);
  sub_8CF8B8();
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v27 = v8;
    v18 = ~v17;
    v19 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_877CC(*(_QWORD *)(v15 + 48) + v19 * a2, (uint64_t)v11);
      sub_8D1AA0((uint64_t)v11, a1);
      v21 = v20;
      sub_87810((uint64_t)v11);
      if ((v21 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v22 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_8784C(a1, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v9 + 72) * a2);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v27);
  __break(1u);
  return result;
}

void sub_78040(unsigned __int8 a1, unint64_t a2, char a3)
{
  _QWORD *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD v25[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_72174(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14AE020);
        goto LABEL_31;
      }
      sub_7F6A8(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v25);
    if (a1)
    {
      if (a1 == 1)
        v10 = 0x657469726F766166;
      else
        v10 = 0x64616F6C6E776F64;
      v11 = 0xE900000000000073;
    }
    else
    {
      v11 = 0xE300000000000000;
      v10 = 7105633;
    }
    String.hash(into:)(v25, v10, v11);
    swift_bridgeObjectRelease(v11);
    v3 = v25;
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v12 & ~v13;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v14 = ~v13;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2))
        {
          if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) == 1)
            v15 = 0x657469726F766166;
          else
            v15 = 0x64616F6C6E776F64;
          v3 = (_QWORD *)0xE900000000000073;
          v16 = a1;
          if (!a1)
          {
LABEL_20:
            v17 = 0xE300000000000000;
            v18 = 7105633;
            if (v15 == 7105633)
              goto LABEL_28;
            goto LABEL_29;
          }
        }
        else
        {
          v3 = (_QWORD *)0xE300000000000000;
          v15 = 7105633;
          v16 = a1;
          if (!a1)
            goto LABEL_20;
        }
        if (v16 == 1)
          v18 = 0x657469726F766166;
        else
          v18 = 0x64616F6C6E776F64;
        v17 = 0xE900000000000073;
        if (v15 == v18)
        {
LABEL_28:
          if (v3 == (_QWORD *)v17)
            goto LABEL_34;
        }
LABEL_29:
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v3, v18, v17, 0);
        swift_bridgeObjectRelease(v3);
        swift_bridgeObjectRelease(v17);
        if ((v19 & 1) != 0)
          goto LABEL_35;
        a2 = (a2 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_31:
  v20 = *v24;
  *(_QWORD *)(*v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v20 + 48) + a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n(v3, 2);
LABEL_35:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Library.ContentFilterOption);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
  }
}

void sub_782C0(void *a1, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD v29[9];

  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_25;
  v12 = v10 + 1;
  if ((a5 & 1) != 0)
  {
    sub_7247C(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_7CA90();
      goto LABEL_25;
    }
    sub_7F97C(v12);
  }
  v13 = *v5;
  Hasher.init(_seed:)(v29);
  if ((a3 & 1) != 0)
  {
    Hasher._combine(_:)(1uLL);
    v14 = a1;
    NSObject.hash(into:)(v29);
    sub_4E664(a1, a2, 1);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(v29, a1, a2);
  }
  v15 = Hasher._finalize()();
  v16 = -1 << *(_BYTE *)(v13 + 32);
  a4 = v15 & ~v16;
  if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v17 = ~v16;
    do
    {
      v18 = *(_QWORD *)(v13 + 48) + 24 * a4;
      v19 = *(void **)v18;
      v20 = *(_QWORD *)(v18 + 8);
      if ((*(_BYTE *)(v18 + 16) & 1) != 0)
      {
        if ((a3 & 1) != 0)
        {
          sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
          sub_4E674(a1, a2, 1);
          sub_4E674(v19, v20, 1);
          v21 = static NSObject.== infix(_:_:)(v19, a1);
          sub_4E664(a1, a2, 1);
          sub_4E664(v19, v20, 1);
          if ((v21 & 1) != 0)
            goto LABEL_24;
        }
      }
      else if ((a3 & 1) == 0)
      {
        v22 = v19 == a1 && v20 == a2;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, a1, a2, 0) & 1) != 0)
        {
LABEL_24:
          ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SocialOnboardingFriendsController.Source);
          __break(1u);
          break;
        }
      }
      a4 = (a4 + 1) & v17;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_25:
  v23 = *v28;
  *(_QWORD *)(*v28 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v24 = *(_QWORD *)(v23 + 48) + 24 * a4;
  *(_QWORD *)v24 = a1;
  *(_QWORD *)(v24 + 8) = a2;
  *(_BYTE *)(v24 + 16) = a3 & 1;
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v23 + 16) = v27;
}

void sub_78530(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_727C4(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_7D34C(&qword_14AE010);
      goto LABEL_14;
    }
    sub_7FC90(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ObjectIdentifier);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_78658(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5, _QWORD *a6)
{
  uint64_t *v6;
  uint64_t *v9;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v9 = v6;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_14;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_744C4(v14, a4);
  }
  else
  {
    if (v13 > v12)
    {
      sub_7D4E4(a4);
      goto LABEL_14;
    }
    sub_817B8(v14, a4);
  }
  v15 = *v6;
  v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v6 + 40));
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = sub_4E684(0, a5, a6);
    v19 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
    v20 = static NSObject.== infix(_:_:)(v19, a1);

    if ((v20 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v18);
      __break(1u);
    }
    else
    {
      v21 = ~v17;
      while (1)
      {
        a2 = (a2 + 1) & v21;
        if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
        v23 = static NSObject.== infix(_:_:)(v22, a1);

        if ((v23 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v24 = *v9;
  *(_QWORD *)(*v9 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * a2) = a1;
  v25 = *(_QWORD *)(v24 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v27;
}

void sub_787E8(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::UInt v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_72A44(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7CC78();
        goto LABEL_31;
      }
      sub_7FEF0(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v18);
    if ((a1 - 3) >= 7u)
    {
      Hasher._combine(_:)(6uLL);
      v10 = a1;
    }
    else
    {
      v10 = qword_105FA68[(char)(a1 - 3)];
    }
    Hasher._combine(_:)(v10);
    v11 = Hasher._finalize()();
    v12 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v11 & ~v12;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
      goto LABEL_31;
    v13 = ~v12;
    while (1)
    {
      switch(*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2))
      {
        case 3:
          if (a1 != 3)
            goto LABEL_14;
          goto LABEL_30;
        case 4:
          if (a1 == 4)
            goto LABEL_30;
          goto LABEL_14;
        case 5:
          if (a1 == 5)
            goto LABEL_30;
          goto LABEL_14;
        case 6:
          if (a1 == 6)
            goto LABEL_30;
          goto LABEL_14;
        case 7:
          if (a1 != 7)
            goto LABEL_14;
          goto LABEL_30;
        case 8:
          if (a1 == 8)
            goto LABEL_30;
          goto LABEL_14;
        case 9:
          if (a1 == 9)
            goto LABEL_30;
          goto LABEL_14;
        default:
          if ((a1 - 10) <= 0xF8u && *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + a2) == a1)
          {
LABEL_30:
            ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AudioTrait);
            __break(1u);
            goto LABEL_31;
          }
LABEL_14:
          a2 = (a2 + 1) & v13;
          if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
            goto LABEL_31;
          break;
      }
    }
  }
LABEL_31:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    JUMPOUT(0x789FCLL);
  }
  *(_QWORD *)(v14 + 16) = v17;
}

void sub_78A18(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_72C0C(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7E1EC(&qword_14AC930);
      goto LABEL_12;
    }
    sub_8007C(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v19);
  v11 = sub_308B9C();
  Hasher._combine(_:)(v11);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = ~v13;
    v4 = type metadata accessor for ImpressionTracker();
    while (sub_308B9C() != *(_QWORD *)(a1 + 56))
    {
      a2 = (a2 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_12:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = a1;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v15 + 16) = v18;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_78B84(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v33[9];

  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_16;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_72EB8(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7E1EC(&qword_14ACC28);
      goto LABEL_16;
    }
    sub_802FC(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v33);
  v11 = objc_msgSend(*(id *)(a1 + 16), "_identifier");
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v4 = v13;

  String.hash(into:)(v33, v12, v4);
  swift_bridgeObjectRelease(v4);
  v14 = Hasher._finalize()();
  v15 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v30 = type metadata accessor for TabNavigationController.TabElementStack();
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      v17 = objc_msgSend(*(id *)(v4 + 16), "_identifier", swift_retain(v4).n128_f64[0]);
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v5 = v19;

      v20 = objc_msgSend(*(id *)(a1 + 16), "_identifier");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      if (v18 == v21 && v5 == v23)
        goto LABEL_19;
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v5, v21, v23, 0);
      swift_release(v4);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v23);
      if ((v25 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  v26 = *v31;
  *(_QWORD *)(*v31 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v26 + 48) + 8 * a2) = a1;
  v27 = *(_QWORD *)(v26 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v26 + 16) = v29;
    return;
  }
  __break(1u);
LABEL_19:
  swift_release(v4);
  swift_bridgeObjectRelease_n(v5, 2);
LABEL_20:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v30);
  __break(1u);
}

uint64_t sub_78DD4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_76FF8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, &qword_14AE0C0, &qword_14D7DA0, (uint64_t)&protocol conformance descriptor for AudioVariant);
  }
  else
  {
    if (v12 > v11)
    {
      sub_7E8D8((uint64_t (*)(_QWORD))&type metadata accessor for AudioVariant, &qword_14AE0C0);
      goto LABEL_12;
    }
    sub_840C8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, &qword_14AE0C0, &qword_14D7DA0, (uint64_t)&protocol conformance descriptor for AudioVariant);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_4DD24(&qword_14D7DA0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_4DD24(&qword_14AE0B8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_79028(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[10];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_731D8(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14ACA70);
        goto LABEL_10;
      }
      sub_805F0(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19);
    v10 = Library.Menu.Identifier.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x793F4);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

void sub_79478(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_73670(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_7CE14();
      goto LABEL_22;
    }
    sub_80A50(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29);
  swift_bridgeObjectRetain();
  String.hash(into:)(v29, a1, a2);
  swift_bridgeObjectRelease(a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_79620(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_7395C(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_7CFC4();
      goto LABEL_22;
    }
    sub_80D08(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29);
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_797B8(unsigned __int8 a1, unint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  Swift::UInt v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v8 = a1;
  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_73FA4(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_7EAFC(a4);
      goto LABEL_14;
    }
    sub_812E8(v11, a4);
  }
  v12 = *v5;
  Hasher.init(_seed:)(v21);
  Hasher._combine(_:)(v8);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48);
    if (*(unsigned __int8 *)(v15 + a2) == (_DWORD)v8)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a5);
      __break(1u);
    }
    else
    {
      v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v15 + a2) == (_DWORD)v8)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v17 + 48) + a2) = v8;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_79910(_BYTE *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD v30[15];

  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    v9 = v7 + 1;
    if ((a3 & 1) != 0)
    {
      sub_73C38(v9);
    }
    else
    {
      if (v8 > v7)
      {
        sub_7D180();
        goto LABEL_40;
      }
      sub_80FB4(v9);
    }
    v10 = *v3;
    Hasher.init(_seed:)(v30);
    v11 = *a1;
    v12 = 0x80000000010C3150;
    v13 = 0xD000000000000029;
    if (v11 == 1)
      v13 = 0xD00000000000001CLL;
    else
      v12 = 0x80000000010C3170;
    if (*a1)
      v14 = v13;
    else
      v14 = 0xD00000000000002CLL;
    if (*a1)
      v15 = v12;
    else
      v15 = 0x80000000010C3120;
    String.hash(into:)(v30, v14, v15);
    swift_bridgeObjectRelease(v15);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    a2 = v16 & ~v17;
    if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v18 = ~v17;
      while (1)
      {
        sub_87720(*(_QWORD *)(v10 + 48) + 112 * a2, (uint64_t)v30);
        v19 = 0xD00000000000002CLL;
        v20 = 0x80000000010C3120;
        if (LOBYTE(v30[0]))
          break;
        v21 = 0xD00000000000002CLL;
        v4 = 0x80000000010C3120;
        if (v11)
          goto LABEL_27;
LABEL_33:
        if (v21 == v19 && v4 == v20)
          goto LABEL_43;
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v4, v19, v20, 0);
        swift_bridgeObjectRelease(v4);
        swift_bridgeObjectRelease(v20);
        sub_8775C(v30);
        if ((v22 & 1) != 0)
          goto LABEL_44;
        a2 = (a2 + 1) & v18;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_40;
      }
      if (LOBYTE(v30[0]) == 1)
        v21 = 0xD00000000000001CLL;
      else
        v21 = 0xD000000000000029;
      if (LOBYTE(v30[0]) == 1)
        v4 = 0x80000000010C3150;
      else
        v4 = 0x80000000010C3170;
      if (!v11)
        goto LABEL_33;
LABEL_27:
      if (v11 == 1)
        v19 = 0xD00000000000001CLL;
      else
        v19 = 0xD000000000000029;
      if (v11 == 1)
        v20 = 0x80000000010C3150;
      else
        v20 = 0x80000000010C3170;
      goto LABEL_33;
    }
  }
LABEL_40:
  v23 = *v28;
  *(_QWORD *)(*v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_87790((uint64_t)a1, *(_QWORD *)(v23 + 48) + 112 * a2);
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
LABEL_43:
    swift_bridgeObjectRelease_n(v4, 2);
    sub_8775C(v30);
LABEL_44:
    result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Tooltip.Presentation);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v23 + 16) = v27;
  }
  return result;
}

void sub_79B98(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_74248(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_7D34C(a4);
      goto LABEL_14;
    }
    sub_8155C(v11, a4);
  }
  v12 = *v5;
  v13 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v5 + 40), a1);
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48);
    if (*(_QWORD *)(v15 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a5);
      __break(1u);
    }
    else
    {
      v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v15 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_79CCC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(__n128);
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[9];

  v5 = v3;
  v8 = *(_QWORD *)(*v3 + 16);
  v9 = *(_QWORD *)(*v3 + 24);
  if (v9 <= v8 || (a3 & 1) == 0)
  {
    v10 = v8 + 1;
    if ((a3 & 1) != 0)
    {
      sub_7475C(v10);
    }
    else
    {
      if (v9 > v8)
      {
        sub_7D684();
        goto LABEL_22;
      }
      sub_81A2C(v10);
    }
    v11 = *v3;
    Hasher.init(_seed:)(v41);
    Lyrics.TextLine.hash(into:)((uint64_t)v41);
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(v11 + 32);
    a2 = v12 & ~v13;
    if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v14 = ~v13;
      v15 = *(_QWORD *)(a1 + 16);
      v37 = v3;
      do
      {
        v16 = *(_QWORD *)(v11 + 48);
        v17 = v16 + 104 * a2;
        if (*(_QWORD *)(v17 + 16) == v15
          && *(double *)(v16 + 104 * a2) == *(double *)a1
          && *(double *)(v17 + 8) == *(double *)(a1 + 8)
          && *(double *)(v17 + 40) == *(double *)(a1 + 40)
          && *(double *)(v17 + 48) == *(double *)(a1 + 48))
        {
          v19 = *(uint64_t (**)(__n128))(v17 + 56);
          v18 = *(_QWORD *)(v17 + 64);
          v20 = *(_QWORD *)(v17 + 80);
          v4 = *(_QWORD *)(v17 + 96);
          v40 = *(_QWORD *)(v17 + 32);
          swift_bridgeObjectRetain();
          swift_retain(v18);
          v38 = v20;
          swift_retain(v20);
          v21 = swift_retain(v4);
          v39 = v18;
          v22 = v19(v21);
          v5 = v23;
          v24 = (*(uint64_t (**)(void))(a1 + 56))();
          if (v22 == v24 && v5 == v25)
            goto LABEL_25;
          v27 = v25;
          v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v5, v24, v25, 0);
          swift_release(v4);
          swift_release(v38);
          swift_release(v39);
          swift_bridgeObjectRelease(v40);
          swift_bridgeObjectRelease(v5);
          swift_bridgeObjectRelease(v27);
          v5 = v37;
          if ((v28 & 1) != 0)
            goto LABEL_26;
        }
        a2 = (a2 + 1) & v14;
      }
      while (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_22:
  v29 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v30 = *(_QWORD *)(v29 + 48) + 104 * a2;
  v31 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v30 = *(_OWORD *)a1;
  *(_OWORD *)(v30 + 16) = v31;
  *(_QWORD *)(v30 + 96) = *(_QWORD *)(a1 + 96);
  v32 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v30 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v30 + 80) = v32;
  v33 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v30 + 48) = v33;
  v34 = *(_QWORD *)(v29 + 16);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
  {
    __break(1u);
LABEL_25:
    swift_release(v4);
    swift_release(v38);
    swift_release(v39);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease_n(v5, 2);
LABEL_26:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Lyrics.TextLine);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v29 + 16) = v36;
  }
}

void sub_79F7C(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v31[9];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_74A74(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7D8B4();
      goto LABEL_22;
    }
    sub_81D24(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v31);
  v11 = *a1;
  v12 = a1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v31, v11, v12);
  swift_bridgeObjectRelease(v12);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v13 & ~v14;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = *(_QWORD *)(v10 + 48);
    v17 = (_QWORD *)(v16 + (a2 << 6));
    v18 = v17[1];
    v19 = *v17 == v11 && v18 == v12;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, v11, v12, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SocialOnboardingNetworkFriendsMatchingRequestOperation.NetworkFriend);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + (a2 << 6));
        v22 = v21[1];
        v23 = *v21 == v11 && v22 == v12;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, v11, v12, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v25 = (_OWORD *)(*(_QWORD *)(v24 + 48) + (a2 << 6));
  v26 = *((_OWORD *)a1 + 1);
  *v25 = *(_OWORD *)a1;
  v25[1] = v26;
  v27 = *((_OWORD *)a1 + 3);
  v25[2] = *((_OWORD *)a1 + 2);
  v25[3] = v27;
  v28 = *(_QWORD *)(v24 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (v29)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v30;
}

void sub_7A130(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v35;
  _QWORD v36[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_28;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_74DB4(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_7DAB0();
      goto LABEL_28;
    }
    sub_82050(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v36);
  v10 = a1[11];
  v11 = a1[12];
  swift_bridgeObjectRetain();
  String.hash(into:)(v36, v10, v11);
  swift_bridgeObjectRelease(v11);
  v12 = *a1;
  v13 = a1[1];
  if (v13)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v36, v12, v13);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v14 = Hasher._finalize()();
  v15 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v14 & ~v15;
  v16 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v9 + 48);
    do
    {
      v19 = (_QWORD *)(v18 + (a2 << 7));
      v20 = v19[1];
      v21 = v19[11];
      v22 = v19[12];
      if (v20)
      {
        if (!v13)
          goto LABEL_14;
        v23 = *v19 == v12 && v20 == v13;
        if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, v12, v13, 0) & 1) == 0)
          goto LABEL_14;
      }
      else if (v13)
      {
        goto LABEL_14;
      }
      v24 = v21 == v10 && v22 == v11;
      if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v10, v11, 0) & 1) != 0)
      {
        ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SocialContactsCoordinator.Contact);
        __break(1u);
        break;
      }
LABEL_14:
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  v25 = *v35;
  *(_QWORD *)(*v35 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v26 = (_OWORD *)(*(_QWORD *)(v25 + 48) + (a2 << 7));
  v27 = *((_OWORD *)a1 + 1);
  *v26 = *(_OWORD *)a1;
  v26[1] = v27;
  v28 = *((_OWORD *)a1 + 3);
  v26[2] = *((_OWORD *)a1 + 2);
  v26[3] = v28;
  v29 = *((_OWORD *)a1 + 7);
  v26[6] = *((_OWORD *)a1 + 6);
  v26[7] = v29;
  v30 = *((_OWORD *)a1 + 5);
  v26[4] = *((_OWORD *)a1 + 4);
  v26[5] = v30;
  v31 = *(_QWORD *)(v25 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
    __break(1u);
  else
    *(_QWORD *)(v25 + 16) = v33;
}

void sub_7A35C(unint64_t a1, char a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _QWORD v15[9];

  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 <= v7 || (a2 & 1) == 0)
  {
    v9 = v7 + 1;
    if ((a2 & 1) != 0)
    {
      sub_75164(v9, a3);
      goto LABEL_8;
    }
    if (v8 <= v7)
    {
      sub_823B0(v9, a3);
LABEL_8:
      v10 = *v4;
      Hasher.init(_seed:)(v15);
      Hasher._combine(_:)(0);
      a1 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v10 + 32));
      if (((*(_QWORD *)(v10 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
        goto LABEL_12;
      goto LABEL_9;
    }
    sub_7DC90(a3);
  }
LABEL_9:
  v11 = *v4;
  *(_QWORD *)(*v4 + 8 * (a1 >> 6) + 56) |= 1 << a1;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return;
  }
  __break(1u);
LABEL_12:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a4);
  __break(1u);
}

void sub_7A46C(void *a1, unsigned __int8 a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD v30[9];

  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    v10 = v8 + 1;
    if ((a4 & 1) != 0)
    {
      sub_753D4(v10);
    }
    else
    {
      if (v9 > v8)
      {
        sub_7DDE4();
        goto LABEL_13;
      }
      sub_825EC(v10);
    }
    v11 = *v4;
    Hasher.init(_seed:)(v30);
    v12 = a1;
    NSObject.hash(into:)(v30);

    v13 = sub_435A30(a2);
    v15 = v14;
    String.hash(into:)(v30, v13, v14);
    swift_bridgeObjectRelease(v15);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    a3 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v18 = ~v17;
      sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
      do
      {
        v19 = *(_QWORD *)(v11 + 48) + 16 * a3;
        v20 = *(unsigned __int8 *)(v19 + 8);
        v21 = *(id *)v19;
        if ((static NSObject.== infix(_:_:)(v21, v12) & 1) != 0)
          __asm { BR              X8 }

        a3 = (a3 + 1) & v18;
      }
      while (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_13:
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v23 = *(_QWORD *)(v22 + 48) + 16 * a3;
  *(_QWORD *)v23 = a1;
  *(_BYTE *)(v23 + 8) = a2;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
    JUMPOUT(0x7AA9CLL);
  }
  *(_QWORD *)(v22 + 16) = v26;
}

void sub_7AB3C(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_758F8(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14ACA78);
        goto LABEL_10;
      }
      sub_82AE0(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19);
    v10 = sub_435A30(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x7B0F0);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

uint64_t sub_7B18C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_76FF8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, &qword_14AE0E8, (unint64_t *)&qword_14B2010, (uint64_t)&protocol conformance descriptor for IndexPath);
  }
  else
  {
    if (v12 > v11)
    {
      sub_7E8D8((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, &qword_14AE0E8);
      goto LABEL_12;
    }
    sub_840C8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, &qword_14AE0E8, (unint64_t *)&qword_14B2010, (uint64_t)&protocol conformance descriptor for IndexPath);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_4DD24((unint64_t *)&qword_14B2010, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_7B3E0(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_75DDC(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14AE1A0);
        goto LABEL_10;
      }
      sub_82F90(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19);
    v10 = SortOptions.SortType.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x7B838);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

void sub_7B8BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_76294(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7E1EC(&qword_14ACB30);
      goto LABEL_12;
    }
    sub_83410(v9);
  }
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v4 = type metadata accessor for AnyCancellable(0);
  v12 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v4, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = sub_4DD24(&qword_14ACB40, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v22, v4, v16) & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_7BA74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _UNKNOWN **v22;
  ValueMetadata *v23;
  uint64_t (*v24)(ValueMetadata *, _UNKNOWN **);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, _UNKNOWN **);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t *v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _UNKNOWN **v55;

  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 <= v10 || (a5 & 1) == 0)
  {
    v12 = v10 + 1;
    if ((a5 & 1) != 0)
    {
      sub_765A4(v12);
    }
    else
    {
      if (v11 > v10)
      {
        sub_7E38C();
        goto LABEL_37;
      }
      sub_836F4(v12);
    }
    v6 = *v5;
    Hasher.init(_seed:)(&v51);
    sub_A3A3DC((uint64_t)&v51, a1, a2, a3);
    v13 = Hasher._finalize()();
    v14 = -1 << *(_BYTE *)(v6 + 32);
    a4 = v13 & ~v14;
    v45 = v6 + 56;
    v46 = v6;
    if (((*(_QWORD *)(v6 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
    {
      v44 = ~v14;
      if (a3 < 0)
        v6 = 0x7972617262696CLL;
      else
        v6 = 0x676F6C61746163;
      v41 = a3 & 0x7FFFFFFFFFFFFFFFLL;
      v15 = &_s7LibraryVN;
      if (a3 >= 0)
        v15 = &_s7CatalogVN;
      v40 = (uint64_t)v15;
      v16 = &off_1398C58;
      if (a3 >= 0)
        v16 = &off_1362C00;
      v39 = v16;
      v42 = v6;
      do
      {
        v17 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 24 * a4);
        v19 = *v17;
        v18 = v17[1];
        v7 = v17[2];
        if (v7 < 0)
          v20 = 0x7972617262696CLL;
        else
          v20 = 0x676F6C61746163;
        if (v20 == v6)
        {
          sub_87A9C(v19, v18, v7);
          swift_bridgeObjectRelease_n(0xE700000000000000, 2);
        }
        else
        {
          v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, 0xE700000000000000, v6, 0xE700000000000000, 0);
          sub_87A9C(v19, v18, v7);
          swift_bridgeObjectRelease_n(0xE700000000000000, 2);
          if ((v21 & 1) == 0)
          {
            sub_87AC4(v19, v18, v7);
            goto LABEL_18;
          }
        }
        v49 = a4;
        if (v7 < 0)
          v22 = &off_1398C58;
        else
          v22 = &off_1362C00;
        v55 = v22;
        if (v7 < 0)
          v23 = &_s7LibraryVN;
        else
          v23 = &_s7CatalogVN;
        v51 = v19;
        v52 = v18;
        v53 = v7 & 0x7FFFFFFFFFFFFFFFLL;
        v54 = (uint64_t)v23;
        __swift_project_boxed_opaque_existential_1(&v51, (uint64_t)v23);
        v24 = (uint64_t (*)(ValueMetadata *, _UNKNOWN **))v22[1];
        a4 = v19;
        v50 = v18;
        sub_87A9C(v19, v18, v7);
        v25 = v24(v23, v22);
        v6 = v26;
        __swift_destroy_boxed_opaque_existential_1(&v51);
        v54 = v40;
        v55 = v39;
        v51 = a1;
        v52 = a2;
        v53 = v41;
        __swift_project_boxed_opaque_existential_1(&v51, v40);
        v27 = (uint64_t (*)(uint64_t, _UNKNOWN **))v39[1];
        sub_87A9C(a1, a2, a3);
        v28 = v27(v40, v39);
        v30 = v29;
        __swift_destroy_boxed_opaque_existential_1(&v51);
        if (v25 == v28 && v6 == v30)
          goto LABEL_40;
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v6, v28, v30, 0);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v30);
        sub_87AC4(v19, v18, v7);
        v6 = v42;
        a4 = v49;
        if ((v32 & 1) != 0)
          goto LABEL_41;
LABEL_18:
        a4 = (a4 + 1) & v44;
      }
      while (((*(_QWORD *)(v45 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
    }
  }
LABEL_37:
  v33 = *v38;
  *(_QWORD *)(*v38 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v34 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 24 * a4);
  *v34 = a1;
  v34[1] = a2;
  v34[2] = a3;
  v35 = *(_QWORD *)(v33 + 16);
  v36 = __OFADD__(v35, 1);
  v37 = v35 + 1;
  if (v36)
  {
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease_n(v6, 2);
    sub_87AC4(a4, v50, v7);
LABEL_41:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Search._Source);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v33 + 16) = v37;
  }
}

void sub_7BE54(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v4 = v3;
  v6 = a1 & 1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_19;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_76988(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7E548();
      goto LABEL_19;
    }
    sub_83AB4(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v21);
  if (v6)
    v11 = 0x7972617262696CLL;
  else
    v11 = 0x676F6C61746163;
  String.hash(into:)(v21, v11, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = *(_BYTE *)(*(_QWORD *)(v10 + 48) + a2) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v15 == v11)
        goto LABEL_22;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, 0xE700000000000000, v11, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v16 & 1) != 0)
        goto LABEL_23;
      a2 = (a2 + 1) & v14;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_19:
  v17 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v17 + 48) + a2) = v6;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_22:
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
LABEL_23:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Search.Source);
  __break(1u);
}

void sub_7C014(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  Swift::Int v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[9];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_76C70(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_7E6D8();
      goto LABEL_12;
    }
    sub_83D68(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(&v44);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)(&v44, v10, v11);
  swift_bridgeObjectRelease(v11);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = (__int128 *)(*(_QWORD *)(v9 + 48) + 240 * a2);
      v17 = v15[1];
      v16 = v15[2];
      v44 = *v15;
      v45 = v17;
      v46 = v16;
      v18 = v15[3];
      v19 = v15[4];
      v20 = v15[6];
      v49 = v15[5];
      v50 = v20;
      v48 = v19;
      v47 = v18;
      v21 = v15[7];
      v22 = v15[8];
      v23 = v15[10];
      v53 = v15[9];
      v54 = v23;
      v51 = v21;
      v52 = v22;
      v24 = v15[11];
      v25 = v15[12];
      v26 = v15[14];
      v57 = v15[13];
      v58 = v26;
      v55 = v24;
      v56 = v25;
      Hasher.init(_seed:)(v43);
      v27 = v45;
      sub_87124((uint64_t)&v44);
      swift_bridgeObjectRetain();
      String.hash(into:)(v43, v27, *((_QWORD *)&v27 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)&v27 + 1));
      v28 = Hasher._finalize()();
      Hasher.init(_seed:)(v43);
      swift_bridgeObjectRetain();
      String.hash(into:)(v43, v10, v11);
      swift_bridgeObjectRelease(v11);
      v29 = Hasher._finalize()();
      sub_87308((uint64_t)&v44);
      if (v28 == v29)
        goto LABEL_15;
      a2 = (a2 + 1) & v14;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v30 = *v42;
  *(_QWORD *)(*v42 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v31 = (_OWORD *)(*(_QWORD *)(v30 + 48) + 240 * a2);
  v32 = *(_OWORD *)(a1 + 208);
  v31[12] = *(_OWORD *)(a1 + 192);
  v31[13] = v32;
  v31[14] = *(_OWORD *)(a1 + 224);
  v33 = *(_OWORD *)(a1 + 144);
  v31[8] = *(_OWORD *)(a1 + 128);
  v31[9] = v33;
  v34 = *(_OWORD *)(a1 + 176);
  v31[10] = *(_OWORD *)(a1 + 160);
  v31[11] = v34;
  v35 = *(_OWORD *)(a1 + 80);
  v31[4] = *(_OWORD *)(a1 + 64);
  v31[5] = v35;
  v36 = *(_OWORD *)(a1 + 112);
  v31[6] = *(_OWORD *)(a1 + 96);
  v31[7] = v36;
  v37 = *(_OWORD *)(a1 + 16);
  *v31 = *(_OWORD *)a1;
  v31[1] = v37;
  v38 = *(_OWORD *)(a1 + 48);
  v31[2] = *(_OWORD *)(a1 + 32);
  v31[3] = v38;
  v39 = *(_QWORD *)(v30 + 16);
  v40 = __OFADD__(v39, 1);
  v41 = v39 + 1;
  if (!v40)
  {
    *(_QWORD *)(v30 + 16) = v41;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SocialOnboardingFriendsController.Friend);
  __break(1u);
}

uint64_t sub_7C290(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_76FF8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for Song, &qword_14AE118, &qword_14AE108, (uint64_t)&protocol conformance descriptor for Song);
  }
  else
  {
    if (v12 > v11)
    {
      sub_7E8D8((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_14AE118);
      goto LABEL_12;
    }
    sub_840C8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for Song, &qword_14AE118, &qword_14AE108, (uint64_t)&protocol conformance descriptor for Song);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_4DD24(&qword_14AE108, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_4DD24(&qword_14AE110, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_7C4E4(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_77358(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14AE098);
        goto LABEL_10;
      }
      sub_843E4(v8);
    }
    v9 = *v3;
    sub_4D9250(*(_QWORD *)(*v3 + 40), a1);
    a2 = v10 & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v11 = *v15;
  *(_QWORD *)(*v15 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v11 + 48) + a2) = v16;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    JUMPOUT(0x7C824);
  }
  *(_QWORD *)(v11 + 16) = v14;
}

void sub_7C880()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for SidebarMenu.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE268);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    swift_release(v6);
    *v1 = v8;
    return;
  }
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_877CC(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5);
    sub_8784C((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
    goto LABEL_28;
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7CA78()
{
  sub_7EAFC(&qword_14AE020);
}

void sub_7CA84()
{
  sub_7D4E4((uint64_t *)&unk_14AC920);
}

void sub_7CA90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB68);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v19;
    *(_BYTE *)(v21 + 16) = v20;
    sub_4E674(v18, v19, v20);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7CC4C()
{
  sub_7D34C(&qword_14D8170);
}

void sub_7CC58()
{
  sub_7D4E4(&qword_14AE278);
}

void sub_7CC64()
{
  sub_7E8D8((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Variant, (uint64_t *)&unk_14ACBA0);
}

void sub_7CC78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB60);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7CE08()
{
  sub_7E1EC(&qword_14AC930);
}

void sub_7CE14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE068);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7CFC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AC960);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7D174()
{
  sub_7EAFC(&qword_14ACC40);
}

void sub_7D180()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _BYTE v20[112];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1B0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v13)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = 112 * v15;
    sub_87720(*(_QWORD *)(v2 + 48) + 112 * v15, (uint64_t)v20);
    sub_87790((uint64_t)v20, *(_QWORD *)(v4 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7D340()
{
  sub_7EAFC(&qword_14ACB58);
}

void sub_7D34C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7D4D8()
{
  sub_7D4E4(&qword_14AE220);
}

void sub_7D4E4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_28;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
      {
        v10 = v20 + 2;
        if (v20 + 2 >= v14)
          goto LABEL_28;
        v21 = *(_QWORD *)(v7 + 8 * v10);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v14)
    goto LABEL_28;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7D684()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE210);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_28;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
      {
        v9 = v25 + 2;
        if (v25 + 2 >= v13)
          goto LABEL_28;
        v26 = *(_QWORD *)(v6 + 8 * v9);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 104 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_BYTE *)(v17 + 24);
    v20 = *(_BYTE *)(v17 + 25);
    v21 = *(_BYTE *)(v17 + 26);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v28 = *(_OWORD *)(v17 + 56);
    v29 = *(_OWORD *)(v17 + 72);
    v30 = *(_OWORD *)(v17 + 88);
    v24 = *(_OWORD *)(v17 + 40);
    *(_OWORD *)v23 = *(_OWORD *)v17;
    *(_QWORD *)(v23 + 16) = v18;
    *(_BYTE *)(v23 + 24) = v19;
    *(_BYTE *)(v23 + 25) = v20;
    *(_BYTE *)(v23 + 26) = v21;
    *(_QWORD *)(v23 + 32) = v22;
    *(_OWORD *)(v23 + 40) = v24;
    *(_OWORD *)(v23 + 56) = v28;
    *(_OWORD *)(v23 + 72) = v29;
    *(_OWORD *)(v23 + 88) = v30;
    swift_bridgeObjectRetain();
    swift_retain(*((_QWORD *)&v28 + 1));
    swift_retain(*((_QWORD *)&v29 + 1));
    swift_retain(*((_QWORD *)&v30 + 1));
  }
  v27 = v25 + 3;
  if (v27 >= v13)
    goto LABEL_28;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7D8B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE218);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_28;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
      {
        v9 = v25 + 2;
        if (v25 + 2 >= v13)
          goto LABEL_28;
        v26 = *(_QWORD *)(v6 + 8 * v9);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = v15 << 6;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 40);
    v20 = *(_QWORD *)(v17 + 48);
    v22 = *(_QWORD *)(v17 + 56);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(_OWORD *)(v17 + 24);
    *(_QWORD *)v23 = *(_QWORD *)v17;
    *(_QWORD *)(v23 + 8) = v18;
    *(_QWORD *)(v23 + 16) = v19;
    *(_OWORD *)(v23 + 24) = v24;
    *(_QWORD *)(v23 + 40) = v21;
    *(_QWORD *)(v23 + 48) = v20;
    *(_QWORD *)(v23 + 56) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 3;
  if (v27 >= v13)
    goto LABEL_28;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7DAB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  _OWORD v27[8];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE018);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = v15 << 7;
    v17 = (__int128 *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    v27[3] = v17[3];
    v21 = v17[4];
    v22 = v17[5];
    v23 = v17[7];
    v27[6] = v17[6];
    v27[7] = v23;
    v27[4] = v21;
    v27[5] = v22;
    v27[1] = v18;
    v27[2] = v20;
    v27[0] = v19;
    memmove((void *)(*(_QWORD *)(v4 + 48) + v16), v17, 0x80uLL);
    sub_86FA4(v27);
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7DC90(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  int64_t v16;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_27:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (!v13)
    {
      v15 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v15 >= v14)
        goto LABEL_27;
      v13 = *(_QWORD *)(v7 + 8 * v15);
      ++v10;
      if (!v13)
      {
        v10 = v15 + 1;
        if (v15 + 1 >= v14)
          goto LABEL_27;
        v13 = *(_QWORD *)(v7 + 8 * v10);
        if (!v13)
        {
          v10 = v15 + 2;
          if (v15 + 2 >= v14)
            goto LABEL_27;
          v13 = *(_QWORD *)(v7 + 8 * v10);
          if (!v13)
            break;
        }
      }
    }
LABEL_12:
    v13 &= v13 - 1;
  }
  v16 = v15 + 3;
  if (v16 >= v14)
    goto LABEL_27;
  v13 = *(_QWORD *)(v7 + 8 * v16);
  if (v13)
  {
    v10 = v16;
    goto LABEL_12;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v14)
      goto LABEL_27;
    v13 = *(_QWORD *)(v7 + 8 * v10);
    ++v16;
    if (v13)
      goto LABEL_12;
  }
LABEL_29:
  __break(1u);
}

void sub_7DDE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D7D90);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_BYTE *)(v19 + 8) = v17;
    v20 = v18;
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7DF9C()
{
  sub_7EAFC(&qword_14ACA78);
}

void sub_7DFA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA4F0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE070);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_27:
    *v1 = v8;
    return;
  }
  v24 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v10 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v16)
      goto LABEL_25;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v16)
        goto LABEL_25;
      v21 = *(_QWORD *)(v10 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v16)
          goto LABEL_25;
        v21 = *(_QWORD *)(v10 + 8 * v12);
        if (!v21)
          break;
      }
    }
LABEL_24:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    sub_5C238(*(_QWORD *)(v6 + 48) + v19, (uint64_t)v5, &qword_14BA4F0);
    sub_870DC((uint64_t)v5, *(_QWORD *)(v8 + 48) + v19);
  }
  v22 = v20 + 3;
  if (v22 >= v16)
  {
LABEL_25:
    swift_release(v6);
    v1 = v24;
    goto LABEL_27;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v16)
      goto LABEL_25;
    v21 = *(_QWORD *)(v10 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
}

void sub_7E1CC()
{
  sub_7E8D8((uint64_t (*)(_QWORD))&type metadata accessor for IndexPath, &qword_14AE0E8);
}

void sub_7E1E0()
{
  sub_7E1EC(&qword_14ACB30);
}

void sub_7E1EC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    swift_retain(v18);
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7E38C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE288);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v19;
    v21[2] = v20;
    sub_87A9C(v18, v19, v20);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7E548()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE290);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7E6D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  _OWORD v32[15];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D7E30);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v13)
      goto LABEL_28;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_28;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
      {
        v9 = v29 + 2;
        if (v29 + 2 >= v13)
          goto LABEL_28;
        v30 = *(_QWORD *)(v6 + 8 * v9);
        if (!v30)
          break;
      }
    }
LABEL_27:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 240 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[3];
    v19 = v17[4];
    v20 = v17[6];
    v32[5] = v17[5];
    v32[6] = v20;
    v32[3] = v18;
    v32[4] = v19;
    v21 = v17[7];
    v22 = v17[8];
    v23 = v17[10];
    v32[9] = v17[9];
    v32[10] = v23;
    v32[7] = v21;
    v32[8] = v22;
    v24 = v17[11];
    v25 = v17[12];
    v26 = v17[14];
    v32[13] = v17[13];
    v32[14] = v26;
    v32[11] = v24;
    v32[12] = v25;
    v28 = v17[1];
    v27 = v17[2];
    v32[0] = *v17;
    v32[1] = v28;
    v32[2] = v27;
    memmove((void *)(*(_QWORD *)(v4 + 48) + v16), v17, 0xF0uLL);
    sub_87124((uint64_t)v32);
  }
  v31 = v29 + 3;
  if (v31 >= v13)
    goto LABEL_28;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7E8D8(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = static _SetStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_30:
    *v4 = v11;
    return;
  }
  v28 = v4;
  v12 = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 56 + 8 * v14)
    memmove(v12, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    swift_release(v9);
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_7EAFC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_7EC84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE260);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v15 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x7EFA4);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
  v2 = v15;
LABEL_26:
  *v2 = v5;
}

void sub_7EFBC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[13];
  uint64_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36[9];

  v2 = v1;
  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  __chkstk_darwin(v4);
  v29 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v34 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v35 = (uint64_t)v24 - v10;
  v11 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE268);
  v12 = static _SetStorage.resize(original:capacity:move:)(v11, a1, 0);
  if (!*(_QWORD *)(v11 + 16))
  {
    swift_release(v11);
    goto LABEL_25;
  }
  v25 = v1;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 56);
  v32 = (_QWORD *)(v11 + 56);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v33 = (unint64_t)(v13 + 63) >> 6;
  swift_retain(v11);
  v26 = "library";
  v24[12] = "LibraryView.RecentlyAdded";
  v24[11] = "LibraryView.Playlists";
  v24[10] = "LibraryView.Artists";
  v24[9] = "LibraryView.Albums";
  v24[8] = "LibraryView.Songs";
  v24[7] = "LibraryView.MadeForYou";
  v24[6] = "LibraryView.MusicVideos";
  v24[5] = "LibraryView.Genres";
  v24[4] = "LibraryView.Compilations";
  v24[3] = "LibraryView.Composers";
  v24[2] = "LibraryView.Shows";
  v24[1] = "LibraryView.Downloaded";
  v17 = (uint64_t)v34;
  v27 = v11;
  v28 = v7;
  if (v16)
  {
    v18 = __clz(__rbit64(v16));
    goto LABEL_22;
  }
  if (v33 > 1)
  {
    v19 = v32[1];
    v20 = 1;
    if (v19)
      goto LABEL_21;
    v20 = 2;
    if (v33 > 2)
    {
      v19 = v32[2];
      if (v19)
        goto LABEL_21;
      v20 = 3;
      if (v33 > 3)
      {
        v19 = v32[3];
        if (!v19)
        {
          v21 = 4;
          if (v33 > 4)
          {
            v19 = v32[4];
            if (v19)
            {
              v20 = 4;
              goto LABEL_21;
            }
            while (1)
            {
              v20 = v21 + 1;
              if (__OFADD__(v21, 1))
              {
                __break(1u);
                JUMPOUT(0x7F65CLL);
              }
              if (v20 >= v33)
                break;
              v19 = v32[v20];
              ++v21;
              if (v19)
                goto LABEL_21;
            }
          }
          goto LABEL_23;
        }
LABEL_21:
        v18 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_22:
        v22 = v35;
        sub_877CC(*(_QWORD *)(v11 + 48) + *(_QWORD *)(v7 + 72) * v18, v35);
        Hasher.init(_seed:)(v36);
        sub_877CC(v22, v17);
        v23 = (char *)&loc_7F370 + dword_7F65C[swift_getEnumCaseMultiPayload(v17, v6)];
        __asm { BR              X9 }
      }
    }
  }
LABEL_23:
  swift_release_n(v11, 2);
  v2 = v25;
LABEL_25:
  *v2 = v12;
}

void sub_7F6A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE020);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_44:
    *v2 = v6;
    return;
  }
  v31 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v17 >= v11)
      goto LABEL_42;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_42;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_42;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v32);
    if (v20)
    {
      if (v20 == 1)
        v21 = 0x657469726F766166;
      else
        v21 = 0x64616F6C6E776F64;
      v22 = 0xE900000000000073;
    }
    else
    {
      v22 = 0xE300000000000000;
      v21 = 7105633;
    }
    String.hash(into:)(v32, v21, v22);
    swift_bridgeObjectRelease(v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_42:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_44;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_42;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_46:
  __break(1u);
}

void sub_7F97C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB68);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_41:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v32 = v2;
  v33 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v34 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_27;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v16 >= v34)
      goto LABEL_39;
    v17 = *(_QWORD *)(v33 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v34)
        goto LABEL_39;
      v17 = *(_QWORD *)(v33 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v34)
          goto LABEL_39;
        v17 = *(_QWORD *)(v33 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_27:
    v19 = *(_QWORD *)(v3 + 48) + 24 * v15;
    v21 = *(void **)v19;
    v20 = *(_QWORD *)(v19 + 8);
    v22 = *(_BYTE *)(v19 + 16);
    Hasher.init(_seed:)(v35);
    if ((v22 & 1) != 0)
    {
      Hasher._combine(_:)(1uLL);
      v23 = v21;
      NSObject.hash(into:)(v35);
      sub_4E664(v21, v20, 1);
    }
    else
    {
      Hasher._combine(_:)(0);
      swift_bridgeObjectRetain();
      String.hash(into:)(v35, v21, v20);
    }
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v10 + 8 * v27);
      }
      while (v31 == -1);
      v12 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = *(_QWORD *)(v6 + 48) + 24 * v12;
    *(_QWORD *)v13 = v21;
    *(_QWORD *)(v13 + 8) = v20;
    *(_BYTE *)(v13 + 16) = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v34)
  {
LABEL_39:
    swift_release_n(v3, 2);
    v2 = v32;
    goto LABEL_41;
  }
  v17 = *(_QWORD *)(v33 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v34)
      goto LABEL_39;
    v17 = *(_QWORD *)(v33 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_43:
  __break(1u);
}

void sub_7FC90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE010);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_7FEF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB60);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = v3 + 56;
  v8 = -1;
  if (v6 < 64)
    v8 = ~(-1 << v6);
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_9;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_25;
      v15 = *(_QWORD *)(v7 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_25;
        v15 = *(_QWORD *)(v7 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_24:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_9:
    sub_7770C(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v13), v5);
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_25:
    swift_release(v3);
    goto LABEL_26;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
}

void sub_8007C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AC930);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_37:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_26;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v17 >= v12)
      goto LABEL_35;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_35;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_35;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
        {
          v19 = v17 + 3;
          if (v19 >= v12)
          {
LABEL_35:
            swift_release(v3);
            v2 = v30;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v8 + 8 * v19);
          v7 = v19;
          if (!v18)
            break;
        }
      }
    }
LABEL_25:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_26:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v31);
    v21 = sub_308B9C();
    Hasher._combine(_:)(v21);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
    swift_retain(v20);
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_35;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_802FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACC28);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = v2;
  v32 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v33 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v33)
      goto LABEL_36;
    v16 = *(_QWORD *)(v32 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v33)
        goto LABEL_36;
      v16 = *(_QWORD *)(v32 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v33)
          goto LABEL_36;
        v16 = *(_QWORD *)(v32 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    Hasher.init(_seed:)(v34);
    v19 = objc_msgSend(*(id *)(v18 + 16), "_identifier", swift_retain(v18).n128_f64[0]);
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    String.hash(into:)(v34, v20, v22);
    swift_bridgeObjectRelease(v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v32 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v33)
      goto LABEL_36;
    v16 = *(_QWORD *)(v32 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_805F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACA70);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v14 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v14 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v14 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v14 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x80A1CLL);
              }
              if (v11 >= v14)
                break;
              v10 = *(_QWORD *)(v3 + 56 + 8 * v11);
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v15);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
LABEL_26:
  *v2 = v5;
}

void sub_80A50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE068);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain_n(v22, 2);
    String.hash(into:)(v33, v21, v22);
    swift_bridgeObjectRelease(v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_80D08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AC960);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain();
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_80FB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD v30[9];
  _BYTE v31[120];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1B0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_46:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v28 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v29 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v15 >= v29)
      goto LABEL_44;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_44;
      v16 = *(_QWORD *)(v28 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_44;
        v16 = *(_QWORD *)(v28 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    sub_87720(*(_QWORD *)(v3 + 48) + 112 * v14, (uint64_t)v31);
    Hasher.init(_seed:)(v30);
    if (v31[0])
    {
      if (v31[0] == 1)
        v18 = 0xD00000000000001CLL;
      else
        v18 = 0xD000000000000029;
      if (v31[0] == 1)
        v19 = 0x80000000010C3150;
      else
        v19 = 0x80000000010C3170;
    }
    else
    {
      v18 = 0xD00000000000002CLL;
      v19 = 0x80000000010C3120;
    }
    String.hash(into:)(v30, v18, v19);
    swift_bridgeObjectRelease(v19);
    v20 = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_47;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v12 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    sub_87790((uint64_t)v31, *(_QWORD *)(v6 + 48) + 112 * v12);
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_44:
    swift_release_n(v3, 2);
    goto LABEL_46;
  }
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v29)
      goto LABEL_44;
    v16 = *(_QWORD *)(v28 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_48:
  __break(1u);
}

void sub_812E8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v30 = v3;
  v8 = 0;
  v9 = v4 + 56;
  v10 = 1 << *(_BYTE *)(v4 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v4 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v6 + 56;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v8 << 6);
      goto LABEL_27;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_27:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v17);
    Hasher.init(_seed:)(v31);
    Hasher._combine(_:)(v21);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v14 + 8 * v25);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_36:
    swift_release(v4);
    v3 = v30;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_8155C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v30 = v3;
  v8 = 0;
  v9 = v4 + 56;
  v10 = 1 << *(_BYTE *)(v4 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v4 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v6 + 56;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v8 << 6);
      goto LABEL_27;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_27:
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    v22 = static Hasher._hash(seed:_:)(*(_QWORD *)(v7 + 40), v21);
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v14 + 8 * v25);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_36:
    swift_release(v4);
    v3 = v30;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_817B8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::Int v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v31 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  swift_retain(v4);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v12)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v12)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v12)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(_QWORD *)(v7 + 40);
    v22 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    v23 = NSObject._rawHashValue(seed:)(v21);
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v12)
  {
LABEL_36:
    swift_release_n(v4, 2);
    v3 = v31;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v12)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_81A2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  int64_t v39;
  _QWORD v40[9];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE210);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v39 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v12 << 6);
      goto LABEL_27;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v22 >= v39)
      goto LABEL_36;
    v23 = *(_QWORD *)(v8 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_36;
      v23 = *(_QWORD *)(v8 + 8 * v12);
      if (!v23)
      {
        v12 = v22 + 2;
        if (v22 + 2 >= v39)
          goto LABEL_36;
        v23 = *(_QWORD *)(v8 + 8 * v12);
        if (!v23)
          break;
      }
    }
LABEL_26:
    v10 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_27:
    v25 = *(_QWORD *)(v3 + 48) + 104 * v21;
    v27 = *(_OWORD *)v25;
    v26 = *(_OWORD *)(v25 + 16);
    v43 = *(_OWORD *)(v25 + 32);
    v28 = *(_OWORD *)(v25 + 48);
    v29 = *(_OWORD *)(v25 + 64);
    v30 = *(_OWORD *)(v25 + 80);
    v47 = *(_QWORD *)(v25 + 96);
    v45 = v29;
    v46 = v30;
    v44 = v28;
    v41 = v27;
    v42 = v26;
    Hasher.init(_seed:)(v40);
    sub_87890(&v41);
    Lyrics.TextLine.hash(into:)((uint64_t)v40);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v6 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v11 + 8 * v34);
      }
      while (v38 == -1);
      v13 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v6 + 48) + 104 * v13;
    v15 = v43;
    v16 = v41;
    *(_OWORD *)(v14 + 16) = v42;
    *(_OWORD *)(v14 + 32) = v15;
    v17 = v44;
    v18 = v45;
    v19 = v46;
    *(_QWORD *)(v14 + 96) = v47;
    *(_OWORD *)(v14 + 64) = v18;
    *(_OWORD *)(v14 + 80) = v19;
    *(_OWORD *)(v14 + 48) = v17;
    *(_OWORD *)v14 = v16;
    ++*(_QWORD *)(v6 + 16);
  }
  v24 = v22 + 3;
  if (v24 >= v39)
  {
LABEL_36:
    swift_release_n(v3, 2);
    goto LABEL_38;
  }
  v23 = *(_QWORD *)(v8 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v39)
      goto LABEL_36;
    v23 = *(_QWORD *)(v8 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_81D24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t i;
  __int128 v38;
  _QWORD v39[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE218);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v34 = v2;
  v35 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v36 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  for (i = v3; ; v3 = i)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_27;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v36)
      goto LABEL_36;
    v17 = *(_QWORD *)(v35 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v36)
        goto LABEL_36;
      v17 = *(_QWORD *)(v35 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v36)
          goto LABEL_36;
        v17 = *(_QWORD *)(v35 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_27:
    v19 = *(_QWORD *)(v3 + 48) + (v15 << 6);
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v38 = *(_OWORD *)(v19 + 24);
    v23 = *(_QWORD *)(v19 + 40);
    v24 = *(_QWORD *)(v19 + 48);
    v25 = *(_QWORD *)(v19 + 56);
    Hasher.init(_seed:)(v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n(v21, 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)(v39, v20, v21);
    swift_bridgeObjectRelease(v21);
    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v6 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v10 + 8 * (v28 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v10 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v10 + 8 * v29);
      }
      while (v33 == -1);
      v12 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = *(_QWORD *)(v6 + 48) + (v12 << 6);
    *(_QWORD *)v13 = v20;
    *(_QWORD *)(v13 + 8) = v21;
    *(_QWORD *)(v13 + 16) = v22;
    *(_OWORD *)(v13 + 24) = v38;
    *(_QWORD *)(v13 + 40) = v23;
    *(_QWORD *)(v13 + 48) = v24;
    *(_QWORD *)(v13 + 56) = v25;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v36)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v34;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v35 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v36)
      goto LABEL_36;
    v17 = *(_QWORD *)(v35 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_82050(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  int64_t v46;
  _QWORD v47[9];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE018);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_41:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v44 = v2;
  v45 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v46 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v20 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v21 = v20 | (v11 << 6);
      goto LABEL_27;
    }
    v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v22 >= v46)
      goto LABEL_39;
    v23 = *(_QWORD *)(v45 + 8 * v22);
    ++v11;
    if (!v23)
    {
      v11 = v22 + 1;
      if (v22 + 1 >= v46)
        goto LABEL_39;
      v23 = *(_QWORD *)(v45 + 8 * v11);
      if (!v23)
      {
        v11 = v22 + 2;
        if (v22 + 2 >= v46)
          goto LABEL_39;
        v23 = *(_QWORD *)(v45 + 8 * v11);
        if (!v23)
          break;
      }
    }
LABEL_26:
    v9 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v11 << 6);
LABEL_27:
    v25 = (__int128 *)(*(_QWORD *)(v3 + 48) + (v21 << 7));
    v27 = *v25;
    v26 = v25[1];
    v28 = v25[3];
    v50 = v25[2];
    v51 = v28;
    v29 = v25[4];
    v30 = v25[5];
    v31 = v25[7];
    v54 = v25[6];
    v55 = v31;
    v52 = v29;
    v53 = v30;
    v48 = v27;
    v49 = v26;
    Hasher.init(_seed:)(v47);
    v32 = *((_QWORD *)&v53 + 1);
    v33 = v54;
    swift_bridgeObjectRetain();
    sub_86FA4(&v48);
    String.hash(into:)(v47, v32, v33);
    swift_bridgeObjectRelease(v33);
    v34 = *((_QWORD *)&v48 + 1);
    if (*((_QWORD *)&v48 + 1))
    {
      v35 = v48;
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)(v47, v35, v34);
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v36 = Hasher._finalize()();
    v37 = -1 << *(_BYTE *)(v6 + 32);
    v38 = v36 & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v10 + 8 * (v38 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v10 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v10 + 8 * v39);
      }
      while (v43 == -1);
      v12 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_OWORD *)(*(_QWORD *)(v6 + 48) + (v12 << 7));
    v14 = v48;
    v16 = v50;
    v15 = v51;
    v13[1] = v49;
    v13[2] = v16;
    *v13 = v14;
    v17 = v52;
    v18 = v53;
    v19 = v55;
    v13[6] = v54;
    v13[7] = v19;
    v13[4] = v17;
    v13[5] = v18;
    v13[3] = v15;
    ++*(_QWORD *)(v6 + 16);
  }
  v24 = v22 + 3;
  if (v24 >= v46)
  {
LABEL_39:
    swift_release_n(v3, 2);
    v2 = v44;
    goto LABEL_41;
  }
  v23 = *(_QWORD *)(v45 + 8 * v24);
  if (v23)
  {
    v11 = v24;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v11 >= v46)
      goto LABEL_39;
    v23 = *(_QWORD *)(v45 + 8 * v11);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
LABEL_43:
  __break(1u);
}

void sub_823B0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28[9];

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_36:
    *v3 = v7;
    return;
  }
  v26 = v4;
  v27 = v3;
  v8 = 0;
  v9 = v4 + 56;
  v10 = 1 << *(_BYTE *)(v4 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v4 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v6 + 56;
  while (1)
  {
    if (!v12)
    {
      v16 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v16 >= v13)
        goto LABEL_34;
      v12 = *(_QWORD *)(v9 + 8 * v16);
      ++v8;
      if (!v12)
      {
        v8 = v16 + 1;
        if (v16 + 1 >= v13)
          goto LABEL_34;
        v12 = *(_QWORD *)(v9 + 8 * v8);
        if (!v12)
        {
          v8 = v16 + 2;
          if (v16 + 2 >= v13)
            goto LABEL_34;
          v12 = *(_QWORD *)(v9 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_25:
    Hasher.init(_seed:)(v28);
    Hasher._combine(_:)(0);
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(v7 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v14 + 8 * (v20 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v14 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v14 + 8 * v21);
      }
      while (v25 == -1);
      v15 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    v12 &= v12 - 1;
    *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    ++*(_QWORD *)(v7 + 16);
  }
  v17 = v16 + 3;
  if (v17 >= v13)
  {
LABEL_34:
    swift_release(v26);
    v3 = v27;
    goto LABEL_36;
  }
  v12 = *(_QWORD *)(v9 + 8 * v17);
  if (v12)
  {
    v8 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v13)
      goto LABEL_34;
    v12 = *(_QWORD *)(v9 + 8 * v8);
    ++v17;
    if (v12)
      goto LABEL_25;
  }
LABEL_38:
  __break(1u);
}

void sub_825EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  int64_t v18;
  _QWORD v19[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D7D90);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v18 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v18 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v18 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v18 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v18 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x82AA0);
              }
              if (v11 >= v18)
                break;
              v10 = *(_QWORD *)(v3 + 56 + 8 * v11);
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(_QWORD *)(v3 + 48) + 16 * v9;
        v14 = *(void **)v13;
        v15 = *(unsigned __int8 *)(v13 + 8);
        Hasher.init(_seed:)(v19);
        v16 = v14;
        NSObject.hash(into:)(v19);

        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
  v2 = v17;
LABEL_26:
  *v2 = v5;
}

void sub_82AE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACA78);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v15 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x82F50);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
  v2 = v15;
LABEL_26:
  *v2 = v5;
}

void sub_82F90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1A0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v14 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v14 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v14 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v14 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x833DCLL);
              }
              if (v11 >= v14)
                break;
              v10 = *(_QWORD *)(v3 + 56 + 8 * v11);
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v15);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
LABEL_26:
  *v2 = v5;
}

void sub_83410(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14ACB30);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v30 = v2;
  v31 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v32 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v32)
      goto LABEL_36;
    v16 = *(_QWORD *)(v31 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_36;
      v16 = *(_QWORD *)(v31 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_36;
        v16 = *(_QWORD *)(v31 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    v19 = *(_QWORD *)(v6 + 40);
    v20 = type metadata accessor for AnyCancellable(0);
    v21 = sub_4DD24(&qword_14ACB38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    swift_retain(v18);
    v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v31 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v32)
      goto LABEL_36;
    v16 = *(_QWORD *)(v31 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_836F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(ValueMetadata *, _UNKNOWN **);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD v46[5];
  _QWORD v47[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE288);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_49:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v40 = v2;
  v41 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v42 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  v43 = v3;
  while (1)
  {
    if (v9)
    {
      v44 = (v9 - 1) & v9;
      v45 = v11;
      v14 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v15 >= v42)
      goto LABEL_47;
    v16 = *(_QWORD *)(v41 + 8 * v15);
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v42)
        goto LABEL_47;
      v16 = *(_QWORD *)(v41 + 8 * v17);
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v42)
          goto LABEL_47;
        v16 = *(_QWORD *)(v41 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v44 = (v16 - 1) & v16;
    v45 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_27:
    v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 24 * v14);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    Hasher.init(_seed:)(v47);
    if (v22 < 0)
      v23 = &off_1398C58;
    else
      v23 = &off_1362C00;
    v46[4] = v23;
    v24 = v22 & 0x7FFFFFFFFFFFFFFFLL;
    if (v22 < 0)
      v25 = &_s7LibraryVN;
    else
      v25 = &_s7CatalogVN;
    if (v22 >= 0)
      v24 = v22;
    v46[0] = v20;
    v46[1] = v21;
    if (v22 < 0)
      v26 = 0x7972617262696CLL;
    else
      v26 = 0x676F6C61746163;
    v46[2] = v24;
    v46[3] = v25;
    __swift_project_boxed_opaque_existential_1(v46, (uint64_t)v25);
    v27 = v6;
    v28 = (uint64_t (*)(ValueMetadata *, _UNKNOWN **))v23[1];
    sub_87A9C(v20, v21, v22);
    sub_87A9C(v20, v21, v22);
    v29 = v28(v25, v23);
    v31 = v30;
    __swift_destroy_boxed_opaque_existential_1(v46);
    String.hash(into:)(v47, v29, v31);
    swift_bridgeObjectRelease(v31);
    String.hash(into:)(v47, v26, 0xE700000000000000);
    swift_bridgeObjectRelease(0xE700000000000000);
    v32 = Hasher._finalize()();
    v6 = v27;
    v33 = -1 << *(_BYTE *)(v27 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v10 + 8 * (v34 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v10 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_50;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v10 + 8 * v35);
      }
      while (v39 == -1);
      v12 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 24 * v12);
    *v13 = v20;
    v13[1] = v21;
    v13[2] = v22;
    ++*(_QWORD *)(v27 + 16);
    v3 = v43;
    v9 = v44;
    v11 = v45;
  }
  v18 = v11 + 4;
  if (v11 + 4 >= v42)
  {
LABEL_47:
    swift_release_n(v3, 2);
    v2 = v40;
    goto LABEL_49;
  }
  v16 = *(_QWORD *)(v41 + 8 * v18);
  if (v16)
  {
    v17 = v11 + 4;
    goto LABEL_26;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v42)
      goto LABEL_47;
    v16 = *(_QWORD *)(v41 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_26;
  }
LABEL_51:
  __break(1u);
}

void sub_83AB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE290);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_41:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v17 >= v11)
      goto LABEL_39;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_39;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_39;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v31);
    if (v20)
      v21 = 0x7972617262696CLL;
    else
      v21 = 0x676F6C61746163;
    String.hash(into:)(v31, v21, 0xE700000000000000);
    swift_bridgeObjectRelease(0xE700000000000000);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_39:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_41;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_39;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_43:
  __break(1u);
}

void sub_83D68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  Swift::Int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  int64_t v53;
  _QWORD v54[9];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D7E30);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v51 = v2;
  v52 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v53 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v25 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v26 = v25 | (v11 << 6);
      goto LABEL_27;
    }
    v27 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v27 >= v53)
      goto LABEL_36;
    v28 = *(_QWORD *)(v52 + 8 * v27);
    ++v11;
    if (!v28)
    {
      v11 = v27 + 1;
      if (v27 + 1 >= v53)
        goto LABEL_36;
      v28 = *(_QWORD *)(v52 + 8 * v11);
      if (!v28)
      {
        v11 = v27 + 2;
        if (v27 + 2 >= v53)
          goto LABEL_36;
        v28 = *(_QWORD *)(v52 + 8 * v11);
        if (!v28)
          break;
      }
    }
LABEL_26:
    v9 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v11 << 6);
LABEL_27:
    v30 = (__int128 *)(*(_QWORD *)(v3 + 48) + 240 * v26);
    v32 = *v30;
    v31 = v30[1];
    v57 = v30[2];
    v33 = v30[3];
    v34 = v30[4];
    v35 = v30[6];
    v60 = v30[5];
    v61 = v35;
    v59 = v34;
    v58 = v33;
    v36 = v30[7];
    v37 = v30[8];
    v38 = v30[10];
    v64 = v30[9];
    v65 = v38;
    v62 = v36;
    v63 = v37;
    v39 = v30[11];
    v40 = v30[12];
    v41 = v30[14];
    v68 = v30[13];
    v69 = v41;
    v66 = v39;
    v67 = v40;
    v55 = v32;
    v56 = v31;
    Hasher.init(_seed:)(v54);
    v42 = v56;
    sub_87124((uint64_t)&v55);
    swift_bridgeObjectRetain();
    String.hash(into:)(v54, v42, *((_QWORD *)&v42 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)&v42 + 1));
    v43 = Hasher._finalize()();
    v44 = -1 << *(_BYTE *)(v6 + 32);
    v45 = v43 & ~v44;
    v46 = v45 >> 6;
    if (((-1 << v45) & ~*(_QWORD *)(v10 + 8 * (v45 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v45) & ~*(_QWORD *)(v10 + 8 * (v45 >> 6)))) | v45 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v47 = 0;
      v48 = (unint64_t)(63 - v44) >> 6;
      do
      {
        if (++v46 == v48 && (v47 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v49 = v46 == v48;
        if (v46 == v48)
          v46 = 0;
        v47 |= v49;
        v50 = *(_QWORD *)(v10 + 8 * v46);
      }
      while (v50 == -1);
      v12 = __clz(__rbit64(~v50)) + (v46 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_OWORD *)(*(_QWORD *)(v6 + 48) + 240 * v12);
    v14 = v57;
    v15 = v55;
    v13[1] = v56;
    v13[2] = v14;
    v16 = v58;
    v17 = v59;
    v18 = v61;
    v13[5] = v60;
    v13[6] = v18;
    v13[3] = v16;
    v13[4] = v17;
    v19 = v62;
    v20 = v63;
    v21 = v65;
    v13[9] = v64;
    v13[10] = v21;
    v13[7] = v19;
    v13[8] = v20;
    v22 = v66;
    v23 = v67;
    v24 = v69;
    v13[13] = v68;
    v13[14] = v24;
    v13[11] = v22;
    v13[12] = v23;
    *v13 = v15;
    ++*(_QWORD *)(v6 + 16);
  }
  v29 = v27 + 3;
  if (v29 >= v53)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v51;
    goto LABEL_38;
  }
  v28 = *(_QWORD *)(v52 + 8 * v29);
  if (v28)
  {
    v11 = v29;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v11 >= v53)
      goto LABEL_36;
    v28 = *(_QWORD *)(v52 + 8 * v11);
    ++v29;
    if (v28)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_840C8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t (*v43)(uint64_t);
  unint64_t *v44;
  uint64_t v45;

  v44 = a4;
  v45 = a5;
  v7 = v5;
  v43 = a2;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release(v13);
LABEL_37:
    *v7 = v15;
    return;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v40 = v7;
  v41 = v13 + 56;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v42 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 56;
  v21 = swift_retain(v13);
  v22 = 0;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_26;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v42)
      goto LABEL_35;
    v27 = *(_QWORD *)(v41 + 8 * v26);
    ++v22;
    if (!v27)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v42)
        goto LABEL_35;
      v27 = *(_QWORD *)(v41 + 8 * v22);
      if (!v27)
      {
        v22 = v26 + 2;
        if (v26 + 2 >= v42)
          goto LABEL_35;
        v27 = *(_QWORD *)(v41 + 8 * v22);
        if (!v27)
          break;
      }
    }
LABEL_25:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_26:
    v29 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v29 * v25, v9, v21);
    v30 = *(_QWORD *)(v15 + 40);
    v31 = sub_4DD24(v44, v43, v45);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v9, v31);
    v33 = -1 << *(_BYTE *)(v15 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v23 * v29, v12, v9);
    ++*(_QWORD *)(v15 + 16);
  }
  v28 = v26 + 3;
  if (v28 >= v42)
  {
LABEL_35:
    swift_release_n(v13, 2);
    v7 = v40;
    goto LABEL_37;
  }
  v27 = *(_QWORD *)(v41 + 8 * v28);
  if (v27)
  {
    v22 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v22 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v22 >= v42)
      goto LABEL_35;
    v27 = *(_QWORD *)(v41 + 8 * v22);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_843E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AE098);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_26;
  }
  v15 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x84744);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
  v2 = v15;
LABEL_26:
  *v2 = v5;
}

uint64_t sub_84764(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14ADFF8, (uint64_t *)&unk_14F68C0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F68C0);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_84980(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_5C150(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_84B90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE298, &qword_14B70D0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14B70D0);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14AEDD0, MPModelSong_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_84DAC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE248, &qword_14AE238, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE238);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, &qword_14AE240, _UITabElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_84FC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE258, &qword_14AE250, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE250);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, &qword_14ACC50, _UITab_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_851E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE0D0, &qword_14AE0C8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE0C8);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&unk_14C11B0, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_85400(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE100, &qword_14AE0F8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE0F8);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14B2100, MPModelObject_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_8561C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE038, &qword_14AE028, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE028);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14AE030, UIActivity_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_85838(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE048, &qword_14AE040, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE040);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14CCE10, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_85A54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_84980(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for BottomPlayerManager.Queue, &qword_14AE138, &qword_14AE130, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_45BC20);
}

uint64_t sub_85A78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE1C8, &qword_14AE1C0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1C0);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&unk_14AEE20, MPModelPlaylistEntry_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_85C94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE090, &qword_14AE088, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE088);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&unk_14F7D50, MPModelGenericObject_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_85EB0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE080, &qword_14AE078, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE078);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_860CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE058, &qword_14AE050, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE050);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&unk_14C1E50, NSSortDescriptor_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_862E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE198, &qword_14AE190, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE190);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&unk_14D7B30, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_86504(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE158, &qword_14AE150, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE150);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14ACB50, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_86720(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150((unint64_t *)&qword_14AE148, &qword_14AE140, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE140);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14DE440, MPModelSocialPerson_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_8693C(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_5C150(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_86B4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE0E0, &qword_14AE0D8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE0D8);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14B5940, UICollectionViewLayoutAttributes_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_86D68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_5C150(&qword_14AE0B0, &qword_14AE0A0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_14AE0A0);
          v13 = sub_45BC20(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_4E684(0, &qword_14AE0A8, MPModelLibrarySearchScope_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

BOOL sub_86F84(void **a1)
{
  uint64_t v1;

  return sub_679C4(a1, *(uint64_t **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

_QWORD *sub_86FA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = (void *)a1[8];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  swift_bridgeObjectRetain(a1[10]);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v10 = v5;
  return a1;
}

_QWORD *sub_87040(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = (void *)a1[8];
  v6 = a1[10];
  v7 = a1[12];
  v8 = a1[13];
  v9 = a1[14];
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);

  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_870DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_87124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 72);
  v2 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 88);
  v11 = *(_OWORD *)(a1 + 136);
  v12 = *(_OWORD *)(a1 + 120);
  v10 = *(_OWORD *)(a1 + 152);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 176);
  v5 = *(_BYTE *)(a1 + 184);
  v6 = *(void **)(a1 + 192);
  v7 = *(_QWORD *)(a1 + 200);
  v8 = *(_BYTE *)(a1 + 208);
  v13 = *(_QWORD *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_8722C(v19, v18, v17, v16, v15, v14, v2, v13, (void *)v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v3, v4, v5);
  sub_4E674(v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

id sub_8722C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0)
  {
    swift_bridgeObjectRetain(a11);
    swift_bridgeObjectRetain(a13);
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a15);
    swift_bridgeObjectRetain(a16);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a7);
    return a9;
  }
  else
  {
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return (id)swift_bridgeObjectRetain(a5);
  }
}

uint64_t sub_87308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 48);
  v21 = *(_QWORD *)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v18 = *(_QWORD *)(a1 + 88);
  v13 = *(_OWORD *)(a1 + 136);
  v14 = *(_OWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 168);
  v6 = *(_QWORD *)(a1 + 176);
  v7 = *(_BYTE *)(a1 + 184);
  v8 = *(void **)(a1 + 192);
  v9 = *(_QWORD *)(a1 + 200);
  v10 = *(_BYTE *)(a1 + 208);
  v15 = *(_QWORD *)(a1 + 224);
  v16 = *(_QWORD *)(a1 + 112);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  sub_8740C(v22, v21, v20, v19, v18, v17, v4, v16, (void *)v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v5, v6, v7);
  sub_4E664(v8, v9, v10);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_8740C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0)
  {
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a14);
    swift_bridgeObjectRelease(a15);
    swift_bridgeObjectRelease(a16);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a7);

    a7 = a11;
  }
  else
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a5);
  }
  return swift_bridgeObjectRelease(a7);
}

void sub_874C0()
{
  sub_A82728();
}

uint64_t sub_874D4(void *a1, void *a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t, _UNKNOWN **);
  _QWORD *v22;
  void *v24;

  v5 = v4;
  v10 = &_swiftEmptySetSingleton;
  v5[26] = &_swiftEmptySetSingleton;
  v11 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
  swift_retain(v5);
  v12 = WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v11);
  v5[29] = 0;
  v5[30] = 0;
  v5[28] = v12;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_4ACD0((uint64_t)_swiftEmptyArrayStorage);
    v10 = v24;
  }
  v5[31] = v10;
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    sub_123A18(0, v13, 0);
    v14 = (uint64_t *)(a3 + 32);
    v15 = _swiftEmptyArrayStorage[2];
    do
    {
      v16 = *v14;
      v17 = _swiftEmptyArrayStorage[3];
      if (v15 >= v17 >> 1)
        sub_123A18(v17 > 1, v15 + 1, 1);
      _swiftEmptyArrayStorage[2] = v15 + 1;
      _swiftEmptyArrayStorage[v15 + 4] = v16;
      ++v14;
      ++v15;
      --v13;
    }
    while (v13);
  }
  v18 = sub_512DE8((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v5[27] = v18;
  swift_release(v5);
  v19 = a1;
  v20 = sub_3084E0((uint64_t)v19, a2, 0, a4 & 1);
  v21 = *(void (**)(uint64_t, _UNKNOWN **))&stru_B8.sectname[swift_isaMask & *v19];
  swift_retain_n(v20, 2);
  v22 = v19;
  v21(v20, &off_13422B8);

  swift_release(v20);
  return v20;
}

uint64_t sub_876C0(void *a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v4;

  swift_allocObject(v4, 256, 7);
  return sub_874D4(a1, a2, a3, a4);
}

uint64_t sub_87720(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Tooltip.Presentation(a2, a1);
  return a2;
}

_QWORD *sub_8775C(_QWORD *a1)
{
  destroy for Tooltip.Presentation(a1);
  return a1;
}

uint64_t sub_87790(uint64_t a1, uint64_t a2)
{
  initializeWithTake for Tooltip.Presentation(a2, a1);
  return a2;
}

uint64_t sub_877CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_87810(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_8784C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_87890(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[8];
  v3 = a1[10];
  v4 = a1[12];
  swift_bridgeObjectRetain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *sub_878E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[10];
  swift_release(a1[12]);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

_QWORD *sub_87938(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  swift_bridgeObjectRetain(a1[6]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *sub_87988(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_879D8(void *a1)
{
  uint64_t v1;

  return sub_66FD0(a1, v1);
}

uint64_t sub_879E0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_87A04(uint64_t *a1)
{
  uint64_t v1;

  sub_675EC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), sub_676C4);
}

void sub_87A24(uint64_t *a1)
{
  uint64_t v1;

  sub_675EC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), sub_67238);
}

unint64_t sub_87A44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14C1290;
  if (!qword_14C1290)
  {
    v1 = sub_4E684(255, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_14C1290);
  }
  return result;
}

uint64_t sub_87A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a3 & 0x7FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain(a2);
  return swift_retain(v3);
}

uint64_t sub_87AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a3 & 0x7FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRelease(a2);
  return swift_release(v3);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void sub_87B10(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  NSString *v6;
  NSString *v7;
  Class v8;
  uint64_t ObjCClassMetadata;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  __n128 v17;
  id v18;
  uint64_t v19;
  objc_super v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v2 = v1;
  v4 = sub_4E684(0, (unint64_t *)&qword_14AE2D0, NSString_ptr);
  v5 = v2;
  v6 = (NSString *)NSCoder.decodeObject<A>(of:forKey:)(v4, 0xD000000000000022, 0x80000000010C4AA0, v4);
  if (!v6
    || (v7 = v6, v8 = NSClassFromString(v6), v7, !v8)
    || (ObjCClassMetadata = swift_getObjCClassMetadata(v8),
        v10 = sub_4E684(0, (unint64_t *)&qword_14B2100, MPModelObject_ptr),
        !swift_dynamicCastMetatype(ObjCClassMetadata, v10))
    || (v11 = sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr),
        (v12 = NSCoder.decodeObject<A>(of:forKey:)(v11, 0xD000000000000024, 0x80000000010C4AD0, v11)) == 0))
  {
LABEL_8:

    v19 = type metadata accessor for CodableModelIdentity();
    swift_deallocPartialClassInstance(v5, v19, 16, 7);
    return;
  }
  v13 = (void *)v12;
  v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  aBlock[4] = UIScreen.Dimensions.size.getter;
  v22 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E9F0;
  aBlock[3] = &block_descriptor_5;
  v15 = _Block_copy(aBlock);
  v16 = objc_msgSend(v14, "initWithIdentifiers:block:", v13, v15);
  _Block_release(v15);
  v17 = swift_release(v22);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v17);

  if ((v15 & 1) == 0)
  {
    if (v16)
    {
      *(_QWORD *)&v5[OBJC_IVAR____TtC16MusicApplication20CodableModelIdentity_model] = v16;
      v18 = v16;

      v20.receiver = v5;
      v20.super_class = (Class)type metadata accessor for CodableModelIdentity();
      objc_msgSendSuper2(&v20, "init");

      return;
    }
    goto LABEL_8;
  }
  __break(1u);
}

void sub_87D64(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t ObjectType;
  objc_class *ObjCClassFromMetadata;
  NSString *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication20CodableModelIdentity_model);
  ObjectType = swift_getObjectType();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType);
  v6 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v8 = v7;
    v6 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "encodeObject:forKey:", v6, v9);

  v10 = objc_msgSend(v3, "identifiers");
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "encodeObject:forKey:", v10, v11);

}

id sub_87F00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CodableModelIdentity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CodableModelIdentity()
{
  return objc_opt_self(_TtC16MusicApplication20CodableModelIdentity);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_5(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t *sub_87F78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = *(int *)(a3 + 20);
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for VideoArtwork(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = *(int *)(a3 + 24);
    v45 = (uint64_t *)((char *)a1 + v44);
    v46 = (uint64_t *)((char *)a2 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_882D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v13 = a1 + *(int *)(a2 + 20);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8)).n128_u64[0];
  return result;
}

char *sub_88448(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = *(int *)(a3 + 20);
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = *(int *)(a3 + 24);
  v43 = &a1[v42];
  v44 = &a2[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_8877C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AD680) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_5C0DC(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_56024((uint64_t)v32, (uint64_t *)&unk_14AD600);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = *(int *)(a3 + 20);
  v63 = (void *)(a1 + v62);
  v64 = &a2[v62];
  v65 = type metadata accessor for VideoArtwork(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_32;
  }
  if (v69)
  {
LABEL_32:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_33:
  v71 = *(int *)(a3 + 24);
  v72 = (_QWORD *)(a1 + v71);
  v73 = &a2[v71];
  *v72 = *(_QWORD *)v73;
  v74 = v72[1];
  v72[1] = *((_QWORD *)v73 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v74);
  return a1;
}

char *sub_88D10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = *(int *)(a3 + 20);
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_89038(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AD680) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_5C0DC(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_56024((uint64_t)v32, (uint64_t *)&unk_14AD600);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_BYTE *)(v55 + 16) = v56[16];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  v57 = *(int *)(a3 + 20);
  v58 = (void *)(a1 + v57);
  v59 = &a2[v57];
  v60 = type metadata accessor for VideoArtwork(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_32;
  }
  if (v64)
  {
LABEL_32:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_33:
  v66 = *(int *)(a3 + 24);
  v67 = (_QWORD *)(a1 + v66);
  v68 = &a2[v66];
  v70 = *(_QWORD *)v68;
  v69 = *((_QWORD *)v68 + 1);
  v71 = v67[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease(v71);
  return a1;
}

uint64_t sub_895BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_895C8);
}

uint64_t sub_895C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_89684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_89690);
}

uint64_t sub_89690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t _s7ArtworkVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_14AE348;
  if (!qword_14AE348)
    return swift_getSingletonMetadata(a1, &_s7ArtworkVMn);
  return result;
}

void sub_89778(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_89804(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_105FAC8;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

void sub_89804(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14CCE00)
  {
    v2 = type metadata accessor for VideoArtwork(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14CCE00);
  }
}

uint64_t sub_89858(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11D5440, 1);
}

uint64_t sub_89868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  __int128 *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t OpaqueTypeConformance2;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  _BYTE v126[26];

  v2 = v1;
  v122 = a1;
  v107 = type metadata accessor for AccessibilityTraits(0);
  v121 = *(_QWORD *)(v107 - 8);
  v3 = __chkstk_darwin(v107);
  v120 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0, v3);
  v118 = *(_QWORD *)(v5 - 8);
  v119 = v5;
  __chkstk_darwin(v5);
  v117 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE388);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
  __chkstk_darwin(v14);
  v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  __chkstk_darwin(v17);
  v97 = (uint64_t)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v95 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD650);
  __chkstk_darwin(v22);
  v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  __chkstk_darwin(v25);
  v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for ArtworkMotionView(0);
  __chkstk_darwin(v100);
  v99 = (uint64_t)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE390);
  v103 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v101 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE398);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v106 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE3A0);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v110 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE3A8);
  __chkstk_darwin(v102);
  v114 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE3B0);
  __chkstk_darwin(v116);
  v115 = (char *)&v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE3B8);
  __chkstk_darwin(v34);
  v112 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = _s7ArtworkVMa(0);
  v36 = v2 + *(int *)(v104 + 20);
  v98 = v27;
  sub_5C238(v36, (uint64_t)v27, &qword_14CCE60);
  sub_5C238(v2, (uint64_t)v21, (uint64_t *)&unk_14B0FA0);
  v37 = type metadata accessor for ArtworkImage.ViewModel(0);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
  if (v38(v21, 1, v37) == 1)
  {
    sub_56024((uint64_t)v21, (uint64_t *)&unk_14B0FA0);
    v39 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v24, 1, 1, v39);
  }
  else
  {
    v40 = type metadata accessor for Artwork(0);
    v96 = v8;
    v95 = v7;
    v41 = v24;
    v42 = v10;
    v43 = v40;
    v44 = v16;
    v45 = v2;
    v46 = *(_QWORD *)(v40 - 8);
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v41, v21, v40);
    sub_5C0DC((uint64_t)v21, type metadata accessor for ArtworkImage.ViewModel);
    v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
    v2 = v45;
    v16 = v44;
    v48 = v41;
    v49 = v43;
    v10 = v42;
    v24 = v41;
    v7 = v95;
    v8 = v96;
    v47(v48, 0, 1, v49);
  }
  v50 = v97;
  sub_5C238(v2, v97, (uint64_t *)&unk_14B0FA0);
  if (v38((char *)v50, 1, v37) == 1)
  {
    sub_56024(v50, (uint64_t *)&unk_14B0FA0);
    v51 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v16, 1, 1, v51);
  }
  else
  {
    sub_5C238(v50 + *(int *)(v37 + 20), (uint64_t)v16, &qword_14AD680);
    sub_5C0DC(v50, type metadata accessor for ArtworkImage.ViewModel);
  }
  v52 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v53 = (__int128 *)(v2 + v52[7]);
  v54 = *(__int128 *)((char *)v53 + 26);
  v55 = v53[1];
  v125 = *v53;
  *(_OWORD *)v126 = v55;
  *(_OWORD *)&v126[10] = v54;
  sub_8A1C4(v2 + v52[5], (uint64_t)v13);
  v56 = type metadata accessor for ArtworkImage.Placeholder(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v13, 0, 1, v56);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for ArtworkImage.ReusePolicy.notReusableForDistinctItems(_:), v7);
  v57 = v99;
  ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)((uint64_t)v98, (uint64_t)v24, (uint64_t)v16, &v125, (uint64_t)v13, (uint64_t)v10, v99);
  v58 = v2;
  v59 = v2 + v52[8];
  v60 = *(_QWORD *)v59;
  v61 = *(_QWORD *)(v59 + 8);
  v62 = *(_BYTE *)(v59 + 16);
  v63 = sub_4DD24(&qword_14AE3C0, type metadata accessor for ArtworkMotionView, (uint64_t)&protocol conformance descriptor for ArtworkMotionView);
  v64 = v101;
  v65 = v100;
  View.corner(_:)(v60, v61, v62, v100, v63);
  sub_5C0DC(v57, type metadata accessor for ArtworkMotionView);
  v66 = Border.artwork.unsafeMutableAddressor();
  v67 = *v66;
  v68 = *((double *)v66 + 1);
  v69 = *(_QWORD *)v59;
  v70 = *(_QWORD *)(v59 + 8);
  v71 = *(_BYTE *)(v59 + 16);
  v72 = *((_BYTE *)v66 + 16);
  swift_retain(*v66);
  v123 = v65;
  v124 = v63;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v74 = v106;
  v75 = v70;
  v76 = v105;
  View.border(_:corner:)(v67, v72, v69, v75, v71, v105, OpaqueTypeConformance2, v68);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v64, v76);
  v77 = swift_release(v67);
  v78 = v117;
  static AccessibilityChildBehavior.ignore.getter(v77);
  v123 = v76;
  v124 = OpaqueTypeConformance2;
  v79 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
  v80 = v110;
  v81 = v109;
  View.accessibilityElement(children:)(v78, v109, v79);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v78, v119);
  v82 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v74, v81);
  v83 = v120;
  static AccessibilityTraits.isImage.getter(v82);
  v123 = v81;
  v124 = v79;
  v84 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v85 = v113;
  v86 = (uint64_t)v114;
  View.accessibilityAddTraits(_:)(v83, v113, v84);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v83, v107);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v80, v85);
  v87 = AccessibilityIdentifier.containerDetailHeaderArtwork.unsafeMutableAddressor()[1];
  sub_8A208();
  swift_bridgeObjectRetain();
  v88 = (uint64_t)v115;
  View.accessibilityIdentifier(_:)();
  sub_56024(v86, &qword_14AE3A8);
  swift_bridgeObjectRelease(v87);
  v89 = (uint64_t *)(v58 + *(int *)(v104 + 24));
  v90 = *v89;
  v91 = v89[1];
  v92 = sub_8A320();
  v93 = (uint64_t)v112;
  View.accessibilityLabel(_:)(v90, v91, v116, v92);
  sub_56024(v88, &qword_14AE3B0);
  return sub_8A33C(v93, v122);
}

uint64_t sub_8A1A8()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_8A1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_8A208()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = qword_14AE3C8;
  if (!qword_14AE3C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AE3A8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AE398);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AE390);
    v6 = type metadata accessor for ArtworkMotionView(255);
    v7 = sub_4DD24(&qword_14AE3C0, type metadata accessor for ArtworkMotionView, (uint64_t)&protocol conformance descriptor for ArtworkMotionView);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14AE3C8);
  }
  return result;
}

uint64_t sub_8A320()
{
  return sub_8A3B0(&qword_14AE3D0, &qword_14AE3B0, (void (*)(void))sub_8A208);
}

uint64_t sub_8A33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE3B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_8A384()
{
  return sub_8A3B0(&qword_14AE3D8, &qword_14AE3B8, (void (*)(void))sub_8A320);
}

uint64_t sub_8A3B0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

void destroy for PlaylistEditAction(uint64_t a1)
{
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 != 1)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));

  }
}

uint64_t initializeWithCopy for PlaylistEditAction(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    v9 = *(void **)(a2 + 72);
    v8 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v9;
    *(_QWORD *)(a1 + 80) = v8;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v7);
    v10 = v9;
  }
  return a1;
}

uint64_t assignWithCopy for PlaylistEditAction(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  __swift_assign_boxed_opaque_existential_1((_QWORD *)a1, (_QWORD *)a2);
  v4 = (__int128 *)(a1 + 40);
  v5 = (__int128 *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 48);
  if (v6 == 1)
  {
    if (v7 == 1)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v9;
      *v4 = v8;
    }
    else
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      v12 = *(void **)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v12;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v12;
    }
  }
  else if (v7 == 1)
  {
    sub_8A7A4(a1 + 40);
    v11 = *(_OWORD *)(a2 + 56);
    v10 = *(_OWORD *)(a2 + 72);
    *v4 = *v5;
    *(_OWORD *)(a1 + 56) = v11;
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v14 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v14);
    v15 = *(void **)(a1 + 72);
    v16 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v16;
    v17 = v16;

    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  }
  return a1;
}

_QWORD *__swift_assign_boxed_opaque_existential_1(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

uint64_t sub_8A7A4(uint64_t a1)
{
  destroy for ActionDisplayConfiguration(a1);
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PlaylistEditAction(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  if (v5 != 1)
  {
    v6 = *(_QWORD *)(a2 + 48);
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease(v5);
      v8 = *(_QWORD *)(a2 + 64);
      v9 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v8;
      swift_bridgeObjectRelease(v9);
      v10 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      return a1;
    }
    sub_8A7A4(a1 + 40);
  }
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistEditAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistEditAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistEditAction()
{
  return &type metadata for PlaylistEditAction;
}

uint64_t sub_8A958()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[40];
  _OWORD v13[5];
  uint64_t v14;
  __int128 v15[2];

  sub_8B074(v0, (uint64_t)v13);
  v1 = swift_allocObject(&unk_1342470, 104, 7);
  v2 = v13[3];
  *(_OWORD *)(v1 + 48) = v13[2];
  *(_OWORD *)(v1 + 64) = v2;
  *(_OWORD *)(v1 + 80) = v13[4];
  *(_QWORD *)(v1 + 96) = v14;
  v3 = v13[1];
  *(_OWORD *)(v1 + 16) = v13[0];
  *(_OWORD *)(v1 + 32) = v3;
  ActionCondition.init(_:_:redactLog:file:line:)((uint64_t)sub_8B0EC, v1, 0xD000000000000018, 0x80000000010C4B50, 0, (uint64_t (*)())0xD000000000000065, (uint64_t (*)())0x80000000010C4B70, (uint64_t (*)())((char *)&stru_20.cmd + 3), (uint64_t (**)())v15);
  v4 = static ActionConditionEvaluator.buildExpression(_:)(v15);
  swift_release(*((_QWORD *)&v15[0] + 1));
  v13[0] = v15[1];
  sub_8B134((uint64_t)v13);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE410);
  inited = swift_initStackObject(v5, v12);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = v4;
  v7 = inited + 32;
  v8 = static ActionConditionEvaluator.buildBlock(_:)(inited);
  swift_setDeallocating(inited);
  v9 = *(_QWORD *)(inited + 16);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE418);
  swift_arrayDestroy(v7, v9, v10);
  return v8;
}

uint64_t sub_8AAAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v1[17] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790);
  v1[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Playlist(0);
  v1[19] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[20] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v5);
  v1[22] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v1[23] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_8AB74, v8, v9);
}

void sub_8AB74()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  *(_BYTE *)(v0 + 129) = 5;
  v1 = sub_8AFF0();
  v2 = (id)(v0 + 129);
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v1) & 1) == 0)
    goto LABEL_8;
  v3 = *(_QWORD **)(v0 + 136);
  v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v5 = *(void **)(*v4 + *(_QWORD *)&stru_2E8.sectname[swift_isaMask & *(_QWORD *)*v4]);
  if (v5)
  {
    v6 = objc_msgSend(v5, "results");
    if (!v6)
    {
      __break(1u);
LABEL_12:
      swift_unknownObjectRelease(v2);
      goto LABEL_13;
    }
    v7 = v6;
    v2 = objc_msgSend(v6, "firstSection");

    if (v2)
    {
      objc_opt_self(MPModelPlaylist);
      v8 = swift_dynamicCastObjCClass(v2);
      if (v8)
      {
        v9 = *(_QWORD *)(v0 + 152);
        v10 = *(_QWORD *)(v0 + 160);
        v11 = *(_QWORD *)(v0 + 144);
        dispatch thunk of LegacyModelObjectConvertible.init(_:)(v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) != 1)
        {
          v14 = *(_QWORD *)(v0 + 176);
          v16 = *(_QWORD *)(v0 + 160);
          v15 = *(_QWORD *)(v0 + 168);
          v17 = *(_QWORD *)(v0 + 152);
          v24 = *(_QWORD **)(v0 + 136);
          v25 = *(_QWORD *)(v0 + 184);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 32))(v14, *(_QWORD *)(v0 + 144), v17);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
          v18 = objc_allocWithZone((Class)type metadata accessor for PlaylistEditingViewController(0));
          v19 = sub_84E0DC(v15, 0);
          v20 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v19);
          v21 = (void *)*__swift_project_boxed_opaque_existential_1(v24, v3[3]);
          *(_OWORD *)(v0 + 88) = 0u;
          *(_OWORD *)(v0 + 104) = 0u;
          *(_QWORD *)(v0 + 120) = 0;
          *(_BYTE *)(v0 + 128) = -1;
          PresentationSource.init(viewController:position:)(v21, v0 + 88, v0 + 16);
          PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v20, 0, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

          sub_56060(v0 + 16);
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);

          v13 = v25;
          goto LABEL_10;
        }
        sub_8B034(*(_QWORD *)(v0 + 144));
LABEL_8:
        v12 = *(_QWORD *)(v0 + 184);
        objc_msgSend((id)*__swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 136), *(_QWORD *)(*(_QWORD *)(v0 + 136) + 24)), "setEditing:animated:", 1, 1);
        v13 = v12;
LABEL_10:
        swift_release(v13);
        v22 = *(_QWORD *)(v0 + 168);
        v23 = *(_QWORD *)(v0 + 144);
        swift_task_dealloc(*(_QWORD *)(v0 + 176));
        swift_task_dealloc(v22);
        swift_task_dealloc(v23);
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      goto LABEL_12;
    }
  }
LABEL_13:
  __break(1u);
}

double sub_8AE10@<D0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  __int128 v16;
  double result;
  _BYTE v18[16];
  _OWORD v19[2];
  __int128 v20;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_8B15C(a1, a2);
  v10 = String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
  static Locale.current.getter(v10);
  v11 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v14);

  ActionDisplayConfiguration.init(title:subtitle:image:attributes:)(v11, v13, 0, 0, (uint64_t)v15, 0, v19);
  v16 = v19[1];
  *(_OWORD *)(a2 + 40) = v19[0];
  *(_OWORD *)(a2 + 56) = v16;
  result = *(double *)&v20;
  *(_OWORD *)(a2 + 72) = v20;
  return result;
}

uint64_t sub_8AF7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_55D1C(v1, a1);
}

uint64_t sub_8AF8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ActionDeclaring.init(context:)(a1, a2, (uint64_t)&off_14AE3E0, a3);
}

uint64_t sub_8AFA0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_14AE40C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_50F8C;
  return sub_8AAAC();
}

uint64_t sub_8AFE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_8B174(v1 + 40, a1);
}

unint64_t sub_8AFF0()
{
  unint64_t result;

  result = qword_14B1180;
  if (!qword_14B1180)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.Music, &type metadata for Feature.Music);
    atomic_store(result, (unint64_t *)&qword_14B1180);
  }
  return result;
}

uint64_t sub_8B034(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_8B074(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PlaylistEditAction(a2, a1);
  return a2;
}

uint64_t sub_8B0A8()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 64);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  }
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_8B0EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t sub_8B134(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_8B15C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_8B174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_8B1BC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  void *object;
  unint64_t v32;
  char v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[5];
  uint64_t v40;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
    v6 = sub_950D0((unint64_t *)&qword_14CEFE0, &qword_14ACC50, _UITab_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v7 = Set.Iterator.init(_cocoa:)(v39, v4, v5, v6);
    v2 = v39[0];
    v35 = v39[1];
    v8 = v39[2];
    v9 = v39[3];
    v10 = v39[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v35 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    v7 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = v12;
    v9 = 0;
  }
  v34 = (unint64_t)(v8 + 64) >> 6;
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v15 = __CocoaSet.Iterator.next()(v7);
  if (!v15)
    goto LABEL_39;
  v16 = v15;
  v40 = v15;
  v17 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
  swift_unknownObjectRetain(v16);
  swift_dynamicCast(&v37, &v40, (char *)&type metadata for Swift.AnyObject + 8, v17, 7);
  v18 = (id)v37;
  *(_QWORD *)&v19 = swift_unknownObjectRelease(v16).n128_u64[0];
  v20 = v9;
  v21 = v10;
  if (!v18)
    goto LABEL_39;
  while (1)
  {
    v26 = objc_msgSend(v18, "_identifier", v19);
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;
    v30._countAndFlagsBits = Library.Menu.Identifier.rawValue.getter(a2);
    object = v30._object;
    v37 = 0xD00000000000001BLL;
    v38 = 0x80000000010C4FB0;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(object);
    v32 = v38;
    if (v27 == v37 && v29 == v38)
    {

      swift_bridgeObjectRelease_n(v29, 2);
      goto LABEL_39;
    }
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v37, v38, 0);

    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v32);
    if ((v33 & 1) != 0)
      goto LABEL_39;

    v9 = v20;
    v10 = v21;
    if (v2 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v10)
      break;
    v21 = (v10 - 1) & v10;
    v22 = __clz(__rbit64(v10)) | (v9 << 6);
    v20 = v9;
LABEL_32:
    v18 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v22);
    if (!v18)
      goto LABEL_39;
  }
  v23 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return;
  }
  if (v23 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v23);
  v20 = v9 + 1;
  if (v24)
    goto LABEL_31;
  v20 = v9 + 2;
  if (v9 + 2 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v9 + 3;
  if (v9 + 3 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v9 + 4;
  if (v9 + 4 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v9 + 5;
  if (v9 + 5 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
  {
LABEL_31:
    v21 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_32;
  }
  v25 = v9 + 6;
  while (v34 != v25)
  {
    v24 = *(_QWORD *)(v35 + 8 * v25++);
    if (v24)
    {
      v20 = v25 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_55D68(v2);
}

void sub_8B57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  if (qword_14AB668 != -1)
    swift_once(&qword_14AB668, sub_66A358);
  v3 = type metadata accessor for Logger(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1580BA0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Available shared libraries changed, updating tabElements…", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_8C9BC();

  }
}

double sub_8B680(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v3 = *(_QWORD *)(*a2 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary) = *a1;
  swift_retain_n(v2, 2);
  sub_8B9FC(v3);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_8B6D8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t Strong;
  void *v12;
  _BYTE v13[24];

  v5 = a3 + 16;
  if (qword_14AB668 != -1)
    swift_once(&qword_14AB668, sub_66A358);
  v6 = type metadata accessor for Logger(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1580BA0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_0, v8, v9, a4, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  swift_beginAccess(v5, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_8C9BC();

  }
}

id sub_8B7E4()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(void);
  id v4;
  objc_super v6;

  v1 = CloudLibrary.StatusObserver.shared.unsafeMutableAddressor();
  v2 = *v1;
  v3 = *(void (**)(void))(*(_QWORD *)*v1 + 232);
  swift_retain(*v1);
  v4 = v0;
  v3();
  swift_release(v2);

  v6.receiver = v4;
  v6.super_class = (Class)_s20LibraryTabDataSourceCMa(0);
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_8B9E0()
{
  return _s20LibraryTabDataSourceCMa(0);
}

uint64_t _s20LibraryTabDataSourceCMa(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14AE590, (uint64_t)&_s20LibraryTabDataSourceCMn);
}

void sub_8B9FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int v35;
  void *v36;
  char v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unsigned __int8 *v54;
  __int16 v55;
  __int16 v56;
  __int16 v57;
  __n128 v58;
  void *v59;
  uint64_t v60;
  char v61;
  __n128 v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  uint64_t v97;
  _BYTE v98[16];

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6C8);
  __chkstk_darwin(v10);
  v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary;
  v89 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary);
  v97 = a1;
  v14 = type metadata accessor for MusicLibrary(0);
  v15 = sub_4DD24((unint64_t *)&qword_14AE6D0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(&v89, &v97, v14, v15) & 1) != 0)
    return;
  v87 = (uint64_t *)v12;
  v16 = *(_QWORD *)(v1 + v13);
  v17 = qword_14AB668;
  swift_retain(*(_QWORD *)(v2 + v13));
  if (v17 != -1)
    swift_once(&qword_14AB668, sub_66A358);
  v18 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v18, (uint64_t)qword_1580BA0);
  v19 = swift_retain_n(v16, 4);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v82 = v9;
  v83 = v6;
  v88 = v14;
  if (v22)
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v89 = v24;
    v25.n128_u64[0] = 136446466;
    *(_DWORD *)v23 = 136446466;
    v26 = MusicLibrary.name.getter(v25);
    v28 = v27;
    v97 = sub_23EAC8(v26, v27, &v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
    swift_release_n(v16, 2);
    v29 = swift_bridgeObjectRelease(v28);
    *(_WORD *)(v23 + 12) = 2082;
    v30 = MusicLibrary.id.getter(v29);
    v32 = v31;
    v97 = sub_23EAC8(v30, v31, &v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, v98);
    swift_release_n(v16, 2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v20, v21, "Selected music library changed to %{public}s (%{public}s)", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_release_n(v16, 4);
  }
  v33 = sub_8E7D4();
  Library.Menu.Request.MediaLibrarySource.init(_:)();
  v85 = v34;
  v84 = v35;
  swift_beginAccess(v33 + 2, &v97, 0, 0);
  v36 = (void *)v33[2];
  v37 = *((_BYTE *)v33 + 24);
  v38 = v33[4];
  v39 = (void *)v33[5];
  v40 = v33[6];
  v86 = v2;
  v41 = v16;
  v42 = *((_BYTE *)v33 + 56);
  v43 = *((_BYTE *)v33 + 57);
  v44 = *((_BYTE *)v33 + 58);
  swift_retain(v41);
  sub_94F08(v36, v37);
  v45 = v39;
  swift_bridgeObjectRetain();
  sub_94EAC(v36, v37);
  v89 = v85;
  v90 = v84 & 1;
  v91 = v38;
  v92 = v39;
  v93 = v40;
  v94 = v42;
  v95 = v43;
  v96 = v44;
  RequestResponse.Controller.request.setter((uint64_t)&v89);
  swift_release(v33);
  v46 = v86;
  v47 = sub_8DD8C();
  v89 = v41;
  swift_retain(v41);
  RequestResponse.Controller.request.setter((uint64_t)&v89);
  swift_release(v47);
  v48 = v46;
  v49 = sub_8F138();
  v50 = (char *)v49 + *(_QWORD *)(*v49 + 96);
  swift_beginAccess(v50, &v89, 0, 0);
  v51 = (uint64_t)v50;
  v52 = v87;
  sub_5C238(v51, (uint64_t)v87, &qword_14AE6C8);
  v53 = *v52;
  swift_retain_n(v41, 2);
  swift_release(v53);
  *v52 = v41;
  v54 = (unsigned __int8 *)v52 + *(int *)(_s9PlaylistsVMa(0) + 36);
  if (v54[1])
    v55 = 256;
  else
    v55 = 0;
  v56 = v55 | *v54;
  v57 = sub_633554();
  *v54 = v57;
  v54[1] = HIBYTE(v57) & 1;
  sub_ACFDDC(v56);
  swift_release(v41);
  RequestResponse.Controller.request.setter((uint64_t)v52);
  v58 = swift_release(v49);
  v59 = *(void **)(v48 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab);
  v60 = static MusicLibrary.shared.getter(v58);
  v61 = static MusicLibrary.== infix(_:_:)(v41, v60);
  v62 = swift_release(v60);
  if ((v61 & 1) != 0)
  {
    v63 = v82;
    v64 = String.LocalizationValue.init(stringLiteral:)(0x7972617262694CLL, 0xE700000000000000);
    v65 = v83;
    static Locale.current.getter(v64);
    String.init(localized:table:bundle:locale:comment:)(v63, 0, 0, 0, v65, "Tab name for 'Library'", 22, 2);
  }
  else
  {
    MusicLibrary.name.getter(v62);
  }
  v67 = v66;
  v68 = String._bridgeToObjectiveC()();
  objc_msgSend(v59, "setTitle:", v68, swift_bridgeObjectRelease(v67).n128_f64[0]);

  v69 = objc_msgSend(v59, "_viewController");
  if (v69)
  {
    v70 = v69;
    v71 = type metadata accessor for TabNavigationController();
    swift_dynamicCastClass(v70, v71);

  }
  v72 = objc_msgSend(v59, "_children", v82);
  v73 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
  v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);
  v75 = v74;
  if ((unint64_t)v74 >> 62)
  {
    if (v74 >= 0)
      v74 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v74))
      goto LABEL_17;
LABEL_30:

    swift_release(v41);
    swift_bridgeObjectRelease(v75);
    return;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v74 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_30;
LABEL_17:
  if ((v75 & 0xC000000000000001) != 0)
  {
    v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v75);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v75 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    v76 = *(id *)(v75 + 32);
  }
  v77 = v76;
  swift_bridgeObjectRelease(v75);
  objc_opt_self(_UITabElement);
  v78 = (void *)swift_dynamicCastObjCClass(v77);

  if (!v78 || (v79 = objc_msgSend(v59, "_viewController")) == 0)
  {

    goto LABEL_25;
  }
  v80 = v79;
  v81 = type metadata accessor for TabNavigationController();
  if (swift_dynamicCastClass(v80, v81))
  {
    sub_2415C4(v78, 1);

LABEL_25:
    swift_release(v41);
    return;
  }

  swift_release(v41);
}

uint64_t sub_8C114()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0
                                + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary));
}

void sub_8C124(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  char v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t, __n128);
  uint64_t v13;
  __n128 v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34[4];

  v3 = v2;
  v6 = sub_6698D8();
  if (v6
    && (v7 = (void *)v6,
        v8 = *(void **)(v2 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab),
        sub_4E684(0, &qword_14AE768, _UITabElementGroup_ptr),
        v9 = v8,
        v10 = static NSObject.== infix(_:_:)(v7, v9),
        v7,
        v9,
        (v10 & 1) != 0))
  {
    v11 = v3 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_onSelection;
    v12 = *(void (**)(void *, uint64_t, __n128))(v3
                                                         + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_onSelection);
    if (v12)
    {
      v13 = *(_QWORD *)(v11 + 8);
      v14 = swift_retain(v13);
      v12(a2, a1, v14);
      sub_5C198((uint64_t)v12, v13);
    }
    v15 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v16 = objc_msgSend(a2, "_identifier");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v34[3] = (uint64_t)&type metadata for String;
    v34[0] = v17;
    v34[1] = v19;
    v32 = 0xD000000000000020;
    v33 = 0x80000000010C5170;
    v20 = sub_55EA0();
    NSUserDefaults.subscript.setter((uint64_t)v34, (uint64_t)&v32, (uint64_t)&type metadata for String, v20);

  }
  else
  {
    if (qword_14AB668 != -1)
      swift_once(&qword_14AB668, sub_66A358);
    v21 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v21, (uint64_t)qword_1580BA0);
    v31 = a2;
    v22 = Logger.logObject.getter(v31);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v34[0] = v25;
      *(_DWORD *)v24 = 136446210;
      v26 = v31;
      v27 = objc_msgSend(v26, "description");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v32 = sub_23EAC8(v28, v30, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);

      swift_bridgeObjectRelease(v30);
      _os_log_impl(&dword_0, v22, v23, "Attempted to select element=%{public}s that isn't a descendant of library tab element", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
  }
}

double sub_8C4B4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  _QWORD *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  double result;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v39;
  unint64_t v40;
  uint64_t countAndFlagsBits;
  void *v42;
  Swift::String v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE710);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab)) & 1) != 0)
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      v37 = v2;
      v9 = type metadata accessor for Locale(0);
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
      swift_bridgeObjectRetain();
      v36 = a2;
      v10 = (void **)(a2 + 40);
      v11 = _swiftEmptyArrayStorage;
      do
      {
        v12 = *v10;
        v43._countAndFlagsBits = (uint64_t)*(v10 - 1);
        v43._object = v12;
        countAndFlagsBits = v43._countAndFlagsBits;
        v42 = v12;
        v39 = 0xD00000000000001BLL;
        v40 = 0x80000000010C4FB0;
        v38(v7, 1, 1, v9);
        v13 = sub_55EA0();
        swift_bridgeObjectRetain_n(v12, 2);
        v14 = StringProtocol.range<A>(of:options:range:locale:)(&v39, 0, 0, 0, 1, v7, &type metadata for String, &type metadata for String, v13, v13);
        v16 = v15;
        LOBYTE(v12) = v17;
        sub_56024((uint64_t)v7, (uint64_t *)&unk_14AE710);
        swift_bridgeObjectRelease(v40);
        swift_bridgeObjectRelease(v42);
        if ((v12 & 1) != 0)
        {
          swift_bridgeObjectRelease(v43._object);
        }
        else
        {
          String.removeSubrange(_:)(v14, v16);
          v18 = sub_B36240(v43);
          if (v18 != 13)
          {
            v19 = v18;
            if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
              v11 = sub_1209A0(0, v11[2] + 1, 1, v11);
            v21 = v11[2];
            v20 = v11[3];
            if (v21 >= v20 >> 1)
              v11 = sub_1209A0((_QWORD *)(v20 > 1), v21 + 1, 1, v11);
            v11[2] = v21 + 1;
            *((_BYTE *)v11 + v21 + 32) = v19;
          }
        }
        v10 += 2;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease(v36);
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_21;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        goto LABEL_21;
    }
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      sub_4BA58((uint64_t)_swiftEmptyArrayStorage);
      v33 = v34;
      goto LABEL_22;
    }
LABEL_21:
    v33 = &_swiftEmptySetSingleton;
LABEL_22:
    sub_8E8EC((uint64_t)v11, (uint64_t)v33);
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v33).n128_u64[0];
    return result;
  }
  if (qword_14AB670 != -1)
    swift_once(&qword_14AB670, sub_66A380);
  v22 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v22, (uint64_t)qword_1580BB8);
  v38 = a1;
  v23 = Logger.logObject.getter(v38);
  v24 = static os_log_type_t.error.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v43._countAndFlagsBits = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = v38;
    v28 = objc_msgSend(v27, "description");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    countAndFlagsBits = sub_23EAC8(v29, v31, &v43._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&countAndFlagsBits, &v42);

    swift_bridgeObjectRelease(v31);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

  }
  return result;
}

void sub_8C9BC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void **aBlock;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  void *v32;
  void (*v33)();
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((_BYTE *)v0
        + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_needsTabElementsUpdate) & 1) == 0)
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_needsTabElementsUpdate) = 1;
    v10 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v28 = static OS_dispatch_queue.main.getter(v10, v11, v12, v13, v14, v15, v16, v17, v27, v28, aBlock, v30, v31, v32, v33);
    v18 = swift_allocObject(&unk_1342870, 24, 7);
    *(_QWORD *)(v18 + 16) = v0;
    v33 = sub_9779C;
    v34 = v18;
    aBlock = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_42D124;
    v32 = &block_descriptor_76;
    v19 = _Block_copy(&aBlock);
    v20 = v34;
    v21 = v1;
    v22 = swift_release(v20);
    static DispatchQoS.unspecified.getter(v22);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v23 = sub_4DD24((unint64_t *)&qword_14B1FC0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD370);
    v25 = sub_5C150((unint64_t *)&qword_14B1FD0, (uint64_t *)&unk_14AD370, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v2, v23);
    v26 = (void *)v28;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v19);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _Block_release(v19);

  }
}

void sub_8CBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  double v22;
  id v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Class isa;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint8_t *v45;
  id v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  os_log_t v51;
  uint8_t *v52;
  uint64_t v53;
  double v54;
  __n128 v55;
  uint64_t *v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  Class v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  os_log_t v79;
  uint8_t *v80;
  uint8_t *v81;
  int v82;
  uint64_t v83;
  id v84;
  id v85;
  char *v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91[4];
  uint64_t v92;
  id v93[4];
  uint64_t v94;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790);
  __chkstk_darwin(v2);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v78 - v6;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_needsTabElementsUpdate) != 1)
    return;
  v86 = v4;
  v90 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_needsTabElementsUpdate;
  sub_4E684(0, &qword_14AE768, _UITabElementGroup_ptr);
  v12 = sub_923FC(0);
  v94 = (uint64_t)_swiftEmptyArrayStorage;
  v13 = sub_9258C(1);
  v93[3] = &type metadata for Library.Menu.Identifier;
  LOBYTE(v93[0]) = 1;
  sub_6699A4((uint64_t)v93);
  v14 = swift_allocObject(&unk_1342668, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v1);
  v15 = sub_92D68(2, (uint64_t)sub_973FC, v14);
  objc_msgSend(v15, "_setTabBarPlacement:", 4);
  v16 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFFF8));
  v17 = *(_QWORD *)((char *)&dword_18 + (v94 & 0xFFFFFFFFFFFFFF8));
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v89 = v16;
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19);
  v20 = sub_8F138();
  v21 = RequestResponse.Controller.revision.getter();
  swift_release(v20);
  RequestResponse.Revision.content.getter((uint64_t)v93);
  *(_QWORD *)&v22 = swift_release(v21).n128_u64[0];
  v23 = v93[0];
  v24 = _swiftEmptyArrayStorage;
  if (v93[0])
  {
    v25 = objc_msgSend(v93[0], "_children", v22);
    v26 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
    v24 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  }
  sub_68064((uint64_t)v24);
  v27 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFFF8));
  v28 = *(_QWORD *)((char *)&dword_18 + (v94 & 0xFFFFFFFFFFFFFF8));
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v88 = v27;
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);
  v31 = v94;
  v32 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
  swift_bridgeObjectRetain();
  v87 = v32;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "_setChildren:", isa);
  swift_bridgeObjectRelease(v31);

  objc_msgSend(v12, "_setSidebarAppearance:", 2);
  objc_msgSend(v12, "_setAllowsReordering:", 0);
  objc_msgSend(v12, "_setAllowsHiding:", 1);
  objc_msgSend(v12, "_setTabBarPlacement:", 4);
  objc_msgSend(v12, "_setDelegate:", v1);
  v34 = v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_createdPlaylist;
  swift_beginAccess(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_createdPlaylist, v93, 0, 0);
  sub_5C238(v34, (uint64_t)v7, (uint64_t *)&unk_14AE790);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease(v94);
    sub_56024((uint64_t)v7, (uint64_t *)&unk_14AE790);
  }
  else
  {
    v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v36 = v94;
    __chkstk_darwin(v35);
    *(&v78 - 2) = (uint64_t)v11;
    swift_bridgeObjectRetain();
    v37 = sub_482154(sub_97404, (uint64_t)(&v78 - 4), v36);
    swift_bridgeObjectRelease(v36);
    if (v37)
    {
      objc_opt_self(_UITabElement);
      v38 = swift_dynamicCastObjCClass(v37);
      if (v38)
      {
        v39 = (id)v38;
        if (qword_14AB668 != -1)
          swift_once(&qword_14AB668, sub_66A358);
        v40 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v40, (uint64_t)qword_1580BA0);
        v85 = v37;
        v41 = Logger.logObject.getter(v85);
        v42 = static os_log_type_t.default.getter(v41);
        v43 = v42;
        if (os_log_type_enabled(v41, v42))
        {
          v44 = swift_slowAlloc(12, -1);
          v82 = v43;
          v45 = (uint8_t *)v44;
          v83 = swift_slowAlloc(32, -1);
          v91[0] = v83;
          v84 = v39;
          *(_DWORD *)v45 = 136446210;
          v80 = v45 + 4;
          v81 = v45;
          v46 = v85;
          v47 = objc_msgSend(v84, "description");
          v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
          v79 = v41;
          v49 = v48;

          v92 = sub_23EAC8(v78, v49, v91);
          v39 = v84;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
          swift_bridgeObjectRelease(v49);
          v50 = v94;

          swift_bridgeObjectRelease(v50);
          v51 = v79;
          v52 = v81;
          _os_log_impl(&dword_0, v79, (os_log_type_t)v82, "Selecting newly created playlist tabElement=%{public}s", v81, 0xCu);
          v53 = v83;
          swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v53, -1, -1);
          swift_slowDealloc(v52, -1, -1);

        }
        else
        {
          v74 = v85;

          v75 = v94;
          *(_QWORD *)&v54 = swift_bridgeObjectRelease(v75).n128_u64[0];
        }
        objc_msgSend(v12, "_setSelectedElement:", v39, v54);
        v76 = (uint64_t)v86;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v86, 1, 1, v8);
        swift_beginAccess(v34, v91, 33, 0);
        sub_97420(v76, v34);
        swift_endAccess(v91);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        goto LABEL_18;
      }

    }
    v55 = swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v55);
  }
LABEL_18:
  v91[0] = (uint64_t)_swiftEmptyArrayStorage;
  v56 = sub_8DD8C();
  v57 = RequestResponse.Controller.revision.getter();
  swift_release(v56);
  RequestResponse.Revision.content.getter((uint64_t)&v92);
  swift_release(v57);
  if (v92)
    v58 = (_QWORD *)v92;
  else
    v58 = _swiftEmptyArrayStorage;
  sub_68070((uint64_t)v58);
  v59 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
  v61 = *(_QWORD *)((char *)&dword_10 + (v91[0] & 0xFFFFFFFFFFFFFF8));
  v60 = *(_QWORD *)((char *)&dword_18 + (v91[0] & 0xFFFFFFFFFFFFFF8));
  if (v61 >= v60 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
  v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
  specialized Array._endMutation()(v62);
  v63 = *(void **)(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab);
  v64 = v91[0];
  v65 = v87;
  if ((unint64_t)v91[0] >> 62)
  {
    if (v91[0] < 0)
      v77 = v91[0];
    else
      v77 = v91[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v67 = _bridgeCocoaArray<A>(_:)(v77, v65);
    swift_bridgeObjectRelease(v64);
  }
  else
  {
    v66 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v66);
    v67 = v64;
  }
  v68 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v64);
  objc_msgSend(v63, "_setChildren:", v68, swift_bridgeObjectRelease(v67).n128_f64[0]);

  if (qword_14AB668 != -1)
    swift_once(&qword_14AB668, sub_66A358);
  v69 = type metadata accessor for Logger(0);
  v70 = __swift_project_value_buffer(v69, (uint64_t)qword_1580BA0);
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter(v71);
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v73 = 0;
    _os_log_impl(&dword_0, v71, v72, "Did update library tab elements", v73, 2u);
    swift_slowDealloc(v73, -1, -1);
  }

  *(_BYTE *)(v1 + v90) = 0;
}

void sub_8D4CC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  char *v29;
  void (**v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(void (*)(void **), uint64_t, __n128);
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];
  uint64_t v57;
  _BYTE v58[24];

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  v5 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  v54 = v5;
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v55 = (uint64_t)&v53 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B70C0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a2 + 16;
  swift_beginAccess(a2 + 16, v58, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong
    && (v21 = (void *)Strong, v22 = (void *)sub_8DA08(), v21, v22)
    && (v23 = sub_AF954(), v22, v23))
  {
    v24 = type metadata accessor for Playlist.Folder(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
    v26 = swift_allocObject(&unk_1342668, 24, 7);
    v27 = v23;
    swift_beginAccess(v19, v56, 0, 0);
    v28 = (void *)swift_unknownObjectWeakLoadStrong(v19);
    swift_unknownObjectWeakInit(v26 + 16, v28);

    sub_5C090((uint64_t)v15, (uint64_t)v18, (uint64_t *)&unk_14AE650);
    v29 = &v18[v16[5]];
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    sub_5C090((uint64_t)v12, (uint64_t)&v18[v16[6]], (uint64_t *)&unk_14B70C0);
    v30 = (void (**)(uint64_t))&v18[v16[7]];
    *v30 = sub_97468;
    v30[1] = (void (*)(uint64_t))v26;
    v31 = v55;
    sub_5BDB8((uint64_t)v18, v55, type metadata accessor for PlaylistCreation.Context);
    swift_storeEnumTagMultiPayload(v31, v53, 3);
    sub_5BDB8(v31, (uint64_t)v7, type metadata accessor for AppInterfaceContext.Activity);
    v32 = *(unsigned __int8 *)(v54 + 80);
    v33 = (v32 + 24) & ~v32;
    v34 = (v6 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = swift_allocObject(&unk_1342820, v34 + 16, v32 | 7);
    *(_QWORD *)(v35 + 16) = v27;
    sub_5C04C((uint64_t)v7, v35 + v33, type metadata accessor for AppInterfaceContext.Activity);
    v36 = (_QWORD *)(v35 + v34);
    *v36 = 0;
    v36[1] = 0;
    swift_retain(v27);
    v37 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v38 = swift_allocObject(&unk_1342848, 32, 7);
    *(_QWORD *)(v38 + 16) = sub_55C6C;
    *(_QWORD *)(v38 + 24) = v35;
    v39 = *(void (**)(void (*)(void **), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v37)
                                                                                               + 16];
    v40 = v37;
    v41 = swift_retain(v35);
    v39(sub_55CD8, v38, v41);
    swift_release(v35);

    swift_release(v38);
    sub_5C0DC(v31, type metadata accessor for AppInterfaceContext.Activity);
    sub_5C0DC((uint64_t)v18, type metadata accessor for PlaylistCreation.Context);
    swift_release(v27);
  }
  else
  {
    if (qword_14AB668 != -1)
      swift_once(&qword_14AB668, sub_66A358);
    v42 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v42, (uint64_t)qword_1580BA0);
    v43 = a1;
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = swift_slowAlloc(32, -1);
      v56[0] = v47;
      *(_DWORD *)v46 = 136446210;
      v48 = v43;
      v49 = objc_msgSend(v48, "description", v53);
      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v52 = v51;

      v57 = sub_23EAC8(v50, v52, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58);

      swift_bridgeObjectRelease(v52);
      _os_log_impl(&dword_0, v44, v45, "Unable to perform addToPlaylist: No interface context for tab=%{public}s", v46, 0xCu);
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_8DA08()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  if (qword_14AABD8 != -1)
    swift_once(&qword_14AABD8, sub_241144);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_14BB130);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_5C090((uint64_t)v6, (uint64_t)v7, (uint64_t *)&unk_14AD640);
  if (v8)
  {
    v3 = type metadata accessor for TabBarController();
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD640);
    return 0;
  }
}

void sub_8DAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t Strong;
  char *v15;
  void *v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Playlist(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v15 = (char *)Strong;
    sub_5BDB8(a1, (uint64_t)v9, type metadata accessor for PlaylistCreation.FlowResult);
    if (swift_getEnumCaseMultiPayload(v9, v7))
    {
      sub_5C0DC((uint64_t)v9, type metadata accessor for PlaylistCreation.FlowResult);
    }
    else
    {
      v16 = *(void **)&v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7B0) + 48)];
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);

      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v6, v13, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      v17 = (uint64_t)&v15[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_createdPlaylist];
      swift_beginAccess(&v15[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_createdPlaylist], v18, 33, 0);
      sub_97420((uint64_t)v6, v17);
      swift_endAccess(v18);
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    }

  }
}

uint64_t sub_8DCDC(id *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v1 = objc_msgSend(*a1, "_identifier");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;
  v5 = Playlist.id.getter();
  if (v2 == v5 && v4 == v6)
  {
    v9 = 1;
    v8 = v4;
  }
  else
  {
    v8 = v6;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v8);

  return v9 & 1;
}

uint64_t *sub_8DD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController);
  if (v2)
  {
    v3 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController);
  }
  else
  {
    v4 = v0;
    type metadata accessor for MusicLibrary(0);
    v12 = static MusicLibrary.shared.getter(v5);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE788);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v3 = RequestResponse.Controller.init(request:)((uint64_t)&v12, v7, v8, v9);
    v10 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v10);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t sub_8DE28@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  __int128 v7;
  double v8;
  void *v10;
  void *v11;
  __int128 v12;
  _OWORD v13[2];
  _BYTE v14[48];

  v11 = sub_4B3FC((uint64_t)&off_133AE90);
  static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_94E60, (uint64_t)&v12);
  swift_bridgeObjectRelease(v11);
  v10 = sub_4B3FC((uint64_t)&off_133AEB8);
  static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_97F58, (uint64_t)v14);
  swift_bridgeObjectRelease(v10);
  v6 = swift_allocObject(&unk_1342618, 80, 7);
  v7 = v13[0];
  *(_OWORD *)(v6 + 16) = v12;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 43) = *(_OWORD *)((char *)v13 + 11);
  *(_QWORD *)(v6 + 64) = a1;
  *(_QWORD *)(v6 + 72) = a2;
  sub_94EC4((uint64_t)&v12);
  *(_QWORD *)&v8 = swift_retain(a2).n128_u64[0];
  Library.Menu.Request.perform(_:_:)(sub_94EB8, v6, a3, v8);
  swift_release(v6);
  sub_94F14((uint64_t)v14);
  return sub_94F14((uint64_t)&v12);
}

_QWORD *sub_8DF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v19;
  uint64_t v20;
  id v21;
  char *v22;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  _QWORD *v29;
  double v30;
  uint64_t v31[5];
  _QWORD v32[7];
  _QWORD v33[6];
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];

  sub_5C090(a1, (uint64_t)v32, (uint64_t *)&unk_14AE640);
  v11 = v32[0];
  sub_5C090(a1, (uint64_t)v33, (uint64_t *)&unk_14AE640);
  v12 = v33[0];
  if ((v34 & 1) != 0)
  {
    swift_errorRetain(v11);
    if (qword_14AB668 != -1)
      swift_once(&qword_14AB668, sub_66A358);
    v13 = type metadata accessor for Logger(0);
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1580BA0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Failed to compute facets in the library.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    swift_errorRetain(v11);
    a5(v12, 1, a2, a3);
    sub_94F58(a1);
    return (_QWORD *)sub_94F58(a1);
  }
  else
  {
    v19 = (void *)v33[1];
    v35 = v33[0];
    v36 = v33[5];
    v38 = v33[3];
    v39[0] = v33[2];
    v37 = v33[4];
    v20 = *(_QWORD *)(v33[0] + 16);
    if (v20)
    {
      v31[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_94FF8(&v35);
      v21 = v19;
      sub_94FF8(v39);
      sub_94FF8(&v38);
      sub_94FF8(&v37);
      sub_94FF8(&v36);
      specialized ContiguousArray.reserveCapacity(_:)(v20);
      v22 = (char *)(v12 + 32);
      do
      {
        v23 = *v22++;
        v24 = sub_9271C(v23);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v24, "_setAllowsHiding:", 1));
        v25 = *(_QWORD *)(v31[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized ContiguousArray._endMutation()(v26);
        --v20;
      }
      while (v20);
      v27 = (_QWORD *)v31[0];
    }
    else
    {
      sub_94FF8(&v35);
      v28 = v19;
      sub_94FF8(v39);
      sub_94FF8(&v38);
      sub_94FF8(&v37);
      sub_94FF8(&v36);
      v27 = _swiftEmptyArrayStorage;
    }
    v29 = (_QWORD *)swift_allocObject(&unk_1342640, 40, 7);
    v29[2] = v27;
    v29[3] = a5;
    v29[4] = a6;
    *(_QWORD *)&v30 = swift_retain(a6).n128_u64[0];
    Library.Menu.Request.perform(_:_:)(sub_9504C, (uint64_t)v29, v31, v30);
    sub_56024((uint64_t)v31, (uint64_t *)&unk_14C7FE0);
    swift_release(v29);
    sub_95058(&v35);

    sub_95058(v39);
    sub_95058(&v38);
    sub_95058(&v37);
    return sub_95058(&v36);
  }
}

uint64_t sub_8E23C(uint64_t a1, char *a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  id i;
  id v31;
  id v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  NSObject *v36;
  unint64_t v37;
  NSObject *log;
  os_log_t loga;
  char *v40;
  uint64_t (*v41)(uint64_t, _QWORD, char *, unint64_t);
  uint64_t (*v42)(_QWORD, _QWORD, _QWORD, _QWORD);
  _OWORD v43[2];
  uint64_t v44[4];
  void *v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];

  v9 = (void *)a1;
  sub_5C090(a1, (uint64_t)&v45, (uint64_t *)&unk_14AE640);
  v10 = v45;
  sub_5C090((uint64_t)v9, (uint64_t)&v46, (uint64_t *)&unk_14AE640);
  v11 = v46;
  v12 = a4;
  if ((v52 & 1) == 0)
  {
    v26 = v47;
    v55 = v49;
    v56[0] = v48;
    v53 = v51;
    v54 = v50;
    v42 = a5;
    v37 = a3;
    loga = v47;
    v40 = a2;
    if ((unint64_t)a4 >> 62)
    {
      if (a4 < 0)
        v35 = a4;
      else
        v35 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v36 = v26;
      sub_94FF8(v56);
      sub_94FF8(&v55);
      sub_94FF8(&v54);
      sub_94FF8(&v53);
      swift_bridgeObjectRetain();
      v27 = _CocoaArrayWrapper.endIndex.getter(v35);
      if (v27)
      {
LABEL_7:
        a3 = a4 & 0xC000000000000001;
        v29 = 4;
        v9 = &unk_14AD640;
        a2 = (char *)&type metadata for Any + 8;
        a5 = 0;
        if ((a4 & 0xC000000000000001) == 0)
          goto LABEL_9;
LABEL_8:
        for (i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a5, a4); ; i = *(id *)(a4 + 8 * v29))
        {
          v10 = i;
          a4 = (uint64_t)a5 + 1;
          if (__OFADD__(a5, 1))
            break;
          if (qword_14AB660 != -1)
            swift_once(&qword_14AB660, sub_66A090);
          v31 = objc_getAssociatedObject(v10, (const void *)qword_14D8738);
          if (v31)
          {
            v32 = v31;
            _bridgeAnyObjectToAny(_:)(v43, v31);
            swift_unknownObjectRelease(v32);
          }
          else
          {
            memset(v43, 0, sizeof(v43));
          }
          sub_5C090((uint64_t)v43, (uint64_t)v44, (uint64_t *)&unk_14AD640);
          if (v44[3])
          {
            if ((swift_dynamicCast(v43, v44, (char *)&type metadata for Any + 8, &type metadata for Library.Menu.Identifier, 6) & 1) != 0)
            {
              v33 = LOBYTE(v43[0]);
              swift_bridgeObjectRetain();
              LOBYTE(v33) = sub_68B784(v33, v11);
              objc_msgSend(v10, "_setVisible:", v33 & 1, swift_bridgeObjectRelease(v11).n128_f64[0]);
            }
          }
          else
          {
            sub_56024((uint64_t)v44, (uint64_t *)&unk_14AD640);
          }

          v34 = a4 == v27;
          a4 = v12;
          if (v34)
            goto LABEL_30;
          a5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(++v29 - 4);
          if (a3)
            goto LABEL_8;
LABEL_9:
          ;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      v27 = *(_QWORD *)((char *)&dword_10 + (a4 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      v28 = v26;
      sub_94FF8(v56);
      sub_94FF8(&v55);
      sub_94FF8(&v54);
      sub_94FF8(&v53);
      swift_bridgeObjectRetain();
      if (v27)
        goto LABEL_7;
    }
LABEL_30:
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(a4);

    sub_95058(v56);
    sub_95058(&v55);
    sub_95058(&v54);
    sub_95058(&v53);
    a5 = v42;
    a3 = v37;
    a2 = v40;
    return a5(a4, 0, a2, a3);
  }
  swift_errorRetain(v10);
  if (qword_14AB668 != -1)
LABEL_25:
    swift_once(&qword_14AB668, sub_66A358);
  v13 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v13, (uint64_t)qword_1580BA0);
  swift_errorRetain(v10);
  v14 = swift_errorRetain(v10);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  v17 = v15;
  v18 = v16;
  if (os_log_type_enabled(v17, v16))
  {
    v41 = (uint64_t (*)(uint64_t, _QWORD, char *, unint64_t))a5;
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v44[0] = v20;
    *(_DWORD *)v19 = 136446210;
    *(_QWORD *)&v43[0] = v11;
    swift_errorRetain(v10);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v22 = String.init<A>(describing:)(v43, v21);
    v24 = v23;
    *(_QWORD *)&v43[0] = sub_23EAC8(v22, v23, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v43, (char *)v43 + 8);
    swift_bridgeObjectRelease(v24);
    sub_94F58((uint64_t)v9);
    sub_94F58((uint64_t)v9);
    _os_log_impl(&dword_0, log, v18, "Failed to compute available facets in the library. Defaulting all tabs to be visible. Error=%{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
    sub_94F58((uint64_t)v9);

    return v41(v12, 0, a2, a3);
  }
  sub_94F58((uint64_t)v9);
  sub_94F58((uint64_t)v9);
  swift_errorRelease(v10);

  return a5(a4, 0, a2, a3);
}

unint64_t sub_8E700()
{
  return 0xD00000000000001ALL;
}

double sub_8E71C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double result;

  v6 = swift_allocObject(&unk_13425F0, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain(a2);
  sub_8DE28((uint64_t)sub_94E20, v6, a3);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_8E794(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.== infix(_:_:)(v2, v3) & 1;
}

uint64_t *sub_8E7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  _OWORD v14[2];
  __int128 v15;
  _OWORD v16[2];

  v1 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController);
  if (v2)
  {
    v3 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController);
  }
  else
  {
    v4 = v0;
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary);
    swift_retain(v5);
    v6 = sub_4B3FC((uint64_t)&off_133AD28);
    __chkstk_darwin(v6);
    static Library.Menu.Request.with(_:)((uint64_t (*)(id *))sub_97F58, (uint64_t)&v15);
    swift_release(v5);
    swift_bridgeObjectRelease(v6);
    v13 = v15;
    v14[0] = v16[0];
    *(_OWORD *)((char *)v14 + 11) = *(_OWORD *)((char *)v16 + 11);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE780);
    swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    v3 = RequestResponse.Controller.init(request:)((uint64_t)&v13, v8, v9, v10);
    v11 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v11);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

double sub_8E8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_14AB670 != -1)
    swift_once(&qword_14AB670, sub_66A380);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)qword_1580BB8);
  swift_bridgeObjectRetain_n(a1, 2);
  v5 = swift_bridgeObjectRetain_n(a2, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v22 = swift_slowAlloc(64, -1);
    v23 = a1;
    v24 = v22;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE770);
    v10 = String.init<A>(describing:)(&v23, v9);
    v12 = v11;
    v23 = sub_23EAC8(v10, v11, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v8 + 12) = 2082;
    v13 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
    v14 = sub_950D0((unint64_t *)&qword_14CEFE0, &qword_14ACC50, _UITab_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v15 = swift_bridgeObjectRetain();
    v16 = Set.description.getter(v15, v13, v14);
    v18 = v17;
    swift_bridgeObjectRelease(a2);
    v23 = sub_23EAC8(v16, v18, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v18);
    _os_log_impl(&dword_0, v6, v7, "Updating editable library menu with ordered identifiers=%{public}s, updated visibility for tabs=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  v19 = sub_8E7D4();
  v20 = swift_allocObject(&unk_13427D0, 32, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  RequestResponse.Controller.setNeedsReload(_:)((uint64_t)sub_973B0, v20);
  swift_release(v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

double sub_8EBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  double result;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;
  _BYTE v33[48];
  _BYTE v34[48];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];

  RequestResponse.Revision.content.getter((uint64_t)v34);
  if (*(_QWORD *)v34)
  {
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_OWORD *)&v33[8] = *(_OWORD *)&v34[8];
    *(_OWORD *)&v33[24] = *(_OWORD *)&v34[24];
    *(_QWORD *)&v33[40] = *(_QWORD *)&v34[40];
    v6 = a3;
    if (!a3)
      v6 = swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_94588(v6, (uint64_t *)v33, a4);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(a4);
    *(_OWORD *)v34 = *(_OWORD *)v33;
    *(_OWORD *)&v34[16] = *(_OWORD *)&v33[16];
    *(_OWORD *)&v34[32] = *(_OWORD *)&v33[32];
    v13 = *(void **)&v33[8];
    v35 = *(_QWORD *)v33;
    v38 = *(_QWORD *)&v33[24];
    v39[0] = *(_QWORD *)&v33[16];
    v36 = *(_QWORD *)&v33[40];
    v37 = *(_QWORD *)&v33[32];
    sub_94FF8(&v35);
    v14 = v13;
    sub_94FF8(v39);
    sub_94FF8(&v38);
    sub_94FF8(&v37);
    sub_94FF8(&v36);
    Library.Menu.persist()();
    sub_95058(&v35);

    sub_95058(v39);
    sub_95058(&v38);
    sub_95058(&v37);
    sub_95058(&v36);
    if (qword_14AB670 != -1)
      swift_once(&qword_14AB670, sub_66A380);
    v15 = type metadata accessor for Logger(0);
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1580BB8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v32 = v20;
      *(_DWORD *)v19 = 136446210;
      swift_beginAccess(v33, v31, 0, 0);
      v21 = *(void **)&v33[8];
      v27 = *(_OWORD *)v33;
      v28 = *(_QWORD *)&v33[16];
      v29 = *(_OWORD *)&v33[24];
      v30 = *(_QWORD *)&v33[40];
      swift_bridgeObjectRetain();
      v22 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = String.init<A>(describing:)(&v27, &type metadata for Library.Menu);
      v25 = v24;
      *(_QWORD *)&v27 = sub_23EAC8(v23, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, (char *)&v27 + 8);
      swift_bridgeObjectRelease(v25);
      _os_log_impl(&dword_0, v17, v18, "Successfully saved library menu edits %{public}s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    swift_bridgeObjectRelease(*(_QWORD *)v33);
    swift_bridgeObjectRelease(*(_QWORD *)&v33[16]);
    v26 = *(_OWORD *)&v33[24];
    swift_bridgeObjectRelease(*(_QWORD *)&v33[40]);
    swift_bridgeObjectRelease(*((_QWORD *)&v26 + 1));
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  else
  {
    if (qword_14AB670 != -1)
      swift_once(&qword_14AB670, sub_66A380);
    v7 = type metadata accessor for Logger(0);
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1580BB8);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "Failed to load editable Library Menu", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

  }
  return result;
}

uint64_t *sub_8F138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6C8);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController;
  v15 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController);
  if (v15)
  {
    v16 = *(uint64_t **)(v1
                      + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController);
  }
  else
  {
    v17 = type metadata accessor for Playlist.Folder(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
    if (qword_14AABD0 != -1)
      swift_once(&qword_14AABD0, sub_23D830);
    v18 = qword_157FBB8;
    sub_5C238((uint64_t)v4, (uint64_t)v7 + *(int *)(v5 + 20), (uint64_t *)&unk_14AE650);
    *v7 = v18;
    swift_bridgeObjectRetain();
    sub_56024((uint64_t)v4, (uint64_t *)&unk_14AE650);
    sub_ACDBC4(v7, 0, (uint64_t)v10);
    v19 = swift_allocObject(&unk_1342668, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v1);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE750);
    v21 = (_QWORD *)swift_allocObject(v20, 64, 7);
    v21[2] = sub_97354;
    v21[3] = v19;
    v21[4] = sub_8F5F8;
    v21[5] = 0;
    v21[6] = sub_8F7C4;
    v21[7] = 0;
    sub_5C04C((uint64_t)v10, (uint64_t)v13, _s9PlaylistsVMa);
    *(_QWORD *)&v13[*(int *)(v11 + 28)] = v21;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE758);
    v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
    v16 = RequestResponse.Controller.init(request:)((uint64_t)v13, v23, v24, v25);
    v26 = *(_QWORD *)(v1 + v14);
    *(_QWORD *)(v1 + v14) = v16;
    swift_retain(v16);
    swift_release(v26);
    v15 = 0;
  }
  swift_retain(v15);
  return v16;
}

void sub_8F3D0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *Strong;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  ValueMetadata *v27;
  _UNKNOWN **v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v8, &qword_14AE1D0);
  v9 = type metadata accessor for Playlist.Folder.Item(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_56024((uint64_t)v8, &qword_14AE1D0);
    v11 = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
    v12 = &off_13429D0;
    v27 = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
    v28 = &off_13429D0;
    LOBYTE(v26[0]) = 0;
  }
  else
  {
    v24 = v9;
    v25 = &off_1376DE0;
    v13 = __swift_allocate_boxed_opaque_existential_1Tm(&v23);
    (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_8B15C(&v23, (uint64_t)v26);
    v11 = v27;
    v12 = v28;
  }
  v14 = a2 + 16;
  v15 = sub_4E684(0, &qword_14AE768, _UITabElementGroup_ptr);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, (uint64_t)v11);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v20 + 16))(v19, v17);
  v21 = sub_66A3A4((uint64_t)v19, v15, (uint64_t)v11, (uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1(v26);
  objc_msgSend(v21, "_setAllowsReordering:", 0);
  objc_msgSend(v21, "_setAllowsHiding:", 1);
  objc_msgSend(v21, "_setTabBarPlacement:", 4);
  swift_beginAccess(v14, v26, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v14);
  objc_msgSend(v21, "_setDelegate:", Strong);

  *a3 = v21;
}

void sub_8F5F8(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  int v14;
  int v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  uint64_t v26;

  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v25 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v13((char *)&v25 - v11, a1, v5, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v12, v5);
  v15 = enum case for Playlist.Folder.Item.folder(_:);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  if (v14 != v15)
  {
    v16 = *a3;
    ((void (*)(char *, uint64_t, uint64_t))v13)(v8, a1, v5);
    v17 = sub_928B4((uint64_t)v8);
    v18 = objc_msgSend(v16, "_children");
    v19 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
    v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
    v21 = *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8));
    v20 = *(_QWORD *)((char *)&dword_18 + (v26 & 0xFFFFFFFFFFFFFF8));
    if (v21 >= v20 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
    v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v17);
    specialized Array._endMutation()(v22);
    v23 = v26;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "_setChildren:", isa);

    swift_bridgeObjectRelease(v23);
  }
}

void sub_8F7C4(uint64_t a1, id *a2, uint64_t a3, void **a4)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;

  v4 = *a4;
  v5 = *a2;
  v6 = objc_msgSend(v4, "_children");
  v7 = sub_4E684(0, &qword_14ACC50, _UITab_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v9 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8));
  v8 = *(_QWORD *)((char *)&dword_18 + (v12 & 0xFFFFFFFFFFFFFF8));
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v5);
  specialized Array._endMutation()(v10);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "_setChildren:", isa);

  swift_bridgeObjectRelease(v12);
}

uint64_t sub_8F8D4(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v10[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 == 1)
    {
      v6 = 0x79616C50206C6C41;
      v7 = 0xED0000737473696CLL;
    }
    else
    {
      v6 = 0x79616C502077654ELL;
      v7 = 0xEC0000007473696CLL;
    }
  }
  else
  {
    v6 = 0x7473696C79616C50;
    v7 = 0xE900000000000073;
  }
  v8 = String.LocalizationValue.init(stringLiteral:)(v6, v7);
  static Locale.current.getter(v8);
  return String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, 0, v3, 0, 0, 256);
}

id sub_8FA14()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t sub_8FAD4(char *a1, unsigned __int8 *a2)
{
  return sub_A30C2C(*a1, *a2);
}

Swift::Int sub_8FAE0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = 0xED00006C6C412E73;
  if (v1 != 1)
    v2 = 0xED000077654E2E73;
  if (v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  String.hash(into:)(v5, 0x7473696C79616C50, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_8FB7C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xED00006C6C412E73;
  if (*v1 != 1)
    v2 = 0xED000077654E2E73;
  if (*v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  String.hash(into:)(a1, 0x7473696C79616C50, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_8FBF4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = 0xED00006C6C412E73;
  if (v1 != 1)
    v2 = 0xED000077654E2E73;
  if (v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  String.hash(into:)(v5, 0x7473696C79616C50, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

unint64_t sub_8FC8C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_94A88(*a1);
  *a2 = result;
  return result;
}

void sub_8FCB8(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xED00006C6C412E73;
  if (*v1 != 1)
    v2 = 0xED000077654E2E73;
  if (*v1)
    v3 = v2;
  else
    v3 = 0xEF70756F72472E73;
  *a1 = 0x7473696C79616C50;
  a1[1] = v3;
}

uint64_t sub_8FD14()
{
  char *v0;

  return sub_8F8D4(*v0);
}

id sub_8FD1C()
{
  return sub_8FA14();
}

uint64_t sub_8FDD0(unsigned int *a1, unsigned int *a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32);
  v3 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
  if (*((_BYTE *)a1 + 5) != 1)
  {
    if ((*((_BYTE *)a2 + 5) & 1) != 0)
      return 0;
    if ((v2 & 0x100000000) != 0)
    {
      if ((v3 & 0x100000000) == 0)
        return 0;
    }
    else if ((v3 & 0x100000000) != 0 || *(float *)a1 != *(float *)a2)
    {
      return 0;
    }
    return 1;
  }
  if ((v2 & 0xFFFFFFFFFFLL) != 0)
  {
    if ((v3 & 0xFFFFFFFFFFLL) != 0)
      return *((unsigned __int8 *)a2 + 5);
    else
      return 0;
  }
  else if ((v3 & 0xFFFFFFFFFFLL) != 0)
  {
    return 0;
  }
  else
  {
    return *((unsigned __int8 *)a2 + 5);
  }
}

void sub_8FE4C(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  double v16;
  uint64_t v17;
  int v18;
  id v19;
  id v20;
  char *v21;
  double v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[16];

  v2 = v1;
  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v28[-v9];
  if ((v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state
         + 6] & 1) != 0)
  {
    if ((a1 & 0x1000000000000) != 0)
      return;
    goto LABEL_20;
  }
  v11 = *(unsigned int *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state + 4] << 32);
  if ((a1 & 0x1000000000000) != 0)
  {
    if ((v11 & 0x10000000000) == 0)
      goto LABEL_12;
    if ((v11 & 0xFFFFFFFFFFLL) != 0)
      goto LABEL_20;
    goto LABEL_28;
  }
  v12 = a1 & 0xFFFFFFFFFFLL;
  if ((v11 & 0x10000000000) != 0)
  {
    if ((v11 & 0xFFFFFFFFFFLL) != 0)
    {
      if ((a1 & 0x10000000000) != 0 && v12)
        return;
LABEL_20:
      sub_94BF8(0);
      sub_94CDC(0);
LABEL_24:
      objc_msgSend(v2, "invalidateIntrinsicContentSize");
      return;
    }
    if ((a1 & 0x10000000000) != 0 && !v12)
      return;
LABEL_28:
    sub_94BF8(0);
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton])
    {
      static UIButton.Configuration.plain()(v22);
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

      UIButton.Configuration.image.setter(v24);
      sub_4E684(0, (unint64_t *)&qword_14AE630, UIButton_ptr);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
      sub_4E684(0, (unint64_t *)&qword_14B7130, UIAction_ptr);
      v25 = swift_allocObject(&unk_13425C8, 24, 7);
      swift_unknownObjectWeakInit(v25 + 16, v2);
      v26 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_94DF4, v25);
      v27 = (void *)UIButton.init(configuration:primaryAction:)(v7, v26);
      sub_94CDC(v27);

      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    }
    goto LABEL_24;
  }
  if ((a1 & 0x10000000000) != 0)
    goto LABEL_12;
  if ((v11 & 0x100000000) != 0)
  {
    if ((a1 & 0x100000000) != 0)
      return;
LABEL_12:
    sub_94CDC(0);
    v13 = *(void **)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner];
    if (v13)
    {
      v14 = *(char **)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner];
      if ((v11 & 0x100000000) == 0)
      {
LABEL_14:
        v15 = v13;
        *(double *)&v17 = *(float *)&v11;
        v18 = 0;
LABEL_23:
        CircularProgressView.setState(_:animated:)(v17, v18, 0, v16);
        v21 = v14;
        sub_94BF8(v14);

        goto LABEL_24;
      }
    }
    else
    {
      v19 = objc_allocWithZone((Class)type metadata accessor for CircularProgressView());
      v14 = CircularProgressView.init(size:)(24.0, 24.0);
      if ((v11 & 0x100000000) == 0)
        goto LABEL_14;
    }
    v20 = v13;
    v17 = 1;
    v18 = 256;
    goto LABEL_23;
  }
  if ((a1 & 0x100000000) != 0
    || *(float *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state] != *(float *)&a1)
  {
    goto LABEL_12;
  }
}

uint64_t sub_90180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  void (*v6)(void *);
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = (void *)result;
    v6 = *(void (**)(void *))(result
                                       + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementHandler);
    v5 = *(_QWORD *)(result
                   + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementHandler
                   + 8);
    swift_retain(v5);
    v6(v4);

    return swift_release(v5);
  }
  return result;
}

void sub_901FC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v2, "setFrame:");

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v4, "setFrame:");

  }
}

double sub_90324()
{
  uint64_t v0;
  unint64_t v1;
  double result;
  double v3;
  void *v4;

  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state
                 + 6) & 1) != 0)
    goto LABEL_6;
  v1 = *(unsigned int *)(v0
                       + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state) | ((unint64_t)*(unsigned __int16 *)(v0 + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state + 4) << 32);
  if ((v1 & 0x10000000000) != 0)
  {
    if ((v1 & 0xFFFFFFFFFFLL) == 0)
    {
      v4 = *(void **)(v0
                    + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton);
      if (v4)
      {
        objc_msgSend(v4, "intrinsicContentSize");
        goto LABEL_9;
      }
    }
LABEL_6:
    v3 = *(double *)(v0
                   + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_defaultIntrinsicContentSize);
    result = v3;
    goto LABEL_10;
  }
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner))
    goto LABEL_6;
  CircularProgressView.intrinsicContentSize.getter();
LABEL_9:
  v3 = *(double *)(v0
                 + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_defaultIntrinsicContentSize);
LABEL_10:
  if (result <= v3)
    return v3;
  return result;
}

double sub_903DC()
{
  uint64_t v0;
  unint64_t v1;
  double result;
  double v3;
  void *v4;

  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state
                 + 6) & 1) != 0)
    goto LABEL_6;
  v1 = *(unsigned int *)(v0
                       + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state) | ((unint64_t)*(unsigned __int16 *)(v0 + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state + 4) << 32);
  if ((v1 & 0x10000000000) != 0)
  {
    if ((v1 & 0xFFFFFFFFFFLL) == 0)
    {
      v4 = *(void **)(v0
                    + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton);
      if (v4)
      {
        objc_msgSend(v4, "sizeThatFits:");
        goto LABEL_9;
      }
    }
LABEL_6:
    v3 = *(double *)(v0
                   + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_defaultIntrinsicContentSize);
    result = v3;
    goto LABEL_10;
  }
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner))
    goto LABEL_6;
  result = CircularProgressView.sizeThatFits(_:)();
LABEL_9:
  v3 = *(double *)(v0
                 + OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_defaultIntrinsicContentSize);
LABEL_10:
  if (result <= v3)
    return v3;
  return result;
}

id sub_90510()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_90590()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView);
  }
  else
  {
    v4 = v0;
    v5 = swift_allocObject(&unk_1342668, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v6 = objc_allocWithZone((Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa());
    v7 = sub_94AD0((uint64_t)sub_9734C, v5);
    swift_release(v5);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_9063C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[72];
  _BYTE v16[24];
  _QWORD v17[5];
  char v18;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab), "tabBarController");
    if (v6)
    {
      v7 = v6;
      v8 = a1;
      v9 = v7;
      objc_msgSend(v8, "bounds");
      v17[0] = a1;
      v17[1] = v10;
      v17[2] = v11;
      v17[3] = v12;
      v17[4] = v13;
      v18 = 0;
      v14 = v8;
      PresentationSource.init(viewController:position:)(v9, (uint64_t)v17, (uint64_t)v15);
      static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:completion:)(0, v15, a1, 0, 0);

      sub_56060((uint64_t)v15);
    }
    else
    {

    }
  }
}

void sub_90734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  _BYTE *v7;
  char *v8;
  unint64_t v9;
  unsigned __int8 v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unsigned __int8 v15;
  unint64_t v16;
  char *v17;
  _BOOL4 v18;
  uint64_t v19;
  unsigned int v20;

  v2 = v1;
  v4 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_cloudLibraryStatus;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_cloudLibraryStatus);
  if ((static CloudLibrary.Status.__derived_enum_equals(_:_:)(a1, v5) & 1) != 0)
    return;
  v6 = v5 >> 30;
  if (!(v5 >> 30))
    goto LABEL_7;
  if (v6 == 1)
    goto LABEL_8;
  if (v6 != 2)
  {
LABEL_11:
    v7 = sub_90590();
    v17 = &v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state];
    v9 = *(unsigned int *)&v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state + 4] << 32);
    v10 = v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state
           + 6];
    *(_DWORD *)v17 = 1;
    *((_WORD *)v17 + 2) = 256;
    v17[6] = 0;
    goto LABEL_12;
  }
  if (v5 == 2147483652)
  {
LABEL_8:
    v11 = (char *)sub_90590();
    v7 = v11;
    v12 = HIDWORD(*(_QWORD *)(v2 + v4));
    if ((*(_QWORD *)(v2 + v4) & 0xC0000000) != 0x40000000)
      v12 = 0x100000000;
    v13 = &v11[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state];
    v14 = *(unsigned int *)&v11[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v11[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state + 4] << 32);
    v15 = v11[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state
            + 6];
    *(_DWORD *)v13 = v12;
    *((_WORD *)v13 + 2) = WORD2(v12);
    v13[6] = 0;
    v16 = v14 | ((unint64_t)v15 << 48);
    goto LABEL_13;
  }
  if (v5 != 2147483651)
    goto LABEL_11;
LABEL_7:
  v7 = sub_90590();
  v8 = &v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state];
  v9 = *(unsigned int *)&v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state] | ((unint64_t)*(unsigned __int16 *)&v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state + 4] << 32);
  v10 = v7[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state
         + 6];
  *(_DWORD *)v8 = 0;
  *((_WORD *)v8 + 2) = 256;
  v8[6] = 0;
LABEL_12:
  v16 = v9 | ((unint64_t)v10 << 48);
LABEL_13:
  sub_8FE4C(v16);

  v18 = a1 >> 30 < 2 || a1 >> 30 == 2 && (unint64_t)(a1 - 2147483651) < 2;
  v19 = *(_QWORD *)(v2 + v4);
  v20 = v19 >> 30;
  if (!(v19 >> 30) || v20 == 1 || v20 == 2 && (v19 == 2147483651 || v19 == 2147483652))
  {
    if (v18)
      return;
LABEL_26:
    sub_8C9BC();
    return;
  }
  if (v18)
    goto LABEL_26;
}

id sub_90928()
{
  return sub_90EBC(&OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___playlistSortButton, (uint64_t (*)(uint64_t))sub_9093C);
}

id sub_9093C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  NSString v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  _BYTE v27[16];
  _QWORD aBlock[5];
  uint64_t v29;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UIButton.Configuration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __chkstk_darwin(v12);
  v15 = &v27[-v14];
  static UIButton.Configuration.plain()(v13);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v16);

  UIButton.Configuration.image.setter(v17);
  sub_4E684(0, (unint64_t *)&qword_14AE630, UIButton_ptr);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v15, v8);
  v18 = (void *)UIButton.init(configuration:primaryAction:)(v11, 0);
  v19 = swift_allocObject(&unk_1342668, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a1);
  aBlock[4] = sub_97338;
  v29 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_633464;
  aBlock[3] = &block_descriptor_52;
  v20 = _Block_copy(aBlock);
  objc_msgSend(v18, "_setMenuProvider:", v20, swift_release(v29).n128_f64[0]);
  _Block_release(v20);
  objc_msgSend(v18, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v18, "setPointerInteractionEnabled:", 1);
  v21 = v18;
  v22 = String.LocalizationValue.init(stringLiteral:)(0x79422074726F53, 0xE700000000000000);
  static Locale.current.getter(v22);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setAccessibilityLabel:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v15, v8);

  return v21;
}

Class sub_90C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  Class Strong;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v4 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = (Class)swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v9 = sub_8F138();

    v10 = (uint64_t)v9 + *(_QWORD *)(*v9 + 96);
    swift_beginAccess(v10, v16, 0, 0);
    sub_5BDB8(v10, (uint64_t)v6, _s9PlaylistsVMa);
    swift_release(v9);
    v11 = swift_allocObject(&unk_1342668, 24, 7);
    swift_beginAccess(v7, v15, 0, 0);
    v12 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    swift_unknownObjectWeakInit(v11 + 16, v12);

    swift_retain(v11);
    Strong = sub_7B57A8((uint64_t)sub_97340, v11).super.super.isa;
    sub_5C0DC((uint64_t)v6, _s9PlaylistsVMa);
    swift_release_n(v11, 2);
  }
  return Strong;
}

double sub_90D88(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  __int16 v13;
  int v14;
  __int16 v15;
  _BYTE v16[24];
  _BYTE v17[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6C8);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = sub_8F138();

    v11 = (uint64_t)v10 + *(_QWORD *)(*v10 + 96);
    swift_beginAccess(v11, v16, 0, 0);
    sub_5C238(v11, (uint64_t)v6, &qword_14AE6C8);
    v12 = &v6[*(int *)(_s9PlaylistsVMa(0) + 36)];
    v13 = *v12;
    v14 = v12[1];
    *v12 = a1;
    v12[1] = HIBYTE(a1) & 1;
    if (v14)
      v15 = 256;
    else
      v15 = 0;
    sub_ACFDDC(v15 | v13);
    RequestResponse.Controller.request.setter((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

id sub_90EA8()
{
  return sub_90EBC(&OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___homeSharingButton, (uint64_t (*)(uint64_t))sub_90F18);
}

id sub_90EBC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

void *sub_90F18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[5];
  uint64_t v17;

  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)aBlock - v8;
  static UIButton.Configuration.plain()(v7);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  UIButton.Configuration.image.setter(v11);
  sub_4E684(0, (unint64_t *)&qword_14AE630, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  v12 = (void *)UIButton.init(configuration:primaryAction:)(v5, 0);
  v13 = swift_allocObject(&unk_1342668, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, a1);
  aBlock[4] = sub_97330;
  v17 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_633464;
  aBlock[3] = &block_descriptor_48;
  v14 = _Block_copy(aBlock);
  objc_msgSend(v12, "_setMenuProvider:", v14, swift_release(v17).n128_f64[0]);
  _Block_release(v14);
  objc_msgSend(v12, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v12, "setPointerInteractionEnabled:", 1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v12;
}

Class sub_91110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  Class v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  v5 = (Class)Strong;
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibrariesController);
    swift_retain(v6);

    v5 = sub_9F9B9C();
    swift_release(v6);
  }
  return v5;
}

void sub_911B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_105FBE8;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_105FC00;
  v4[4] = &unk_105FC18;
  v4[5] = &unk_105FC18;
  v4[6] = &unk_105FC18;
  sub_91274(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = &unk_105FC18;
    v4[10] = &unk_105FC30;
    v4[11] = &unk_105FC18;
    v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[13] = &unk_105FC18;
    v4[14] = &unk_105FC18;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

void sub_91274(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14AE5A0)
  {
    v2 = type metadata accessor for Playlist(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14AE5A0);
  }
}

uint64_t _s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa()
{
  return objc_opt_self(_TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView);
}

void sub_912E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_cloudLibraryStatus);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_cloudLibraryStatus) = a1;
  sub_90734(v2);
}

void sub_91300(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 v16;

  Library.Menu.Request.MediaLibrarySource.init(_:)();
  v9 = v8;
  v11 = v10;
  v12 = *(void **)a1;
  v13 = *(_BYTE *)(a1 + 8);
  swift_retain(a2);
  sub_94EAC(v12, v13);
  *(_QWORD *)a1 = v9;
  *(_BYTE *)(a1 + 8) = v11 & 1;
  v14 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)(a1 + 32) = a3;
  if ((a4 & 1) != 0)
    sub_6D18C(&v16, 0xCu);
  v15 = (a4 & 1) == 0;
  *(_BYTE *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 41) = v15;
}

void sub_91494(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  double v23;
  __n128 v24;
  void *v25;
  void (*v26)(_BYTE *, _QWORD);
  uint64_t v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  __n128 v36;
  void (*v37)(_BYTE *, _QWORD);
  NSString v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  _BYTE v48[32];
  _BYTE v49[24];

  v9 = type metadata accessor for UIView.Corner.Radius(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIView.Corner(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIListContentConfiguration(0, v15);
  if (a1)
  {
    v18 = swift_projectBox(a3);
    v46 = a5;
    v19 = v18;
    swift_beginAccess(v18, v48, 33, 0);
    v47 = a1;
    UIListContentConfiguration.image.setter(a1);
    swift_endAccess(v48);
    v20 = objc_msgSend(a4, "traitCollection");
    objc_msgSend(v20, "displayScale");
    v22 = v21;

    if (v22 < 1.0)
      v23 = 1.0;
    else
      v23 = 1.0 / v22;
    v24 = swift_beginAccess(v19, v49, 33, 0);
    v25 = a4;
    v26 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v48, v24);
    UIListContentConfiguration.ImageProperties.strokeWidth.setter(v23);
    v26(v48, 0);
    swift_endAccess(v49);
    v27 = UIView.Corner.extraSmall.unsafeMutableAddressor();
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v27, v13);
    UIView.Corner.radius.getter(v28);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v29 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
    objc_msgSend(v29, "scaledValueForValue:", 28.0);
    v31 = v30;
    objc_msgSend(v29, "scaledValueForValue:", 28.0);
    v33 = v32;

    v35 = UIView.Corner.Radius.value(in:)(v34, v31, v33);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v36 = swift_beginAccess(v19, v49, 33, 0);
    v37 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v48, v36);
    UIListContentConfiguration.ImageProperties.cornerRadius.setter(v35);
    v37(v48, 0);
    swift_endAccess(v49);
    v38 = objc_msgSend(v46, "_identifier");
    if (!v38)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v41 = v40;
      v38 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v39 = swift_bridgeObjectRelease(v41).n128_u64[0];
    }
    v42 = objc_msgSend(v25, "_uip_tabForIdentifier:", v38, v39);

    v43 = v47;
    if (v42)
    {
      v44 = v42;
      objc_msgSend(v44, "setImage:", v43);

    }
  }
}

uint64_t sub_91824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a1, v5, v7);
  sub_596800((uint64_t)v4);
  v10 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_58F1A0((uint64_t)v4);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v12;
}

unint64_t sub_91910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  _BYTE v74[72];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[10];
  _OWORD v81[10];
  _QWORD v82[10];
  _BYTE v83[32];
  uint64_t v84;
  char v85;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BB530);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD550);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0);
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v79, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v24 = (char *)Strong;
  v25 = a3 + 16;
  swift_beginAccess(v25, &v78, 0, 0);
  v26 = (void *)swift_unknownObjectWeakLoadStrong(v25);
  if (v26)
  {
    v65 = v26;
    v70 = v16;
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD560);
    inited = swift_initStackObject(v27, &v77);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    v66 = inited;
    v67 = inited + 32;
    sub_8A350C((_QWORD *)(inited + 32));
    sub_5C238(a5, (uint64_t)v22, &qword_14AE6E0);
    v29 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v22, 1, v29);
    if ((_DWORD)v31 == 1)
    {
      sub_56024((uint64_t)v22, &qword_14AE6E0);
      v72 = 0;
    }
    else
    {
      v72 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v31);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v29);
    }
    v34 = type metadata accessor for PlaylistContext(0);
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
    v68 = v19;
    v35(v19, 1, 1, v34);
    v69 = v24;
    v36 = *(_QWORD *)&v24[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibrariesController];
    KeyPath = swift_getKeyPath(&unk_105FD60);
    v38 = swift_getKeyPath(&unk_105FD88);
    static Published.subscript.getter(v82, v36, KeyPath, v38);
    swift_release(KeyPath);
    swift_release(v38);
    v71 = v82[0];
    v39 = type metadata accessor for MetricsEvent.Page(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v13, 1, 1, v39);
    sub_5C238((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_14AE6F0);
    v40 = MetricsReportingController.shared.unsafeMutableAddressor();
    sub_53F8B4();
    v42 = v41;
    v64 = v43;
    v44 = (void *)*v40;
    v45 = qword_14AB568;
    v46 = v44;
    if (v45 != -1)
      swift_once(&qword_14AB568, sub_5BC10C);
    swift_beginAccess(&static UIApplication.groupActivitiesManager, &v76, 0, 0);
    v47 = static UIApplication.groupActivitiesManager;
    swift_retain(static UIApplication.groupActivitiesManager);
    v48 = GroupActivitiesManager.hasJoined.getter();
    v49 = GroupActivitiesManager.participantsCount.getter();
    v50 = (uint64_t *)(v47 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v47 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v75, 0, 0);
    v51 = *v50;

    swift_release(v47);
    v63 = v51;
    v52 = v70;
    Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v10, v42, v64, 0, 0, v48 & 1, v70, v49, v63);
    sub_56024((uint64_t)v13, (uint64_t *)&unk_14AE6F0);
    v53 = type metadata accessor for Actions.MetricsReportingContext(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 0, 1, v53);
    memset(v82, 0, sizeof(v82));
    memset(v83, 0, sizeof(v83));
    v84 = 0;
    v85 = -1;
    v33 = v65;
    PresentationSource.init(viewController:position:)(v33, (uint64_t)v83, (uint64_t)v74);
    if (qword_14AB558 != -1)
      swift_once(&qword_14AB558, sub_5BBDBC);
    v54 = qword_14AB570;
    v55 = (id)static UIApplication.playbackController;
    v56 = (unint64_t)v68;
    v57 = v66;
    if (v54 != -1)
      swift_once(&qword_14AB570, sub_5BC224);
    swift_beginAccess(&static UIApplication.collaborationManager, &v73, 0, 0);
    v58 = static UIApplication.collaborationManager;
    swift_retain(static UIApplication.collaborationManager);
    sub_8AAF64(v57, v72, v56, v71, v55, v58, (unint64_t)v52, (uint64_t)v82, v80, (uint64_t)v74, 1);
    sub_5C090((uint64_t)v80, (uint64_t)v81, (uint64_t *)&unk_14AD570);
    v59 = v69;
    if (*((_QWORD *)&v81[0] + 1))
    {
      v81[7] = v81[2];
      v81[8] = v81[3];
      v81[9] = v81[4];
      v81[5] = v81[0];
      v81[6] = v81[1];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C06C0);
      v32 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
      sub_5BD0C((uint64_t)v80);
    }
    else
    {
      v32 = 0;
    }
    sub_56024((uint64_t)v74, (uint64_t *)&unk_14AD380);
    sub_56024((uint64_t)v52, &qword_14BB530);
    sub_56024(v56, (uint64_t *)&unk_14AD550);
    swift_release(v71);

    swift_release(v58);
    swift_setDeallocating(v57);
    v60 = *(_QWORD *)(v57 + 16);
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD580);
    swift_arrayDestroy(v67, v60, v61);

  }
  else
  {
    v32 = 0;
    v33 = v24;
  }

  return v32;
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s13VocalsCommandOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13VocalsCommandOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

uint64_t sub_9201C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_92038(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    *(_BYTE *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *_s20LibraryTabDataSourceC22CloudLibraryStatusViewC5StateOMa()
{
  return &_s20LibraryTabDataSourceC22CloudLibraryStatusViewC5StateON;
}

ValueMetadata *_s20LibraryTabDataSourceC23FacetTabElementsRequestVMa()
{
  return &_s20LibraryTabDataSourceC23FacetTabElementsRequestVN;
}

unint64_t sub_9207C(uint64_t a1)
{
  unint64_t result;

  result = sub_920A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_920A0()
{
  unint64_t result;

  result = qword_14AE628;
  if (!qword_14AE628)
  {
    result = swift_getWitnessTable("Y-.", &_s20LibraryTabDataSourceC23FacetTabElementsRequestVN);
    atomic_store(result, (unint64_t *)&qword_14AE628);
  }
  return result;
}

unint64_t sub_920E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t (*v9)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  _QWORD v19[2];
  _OWORD v20[2];

  v1 = v0;
  v2 = type metadata accessor for Playlist.Folder.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s20LibraryTabDataSourceC5ErrorOMa(0);
  __chkstk_darwin(v6);
  v8 = (_OWORD *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5BDB8(v1, (uint64_t)v8, v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, _OWORD *, uint64_t))(v3 + 32))(v5, v8, v2);
      *(_QWORD *)&v20[0] = 0;
      *((_QWORD *)&v20[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease(*((_QWORD *)&v20[0] + 1));
      *(_QWORD *)&v20[0] = 0xD000000000000016;
      *((_QWORD *)&v20[0] + 1) = 0x80000000010C5200;
      v11 = sub_4DD24(&qword_14AE878, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
      v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v11);
      object = v12._object;
      String.append(_:)(v12);
      swift_bridgeObjectRelease(object);
      v14._object = (void *)0x80000000010C5220;
      v14._countAndFlagsBits = 0xD000000000000019;
      String.append(_:)(v14);
      v15 = *(_QWORD *)&v20[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      return 0xD00000000000002CLL;
    }
  }
  else
  {
    sub_50CA4(v8, v20);
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    v16._countAndFlagsBits = 0xD000000000000010;
    v16._object = (void *)0x80000000010C5240;
    String.append(_:)(v16);
    _print_unlocked<A, B>(_:_:)(v20, v19, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v17._object = (void *)0x80000000010C5220;
    v17._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v17);
    v15 = v19[0];
    __swift_destroy_boxed_opaque_existential_1(v20);
  }
  return v15;
}

Swift::Int NSFileManager.Failure.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void NSFileManager.Failure.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_923A4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

unint64_t sub_923E0()
{
  return 0xD000000000000020;
}

id sub_923FC(char a1)
{
  void *v2;
  id v3;
  Swift::String v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;
  _QWORD v14[4];
  _QWORD v15[5];

  v15[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  v15[4] = &off_13429D0;
  LOBYTE(v15[0]) = a1;
  if (a1)
  {
    if (a1 == 1)
      v2 = (void *)0xED00006C6C412E73;
    else
      v2 = (void *)0xED000077654E2E73;
  }
  else
  {
    v2 = (void *)0xEF70756F72472E73;
  }
  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v14[0] = 0xD00000000000001BLL;
  v14[1] = 0x80000000010C4FB0;
  v4._countAndFlagsBits = 0x7473696C79616C50;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000000010C4FB0);
  sub_8F8D4(a1);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = sub_8FA14();
  v10 = objc_msgSend(v3, "initWithIdentifier:title:image:", v5, v8, v9);

  v11 = __swift_project_boxed_opaque_existential_1(v15, (uint64_t)&_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
  v14[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  *(_BYTE *)__swift_allocate_boxed_opaque_existential_1Tm(v14) = *(_BYTE *)v11;
  v12 = v10;
  sub_6699A4((uint64_t)v14);

  __swift_destroy_boxed_opaque_existential_1(v15);
  return v12;
}

id sub_9258C(char a1)
{
  void *v2;
  id v3;
  Swift::String v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;
  _QWORD v14[4];
  _QWORD v15[5];

  v15[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  v15[4] = &off_13429D0;
  LOBYTE(v15[0]) = a1;
  if (a1)
  {
    if (a1 == 1)
      v2 = (void *)0xED00006C6C412E73;
    else
      v2 = (void *)0xED000077654E2E73;
  }
  else
  {
    v2 = (void *)0xEF70756F72472E73;
  }
  v3 = objc_allocWithZone((Class)_UITabElement);
  v14[0] = 0xD00000000000001BLL;
  v14[1] = 0x80000000010C4FB0;
  v4._countAndFlagsBits = 0x7473696C79616C50;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000000010C4FB0);
  sub_8F8D4(a1);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = sub_8FA14();
  v10 = objc_msgSend(v3, "initWithIdentifier:title:image:", v5, v8, v9);

  v11 = __swift_project_boxed_opaque_existential_1(v15, (uint64_t)&_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
  v14[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  *(_BYTE *)__swift_allocate_boxed_opaque_existential_1Tm(v14) = *(_BYTE *)v11;
  v12 = v10;
  sub_6699A4((uint64_t)v14);

  __swift_destroy_boxed_opaque_existential_1(v15);
  return v12;
}

id sub_9271C(char a1)
{
  id v2;
  Swift::String v3;
  void *object;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  id v13;
  _QWORD *v14;
  _QWORD *boxed_opaque_existential_1Tm;
  id v16;
  _QWORD v18[4];
  _QWORD v19[5];

  v19[3] = &type metadata for Library.Menu.Identifier;
  v19[4] = &off_1376DB8;
  LOBYTE(v19[0]) = a1;
  v2 = objc_allocWithZone((Class)_UITabElement);
  v3._countAndFlagsBits = Library.Menu.Identifier.rawValue.getter(a1);
  object = v3._object;
  v18[0] = 0xD00000000000001BLL;
  v18[1] = 0x80000000010C4FB0;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000000010C4FB0);
  Library.Menu.Identifier.name(for:)(2, a1);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  Library.Menu.Identifier.symbolName(for:)(2, a1);
  v10 = v9;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v11);

  v13 = objc_msgSend(v2, "initWithIdentifier:title:image:", v5, v8, v12);
  v14 = __swift_project_boxed_opaque_existential_1(v19, (uint64_t)&type metadata for Library.Menu.Identifier);
  v18[3] = &type metadata for Library.Menu.Identifier;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v18);
  ((void (*)(_QWORD *, _QWORD *, ValueMetadata *))__swift_memcpy1_1_0)(boxed_opaque_existential_1Tm, v14, &type metadata for Library.Menu.Identifier);
  v16 = v13;
  sub_6699A4((uint64_t)v18);

  __swift_destroy_boxed_opaque_existential_1(v19);
  return v16;
}

id sub_928B4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *boxed_opaque_existential_1Tm;
  id v4;
  uint64_t v5;
  NSString v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  _UNKNOWN **v24;

  v2 = type metadata accessor for Playlist.Folder.Item(0);
  v23 = v2;
  v24 = &off_1376DE0;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v22);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(boxed_opaque_existential_1Tm, a1, v2);
  v4 = objc_allocWithZone((Class)_UITabElement);
  v5 = sub_4DD24((unint64_t *)&qword_14AE760, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
  dispatch thunk of Identifiable.id.getter(v2, v5);
  v20 = 0xD00000000000001BLL;
  v21 = 0x80000000010C4FB0;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v18._object);
  v6 = String._bridgeToObjectiveC()();
  v7 = swift_bridgeObjectRelease(0x80000000010C4FB0);
  Playlist.Folder.Item.name.getter(v7);
  v9 = v8;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v11 = (void *)sub_1AB0A4();
  v12 = objc_msgSend(v4, "initWithIdentifier:title:image:", v6, v10, v11);

  v13 = v23;
  v14 = __swift_project_boxed_opaque_existential_1(v22, v23);
  v19 = v13;
  v15 = __swift_allocate_boxed_opaque_existential_1Tm(&v18);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v15, v14, v13);
  v16 = v12;
  sub_6699A4((uint64_t)&v18);

  __swift_destroy_boxed_opaque_existential_1(v22);
  return v16;
}

void sub_92A58(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_92AC0()
{
  unsigned __int8 v0;
  Swift::String v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1._countAndFlagsBits = 0x6F4E6E657473696CLL;
  v1._object = (void *)0xE900000000000077;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(0xE900000000000077);
  String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000000010C4FB0);
  sub_695700(v0);
  v3 = v2;
  String._bridgeToObjectiveC()();
  v4 = swift_bridgeObjectRelease(v3);
  return ((uint64_t (*)(__n128))((char *)&loc_92BB0 + *((int *)qword_92D50 + v0)))(v4);
}

id sub_92BC0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  _QWORD *v7;
  _QWORD *boxed_opaque_existential_1Tm;
  id v9;
  _QWORD v11[3];
  uint64_t v12;
  _QWORD v13[13];

  v3 = objc_allocWithZone((Class)_UITabElement);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE400000000000000);
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v4);

  v6 = objc_msgSend(v3, "initWithIdentifier:title:image:", v1, v2, v5);
  v7 = __swift_project_boxed_opaque_existential_1(v13, v0);
  v12 = v0;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v11);
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(boxed_opaque_existential_1Tm, v7, v0);
  v9 = v6;
  sub_6699A4((uint64_t)v11);

  __swift_destroy_boxed_opaque_existential_1(v13);
  return v9;
}

id sub_92D68(char a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  Swift::String v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  id v18;
  _QWORD aBlock[3];
  ValueMetadata *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v24[3] = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  v24[4] = &off_13429D0;
  LOBYTE(v24[0]) = a1;
  if (a1)
  {
    if (a1 == 1)
      v6 = (void *)0xED00006C6C412E73;
    else
      v6 = (void *)0xED000077654E2E73;
  }
  else
  {
    v6 = (void *)0xEF70756F72472E73;
  }
  v7 = objc_allocWithZone((Class)_UITabAction);
  v8._countAndFlagsBits = 0x7473696C79616C50;
  v8._object = v6;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v6);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000000010C4FB0);
  sub_8F8D4(a1);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = sub_8FA14();
  v22 = a2;
  v23 = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_5FEBC;
  v21 = (ValueMetadata *)&block_descriptor_63;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  swift_retain(a3);
  v16 = objc_msgSend(v7, "initWithIdentifier:title:image:handler:", v9, v12, v13, v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);

  v17 = __swift_project_boxed_opaque_existential_1(v24, (uint64_t)&_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
  v21 = &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
  *(_BYTE *)__swift_allocate_boxed_opaque_existential_1Tm(aBlock) = *(_BYTE *)v17;
  v18 = v16;
  sub_6699A4((uint64_t)aBlock);
  swift_release(a3);

  __swift_destroy_boxed_opaque_existential_1(v24);
  return v18;
}

char *sub_92F6C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  objc_class *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t v91;
  void (*v92)(char *, _UNKNOWN **, __n128);
  __n128 v93;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t inited;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110[24];
  id v111[3];
  char v112[48];
  objc_super v113;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C7FF0);
  v4 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  v107 = v4;
  __chkstk_darwin(v3);
  v104 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE680);
  v7 = *(_QWORD *)(v6 - 8);
  v108 = v6;
  v109 = v7;
  __chkstk_darwin(v6);
  v105 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BAF30);
  __chkstk_darwin(v9);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE690);
  v101 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C0800);
  v103 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v1[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_onSelection];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary;
  type metadata accessor for MusicLibrary(0);
  v17 = v1;
  *(_QWORD *)&v1[v16] = static MusicLibrary.shared.getter(v18);
  v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_needsTabElementsUpdate] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___menuTabElementsController] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___editableMenuController] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___playlistsTabsController] = 0;
  v19 = &v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_createdPlaylist];
  v20 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_artworkCache;
  v22 = type metadata accessor for ArtworkPrefetchingController.CacheReference();
  v23 = swift_allocObject(v22, 41, 7);
  *(_QWORD *)(v23 + 16) = 0xD000000000000017;
  *(_QWORD *)(v23 + 24) = 0x80000000010C4FF0;
  *(_QWORD *)(v23 + 32) = 0;
  *(_BYTE *)(v23 + 40) = 1;
  *(_QWORD *)&v17[v21] = v23;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___cloudLibraryStatusView] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_cloudLibraryStatus] = 0x80000000;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___playlistSortButton] = 0;
  v24 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibrariesController;
  v25 = type metadata accessor for SharedLibrariesController(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)&v17[v24] = sub_9FB20C();
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibraryObservers] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource____lazy_storage___homeSharingButton] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab] = a1;
  v26 = a1;

  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "_setDefaultChildIdentifier:", v27);

  objc_msgSend(v26, "_setTabBarPlacement:", 4);
  objc_msgSend(v26, "_setAllowsReordering:", 1);
  v28 = (objc_class *)_s20LibraryTabDataSourceCMa(0);
  v113.receiver = v17;
  v113.super_class = v28;
  v29 = (char *)objc_msgSendSuper2(&v113, "init");
  objc_msgSend(v26, "_setDelegate:", v29);
  sub_8C9BC();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  inited = swift_initStackObject(v30, v112);
  *(_OWORD *)(inited + 16) = xmmword_105F8A0;
  v97 = OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibrariesController;
  swift_beginAccess(*(_QWORD *)&v29[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibrariesController]+ OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController__availableSharedLibraries, v111, 33, 0);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C0810);
  v32 = v13;
  Published.projectedValue.getter(v31);
  swift_endAccess(v111);
  v33 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  v111[0] = (id)static OS_dispatch_queue.main.getter(v33, v34, v35, v36, v37, v38, v39, v40);
  v41 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v96 = v11;
  v42(v11, 1, 1, v41);
  v43 = sub_5C150((unint64_t *)&unk_14C0820, (uint64_t *)&unk_14AE690, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v44 = sub_950D0((unint64_t *)&qword_14AE6A0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v45 = v99;
  v46 = v100;
  Publisher.receive<A>(on:options:)(v111, v11, v100, v33, v43, v44);
  sub_56024((uint64_t)v11, (uint64_t *)&unk_14BAF30);

  (*(void (**)(char *, uint64_t))(v101 + 8))(v32, v46);
  v47 = swift_allocObject(&unk_1342668, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16);

  v48 = sub_5C150((unint64_t *)&unk_14C0830, (uint64_t *)&unk_14C0800, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v49 = v102;
  v50 = Publisher<>.sink(receiveValue:)(sub_95110, v47, v102, v48);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v45, v49);
  swift_release(v47);
  v51 = (_QWORD *)inited;
  *(_QWORD *)(inited + 32) = v50;
  swift_beginAccess(*(_QWORD *)&v29[v97] + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController__selectedLibrary, v111, 33, 0);
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6B0);
  v53 = v104;
  Published.projectedValue.getter(v52);
  v54 = swift_endAccess(v111);
  v111[0] = (id)static OS_dispatch_queue.main.getter(v54, v55, v56, v57, v58, v59, v60, v61);
  v62 = (uint64_t)v96;
  v42(v96, 1, 1, v41);
  v63 = sub_5C150(&qword_14C0840, &qword_14C7FF0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v64 = v105;
  v65 = v106;
  Publisher.receive<A>(on:options:)(v111, v62, v106, v33, v63, v44);
  sub_56024(v62, (uint64_t *)&unk_14BAF30);

  (*(void (**)(char *, uint64_t))(v107 + 8))(v53, v65);
  KeyPath = swift_getKeyPath(&unk_105FD38);
  v111[0] = v29;
  v67 = sub_5C150(&qword_14AE6C0, (uint64_t *)&unk_14AE680, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v68 = v108;
  v69 = v64;
  v70 = Publisher<>.assign<A>(to:on:)(KeyPath, v111, v108, v67);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v68);
  swift_release(KeyPath);
  v51[5] = v70;
  v111[0] = v51;
  specialized Array._endMutation()(v71);
  v72 = v111[0];
  if ((unint64_t)v111[0] >> 62)
  {
    if ((uint64_t)v111[0] < 0)
      v75 = v111[0];
    else
      v75 = (id)((unint64_t)v111[0] & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v76 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v72);
    if (v76)
      goto LABEL_3;
LABEL_8:
    v74 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((char *)&dword_10 + ((unint64_t)v111[0] & 0xFFFFFFFFFFFFF8)))
    goto LABEL_8;
LABEL_3:
  sub_4B168((uint64_t)v72);
  v74 = v73;
LABEL_9:
  swift_bridgeObjectRelease(v72);
  v77 = *(_QWORD *)&v29[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibraryObservers];
  *(_QWORD *)&v29[OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibraryObservers] = v74;
  swift_bridgeObjectRelease(v77);
  v78 = sub_8DD8C();
  v79 = swift_allocObject(&unk_1342668, 24, 7);
  swift_unknownObjectWeakInit(v79 + 16);

  v80 = (uint64_t *)((char *)v78 + *(_QWORD *)(*v78 + 120));
  swift_beginAccess(v80, v111, 1, 0);
  v81 = *v80;
  v82 = v80[1];
  *v80 = (uint64_t)sub_95134;
  v80[1] = v79;
  sub_5C198(v81, v82);
  swift_release(v78);
  v83 = sub_8F138();
  v84 = swift_allocObject(&unk_1342668, 24, 7);
  swift_unknownObjectWeakInit(v84 + 16);

  v85 = (uint64_t *)((char *)v83 + *(_QWORD *)(*v83 + 120));
  swift_beginAccess(v85, v110, 1, 0);
  v86 = *v85;
  v87 = v85[1];
  *v85 = (uint64_t)sub_95154;
  v85[1] = v84;
  sub_5C198(v86, v87);
  swift_release(v83);
  v88 = sub_8DD8C();
  RequestResponse.Controller.isAutomaticReloadingEnabled.setter(1);
  swift_release(v88);
  v89 = sub_8F138();
  RequestResponse.Controller.isAutomaticReloadingEnabled.setter(1);
  swift_release(v89);
  sub_8CBDC();
  v90 = CloudLibrary.StatusObserver.shared.unsafeMutableAddressor();
  v91 = *v90;
  v92 = *(void (**)(char *, _UNKNOWN **, __n128))(*(_QWORD *)*v90 + 224);
  v93 = swift_retain(*v90);
  v92(v29, &off_1342560, v93);
  swift_release(v91);

  return v29;
}

void (*sub_93858(void *a1, void *a2))(_BYTE *, uint64_t)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  id v32;
  id v33;
  _BYTE *v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  void (*v38)(uint64_t, _BYTE *, uint64_t);
  int v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  void (*v45)(_BYTE *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, uint64_t);
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  void (*v53)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  char *v64;
  _BYTE *v65;
  void (*v66)(_BYTE *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE v78[4];
  int v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t *v91;
  uint64_t v92;
  id v93;
  _OWORD v94[2];
  __int128 v95;
  uint64_t v96;
  _OWORD v97[2];
  _BYTE *v98;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
  __chkstk_darwin(v4);
  v6 = &v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v88 = _s9PlaylistsV5ScopeVMa(0);
  __chkstk_darwin(v88);
  v91 = (uint64_t *)&v78[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v92 = type metadata accessor for Playlist.Folder(0);
  v8 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = &v78[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v10);
  v82 = &v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v85 = &v78[-v13];
  v80 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v80);
  v81 = &v78[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v83 = &v78[-v16];
  v84 = type metadata accessor for Playlist(0);
  v89 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v18 = &v78[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v87 = &v78[-v20];
  __chkstk_darwin(v21);
  v86 = &v78[-v22];
  v23 = type metadata accessor for Playlist.Folder.Item(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = &v78[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v98 = &v78[-v28];
  __chkstk_darwin(v29);
  v31 = &v78[-v30];
  if (qword_14AB660 != -1)
    swift_once(&qword_14AB660, sub_66A090);
  v32 = objc_getAssociatedObject(a1, (const void *)qword_14D8738);
  if (v32)
  {
    v33 = v32;
    _bridgeAnyObjectToAny(_:)(v94, v32);
    swift_unknownObjectRelease(v33);
  }
  else
  {
    memset(v94, 0, sizeof(v94));
  }
  sub_5C090((uint64_t)v94, (uint64_t)&v95, (uint64_t *)&unk_14AD640);
  if (v96)
  {
    v93 = a2;
    sub_50CA4(&v95, v97);
    sub_95094((uint64_t)v97, (uint64_t)&v95);
    if (swift_dynamicCast(v31, &v95, (char *)&type metadata for Any + 8, v23, 0))
    {
      v34 = v98;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 32))(v98, v31, v23);
      v35 = sub_5AECC();
      UITraitCollection.subscript.getter(v94, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v35);
      v36 = *(_QWORD *)&v94[0];
      v79 = sub_A448E8(*(_QWORD *)&v94[0]);
      v37 = swift_bridgeObjectRelease(v36);
      v38 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v24 + 16);
      ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v38)(v26, v34, v23, v37);
      v39 = (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 88))(v26, v23);
      if (v39 == enum case for Playlist.Folder.Item.folder(_:))
      {
        (*(void (**)(_BYTE *, uint64_t))(v24 + 96))(v26, v23);
        v40 = v90;
        v41 = v92;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v90, v26, v92);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v6, v40, v41);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v41);
        if (qword_14AABD0 != -1)
          swift_once(&qword_14AABD0, sub_23D830);
        v42 = qword_157FBB8;
        v43 = v91;
        sub_5C238((uint64_t)v6, (uint64_t)v91 + *(int *)(v88 + 20), (uint64_t *)&unk_14AE650);
        *v43 = v42;
        swift_bridgeObjectRetain();
        sub_56024((uint64_t)v6, (uint64_t *)&unk_14AE650);
        LODWORD(v42) = objc_msgSend(v93, "horizontalSizeClass") != (char *)&dword_0 + 2;
        v44 = objc_allocWithZone((Class)type metadata accessor for LibraryPlaylistsViewController(0));
        v45 = (void (*)(_BYTE *, uint64_t))sub_3F32DC(v43, v79 & 1, v42);
        (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v40, v41);
        goto LABEL_17;
      }
      if (v39 == enum case for Playlist.Folder.Item.playlist(_:))
      {
        (*(void (**)(_BYTE *, uint64_t))(v24 + 96))(v26, v23);
        v50 = v89;
        v51 = v86;
        v52 = v84;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v89 + 32))(v86, v26, v84);
        v53 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 16);
        v53(v87, v51, v52);
        v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE670);
        v55 = *(int *)(v54 + 48);
        v56 = *(int *)(v54 + 64);
        v57 = _s6AlbumsV5ScopeOMa(0);
        v58 = (uint64_t)v83;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v83, 1, 1, v57);
        *(_BYTE *)(v58 + v55) = v79 & 1;
        *(_BYTE *)(v58 + v56) = 0;
        swift_storeEnumTagMultiPayload(v58, v80, 0);
        v59 = type metadata accessor for URL(0);
        v60 = (uint64_t)v85;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v85, 1, 1, v59);
        v61 = v87;
        v53(v18, v87, v52);
        v62 = v81;
        sub_5BDB8(v58, (uint64_t)v81, type metadata accessor for ContainerDetail.Source);
        v63 = v82;
        sub_5C238(v60, (uint64_t)v82, &qword_14AED20);
        v64 = sub_9514C4((uint64_t)v18, (uint64_t)v62, 0, 0, (uint64_t)v63);
        v65 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
        v45 = (void (*)(_BYTE *, uint64_t))sub_ADF21C((uint64_t)v64, 0, v65);

        sub_56024(v60, &qword_14AED20);
        sub_5C0DC(v58, type metadata accessor for ContainerDetail.Source);
        v66 = *(void (**)(_BYTE *, uint64_t))(v89 + 8);
        v66(v61, v52);
        v66(v86, v52);
LABEL_17:
        (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v98, v23);
        goto LABEL_18;
      }
      v71 = _s20LibraryTabDataSourceC5ErrorOMa(0);
      v72 = sub_4DD24((unint64_t *)&unk_14AE660, _s20LibraryTabDataSourceC5ErrorOMa, (uint64_t)&unk_105FFF8);
      swift_allocError(v71, v72, 0, 0);
      v74 = v73;
      v75 = v98;
      v38(v73, v98, v23);
      v76 = swift_storeEnumTagMultiPayload(v74, v71, 1);
      swift_willThrow(v76);
      v45 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
      v45(v75, v23);
      __swift_destroy_boxed_opaque_existential_1(v97);
      v45(v26, v23);
    }
    else
    {
      if (swift_dynamicCast(v94, &v95, (char *)&type metadata for Any + 8, &type metadata for Library.Menu.Identifier, 0))
      {
        sub_5128A0((uint64_t)v93, v94[0]);
        v45 = v49;
LABEL_18:
        __swift_destroy_boxed_opaque_existential_1(v97);
        __swift_destroy_boxed_opaque_existential_1(&v95);
        return v45;
      }
      v45 = (void (*)(_BYTE *, uint64_t))_s20LibraryTabDataSourceC5ErrorOMa(0);
      v67 = sub_4DD24((unint64_t *)&unk_14AE660, _s20LibraryTabDataSourceC5ErrorOMa, (uint64_t)&unk_105FFF8);
      swift_allocError(v45, v67, 0, 0);
      v69 = v68;
      sub_95094((uint64_t)v97, v68);
      v70 = swift_storeEnumTagMultiPayload(v69, v45, 0);
      swift_willThrow(v70);
      __swift_destroy_boxed_opaque_existential_1(v97);
    }
    __swift_destroy_boxed_opaque_existential_1(&v95);
    return v45;
  }
  sub_56024((uint64_t)&v95, (uint64_t *)&unk_14AD640);
  v45 = (void (*)(_BYTE *, uint64_t))_s20LibraryTabDataSourceC5ErrorOMa(0);
  v46 = sub_4DD24((unint64_t *)&unk_14AE660, _s20LibraryTabDataSourceC5ErrorOMa, (uint64_t)&unk_105FFF8);
  swift_allocError(v45, v46, 0, 0);
  v48 = swift_storeEnumTagMultiPayload(v47, v45, 2);
  swift_willThrow(v48);
  return v45;
}

BOOL sub_94124(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v5 = type metadata accessor for Playlist.Folder.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1D0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a2, "userInterfaceIdiom", v10) != (char *)&dword_0 + 1
    || objc_msgSend(a2, "horizontalSizeClass") != (char *)&dword_0 + 2)
  {
    return 1;
  }
  sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab)) & 1) != 0)return 0;
  sub_6697C0((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    v14 = enum case for Playlist.Folder.Item.folder(_:);
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v8, v5);
    v15(v12, v5);
    return v13 != v14;
  }
  sub_56024((uint64_t)v12, &qword_14AE1D0);
  return 1;
}

void sub_942D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_8B1BC(a4, a2);
  v9 = v4;
  if (v8)
  {
    v10 = v8;
    v11 = objc_msgSend(v8, "_isVisible");

  }
  else
  {
    v12 = *(_QWORD *)(a3 + 40);
    swift_bridgeObjectRetain();
    v11 = sub_A32834(a2, v12);
    swift_bridgeObjectRelease(v12);
  }
  if (qword_14AB670 != -1)
    swift_once(&qword_14AB670, sub_66A380);
  v13 = type metadata accessor for Logger(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1580BB8);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  v24 = v11;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(64, -1);
    v27 = v18;
    *(_DWORD *)v17 = 136315650;
    if ((v11 & 1) != 0)
      v19 = 0x64657463656C6573;
    else
      v19 = 0x7463656C65736564;
    if ((v11 & 1) != 0)
      v20 = 0xE800000000000000;
    else
      v20 = 0xEA00000000006465;
    v25 = sub_23EAC8(v19, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v17 + 12) = 2082;
    v21 = Library.Menu.Identifier.description.getter(a2);
    v23 = v22;
    v25 = sub_23EAC8(v21, v22, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v17 + 22) = 2050;
    v25 = a1;
    v9 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    _os_log_impl(&dword_0, v15, v16, "Moving %s identifier=%{public}s to index=%{public}ld", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

  Library.Menu.move(_:to:)(a2, a1);
  if (!v9)
    Library.Menu.setSelectionState(_:for:)((v24 & 1) == 0, a2);
}

void sub_94588(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *log;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  uint64_t v45;

  v4 = v3;
  v7 = *a2;
  v8 = (void *)a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v12 = a2[4];
  v11 = a2[5];
  v13 = qword_14AB670;
  swift_bridgeObjectRetain();
  v40 = v7;
  swift_bridgeObjectRetain();
  v14 = v8;
  v42 = v10;
  swift_bridgeObjectRetain();
  v41 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once(&qword_14AB670, sub_66A380);
  v15 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v15, (uint64_t)qword_1580BB8);
  swift_bridgeObjectRetain_n(v40, 2);
  v16 = v14;
  swift_bridgeObjectRetain_n(v10, 2);
  swift_bridgeObjectRetain_n(v9, 2);
  swift_bridgeObjectRetain_n(v12, 2);
  swift_bridgeObjectRetain_n(v11, 2);
  swift_bridgeObjectRetain_n(a1, 2);
  v17 = v12;
  v18 = v16;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v38 = v11;
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v45 = v37;
    *(_DWORD *)v21 = 136446466;
    v43 = v40;
    v44[0] = v18;
    v44[1] = v42;
    v44[2] = v41;
    v44[3] = v12;
    v44[4] = v11;
    swift_bridgeObjectRetain();
    log = v19;
    v35 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = String.init<A>(describing:)(&v43, &type metadata for Library.Menu);
    v24 = v23;
    v43 = sub_23EAC8(v22, v23, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease_n(v41, 2);
    swift_bridgeObjectRelease_n(v42, 2);

    swift_bridgeObjectRelease_n(v40, 2);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    v25 = swift_bridgeObjectRetain();
    v26 = Array.description.getter(v25, &type metadata for Library.Menu.Identifier);
    v28 = v27;
    swift_bridgeObjectRelease(a1);
    v43 = sub_23EAC8(v26, v28, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v28);
    _os_log_impl(&dword_0, log, v20, "Applying edits to %{public}s with ordered identifiers=%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v17 = v12;
  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease_n(v11, 2);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease_n(v41, 2);
    swift_bridgeObjectRelease_n(v42, 2);

    swift_bridgeObjectRelease_n(v40, 2);
  }
  v29 = *(_QWORD *)(a1 + 16);
  if (v29 != *(_QWORD *)(*a2 + 16))
  {
    v32 = sub_973B8();
    v33 = swift_allocError(&_s19TabElementEditErrorON, v32, 0, 0);
    swift_willThrow(v33);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v42);

LABEL_16:
    v34 = v40;
    goto LABEL_17;
  }
  if (v29)
  {
    swift_bridgeObjectRetain();
    v30 = 0;
    while (1)
    {
      v31 = *(unsigned __int8 *)(a1 + v30 + 32);
      swift_bridgeObjectRetain();
      sub_942D8(v30, v31, (uint64_t)a2, a3);
      if (v4)
        break;
      ++v30;
      swift_bridgeObjectRelease(a3);
      if (v29 == v30)
        goto LABEL_14;
    }
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v42);

    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(a3);
    v40 = a3;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
LABEL_14:

  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v41);
  v34 = v42;
LABEL_17:
  swift_bridgeObjectRelease(v34);
}

unint64_t sub_94A88(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_133AEE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

id sub_94AD0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  objc_super v16;

  v4 = &v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_state];
  *((_WORD *)v4 + 2) = 0;
  *(_DWORD *)v4 = 0;
  v4[6] = 1;
  __asm { FMOV            V0.2D, #24.0 }
  *(_OWORD *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_defaultIntrinsicContentSize] = _Q0;
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton] = 0;
  v10 = &v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementHandler];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v16.receiver = v2;
  v16.super_class = (Class)_s20LibraryTabDataSourceC22CloudLibraryStatusViewCMa();
  swift_retain(a2);
  v11 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v11;
  v14 = objc_msgSend(v12, "clearColor", v16.receiver, v16.super_class);
  objc_msgSend(v13, "setBackgroundColor:", v14);

  objc_msgSend(v13, "sizeToFit");
  return v13;
}

void sub_94BF8(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner;
  v5 = *(void **)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner];
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_spinner] = a1;
  v6 = a1;
  if (v3)
  {
    if (!v5)
    {
LABEL_7:
      objc_msgSend(v2, "addSubview:", v3);
      goto LABEL_8;
    }
    v7 = v6;
    type metadata accessor for CircularProgressView();
    v11 = v5;
    v8 = v7;
    v9 = static NSObject.== infix(_:_:)(v8, v11);

    v10 = v11;
    if ((v9 & 1) != 0)
      goto LABEL_9;
  }
  else if (!v5)
  {
    return;
  }
  objc_msgSend(v5, "removeFromSuperview");
  v3 = *(void **)&v2[v4];
  if (v3)
    goto LABEL_7;
LABEL_8:
  v10 = v5;
LABEL_9:

}

void sub_94CDC(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton;
  v5 = *(void **)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton];
  *(_QWORD *)&v2[OBJC_IVAR____TtCCC16MusicApplication16TabBarController20LibraryTabDataSourceP33_DFCA1141F8762042AD5A48E578AC0BD722CloudLibraryStatusView_enablementButton] = a1;
  v6 = a1;
  if (v3)
  {
    if (!v5)
    {
LABEL_7:
      objc_msgSend(v2, "addSubview:", v3);
      goto LABEL_8;
    }
    v7 = v6;
    sub_4E684(0, (unint64_t *)&qword_14AE630, UIButton_ptr);
    v11 = v5;
    v8 = v7;
    v9 = static NSObject.== infix(_:_:)(v8, v11);

    v10 = v11;
    if ((v9 & 1) != 0)
      goto LABEL_9;
  }
  else if (!v5)
  {
    return;
  }
  objc_msgSend(v5, "removeFromSuperview");
  v3 = *(void **)&v2[v4];
  if (v3)
    goto LABEL_7;
LABEL_8:
  v10 = v5;
LABEL_9:

}

uint64_t sub_94DD0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_94DF4(uint64_t a1)
{
  uint64_t v1;

  return sub_90180(a1, v1);
}

uint64_t sub_94DFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_94E20(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t *, uint64_t, uint64_t);
  uint64_t v7;
  char v8;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v7 = a1;
  v8 = a2 & 1;
  return v5(&v7, a3, a4);
}

void sub_94E60(uint64_t a1)
{
  uint64_t v1;

  sub_91300(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_94E6C()
{
  uint64_t v0;

  sub_94EAC(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_94EAC(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_release(a1);
  else

}

_QWORD *sub_94EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_8DF44(a1, a2, a3, v3 + 16, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 64), *(_QWORD *)(v3 + 72));
}

uint64_t sub_94EC4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  sub_94F08(*(void **)a1, *(_BYTE *)(a1 + 8));
  v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

id sub_94F08(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_retain(a1);
  else
    return a1;
}

uint64_t sub_94F14(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_94EAC(*(void **)a1, *(_BYTE *)(a1 + 8));
  swift_bridgeObjectRelease(v2);

  return a1;
}

uint64_t sub_94F58(uint64_t a1)
{
  sub_94F90(*(_QWORD *)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_94F90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return swift_errorRelease();
  swift_bridgeObjectRelease(a1);

  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a5);
  return swift_bridgeObjectRelease(a6);
}

_QWORD *sub_94FF8(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

uint64_t sub_95020()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_9504C(uint64_t a1, char *a2, unint64_t a3)
{
  uint64_t v3;

  return sub_8E23C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v3 + 24));
}

_QWORD *sub_95058(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t _s20LibraryTabDataSourceC5ErrorOMa(uint64_t a1)
{
  return sub_6345C(a1, qword_14AE830, (uint64_t)&_s20LibraryTabDataSourceC5ErrorOMn);
}

uint64_t sub_95094(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_950D0(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_4E684(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_95110(uint64_t a1)
{
  uint64_t v1;

  sub_8B57C(a1, v1);
}

uint64_t sub_95118@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_selectedLibrary);
  *a2 = v2;
  return swift_retain(v2);
}

void sub_95134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_8B6D8(a1, a2, v2, "Library menu has (re)loaded — Updating tabElements…");
}

void sub_95154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_8B6D8(a1, a2, v2, "Playlists have (re)loaded — Updating tabElements…");
}

void sub_95174(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  char *v56;
  char **v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  char *v63;
  uint64_t (**v64)();
  uint64_t v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t countAndFlagsBits;
  uint64_t v76;
  id v77;
  uint64_t v78;
  char *v79;
  uint64_t (**v80)();
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  unint64_t v100;
  unint64_t v101;
  char *v102;
  id v103;
  void *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  void *v112;
  Swift::Int v113;
  unint64_t v114;
  void *object;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  int v123;
  char *v124;
  char *v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  double v137;
  uint64_t v138;
  __n128 v139;
  double v140;
  void (*v141)(Swift::String *, _QWORD);
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  void (*v147)(Swift::String *, _QWORD);
  void (*v148)(_OWORD *, _QWORD);
  _QWORD *v149;
  id v150;
  double v151;
  double v152;
  double v153;
  double v154;
  __n128 v155;
  void (*v156)(Swift::String *, _QWORD);
  void *v157;
  id v158;
  __n128 v159;
  double (*v160)(Swift::String *, _QWORD);
  __n128 v161;
  double (*v162)(Swift::String *, _QWORD);
  __n128 v163;
  void (*v164)(Swift::String *, _QWORD);
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  void (*v171)(char *, uint64_t);
  id v172;
  uint64_t v173;
  char *v174;
  uint64_t (**v175)();
  void (*v176)(char *, _QWORD, uint64_t);
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  void (*v187)(unint64_t, char *, uint64_t);
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  id v198;
  double v199;
  double v200;
  id v201;
  double v202;
  double v203;
  id v204;
  id v205;
  double v206;
  double v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  id v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  _QWORD *v220;
  _QWORD *v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  uint64_t ObjectType;
  char *v226;
  id v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  void *v243;
  char *v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void (*v250)(char *, uint64_t, uint64_t, uint64_t);
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  Swift::String v264;
  uint64_t v265;
  void *v266;
  _OWORD v267[2];
  unint64_t v268;
  unint64_t v269;

  v3 = v2;
  v227 = a1;
  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE700);
  __chkstk_darwin(v5);
  v226 = (char *)&v223 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
  __chkstk_darwin(v7);
  v229 = (char *)&v223 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD650);
  __chkstk_darwin(v9);
  v256 = (char *)&v223 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = type metadata accessor for Artwork(0);
  v230 = *(_QWORD *)(v231 - 8);
  __chkstk_darwin(v231);
  v228 = (char *)&v223 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C8080);
  __chkstk_darwin(v12);
  v233 = (char *)&v223 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = type metadata accessor for Playlist(0);
  v236 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin(v237);
  v240 = (char *)&v223 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1D0);
  __chkstk_darwin(v15);
  v255 = (char *)&v223 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = type metadata accessor for Playlist.Folder.Item(0);
  v257 = *(_QWORD *)(v258 - 8);
  __chkstk_darwin(v258);
  v239 = (char *)&v223 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v241 = (char *)&v223 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE710);
  __chkstk_darwin(v20);
  v22 = (char *)&v223 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8050);
  v24 = __chkstk_darwin(v23);
  v246 = (char *)&v223 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0, v24);
  v247 = *(_QWORD *)(v248 - 8);
  v26 = __chkstk_darwin(v248);
  v245 = (char *)&v223 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for UICellAccessory.DisplayedState(0, v26);
  v260 = *(_QWORD *)(v28 - 8);
  v261 = v28;
  __chkstk_darwin(v28);
  v244 = (char *)&v223 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE720);
  v31 = __chkstk_darwin(v30);
  v259 = (char *)&v223 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = (void (*)(char *, uint64_t, uint64_t, uint64_t))type metadata accessor for UICellAccessory.Placement(0, v31);
  v249 = *((_QWORD *)v250 - 1);
  v33 = __chkstk_darwin(v250);
  v252 = (char *)&v223 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v33);
  v253 = *(_QWORD *)(v254 - 8);
  v35 = __chkstk_darwin(v254);
  v251 = (char *)&v223 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for UICellAccessory(0, v35);
  v37 = *(_QWORD *)(v263 - 8);
  __chkstk_darwin(v263);
  v235 = (char *)&v223 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v232 = (char *)&v223 - v40;
  __chkstk_darwin(v41);
  v234 = (char *)&v223 - v42;
  __chkstk_darwin(v43);
  v242 = (char *)&v223 - v44;
  __chkstk_darwin(v45);
  v238 = (char *)&v223 - v46;
  __chkstk_darwin(v47);
  v49 = (char *)&v223 - v48;
  __chkstk_darwin(v50);
  v52 = (char *)&v223 - v51;
  v54 = __chkstk_darwin(v53);
  v56 = (char *)&v223 - v55;
  v57 = &selRef_resignFirstResponder;
  v58 = a2;
  v59 = objc_msgSend(a2, "_tab", v54);
  sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  v262 = v3;
  if ((static NSObject.== infix(_:_:)(v59, *(_QWORD *)(v3 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_rootTab)) & 1) != 0)
  {
    v60 = *(_QWORD *)(v262
                    + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_cloudLibraryStatus);
    v243 = a2;
    if (v60 >> 30 < 2 || v60 >> 30 == 2 && (unint64_t)(v60 - 2147483651) <= 1)
    {
      v61 = sub_90590();
      v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE740);
      v63 = v252;
      v64 = (uint64_t (**)())&v252[*(int *)(v62 + 48)];
      (*(void (**)(char *, _QWORD, uint64_t))(v260 + 104))(v252, enum case for UICellAccessory.DisplayedState.always(_:), v261);
      *v64 = static MPMediaLibraryFilteringOptions.none.getter;
      v64[1] = 0;
      (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v249 + 104))(v63, enum case for UICellAccessory.Placement.trailing(_:), v250);
      v65 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v66 = v259;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v259, 1, 1, v65);
      v67 = v251;
      UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v61, v63, 2, v66, 0, 2);
      static UICellAccessory.customView(configuration:)(v67);
      (*(void (**)(char *, uint64_t))(v253 + 8))(v67, v254);
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v52, v56, v263);
      v68 = (_QWORD *)sub_1209AC(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      v70 = v68[2];
      v69 = v68[3];
      if (v70 >= v69 >> 1)
        v68 = (_QWORD *)sub_1209AC(v69 > 1, v70 + 1, 1, (unint64_t)v68);
      v68[2] = v70 + 1;
      v71 = v263;
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))((unint64_t)v68+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v70, v52, v263);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v56, v71);
      v58 = v243;
    }
    else
    {
      v68 = _swiftEmptyArrayStorage;
    }
    v72 = *(_QWORD *)(v262
                    + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_sharedLibrariesController);
    KeyPath = swift_getKeyPath(&unk_105FDA8);
    v74 = swift_getKeyPath(&unk_105FDD0);
    static Published.subscript.getter(&v264, v72, KeyPath, v74);
    swift_release(KeyPath);
    swift_release(v74);
    countAndFlagsBits = v264._countAndFlagsBits;
    if ((unint64_t)v264._countAndFlagsBits >> 62)
    {
      if (v264._countAndFlagsBits < 0)
        v222 = v264._countAndFlagsBits;
      else
        v222 = v264._countAndFlagsBits & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v76 = _CocoaArrayWrapper.endIndex.getter(v222);
      swift_bridgeObjectRelease(countAndFlagsBits);
    }
    else
    {
      v76 = *(_QWORD *)((char *)&dword_10 + (v264._countAndFlagsBits & 0xFFFFFFFFFFFFF8));
    }
    v224 = v59;
    swift_bridgeObjectRelease(countAndFlagsBits);
    if (v76)
    {
      v77 = sub_90EA8();
      v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE740);
      v79 = v252;
      v80 = (uint64_t (**)())&v252[*(int *)(v78 + 48)];
      v81 = enum case for UICellAccessory.DisplayedState.always(_:);
      v82 = *(void (**)(char *, uint64_t, uint64_t))(v260 + 104);
      v82(v252, enum case for UICellAccessory.DisplayedState.always(_:), v261);
      *v80 = static MPMediaLibraryFilteringOptions.none.getter;
      v80[1] = 0;
      (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v249 + 104))(v79, enum case for UICellAccessory.Placement.trailing(_:), v250);
      v83 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      v84 = v259;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v259, 1, 1, v83);
      v85 = v251;
      UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v77, v79, 2, v84, 0, 2);
      static UICellAccessory.customView(configuration:)(v85);
      (*(void (**)(char *, uint64_t))(v253 + 8))(v85, v254);
      v86 = v238;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v238, v49, v263);
      if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
        v68 = (_QWORD *)sub_1209AC(0, v68[2] + 1, 1, (unint64_t)v68);
      v88 = v68[2];
      v87 = v68[3];
      if (v88 >= v87 >> 1)
        v68 = (_QWORD *)sub_1209AC(v87 > 1, v88 + 1, 1, (unint64_t)v68);
      v68[2] = v88 + 1;
      v89 = v86;
      v90 = v263;
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))((unint64_t)v68+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v88, v89, v263);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v90);
      v58 = v243;
      v91 = v260;
    }
    else
    {
      v81 = enum case for UICellAccessory.DisplayedState.always(_:);
      v91 = v260;
      v82 = *(void (**)(char *, uint64_t, uint64_t))(v260 + 104);
    }
    v92 = v244;
    v93 = v261;
    v82(v244, v81, v261);
    v94 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
    v95 = v246;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v246, 1, 1, v94);
    v96 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v97 = v259;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v259, 1, 1, v96);
    v98 = v245;
    UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v95, 2, v97, 0);
    v99 = v242;
    static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v92, v98, 0, 0);
    (*(void (**)(char *, uint64_t))(v247 + 8))(v98, v248);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
    if ((swift_isUniquelyReferenced_nonNull_native(v68) & 1) == 0)
      v68 = (_QWORD *)sub_1209AC(0, v68[2] + 1, 1, (unint64_t)v68);
    v57 = &selRef_resignFirstResponder;
    v101 = v68[2];
    v100 = v68[3];
    if (v101 >= v100 >> 1)
      v68 = (_QWORD *)sub_1209AC(v100 > 1, v101 + 1, 1, (unint64_t)v68);
    v68[2] = v101 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))((unint64_t)v68+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v101, v99, v263);
    _UITabSidebarItem._accessories.setter(v68);
    v59 = v224;
  }
  v102 = (char *)v59;
  v103 = objc_msgSend(v102, "_identifier");
  v264._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
  v264._object = v104;
  *(_QWORD *)&v267[0] = v264._countAndFlagsBits;
  *((_QWORD *)&v267[0] + 1) = v104;
  v268 = 0xD00000000000001BLL;
  v269 = 0x80000000010C4FB0;
  v105 = type metadata accessor for Locale(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v22, 1, 1, v105);
  v106 = sub_55EA0();
  swift_bridgeObjectRetain();
  v107 = StringProtocol.range<A>(of:options:range:locale:)(&v268, 0, 0, 0, 1, v22, &type metadata for String, &type metadata for String, v106, v106);
  v109 = v108;
  v111 = v110;
  sub_56024((uint64_t)v22, (uint64_t *)&unk_14AE710);
  swift_bridgeObjectRelease(v269);
  swift_bridgeObjectRelease(*((_QWORD *)&v267[0] + 1));
  if ((v111 & 1) != 0)
  {
    object = v264._object;

    v114 = swift_bridgeObjectRelease(object).n128_u64[0];
LABEL_27:
    v116 = v258;
    v117 = v257;
    v118 = (uint64_t)v256;
    goto LABEL_28;
  }
  String.removeSubrange(_:)(v107, v109);
  v112 = v264._object;
  v113 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_133AEE0, v264);

  v114 = swift_bridgeObjectRelease(v112).n128_u64[0];
  if (v113)
    goto LABEL_27;
  v243 = v58;
  v172 = sub_90928();
  v173 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE740);
  v174 = v252;
  v175 = (uint64_t (**)())&v252[*(int *)(v173 + 48)];
  v176 = *(void (**)(char *, _QWORD, uint64_t))(v260 + 104);
  v176(v252, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v261);
  *v175 = static MPMediaLibraryFilteringOptions.none.getter;
  v175[1] = 0;
  (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v249 + 104))(v174, enum case for UICellAccessory.Placement.trailing(_:), v250);
  v177 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v178 = v259;
  v250 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56);
  v250(v259, 1, 1, v177);
  v179 = v251;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)(v172, v174, 2, v178, 0, 2);
  v180 = v234;
  static UICellAccessory.customView(configuration:)(v179);
  (*(void (**)(char *, uint64_t))(v253 + 8))(v179, v254);
  v181 = v232;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v232, v180, v263);
  v182 = sub_1209AC(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v184 = *(_QWORD *)(v182 + 16);
  v183 = *(_QWORD *)(v182 + 24);
  v242 = v102;
  if (v184 >= v183 >> 1)
    v182 = sub_1209AC(v183 > 1, v184 + 1, 1, v182);
  *(_QWORD *)(v182 + 16) = v184 + 1;
  v185 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v186 = *(_QWORD *)(v37 + 72);
  v187 = *(void (**)(unint64_t, char *, uint64_t))(v37 + 32);
  v187(v182 + v185 + v186 * v184, v181, v263);
  v188 = v244;
  v189 = v261;
  v176(v244, enum case for UICellAccessory.DisplayedState.always(_:), v261);
  v190 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
  v191 = v246;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 56))(v246, 1, 1, v190);
  v192 = v259;
  v250(v259, 1, 1, v177);
  v193 = v245;
  UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v191, 2, v192, 0);
  static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v188, v193, 0, 0);
  (*(void (**)(char *, uint64_t))(v247 + 8))(v193, v248);
  (*(void (**)(char *, uint64_t))(v260 + 8))(v188, v189);
  v195 = *(_QWORD *)(v182 + 16);
  v194 = *(_QWORD *)(v182 + 24);
  v118 = (uint64_t)v256;
  if (v195 >= v194 >> 1)
    v182 = sub_1209AC(v194 > 1, v195 + 1, 1, v182);
  v116 = v258;
  *(_QWORD *)(v182 + 16) = v195 + 1;
  v196 = v182 + v185 + v195 * v186;
  v197 = v263;
  v187(v196, v235, v263);
  v58 = v243;
  _UITabSidebarItem._accessories.setter(v182);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v234, v197);
  v117 = v257;
  v102 = v242;
  v57 = &selRef_resignFirstResponder;
LABEL_28:
  v119 = objc_msgSend(v58, v57[56], *(double *)&v114);
  if (qword_14AB660 != -1)
    swift_once(&qword_14AB660, sub_66A090);
  v120 = objc_getAssociatedObject(v119, (const void *)qword_14D8738);
  if (v120)
  {
    v121 = v120;
    _bridgeAnyObjectToAny(_:)(v267, v120);
    swift_unknownObjectRelease(v121);
  }
  else
  {
    memset(v267, 0, sizeof(v267));
  }
  sub_5C090((uint64_t)v267, (uint64_t)&v264, (uint64_t *)&unk_14AD640);

  if (!v265)
  {
    sub_56024((uint64_t)&v264, (uint64_t *)&unk_14AD640);
    v122 = (uint64_t)v255;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v255, 1, 1, v116);
    goto LABEL_41;
  }
  v122 = (uint64_t)v255;
  v123 = swift_dynamicCast(v255, &v264, (char *)&type metadata for Any + 8, v116, 6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v122, v123 ^ 1u, 1, v116);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v122, 1, v116) == 1)
  {
LABEL_41:

    sub_56024(v122, &qword_14AE1D0);
    return;
  }
  v124 = v241;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v241, v122, v116);
  v125 = v239;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v239, v124, v116);
  if ((*(unsigned int (**)(char *, uint64_t))(v117 + 88))(v125, v116) != enum case for Playlist.Folder.Item.playlist(_:))
  {

    v171 = *(void (**)(char *, uint64_t))(v117 + 8);
    v171(v124, v116);
    v171(v125, v116);
    return;
  }
  (*(void (**)(char *, uint64_t))(v117 + 96))(v125, v116);
  v126 = (*(double (**)(char *, char *, uint64_t))(v236 + 32))(v240, v125, v237);
  v127 = type metadata accessor for UIListContentConfiguration(0, v126);
  v128 = swift_allocBox(v127);
  v130 = v129;
  v243 = v58;
  _UITabSidebarItem._contentConfiguration.getter(&v264);
  v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE730);
  v132 = (uint64_t)v233;
  v133 = swift_dynamicCast(v233, &v264, v131, v127, 6);
  v134 = *(_QWORD *)(v127 - 8);
  v135 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56);
  if (!v133)
  {
    v135(v132, 1, 1, v127);
    goto LABEL_49;
  }
  v135(v132, 0, 1, v127);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v132, 1, v127) == 1)
  {
LABEL_49:

    (*(void (**)(char *, uint64_t))(v236 + 8))(v240, v237);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v241, v116);
    sub_56024(v132, &qword_14C8080);
    swift_deallocBox(v128);
    return;
  }
  v242 = v102;
  v136 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v130, v132, v127);
  v137 = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v136);
  v139.n128_f64[0] = static UIListContentConfiguration.ImageProperties.standardDimension.getter(v138);
  v140 = v139.n128_f64[0];
  v141 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v264, v139);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(v137, v140);
  v141(&v264, 0);
  v142 = (void *)objc_opt_self(UIFontMetrics);
  v143 = objc_msgSend(v142, "defaultMetrics");
  objc_msgSend(v143, "scaledValueForValue:", 28.0);
  v145 = v144;
  objc_msgSend(v143, "scaledValueForValue:", 28.0);

  v147 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v264, v146);
  v148 = (void (*)(_OWORD *, _QWORD))UIListContentConfiguration.ImageProperties.reservedLayoutSize.modify(v267);
  *v149 = v145;
  v148(v267, 0);
  v147(&v264, 0);
  v150 = objc_msgSend(v142, "defaultMetrics");
  objc_msgSend(v150, "scaledValueForValue:", 28.0);
  v152 = v151;
  objc_msgSend(v150, "scaledValueForValue:", 28.0);
  v154 = v153;

  v156 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v264, v155);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(v152, v154);
  v156(&v264, 0);
  v157 = (void *)UIView.Border.artwork.unsafeMutableAddressor()[2];
  v158 = v157;
  v160 = (double (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v264, v159);
  UIListContentConfiguration.ImageProperties.strokeColor.setter(v157);
  v161.n128_f64[0] = v160(&v264, 0);
  v162 = (double (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v264, v161);
  UIListContentConfiguration.ImageProperties.strokeWidth.setter(0.0);
  v163.n128_f64[0] = v162(&v264, 0);
  v164 = (void (*)(Swift::String *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v264, v163);
  UIListContentConfiguration.ImageProperties.cornerRadius.setter(0.0);
  v164(&v264, 0);
  v165 = v241;
  v166 = sub_1AB0A4();
  UIListContentConfiguration.image.setter(v166);
  _s8MusicKit8PlaylistV0A11ApplicationE12storyArtworkAA0F0VSgvg_0();
  v167 = v230;
  v168 = v231;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(v118, 1, v231) == 1)
  {
    sub_56024(v118, (uint64_t *)&unk_14AD650);
    v169 = v128;
    v170 = v242;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v167 + 32))(v228, v118, v168);
    v198 = objc_msgSend(v142, "defaultMetrics");
    objc_msgSend(v198, "scaledValueForValue:", 28.0);
    v200 = v199;
    objc_msgSend(v198, "scaledValueForValue:", 28.0);

    v201 = objc_msgSend(v142, "defaultMetrics");
    objc_msgSend(v201, "scaledValueForValue:", 28.0);
    objc_msgSend(v201, "scaledValueForValue:", 28.0);
    v203 = v202;

    v204 = v227;
    v205 = objc_msgSend(v227, "traitCollection");
    objc_msgSend(v205, "displayScale");
    v207 = v206;

    v208 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56))(v229, 1, 1, v208);
    v209 = type metadata accessor for Artwork.ImageFormat(0);
    v210 = (uint64_t)v226;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v226, 1, 1, v209);
    v211 = *(_QWORD *)(v262 + OBJC_IVAR____TtCC16MusicApplication16TabBarController20LibraryTabDataSource_artworkCache);
    v212 = sub_4DD24((unint64_t *)&qword_14AD610, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_107A160);
    v213 = (_QWORD *)swift_allocObject(&unk_1342758, 48, 7);
    v213[2] = v128;
    v213[3] = v204;
    v169 = v128;
    v170 = v242;
    v214 = ObjectType;
    v213[4] = v242;
    v213[5] = v214;
    v215 = v170;
    swift_retain(v211);
    swift_retain(v169);
    v216 = v204;
    v217 = (uint64_t)v229;
    v218 = v212;
    v219 = v228;
    Artwork.loadImage(width:height:pixelLength:cropStyle:format:cacheOwner:completion:)(v229, v210, v211, v218, sub_9731C, v213, v200, v203, 1.0 / v207);
    sub_56024(v210, (uint64_t *)&unk_14AE700);
    sub_56024(v217, &qword_14AD680);
    (*(void (**)(char *, uint64_t))(v230 + 8))(v219, v231);
    swift_release(v211);
    v220 = v213;
    v165 = v241;
    swift_release(v220);
  }
  swift_beginAccess(v130, v267, 0, 0);
  v265 = v127;
  v266 = &protocol witness table for UIListContentConfiguration;
  v221 = __swift_allocate_boxed_opaque_existential_1Tm(&v264);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v134 + 16))(v221, v130, v127);
  _UITabSidebarItem._contentConfiguration.setter(&v264);

  (*(void (**)(char *, uint64_t))(v236 + 8))(v240, v237);
  (*(void (**)(char *, uint64_t))(v257 + 8))(v165, v258);
  swift_release(v169);
}

id sub_969D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  char *v41;
  double v42;
  id result;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  double v63;
  id v64;
  id v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void **aBlock;
  uint64_t v83;
  void *v84;
  void *v85;
  void *v86;
  uint64_t v87;
  _OWORD v88[3];

  v75 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0);
  v76 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v76 + 64);
  __chkstk_darwin(v3);
  v77 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v66 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6C8);
  __chkstk_darwin(v8);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v11);
  v81 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v66 - v17;
  v19 = type metadata accessor for Playlist.Folder.Item(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  __chkstk_darwin(v19);
  v74 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v73 = (char *)&v66 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v66 - v25;
  if (qword_14AB660 != -1)
    swift_once(&qword_14AB660, sub_66A090);
  v78 = a2;
  v27 = objc_getAssociatedObject(a2, (const void *)qword_14D8738);
  if (v27)
  {
    v28 = v27;
    _bridgeAnyObjectToAny(_:)(v88, v27);
    swift_unknownObjectRelease(v28);
  }
  else
  {
    memset(v88, 0, 32);
  }
  sub_5C090((uint64_t)v88, (uint64_t)&aBlock, (uint64_t *)&unk_14AD640);
  if (!v85)
  {
    sub_56024((uint64_t)&aBlock, (uint64_t *)&unk_14AD640);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_11;
  }
  v79 = v7;
  v29 = swift_dynamicCast(v18, &aBlock, (char *)&type metadata for Any + 8, v19, 6);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v30(v18, v29 ^ 1u, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
LABEL_11:
    sub_56024((uint64_t)v18, &qword_14AE1D0);
    return 0;
  }
  v71 = v4;
  v72 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v72(v26, v18, v19);
  v31 = sub_8F138();
  v32 = v26;
  v33 = RequestResponse.Controller.revision.getter();
  swift_release(v31);
  sub_5C238(v33 + *(_QWORD *)(*(_QWORD *)v33 + 96), (uint64_t)v10, &qword_14AE6C8);
  swift_release(v33);
  sub_5BDB8((uint64_t)v10, v81, _s9PlaylistsVMa);
  sub_56024((uint64_t)v10, &qword_14AE6C8);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E8);
  v35 = *(unsigned __int8 *)(v20 + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = v36 + *(_QWORD *)(v20 + 72);
  v69 = v35 | 7;
  v38 = swift_allocObject(v34, v37, v35 | 7);
  *(_OWORD *)(v38 + 16) = xmmword_105B360;
  v70 = v36;
  v39 = v38 + v36;
  v68 = v20;
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
  v41 = v32;
  v40(v39, v32, v19);
  v30(v15, 1, 1, v19);
  sub_ACE018(v38, (uint64_t)v15, (uint64_t)v79);
  sub_56024((uint64_t)v15, &qword_14AE1D0);
  *(_QWORD *)&v42 = swift_bridgeObjectRelease(v38).n128_u64[0];
  result = objc_msgSend(v78, "_identifier", v42);
  v78 = result;
  if (result)
  {
    v44 = v73;
    v40((uint64_t)v73, v32, v19);
    v45 = (v35 + 16) & ~v35;
    v46 = v69;
    v66 = swift_allocObject(&unk_1342690, v45 + v21, v69);
    v72((char *)(v66 + v45), v44, v19);
    v47 = swift_allocObject(&unk_1342668, 24, 7);
    v48 = v41;
    v67 = v41;
    v49 = v47;
    swift_unknownObjectWeakInit(v47 + 16, v80);
    v50 = swift_allocObject(&unk_13426B8, 24, 7);
    swift_unknownObjectWeakInit(v50 + 16, v75);
    v51 = v74;
    v40((uint64_t)v74, v48, v19);
    v52 = v77;
    sub_5C238((uint64_t)v79, v77, &qword_14AE6E0);
    v53 = v70;
    v54 = *(unsigned __int8 *)(v76 + 80);
    v55 = (v70 + v21 + v54) & ~v54;
    v56 = swift_allocObject(&unk_13426E0, v55 + v71, v46 | v54);
    *(_QWORD *)(v56 + 16) = v49;
    *(_QWORD *)(v56 + 24) = v50;
    v72((char *)(v56 + v53), v51, v19);
    sub_5C090(v52, v56 + v55, &qword_14AE6E0);
    v57 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v58 = v66;
    v86 = sub_9714C;
    v87 = v66;
    aBlock = _NSConcreteStackBlock;
    v83 = 1107296256;
    v84 = sub_873228;
    v85 = &block_descriptor_6;
    v59 = _Block_copy(&aBlock);
    v60 = v87;
    swift_retain(v49);
    swift_retain(v50);
    swift_retain(v58);
    swift_release(v60);
    v86 = sub_97258;
    v87 = v56;
    aBlock = _NSConcreteStackBlock;
    v83 = 1107296256;
    v84 = sub_B88614;
    v85 = &block_descriptor_29;
    v61 = _Block_copy(&aBlock);
    v62 = v87;
    swift_retain(v56);
    *(_QWORD *)&v63 = swift_release(v62).n128_u64[0];
    v64 = v78;
    v65 = objc_msgSend(v57, "configurationWithIdentifier:previewProvider:actionProvider:", v78, v59, v61, v63);

    swift_release(v58);
    swift_release(v56);
    _Block_release(v61);
    _Block_release(v59);
    sub_56024((uint64_t)v79, &qword_14AE6E0);
    sub_5C0DC(v81, _s9PlaylistsVMa);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v19);
    swift_release(v49);
    swift_release(v50);
    return v65;
  }
  __break(1u);
  return result;
}

uint64_t sub_970EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_9714C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Folder.Item(0) - 8) + 80);
  return sub_91824(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_97178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for Playlist.Folder.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v10 = swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v10);
  v11 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

unint64_t sub_97258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Playlist.Folder.Item(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AE6E0) - 8) + 80);
  return sub_91910(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, v1 + ((v5 + v6) & ~v6));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_6(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_972E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_9731C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_91494(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

Class sub_97330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_91110(a1, a2, v2);
}

Class sub_97338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_90C24(a1, a2, v2);
}

double sub_97340(__int16 a1)
{
  uint64_t v1;

  return sub_90D88(a1 & 0x1FF, v1);
}

void sub_9734C(void *a1)
{
  uint64_t v1;

  sub_9063C(a1, v1);
}

void sub_97354(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_8F3D0(a1, v2, a2);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_97384()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_973B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_8EBD8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_973B8()
{
  unint64_t result;

  result = qword_14AE778;
  if (!qword_14AE778)
  {
    result = swift_getWitnessTable(&unk_105FFA8, &_s19TabElementEditErrorON);
    atomic_store(result, (unint64_t *)&qword_14AE778);
  }
  return result;
}

void sub_973FC(void *a1)
{
  uint64_t v1;

  sub_8D4CC(a1, v1);
}

uint64_t sub_97404(id *a1)
{
  return sub_8DCDC(a1) & 1;
}

uint64_t sub_97420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_97468(uint64_t a1)
{
  uint64_t v1;

  sub_8DAF4(a1, v1);
}

uint64_t sub_97470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v6, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease(v6[1]);
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      break;
    case 2u:

      v13 = (char *)v6[2];
      goto LABEL_17;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14))
        (*(void (**)(id *, uint64_t))(v15 + 8))(v6, v14);
      v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v6 + v16[5] + 8));
      v17 = (char *)v6 + v16[6];
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = v16[7];
      goto LABEL_21;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v6 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_21:
      v26 = (id *)((char *)v6 + v20);
      if (*v26)
        swift_release(v26[1]);
      break;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v6, v25);
      v13 = *(char **)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v13 != (_BYTE *)&dword_0 + 1)
LABEL_17:
        swift_bridgeObjectRelease(v13);
      break;
    default:
      break;
  }
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_97778()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_9779C()
{
  sub_8CBDC();
}

uint64_t getEnumTagSinglePayload for JSPlaybackIntent.ShuffleMode(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s19TabElementEditErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_97850 + 4 * byte_105FBB6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_97870 + 4 * byte_105FBBB[v4]))();
}

_BYTE *sub_97850(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_97870(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_97878(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_97880(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_97888(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_97890(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s19TabElementEditErrorOMa()
{
  return &_s19TabElementEditErrorON;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TransportControlsController.ButtonConfiguration.Action(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_97994 + 4 * byte_105FBC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_979C8 + 4 * byte_105FBC0[v4]))();
}

uint64_t sub_979C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_979D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x979D8);
  return result;
}

uint64_t sub_979E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x979ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_979F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_979F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_97A04(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_97A0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierOMa()
{
  return &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON;
}

uint64_t *sub_97A24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[3];
      a1[3] = v9;
      (**(void (***)(uint64_t *, uint64_t *))(v9 - 8))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_97B0C(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Playlist.Folder.Item(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else if (!(_DWORD)result)
  {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return result;
}

_QWORD *sub_97B64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[3];
    a1[3] = v7;
    (**(void (***)(_QWORD *, _QWORD *))(v7 - 8))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *sub_97C24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, _s20LibraryTabDataSourceC5ErrorOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = a2[3];
      a1[3] = v7;
      (**(void (***)(_QWORD *, _QWORD *))(v7 - 8))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_97CFC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist.Folder.Item(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_97D88(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, _s20LibraryTabDataSourceC5ErrorOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist.Folder.Item(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntentDescriptor.IntentType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PlaybackIntentDescriptor.IntentType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_97E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_97E58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = " ";
  result = type metadata accessor for Playlist.Folder.Item(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

unint64_t sub_97ECC()
{
  unint64_t result;

  result = qword_14AE868;
  if (!qword_14AE868)
  {
    result = swift_getWitnessTable(&unk_105FEF0, &_s20LibraryTabDataSourceC29PlaylistsTabElementIdentifierON);
    atomic_store(result, (unint64_t *)&qword_14AE868);
  }
  return result;
}

unint64_t sub_97F14()
{
  unint64_t result;

  result = qword_14AE870;
  if (!qword_14AE870)
  {
    result = swift_getWitnessTable(&unk_105FF80, &_s19TabElementEditErrorON);
    atomic_store(result, (unint64_t *)&qword_14AE870);
  }
  return result;
}

uint64_t sub_97F90()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1060090);
  v2 = swift_getKeyPath(&unk_10600B8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_98000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;
  uint64_t v11;

  v4[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14EA0D0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE9E8);
  v4[7] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[8] = v7;
  v8 = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[9] = v8;
  v4[10] = type metadata accessor for MainActor(0);
  v4[11] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v4[12] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE9D8);
  *v10 = v4;
  v10[1] = sub_980E8;
  return MusicLibraryRequest.response()(v8, v11);
}

uint64_t sub_980E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 80), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_98264;
  else
    v6 = sub_9816C;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_9816C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  MusicLibraryResponse.items.getter(v4);
  swift_retain(v6);
  v7 = sub_986D4(v5, v6);
  swift_release(v6);
  KeyPath = swift_getKeyPath(&unk_1060090);
  v9 = swift_getKeyPath(&unk_10600B8);
  *(_QWORD *)(v0 + 32) = v7;
  swift_retain(v6);
  static Published.subscript.setter(v0 + 32, v6, KeyPath, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release(v1);
  v10 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_98264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  if (qword_14AA8E8 != -1)
    swift_once(&qword_14AA8E8, sub_98BC0);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_157F5A0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  if (v6)
  {
    v17 = *(_QWORD *)(v0 + 88);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v18 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to load library playlists with error: %s.", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v7);

    v14 = v17;
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 104));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

    v14 = v8;
  }
  swift_release(v14);
  v15 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9847C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCO16MusicApplication14ClarityUIMusic16PlaylistsManager__playlists;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE9D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCO16MusicApplication14ClarityUIMusic16PlaylistsManager_preferences));
  v3 = v0 + OBJC_IVAR____TtCO16MusicApplication14ClarityUIMusic16PlaylistsManager_playlistsRequest;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE9D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_9850C()
{
  return _s16PlaylistsManagerCMa(0);
}

uint64_t _s16PlaylistsManagerCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_14AE920;
  if (!qword_14AE920)
    return swift_getSingletonMetadata(a1, &_s16PlaylistsManagerCMn);
  return result;
}

void sub_98550(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_985E4(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_9863C(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_985E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14AE930)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AE938);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14AE930);
  }
}

void sub_9863C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14AE940)
  {
    v2 = type metadata accessor for Playlist(255);
    v3 = type metadata accessor for MusicLibraryRequest(a1, v2, &protocol witness table for Playlist);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14AE940);
  }
}

void *sub_98698()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_986A4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

char *sub_986D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  void (*v29)(_QWORD *, _QWORD);
  uint64_t v30;
  void (*v31)(char *);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[4];
  char *v65;

  v59 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14EA0D0);
  v62 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v61 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Playlist(0);
  v51 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v58 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v60 = (char *)&v51 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v51 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C85A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = (char *)_swiftEmptyArrayStorage;
  v13 = sub_98B00(&qword_14AE9F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v2, v13);
  v14 = &v12[*(int *)(v10 + 36)];
  v15 = OBJC_IVAR____TtCO16MusicApplication14ClarityUIMusic16PlaylistsManager_preferences;
  v16 = sub_98B00(&qword_14BB000, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v17 = *(_QWORD *)v14;
  v18 = v2;
  dispatch thunk of Collection.endIndex.getter(v2, v16);
  v19 = (char *)_swiftEmptyArrayStorage;
  if (v17 != v64[0])
  {
    v55 = v15;
    v56 = v14;
    v57 = v9;
    v20 = v61;
    v21 = v62;
    v22 = v51;
    v23 = v60;
    v53 = v12;
    v54 = v16;
    v52 = v18;
    do
    {
      v29 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v64, v14, v18, v16);
      v30 = v22;
      v31 = *(void (**)(char *))(v22 + 16);
      v32 = v63;
      v31(v23);
      v29(v64, 0);
      v33 = v14;
      v34 = v52;
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v20, v12, v52);
      dispatch thunk of Collection.formIndex(after:)(v33, v34, v16);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v34);
      v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v36 = v57;
      v35(v57, v23, v32);
      v37 = *(_QWORD *)(v59 + v55);
      KeyPath = swift_getKeyPath(&unk_10600D8);
      v39 = swift_getKeyPath(&unk_1060100);
      swift_retain(v37);
      static Published.subscript.getter(v64, v40, KeyPath, v39);
      swift_release(v37);
      swift_release(KeyPath);
      swift_release(v39);
      v41 = v64[0];
      v43 = Playlist.id.getter(v42);
      LOBYTE(KeyPath) = sub_A32B98(v43, v44, v41);
      swift_bridgeObjectRelease();
      v45 = swift_bridgeObjectRelease();
      if ((KeyPath & 1) != 0)
      {
        v46 = v30;
        ((void (*)(char *, char *, uint64_t, __n128))v35)(v58, v36, v32, v45);
        v47 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native(v65) & 1) == 0)
        {
          sub_123C3C(0, *((_QWORD *)v47 + 2) + 1, 1);
          v47 = v65;
        }
        v24 = v53;
        v49 = *((_QWORD *)v47 + 2);
        v48 = *((_QWORD *)v47 + 3);
        v25 = v56;
        if (v49 >= v48 >> 1)
        {
          sub_123C3C(v48 > 1, v49 + 1, 1);
          v47 = v65;
        }
        *((_QWORD *)v47 + 2) = v49 + 1;
        v22 = v46;
        v35(&v47[((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v49], v58, v63);
        v65 = v47;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v32);
        v22 = v30;
        v24 = v53;
        v25 = v56;
      }
      v26 = *(_QWORD *)v25;
      v27 = v34;
      v12 = v24;
      v18 = v34;
      v14 = v25;
      v16 = v54;
      dispatch thunk of Collection.endIndex.getter(v27, v54);
      v28 = v26 == v64[0];
      v20 = v61;
      v21 = v62;
      v23 = v60;
    }
    while (!v28);
    v19 = v65;
  }
  sub_98B4C((uint64_t)v12);
  return v19;
}

uint64_t sub_98B00(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14EA0D0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_98B4C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C85A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ClarityUIMusic()
{
  return &type metadata for ClarityUIMusic;
}

void sub_98B9C()
{
  qword_157F590 = 0x404F800000000000;
}

void sub_98BB0()
{
  qword_157F598 = 0x4044000000000000;
}

uint64_t sub_98BC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_157F5A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_157F5A0);
  v1 = (uint64_t *)String.musicSubsystem.unsafeMutableAddressor();
  v2 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)(v2, v3, 0x5579746972616C43, 0xEE00636973754D49);
}

void sub_98C4C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  void **v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _QWORD v42[7];
  _BYTE v43[72];
  _OWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  _BYTE v48[48];
  uint64_t v49;
  __int128 v50;
  _BYTE v51[24];
  uint64_t v52;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA530);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1 + 24, (uint64_t)v51, (uint64_t *)&unk_14AD640);
  if (!v52)
  {
    sub_56024((uint64_t)v51, (uint64_t *)&unk_14AD640);
    v20 = _s23MusicPerformanceContextVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    goto LABEL_9;
  }
  v7 = _s23MusicPerformanceContextVMa(0);
  v8 = swift_dynamicCast(v6, v51, (char *)&type metadata for Any + 8, v7, 6);
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, v8 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
  {
LABEL_9:
    sub_56024((uint64_t)v6, (uint64_t *)&unk_14BA530);
    memset(v48, 0, sizeof(v48));
    v49 = 0;
    v50 = xmmword_1060130;
    goto LABEL_10;
  }
  sub_5C238((uint64_t)v6, (uint64_t)v48, (uint64_t *)&unk_14AD380);
  sub_99718((uint64_t)v6);
  if ((_QWORD)v50 == 1)
  {
LABEL_10:
    sub_56024((uint64_t)v48, (uint64_t *)&unk_14AD380);
    return;
  }
  sub_648A4((uint64_t)v48, (uint64_t)v51);
  v10 = &v2[OBJC_IVAR____TtC11MusicJSCore19JSPresentationSegue_presentationStyle];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicJSCore19JSPresentationSegue_presentationStyle], v47, 0, 0);
  v11 = *v10;
  v12 = (void **)&v2[OBJC_IVAR____TtC11MusicJSCore19JSPresentationSegue_componentController];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicJSCore19JSPresentationSegue_componentController], &v46, 0, 0);
  v13 = *v12;
  if (*v12
    && (v14 = type metadata accessor for JSAlertComponentController(0),
        v15 = swift_dynamicCastClass(v13, v14),
        v16 = v13,
        v15)
    && (v17 = v16, (v18 = (void *)sub_990C8((uint64_t)v51)) != 0))
  {
    v19 = v18;
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v18, 0, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
    sub_56060((uint64_t)v51);

  }
  else
  {
    v21 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for JSDrivenViewController(0)), "init");
    v22 = v21;
    if (v11)
    {
      v23 = &v21[OBJC_IVAR____TtC16MusicApplication22JSDrivenViewController_prefersCancelButton];
      swift_beginAccess(&v21[OBJC_IVAR____TtC16MusicApplication22JSDrivenViewController_prefersCancelButton], &v40, 1, 0);
      v24 = *v23;
      *v23 = 1;
      if ((v24 & 1) == 0)
        sub_118E60();
    }
    JSDrivenViewController.configure(presentationSegue:)(v2);
    sub_6087C((uint64_t)v51, (uint64_t)v48);
    sub_99754(a1, v44);
    sub_6087C((uint64_t)v48, (uint64_t)v43);
    sub_99754((uint64_t)v44, v42);
    v25 = swift_allocObject(&unk_1342B20, 160, 7);
    *(_BYTE *)(v25 + 16) = v11;
    *(_QWORD *)(v25 + 24) = v22;
    sub_648A4((uint64_t)v48, v25 + 32);
    *(_QWORD *)(v25 + 152) = v45;
    *(_OWORD *)(v25 + 136) = v44[2];
    v26 = v44[0];
    *(_OWORD *)(v25 + 120) = v44[1];
    *(_OWORD *)(v25 + 104) = v26;
    if (v22[OBJC_IVAR____TtC16MusicApplication22JSDrivenViewController_isPreparingContentViewController] == 1)
    {
      v27 = swift_allocObject(&unk_1342B48, 32, 7);
      *(_QWORD *)(v27 + 16) = sub_99810;
      *(_QWORD *)(v27 + 24) = v25;
      v28 = &v22[OBJC_IVAR____TtC16MusicApplication22JSDrivenViewController_contentViewControllerPreparationCompletionHandlers];
      swift_beginAccess(&v22[OBJC_IVAR____TtC16MusicApplication22JSDrivenViewController_contentViewControllerPreparationCompletionHandlers], v41, 33, 0);
      v29 = *(_QWORD **)v28;
      v30 = v22;
      swift_retain(v25);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
      *(_QWORD *)v28 = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v29 = sub_11FE8C(0, v29[2] + 1, 1, v29);
        *(_QWORD *)v28 = v29;
      }
      v32 = v29[2];
      v33 = v29[3];
      v34 = v32 + 1;
      if (v32 >= v33 >> 1)
      {
        v36 = v29;
        v37 = v29[2];
        v38 = sub_11FE8C((_QWORD *)(v33 > 1), v32 + 1, 1, v36);
        v32 = v37;
        v29 = v38;
        *(_QWORD *)v28 = v38;
      }
      v29[2] = v34;
      v35 = &v29[2 * v32];
      v35[4] = sub_62604;
      v35[5] = v27;
      swift_endAccess(v41);
    }
    else
    {
      sub_994E4(v11, (uint64_t)v22);
    }

    sub_56060((uint64_t)v51);
    swift_release(v25);
    sub_56060((uint64_t)v43);
    sub_56270((uint64_t)v42);
  }
}

uint64_t sub_990C8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t i;
  char *v24;
  char *v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  _QWORD aBlock[5];
  uint64_t v40;
  _BYTE v41[72];
  char v42[24];
  char v43[24];
  char v44[24];
  char v45[24];
  char v46[24];
  char v47[32];

  v1 = JSComponentController.viewModelKind.getter();
  if ((~v1 & 0xF000000000000007) == 0)
    return 0;
  v3 = v1;
  JSViewModelKind.innerViewModel.getter(v1);
  v5 = v4;
  sub_99848(v3);
  v6 = type metadata accessor for JSAlertViewModel();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
  {

    return 0;
  }
  v8 = v7;
  v9 = (_QWORD *)(v7 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_title);
  swift_beginAccess(v7 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_title, v47, 0, 0);
  v10 = v9[1];
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = *v9 & 0xFFFFFFFFFFFFLL;
  if (v11)
    swift_bridgeObjectRetain();
  else
    v10 = 0;
  v12 = (_QWORD *)(v8 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_message);
  swift_beginAccess(v8 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_message, v46, 0, 0);
  v13 = v12[1];
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = *v12 & 0xFFFFFFFFFFFFLL;
  if (v14)
    swift_bridgeObjectRetain();
  else
    v13 = 0;
  v15 = (unsigned __int8 *)(v8 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_alertStyle);
  swift_beginAccess(v8 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_alertStyle, v45, 0, 0);
  v16 = ~*v15 & 1;
  if (v10)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_17:
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  else
  {
    v17 = 0;
    if (v13)
      goto LABEL_17;
  }
  v18 = 0;
LABEL_20:
  v37 = v5;
  v2 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, v16);

  v19 = (uint64_t *)(v8 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_alertActions);
  swift_beginAccess(v8 + OBJC_IVAR____TtC11MusicJSCore16JSAlertViewModel_alertActions, v44, 0, 0);
  v20 = *v19;
  if (!((unint64_t)*v19 >> 62))
  {
    v21 = *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v21)
      goto LABEL_22;
LABEL_36:

    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  if (v20 < 0)
    v36 = *v19;
  else
    v36 = v20 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v36);
  v21 = result;
  if (!result)
    goto LABEL_36;
LABEL_22:
  if (v21 >= 1)
  {
    for (i = 0; i != v21; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0)
        v24 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v20);
      else
        v24 = (char *)*(id *)(v20 + 8 * i + 32);
      v25 = v24;
      v26 = &v24[OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_title];
      swift_beginAccess(&v24[OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_title], v43, 0, 0);
      v27 = *((_QWORD *)v26 + 1);
      v28 = HIBYTE(v27) & 0xF;
      if ((v27 & 0x2000000000000000) == 0)
        v28 = *(_QWORD *)v26 & 0xFFFFFFFFFFFFLL;
      if (v28)
      {
        v29 = &v25[OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_alertActionStyle];
        swift_beginAccess(&v25[OBJC_IVAR____TtC11MusicJSCore13JSAlertAction_alertActionStyle], v42, 0, 0);
        v30 = *v29;
        sub_6087C(a1, (uint64_t)v41);
        v31 = swift_allocObject(&unk_1342B70, 96, 7);
        *(_QWORD *)(v31 + 16) = v25;
        sub_648A4((uint64_t)v41, v31 + 24);
        swift_bridgeObjectRetain();
        v32 = v25;
        v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        aBlock[4] = sub_998BC;
        v40 = v31;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_5FEBC;
        aBlock[3] = &block_descriptor_7;
        v34 = _Block_copy(aBlock);
        swift_release(v40);
        v35 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v33, v30, v34, v37);
        _Block_release(v34);

        objc_msgSend(v2, "addAction:", v35);
      }

    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t sub_994E4(char a1, uint64_t a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t Strong;
  void *v9;
  Class isa;
  _QWORD v12[3];
  uint64_t v13;

  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
  v5 = v4;
  if ((a1 & 1) != 0)
    v6 = 7;
  else
    v6 = 2;
  objc_msgSend(v4, "setModalPresentationStyle:", v6);
  objc_msgSend(v5, "pushViewController:animated:", a2, 0);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v5, 0, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
  sub_906510((uint64_t)v12);
  if (v13)
  {
    v7 = __swift_project_boxed_opaque_existential_1(v12, v13);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v9 = (void *)Strong;
      _s30CollectionViewSelectionHandlerVMa(0);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "deselectItemAtIndexPath:animated:", isa, 1);

    }
    else
    {

    }
    return __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {

    return sub_56024((uint64_t)v12, (uint64_t *)&unk_14B2930);
  }
}

void sub_99620(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  _OWORD v11[2];
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  v9 = type metadata accessor for PlaybackIntentDescriptor(0);
  memset(v11, 0, sizeof(v11));
  v12 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = v8;
  sub_907A7C(a2, 0, a3, 0, 0, (uint64_t)v11, (uint64_t)v7, 0);
  sub_56024((uint64_t)v7, (uint64_t *)&unk_14B0AC0);
  sub_56024((uint64_t)v11, (uint64_t *)&unk_14B2930);

}

uint64_t sub_99718(uint64_t a1)
{
  uint64_t v2;

  v2 = _s23MusicPerformanceContextVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_99754(uint64_t a1, _QWORD *a2)
{
  initializeWithCopy for JSSegue.Context(a2, a1);
  return a2;
}

uint64_t sub_99790()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  if (*(_QWORD *)(v0 + 152))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 128));
  return swift_deallocObject(v0, 160, 7);
}

uint64_t sub_99810()
{
  uint64_t v0;

  return sub_994E4(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_99824()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_99848(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

uint64_t sub_99864()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 24);
  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

void sub_998BC(uint64_t a1)
{
  uint64_t v1;

  sub_99620(a1, *(void **)(v1 + 16), v1 + 24);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_7(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_998E0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  double v23;
  double v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  __int128 v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t i;
  _QWORD *v54;
  uint64_t v55;
  double v56;
  char v57;
  void *v58;
  __int128 v59;
  void *v60;
  __int128 v61;
  id v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  objc_super v66;
  _OWORD v67[4];

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_title];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;
  v11 = &v4[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate];
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v4[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_duration];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_contentRatingAndWhatever] = _swiftEmptyArrayStorage;
  v14 = (uint64_t *)&v4[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents];
  v15 = v4;
  *v14 = sub_9ABD0();
  v14[1] = v16;
  v14[2] = v17;

  v66.receiver = v15;
  v66.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v66, "initWithFrame:", a1, a2, a3, a4);
  v19 = qword_14AA8F0;
  v20 = (char *)v18;
  if (v19 != -1)
    swift_once(&qword_14AA8F0, sub_9A6AC);
  v21 = xmmword_14AE9F8;
  *(_OWORD *)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkSize] = xmmword_14AE9F8;
  v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkComponent];
  v23 = *(double *)(v22 + 112);
  v24 = *(double *)(v22 + 120);
  *(_OWORD *)(v22 + 112) = v21;
  sub_151574(v23, v24);
  v25 = &v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  v61 = *(_OWORD *)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkEdgeInsets];
  v26 = *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkEdgeInsets + 16];
  v27 = *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkEdgeInsets + 24];
  __asm { FMOV            V1.2D, #10.0 }
  v59 = _Q1;
  *(_OWORD *)v25 = xmmword_1060140;
  *((_OWORD *)v25 + 1) = _Q1;
  type metadata accessor for UIEdgeInsets(0);
  v67[0] = xmmword_1060140;
  v67[1] = v59;
  v63 = v61;
  v64 = v26;
  v65 = v27;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v67, &v63) & 1) != 0)
    objc_msgSend(v20, "setNeedsLayout");
  v33 = Artwork.Placeholder.music.unsafeMutableAddressor();
  v34 = (void *)*v33;
  v35 = (void *)v33[1];
  v36 = (void *)v33[2];
  v37 = (void *)v33[3];
  v38 = (uint64_t)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkPlaceholder];
  v60 = *(void **)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkPlaceholder];
  v39 = *(void **)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkPlaceholder + 16];
  v58 = *(void **)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkPlaceholder + 8];
  v40 = *(void **)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_artworkPlaceholder + 24];
  v41 = *((_OWORD *)v33 + 2);
  *(_QWORD *)v38 = *v33;
  *(_QWORD *)(v38 + 8) = v35;
  *(_QWORD *)(v38 + 16) = v36;
  *(_QWORD *)(v38 + 24) = v37;
  *(_OWORD *)(v38 + 32) = v41;
  v42 = v36;
  v43 = v37;
  v44 = v34;
  v45 = v35;
  v62 = v42;
  v46 = v43;
  v47 = v44;
  v48 = v45;
  sub_9AFF4(v60, v58, v39, v40);
  sub_9B038(v38, (uint64_t)v67);
  sub_9B0C4(v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_9B080);
  sub_15AF40((id *)v67);
  sub_9B0C4(v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_9AFF4);

  v49 = *(id *)&v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_textStackView];
  v50 = *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents + 16];
  if ((unint64_t)v50 >> 62)
  {
    if (v50 < 0)
      v55 = *(_QWORD *)&v20[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents + 16];
    else
      v55 = v50 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    result = _CocoaArrayWrapper.endIndex.getter(v55);
    v51 = result;
    if (!result)
      goto LABEL_17;
  }
  else
  {
    v51 = *(_QWORD *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (!v51)
      goto LABEL_17;
  }
  if (v51 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v51; ++i)
  {
    if ((v50 & 0xC000000000000001) != 0)
    {
      v54 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v50);
    }
    else
    {
      v54 = *(_QWORD **)(v50 + 8 * i + 32);
      swift_retain(v54);
    }
    TextStackView.add(_:)(v54);
    swift_release(v54);
  }
LABEL_17:

  *(_QWORD *)&v56 = swift_bridgeObjectRelease(v50).n128_u64[0];
  v57 = v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment];
  v20[OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_leadingSeparatorAlignment] = 1;
  if ((v57 & 1) == 0)
    objc_msgSend(v20, "setNeedsLayout", v56);

  return (uint64_t)v20;
}

double sub_99DF8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v10;
  Swift::String v11;
  double result;

  v3 = v2;
  v5 = &v2[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_title];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_title];
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_title + 8];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v8 = v6 == a1 && v7 == a2;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, a1, a2, 0) & 1) == 0)
  {
    v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents];
    swift_retain(v10);
    swift_bridgeObjectRetain();
    v11 = String.trim()();
    swift_bridgeObjectRelease(a2);
    TextStackView.Component.textValue.setter(v11._countAndFlagsBits, (uint64_t)v11._object);
    objc_msgSend(v3, "setNeedsLayout", swift_release(v10).n128_f64[0]);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_9A104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  unint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5F0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEA58);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate;
  swift_beginAccess(v2 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate, v21, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_9AB3C(a1, (uint64_t)v13);
  sub_9AB3C(v14, v15);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_56024((uint64_t)v13, (uint64_t *)&unk_14AD5F0);
      return;
    }
  }
  else
  {
    sub_9AB3C((uint64_t)v13, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_9AF64();
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_56024((uint64_t)v13, (uint64_t *)&unk_14AD5F0);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_56024((uint64_t)v13, &qword_14AEA58);
LABEL_8:
  sub_9A330();
}

void sub_9A330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[24];

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5F0);
  __chkstk_darwin(v5);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate, v37, 0, 0);
  sub_9AB3C(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD5F0);
LABEL_8:
    v17 = _swiftEmptyArrayStorage;
    goto LABEL_9;
  }
  v13.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  static Locale.autoupdatingCurrent.getter(v13);
  v14 = sub_9B7C68((uint64_t)v11, (uint64_t)v4);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    goto LABEL_8;
  }
  v17 = sub_11FD80(0, 1, 1, _swiftEmptyArrayStorage);
  v19 = v17[2];
  v18 = v17[3];
  if (v19 >= v18 >> 1)
    v17 = sub_11FD80((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
  v17[2] = v19 + 1;
  v20 = &v17[2 * v19];
  v20[4] = v14;
  v20[5] = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_9:
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_duration + 8) & 1) == 0)
  {
    v21 = *(double *)(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_duration);
    if (qword_14AA8F8 != -1)
      swift_once(&qword_14AA8F8, sub_9A6C4);
    v22 = objc_msgSend((id)qword_14AEA08, "stringFromTimeInterval:", v21);
    if (v22)
    {
      v23 = v22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;

      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = sub_11FD80(0, v17[2] + 1, 1, v17);
      v28 = v17[2];
      v27 = v17[3];
      if (v28 >= v27 >> 1)
        v17 = sub_11FD80((_QWORD *)(v27 > 1), v28 + 1, 1, v17);
      v17[2] = v28 + 1;
      v29 = &v17[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
    }
  }
  v30 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents + 8);
  v36 = v17;
  swift_retain(v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CFB10);
  v32 = sub_9AB84();
  v33 = BidirectionalCollection<>.joined(separator:)(548913696, 0xA400000000000000, v31, v32);
  v35 = v34;
  swift_bridgeObjectRelease(v17);
  TextStackView.Component.textValue.setter(v33, v35);
  swift_release(v30);
}

double sub_9A6AC()
{
  double result;

  result = 102.0;
  xmmword_14AE9F8 = xmmword_1060150;
  return result;
}

id sub_9A6C4()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  objc_msgSend(v0, "setUnitsStyle:", 2);
  result = objc_msgSend(v0, "setAllowedUnits:", 64);
  qword_14AEA08 = (uint64_t)v0;
  return result;
}

double sub_9A724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_title + 8));
  sub_56024(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate, (uint64_t *)&unk_14AD5F0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_contentRatingAndWhatever));
  v1 = v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(v3);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_9A818()
{
  return type metadata accessor for MovieHorizontalCell(0);
}

uint64_t type metadata accessor for MovieHorizontalCell(uint64_t a1)
{
  uint64_t result;

  result = qword_14AEA40;
  if (!qword_14AEA40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MovieHorizontalCell);
  return result;
}

void sub_9A85C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1060198;
  sub_9A8F4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10601B0;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_10601C8;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 1520);
  }
}

void sub_9A8F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14AEA50)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14AEA50);
  }
}

uint64_t destroy for MovieHorizontalCell.DetailTextComponents(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t *_s16MusicApplication19MovieHorizontalCellC20DetailTextComponentsVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  a1[2] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for MovieHorizontalCell.DetailTextComponents(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for MovieHorizontalCell.DetailTextComponents(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for MovieHorizontalCell.DetailTextComponents()
{
  return &type metadata for MovieHorizontalCell.DetailTextComponents;
}

uint64_t sub_9AA98()
{
  uint64_t result;

  if (qword_14AA8F0 != -1)
    return swift_once(&qword_14AA8F0, sub_9A6AC);
  return result;
}

double sub_9AAF8()
{
  if (qword_14AA8F0 != -1)
    swift_once(&qword_14AA8F0, sub_9A6AC);
  return *(double *)&xmmword_14AE9F8;
}

uint64_t sub_9AB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_9AB84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14D3610;
  if (!qword_14D3610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14CFB10);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14D3610);
  }
  return result;
}

uint64_t sub_9ABD0()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21[2];
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27[2];
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  __int128 v32;

  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  if (qword_14ABD48 != -1)
    swift_once(&qword_14ABD48, sub_9B6C50);
  v2 = (void *)qword_15814D8;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "clearColor");
  *(_QWORD *)&v27[0] = v2;
  *((_QWORD *)&v27[0] + 1) = v5;
  v27[1] = xmmword_1060160;
  v28 = 0;
  v29 = 0;
  v30 = v1;
  v31 = 3;
  v32 = xmmword_105B390;
  v6 = type metadata accessor for TextStackView.Component();
  swift_allocObject(v6, 264, 7);
  v7 = TextStackView.Component.init(identifier:labelProperties:)(0x656C746974, 0xE500000000000000, v27);
  v8 = v4;
  v9 = v5;
  v10 = v1;
  v11 = v8;
  v12 = v9;
  v13 = v10;
  v14 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleSubheadline, swift_retain(v7).n128_f64[0]);
  if (qword_14ABD38 != -1)
    swift_once(&qword_14ABD38, sub_9B6BFC);
  v15 = qword_15814C8;
  v16 = (id)qword_15814C8;
  *(_QWORD *)&v21[0] = v15;
  *((_QWORD *)&v21[0] + 1) = objc_msgSend(v3, "clearColor");
  v21[1] = xmmword_1060160;
  v22 = 0;
  v23 = 0;
  v24 = v14;
  v25 = 1;
  v26 = xmmword_1060170;
  swift_allocObject(v6, 264, 7);
  v17 = TextStackView.Component.init(identifier:labelProperties:)(0x52646E4165746164, 0xEE00656D69746E75, v21);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v19 + 32) = v7;
  *(_QWORD *)(v19 + 40) = v17;
  specialized Array._endMutation()(v19);
  swift_retain(v17);

  return v7;
}

void sub_9AE78()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = &v0[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_title];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_releaseDate];
  v3 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v0[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_duration];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_contentRatingAndWhatever] = _swiftEmptyArrayStorage;
  v5 = (uint64_t *)&v0[OBJC_IVAR____TtC16MusicApplication19MovieHorizontalCell_detailTextComponents];
  *v5 = sub_9ABD0();
  v5[1] = v6;
  v5[2] = v7;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/MovieHorizontalCell.swift", 42, 2, 25, 0);
  __break(1u);
}

unint64_t sub_9AF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AEA60;
  if (!qword_14AEA60)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_14AEA60);
  }
  return result;
}

uint64_t sub_9AFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_9AFF4(void *a1, void *a2, void *a3, void *a4)
{
  if (a4)
  {

  }
}

uint64_t sub_9B038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B20E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_9B080(id result, void *a2, void *a3, void *a4)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  if (a4)
  {
    v5 = result;
    v6 = a3;
    v7 = a4;
    v8 = v5;
    return a2;
  }
  return result;
}

_QWORD *sub_9B0C4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

unint64_t sub_9B100()
{
  unint64_t result;

  result = qword_14AEA68;
  if (!qword_14AEA68)
  {
    result = swift_getWitnessTable(&unk_10602CC, &type metadata for OpenMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_14AEA68);
  }
  return result;
}

unint64_t sub_9B148()
{
  unint64_t result;

  result = qword_14AEA70;
  if (!qword_14AEA70)
  {
    result = swift_getWitnessTable(&unk_10602F4, &type metadata for OpenMusicItemAppIntent);
    atomic_store(result, (unint64_t *)&qword_14AEA70);
  }
  return result;
}

uint64_t sub_9B18C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11D58F0, 1);
}

uint64_t sub_9B19C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11D58C8, 1);
}

uint64_t sub_9B1AC()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  __swift_allocate_value_buffer(v0, qword_157F5D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_157F5D8);
  return LocalizedStringResource.init(stringLiteral:)(0x73754D206E65704FLL, 0xEF6D657449206369);
}

uint64_t sub_9B214()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_9B234()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_9B254(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v2[12] = a1;
  v2[13] = a2;
  v3 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[14] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[15] = swift_task_alloc(v4);
  v2[16] = swift_task_alloc(v4);
  v5 = type metadata accessor for Song(0);
  v2[17] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[18] = v6;
  v2[19] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecordLabel(0);
  v2[20] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[21] = v8;
  v2[22] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v2[23] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[24] = v10;
  v2[25] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Artist(0);
  v2[26] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[27] = v12;
  v2[28] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Album(0);
  v2[29] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[30] = v14;
  v2[31] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for GenericMusicItem(0);
  v2[32] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[33] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[34] = swift_task_alloc(v17);
  v2[35] = swift_task_alloc(v17);
  v2[36] = swift_task_alloc(v17);
  v18 = type metadata accessor for GenericMusicItemEntity(0);
  v2[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MainActor(0);
  v2[38] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v2[39] = v21;
  v2[40] = v22;
  return swift_task_switch(sub_9B420, v21, v22);
}

uint64_t sub_9B420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  __n128 v105;
  void (*v106)(uint64_t, uint64_t, __n128);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t type;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117[2];

  if (qword_14AAFF0 != -1)
    swift_once(&qword_14AAFF0, sub_387EF0);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 328) = __swift_project_value_buffer(v2, (uint64_t)qword_1580138);
  v3 = swift_retain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD **)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = swift_slowAlloc(22, -1);
    type = swift_slowAlloc(64, -1);
    v117[0] = type;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 72) = &type metadata for OpenMusicItemAppIntent;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
    v10 = String.init<A>(describing:)(v0 + 72, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 80) = sub_23EAC8(v10, v11, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v8 + 12) = 2082;
    IntentParameter.wrappedValue.getter(v6);
    v14 = sub_5A7F80(v13);
    v16 = v15;
    sub_5C0DC((uint64_t)v6, type metadata accessor for GenericMusicItemEntity);
    *(_QWORD *)(v0 + 88) = sub_23EAC8(v14, v16, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96);
    swift_bridgeObjectRelease(v16);
    swift_release_n(v7, 2);
    _os_log_impl(&dword_0, v4, v5, "%s opening %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(type, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(type, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_release_n(*(_QWORD *)(v0 + 104), 2);
  }

  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_227678();
  *(_QWORD *)(v0 + 336) = v18;
  v19 = v0 + 48;
  v21 = *(_QWORD *)(v0 + 288);
  v20 = *(_QWORD **)(v0 + 296);
  v22 = *(_QWORD *)(v0 + 280);
  v24 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 264);

  IntentParameter.wrappedValue.getter(v20);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v23 + 32))(v21, v20, v24);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v25(v22, v21, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v24);
  if (v26 == enum case for GenericMusicItem.album(_:))
  {
    v27 = *(_QWORD *)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 240);
    v29 = *(_QWORD *)(v0 + 248);
    v30 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v27, *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v29, v27, v30);
    v31 = sub_9CDE0(v29);
    v33 = *(_QWORD *)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 248);
    v34 = *(_QWORD *)(v0 + 232);
LABEL_14:
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    *(_QWORD *)(v0 + 368) = v31;
    v61 = *(_QWORD *)(v0 + 112);
    v60 = *(_QWORD **)(v0 + 120);
    *v60 = v31;
    v60[1] = 0;
    v62 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
    swift_storeEnumTagMultiPayload(v60, v62, 4);
    swift_storeEnumTagMultiPayload(v60, v61, 0);
    v63 = dword_14AF2DC;
    v64 = v31;
    v65 = (_QWORD *)swift_task_alloc(v63);
    *(_QWORD *)(v0 + 376) = v65;
    *v65 = v0;
    v65[1] = sub_9C24C;
    return sub_B1498(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120));
  }
  if (v26 == enum case for GenericMusicItem.artist(_:))
  {
    v35 = *(_QWORD *)(v0 + 280);
    v36 = *(_QWORD *)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 224);
    v38 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v35, *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v37, v35, v38);
    v31 = sub_9D000(v37);
    v33 = *(_QWORD *)(v0 + 216);
    v32 = *(_QWORD *)(v0 + 224);
    v34 = *(_QWORD *)(v0 + 208);
    goto LABEL_14;
  }
  if (v26 == enum case for GenericMusicItem.playlist(_:))
  {
    v39 = *(_QWORD *)(v0 + 280);
    v40 = *(_QWORD *)(v0 + 192);
    v41 = *(_QWORD *)(v0 + 200);
    v42 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v39, *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v41, v39, v42);
    v31 = sub_9D2C0(v41);
    v33 = *(_QWORD *)(v0 + 192);
    v32 = *(_QWORD *)(v0 + 200);
    v34 = *(_QWORD *)(v0 + 184);
    goto LABEL_14;
  }
  if (v26 == enum case for GenericMusicItem.recordLabel(_:))
  {
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 176);
    v46 = *(_QWORD *)(v0 + 160);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v43, *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v45, v43, v46);
    v31 = sub_9D518(v45);
    v33 = *(_QWORD *)(v0 + 168);
    v32 = *(_QWORD *)(v0 + 176);
    v34 = *(_QWORD *)(v0 + 160);
    goto LABEL_14;
  }
  if (v26 == enum case for GenericMusicItem.song(_:))
  {
    v84 = *(_QWORD *)(v0 + 280);
    v86 = *(_QWORD *)(v0 + 144);
    v85 = *(_QWORD *)(v0 + 152);
    v87 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 96))(v84, *(_QWORD *)(v0 + 256));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32))(v85, v84, v87);
    v88 = (_QWORD *)swift_task_alloc(dword_14AEAEC);
    *(_QWORD *)(v0 + 344) = v88;
    *v88 = v0;
    v88[1] = sub_9BE4C;
    return sub_9D6C4(*(_QWORD *)(v0 + 152));
  }
  else
  {
    v89 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v25)(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256));
    v90 = Logger.logObject.getter(v89);
    v91 = static os_log_type_t.error.getter(v90);
    v92 = os_log_type_enabled(v90, v91);
    v93 = *(_QWORD *)(v0 + 264);
    v94 = *(_QWORD *)(v0 + 272);
    v95 = *(_QWORD *)(v0 + 256);
    if (v92)
    {
      v96 = swift_slowAlloc(22, -1);
      v113 = swift_slowAlloc(64, -1);
      v117[0] = v113;
      *(_DWORD *)v96 = 136446466;
      *(_QWORD *)(v0 + 48) = &type metadata for OpenMusicItemAppIntent;
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
      v98 = String.init<A>(describing:)(v0 + 48, v97);
      v100 = v99;
      *(_QWORD *)(v0 + 56) = sub_23EAC8(v98, v99, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
      swift_bridgeObjectRelease(v100);
      *(_WORD *)(v96 + 12) = 2082;
      v101 = sub_4DD24(&qword_14E5CF0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v102 = dispatch thunk of CustomStringConvertible.description.getter(v95, v101);
      v104 = v103;
      *(_QWORD *)(v0 + 64) = sub_23EAC8(v102, v103, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
      v105 = swift_bridgeObjectRelease(v104);
      v106 = *(void (**)(uint64_t, uint64_t, __n128))(v93 + 8);
      v106(v94, v95, v105);
      _os_log_impl(&dword_0, v90, v91, "%{public}s – unsupported type %{public}s", (uint8_t *)v96, 0x16u);
      swift_arrayDestroy(v113, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      v107 = v96;
      v19 = v0 + 48;
      swift_slowDealloc(v107, -1, -1);
    }
    else
    {
      v106 = *(void (**)(uint64_t, uint64_t, __n128))(v93 + 8);
      ((void (*)(_QWORD, _QWORD))v106)(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
    }

    v108 = *(_QWORD *)(v0 + 280);
    v109 = *(_QWORD *)(v0 + 256);
    v110 = sub_9CD9C();
    v111 = swift_allocError(&type metadata for OpenMusicItemIntentError, v110, 0, 0);
    *v112 = 1;
    swift_willThrow(v111);
    ((void (*)(uint64_t, uint64_t))v106)(v108, v109);
    swift_errorRetain(v111);
    v47 = swift_errorRetain(v111);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v116 = v19;
      v117[0] = swift_slowAlloc(64, -1);
      v51 = v117[0];
      *(_DWORD *)v50 = 136446466;
      *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
      v53 = String.init<A>(describing:)(v0 + 16, v52);
      v55 = v54;
      *(_QWORD *)(v0 + 24) = sub_23EAC8(v53, v54, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
      swift_bridgeObjectRelease(v55);
      *(_WORD *)(v50 + 12) = 2082;
      *(_QWORD *)(v0 + 32) = v111;
      swift_errorRetain(v111);
      v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
      v57 = String.init<A>(describing:)(v0 + 32, v56);
      v59 = v58;
      *(_QWORD *)(v0 + 40) = sub_23EAC8(v57, v58, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v116);
      swift_bridgeObjectRelease(v59);
      swift_errorRelease(v111);
      swift_errorRelease(v111);
      _os_log_impl(&dword_0, v48, v49, "%{public}s – unable to open item %{public}s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }
    else
    {
      swift_errorRelease(v111);
      swift_errorRelease(v111);
    }

    v67 = *(_QWORD *)(v0 + 336);
    v68 = *(_QWORD *)(v0 + 304);
    v69 = *(_QWORD *)(v0 + 288);
    v71 = *(_QWORD *)(v0 + 256);
    v70 = *(_QWORD *)(v0 + 264);
    v72 = sub_9CD9C();
    v73 = swift_allocError(&type metadata for OpenMusicItemIntentError, v72, 0, 0);
    *v74 = 0;
    swift_willThrow(v73);
    swift_errorRelease(v111);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
    swift_release(v67);
    swift_release(v68);
    v75 = *(_QWORD *)(v0 + 288);
    v77 = *(_QWORD *)(v0 + 272);
    v76 = *(_QWORD *)(v0 + 280);
    v78 = *(_QWORD *)(v0 + 248);
    v79 = *(_QWORD *)(v0 + 224);
    v80 = *(_QWORD *)(v0 + 200);
    v81 = *(_QWORD *)(v0 + 176);
    v82 = *(_QWORD *)(v0 + 152);
    v83 = *(_QWORD *)(v0 + 128);
    v115 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 296));
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v115);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_9BE4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 344);
  *(_QWORD *)(*(_QWORD *)v2 + 352) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[39];
    v7 = v4[40];
    v8 = sub_9BF68;
  }
  else
  {
    v4[45] = a1;
    v6 = v4[39];
    v7 = v4[40];
    v8 = sub_9BEC0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_9BEC0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
  v1 = (void *)v0[45];
  v0[46] = v1;
  v2 = v0[14];
  v3 = (_QWORD *)v0[15];
  *v3 = v1;
  v3[1] = 0;
  v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v3, v4, 4);
  swift_storeEnumTagMultiPayload(v3, v2, 0);
  v5 = dword_14AF2DC;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v5);
  v0[47] = v7;
  *v7 = v0;
  v7[1] = sub_9C24C;
  return sub_B1498(v0[16], v0[15]);
}

uint64_t sub_9BF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 352);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = swift_slowAlloc(64, -1);
    v34[0] = v6;
    *(_DWORD *)v5 = 136446466;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
    v8 = String.init<A>(describing:)(v0 + 16, v7);
    v10 = v9;
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v8, v9, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v5 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v1;
    swift_errorRetain(v1);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v12 = String.init<A>(describing:)(v0 + 32, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 40) = sub_23EAC8(v12, v13, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "%{public}s – unable to open item %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy(v6, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v15 = *(_QWORD *)(v0 + 336);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 264);
  v20 = sub_9CD9C();
  v33 = swift_allocError(&type metadata for OpenMusicItemIntentError, v20, 0, 0);
  *v21 = 0;
  swift_willThrow(v33);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_release(v15);
  swift_release(v16);
  v22 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 176);
  v29 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 128);
  v32 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9C24C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[47];
  (*v1)[48] = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_5C0DC(v2[15], type metadata accessor for AppInterfaceContext.Activity);
    v4 = v2[39];
    v5 = v2[40];
    v6 = sub_9C3FC;
  }
  else
  {
    v7 = v2[16];
    sub_5C0DC(v2[15], type metadata accessor for AppInterfaceContext.Activity);
    sub_5C0DC(v7, type metadata accessor for AppInterfaceContext.Activity);
    v4 = v2[39];
    v5 = v2[40];
    v6 = sub_9C2E8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_9C2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 248);
  v11 = *(_QWORD *)(v0 + 224);
  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 120);

  static IntentResult.result<>()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v8);
  swift_release(v1);
  swift_release(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9C3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];

  v1 = *(_QWORD *)(v0 + 384);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = swift_slowAlloc(64, -1);
    v34[0] = v6;
    *(_DWORD *)v5 = 136446466;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
    v8 = String.init<A>(describing:)(v0 + 16, v7);
    v10 = v9;
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v8, v9, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v5 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v1;
    swift_errorRetain(v1);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v12 = String.init<A>(describing:)(v0 + 32, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 40) = sub_23EAC8(v12, v13, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "%{public}s – unable to open item %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy(v6, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v15 = *(_QWORD *)(v0 + 336);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 256);
  v18 = *(_QWORD *)(v0 + 264);
  v20 = sub_9CD9C();
  v33 = swift_allocError(&type metadata for OpenMusicItemIntentError, v20, 0, 0);
  *v21 = 0;
  swift_willThrow(v33);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_release(v15);
  swift_release(v16);
  v22 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 176);
  v29 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 128);
  v32 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9C6D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14AA900 != -1)
    swift_once(&qword_14AA900, sub_9B1AC);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_157F5D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_9C750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEB00);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEB08);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2, v8);
  v11._countAndFlagsBits = 0x206E65704FLL;
  v11._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_1060328);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEB10);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v10, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_9C8AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_14AEAD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return sub_9B254(a1, v4);
}

uint64_t sub_9C904@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_9CAC0();
  *a1 = result;
  return result;
}

uint64_t sub_9C928(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9CD58();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMusicItemAppIntent()
{
  return &type metadata for OpenMusicItemAppIntent;
}

uint64_t sub_9C960()
{
  return sub_5C150(&qword_14AEA80, &qword_14AEA88, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_9C98C()
{
  return sub_5C150(&qword_14AEA90, &qword_14AEA98, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

BOOL sub_9C9B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_9C9D0()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_9CA14()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_9CA3C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_9CA7C()
{
  _BYTE *v0;

  if ((*v0 & 1) != 0)
    return LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x80000000010C5460);
  else
    return LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x80000000010C5490);
}

uint64_t sub_9CAC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for InputConnectionBehavior(0);
  v0 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAA0);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAA8);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAB0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAB8);
  LocalizedStringResource.init(stringLiteral:)(0x744920636973754DLL, 0xEA00000000006D65);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x80000000010C5440);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v19 = type metadata accessor for GenericMusicItemEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v8, 1, 1, v20);
  v21(v5, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v25);
  v22 = sub_4DD24((unint64_t *)&qword_14AEAC0, type metadata accessor for GenericMusicItemEntity, (uint64_t)&unk_107CD18);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v18, v14, v11, v8, v5, v2, v22);
}

unint64_t sub_9CD58()
{
  unint64_t result;

  result = qword_14AEAC8;
  if (!qword_14AEAC8)
  {
    result = swift_getWitnessTable(&unk_106023C, &type metadata for OpenMusicItemAppIntent);
    atomic_store(result, &qword_14AEAC8);
  }
  return result;
}

unint64_t sub_9CD9C()
{
  unint64_t result;

  result = qword_14AEAD8;
  if (!qword_14AEAD8)
  {
    result = swift_getWitnessTable(&unk_10603FC, &type metadata for OpenMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_14AEAD8);
  }
  return result;
}

id sub_9CDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for MusicAppDestinationContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_227678();
  v12 = v11;

  if (!v1)
  {
    v13 = sub_B0710();
    if (v13 == 6)
      v13 = 1;
    v29 = sub_AFB54(v13);
    Album.catalogID.getter(v29);
    v15 = v14;
    swift_bridgeObjectRelease(v14);
    if (v15)
    {
      v16 = a1;
      v17 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AEAF0) + 48)];
      v18 = type metadata accessor for Album(0);
      v19 = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v16, v18);
      v20 = enum case for MusicAppDestination.AlbumDescriptor.album(_:);
      v21 = type metadata accessor for MusicAppDestination.AlbumDescriptor(0, v19);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v9, v20, v21);
      v22 = 0;
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
    }
    else
    {
      v23 = type metadata accessor for Album(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v9, a1, v23);
      v22 = 2;
    }
    v24 = swift_storeEnumTagMultiPayload(v9, v7, v22);
    static MusicAppDestinationContext.none.getter(v24);
    v25 = v29;
    sub_13750C((uint64_t)v9, v29, (uint64_t)v6);
    v10 = v26;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_5C0DC((uint64_t)v9, _s18AppPageDestinationOMa);
    swift_release(v12);
    swift_release(v25);
  }
  return v10;
}

id sub_9D000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  void *v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  v36 = type metadata accessor for MusicAppDestinationContext(0);
  v38 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F5E70);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_227678();
  v13 = v12;

  if (!v1)
  {
    v34 = v10;
    v35 = v8;
    v32 = v4;
    v14 = v38;
    v15 = *(_QWORD *)(v13 + 16);
    if (v15)
    {
      v31[1] = 0;
      swift_retain(v15);
      v16 = sub_B0710();
      if (v16 == 6)
        v16 = 1;
      v33 = v13;
      v17 = sub_AFB54(v16);
      v18 = v37;
      Artist.catalogID.getter(v17);
      v20 = v19;
      swift_bridgeObjectRelease(v19);
      v21 = type metadata accessor for Artist(0);
      v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      if (v20)
      {
        v23 = v34;
        v22(v34, v18, v21);
        v24 = v35;
        (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v23, enum case for MusicPageProvider.Destination.artistDetail<A, B>(_:), v7);
        v11 = (id)MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v23, v17, 0, 0);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v7);
      }
      else
      {
        v22(v6, v18, v21);
        v28 = swift_storeEnumTagMultiPayload(v6, v32, 4);
        static MusicAppDestinationContext.none.getter(v28);
        sub_13750C((uint64_t)v6, v17, (uint64_t)v3);
        v11 = v29;
        (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v36);
        sub_5C0DC((uint64_t)v6, _s18AppPageDestinationOMa);
      }
      swift_release(v33);
      swift_release(v15);
      swift_release(v17);
    }
    else
    {
      v25 = sub_9CD9C();
      v26 = swift_allocError(&type metadata for OpenMusicItemIntentError, v25, 0, 0);
      *v27 = 0;
      swift_willThrow(v26);
      swift_release(v13);
    }
  }
  return v11;
}

id sub_9D2C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for MusicAppDestinationContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_227678();
  v12 = v11;

  if (!v1)
  {
    v13 = sub_B0710();
    if (v13 == 6)
      v13 = 1;
    v32 = sub_AFB54(v13);
    Playlist.catalogID.getter(v32);
    v15 = v14;
    swift_bridgeObjectRelease(v14);
    if (v15)
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAF8);
      v17 = *(int *)(v16 + 48);
      v31 = v3;
      v18 = &v9[v17];
      v30 = &v9[*(int *)(v16 + 64)];
      v19 = type metadata accessor for Playlist(0);
      v20 = (*(double (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, a1, v19);
      v21 = enum case for MusicAppDestination.PlaylistDescriptor.playlist(_:);
      v22 = type metadata accessor for MusicAppDestination.PlaylistDescriptor(0, v20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v9, v21, v22);
      v23 = type metadata accessor for URL(0);
      *(_QWORD *)v18 = 0;
      *((_QWORD *)v18 + 1) = 0;
      v24 = 1;
      v3 = v31;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v30, 1, 1, v23);
    }
    else
    {
      v25 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v9, a1, v25);
      v24 = 3;
    }
    v26 = swift_storeEnumTagMultiPayload(v9, v7, v24);
    static MusicAppDestinationContext.none.getter(v26);
    v27 = v32;
    sub_13750C((uint64_t)v9, v32, (uint64_t)v6);
    v10 = v28;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_5C0DC((uint64_t)v9, _s18AppPageDestinationOMa);
    swift_release(v12);
    swift_release(v27);
  }
  return v10;
}

id sub_9D518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F5E70);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  sub_227678();
  v9 = v8;

  if (!v1)
  {
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_retain(*(_QWORD *)(v9 + 16));
      v11 = sub_B0710();
      if (v11 == 6)
        v11 = 1;
      v12 = sub_AFB54(v11);
      v13 = type metadata accessor for RecordLabel(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, a1, v13);
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for MusicPageProvider.Destination.recordLabelDetail<A, B>(_:), v3);
      v7 = (id)MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v6, v12, 0, 0);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_release(v9);
      swift_release(v10);
      swift_release(v12);
    }
    else
    {
      v15 = sub_9CD9C();
      v16 = swift_allocError(&type metadata for OpenMusicItemIntentError, v15, 0, 0);
      *v17 = 0;
      swift_willThrow(v16);
      swift_release(v9);
    }
  }
  return v7;
}

uint64_t sub_9D6C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v1[4] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BB510);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[6] = swift_task_alloc(v3);
  v1[7] = swift_task_alloc(v3);
  v1[8] = swift_task_alloc(v3);
  v4 = type metadata accessor for ContainerDetail.Source(0);
  v1[9] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[10] = swift_task_alloc(v5);
  v1[11] = swift_task_alloc(v5);
  v1[12] = swift_task_alloc(v5);
  v1[13] = swift_task_alloc(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BB520);
  v1[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Album(0);
  v1[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v9);
  v1[18] = swift_task_alloc(v9);
  v1[19] = swift_task_alloc(v9);
  v1[20] = swift_task_alloc(v9);
  v10 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F9470) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v10);
  v1[22] = swift_task_alloc(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED40);
  v1[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Song(0);
  v1[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[25] = v13;
  v1[26] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v1[27] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v1[28] = v16;
  v1[29] = v17;
  return swift_task_switch(sub_9D8D4, v16, v17);
}

uint64_t sub_9D8D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t, uint64_t);
  _BYTE *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v2 = *(_QWORD *)(v1 + 176);
  Song.albums.getter(a1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7E40);
  *(_QWORD *)(v1 + 240) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 248) = v4;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v1 + 256) = v5;
  v6 = v5(v2, 1, v3);
  sub_56024(v2, (uint64_t *)&unk_14F9470);
  if (v6 == 1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
    v8 = swift_allocObject(v7, 40, 7);
    *(_OWORD *)(v8 + 16) = xmmword_1060220;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F9480);
    v9 = static PartialMusicProperty<A>.albums.getter();
    *(_QWORD *)(v8 + 32) = v9;
    v108 = v8;
    specialized Array._endMutation()(v9);
    *(_QWORD *)(v1 + 264) = v8;
    v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v1 + 272) = v10;
    *v10 = v1;
    v10[1] = sub_9E148;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v1 + 184), v8, *(_QWORD *)(v1 + 192), &protocol witness table for Song);
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 200) + 16))(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 192));
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 256);
  v13 = *(_QWORD *)(v1 + 240);
  v15 = *(_QWORD *)(v1 + 200);
  v14 = *(_QWORD *)(v1 + 208);
  v17 = *(_QWORD *)(v1 + 184);
  v16 = *(_QWORD *)(v1 + 192);
  v18 = *(_QWORD *)(v1 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v16);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v17, v16);
  Song.albums.getter(v19);
  if (v12(v18, 1, v13) == 1)
  {
    v20 = *(_QWORD *)(v1 + 120);
    v21 = *(_QWORD *)(v1 + 128);
    v22 = *(_QWORD *)(v1 + 112);
    sub_56024(*(_QWORD *)(v1 + 168), (uint64_t *)&unk_14F9470);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, 1, 1, v20);
  }
  else
  {
    v23 = *(_QWORD *)(v1 + 240);
    v24 = *(_QWORD *)(v1 + 248);
    v25 = *(_QWORD *)(v1 + 168);
    v26 = *(_QWORD *)(v1 + 120);
    v27 = *(_QWORD *)(v1 + 128);
    v28 = *(_QWORD *)(v1 + 112);
    sub_23AD6C(v28);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) != 1)
    {
      v50 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 32))(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
      Song.catalogID.getter(v50);
      v52 = v51;
      swift_bridgeObjectRelease(v51);
      v53 = *(_BYTE **)(v1 + 104);
      v54 = *(_QWORD *)(v1 + 72);
      if (v52)
      {
        *v53 = 0;
        v55 = v53;
        v56 = v54;
        v57 = 1;
      }
      else
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE670);
        v59 = *(int *)(v58 + 48);
        v60 = *(int *)(v58 + 64);
        v61 = _s6AlbumsV5ScopeOMa(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v53, 1, 1, v61);
        v53[v59] = 0;
        v53[v60] = 0;
        v55 = v53;
        v56 = v54;
        v57 = 0;
      }
      swift_storeEnumTagMultiPayload(v55, v56, v57);
      v87 = *(_QWORD *)(v1 + 200);
      v89 = *(_QWORD *)(v1 + 192);
      v91 = *(_QWORD *)(v1 + 216);
      v93 = *(_QWORD *)(v1 + 184);
      v95 = *(_QWORD *)(v1 + 176);
      v97 = *(_QWORD *)(v1 + 168);
      v84 = *(_QWORD *)(v1 + 208);
      v85 = *(_QWORD *)(v1 + 160);
      v63 = *(_QWORD *)(v1 + 144);
      v62 = *(_QWORD *)(v1 + 152);
      v101 = *(_QWORD *)(v1 + 136);
      v81 = *(_QWORD *)(v1 + 128);
      v64 = *(_QWORD *)(v1 + 120);
      v99 = *(_QWORD *)(v1 + 112);
      v65 = *(_QWORD *)(v1 + 96);
      v66 = *(_QWORD *)(v1 + 104);
      v83 = v66;
      v67 = *(_QWORD *)(v1 + 88);
      v68 = *(_QWORD *)(v1 + 64);
      v103 = *(_QWORD *)(v1 + 56);
      v105 = *(_QWORD *)(v1 + 80);
      v107 = *(_QWORD *)(v1 + 48);
      v79 = *(uint64_t **)(v1 + 40);
      v69 = *(void (**)(uint64_t))(v81 + 16);
      v69(v62);
      v70 = sub_9EBEC(v66, v65);
      v71 = Song.id.getter(v70);
      v73 = v72;
      v74 = type metadata accessor for URL(0);
      v80 = v68;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v68, 1, 1, v74);
      ((void (*)(uint64_t, uint64_t, uint64_t))v69)(v63, v62, v64);
      sub_9EBEC(v65, v67);
      sub_9EC30(v68, v103);
      ((void (*)(uint64_t, uint64_t, uint64_t))v69)(v101, v63, v64);
      sub_9EBEC(v67, v105);
      *v79 = v71;
      v79[1] = v73;
      v75 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
      swift_storeEnumTagMultiPayload(v79, v75, 0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v79, 0, 1, v75);
      sub_9EC30(v103, v107);
      swift_bridgeObjectRetain();
      v76 = sub_B8DE80(v101, v105, (uint64_t)v79, v107);
      sub_56024(v103, &qword_14AED20);
      sub_5C0DC(v67, type metadata accessor for ContainerDetail.Source);
      v77 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
      v77(v63, v64);
      swift_bridgeObjectRelease(v73);
      v78 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v82 = sub_ADF6B8((uint64_t)v76, 0, v78);

      sub_56024(v80, &qword_14AED20);
      sub_5C0DC(v65, type metadata accessor for ContainerDetail.Source);
      v77(v62, v64);
      sub_5C0DC(v83, type metadata accessor for ContainerDetail.Source);
      v77(v85, v64);
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v84, v89);
      swift_release(v91);
      swift_task_dealloc(v84);
      swift_task_dealloc(v93);
      swift_task_dealloc(v95);
      swift_task_dealloc(v97);
      swift_task_dealloc(v85);
      swift_task_dealloc(v62);
      swift_task_dealloc(v63);
      swift_task_dealloc(v101);
      swift_task_dealloc(v99);
      swift_task_dealloc(v83);
      swift_task_dealloc(v65);
      swift_task_dealloc(v67);
      swift_task_dealloc(v105);
      swift_task_dealloc(v80);
      swift_task_dealloc(v103);
      swift_task_dealloc(v107);
      swift_task_dealloc(v79);
      return (*(uint64_t (**)(char *))(v1 + 8))(v82);
    }
  }
  v29 = *(_QWORD *)(v1 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 192));
  sub_56024(v29, (uint64_t *)&unk_14BB520);
  if (qword_14AAFF0 != -1)
    swift_once(&qword_14AAFF0, sub_387EF0);
  v30 = type metadata accessor for Logger(0);
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1580138);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.error.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    *(_DWORD *)v34 = 136446210;
    v108 = v35;
    *(_QWORD *)(v1 + 16) = &type metadata for OpenMusicItemAppIntent;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
    v37 = String.init<A>(describing:)(v1 + 16, v36);
    v39 = v38;
    *(_QWORD *)(v1 + 24) = sub_23EAC8(v37, v38, &v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 24, v1 + 32);
    swift_bridgeObjectRelease(v39);
    _os_log_impl(&dword_0, v32, v33, "%{public}s – unable to obtain album to open song in", v34, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);
  }

  v41 = *(_QWORD *)(v1 + 208);
  v40 = *(_QWORD *)(v1 + 216);
  v42 = *(_QWORD *)(v1 + 176);
  v43 = *(_QWORD *)(v1 + 184);
  v45 = *(_QWORD *)(v1 + 160);
  v44 = *(_QWORD *)(v1 + 168);
  v46 = *(_QWORD *)(v1 + 152);
  v86 = *(_QWORD *)(v1 + 144);
  v88 = *(_QWORD *)(v1 + 136);
  v90 = *(_QWORD *)(v1 + 112);
  v92 = *(_QWORD *)(v1 + 104);
  v94 = *(_QWORD *)(v1 + 96);
  v96 = *(_QWORD *)(v1 + 88);
  v98 = *(_QWORD *)(v1 + 80);
  v100 = *(_QWORD *)(v1 + 64);
  v102 = *(_QWORD *)(v1 + 56);
  v104 = *(_QWORD *)(v1 + 48);
  v106 = *(_QWORD *)(v1 + 40);
  v47 = sub_9CD9C();
  v48 = swift_allocError(&type metadata for OpenMusicItemIntentError, v47, 0, 0);
  *v49 = 0;
  swift_willThrow(v48);
  swift_release(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v106);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_9E148()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 272));
  if (v0)
  {
    swift_errorRelease(v0);
    v3 = v2[28];
    v4 = v2[29];
    v5 = sub_9E908;
  }
  else
  {
    swift_bridgeObjectRelease(v2[33]);
    v3 = v2[28];
    v4 = v2[29];
    v5 = sub_9E1B8;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_9E1B8()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(uint64_t, uint64_t);
  _BYTE *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v6, v5);
  Song.albums.getter(v8);
  if (v1(v7, 1, v2) == 1)
  {
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 112);
    sub_56024(*(_QWORD *)(v0 + 168), (uint64_t *)&unk_14F9470);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v9);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    sub_23AD6C(v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) != 1)
    {
      v40 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
      Song.catalogID.getter(v40);
      v42 = v41;
      swift_bridgeObjectRelease(v41);
      v43 = *(_BYTE **)(v0 + 104);
      v44 = *(_QWORD *)(v0 + 72);
      if (v42)
      {
        *v43 = 0;
        v45 = v43;
        v46 = v44;
        v47 = 1;
      }
      else
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE670);
        v49 = *(int *)(v48 + 48);
        v50 = *(int *)(v48 + 64);
        v51 = _s6AlbumsV5ScopeOMa(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v43, 1, 1, v51);
        v43[v49] = 0;
        v43[v50] = 0;
        v45 = v43;
        v46 = v44;
        v47 = 0;
      }
      swift_storeEnumTagMultiPayload(v45, v46, v47);
      v77 = *(_QWORD *)(v0 + 200);
      v79 = *(_QWORD *)(v0 + 192);
      v81 = *(_QWORD *)(v0 + 216);
      v83 = *(_QWORD *)(v0 + 184);
      v85 = *(_QWORD *)(v0 + 176);
      v87 = *(_QWORD *)(v0 + 168);
      v74 = *(_QWORD *)(v0 + 208);
      v75 = *(_QWORD *)(v0 + 160);
      v53 = *(_QWORD *)(v0 + 144);
      v52 = *(_QWORD *)(v0 + 152);
      v91 = *(_QWORD *)(v0 + 136);
      v71 = *(_QWORD *)(v0 + 128);
      v54 = *(_QWORD *)(v0 + 120);
      v89 = *(_QWORD *)(v0 + 112);
      v55 = *(_QWORD *)(v0 + 96);
      v56 = *(_QWORD *)(v0 + 104);
      v73 = v56;
      v57 = *(_QWORD *)(v0 + 88);
      v58 = *(_QWORD *)(v0 + 64);
      v93 = *(_QWORD *)(v0 + 56);
      v95 = *(_QWORD *)(v0 + 80);
      v97 = *(_QWORD *)(v0 + 48);
      v69 = *(uint64_t **)(v0 + 40);
      v59 = *(void (**)(uint64_t))(v71 + 16);
      v59(v52);
      v60 = sub_9EBEC(v56, v55);
      v61 = Song.id.getter(v60);
      v63 = v62;
      v64 = type metadata accessor for URL(0);
      v70 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v58, 1, 1, v64);
      ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v53, v52, v54);
      sub_9EBEC(v55, v57);
      sub_9EC30(v58, v93);
      ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v91, v53, v54);
      sub_9EBEC(v57, v95);
      *v69 = v61;
      v69[1] = v63;
      v65 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
      swift_storeEnumTagMultiPayload(v69, v65, 0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v69, 0, 1, v65);
      sub_9EC30(v93, v97);
      swift_bridgeObjectRetain();
      v66 = sub_B8DE80(v91, v95, (uint64_t)v69, v97);
      sub_56024(v93, &qword_14AED20);
      sub_5C0DC(v57, type metadata accessor for ContainerDetail.Source);
      v67 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v67(v53, v54);
      swift_bridgeObjectRelease(v63);
      v68 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v72 = sub_ADF6B8((uint64_t)v66, 0, v68);

      sub_56024(v70, &qword_14AED20);
      sub_5C0DC(v55, type metadata accessor for ContainerDetail.Source);
      v67(v52, v54);
      sub_5C0DC(v73, type metadata accessor for ContainerDetail.Source);
      v67(v75, v54);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v74, v79);
      swift_release(v81);
      swift_task_dealloc(v74);
      swift_task_dealloc(v83);
      swift_task_dealloc(v85);
      swift_task_dealloc(v87);
      swift_task_dealloc(v75);
      swift_task_dealloc(v52);
      swift_task_dealloc(v53);
      swift_task_dealloc(v91);
      swift_task_dealloc(v89);
      swift_task_dealloc(v73);
      swift_task_dealloc(v55);
      swift_task_dealloc(v57);
      swift_task_dealloc(v95);
      swift_task_dealloc(v70);
      swift_task_dealloc(v93);
      swift_task_dealloc(v97);
      swift_task_dealloc(v69);
      return (*(uint64_t (**)(char *))(v0 + 8))(v72);
    }
  }
  v18 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  sub_56024(v18, (uint64_t *)&unk_14BB520);
  if (qword_14AAFF0 != -1)
    swift_once(&qword_14AAFF0, sub_387EF0);
  v19 = type metadata accessor for Logger(0);
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1580138);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    *(_DWORD *)v23 = 136446210;
    v98 = v24;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
    v26 = String.init<A>(describing:)(v0 + 16, v25);
    v28 = v27;
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v26, v27, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v28);
    _os_log_impl(&dword_0, v21, v22, "%{public}s – unable to obtain album to open song in", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  v30 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 216);
  v31 = *(_QWORD *)(v0 + 176);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 168);
  v35 = *(_QWORD *)(v0 + 152);
  v76 = *(_QWORD *)(v0 + 144);
  v78 = *(_QWORD *)(v0 + 136);
  v80 = *(_QWORD *)(v0 + 112);
  v82 = *(_QWORD *)(v0 + 104);
  v84 = *(_QWORD *)(v0 + 96);
  v86 = *(_QWORD *)(v0 + 88);
  v88 = *(_QWORD *)(v0 + 80);
  v90 = *(_QWORD *)(v0 + 64);
  v92 = *(_QWORD *)(v0 + 56);
  v94 = *(_QWORD *)(v0 + 48);
  v96 = *(_QWORD *)(v0 + 40);
  v36 = sub_9CD9C();
  v37 = swift_allocError(&type metadata for OpenMusicItemIntentError, v36, 0, 0);
  *v38 = 0;
  swift_willThrow(v37);
  swift_release(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v76);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9E908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56))(v3, 1, 1, v1, v4);
  sub_56024(v3, &qword_14AED40);
  if (qword_14AAFF0 != -1)
    swift_once(&qword_14AAFF0, sub_387EF0);
  v5 = type metadata accessor for Logger(0);
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1580138);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136446210;
    v37 = v10;
    *(_QWORD *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AEAE0);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v12, v13, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v14);
    _os_log_impl(&dword_0, v7, v8, "%{public}s – unable to obtain album to open song in", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v16 = *(_QWORD *)(v0 + 208);
  v15 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 144);
  v27 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 104);
  v30 = *(_QWORD *)(v0 + 96);
  v31 = *(_QWORD *)(v0 + 88);
  v32 = *(_QWORD *)(v0 + 80);
  v33 = *(_QWORD *)(v0 + 64);
  v34 = *(_QWORD *)(v0 + 56);
  v35 = *(_QWORD *)(v0 + 48);
  v36 = *(_QWORD *)(v0 + 40);
  v22 = sub_9CD9C();
  v23 = swift_allocError(&type metadata for OpenMusicItemIntentError, v22, 0, 0);
  *v24 = 0;
  swift_willThrow(v23);
  swift_release(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9EBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContainerDetail.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9EC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9EC78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PaletteContainerView.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenMusicItemIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_9ED7C + 4 * byte_1060235[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_9EDB0 + 4 * byte_1060230[v4]))();
}

uint64_t sub_9EDB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9EDB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x9EDC0);
  return result;
}

uint64_t sub_9EDCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x9EDD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_9EDD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9EDE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_9EDEC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OpenMusicItemIntentError()
{
  return &type metadata for OpenMusicItemIntentError;
}

unint64_t sub_9EE0C()
{
  unint64_t result;

  result = qword_14AEB18;
  if (!qword_14AEB18)
  {
    result = swift_getWitnessTable(&unk_10603D4, &type metadata for OpenMusicItemIntentError);
    atomic_store(result, (unint64_t *)&qword_14AEB18);
  }
  return result;
}

id sub_9EEFC()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for JSBadgingViewController();
  objc_msgSendSuper2(&v17, "viewDidLayoutSubviews");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "music_inheritedLayoutInsets");
    v4 = v3;
    v6 = v5;

    v7 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication23JSBadgingViewController_badgingView];
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v8 = result;
      objc_msgSend(result, "bounds");
      v10 = v9;
      v12 = v11;
      v14 = v13;
      v16 = v15;

      return objc_msgSend(v7, "setFrame:", UIEdgeInsetsInsetRect(v10, v12, v14, v16, v4, v6));
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_9F054()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  void (**v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  __n128 v28;
  id v29;
  void *v30;
  void *v31;
  void (**v32)(uint64_t);
  id v33;
  char *v34;
  unint64_t v35;
  objc_super v36;

  v1 = v0;
  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for JSBadgingViewController();
  objc_msgSendSuper2(&v36, "viewDidLoad");
  v2 = *(char **)&v0[OBJC_IVAR____TtC16MusicApplication23JSBadgingViewController_badgingView];
  v3 = swift_allocObject(&unk_1342E40, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  v4 = (void (**)(uint64_t))&v2[OBJC_IVAR____TtC16MusicApplication11BadgingView_layoutInvalidationHandler];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication11BadgingView_layoutInvalidationHandler];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication11BadgingView_layoutInvalidationHandler + 8];
  *v4 = sub_9F694;
  v4[1] = (void (*)(uint64_t))v3;
  sub_5C198(v5, v6);
  v7 = objc_msgSend(v1, "view");
  if (!v7)
    goto LABEL_27;
  v8 = v7;
  if (qword_14ABCF8 != -1)
    swift_once(&qword_14ABCF8, sub_9B6A0C);
  v32 = v4;
  v9 = objc_msgSend(v8, "setBackgroundColor:", qword_1581488);
  v10 = (*(uint64_t (**)(id))((char *)&stru_B8.size
                                      + (swift_isaMask & **(_QWORD **)&v1[OBJC_IVAR____TtC16MusicApplication23JSBadgingViewController_badgingViewModel])))(v9);
  v11 = v10;
  v34 = v2;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 >= 0)
      v10 &= 0xFFFFFFFFFFFFFF8uLL;
    v12 = _CocoaArrayWrapper.endIndex.getter(v10);
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
  }
  v33 = v1;
  v31 = v8;
  if (!v12)
  {
    v14 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = 0;
  v35 = v11 & 0xC000000000000001;
  v14 = _swiftEmptyArrayStorage;
  v15 = v11;
  do
  {
    if (v35)
      v16 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    else
      v16 = *(id *)(v11 + 8 * v13 + 32);
    v17 = v16;
    v18 = (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v16])();
    v19 = (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v17)))();
    v21 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_120DFC(0, v14[2] + 1, 1, v14);
    v23 = v14[2];
    v22 = v14[3];
    if (v23 >= v22 >> 1)
      v14 = sub_120DFC((_QWORD *)(v22 > 1), v23 + 1, 1, v14);
    v14[2] = v23 + 1;
    v24 = &v14[3 * v23];
    *((_BYTE *)v24 + 32) = v18 & 1;
    ++v13;
    v24[5] = v19;
    v24[6] = v21;

    v11 = v15;
  }
  while (v12 != v13);
LABEL_19:
  swift_bridgeObjectRelease(v11);
  v25 = *(_QWORD *)&v34[OBJC_IVAR____TtC16MusicApplication11BadgingView_badgingItems];
  *(_QWORD *)&v34[OBJC_IVAR____TtC16MusicApplication11BadgingView_badgingItems] = v14;
  swift_bridgeObjectRetain();
  objc_msgSend(v34, "setNeedsLayout", swift_bridgeObjectRelease(v25).n128_f64[0]);
  v26 = *v32;
  if (*v32)
  {
    v27 = (uint64_t)v32[1];
    v28 = swift_retain(v27);
    ((void (*)(char *, __n128))v26)(v34, v28);
    sub_5C198((uint64_t)v26, v27);
  }
  v29 = objc_msgSend(v33, "view");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "addSubview:", v34, swift_bridgeObjectRelease(v14).n128_f64[0]);

    return;
  }
LABEL_28:
  __break(1u);
}

void sub_9F3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_9F428();

  }
}

uint64_t sub_9F428()
{
  char *v0;
  char *v1;
  uint64_t result;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  _QWORD v26[2];

  v1 = v0;
  result = (uint64_t)objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = (void *)result;
  objc_msgSend((id)result, "music_inheritedLayoutInsets");
  v5 = v4;
  v7 = v6;

  result = (uint64_t)objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v8 = (void *)result;
  objc_msgSend((id)result, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  UIEdgeInsetsInsetRect(v10, v12, v14, v16, v5, v7);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicApplication23JSBadgingViewController_badgingView], "sizeThatFits:", v17, v18);
  v20 = v19;
  v22 = v21;
  type metadata accessor for CGSize(0);
  objc_msgSend(v1, "preferredContentSize");
  v26[0] = v23;
  v26[1] = v24;
  *(double *)v25 = v20;
  *(double *)&v25[1] = v22;
  result = static ApproximatelyEquatable.!=~ infix(_:_:)(v26, v25);
  if ((result & 1) != 0)
    return (uint64_t)objc_msgSend(v1, "setPreferredContentSize:", v20, v22);
  return result;
}

id sub_9F5CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSBadgingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for JSBadgingViewController()
{
  return objc_opt_self(_TtC16MusicApplication23JSBadgingViewController);
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_9F670()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_9F694(uint64_t a1)
{
  uint64_t v1;

  sub_9F3A4(a1, v1);
}

uint64_t sub_9F69C(void *a1, char a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  _BOOL8 v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char *v26;
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  if ((a2 & 1) != 0)
  {
    v9 = objc_msgSend(a1, "storeID");
    if (v9)
    {
      v10 = v9;
      _bridgeAnyObjectToAny(_:)(v27, v9);
      sub_50CA4(v27, &v28);
      swift_unknownObjectRelease(v10);
      if (*((_QWORD *)&v29 + 1))
      {
        sub_50CA4(&v28, &v30);
        v11 = v31;
        v12 = __swift_project_boxed_opaque_existential_1(&v30, v31);
        v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
        v14 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();
        swift_unknownObjectRelease(v13);
        if (v14)
        {
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v17 = v16;

          v8 = String.count.getter(v15, v17) > 0;
          __swift_destroy_boxed_opaque_existential_1(&v30);
          swift_bridgeObjectRelease(v17);

          return v8;
        }
        __swift_destroy_boxed_opaque_existential_1(&v30);
        goto LABEL_18;
      }
    }
    else
    {
      v28 = 0u;
      v29 = 0u;
    }
    sub_56024((uint64_t)&v28, (uint64_t *)&unk_14AD640);
LABEL_18:
    v19 = a1;
    goto LABEL_19;
  }
  objc_opt_self(MPModelPlaylist);
  v3 = swift_dynamicCastObjCClass(a1);
  if (!v3)
  {
    objc_opt_self(MPModelSocialPerson);
    v18 = (void *)swift_dynamicCastObjCClass(a1);
    if (v18)
      return objc_msgSend(v18, "hasLightweightProfile") ^ 1;
    v21 = a1;
    MPModelObject.bestIdentifier(for:)(3, 2u);
    if (v22)
    {
      swift_bridgeObjectRelease(v22);
      goto LABEL_9;
    }
    v19 = a1;
    goto LABEL_19;
  }
  v4 = (void *)v3;
  v5 = a1;
  v6 = a1;
  if (objc_msgSend(v4, "isSubscribed")
    || objc_msgSend(v4, "isCuratorPlaylist")
    || objc_msgSend(v4, "isPublicPlaylist"))
  {
    goto LABEL_8;
  }
  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (!v7)
  {
    MPModelObject.bestIdentifier(for:)(1, 2u);
    v24 = v23;
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v23).n128_u64[0];
    if (v24)
    {
      if ((objc_msgSend(v4, "userEditableComponents", v25) & 1) == 0)
      {
        v26 = (char *)objc_msgSend(v4, "type");

        return v26 == (_BYTE *)&dword_8 + 1;
      }
      goto LABEL_8;
    }

    v19 = a1;
LABEL_19:

    return 0;
  }
  swift_bridgeObjectRelease(v7);
LABEL_8:

LABEL_9:
  return 1;
}

void sub_9F954()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for SharingController.SharingArtwork.CachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000021;
  *(_QWORD *)(v1 + 24) = 0x80000000010C57E0;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v3, v1);

  qword_14AEB60 = v1;
}

uint64_t Collaboration.ArtworkCachingReference.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

int64x2_t sub_9FA18()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4072C00000000000uLL);
  xmmword_157F5F0 = (__int128)result;
  return result;
}

uint64_t sub_9FA30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  NSString v10;
  uint64_t v11;

  if (result)
  {
    v9 = result;
    swift_retain(a2);
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a5, "setCacheIdentifier:forCacheReference:", v10, a6);

    if (qword_14AA910 != -1)
      swift_once(&qword_14AA910, sub_9FA18);
    objc_msgSend(a5, "setFittingSize:", xmmword_157F5F0);
    objc_msgSend(a5, "setDestinationScale:", 0.0);
    v11 = swift_allocObject(&unk_1343110, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = a2;
    swift_retain(a2);
    MPArtworkCatalog.requestImage(_:)((uint64_t)sub_A90DC, v11);
    swift_release(v11);
    return sub_5C198(v9, a2);
  }
  return result;
}

void sub_9FB44(void *a1, char a2, void (*a3)(Class, _QWORD))
{
  NSData *v5;
  Class isa;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;

  if ((a2 & 1) != 0)
  {
    v11 = a1;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    swift_willThrowTypedImpl(&v11, v10, &protocol self-conformance witness table for Error);
    a3(0, 0);
  }
  else
  {
    v5 = UIImagePNGRepresentation((UIImage *)a1);
    isa = (Class)v5;
    if (v5)
    {
      v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_50C60(v7, v9);
    }
    a3(isa, 0);
    swift_unknownObjectRelease(isa);
    sub_A90E8(a1, 0);
  }
}

void sub_9FC30(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v15;
  int v16;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  double v27;
  uint64_t v28;
  id v29;
  void *Strong;
  void *v31;
  id v32;
  id v33;
  void *v34;
  char *v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  Class isa;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  char *v47;
  char *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned __int8 v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned int v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  unsigned __int8 *v80;
  unsigned int v81;
  unsigned __int8 v82;
  unint64_t v83;
  uint64_t v84;
  unsigned __int8 *v85;
  unsigned int v86;
  char v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  _QWORD v97[5];
  uint64_t v98;
  void **aBlock;
  uint64_t v100;
  void (*v101)(uint64_t, void *, void *);
  void *v102;
  __C::_NSRange (__swiftcall *v103)(CFRange);
  uint64_t v104;
  _BYTE v105[48];

  v15 = a10;
  v16 = a9 & 1;
  if (a2)
  {
    v18 = a2;
    v19 = sub_A71E0(a1);
    v20 = objc_msgSend(v18, "effectiveStorePlatformDictionary");
    if (v20)
    {
      v21 = v20;
      v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v22 = 0;
    }
    sub_A7E8C(v22, 0, a3, a6, a7, v19, a5, a10, a2, 1, a8, v16, a4);

    swift_bridgeObjectRelease(v22);
    v34 = a2;
    goto LABEL_15;
  }
  v23 = a1;
  v93 = sub_A71E0(v23);
  objc_opt_self(MPModelPlaylist);
  v24 = swift_dynamicCastObjCClass(v23);
  if (!v24)
  {
    objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
    v35 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v23);
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend(v35, "effectiveStorePlatformDictionary");
      if (v37)
      {
        v38 = v37;
        v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v37, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

LABEL_30:
        sub_A7E8C(v39, 0, a3, a6, a7, v93, a5, a10, a1, 0, a8, v16, a4);

        swift_bridgeObjectRelease(v39);
        v34 = a1;
LABEL_15:

        return;
      }

    }
    v39 = 0;
    goto LABEL_30;
  }
  v25 = (void *)v24;
  v91 = v10;
  v26 = a1;
  v92 = v23;
  if ((objc_msgSend(v25, "isSubscribed") & 1) != 0
    || (objc_msgSend(v25, "isCuratorPlaylist") & 1) != 0
    || (objc_msgSend(v25, "isPublicPlaylist") & 1) != 0)
  {
LABEL_10:
    if ((objc_msgSend(v25, "isPublicPlaylist", v27) & 1) == 0)
    {
      v29 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryPlaylistEditChangeRequest), "init");
      Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
      v89 = a7;
      if (Strong)
      {
        v31 = Strong;
        v32 = objc_msgSend(Strong, "traitCollection");

        v33 = UITraitCollection.mediaLibrary.getter();
      }
      else
      {
        v33 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
      }
      objc_msgSend(v29, "setMediaLibrary:", v33);

      objc_msgSend(v29, "setPlaylist:", v25);
      sub_4E684(0, (unint64_t *)&qword_14AEE10, NSNumber_ptr);
      isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
      objc_msgSend(v29, "setPublicPlaylist:", isa);

      v103 = _NSRange.init(_:);
      v104 = 0;
      aBlock = _NSConcreteStackBlock;
      v100 = 1107296256;
      v101 = sub_A06C0;
      v102 = &block_descriptor_31;
      v41 = _Block_copy(&aBlock);
      v103 = (__C::_NSRange (__swiftcall *)(CFRange))UIScreen.Dimensions.size.getter;
      v104 = 0;
      aBlock = _NSConcreteStackBlock;
      v100 = 1107296256;
      v101 = sub_A06C0;
      v102 = &block_descriptor_34;
      v42 = _Block_copy(&aBlock);
      v43 = objc_msgSend(v29, "newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:", v41, v42);
      _Block_release(v42);
      _Block_release(v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_14AEE18);
      v44 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredQueue");
      objc_msgSend(v44, "addOperation:", v43);

      a7 = v89;
      v15 = a10;
    }
    v45 = objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
    v46 = v92;
    v47 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v25);
    if (v47)
    {
      v48 = v47;
      v49 = objc_msgSend(v47, "effectiveStorePlatformDictionary");
      if (v49)
      {
        v50 = v49;
        v51 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v49, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

LABEL_26:
        sub_A7E8C(v51, 0, a3, a6, a7, v93, a5, v15, a1, 0, a8, v16, a4);

        swift_bridgeObjectRelease(v51);
LABEL_27:

        return;
      }

    }
    v51 = 0;
    goto LABEL_26;
  }
  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v28)
  {
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
    goto LABEL_10;
  }
  MPModelObject.bestIdentifier(for:)(1, 2u);
  v53 = v52;
  *(_QWORD *)&v54 = swift_bridgeObjectRelease(v52).n128_u64[0];
  if (!v53
    || (objc_msgSend(v25, "userEditableComponents", v54) & 1) == 0
    && objc_msgSend(v25, "type") != (char *)&dword_8 + 1
    || (v55 = MPModelObject.bestIdentifier(for:)(1, 2u), !v56))
  {
LABEL_94:
    sub_A7E8C(0, 0, a3, a6, a7, v93, a5, a10, a1, 0, a8, v16, a4);

    goto LABEL_27;
  }
  v57 = v56;
  v58 = HIBYTE(v56) & 0xF;
  v59 = v55 & 0xFFFFFFFFFFFFLL;
  if ((v57 & 0x2000000000000000) != 0)
    v60 = v58;
  else
    v60 = v55 & 0xFFFFFFFFFFFFLL;
  if (!v60)
  {
    swift_bridgeObjectRelease(v57);
    goto LABEL_94;
  }
  if ((v57 & 0x1000000000000000) != 0)
  {
    v62 = sub_338144(v55, v57, 10);
    v64 = v87;
    goto LABEL_71;
  }
  if ((v57 & 0x2000000000000000) != 0)
  {
    aBlock = (void **)v55;
    v100 = v57 & 0xFFFFFFFFFFFFFFLL;
    if (v55 == 43)
    {
      if (v58)
      {
        if (v58 != 1 && (BYTE1(v55) - 48) <= 9u)
        {
          v62 = (BYTE1(v55) - 48);
          if (v58 == 2)
            goto LABEL_70;
          if ((BYTE2(v55) - 48) <= 9u)
          {
            v62 = 10 * (BYTE1(v55) - 48) + (BYTE2(v55) - 48);
            v68 = v58 - 3;
            if (v68)
            {
              v69 = (unsigned __int8 *)&aBlock + 3;
              while (1)
              {
                v70 = *v69 - 48;
                if (v70 > 9)
                  goto LABEL_67;
                if (!is_mul_ok(v62, 0xAuLL))
                  goto LABEL_67;
                v66 = __CFADD__(10 * v62, v70);
                v62 = 10 * v62 + v70;
                if (v66)
                  goto LABEL_67;
                v64 = 0;
                ++v69;
                if (!--v68)
                  goto LABEL_71;
              }
            }
            goto LABEL_70;
          }
        }
        goto LABEL_67;
      }
    }
    else
    {
      if (v55 != 45)
      {
        if (v58 && (v55 - 48) <= 9u)
        {
          v62 = (v55 - 48);
          if (v58 == 1)
            goto LABEL_70;
          if ((BYTE1(v55) - 48) <= 9u)
          {
            v62 = 10 * (v55 - 48) + (BYTE1(v55) - 48);
            v79 = v58 - 2;
            if (v79)
            {
              v80 = (unsigned __int8 *)&aBlock + 2;
              while (1)
              {
                v81 = *v80 - 48;
                if (v81 > 9)
                  goto LABEL_67;
                if (!is_mul_ok(v62, 0xAuLL))
                  goto LABEL_67;
                v66 = __CFADD__(10 * v62, v81);
                v62 = 10 * v62 + v81;
                if (v66)
                  goto LABEL_67;
                v64 = 0;
                ++v80;
                if (!--v79)
                  goto LABEL_71;
              }
            }
            goto LABEL_70;
          }
        }
LABEL_67:
        v62 = 0;
LABEL_68:
        v64 = 1;
        goto LABEL_71;
      }
      if (v58)
      {
        if (v58 != 1)
        {
          v65 = BYTE1(v55) - 48;
          if ((BYTE1(v55) - 48) <= 9u)
          {
            v62 = 0;
            v66 = v65 == 0;
            v67 = -(uint64_t)v65;
            if (!v66)
              goto LABEL_68;
            if (v58 == 2)
            {
              v64 = 0;
              v62 = v67;
              goto LABEL_71;
            }
            v82 = BYTE2(v55) - 48;
            if ((BYTE2(v55) - 48) <= 9u && is_mul_ok(v67, 0xAuLL))
            {
              v83 = 10 * v67;
              v62 = v83 - v82;
              if (v83 >= v82)
              {
                v84 = v58 - 3;
                if (v84)
                {
                  v85 = (unsigned __int8 *)&aBlock + 3;
                  while (1)
                  {
                    v86 = *v85 - 48;
                    if (v86 > 9)
                      goto LABEL_67;
                    if (!is_mul_ok(v62, 0xAuLL))
                      goto LABEL_67;
                    v66 = 10 * v62 >= v86;
                    v62 = 10 * v62 - v86;
                    if (!v66)
                      goto LABEL_67;
                    v64 = 0;
                    ++v85;
                    if (!--v84)
                      goto LABEL_71;
                  }
                }
LABEL_70:
                v64 = 0;
                goto LABEL_71;
              }
            }
          }
        }
        goto LABEL_67;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_99;
  }
  if ((v55 & 0x1000000000000000) != 0)
    v61 = (unsigned __int8 *)((v57 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v61 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v55, v57);
  v62 = (unint64_t)sub_338124(v61, v59, 10);
  v64 = v63 & 1;
LABEL_71:
  swift_bridgeObjectRelease(v57);
  if ((v64 & 1) != 0)
    goto LABEL_94;
  v90 = a7;
  v88 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v88)
  {
    sub_5C238(a5, (uint64_t)v105, (uint64_t *)&unk_14AED10);
    sub_6087C(a4, (uint64_t)&aBlock);
    v71 = swift_allocObject(&unk_1342FA8, 224, 7);
    *(_QWORD *)(v71 + 16) = v91;
    *(_QWORD *)(v71 + 24) = v25;
    *(_QWORD *)(v71 + 32) = a3;
    *(_QWORD *)(v71 + 40) = a6;
    *(_QWORD *)(v71 + 48) = v90;
    *(_QWORD *)(v71 + 56) = v93;
    *(_QWORD *)(v71 + 64) = v92;
    sub_5C090((uint64_t)v105, v71 + 72, (uint64_t *)&unk_14AED10);
    *(_QWORD *)(v71 + 112) = a10;
    *(_QWORD *)(v71 + 120) = a1;
    *(_BYTE *)(v71 + 128) = 0;
    *(_QWORD *)(v71 + 136) = a8;
    *(_BYTE *)(v71 + 144) = v16 != 0;
    sub_648A4((uint64_t)&aBlock, v71 + 152);
    v97[4] = sub_A8DB0;
    v98 = v71;
    v97[0] = _NSConcreteStackBlock;
    v97[1] = 1107296256;
    v97[2] = sub_A0E7C;
    v97[3] = &block_descriptor_28;
    v72 = _Block_copy(v97);
    v73 = v98;
    v74 = a1;
    v75 = v92;
    v76 = a1;
    swift_bridgeObjectRetain();
    v77 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78 = v93;
    objc_msgSend(v88, "publishPlaylistWithSagaID:completionHandler:", v62, v72, swift_release(v73).n128_f64[0]);

    _Block_release(v72);
    goto LABEL_27;
  }
LABEL_99:
  __break(1u);
}

void sub_A06C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v8 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_A0734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, char a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t ObjectType;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Class isa;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  _QWORD aBlock[5];
  uint64_t v44;
  _QWORD v45[9];
  _QWORD v46[18];

  if (!a5)
  {
    v46[16] = v19;
    v46[17] = v20;
    v24 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
    sub_4E684(0, (unint64_t *)&unk_14AEE20, MPModelPlaylistEntry_ptr);
    v42 = static MPModelPlaylistEntry.defaultMusicKind.getter();
    v25 = (void *)objc_opt_self(MPModelPlaylist);
    v26 = v24;
    v27 = objc_msgSend(v25, "kindWithPlaylistEntryKind:options:", v42, 0);
    objc_msgSend(v26, "setItemKind:", v27);

    ObjectType = swift_getObjectType();
    v29 = v26;
    v30 = sub_A3CE8(ObjectType);
    objc_msgSend(v29, "setItemProperties:", v30);

    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
    v32 = swift_allocObject(v31, 40, 7);
    *(_OWORD *)(v32 + 16) = xmmword_1060220;
    v33 = objc_msgSend(a7, "identifiers");
    *(_QWORD *)(v32 + 32) = v33;
    v45[0] = v32;
    specialized Array._endMutation()(v33);
    sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "setAllowedItemIdentifiers:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

    sub_5C238(a13, (uint64_t)v46, (uint64_t *)&unk_14AED10);
    sub_6087C(a19, (uint64_t)v45);
    v35 = swift_allocObject(&unk_1343048, 216, 7);
    *(_QWORD *)(v35 + 16) = a8;
    *(_QWORD *)(v35 + 24) = a9;
    *(_QWORD *)(v35 + 32) = a10;
    *(_QWORD *)(v35 + 40) = a11;
    *(_QWORD *)(v35 + 48) = a12;
    sub_5C090((uint64_t)v46, v35 + 56, (uint64_t *)&unk_14AED10);
    *(_QWORD *)(v35 + 96) = a14;
    *(_QWORD *)(v35 + 104) = a6;
    *(_QWORD *)(v35 + 112) = a15;
    *(_BYTE *)(v35 + 120) = a16 & 1;
    *(_QWORD *)(v35 + 128) = a17;
    *(_BYTE *)(v35 + 136) = a18 & 1;
    sub_648A4((uint64_t)v45, v35 + 144);
    aBlock[4] = sub_A8EB0;
    v44 = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21B54C;
    aBlock[3] = &block_descriptor_40;
    v36 = _Block_copy(aBlock);
    v37 = v44;
    swift_bridgeObjectRetain();
    v38 = a8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = a11;
    v40 = a12;
    v41 = a15;
    objc_msgSend(v29, "performWithResponseHandler:", v36, swift_release(v37).n128_f64[0]);
    _Block_release(v36);

  }
}

double sub_A0A80(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, char a14, uint64_t a15)
{
  id v21;
  double result;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  _BYTE v32[72];
  _BYTE v33[48];

  if (!a2)
  {
    if (a1)
    {
      v21 = objc_msgSend(a1, "results");
      if (v21)
      {
        v23 = v21;
        v24 = objc_msgSend(v21, "firstItem");

        if (v24)
        {
          objc_opt_self(MPModelPlaylist);
          v25 = swift_dynamicCastObjCClass(v24);
          if (v25)
          {
            v26 = v25;
            sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
            sub_5C238(a8, (uint64_t)v33, (uint64_t *)&unk_14AED10);
            sub_6087C(a15, (uint64_t)v32);
            v27 = swift_allocObject(&unk_1343098, 224, 7);
            *(_QWORD *)(v27 + 16) = v26;
            *(_QWORD *)(v27 + 24) = a3;
            *(_QWORD *)(v27 + 32) = a4;
            *(_QWORD *)(v27 + 40) = a5;
            *(_QWORD *)(v27 + 48) = a6;
            *(_QWORD *)(v27 + 56) = a7;
            sub_5C090((uint64_t)v33, v27 + 64, (uint64_t *)&unk_14AED10);
            *(_QWORD *)(v27 + 104) = a9;
            *(_QWORD *)(v27 + 112) = a10;
            *(_QWORD *)(v27 + 120) = a11;
            *(_BYTE *)(v27 + 128) = a12 & 1;
            *(_QWORD *)(v27 + 136) = a13;
            *(_BYTE *)(v27 + 144) = a14 & 1;
            sub_648A4((uint64_t)v32, v27 + 152);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain(v24);
            v28 = a3;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v29 = a6;
            v30 = a7;
            v31 = a11;
            static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_A8FB0, v27);
            swift_release(v27);
            *(_QWORD *)&result = swift_unknownObjectRelease(v24).n128_u64[0];
          }
          else
          {
            *(_QWORD *)&result = swift_unknownObjectRelease(v24).n128_u64[0];
          }
        }
      }
    }
  }
  return result;
}

double sub_A0C9C(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11, uint64_t a12, char a13, uint64_t a14)
{
  uint64_t v21;
  id v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  double result;

  v21 = a14;
  objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  v22 = a1;
  v23 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v22);
  if (v23)
  {
    v24 = v23;
    v25 = a2;
    v26 = a4;
    v27 = a5;
    v28 = a7;
    v29 = a8;
    v30 = objc_msgSend(v23, "effectiveStorePlatformDictionary");
    if (v30)
    {
      v31 = v30;
      v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {

      v32 = 0;
    }
    a8 = v29;
    a7 = v28;
    a5 = v27;
    a4 = v26;
    a2 = v25;
    v21 = a14;
  }
  else
  {
    v32 = 0;
  }
  if ((objc_msgSend(v22, "isSubscribed") & 1) == 0
    && !objc_msgSend(v22, "isCuratorPlaylist")
    && (objc_msgSend(v22, "isPublicPlaylist") & 1) == 0)
  {
    MPModelObject.bestIdentifier(for:)(3, 2u);
    if (!v33)
    {
      v34 = 1;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease(v33);
  }
  v34 = 0;
LABEL_13:
  sub_A7E8C(v32, v34, a2, a3, a4, a5, a7, a8, a10, a11 & 1, a12, a13 & 1, v21);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v32).n128_u64[0];
  return result;
}

uint64_t sub_A0E7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v5 = a3;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (!a2)
  {
    v8 = 0;
    v10 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = v9;
  if (!v5)
    goto LABEL_5;
LABEL_3:
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v5 = v12;
LABEL_6:
  swift_retain(v6);
  v13 = a4;
  v7(v8, v10, v11, v5, a4);
  swift_release(v6);

  swift_bridgeObjectRelease(v5);
  return swift_bridgeObjectRelease(v10);
}

id sub_A0F34@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int v6;
  id v7;
  id result;
  _BYTE v9[72];
  _QWORD v10[5];

  v6 = *a1;
  sub_55D1C(a2, (uint64_t)v10);
  sub_6087C(a3, (uint64_t)v9);
  v7 = objc_allocWithZone((Class)type metadata accessor for ShareModelStoryActivity());
  result = sub_10FDE0(v6, v10, (uint64_t)v9);
  *a4 = result;
  return result;
}

double sub_A0FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v5 = type metadata accessor for Song(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  type metadata accessor for MainActor(0);
  v13 = swift_retain(a2);
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1342F80, v18 + 8, v15 | 7);
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19 + v16, v8, v5);
  *(_QWORD *)(v19 + v17) = a2;
  *(_QWORD *)(v19 + v18) = v23;
  v20 = sub_2223C8((uint64_t)v11, (uint64_t)&unk_14AED88, v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_A113C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[23] = a4;
  v5[24] = a5;
  v6 = type metadata accessor for Song(0);
  v5[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[26] = v7;
  v5[27] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[28] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_A11D0, v10, v11);
}

uint64_t sub_A11D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192) + 16;
  swift_beginAccess(v6, v0 + 160, 0, 0);
  sub_6087C(v6, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
  sub_6087C(v0 + 16, v0 + 88);
  v7 = objc_allocWithZone((Class)type metadata accessor for LyricsSharingActivityViewController(0));
  v8 = sub_242394(v1, 0, 0, v0 + 88, 1);
  sub_A8070(v8, v0 + 16);

  sub_56060(v0 + 16);
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_A12BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  NSString *v18;
  objc_class *v19;
  id v20;
  void *v21;
  void *v22;
  double v23;
  void *Strong;
  void *v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  _BYTE v31[24];
  _OWORD v32[2];
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[32];
  uint64_t v41;
  char v42;
  uint64_t v43[8];

  v10 = a2 + 16;
  v11 = a3 + 16;
  v12 = a5 + 16;
  swift_beginAccess(a1 + 16, v39, 0, 0);
  v13 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(v10, v38, 0, 0);
  v14 = *(_QWORD *)(a2 + 16);
  swift_beginAccess(v11, v37, 0, 0);
  v15 = *(void **)(a3 + 16);
  v33 = 0;
  memset(v32, 0, sizeof(v32));
  if (a4)
  {
    v16 = _swiftEmptyArrayStorage;
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AECE8);
    v16 = (_QWORD *)swift_allocObject(v17, 40, 7);
    *((_OWORD *)v16 + 1) = xmmword_105B360;
    v16[4] = UIActivityTypeSharePlay;
    v18 = UIActivityTypeSharePlay;
  }
  v19 = (objc_class *)type metadata accessor for ActivityViewController();
  memset(v43, 0, 56);
  objc_allocWithZone(v19);
  v20 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_A7574(v43, v13, v14, v15, (uint64_t)v32, (uint64_t)v16, 0, 0, 0, 0);
  v22 = v21;
  objc_msgSend(v21, "setSharingStyle:", 0);
  *(_QWORD *)&v23 = swift_beginAccess(v12, v36, 0, 0).n128_u64[0];
  if (*(unsigned __int8 *)(a5 + 64) == 255)
  {
    objc_msgSend(v22, "setAllowsCustomPresentationStyle:", 1, v23);
    objc_msgSend(v22, "setModalPresentationStyle:", 2);
  }
  swift_beginAccess(v12, v35, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v25 = Strong;
    v26 = objc_msgSend(Strong, "traitCollection");
    v27 = (char *)objc_msgSend(v26, "userInterfaceIdiom");

    if (v27 == (_BYTE *)&dword_4 + 2)
    {
      v28 = objc_msgSend(v25, "popoverPresentationController");

      if (v28)
      {
        v29 = objc_msgSend(v25, "presentingViewController");
        if (v29)
        {
          memset(v40, 0, sizeof(v40));
          v41 = 0;
          v42 = -1;
          v30 = v29;
          PresentationSource.init(viewController:position:)(v30, (uint64_t)v40, (uint64_t)v32);
          swift_beginAccess(v12, v31, 1, 0);
          sub_A8CC8((uint64_t)v32, v12);
          objc_msgSend(v25, "dismissViewControllerAnimated:completion:", 1, 0);

          v25 = v30;
        }
      }
    }

  }
  swift_beginAccess(v12, v34, 0, 0);
  sub_6087C(v12, (uint64_t)v32);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v22, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
  sub_56060((uint64_t)v32);

}

uint64_t BackgroundFetchManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for SharingController()
{
  return objc_opt_self(_TtC16MusicApplication17SharingController);
}

uint64_t type metadata accessor for SharingController.SharingArtwork.CachingReference()
{
  return objc_opt_self(_TtCVC16MusicApplication17SharingControllerP33_DD58B06BB09DDC0E2739B649EF7AA34714SharingArtwork16CachingReference);
}

void sub_A1618(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = type metadata accessor for Metrics.Event.Action(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v10 = a5[3];
    v11 = a5[4];
    __swift_project_boxed_opaque_existential_1(a5, v10);
    swift_storeEnumTagMultiPayload(v9, v7, 41);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 8))(v9, v10, v11);
    sub_A868C((uint64_t)v9);
  }
}

uint64_t sub_A16CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

void sub_A182C(id a1)
{
  char *v1;
  char *v2;
  _QWORD *v3;
  NSString *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  Class isa;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13[24];

  if (objc_msgSend(v1, "sharingStyle") != a1)
  {
    v2 = &v1[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_defaultExcludedActivityTypes];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_defaultExcludedActivityTypes], v13, 0, 0);
    v3 = *(_QWORD **)v2;
    swift_bridgeObjectRetain();
    if (objc_msgSend(v1, "sharingStyle") == (char *)&dword_0 + 2)
    {
      v4 = UIActivityTypeCopyToPasteboard;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_120F20(0, v3[2] + 1, 1, v3);
      v5 = v3[2];
      v6 = v3[3];
      v7 = v5 + 1;
      if (v5 >= v6 >> 1)
      {
        v12 = v5 + 1;
        v9 = v3;
        v10 = v3[2];
        v11 = sub_120F20((_QWORD *)(v6 > 1), v5 + 1, 1, v9);
        v5 = v10;
        v7 = v12;
        v3 = v11;
      }
      v3[2] = v7;
      v3[v5 + 4] = v4;
    }
    type metadata accessor for ActivityType(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "setExcludedActivityTypes:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  }
}

void sub_A1974(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Class isa;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v19.receiver = v1;
  v19.super_class = (Class)type metadata accessor for ActivityViewController();
  objc_msgSendSuper2(&v19, "_prepareActivity:", a1);
  objc_opt_self(UIMessageActivity);
  v3 = swift_dynamicCastObjCClass(a1);
  if (v3)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_recipientPhoneNumber + 8];
    if (!v4)
      return;
    v5 = (void *)v3;
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_recipientPhoneNumber];
    isa = a1;
    v8 = objc_msgSend(v5, "messageComposeViewController");
    if (!v8)
      goto LABEL_10;
    v9 = v8;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v11 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_105B360;
    *(_QWORD *)(v11 + 32) = v6;
    *(_QWORD *)(v11 + 40) = v4;
    swift_bridgeObjectRetain();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "setRecipients:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);
    goto LABEL_9;
  }
  objc_opt_self(UIMailActivity);
  v12 = swift_dynamicCastObjCClass(a1);
  if (v12)
  {
    v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_recipientEmail + 8];
    if (v13)
    {
      v14 = (void *)v12;
      v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_recipientEmail];
      isa = a1;
      v16 = objc_msgSend(v14, "mailComposeViewController");
      if (!v16)
      {
LABEL_10:

        return;
      }
      v9 = v16;
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
      v18 = swift_allocObject(v17, 48, 7);
      *(_OWORD *)(v18 + 16) = xmmword_105B360;
      *(_QWORD *)(v18 + 32) = v15;
      *(_QWORD *)(v18 + 40) = v13;
      swift_bridgeObjectRetain();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "setToRecipients:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);
LABEL_9:

      goto LABEL_10;
    }
  }
}

id sub_A1BD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ActivityViewController()
{
  return objc_opt_self(_TtC16MusicApplication22ActivityViewController);
}

uint64_t sub_A1C74(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  objc_class *v22;
  id v23;
  objc_super v24;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v24 - v15;
  v17 = qword_14D88E0;
  *(_QWORD *)&v3[qword_14D88E0] = 0;
  *(_QWORD *)&v3[qword_14D88D0] = a2;
  sub_5C090(a1, (uint64_t)&v3[qword_14D88D8], &qword_14AECF8);
  v18 = *(void **)&v3[v17];
  *(_QWORD *)&v3[v17] = a3;
  swift_retain(a2);
  v19 = a3;

  URL.init(string:)(0xD000000000000014, 0x80000000010C5720);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    v21 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v13, v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v22 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_14AED28);
    v24.receiver = v3;
    v24.super_class = v22;
    v23 = objc_msgSendSuper2(&v24, "initWithPlaceholderItem:", v21);
    swift_unknownObjectRelease(v21);
    swift_release(a2);

    return (uint64_t)v23;
  }
  return result;
}

uint64_t sub_A1E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v6[84] = a6;
  v6[83] = a5;
  v6[82] = a4;
  v6[81] = a3;
  v6[80] = a2;
  v9 = type metadata accessor for Locale(0);
  v6[85] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v6[86] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Logger(0);
  v6[87] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[88] = v12;
  v6[89] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[90] = swift_task_alloc(v13);
  v6[91] = swift_task_alloc(v13);
  v6[92] = swift_task_alloc(v13);
  v6[93] = swift_task_alloc(v13);
  v14 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[94] = swift_task_alloc(v14);
  v6[95] = swift_task_alloc(v14);
  v6[96] = swift_task_alloc(v14);
  v6[97] = swift_task_alloc(v14);
  v15 = type metadata accessor for Playlist(0);
  v6[98] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v6[99] = v16;
  v6[100] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED40);
  v6[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Song(0);
  v6[102] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[103] = v19;
  v20 = *(_QWORD *)(v19 + 64);
  v6[104] = v20;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[105] = swift_task_alloc(v21);
  v6[106] = swift_task_alloc(v21);
  v6[59] = a5;
  v6[60] = a6;
  v6[107] = __swift_allocate_boxed_opaque_existential_1Tm(v6 + 56);
  (*(void (**)(void))(*(_QWORD *)(a5 - 8) + 16))();
  v22 = type metadata accessor for MainActor(0);
  v6[108] = static MainActor.shared.getter(v23);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  v6[109] = v24;
  v6[110] = v25;
  return swift_task_switch(sub_A20B0, v24, v25);
}

uint64_t sub_A20B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  id v36;
  char *v37;
  double v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  id v61;
  char *v62;
  void *v63;
  id v64;
  double (**v65)();
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  double v89;
  uint64_t v90;
  char v91;
  char v92;
  _QWORD *v93;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  id v100;
  _QWORD *v101;
  uint64_t v102;
  void *v103;
  id v104;
  id v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  NSString v131;
  id v132;
  uint64_t v133;
  NSString v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  objc_class *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  objc_super *v167;
  objc_super *v168;
  objc_super *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  int *v176;
  uint64_t v177[3];

  v175 = (_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 648);
  v2 = swift_allocObject(&unk_1342EB8, 88, 7);
  *(_QWORD *)(v0 + 888) = v2;
  v163 = v2;
  v167 = (objc_super *)(v2 + 16);
  sub_6087C(v1, v2 + 16);
  v3 = swift_allocObject(&unk_1342EE0, 24, 7);
  *(_QWORD *)(v0 + 896) = v3;
  *(_QWORD *)(v3 + 16) = 0;
  sub_55D1C(v0 + 448, v0 + 128);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED48);
  *(_QWORD *)(v0 + 904) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED50);
  v172 = v4;
  v170 = v3;
  if (swift_dynamicCast(v0 + 168, v0 + 128, v4, v5, 6))
  {
    sub_8B15C((__int128 *)(v0 + 168), v0 + 88);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v6);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);

    *(_QWORD *)(v3 + 16) = v8;
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 88));
  }
  else
  {
    *(_QWORD *)(v0 + 200) = 0;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 184) = 0u;
    sub_56024(v0 + 168, &qword_14AED58);
  }
  v9 = *(void **)(v0 + 640);
  v10 = swift_allocObject(&unk_1342F08, 24, 7);
  *(_QWORD *)(v0 + 912) = v10;
  *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
  if (v9)
  {
    v11 = v10;
    *(_QWORD *)(v0 + 552) = sub_4E684(0, (unint64_t *)&unk_14AED70, NSItemProvider_ptr);
    *(_QWORD *)(v0 + 528) = v9;
    v12 = v9;
    v13 = sub_12102C(0, 1, 1, _swiftEmptyArrayStorage);
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v13 = sub_12102C((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    sub_50CA4((_OWORD *)(v0 + 528), &v13[4 * v15 + 4]);
    *(_QWORD *)(v11 + 16) = v13;
  }
  v16 = swift_allocObject(&unk_1342F30, 24, 7);
  *(_QWORD *)(v0 + 920) = v16;
  *(_QWORD *)(v16 + 16) = _swiftEmptyArrayStorage;
  v17 = (_QWORD *)(v16 + 16);
  v18 = v0 + 448;
  sub_55D1C((uint64_t)v175, v0 + 248);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED60);
  v20 = v172;
  if (swift_dynamicCast(v0 + 288, v0 + 248, v172, v19, 6))
  {
    sub_8B15C((__int128 *)(v0 + 288), v0 + 208);
    v21 = swift_task_alloc(32);
    *(_QWORD *)(v21 + 16) = v0 + 208;
    *(_QWORD *)(v21 + 24) = v167;
    v22 = (uint64_t)sub_632DAC((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_A89BC, v21, (uint64_t)&off_133EE20);
    swift_task_dealloc(v21);
    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v151 = v22;
      else
        v151 = v22 & 0xFFFFFFFFFFFFFF8;
      v152 = sub_4E684(0, (unint64_t *)&qword_14AE030, UIActivity_ptr);
      v24 = _bridgeCocoaArray<A>(_:)(v151, v152);
    }
    else
    {
      v23 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
      sub_4E684(0, (unint64_t *)&qword_14AE030, UIActivity_ptr);
      v24 = v22;
    }
    sub_68544(v24);
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 208));
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    *(_QWORD *)(v0 + 320) = 0;
    *(_OWORD *)(v0 + 288) = 0u;
    *(_OWORD *)(v0 + 304) = 0u;
    sub_56024(v0 + 288, &qword_14AED68);
  }
  v25 = *(_QWORD *)(v0 + 824);
  v26 = *(_QWORD *)(v0 + 816);
  v27 = *(_QWORD *)(v0 + 808);
  sub_55D1C((uint64_t)v175, v0 + 328);
  v28 = swift_dynamicCast(v27, v0 + 328, v172, v26, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if (!v28)
  {
    v74 = *(_QWORD *)(v0 + 808);
    v29(v74, 1, 1, *(_QWORD *)(v0 + 816));
    sub_56024(v74, &qword_14AED40);
    goto LABEL_28;
  }
  v30 = *(_QWORD *)(v0 + 848);
  v31 = *(_QWORD *)(v0 + 824);
  v32 = *(_QWORD *)(v0 + 816);
  v33 = *(_QWORD *)(v0 + 808);
  v29(v33, 0, 1, v32);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
  v34(v30, v33, v32);
  type metadata accessor for LyricsLoader();
  if ((static LyricsLoader.supportsLyrics(for:)(v30) & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 816));
    v20 = v172;
    goto LABEL_28;
  }
  sub_24B6D0();
  v20 = v172;
  if ((v35 & 1) != 0)
    goto LABEL_26;
  v36 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v37 = (char *)objc_msgSend(v36, "userInterfaceIdiom");

  if (v37 == (_BYTE *)&dword_4 + 2)
    goto LABEL_26;
  v39 = Song.hasLyrics.getter(v38);
  v40 = *(_QWORD *)(v0 + 848);
  if ((v39 & 1) == 0)
  {
LABEL_27:
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 824) + 8))(v40, *(_QWORD *)(v0 + 816));
    goto LABEL_28;
  }
  if ((Song.hasTimeSyncedLyrics.getter(v40) & 1) == 0)
  {
LABEL_26:
    v40 = *(_QWORD *)(v0 + 848);
    goto LABEL_27;
  }
  v41 = *(_QWORD *)(v0 + 688);
  v42 = *(_QWORD *)(v0 + 680);
  v43 = String.LocalizationValue.init(stringLiteral:)(0x794C206572616853, 0xAFA680E273636972);
  static Locale.current.getter(v43);
  v44 = String.init(localized:table:bundle:locale:comment:)(v41, 0, 0, 0, v42, 0, 0, 256);
  v158 = v45;
  v160 = v44;
  v46 = String._bridgeToObjectiveC()();
  v156 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v46);

  if (qword_14AAF58 != -1)
    swift_once(&qword_14AAF58, sub_34D75C);
  v47 = *(_QWORD *)(v0 + 840);
  v48 = *(_QWORD *)(v0 + 832);
  v49 = *(_QWORD *)(v0 + 824);
  v50 = *(_QWORD *)(v0 + 816);
  v153 = (void *)qword_1580078;
  v154 = *(_QWORD *)(v0 + 656);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 16))(v47, *(_QWORD *)(v0 + 848), v50);
  v51 = *(unsigned __int8 *)(v49 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = (v48 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_1342F58, v54 + 8, v51 | 7);
  v34(v55 + v52, v47, v50);
  *(_QWORD *)(v55 + v53) = v163;
  *(_QWORD *)(v55 + v54) = v154;
  v155 = (objc_class *)_s8ActivityCMa();
  v56 = (char *)objc_allocWithZone(v155);
  v57 = OBJC_IVAR____TtCC16MusicApplication35LyricsSharingActivityViewController8Activity_image;
  *(_QWORD *)&v56[OBJC_IVAR____TtCC16MusicApplication35LyricsSharingActivityViewController8Activity_image] = 0;
  v58 = OBJC_IVAR____TtCC16MusicApplication35LyricsSharingActivityViewController8Activity__activityType;
  *(_QWORD *)&v56[OBJC_IVAR____TtCC16MusicApplication35LyricsSharingActivityViewController8Activity__activityType] = 0;
  v59 = (uint64_t *)&v56[OBJC_IVAR____TtCC16MusicApplication35LyricsSharingActivityViewController8Activity_title];
  *v59 = v160;
  v59[1] = v158;
  v60 = *(void **)&v56[v57];
  *(_QWORD *)&v56[v57] = v156;
  v61 = v153;
  swift_retain(v163);
  v62 = v56;
  v164 = v156;

  v63 = *(void **)&v56[v58];
  *(_QWORD *)&v56[v58] = v61;
  v64 = v61;

  v65 = (double (**)())&v62[OBJC_IVAR____TtCC16MusicApplication35LyricsSharingActivityViewController8Activity_performBlock];
  *v65 = sub_A8970;
  v65[1] = (double (*)())v55;
  swift_retain(v55);

  *(_QWORD *)(v0 + 608) = v62;
  *(_QWORD *)(v0 + 616) = v155;
  v66 = objc_msgSendSuper2((objc_super *)(v0 + 608), "init");
  swift_release(v55);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
  v69 = *(_QWORD *)((char *)&dword_10 + (*v17 & 0xFFFFFFFFFFFFFF8));
  v68 = *(_QWORD *)((char *)&dword_18 + (*v17 & 0xFFFFFFFFFFFFFF8));
  if (v69 >= v68 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
  v70 = *(_QWORD *)(v0 + 848);
  v71 = *(_QWORD *)(v0 + 824);
  v72 = *(_QWORD *)(v0 + 816);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v66);
  specialized Array._endMutation()(v73);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
  v20 = v172;
  v18 = v0 + 448;
LABEL_28:
  v75 = *(_QWORD *)(v0 + 792);
  v76 = *(_QWORD *)(v0 + 784);
  v77 = *(_QWORD *)(v0 + 776);
  sub_55D1C(v18, v0 + 368);
  v78 = swift_dynamicCast(v77, v0 + 368, v20, v76, 6);
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
  if (v78)
  {
    v80 = *(_QWORD *)(v0 + 800);
    v81 = *(_QWORD *)(v0 + 792);
    v82 = *(_QWORD *)(v0 + 784);
    v83 = *(_QWORD *)(v0 + 776);
    v84 = *(_QWORD *)(v0 + 744);
    v79(v83, 0, 1, v82);
    v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v83, v82);
    Playlist.url.getter(v85);
    v86 = type metadata accessor for URL(0);
    *(_QWORD *)(v0 + 928) = v86;
    v87 = *(_QWORD *)(v86 - 8);
    *(_QWORD *)(v0 + 936) = v87;
    v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    *(_QWORD *)(v0 + 944) = v88;
    LODWORD(v80) = v88(v84, 1, v86);
    sub_56024(v84, &qword_14AED20);
    v90 = *(_QWORD *)(v0 + 800);
    if ((_DWORD)v80 == 1)
    {
      v91 = Playlist.isPublic.getter(v89);
      v90 = *(_QWORD *)(v0 + 800);
      if (v91 != 2 && (v91 & 1) == 0)
      {
        v92 = Playlist.isShareable.getter();
        v90 = *(_QWORD *)(v0 + 800);
        if ((v92 & 1) == 0)
        {
          if ((Playlist.canMakeShareable.getter() & 1) != 0)
          {
            v93 = (_QWORD *)swift_task_alloc(dword_14FC9AC);
            *(_QWORD *)(v0 + 960) = v93;
            *v93 = v0;
            v93[1] = sub_A3550;
            return Playlist.publish()(*(_QWORD *)(v0 + 768));
          }
          v90 = *(_QWORD *)(v0 + 800);
        }
      }
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 792) + 8))(v90, *(_QWORD *)(v0 + 784));
  }
  else
  {
    v95 = *(_QWORD *)(v0 + 776);
    v79(v95, 1, 1, *(_QWORD *)(v0 + 784));
    sub_56024(v95, (uint64_t *)&unk_14AE790);
  }
  v96 = *(void **)(v170 + 16);
  if (v96)
  {
    v97 = *(_QWORD *)(v0 + 672);
    *(_QWORD *)(v0 + 632) = v96;
    v98 = *(int **)(v97 + 48);
    v99 = v98[1];
    v176 = (int *)((char *)v98 + *v98);
    v100 = v96;
    v101 = (_QWORD *)swift_task_alloc(v99);
    *(_QWORD *)(v0 + 952) = v101;
    *v101 = v0;
    v101[1] = sub_A2F70;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v176)(v0 + 632, *(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 672));
  }
  v102 = *(_QWORD *)(v0 + 896);
  swift_beginAccess(v102 + 16, v0 + 560, 0, 0);
  v103 = *(void **)(v102 + 16);
  if (!v103)
  {
    v109 = *(_QWORD *)(v0 + 736);
    v110 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v109, 1, 1, v110);
LABEL_46:
    v173 = v0 + 16;
    v112 = *(_QWORD *)(v0 + 712);
    v113 = *(_QWORD *)(v0 + 704);
    v114 = *(_QWORD *)(v0 + 696);
    sub_56024(*(_QWORD *)(v0 + 736), &qword_14AED20);
    v115 = Logger.actions.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v112, v115, v114);
    v116 = sub_55D1C((uint64_t)v175, v0 + 488);
    v117 = Logger.logObject.getter(v116);
    v118 = static os_log_type_t.error.getter(v117);
    if (os_log_type_enabled(v117, v118))
    {
      v157 = *(_QWORD *)(v0 + 904);
      v161 = *(_QWORD *)(v0 + 704);
      v165 = *(_QWORD *)(v0 + 696);
      v168 = *(objc_super **)(v0 + 712);
      v119 = (uint8_t *)swift_slowAlloc(12, -1);
      v120 = swift_slowAlloc(32, -1);
      v177[0] = v120;
      *(_DWORD *)v119 = 136446210;
      sub_55D1C(v0 + 488, v0 + 408);
      v121 = String.init<A>(describing:)(v0 + 408, v157);
      v123 = v122;
      *(_QWORD *)(v0 + 624) = sub_23EAC8(v121, v122, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
      swift_bridgeObjectRelease(v123);
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 488));
      _os_log_impl(&dword_0, v117, v118, "No sharing url for item=%{public}s", v119, 0xCu);
      swift_arrayDestroy(v120, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v120, -1, -1);
      swift_slowDealloc(v119, -1, -1);
      (*(void (**)(objc_super *, uint64_t))(v161 + 8))(v168, v165);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 704) + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 696));
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 488));
    }

    v124 = *(_QWORD *)(v0 + 920);
    v125 = *(_QWORD *)(v0 + 912);
    v126 = *(_QWORD *)(v0 + 896);
    v127 = *(_QWORD *)(v0 + 888);
    v128 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 672) + 40))(*(_QWORD *)(v0 + 664));
    v130 = v129;
    v131 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v130);
    v132 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v131, 0, 1);

    v133 = String.okButtonTitle.unsafeMutableAddressor()[1];
    swift_bridgeObjectRetain();
    v134 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v133);
    v135 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v134, 1, 0);

    objc_msgSend(v132, "addAction:", v135);
    swift_beginAccess(v127 + 16, v0 + 584, 0, 0);
    sub_6087C(v127 + 16, v173);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v132, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
    sub_56060(v173);

    swift_release(v124);
    swift_release(v125);
    swift_release(v126);
    swift_release(v127);
    v136 = v128;
    goto LABEL_51;
  }
  v104 = v103;
  v105 = objc_msgSend(v104, "originalURL");
  v106 = *(_QWORD *)(v0 + 728);
  if (v105)
  {
    v107 = v105;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v105);

    v108 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v106, 0, 1, v108);
  }
  else
  {
    v108 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v106, 1, 1, v108);
  }
  v111 = *(_QWORD *)(v0 + 736);
  sub_5C090(*(_QWORD *)(v0 + 728), v111, &qword_14AED20);

  type metadata accessor for URL(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v111, 1, v108) == 1)
    goto LABEL_46;
  v137 = *(_QWORD *)(v0 + 920);
  v138 = *(_QWORD *)(v0 + 912);
  v139 = *(_QWORD *)(v0 + 896);
  v140 = *(_QWORD *)(v0 + 888);
  v141 = *(_QWORD *)(v0 + 864);
  sub_56024(*(_QWORD *)(v0 + 736), &qword_14AED20);
  swift_release(v137);
  swift_release(v138);
  swift_release(v139);
  swift_release(v140);
  v136 = v141;
LABEL_51:
  swift_release(v136);
  v142 = *(_QWORD *)(v0 + 848);
  v143 = *(_QWORD *)(v0 + 840);
  v144 = *(_QWORD *)(v0 + 808);
  v145 = *(_QWORD *)(v0 + 800);
  v146 = *(_QWORD *)(v0 + 776);
  v147 = *(_QWORD *)(v0 + 768);
  v148 = *(_QWORD *)(v0 + 760);
  v149 = *(_QWORD *)(v0 + 752);
  v150 = *(_QWORD *)(v0 + 744);
  v159 = *(_QWORD *)(v0 + 736);
  v162 = *(_QWORD *)(v0 + 728);
  v166 = *(_QWORD *)(v0 + 720);
  v169 = *(objc_super **)(v0 + 712);
  v171 = *(_QWORD *)(v0 + 688);
  v174 = *(_QWORD *)(v0 + 680);
  __swift_destroy_boxed_opaque_existential_1(v175);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v149);
  swift_task_dealloc(v150);
  swift_task_dealloc(v159);
  swift_task_dealloc(v162);
  swift_task_dealloc(v166);
  swift_task_dealloc(v169);
  swift_task_dealloc(v171);
  swift_task_dealloc(v174);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A2F70()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 952));
  return swift_task_switch(sub_A2FC0, *(_QWORD *)(v1 + 872), *(_QWORD *)(v1 + 880));
}

uint64_t sub_A2FC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_A12BC(*(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 912), *(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 888));

  v1 = *(_QWORD *)(v0 + 896);
  swift_beginAccess(v1 + 16, v0 + 560, 0, 0);
  v2 = *(void **)(v1 + 16);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v3, "originalURL");
    v5 = *(_QWORD *)(v0 + 728);
    if (v4)
    {
      v6 = v4;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v4);

      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
    }
    else
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    }
    v10 = *(_QWORD *)(v0 + 736);
    sub_5C090(*(_QWORD *)(v0 + 728), v10, &qword_14AED20);

    type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v10, 1, v7) != 1)
    {
      v37 = *(_QWORD *)(v0 + 920);
      v38 = *(_QWORD *)(v0 + 912);
      v39 = *(_QWORD *)(v0 + 896);
      v40 = *(_QWORD *)(v0 + 888);
      v28 = *(_QWORD *)(v0 + 864);
      sub_56024(*(_QWORD *)(v0 + 736), &qword_14AED20);
      swift_release(v37);
      swift_release(v38);
      swift_release(v39);
      v36 = v40;
      goto LABEL_12;
    }
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 736);
    v9 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  v11 = *(_QWORD *)(v0 + 712);
  v12 = *(_QWORD *)(v0 + 704);
  v13 = *(_QWORD *)(v0 + 696);
  sub_56024(*(_QWORD *)(v0 + 736), &qword_14AED20);
  v14 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  v15 = sub_55D1C(v0 + 448, v0 + 488);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter(v16);
  v59 = v0 + 16;
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 904);
    v52 = *(_QWORD *)(v0 + 704);
    v54 = *(_QWORD *)(v0 + 696);
    v56 = *(_QWORD *)(v0 + 712);
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v61 = v20;
    *(_DWORD *)v19 = 136446210;
    sub_55D1C(v0 + 488, v0 + 408);
    v21 = String.init<A>(describing:)(v0 + 408, v18);
    v23 = v22;
    *(_QWORD *)(v0 + 624) = sub_23EAC8(v21, v22, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    swift_bridgeObjectRelease(v23);
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 488));
    _os_log_impl(&dword_0, v16, v17, "No sharing url for item=%{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v56, v54);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 704) + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 696));
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 488));
  }

  v24 = *(_QWORD *)(v0 + 920);
  v25 = *(_QWORD *)(v0 + 912);
  v26 = *(_QWORD *)(v0 + 896);
  v27 = *(_QWORD *)(v0 + 888);
  v28 = *(_QWORD *)(v0 + 864);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 672) + 40))(*(_QWORD *)(v0 + 664));
  v30 = v29;
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v32 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, 0, 1);

  v33 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v35 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v34, 1, 0);

  objc_msgSend(v32, "addAction:", v35);
  swift_beginAccess(v27 + 16, v0 + 584, 0, 0);
  sub_6087C(v27 + 16, v59);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v32, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
  sub_56060(v59);

  swift_release(v24);
  swift_release(v25);
  swift_release(v26);
  v36 = v27;
LABEL_12:
  swift_release(v36);
  swift_release(v28);
  v41 = *(_QWORD *)(v0 + 848);
  v42 = *(_QWORD *)(v0 + 840);
  v43 = *(_QWORD *)(v0 + 808);
  v44 = *(_QWORD *)(v0 + 800);
  v45 = *(_QWORD *)(v0 + 776);
  v46 = *(_QWORD *)(v0 + 768);
  v47 = *(_QWORD *)(v0 + 760);
  v48 = *(_QWORD *)(v0 + 752);
  v49 = *(_QWORD *)(v0 + 744);
  v51 = *(_QWORD *)(v0 + 736);
  v53 = *(_QWORD *)(v0 + 728);
  v55 = *(_QWORD *)(v0 + 720);
  v57 = *(_QWORD *)(v0 + 712);
  v58 = *(_QWORD *)(v0 + 688);
  v60 = *(_QWORD *)(v0 + 680);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 448));
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A3550()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 960));
  return swift_task_switch(sub_A35A0, *(_QWORD *)(v1 + 872), *(_QWORD *)(v1 + 880));
}

uint64_t sub_A35A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSURL *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  id v63;
  uint64_t v64;
  NSString v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;

  v92 = (_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 784);
  v3 = *(_QWORD *)(v0 + 760);
  sub_5C238(*(_QWORD *)(v0 + 768), v3, (uint64_t *)&unk_14AE790);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v5 = v4(v3, 1, v2);
  v6 = *(_QWORD *)(v0 + 896);
  if (v5 == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 760), (uint64_t *)&unk_14AE790);

    *(_QWORD *)(v6 + 16) = 0;
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 792);
    v8 = *(_QWORD *)(v0 + 784);
    v9 = *(_QWORD *)(v0 + 768);
    v10 = *(_QWORD *)(v0 + 760);
    v11 = *(_QWORD *)(v0 + 752);
    v12 = sub_5CD10();
    v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v13(v10, v8);

    *(_QWORD *)(v6 + 16) = v12;
    sub_5C238(v9, v11, (uint64_t *)&unk_14AE790);
    LODWORD(v10) = v4(v11, 1, v8);
    v14 = v12;
    v15 = *(_QWORD *)(v0 + 928);
    if ((_DWORD)v10 == 1)
    {
      v16 = *(_QWORD *)(v0 + 936);
      v17 = *(_QWORD *)(v0 + 720);
      sub_56024(*(_QWORD *)(v0 + 752), (uint64_t *)&unk_14AE790);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17, 1, 1, v15);
      v18 = 0;
    }
    else
    {
      v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 944);
      v20 = *(_QWORD *)(v0 + 784);
      v21 = *(_QWORD *)(v0 + 752);
      v22 = *(_QWORD *)(v0 + 720);
      Playlist.url.getter();
      v13(v21, v20);
      if (v19(v22, 1, v15) == 1)
      {
        v18 = 0;
      }
      else
      {
        v24 = *(_QWORD *)(v0 + 936);
        v25 = *(_QWORD *)(v0 + 928);
        v26 = *(_QWORD *)(v0 + 720);
        URL._bridgeToObjectiveC()(v23);
        v18 = v27;
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
      }
    }
    objc_msgSend(v14, "setOriginalURL:", v18);

  }
  v28 = *(_QWORD *)(v0 + 800);
  v29 = *(_QWORD *)(v0 + 792);
  v30 = *(_QWORD *)(v0 + 784);
  v31 = *(_QWORD *)(v0 + 768);
  sub_A12BC(*(_QWORD *)(v0 + 920), *(_QWORD *)(v0 + 912), *(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 888));
  sub_56024(v31, (uint64_t *)&unk_14AE790);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  v32 = *(_QWORD *)(v0 + 896);
  swift_beginAccess(v32 + 16, v0 + 560, 0, 0);
  v33 = *(void **)(v32 + 16);
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v34, "originalURL");
    v36 = *(_QWORD *)(v0 + 728);
    if (v35)
    {
      v37 = v35;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

      v38 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 0, 1, v38);
    }
    else
    {
      v38 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 1, 1, v38);
    }
    v41 = *(_QWORD *)(v0 + 736);
    sub_5C090(*(_QWORD *)(v0 + 728), v41, &qword_14AED20);

    type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v41, 1, v38) != 1)
    {
      v68 = *(_QWORD *)(v0 + 920);
      v69 = *(_QWORD *)(v0 + 912);
      v70 = *(_QWORD *)(v0 + 896);
      v71 = *(_QWORD *)(v0 + 888);
      v59 = *(_QWORD *)(v0 + 864);
      sub_56024(*(_QWORD *)(v0 + 736), &qword_14AED20);
      swift_release(v68);
      swift_release(v69);
      swift_release(v70);
      v67 = v71;
      goto LABEL_20;
    }
  }
  else
  {
    v39 = *(_QWORD *)(v0 + 736);
    v40 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
  }
  v90 = v0 + 16;
  v42 = *(_QWORD *)(v0 + 712);
  v43 = *(_QWORD *)(v0 + 704);
  v44 = *(_QWORD *)(v0 + 696);
  sub_56024(*(_QWORD *)(v0 + 736), &qword_14AED20);
  v45 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v45, v44);
  v46 = sub_55D1C((uint64_t)v92, v0 + 488);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.error.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    v49 = *(_QWORD *)(v0 + 904);
    v83 = *(_QWORD *)(v0 + 704);
    v85 = *(_QWORD *)(v0 + 696);
    v87 = *(_QWORD *)(v0 + 712);
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v93 = v51;
    *(_DWORD *)v50 = 136446210;
    sub_55D1C(v0 + 488, v0 + 408);
    v52 = String.init<A>(describing:)(v0 + 408, v49);
    v54 = v53;
    *(_QWORD *)(v0 + 624) = sub_23EAC8(v52, v53, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    swift_bridgeObjectRelease(v54);
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 488));
    _os_log_impl(&dword_0, v47, v48, "No sharing url for item=%{public}s", v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v87, v85);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 704) + 8))(*(_QWORD *)(v0 + 712), *(_QWORD *)(v0 + 696));
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 488));
  }

  v55 = *(_QWORD *)(v0 + 920);
  v56 = *(_QWORD *)(v0 + 912);
  v57 = *(_QWORD *)(v0 + 896);
  v58 = *(_QWORD *)(v0 + 888);
  v59 = *(_QWORD *)(v0 + 864);
  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 672) + 40))(*(_QWORD *)(v0 + 664));
  v61 = v60;
  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v63 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v62, 0, 1);

  v64 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v64);
  v66 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v65, 1, 0);

  objc_msgSend(v63, "addAction:", v66);
  swift_beginAccess(v58 + 16, v0 + 584, 0, 0);
  sub_6087C(v58 + 16, v90);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v63, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
  sub_56060(v90);

  swift_release(v55);
  swift_release(v56);
  swift_release(v57);
  v67 = v58;
LABEL_20:
  swift_release(v67);
  swift_release(v59);
  v72 = *(_QWORD *)(v0 + 848);
  v73 = *(_QWORD *)(v0 + 840);
  v74 = *(_QWORD *)(v0 + 808);
  v75 = *(_QWORD *)(v0 + 800);
  v76 = *(_QWORD *)(v0 + 776);
  v77 = *(_QWORD *)(v0 + 768);
  v78 = *(_QWORD *)(v0 + 760);
  v79 = *(_QWORD *)(v0 + 752);
  v80 = *(_QWORD *)(v0 + 744);
  v82 = *(_QWORD *)(v0 + 736);
  v84 = *(_QWORD *)(v0 + 728);
  v86 = *(_QWORD *)(v0 + 720);
  v88 = *(_QWORD *)(v0 + 712);
  v89 = *(_QWORD *)(v0 + 688);
  v91 = *(_QWORD *)(v0 + 680);
  __swift_destroy_boxed_opaque_existential_1(v92);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v91);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_A3CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  id v21;
  unint64_t v22;
  id v23;
  Class v24;
  Class v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSArray v38;
  id v39;
  id v40;
  unint64_t v41;
  id v42;
  Class v43;
  NSDictionary v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSArray v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Class v83;
  id v84;
  unint64_t v85;
  id v86;
  Class v87;
  Class v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Class v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  Class v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  Class v121;
  void *v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Class v127;
  id v128;
  unint64_t v129;
  id v130;
  Class v131;
  Class v132;
  id v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  Class v156;
  id v157;
  unint64_t v158;
  id v159;
  Class v160;
  Class v161;
  id v162;
  unint64_t v163;
  id v164;
  Class v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE v174[80];
  _BYTE v175[56];
  _BYTE v176[56];
  _BYTE v177[80];
  _BYTE v178[56];
  _BYTE v179[56];
  _BYTE v180[64];

  v2 = sub_4E684(0, (unint64_t *)&unk_14AED90, MPModelAlbum_ptr);
  if (swift_dynamicCastMetatype(a1, v2))
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v4 = swift_allocObject(v3, 80, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1060460;
    *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumArtwork);
    *(_QWORD *)(v4 + 40) = v5;
    *(_QWORD *)(v4 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
    *(_QWORD *)(v4 + 56) = v6;
    *(_QWORD *)(v4 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTrackCount);
    *(_QWORD *)(v4 + 72) = v7;
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
    inited = swift_initStackObject(v8, v174);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
    *(_QWORD *)(inited + 40) = v10;
    v11 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_105B360;
    *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
    *(_QWORD *)(v11 + 40) = v12;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = (void *)objc_opt_self(MPPropertySet);
    v15 = objc_msgSend(v14, "propertySetWithProperties:", isa);
    swift_bridgeObjectRelease(v11);

    *(_QWORD *)(inited + 48) = v15;
    *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumRepresentativeSong);
    *(_QWORD *)(inited + 64) = v16;
    v17 = swift_allocObject(v3, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_105F890;
    *(_QWORD *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
    *(_QWORD *)(v17 + 40) = v18;
    *(_QWORD *)(v17 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
    *(_QWORD *)(v17 + 56) = v19;
    v20 = Array._bridgeToObjectiveC()().super.isa;
    v21 = objc_msgSend(v14, "propertySetWithProperties:", v20);
    swift_bridgeObjectRelease(v17);

    *(_QWORD *)(inited + 72) = v21;
    v22 = sub_196678(inited);
    v23 = objc_allocWithZone((Class)MPPropertySet);
    v24 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    sub_4E684(0, (unint64_t *)&qword_14B0AF0, MPPropertySet_ptr);
    v25 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v22);
    v26 = objc_msgSend(v23, "initWithProperties:relationships:", v24, v25);

    return v26;
  }
  v28 = sub_4E684(0, (unint64_t *)&unk_14C0340, MPModelArtist_ptr);
  if (swift_dynamicCastMetatype(a1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v30 = swift_allocObject(v29, 64, 7);
    *(_OWORD *)(v30 + 16) = xmmword_105F890;
    *(_QWORD *)(v30 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistArtwork);
    *(_QWORD *)(v30 + 40) = v31;
    *(_QWORD *)(v30 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
    *(_QWORD *)(v30 + 56) = v32;
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
    v34 = swift_initStackObject(v33, v175);
    *(_OWORD *)(v34 + 16) = xmmword_105B360;
    *(_QWORD *)(v34 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipArtistGenre);
    *(_QWORD *)(v34 + 40) = v35;
    v36 = swift_allocObject(v29, 48, 7);
    *(_OWORD *)(v36 + 16) = xmmword_105B360;
    *(_QWORD *)(v36 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyGenreName);
    *(_QWORD *)(v36 + 40) = v37;
    v38.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v38.super.isa);
LABEL_5:
    v40 = v39;
    swift_bridgeObjectRelease(v36);

    *(_QWORD *)(v34 + 48) = v40;
    v41 = sub_196678(v34);
    v42 = objc_allocWithZone((Class)MPPropertySet);
    v43 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
    sub_4E684(0, (unint64_t *)&qword_14B0AF0, MPPropertySet_ptr);
    v44.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v41);
    v45 = objc_msgSend(v42, "initWithProperties:relationships:", v43, v44.super.isa);

LABEL_6:
    return v45;
  }
  v46 = sub_4E684(0, (unint64_t *)&unk_14AEDA0, MPModelComposer_ptr);
  if (swift_dynamicCastMetatype(a1, v46))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v48 = swift_allocObject(v47, 48, 7);
    *(_OWORD *)(v48 + 16) = xmmword_105B360;
    *(_QWORD *)(v48 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyComposerName);
    *(_QWORD *)(v48 + 40) = v49;
    v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v50.super.isa);
    goto LABEL_13;
  }
  v52 = sub_4E684(0, (unint64_t *)&unk_14B0B00, MPModelCurator_ptr);
  if (swift_dynamicCastMetatype(a1, v52))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v48 = swift_allocObject(v53, 96, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1060470;
    *(_QWORD *)(v48 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
    *(_QWORD *)(v48 + 40) = v54;
    *(_QWORD *)(v48 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorEditorialArtwork);
    *(_QWORD *)(v48 + 56) = v55;
    *(_QWORD *)(v48 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorKind);
    *(_QWORD *)(v48 + 72) = v56;
    *(_QWORD *)(v48 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorSubKind);
    *(_QWORD *)(v48 + 88) = v57;
    v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v50.super.isa);
    goto LABEL_13;
  }
  v58 = sub_4E684(0, (unint64_t *)&unk_14AEDB0, MPModelMovie_ptr);
  if (swift_dynamicCastMetatype(a1, v58))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v48 = swift_allocObject(v59, 64, 7);
    *(_OWORD *)(v48 + 16) = xmmword_105F890;
    *(_QWORD *)(v48 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieTitle);
    *(_QWORD *)(v48 + 40) = v60;
    *(_QWORD *)(v48 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieArtwork);
    *(_QWORD *)(v48 + 56) = v61;
    v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v50.super.isa);
    goto LABEL_13;
  }
  v63 = sub_4E684(0, (unint64_t *)&qword_14B9C40, MPModelPlaylist_ptr);
  if (swift_dynamicCastMetatype(a1, v63))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v65 = swift_allocObject(v64, 208, 7);
    *(_OWORD *)(v65 + 16) = xmmword_1060480;
    *(_QWORD *)(v65 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
    *(_QWORD *)(v65 + 40) = v66;
    *(_QWORD *)(v65 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistIsOwner);
    *(_QWORD *)(v65 + 56) = v67;
    *(_QWORD *)(v65 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
    *(_QWORD *)(v65 + 72) = v68;
    *(_QWORD *)(v65 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistType);
    *(_QWORD *)(v65 + 88) = v69;
    *(_QWORD *)(v65 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistTracksTiledArtwork);
    *(_QWORD *)(v65 + 104) = v70;
    *(_QWORD *)(v65 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCuratorPlaylist);
    *(_QWORD *)(v65 + 120) = v71;
    *(_QWORD *)(v65 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistSubscribed);
    *(_QWORD *)(v65 + 136) = v72;
    *(_QWORD *)(v65 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistShareURL);
    *(_QWORD *)(v65 + 152) = v73;
    *(_QWORD *)(v65 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistShareShortURL);
    *(_QWORD *)(v65 + 168) = v74;
    *(_QWORD *)(v65 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistPublicPlaylist);
    *(_QWORD *)(v65 + 184) = v75;
    *(_QWORD *)(v65 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistUserEditableComponents);
    *(_QWORD *)(v65 + 200) = v76;
    v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
    v78 = swift_initStackObject(v77, v176);
    *(_OWORD *)(v78 + 16) = xmmword_105B360;
    *(_QWORD *)(v78 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
    *(_QWORD *)(v78 + 40) = v79;
    v80 = swift_allocObject(v64, 64, 7);
    *(_OWORD *)(v80 + 16) = xmmword_105F890;
    *(_QWORD *)(v80 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
    *(_QWORD *)(v80 + 40) = v81;
    *(_QWORD *)(v80 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorHandle);
    *(_QWORD *)(v80 + 56) = v82;
    v83 = Array._bridgeToObjectiveC()().super.isa;
    v84 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v83);
    swift_bridgeObjectRelease(v80);

    *(_QWORD *)(v78 + 48) = v84;
    v85 = sub_196678(v78);
    v86 = objc_allocWithZone((Class)MPPropertySet);
    v87 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v65);
    sub_4E684(0, (unint64_t *)&qword_14B0AF0, MPPropertySet_ptr);
    v88 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v85);
    v89 = objc_msgSend(v86, "initWithProperties:relationships:", v87, v88);

    return v89;
  }
  v90 = sub_4E684(0, (unint64_t *)&unk_14AEDC0, MPModelRadioStation_ptr);
  if (swift_dynamicCastMetatype(a1, v90))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v48 = swift_allocObject(v91, 80, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1060460;
    *(_QWORD *)(v48 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationSubtype);
    *(_QWORD *)(v48 + 40) = v92;
    *(_QWORD *)(v48 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationName);
    *(_QWORD *)(v48 + 56) = v93;
    *(_QWORD *)(v48 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationArtwork);
    *(_QWORD *)(v48 + 72) = v94;
    v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v50.super.isa);
    goto LABEL_13;
  }
  v95 = sub_4E684(0, (unint64_t *)&qword_14DE440, MPModelSocialPerson_ptr);
  if (swift_dynamicCastMetatype(a1, v95))
  {
    v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v97 = swift_allocObject(v96, 80, 7);
    *(_OWORD *)(v97 + 16) = xmmword_1060460;
    *(_QWORD *)(v97 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonName);
    *(_QWORD *)(v97 + 40) = v98;
    *(_QWORD *)(v97 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonArtwork);
    *(_QWORD *)(v97 + 56) = v99;
    *(_QWORD *)(v97 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonHasLightweightProfile);
    *(_QWORD *)(v97 + 72) = v100;
    v101 = Array._bridgeToObjectiveC()().super.isa;
    v102 = (void *)objc_opt_self(MPPropertySet);
    v103 = objc_msgSend(v102, "propertySetWithProperties:", v101);
    swift_bridgeObjectRelease(v97);

    v104 = swift_allocObject(v96, 64, 7);
    *(_OWORD *)(v104 + 16) = xmmword_105F890;
    *(_QWORD *)(v104 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonIsPrivate);
    *(_QWORD *)(v104 + 40) = v105;
    *(_QWORD *)(v104 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySocialPersonIsVerified);
    *(_QWORD *)(v104 + 56) = v106;
    v107 = Array._bridgeToObjectiveC()().super.isa;
    v108 = objc_msgSend(v102, "propertySetWithProperties:", v107);
    swift_bridgeObjectRelease(v104);

    v109 = objc_msgSend(v103, "propertySetByCombiningWithPropertySet:", v108);
    return v109;
  }
  v110 = sub_4E684(0, (unint64_t *)&qword_14AEDD0, MPModelSong_ptr);
  if (swift_dynamicCastMetatype(a1, v110))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v112 = swift_allocObject(v111, 80, 7);
    *(_OWORD *)(v112 + 16) = xmmword_1060460;
    *(_QWORD *)(v112 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
    *(_QWORD *)(v112 + 40) = v113;
    *(_QWORD *)(v112 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
    *(_QWORD *)(v112 + 56) = v114;
    *(_QWORD *)(v112 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
    *(_QWORD *)(v112 + 72) = v115;
    v116 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
    v117 = swift_initStackObject(v116, v177);
    *(_OWORD *)(v117 + 16) = xmmword_105F890;
    *(_QWORD *)(v117 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
    *(_QWORD *)(v117 + 40) = v118;
    v119 = swift_allocObject(v111, 48, 7);
    *(_OWORD *)(v119 + 16) = xmmword_105B360;
    *(_QWORD *)(v119 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
    *(_QWORD *)(v119 + 40) = v120;
    v121 = Array._bridgeToObjectiveC()().super.isa;
    v122 = (void *)objc_opt_self(MPPropertySet);
    v123 = objc_msgSend(v122, "propertySetWithProperties:", v121);
    swift_bridgeObjectRelease(v119);

    *(_QWORD *)(v117 + 48) = v123;
    *(_QWORD *)(v117 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
    *(_QWORD *)(v117 + 64) = v124;
    v125 = swift_allocObject(v111, 48, 7);
    *(_OWORD *)(v125 + 16) = xmmword_105B360;
    *(_QWORD *)(v125 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
    *(_QWORD *)(v125 + 40) = v126;
    v127 = Array._bridgeToObjectiveC()().super.isa;
    v128 = objc_msgSend(v122, "propertySetWithProperties:", v127);
    swift_bridgeObjectRelease(v125);

    *(_QWORD *)(v117 + 72) = v128;
    v129 = sub_196678(v117);
    v130 = objc_allocWithZone((Class)MPPropertySet);
    v131 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v112);
    sub_4E684(0, (unint64_t *)&qword_14B0AF0, MPPropertySet_ptr);
    v132 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v129);
    v133 = objc_msgSend(v130, "initWithProperties:relationships:", v131, v132);

    type metadata accessor for LyricsLoader();
    v134 = static LyricsLoader.requiredProperties()();
    v109 = objc_msgSend(v133, "propertySetByCombiningWithPropertySet:", v134);

    return v109;
  }
  v135 = sub_4E684(0, &qword_14B0B10, MPModelTVEpisode_ptr);
  if (swift_dynamicCastMetatype(a1, v135))
  {
    v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v30 = swift_allocObject(v136, 64, 7);
    *(_OWORD *)(v30 + 16) = xmmword_105F890;
    *(_QWORD *)(v30 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeTitle);
    *(_QWORD *)(v30 + 40) = v137;
    *(_QWORD *)(v30 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeArtwork);
    *(_QWORD *)(v30 + 56) = v138;
    v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
    v34 = swift_initStackObject(v139, v178);
    *(_OWORD *)(v34 + 16) = xmmword_105B360;
    *(_QWORD *)(v34 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeShow);
    *(_QWORD *)(v34 + 40) = v140;
    v36 = swift_allocObject(v136, 48, 7);
    *(_OWORD *)(v36 + 16) = xmmword_105B360;
    *(_QWORD *)(v36 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
    *(_QWORD *)(v36 + 40) = v141;
    v38.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v38.super.isa);
    goto LABEL_5;
  }
  v142 = sub_4E684(0, (unint64_t *)&unk_14AEDE0, MPModelTVSeason_ptr);
  if (swift_dynamicCastMetatype(a1, v142))
  {
    v143 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v144 = swift_allocObject(v143, 64, 7);
    *(_OWORD *)(v144 + 16) = xmmword_105F890;
    *(_QWORD *)(v144 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVSeasonNumber);
    *(_QWORD *)(v144 + 40) = v145;
    *(_QWORD *)(v144 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVSeasonArtwork);
    *(_QWORD *)(v144 + 56) = v146;
    v147 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
    v148 = swift_initStackObject(v147, v180);
    *(_OWORD *)(v148 + 16) = xmmword_105B360;
    *(_QWORD *)(v148 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVSeasonShow);
    *(_QWORD *)(v148 + 40) = v149;
    v150 = swift_allocObject(v143, 48, 7);
    *(_OWORD *)(v150 + 16) = xmmword_105B360;
    *(_QWORD *)(v150 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
    *(_QWORD *)(v150 + 40) = v151;
    v152 = swift_initStackObject(v147, v179);
    *(_OWORD *)(v152 + 16) = xmmword_105B360;
    *(_QWORD *)(v152 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVShowCreator);
    *(_QWORD *)(v152 + 40) = v153;
    v154 = swift_allocObject(v143, 48, 7);
    *(_OWORD *)(v154 + 16) = xmmword_105B360;
    *(_QWORD *)(v154 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowCreatorName);
    *(_QWORD *)(v154 + 40) = v155;
    v156 = Array._bridgeToObjectiveC()().super.isa;
    v157 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v156);
    swift_bridgeObjectRelease(v154);

    *(_QWORD *)(v152 + 48) = v157;
    v158 = sub_196678(v152);
    v159 = objc_allocWithZone((Class)MPPropertySet);
    v160 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v150);
    sub_4E684(0, (unint64_t *)&qword_14B0AF0, MPPropertySet_ptr);
    v161 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v158);
    v162 = objc_msgSend(v159, "initWithProperties:relationships:", v160, v161);

    *(_QWORD *)(v148 + 48) = v162;
    v163 = sub_196678(v148);
    v164 = objc_allocWithZone((Class)MPPropertySet);
    v165 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v144);
    v44.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v163);
    v45 = objc_msgSend(v164, "initWithProperties:relationships:", v165, v44.super.isa);

    goto LABEL_6;
  }
  v166 = sub_4E684(0, (unint64_t *)&unk_15105C0, MPModelTVShow_ptr);
  if (swift_dynamicCastMetatype(a1, v166))
  {
    v167 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v48 = swift_allocObject(v167, 64, 7);
    *(_OWORD *)(v48 + 16) = xmmword_105F890;
    *(_QWORD *)(v48 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
    *(_QWORD *)(v48 + 40) = v168;
    *(_QWORD *)(v48 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowArtwork);
    *(_QWORD *)(v48 + 56) = v169;
    v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v50.super.isa);
  }
  else
  {
    v170 = sub_4E684(0, (unint64_t *)&unk_14AEDF0, MPModelRecordLabel_ptr);
    if (!swift_dynamicCastMetatype(a1, v170))
      return objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
    v171 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v48 = swift_allocObject(v171, 64, 7);
    *(_OWORD *)(v48 + 16) = xmmword_105F890;
    *(_QWORD *)(v48 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRecordLabelName);
    *(_QWORD *)(v48 + 40) = v172;
    *(_QWORD *)(v48 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRecordLabelArtwork);
    *(_QWORD *)(v48 + 56) = v173;
    v50.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v51 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v50.super.isa);
  }
LABEL_13:
  v62 = v51;
  swift_bridgeObjectRelease(v48);

  return v62;
}

id sub_A507C(void *a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  __int128 v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  _QWORD aBlock[5];
  uint64_t v28;

  v3 = type metadata accessor for UTType(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  if (a1)
  {
    v8 = qword_14AA908;
    v9 = a1;
    if (v8 != -1)
      swift_once(&qword_14AA908, sub_9F954);
    v11 = qword_14AEB60;
    v12 = static UTType.png.getter(v10);
    UTType.identifier.getter(v12);
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v16 = swift_allocObject(&unk_13430C0, 32, 7);
    *(_QWORD *)(v16 + 16) = v9;
    *(_QWORD *)(v16 + 24) = v11;
    aBlock[4] = sub_A90B0;
    v28 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_5EFB4;
    aBlock[3] = &block_descriptor_49;
    v17 = _Block_copy(aBlock);
    v18 = v28;
    v19 = v9;
    swift_retain(v11);
    objc_msgSend(v7, "registerItemForTypeIdentifier:loadHandler:", v15, v17, swift_release(v18).n128_f64[0]);
    _Block_release(v17);

  }
  if (qword_14AA910 != -1)
    swift_once(&qword_14AA910, sub_9FA18);
  v20 = xmmword_157F5F0;
  sub_4E684(0, (unint64_t *)&qword_14B7160, UIGraphicsImageRendererFormat_ptr);
  v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  Artwork.Placeholder.image(with:graphicsFormat:)((uint64_t)v21, *(double *)&v20, *((double *)&v20 + 1));
  v23 = v22;

  if (v23)
  {
    v24 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v23);

  }
  else
  {
    v24 = 0;
  }
  v25 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v7, 0, v24);

  return v25;
}

id sub_A5318(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  double v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  double v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self(MPModelCurator);
  v10 = swift_dynamicCastObjCClass(a1);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = a1;
    if (objc_msgSend(v11, "curatorSubKind") == (char *)&dword_0 + 3)
    {
      v13 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaRadioMetadata), "init");
      v14 = objc_msgSend(v12, "name");
      if (v14)
      {
        v15 = v14;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        v17 = v16;

      }
      else
      {
        v27 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
        static Locale.current.getter(v27);
        String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
        v17 = v28;
      }
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v13, "setName:", v29, swift_bridgeObjectRelease(v17).n128_f64[0]);

      MPModelObject.artworkPlaceholder.getter(&v33);
      v26 = sub_A507C(a2, v30);
      sub_5C090((uint64_t)&v33, (uint64_t)&v39, &qword_14AD660);
      sub_5F12C(&v39);
      sub_5C090((uint64_t)&v34, (uint64_t)&v38, &qword_14AD660);
      sub_5F12C(&v38);
      sub_5C090((uint64_t)&v35, (uint64_t)&v37, &qword_14AEE30);
      sub_5F12C(&v37);

      objc_msgSend(v13, "setArtwork:", v26);
      goto LABEL_12;
    }

  }
  v13 = objc_msgSend(objc_allocWithZone((Class)LPiTunesUserProfileMetadata), "init");
  v18 = objc_msgSend(a1, "name");
  if (v18)
  {
    v19 = v18;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

  }
  else
  {
    v22 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v22);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v21 = v23;
  }
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setName:", v24, swift_bridgeObjectRelease(v21).n128_f64[0]);

  MPModelObject.artworkPlaceholder.getter(&v33);
  v26 = sub_A507C(a2, v25);
  sub_5C090((uint64_t)&v33, (uint64_t)&v39, &qword_14AD660);
  sub_5F12C(&v39);
  sub_5C090((uint64_t)&v34, (uint64_t)&v38, &qword_14AD660);
  sub_5F12C(&v38);
  sub_5C090((uint64_t)&v35, (uint64_t)&v37, &qword_14AEE30);
  sub_5F12C(&v37);

  objc_msgSend(v13, "setArtwork:", v26);
LABEL_12:

  return v13;
}

id sub_A56DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  NSString v19;
  id v20;
  NSString v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  id v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  id v35;
  id v36;
  id v37;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaArtistMetadata), "init");
  v9 = objc_msgSend(a1, "name");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setName:", v15, swift_bridgeObjectRelease(v12).n128_f64[0]);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v16)
  {
    v18 = v16;
    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v18).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v19, v17);

  v20 = objc_msgSend(a1, "genre");
  v21 = v20;
  if (v20)
  {
    v22 = objc_msgSend(v20, "name");
    if (v22)
    {
      v23 = v22;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
    }
    else
    {

      v21 = 0;
    }
  }
  objc_msgSend(v8, "setGenre:", v21);

  v26 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v32);
  v28 = sub_A507C(v26, v27);
  sub_5C090((uint64_t)&v32, (uint64_t)&v37, &qword_14AD660);
  sub_5F12C(&v37);
  sub_5C090((uint64_t)&v33, (uint64_t)&v36, &qword_14AD660);
  sub_5F12C(&v36);
  sub_5C090((uint64_t)v34, (uint64_t)&v35, &qword_14AEE30);
  sub_5F12C(&v35);
  v29 = (void *)v34[1];

  objc_msgSend(v8, "setArtwork:", v28);
  return v8;
}

id sub_A59CC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  NSString v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  NSString v31;
  id v32;
  double v33;
  id v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];
  id v41;
  id v42;
  id v43;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaAlbumMetadata), "init");
  v9 = objc_msgSend(a1, "title");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  if ((uint64_t)objc_msgSend(a1, "trackCount") < 2)
  {
    v15 = objc_msgSend(a1, "representativeSong");
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, "title");
      if (v17)
      {
        v18 = v17;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v20 = v19;
        swift_bridgeObjectRelease(v12);

        v12 = v20;
      }
      else
      {

      }
    }
  }
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setName:", v21, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v22 = objc_msgSend(a1, "artist");
  v23 = v22;
  if (v22)
  {
    v24 = objc_msgSend(v22, "name");
    if (v24)
    {
      v25 = v24;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v27);
    }
    else
    {

      v23 = 0;
    }
  }
  objc_msgSend(v8, "setArtist:", v23);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v28)
  {
    v30 = v28;
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  else
  {
    v31 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v31, v29);

  v32 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v38);
  v34 = sub_A507C(v32, v33);
  sub_5C090((uint64_t)&v38, (uint64_t)&v43, &qword_14AD660);
  sub_5F12C(&v43);
  sub_5C090((uint64_t)&v39, (uint64_t)&v42, &qword_14AD660);
  sub_5F12C(&v42);
  sub_5C090((uint64_t)v40, (uint64_t)&v41, &qword_14AEE30);
  sub_5F12C(&v41);
  v35 = (void *)v40[1];

  objc_msgSend(v8, "setArtwork:", v34);
  return v8;
}

id sub_A5D4C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  double v17;
  id v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaRadioMetadata), "init");
  v9 = objc_msgSend(a1, "name");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setName:", v15, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v16 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v22);
  v18 = sub_A507C(v16, v17);
  sub_5C090((uint64_t)&v22, (uint64_t)&v27, &qword_14AD660);
  sub_5F12C(&v27);
  sub_5C090((uint64_t)&v23, (uint64_t)&v26, &qword_14AD660);
  sub_5F12C(&v26);
  sub_5C090((uint64_t)v24, (uint64_t)&v25, &qword_14AEE30);
  sub_5F12C(&v25);
  v19 = (void *)v24[1];

  objc_msgSend(v8, "setArtwork:", v18);
  return v8;
}

id sub_A5F78(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  NSString v37;
  id v38;
  double v39;
  id v40;
  void *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  id v47;
  id v48;
  id v49;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaSongMetadata), "init");
  v9 = objc_msgSend(a1, "title");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setName:", v15, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v16 = objc_msgSend(a1, "artist");
  v17 = v16;
  if (v16)
  {
    v18 = objc_msgSend(v16, "name");
    if (v18)
    {
      v19 = v18;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
    }
    else
    {

      v17 = 0;
    }
  }
  objc_msgSend(v8, "setArtist:", v17);

  v22 = objc_msgSend(a1, "album");
  v23 = v22;
  if (v22)
  {
    v24 = objc_msgSend(v22, "title");
    if (v24)
    {
      v25 = v24;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v27);
    }
    else
    {

      v23 = 0;
    }
  }
  objc_msgSend(v8, "setAlbum:", v23);

  v28 = objc_msgSend(a1, "lyrics");
  v29 = v28;
  if (v28)
  {
    v30 = objc_msgSend(v28, "text");
    if (v30)
    {
      v31 = v30;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
    }
    else
    {

      v29 = 0;
    }
  }
  objc_msgSend(v8, "setLyrics:", v29);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v34)
  {
    v36 = v34;
    v37 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v35 = swift_bridgeObjectRelease(v36).n128_u64[0];
  }
  else
  {
    v37 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v37, v35);

  v38 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v44);
  v40 = sub_A507C(v38, v39);
  sub_5C090((uint64_t)&v44, (uint64_t)&v49, &qword_14AD660);
  sub_5F12C(&v49);
  sub_5C090((uint64_t)&v45, (uint64_t)&v48, &qword_14AD660);
  sub_5F12C(&v48);
  sub_5C090((uint64_t)v46, (uint64_t)&v47, &qword_14AEE30);
  sub_5F12C(&v47);
  v41 = (void *)v46[1];

  objc_msgSend(v8, "setArtwork:", v40);
  return v8;
}

id sub_A639C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  double v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  NSString v34;
  id v35;
  void *v36;
  double v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43[4];
  id v44;
  id v45;
  id v46;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata), "init");
  v9 = objc_msgSend(a1, "name");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000000010C5810);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setName:", v15, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v16 = objc_msgSend(a1, "curator");
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "name");
    if (v18)
    {
      v19 = v18;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      goto LABEL_10;
    }

  }
  v22 = objc_msgSend(a1, "ownerName");
  v19 = v22;
  if (!v22)
    goto LABEL_11;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v21 = v24;
LABEL_10:

  v19 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
LABEL_11:
  objc_msgSend(v8, "setCurator:", v19, v23);

  v25 = objc_msgSend(a1, "curator");
  v26 = v25;
  if (v25)
  {
    v27 = objc_msgSend(v25, "handle");
    if (v27)
    {
      v28 = v27;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
    }
    else
    {

      v26 = 0;
    }
  }
  objc_msgSend(v8, "setCuratorHandle:", v26);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v31)
  {
    v33 = v31;
    v34 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v32 = swift_bridgeObjectRelease(v33).n128_u64[0];
  }
  else
  {
    v34 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v34, v32);

  if (objc_msgSend(a1, "hasLoadedValueForKey:", MPModelPropertyPlaylistType)
    && objc_msgSend(a1, "type") != (char *)&dword_4 + 3)
  {
    v35 = MPModelPlaylist.preferredArtworkCatalog.getter();
  }
  else
  {
    v35 = objc_msgSend(a1, "artworkCatalog");
  }
  v36 = v35;
  MPModelObject.artworkPlaceholder.getter(&v41);
  v38 = sub_A507C(v36, v37);
  sub_5C090((uint64_t)&v41, (uint64_t)&v46, &qword_14AD660);
  sub_5F12C(&v46);
  sub_5C090((uint64_t)&v42, (uint64_t)&v45, &qword_14AD660);
  sub_5F12C(&v45);
  sub_5C090((uint64_t)v43, (uint64_t)&v44, &qword_14AEE30);
  sub_5F12C(&v44);

  objc_msgSend(v8, "setArtwork:", v38);
  return v8;
}

id sub_A67A8(void *a1)
{
  return sub_A67DC(a1, (Class *)LPAppleMusicTVShowMetadata_ptr, 0xEC000000776F6853);
}

id sub_A67C0(void *a1)
{
  return sub_A67DC(a1, (Class *)LPiTunesMediaMovieMetadata_ptr, 0xED0000656C746954);
}

id sub_A67DC(void *a1, Class *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  NSString v23;
  id v24;
  double v25;
  id v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(*a2), "init");
  v13 = objc_msgSend(a1, "title");
  if (v13)
  {
    v14 = v13;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

  }
  else
  {
    v17 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, a3);
    static Locale.current.getter(v17);
    String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, 0, 0, 256);
    v16 = v18;
  }
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setName:", v19, swift_bridgeObjectRelease(v16).n128_f64[0]);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v20)
  {
    v22 = v20;
    v23 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v12, "setStoreIdentifier:", v23, v21);

  v24 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v30);
  v26 = sub_A507C(v24, v25);
  sub_5C090((uint64_t)&v30, (uint64_t)&v35, &qword_14AD660);
  sub_5F12C(&v35);
  sub_5C090((uint64_t)&v31, (uint64_t)&v34, &qword_14AD660);
  sub_5F12C(&v34);
  sub_5C090((uint64_t)v32, (uint64_t)&v33, &qword_14AEE30);
  sub_5F12C(&v33);
  v27 = (void *)v32[1];

  objc_msgSend(v12, "setArtwork:", v26);
  return v12;
}

id sub_A6A44(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  NSString v18;
  id v19;
  double v20;
  id v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  id v28;
  id v29;
  id v30;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaTVSeasonMetadata), "init");
  MPModelTVSeason.title.getter();
  v11 = v10;
  if (!v9)
  {
    v12 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
    static Locale.current.getter(v12);
    String.init(localized:table:bundle:locale:comment:)(v7, v11, 0, 0, v4, 0, 0, 256);
  }
  v13 = v9;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setName:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v15)
  {
    v17 = v15;
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v18, v16);

  v19 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v25);
  v21 = sub_A507C(v19, v20);
  sub_5C090((uint64_t)&v25, (uint64_t)&v30, &qword_14AD660);
  sub_5F12C(&v30);
  sub_5C090((uint64_t)&v26, (uint64_t)&v29, &qword_14AD660);
  sub_5F12C(&v29);
  sub_5C090((uint64_t)v27, (uint64_t)&v28, &qword_14AEE30);
  sub_5F12C(&v28);
  v22 = (void *)v27[1];

  objc_msgSend(v8, "setArtwork:", v21);
  return v8;
}

id sub_A6C84(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  NSString v28;
  id v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  id v38;
  id v39;
  id v40;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaTVEpisodeMetadata), "init");
  v9 = objc_msgSend(a1, "title");
  if (v9)
  {
    v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

  }
  else
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v12 = v14;
  }
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setEpisodeName:", v15, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v16 = objc_msgSend(a1, "show");
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "title");
    if (v18)
    {
      v19 = v18;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      goto LABEL_9;
    }

  }
  v22 = String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
  static Locale.current.getter(v22);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v21 = v23;
LABEL_9:
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setSeasonName:", v24, swift_bridgeObjectRelease(v21).n128_f64[0]);

  MPModelObject.bestIdentifier(for:)(3, 2u);
  if (v25)
  {
    v27 = v25;
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v8, "setStoreIdentifier:", v28, v26);

  v29 = objc_msgSend(a1, "artworkCatalog");
  MPModelObject.artworkPlaceholder.getter(&v35);
  v31 = sub_A507C(v29, v30);
  sub_5C090((uint64_t)&v35, (uint64_t)&v40, &qword_14AD660);
  sub_5F12C(&v40);
  sub_5C090((uint64_t)&v36, (uint64_t)&v39, &qword_14AD660);
  sub_5F12C(&v39);
  sub_5C090((uint64_t)v37, (uint64_t)&v38, &qword_14AEE30);
  sub_5F12C(&v38);
  v32 = (void *)v37[1];

  objc_msgSend(v8, "setArtwork:", v31);
  return v8;
}

id sub_A6FD8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  double v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24[4];
  id v25;
  id v26;
  id v27;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone((Class)LPiTunesUserProfileMetadata), "init");
  v11 = objc_msgSend(a1, "name");
  if (v11)
  {
    v12 = v11;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000010C5830);
    static Locale.current.getter(v15);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v14 = v16;
  }
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setName:", v17, swift_bridgeObjectRelease(v14).n128_f64[0]);

  MPModelObject.artworkPlaceholder.getter(&v22);
  v19 = sub_A507C(a2, v18);
  sub_5C090((uint64_t)&v22, (uint64_t)&v27, &qword_14AD660);
  sub_5F12C(&v27);
  sub_5C090((uint64_t)&v23, (uint64_t)&v26, &qword_14AD660);
  sub_5F12C(&v26);
  sub_5C090((uint64_t)v24, (uint64_t)&v25, &qword_14AEE30);
  sub_5F12C(&v25);

  objc_msgSend(v10, "setArtwork:", v19);
  return v10;
}

id sub_A71E0(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Class *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;

  objc_opt_self(MPModelArtist);
  v2 = swift_dynamicCastObjCClass(a1);
  if (!v2)
  {
    objc_opt_self(MPModelComposer);
    v6 = swift_dynamicCastObjCClass(a1);
    if (v6)
    {
      v7 = (void *)v6;
      v4 = a1;
      v5 = sub_A5318(v7, 0);
      goto LABEL_5;
    }
    objc_opt_self(MPModelCurator);
    v11 = swift_dynamicCastObjCClass(a1);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = a1;
      v14 = objc_msgSend(v12, "editorialArtworkCatalog");
      goto LABEL_10;
    }
    objc_opt_self(MPModelAlbum);
    v16 = swift_dynamicCastObjCClass(a1);
    if (v16)
    {
      v17 = (void *)v16;
      v4 = a1;
      v5 = sub_A59CC(v17);
      goto LABEL_5;
    }
    objc_opt_self(MPModelRadioStation);
    v18 = swift_dynamicCastObjCClass(a1);
    if (v18)
    {
      v19 = (void *)v18;
      v4 = a1;
      v5 = sub_A5D4C(v19);
      goto LABEL_5;
    }
    objc_opt_self(MPModelSong);
    v20 = swift_dynamicCastObjCClass(a1);
    if (v20)
    {
      v21 = (void *)v20;
      v4 = a1;
      v5 = sub_A5F78(v21);
      goto LABEL_5;
    }
    objc_opt_self(MPModelPlaylist);
    v22 = swift_dynamicCastObjCClass(a1);
    if (v22)
    {
      v23 = (void *)v22;
      v4 = a1;
      v5 = sub_A639C(v23);
      goto LABEL_5;
    }
    objc_opt_self(MPModelTVShow);
    v24 = swift_dynamicCastObjCClass(a1);
    if (v24)
    {
      v25 = (void *)v24;
      v4 = a1;
      v26 = (Class *)LPAppleMusicTVShowMetadata_ptr;
      v27 = v25;
      v28 = 0xEC000000776F6853;
    }
    else
    {
      objc_opt_self(MPModelMovie);
      v29 = swift_dynamicCastObjCClass(a1);
      if (!v29)
      {
        objc_opt_self(MPModelTVSeason);
        v31 = swift_dynamicCastObjCClass(a1);
        if (v31)
        {
          v32 = (void *)v31;
          v4 = a1;
          v5 = sub_A6A44(v32);
          goto LABEL_5;
        }
        objc_opt_self(MPModelTVEpisode);
        v33 = swift_dynamicCastObjCClass(a1);
        if (v33)
        {
          v34 = (void *)v33;
          v4 = a1;
          v5 = sub_A6C84(v34);
          goto LABEL_5;
        }
        objc_opt_self(MPModelSocialPerson);
        v35 = swift_dynamicCastObjCClass(a1);
        if (!v35)
        {
          objc_opt_self(MPModelRecordLabel);
          v36 = swift_dynamicCastObjCClass(a1);
          if (!v36)
            return 0;
          v37 = (void *)v36;
          v13 = a1;
          v4 = objc_msgSend(v37, "artworkCatalog");
          v15 = sub_A6FD8(v37, v4);
          goto LABEL_11;
        }
        v12 = (void *)v35;
        v13 = a1;
        v14 = objc_msgSend(v12, "artworkCatalog");
        if (!v14)
          v14 = MPModelPerson.monogramArtworkCatalog.getter();
LABEL_10:
        v4 = v14;
        v15 = sub_A5318(v12, v14);
LABEL_11:
        v8 = v15;

        goto LABEL_6;
      }
      v30 = (void *)v29;
      v4 = a1;
      v26 = (Class *)LPiTunesMediaMovieMetadata_ptr;
      v27 = v30;
      v28 = 0xED0000656C746954;
    }
    v5 = sub_A67DC(v27, v26, v28);
    goto LABEL_5;
  }
  v3 = (void *)v2;
  v4 = a1;
  v5 = sub_A56DC(v3);
LABEL_5:
  v8 = v5;
LABEL_6:

  v9 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  objc_msgSend(v9, "setSpecialization:", v8);

  return v9;
}

void sub_A7574(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  NSString *v17;
  NSString *v18;
  NSString *v19;
  NSString *v20;
  NSString *v21;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  NSArray v40;
  uint64_t v41;
  NSArray v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  char **v49;
  NSString *v50;
  NSString *v51;
  NSString *v52;
  NSString *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  Swift::String v57;
  Swift::Int v58;
  NSString *v59;
  NSString *v60;
  _QWORD *v61;
  NSString *v62;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  Class isa;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  char v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  char *v96;
  void *v97;
  uint64_t v101;
  uint64_t v103;
  char *v104;
  char *v106;
  uint64_t v109;
  __int128 aBlock;
  uint64_t (*v111)(uint64_t, void *, uint64_t, uint64_t, void *);
  void *v112;
  void (*v113)(uint64_t, char, uint64_t, uint64_t);
  uint64_t v114;
  __int128 v115[2];
  _QWORD v116[5];
  char v117[24];
  uint64_t v118;
  objc_super v119;
  objc_super v120;
  uint64_t v121;

  v12 = OBJC_IVAR____TtC16MusicApplication22ActivityViewController_defaultExcludedActivityTypes;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AECE8);
  v14 = swift_allocObject(v13, 88, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1060490;
  *(_QWORD *)(v14 + 32) = UIActivityTypePrint;
  *(_QWORD *)(v14 + 40) = UIActivityTypeAssignToContact;
  *(_QWORD *)(v14 + 48) = UIActivityTypeSaveToCameraRoll;
  *(_QWORD *)(v14 + 56) = UIActivityTypeAddToReadingList;
  *(_QWORD *)(v14 + 64) = UIActivityTypePostToFlickr;
  *(_QWORD *)(v14 + 72) = UIActivityTypePostToVimeo;
  *(_QWORD *)(v14 + 80) = UIActivityTypeOpenInIBooks;
  *(_QWORD *)&v10[v12] = v14;
  v15 = type metadata accessor for JSShareRequestCoordinator();
  swift_allocObject(v15, 32, 7);
  v106 = v10;
  v16 = UIActivityTypePrint;
  v17 = UIActivityTypeAssignToContact;
  v18 = UIActivityTypeSaveToCameraRoll;
  v19 = UIActivityTypeAddToReadingList;
  v20 = UIActivityTypePostToFlickr;
  v21 = UIActivityTypePostToVimeo;
  v22 = UIActivityTypeOpenInIBooks;
  v23 = JSShareRequestCoordinator.init()();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AECF0);
  v25 = swift_allocObject(v24, 96, 7);
  *(_OWORD *)(v25 + 16) = xmmword_105F890;
  v26 = (objc_class *)type metadata accessor for ShareURLActivityItemProvider(0);
  v27 = (char *)objc_allocWithZone(v26);
  v28 = &v27[qword_14D8968];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  swift_retain(v23);
  sub_A85C4(a1);
  v29 = a4;
  v30 = sub_A1C74((uint64_t)a1, v23, a4);
  *(_QWORD *)(v25 + 56) = v26;
  *(_QWORD *)(v25 + 32) = v30;
  v31 = (objc_class *)type metadata accessor for ShareLinkPresentationItemProvider(0);
  v32 = (char *)objc_allocWithZone(v31);
  v33 = qword_14D88E0;
  *(_QWORD *)&v32[qword_14D88E0] = 0;
  *(_QWORD *)&v32[qword_14D88D0] = v23;
  sub_5C090((uint64_t)a1, (uint64_t)&v32[qword_14D88D8], &qword_14AECF8);
  v34 = *(void **)&v32[v33];
  *(_QWORD *)&v32[v33] = a4;
  swift_retain_n(v23, 2);
  v35 = v29;

  sub_4E684(0, &qword_14AED00, LPLinkMetadata_ptr);
  v36 = sub_319460();
  v120.receiver = v32;
  v120.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_14AED08);
  v37 = objc_msgSendSuper2(&v120, "initWithPlaceholderItem:", v36);

  v101 = v23;
  swift_release(v23);
  v97 = v35;

  *(_QWORD *)(v25 + 88) = v31;
  *(_QWORD *)(v25 + 64) = v37;
  v121 = v25;
  if (a3)
  {
    sub_6826C(a3);
    v25 = v121;
  }
  v38 = &v106[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_recipientEmail];
  *(_QWORD *)v38 = a7;
  *((_QWORD *)v38 + 1) = a8;
  v39 = &v106[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_recipientPhoneNumber];
  *(_QWORD *)v39 = a9;
  *((_QWORD *)v39 + 1) = a10;

  swift_bridgeObjectRetain();
  v40.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v25);
  v41 = a2;
  if (a2)
  {
    sub_4E684(0, (unint64_t *)&qword_14AE030, UIActivity_ptr);
    swift_bridgeObjectRetain();
    v42.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v42.super.isa = 0;
    v41 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v119.receiver = v106;
  v119.super_class = (Class)type metadata accessor for ActivityViewController();
  v43 = (char *)objc_msgSendSuper2(&v119, "initWithActivityItems:applicationActivities:", v40.super.isa, v42.super.isa);

  v103 = v25;
  v104 = v43;
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v66 = v41;
    else
      v66 = v41 & 0xFFFFFFFFFFFFFF8;
    v67 = v43;
    swift_bridgeObjectRetain();
    v44 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v41);
    if (v44)
    {
LABEL_8:
      if (v44 >= 1)
      {
        v46 = 0;
        v47 = &v43[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_defaultExcludedActivityTypes];
        v48 = v41 & 0xC000000000000001;
        v49 = &selRef___rankedList_KEY;
        v109 = v41;
        while (1)
        {
          if (v48)
            v52 = (NSString *)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v41);
          else
            v52 = (NSString *)*(id *)(v41 + 8 * v46 + 32);
          v50 = v52;
          v53 = (NSString *)objc_msgSend(v52, v49[494]);
          if (!v53)
            goto LABEL_12;
          v51 = v53;
          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
          v56 = v55;
          v57._countAndFlagsBits = v54;
          v57._object = v56;
          v58 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_133B760, v57);
          swift_bridgeObjectRelease(v56);
          if (!v58)
            break;
          if (v58 == 1)
          {
            v59 = UIActivityTypePostToFacebook;
            goto LABEL_22;
          }
          if (v58 == 2)
            break;
LABEL_11:

          v50 = v51;
LABEL_12:
          ++v46;

          if (v44 == v46)
            goto LABEL_30;
        }
        v59 = (NSString *)String._bridgeToObjectiveC()();
LABEL_22:
        v60 = v59;
        swift_beginAccess(v47, &aBlock, 33, 0);
        v61 = *(_QWORD **)v47;
        v62 = v60;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v61);
        *(_QWORD *)v47 = v61;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v61 = sub_120F20(0, v61[2] + 1, 1, v61);
          *(_QWORD *)v47 = v61;
        }
        v65 = v61[2];
        v64 = v61[3];
        if (v65 >= v64 >> 1)
        {
          v61 = sub_120F20((_QWORD *)(v64 > 1), v65 + 1, 1, v61);
          *(_QWORD *)v47 = v61;
        }
        v61[2] = v65 + 1;
        v61[v65 + 4] = v62;
        swift_endAccess(&aBlock);

        v50 = v51;
        v51 = v62;
        v41 = v109;
        v49 = &selRef___rankedList_KEY;
        goto LABEL_11;
      }
      goto LABEL_55;
    }
  }
  else
  {
    v44 = *(_QWORD *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFF8));
    v45 = v43;
    if (v44)
      goto LABEL_8;
  }
LABEL_30:
  swift_bridgeObjectRelease(v41);
  v68 = &v104[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_defaultExcludedActivityTypes];
  swift_beginAccess(&v104[OBJC_IVAR____TtC16MusicApplication22ActivityViewController_defaultExcludedActivityTypes], v117, 0, 0);
  v69 = *(_QWORD *)v68;
  v118 = v69;
  swift_bridgeObjectRetain();
  if (a6)
  {
    sub_683D4(a6);
    v69 = v118;
  }
  type metadata accessor for ActivityType(0);
  v70 = v104;
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v70, "setExcludedActivityTypes:", isa, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v72 = *(_QWORD *)(v69 + 16);
  if (v72)
  {
    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v69 + 32));
    v75 = v74;
    v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeSharePlay);
    v78 = v76;
    if (v73 == v77 && v75 == v76)
    {
      swift_bridgeObjectRetain_n(v69, 2);
      v79 = v70;
LABEL_36:
      swift_bridgeObjectRelease_n(v75, 2);
      goto LABEL_39;
    }
    v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v75, v77, v76, 0);
    swift_bridgeObjectRetain_n(v69, 2);
    v82 = v70;
    swift_bridgeObjectRelease(v75);
    swift_bridgeObjectRelease(v78);
    if ((v81 & 1) != 0)
    {
LABEL_39:
      swift_bridgeObjectRelease(v103);
      swift_bridgeObjectRelease_n(v69, 3);
      v83 = 0;
      goto LABEL_51;
    }
    if (v72 != 1)
    {
      v84 = 5;
      while (1)
      {
        v85 = v84 - 3;
        if (__OFADD__(v84 - 4, 1))
          break;
        v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v69 + 8 * v84));
        v75 = v87;
        v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeSharePlay);
        if (v86 == v88 && v75 == v89)
          goto LABEL_36;
        v91 = v89;
        v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v75, v88, v89, 0);
        swift_bridgeObjectRelease(v75);
        swift_bridgeObjectRelease(v91);
        if ((v92 & 1) != 0)
          goto LABEL_39;
        ++v84;
        if (v85 == v72)
          goto LABEL_49;
      }
      __break(1u);
LABEL_55:
      __break(1u);
      return;
    }
LABEL_49:
    swift_bridgeObjectRelease_n(v69, 2);
  }
  else
  {
    v80 = v70;
  }
  swift_bridgeObjectRelease(v103);
  swift_bridgeObjectRelease(v69);
  v83 = 1;
LABEL_51:
  objc_msgSend(v70, "setAllowsProminentActivity:", v83);

  sub_5C238(a5, (uint64_t)&aBlock, (uint64_t *)&unk_14AED10);
  if (v112)
  {
    sub_8B15C(&aBlock, (uint64_t)v116);
    sub_55D1C((uint64_t)v116, (uint64_t)v115);
    v93 = swift_allocObject(&unk_1342E68, 56, 7);
    sub_8B15C(v115, v93 + 16);
    v113 = sub_A866C;
    v114 = v93;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v111 = sub_A16CC;
    v112 = &block_descriptor_8;
    v94 = _Block_copy(&aBlock);
    v95 = v114;
    v96 = v70;
    objc_msgSend(v96, "setCompletionWithItemsHandler:", v94, swift_release(v95).n128_f64[0]);
    swift_release(v101);

    sub_56024(a5, (uint64_t *)&unk_14AED10);
    __swift_destroy_boxed_opaque_existential_1(v116);

    _Block_release(v94);
  }
  else
  {
    swift_release(v101);

    sub_56024(a5, (uint64_t *)&unk_14AED10);
    sub_56024((uint64_t)&aBlock, (uint64_t *)&unk_14AED10);
  }
}

void sub_A7E8C(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, char a10, uint64_t a11, char a12, uint64_t a13)
{
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v33;
  unsigned __int8 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[15];
  uint64_t v39[2];
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  if (a1)
  {
    v20 = a3;
    v21 = swift_bridgeObjectRetain();
    JSShareRequest.RequestContent.init(contentDictionary:contentType:jsModel:)(v21, 1, (char *)a3, (uint64_t)&v33);
    v22 = v33;
    v23 = v34;
    v24 = v35;
    v25 = v36;
    v26 = v37;
  }
  else
  {
    v22 = 0;
    v23 = 0;
    v26 = 0;
    v24 = 0uLL;
    v25 = 0uLL;
  }
  v39[0] = v22;
  v39[1] = v23;
  v40 = v24;
  v41 = v25;
  v42 = v26;
  sub_5C238(a7, (uint64_t)v38, (uint64_t *)&unk_14AED10);
  objc_allocWithZone((Class)type metadata accessor for ActivityViewController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = a6;
  sub_A7574(v39, a4, a5, a6, (uint64_t)v38, a8, 0, 0, 0, 0);
  v29 = v28;
  static ApplicationCapabilities.shared.getter((uint64_t)v38);
  sub_A9008(v38);
  if ((v38[0] & 0x100) != 0)
  {
    v31 = sub_9F69C(a9, a10 & 1);
    v30 = 1;
    if ((v31 & ~a2 & 1) == 0)
      v30 = 2;
  }
  else
  {
    v30 = 2;
  }
  if ((a12 & 1) != 0)
    a11 = v30;
  objc_msgSend(v29, "setSharingStyle:", a11);
  if (*(unsigned __int8 *)(a13 + 48) == 255)
  {
    objc_msgSend(v29, "setAllowsCustomPresentationStyle:", 1);
    objc_msgSend(v29, "setModalPresentationStyle:", 2);
  }
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v29, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

}

void sub_A8070(void *a1, uint64_t a2)
{
  uint64_t Strong;
  void *v4;
  char *v5;
  double v6;
  unint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(void);
  void *v36;
  id v37;
  char *v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;

  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong
    || (v4 = (void *)Strong, v5 = (char *)sub_AF954(), v4, !v5)
    || (v43 = (char *)swift_unknownObjectWeakLoadStrong(v5 + 40), *(_QWORD *)&v6 = swift_release(v5).n128_u64[0], !v43))
  {
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a1, 0, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
    return;
  }
  objc_msgSend(*(id *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_backdropView], "setHidden:", 0, v6);
  v7 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode];
  v8 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 8];
  v10 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 16];
  v9 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 24];
  v11 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 32];
  v12 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 40];
  v13 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 48];
  v14 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 56];
  v42 = v12;
  if (v7 >> 62 != 1)
  {
    v25 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode];
    sub_A8B20(v7, v8, v10, v9, v11, *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 40], v13, v14);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a1, 0, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
    v26 = v25;
    v27 = v8;
    v28 = v10;
    v29 = v9;
    v30 = v11;
    v31 = v42;
    v32 = v13;
    v33 = v14;
LABEL_13:
    sub_A8BF4(v26, v27, v28, v29, v30, v31, v32, v33);

    return;
  }
  v15 = (char *)(v7 & 0x3FFFFFFFFFFFFFFFLL);
  v16 = (_BYTE *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + OBJC_IVAR___MusicNowPlayingLyricsViewController_state);
  v40 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode];
  v41 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 56];
  if (v16[8] == 1 && *v16 == 2)
  {
    v17 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 16];
    v18 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 24];
    v19 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 32];
    v20 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 48];
    v21 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 8];
    sub_A8B20(v7, v21, v17, v18, v19, v12, v13, *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 56]);
    v39 = v19;
    v22 = v15;
    v38 = v21;
    swift_bridgeObjectRetain();
    v23 = v18;
    v24 = v18;
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(a1, 0, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);
LABEL_12:

    swift_bridgeObjectRelease(v17);
    v26 = v40;
    v33 = v41;
    v27 = v21;
    v28 = v17;
    v29 = v23;
    v30 = v19;
    v31 = v42;
    v32 = v20;
    goto LABEL_13;
  }
  v34 = *(_QWORD **)&v15[OBJC_IVAR___MusicNowPlayingLyricsViewController_syncedLyricsViewController];
  if (v34)
  {
    v35 = *(void (**)(void))&stru_338.segname[swift_isaMask & *v34];
    v17 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 16];
    v36 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 24];
    v19 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 32];
    v20 = *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 48];
    v21 = *(void **)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 8];
    sub_A8B20(v7, v21, v17, v36, v19, v12, v13, *(_QWORD *)&v43[OBJC_IVAR____TtC16MusicApplication24NowPlayingViewController_mode + 56]);
    v39 = v19;
    v22 = v34;
    v38 = v15;
    v37 = v21;
    swift_bridgeObjectRetain();
    v23 = v36;
    v24 = v36;
    v35();

    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_A838C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = type metadata accessor for URL(0);
  v6[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[16] = v8;
  v6[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[18] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_A8428, v11, v12);
}

uint64_t sub_A8428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = sub_5D294();
  SocialProfileDescriptor.url.getter();
  URL._bridgeToObjectiveC()(v9);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  objc_msgSend(v8, "setOriginalURL:", v11);

  *(_OWORD *)(v0 + 16) = 0u;
  *(_QWORD *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  memset(v19, 0, sizeof(v19));
  v20 = 0;
  objc_allocWithZone((Class)type metadata accessor for ActivityViewController());
  swift_bridgeObjectRetain();
  v12 = v8;
  swift_bridgeObjectRetain();
  sub_A7574((uint64_t *)(v0 + 16), 0, 0, v8, (uint64_t)v19, 0, v7, v6, v5, v4);
  v14 = v13;
  objc_msgSend(v13, "setSharingStyle:", 0);
  if (*(unsigned __int8 *)(v18 + 48) == 255)
  {
    objc_msgSend(v14, "setAllowsCustomPresentationStyle:", 1);
    objc_msgSend(v14, "setModalPresentationStyle:", 2);
  }
  v16 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 144);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v14, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

  swift_release(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_A85C4(uint64_t *a1)
{
  sub_A85F8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t sub_A85F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;

  if (result)
  {
    v9 = result;
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(a3);
    return swift_bridgeObjectRetain(a5);
  }
  return result;
}

uint64_t sub_A8648()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

void sub_A866C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_A1618(a1, a2, a3, a4, (_QWORD *)(v4 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_A868C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Metrics.Event.Action(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_A86C8()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 16);
  v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v1);
  if (*(_QWORD *)(v0 + 72))
    swift_release(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_A8718()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_A873C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_A8760(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  _BYTE v17[72];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED40);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for Song(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v17[-v12 - 8];
  dispatch thunk of LegacyModelObjectConvertible.init(_:)(a1);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_56024((uint64_t)v6, &qword_14AED40);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    sub_6087C(a2, (uint64_t)v17);
    v14 = objc_allocWithZone((Class)type metadata accessor for LyricsSharingActivityViewController(0));
    v15 = sub_242394((uint64_t)v10, 0, 0, (uint64_t)v17, 1);
    sub_A8070(v15, a2);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);

  }
}

uint64_t sub_A88F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

double sub_A8970()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_A0FB0(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

id sub_A89BC@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_A0F34(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_A89D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_A8A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_14AED84);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_50F8C;
  return sub_A113C(a1, v6, v7, v8, v9);
}

unint64_t sub_A8B20(unint64_t result, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;

  if (result >> 62 == 1)
  {
    v20 = (void *)(result & 0x3FFFFFFFFFFFFFFFLL);
    v21 = a5;
    v22 = v20;
    v23 = a2;
    swift_bridgeObjectRetain(a3);
    return (unint64_t)a4;
  }
  else if (!(result >> 62))
  {
    v14 = (id)result;
    v15 = a2;
    v16 = a3;
    v17 = a4;
    v18 = a5;
    v19 = a6;
    swift_bridgeObjectRetain(a7);
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

void sub_A8BF4(unint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  if (a1 >> 62 == 1)
  {

    swift_bridgeObjectRelease(a3);
  }
  else if (!(a1 >> 62))
  {

    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a8);
  }
}

uint64_t sub_A8CC8(uint64_t a1, uint64_t a2)
{
  assignWithTake for PresentationSource(a2, a1);
  return a2;
}

uint64_t sub_A8D0C()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  if (*(_QWORD *)(v0 + 96))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  swift_unknownObjectWeakDestroy(v0 + 152);
  v1 = *(unsigned __int8 *)(v0 + 200);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v1);
  if (*(_QWORD *)(v0 + 208))
    swift_release(*(_QWORD *)(v0 + 216));
  return swift_deallocObject(v0, 224, 7);
}

void sub_A8DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_A0734(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(void **)(v5 + 24), *(void **)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(void **)(v5 + 56), *(void **)(v5 + 64), v5 + 72, *(_QWORD *)(v5 + 112), *(void **)(v5 + 120), *(_BYTE *)(v5 + 128), *(_QWORD *)(v5 + 136), *(_BYTE *)(v5 + 144), v5 + 152);
}

uint64_t sub_A8E14()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));

  swift_unknownObjectWeakDestroy(v0 + 144);
  v1 = *(unsigned __int8 *)(v0 + 192);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v1);
  if (*(_QWORD *)(v0 + 200))
    swift_release(*(_QWORD *)(v0 + 208));
  return swift_deallocObject(v0, 216, 7);
}

double sub_A8EB0(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_A0A80(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), v2 + 56, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(void **)(v2 + 112), *(_BYTE *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_BYTE *)(v2 + 136), v2 + 144);
}

uint64_t sub_A8F0C()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  if (*(_QWORD *)(v0 + 88))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  swift_unknownObjectWeakDestroy(v0 + 152);
  v1 = *(unsigned __int8 *)(v0 + 200);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v1);
  if (*(_QWORD *)(v0 + 208))
    swift_release(*(_QWORD *)(v0 + 216));
  return swift_deallocObject(v0, 224, 7);
}

double sub_A8FB0()
{
  uint64_t v0;

  return sub_A0C9C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + 64, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(void **)(v0 + 120), *(_BYTE *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144), v0 + 152);
}

_QWORD *sub_A9008(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[7];
  v5 = a1[9];
  v6 = (void *)a1[10];
  v7 = a1[12];
  swift_bridgeObjectRelease(a1[14]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);

  return a1;
}

uint64_t sub_A9084()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_A90B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_9FA30(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_A90B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_A90DC(void *a1, char a2)
{
  uint64_t v2;

  sub_9FB44(a1, a2 & 1, *(void (**)(Class, _QWORD))(v2 + 16));
}

void sub_A90E8(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease();
  else

}

uint64_t sub_A9124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for ContinuousClock(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_A9188, 0, 0);
}

uint64_t sub_A9188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = static Duration.seconds(_:)(*(double *)(*(_QWORD *)(v0 + 16) + 16));
  v3 = v2;
  ContinuousClock.init()();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_14B9508 + dword_14B9508);
  v4 = (_QWORD *)swift_task_alloc(unk_14B950C);
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_A9220;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_A9220()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 64));
  v4 = v2[6];
  v3 = v2[7];
  v5 = v2[5];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_A93C4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_A92B8;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_A92B8()
{
  uint64_t v0;
  int *v2;
  _QWORD *v3;
  uint64_t (*v4)(void);

  if ((static Task<>.isCancelled.getter() & 1) != 0)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(int **)(v0 + 24);
    v4 = (uint64_t (*)(void))((char *)v2 + *v2);
    v3 = (_QWORD *)swift_task_alloc(v2[1]);
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_A9334;
    return v4();
  }
}

uint64_t sub_A9334()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  swift_task_dealloc(*(_QWORD *)(v1 + 56));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_A9380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for RateLimiter()
{
  return objc_opt_self(_TtC16MusicApplication11RateLimiter);
}

id sub_A93C8(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  objc_super v16;

  v9 = &v4[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_title];
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v10 = &v4[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_selectionHandler];
  *v10 = 0;
  v10[1] = 0;
  v4[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_buttonAlignment] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView____lazy_storage___button] = 0;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for FooterButtonReusableView();
  v11 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  v12 = objc_msgSend(v11, "layer");
  objc_msgSend(v12, "setAllowsGroupOpacity:", 0);

  v13 = objc_msgSend(v11, "layer");
  objc_msgSend(v13, "setAllowsGroupBlending:", 0);

  v14 = sub_A9984();
  objc_msgSend(v11, "addSubview:", v14);

  return v11;
}

void sub_A95D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7B70);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - v9;
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_title);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_title);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_title + 8);
  *v11 = a1;
  v11[1] = a2;
  v14 = v12 == a1 && v13 == a2;
  if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v12, v13, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v15 = sub_A9984();
    UIButton.configuration.getter(v15);
    v16 = type metadata accessor for UIButton.Configuration(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16))
    {
      sub_A9DFC((uint64_t)v10, (uint64_t)v7);
      UIButton.configuration.setter(v7);
      sub_A9E44((uint64_t)v10);
    }
    else
    {
      v17 = *v11;
      v18 = v11[1];
      swift_bridgeObjectRetain();
      UIButton.Configuration.title.setter(v17, v18);
      UIButton.configuration.setter(v10);
    }
    swift_bridgeObjectRelease(v13);

  }
}

void sub_A974C()
{
  unsigned __int8 *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;

  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for FooterButtonReusableView();
  objc_msgSendSuper2(&v26, "layoutSubviews");
  v1 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v1, "displayScale");

  objc_msgSend(v0, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v11 = v10;
  v13 = v12;
  v14 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  UIEdgeInsetsInsetRect(v3, v5, v7, v9, v11, v13);
  v16 = v15;
  v18 = v17;
  v19 = sub_A9984();
  objc_msgSend(v19, "sizeThatFits:", v16, v18);

  v20 = sub_A9984();
  CGRect.applyingLayoutDirection(_:inBounds:)(v14);
  objc_msgSend(v20, "setFrame:");

  LODWORD(v20) = v0[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_buttonAlignment];
  v21 = sub_A9984();
  v22 = sub_A9984();
  objc_msgSend(v22, "frame");
  v24 = v23;

  if ((_DWORD)v20)
    v25 = 3;
  else
    v25 = 2;
  objc_msgSend(v21, "setFrame:", CGRect.centeringAlong(axes:bounds:scale:)(v25), v24);

}

id sub_A9984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration.TitleAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView____lazy_storage___button;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView____lazy_storage___button);
  if (v10)
  {
    v11 = *(id *)(v0 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView____lazy_storage___button);
  }
  else
  {
    sub_4E684(0, (unint64_t *)&qword_14AE630, UIButton_ptr);
    static UIButton.Configuration.plain()(v12);
    UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_title);
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_title + 8);
    swift_bridgeObjectRetain();
    UIButton.Configuration.title.setter(v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v2);
    UIButton.Configuration.titleAlignment.setter(v5);
    sub_4E684(0, (unint64_t *)&qword_14B7130, UIAction_ptr);
    v15 = swift_allocObject(&unk_13431C8, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16, v1);
    v16 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_A9DE4, v15);
    v17 = (void *)UIButton.init(configuration:primaryAction:)(v8, v16);
    v18 = *(void **)(v1 + v9);
    *(_QWORD *)(v1 + v9) = v17;
    v11 = v17;

    v10 = 0;
  }
  v19 = v10;
  return v11;
}

void sub_A9B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  void *v4;
  void (*v5)(void);
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(void (**)(void))&Strong[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_selectionHandler];
    if (v5)
    {
      v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_selectionHandler + 8];
      sub_A9DEC(*(_QWORD *)&Strong[OBJC_IVAR____TtC16MusicApplication24FooterButtonReusableView_selectionHandler], v6);

      v5();
      sub_5C198((uint64_t)v5, v6);
    }
    else
    {

    }
  }
}

id sub_A9C0C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FooterButtonReusableView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FooterButtonReusableView()
{
  return objc_opt_self(_TtC16MusicApplication24FooterButtonReusableView);
}

uint64_t storeEnumTagSinglePayload for FooterButtonReusableView.ButtonAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_A9CF8 + 4 * byte_1060545[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_A9D2C + 4 * asc_1060540[v4]))();
}

uint64_t sub_A9D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_A9D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xA9D3CLL);
  return result;
}

uint64_t sub_A9D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xA9D50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_A9D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_A9D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FooterButtonReusableView.ButtonAlignment()
{
  return &type metadata for FooterButtonReusableView.ButtonAlignment;
}

unint64_t sub_A9D7C()
{
  unint64_t result;

  result = qword_14AEF68;
  if (!qword_14AEF68)
  {
    result = swift_getWitnessTable(&unk_10605BC, &type metadata for FooterButtonReusableView.ButtonAlignment);
    atomic_store(result, (unint64_t *)&qword_14AEF68);
  }
  return result;
}

uint64_t sub_A9DC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A9DE4(uint64_t a1)
{
  uint64_t v1;

  sub_A9B7C(a1, v1);
}

uint64_t sub_A9DEC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_A9DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A9E44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7B70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_A9EF8(id result)
{
  unsigned __int8 *v1;
  uint64_t v2;
  id v3;
  unsigned __int8 *v4;
  void *v5;
  void *object;
  NSString v7;
  uint64_t v8;

  v2 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_value;
  v3 = *(id *)&v1[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_value];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_value] = result;
  if (v3 != result)
  {
    v4 = v1;
    v5 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_valueLabel];
    sub_AAE98();
    object = BinaryInteger.formatted()()._object;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setText:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

    if (*(_QWORD *)&v4[v2])
      v8 = 0;
    else
      v8 = v4[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_shouldHideAutomatically];
    return objc_msgSend(v4, "setHidden:", v8);
  }
  return result;
}

double sub_AA1AC(double a1, double a2)
{
  void *v2;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  _QWORD v11[2];
  _QWORD v12[2];

  objc_msgSend(v2, "intrinsicContentSize");
  v6 = v5;
  v8 = v7;
  type metadata accessor for CGSize(0);
  *(double *)v12 = a1;
  *(double *)&v12[1] = a2;
  v11[0] = 0;
  v11[1] = 0;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v12, v11) & 1) != 0)
  {
    if (v6 >= a1)
      v9 = a1;
    else
      v9 = v6;
    if (v8 >= a2)
      v8 = a2;
    if (v8 > v9)
      return v8;
    else
      return v9;
  }
  return v6;
}

void sub_AA2DC()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_valueLabel), "sizeThatFits:", 0.0, 0.0);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_style);
  if ((unint64_t)v1 > 1)
  {
    v2 = v1;
    objc_msgSend(v2, "lineHeight");
    objc_msgSend(v2, "lineHeight");
    sub_AAE88(v1);
  }
}

id sub_AA3F0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = (void *)objc_opt_self(UIColor);
  v2 = v0;
  v3 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  objc_msgSend(v2, "setNumberOfLines:", 1);
  v4 = objc_msgSend(v1, "whiteColor");
  objc_msgSend(v2, "setTextColor:", v4);

  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v2, "setAdjustsFontSizeToFitWidth:", 1);
  return v2;
}

void sub_AA4F0()
{
  char *v0;
  id v1;
  void *v2;
  double Width;
  double Height;
  void *v5;
  id v6;
  CGRect v7;
  CGRect v8;

  v1 = objc_msgSend(v0, "tintColor");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v7);
    objc_msgSend(v0, "bounds");
    Height = CGRectGetHeight(v8);
    if (Height >= Width)
      Height = Width;
    _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v2, Height * 0.5);
    v6 = v5;

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_backgroundImageView], "setImage:", v6);
  }
  else
  {
    __break(1u);
  }
}

void sub_AA5AC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double Width;
  double Height;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  _QWORD v27[2];
  _QWORD v28[2];
  CGRect v29;
  CGRect v30;

  v1 = v0;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_isShadowEnabled) != 1
    || (type metadata accessor for CGSize(0),
        objc_msgSend(v0, "bounds"),
        v28[0] = v2,
        v28[1] = v3,
        v27[0] = 0,
        v27[1] = 0,
        (static ApproximatelyEquatable.!=~ infix(_:_:)(v28, v27) & 1) == 0))
  {
    v24 = objc_msgSend(v0, "layer");
    LODWORD(v26) = 0;
    objc_msgSend(v24, "setShadowOpacity:", v26);
    goto LABEL_8;
  }
  objc_msgSend(v0, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v29);
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v30);
  if (Height >= Width)
    Height = Width;
  v14 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v5, v7, v9, v11, Height * 0.5);
  v15 = objc_msgSend(v1, "layer");
  v16 = objc_msgSend(v14, "CGPath");
  objc_msgSend(v15, "setShadowPath:", v16);

  v17 = objc_msgSend(v1, "layer");
  objc_msgSend(v17, "setShadowOffset:", 0.0, 1.0);

  v18 = objc_msgSend(v1, "layer");
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v20 = objc_msgSend(v19, "cgColor");
  v21 = v19;
  if (v20)
  {
    v22 = v20;
    objc_msgSend(v18, "setShadowColor:", v22);

    v23 = objc_msgSend(v1, "layer");
    objc_msgSend(v23, "setShadowRadius:", 2.0);

    v24 = objc_msgSend(v1, "layer");
    LODWORD(v25) = 1045220557;
    objc_msgSend(v24, "setShadowOpacity:", v25);

LABEL_8:
    return;
  }
  __break(1u);
}

id sub_AA898()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationBadgeView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NotificationBadgeView()
{
  return objc_opt_self(_TtC16MusicApplication21NotificationBadgeView);
}

_QWORD *initializeBufferWithCopyOfBuffer for ImpressionsElement.Component(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ImpressionsElement.Component(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for ImpressionsElement.Component(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for NotificationBadgeView.Style(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationBadgeView.Style(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NotificationBadgeView.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_AAB10(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_AAB28(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for NotificationBadgeView.Style()
{
  return &type metadata for NotificationBadgeView.Style;
}

char *sub_AAB58(char *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  double v7;
  double v8;
  char *v9;
  double v10;
  double v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char *result;
  char *v18;
  double Width;
  double Height;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  objc_super v27;
  CGRect v28;
  CGRect v29;

  v1[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_shouldHideAutomatically] = 1;
  v1[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_isShadowEnabled] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_value] = 0;
  v3 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_backgroundImageView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_valueLabel;
  *(_QWORD *)&v5[v6] = sub_AA3F0();
  *(_QWORD *)&v5[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_style] = a1;
  sub_AAE78(a1);

  if (a1)
  {
    if (a1 == (_BYTE *)&dword_0 + 1)
    {
      v7 = 16.0;
      v8 = 16.0;
    }
    else
    {
      v9 = a1;
      objc_msgSend(v9, "lineHeight");
      v7 = v10;
      objc_msgSend(v9, "lineHeight");
      v8 = v11;
      sub_AAE88(a1);
    }
  }
  else
  {
    v7 = 24.0;
    v8 = 24.0;
  }
  v27.receiver = v5;
  v27.super_class = (Class)type metadata accessor for NotificationBadgeView();
  v12 = (char *)objc_msgSendSuper2(&v27, "initWithFrame:", 0.0, 0.0, v7, v8);
  objc_msgSend(v12, "setHidden:", 1);
  objc_msgSend(v12, "setUserInteractionEnabled:", 0);
  v13 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_backgroundImageView;
  v14 = *(void **)&v12[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_backgroundImageView];
  objc_msgSend(v14, "setContentMode:", 2);
  objc_msgSend(v12, "addSubview:", v14);
  v15 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_valueLabel;
  v16 = *(void **)&v12[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_valueLabel];
  objc_msgSend(v12, "addSubview:", v16);
  result = (char *)objc_msgSend(v12, "tintColor");
  if (result)
  {
    v18 = result;
    objc_msgSend(v12, "bounds");
    Width = CGRectGetWidth(v28);
    objc_msgSend(v12, "bounds");
    Height = CGRectGetHeight(v29);
    if (Height >= Width)
      Height = Width;
    _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v18, Height * 0.5);
    v22 = v21;

    objc_msgSend(*(id *)&v12[v13], "setImage:", v22);
    sub_AA5AC();
    v23 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v16, "setTextColor:", v23);

    v24 = *(void **)&v12[v15];
    if (a1)
    {
      if (a1 != (_BYTE *)&dword_0 + 1)
      {
        v26 = a1;
        goto LABEL_15;
      }
      v25 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 11.0, UIFontWeightRegular);
    }
    else
    {
      v25 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 14.0, UIFontWeightMedium);
    }
    v26 = v25;
LABEL_15:
    sub_AAE78(a1);
    objc_msgSend(v24, "setFont:", v26);

    return v12;
  }
  __break(1u);
  return result;
}

id sub_AAE78(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_AAE88(id a1)
{
  if ((unint64_t)a1 >= 2)

}

unint64_t sub_AAE98()
{
  unint64_t result;

  result = qword_14AEFC8;
  if (!qword_14AEFC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_14AEFC8);
  }
  return result;
}

void sub_AAEDC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v0[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_shouldHideAutomatically] = 1;
  v0[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_isShadowEnabled] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_value] = 0;
  v1 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_backgroundImageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v2 = OBJC_IVAR____TtC16MusicApplication21NotificationBadgeView_valueLabel;
  *(_QWORD *)&v0[v2] = sub_AA3F0();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/NotificationBadgeView.swift", 44, 2, 35, 0);
  __break(1u);
}

char *sub_AAF9C()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  objc_super v53;
  __int128 v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = &v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_followerName];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButtonHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButtonHandler];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_backgroundView;
  v5 = objc_allocWithZone((Class)UIView);
  v6 = v0;
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView;
  if (qword_14AB5E8 != -1)
    swift_once(&qword_14AB5E8, sub_609A80);
  v8 = (void *)qword_1580AE8;
  v9 = (void *)objc_opt_self(UIFont);
  v10 = v8;
  v11 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleBody);
  if (qword_14AB5F0 != -1)
    swift_once(&qword_14AB5F0, sub_609B24);
  v12 = (void *)qword_1580AF0;
  LOBYTE(v54) = 0;
  *((_QWORD *)&v54 + 1) = 1;
  v55 = v10;
  v56 = v11;
  v57 = 0;
  v58 = 0;
  v59 = 2;
  v60 = qword_1580AF0;
  v13 = objc_allocWithZone((Class)type metadata accessor for VibrancyLabelCompositingView());
  v14 = v12;
  v15 = sub_824A5C(&v54);

  *(_QWORD *)&v6[v7] = v15;
  v16 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButton;
  sub_AC114((SEL *)&selRef_systemGreenColor, 0x747065636341, 0xE600000000000000);
  *(_QWORD *)&v6[v16] = v17;
  v18 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButton;
  sub_AC114((SEL *)&selRef_systemRedColor, 0x656E696C636544, 0xE700000000000000);
  *(_QWORD *)&v6[v18] = v19;
  *(_QWORD *)&v6[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptActionEventHandler] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineActionEventHandler] = 0;

  v53.receiver = v6;
  v53.super_class = (Class)type metadata accessor for SocialProfileFollowRequestConfirmationView();
  v20 = objc_msgSendSuper2(&v53, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = (void *)objc_opt_self(UIColor);
  v22 = (char *)v20;
  v23 = objc_msgSend(v21, "clearColor");
  objc_msgSend(v22, "setBackgroundColor:", v23);

  v24 = objc_msgSend(v22, "layer");
  objc_msgSend(v24, "setAllowsGroupBlending:", 0);

  v25 = objc_msgSend(v22, "layer");
  objc_msgSend(v25, "setAllowsGroupOpacity:", 0);

  v26 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_backgroundView;
  v27 = *(void **)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_backgroundView];
  v28 = objc_msgSend(v22, "traitCollection");

  if (objc_msgSend(v28, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v29 = objc_msgSend(v21, "clearColor");
  }
  else
  {
    if (qword_14AB5E0 != -1)
      swift_once(&qword_14AB5E0, sub_609A54);
    v29 = (id)qword_1580AE0;
  }
  v30 = v29;

  objc_msgSend(v27, "setBackgroundColor:", v30);
  v31 = objc_msgSend(*(id *)&v22[v26], "layer");
  v32 = objc_msgSend(v22, "traitCollection");

  v33 = (char *)objc_msgSend(v32, "userInterfaceStyle");
  v34 = &kCAFilterColorDodgeBlendMode;
  if (v33 != (_BYTE *)&dword_0 + 2)
    v34 = &kCAFilterColorBurnBlendMode;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v34);
  v36 = v35;

  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setCompositingFilter:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v38 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButton;
  v39 = *(void **)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButton];
  v40 = swift_allocObject(&unk_13432D8, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16, v22);
  v41 = v39;

  v42 = type metadata accessor for ControlEventHandler();
  swift_allocObject(v42, 48, 7);
  v43 = sub_AC828();
  v44 = ControlEventHandler.init<A>(control:events:handler:)(v41, 64, (uint64_t)sub_AC808, v40, v43);
  v45 = *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptActionEventHandler];
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptActionEventHandler] = v44;
  swift_release(v45);
  v46 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButton;
  v47 = *(void **)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButton];
  v48 = swift_allocObject(&unk_13432D8, 24, 7);
  swift_unknownObjectWeakInit(v48 + 16, v22);
  v49 = v47;

  swift_allocObject(v42, 48, 7);
  v50 = ControlEventHandler.init<A>(control:events:handler:)(v49, 64, (uint64_t)sub_AC864, v48, v43);
  v51 = *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineActionEventHandler];
  *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineActionEventHandler] = v50;
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v26], swift_release(v51).n128_f64[0]);

  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView]);
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v38]);

  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v46]);
  return v22;
}

void sub_AB598(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void (*v8)(void *, __n128);
  uint64_t v9;
  __n128 v10;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = Strong + *a3;
    v8 = *(void (**)(void *, __n128))v7;
    if (*(_QWORD *)v7)
    {
      v9 = *(_QWORD *)(v7 + 8);
      v10 = swift_retain(v9);
      v8(v6, v10);
      sub_5C198((uint64_t)v8, v9);
    }

  }
}

void sub_AB664(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  void *v33;
  uint64_t v34;
  _BYTE v35[16];

  v3 = v2;
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v12);
  v14 = &v35[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (uint64_t *)&v3[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_followerName];
  v16 = *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_followerName];
  v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_followerName + 8];
  if ((v16 != a1 || v17 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, a1, a2, 0) & 1) == 0)
  {
    v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView];
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1);
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
    v21 = *v15;
    v22 = (void *)v15[1];
    swift_bridgeObjectRetain();
    v23._countAndFlagsBits = v21;
    v23._object = v22;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v23);
    swift_bridgeObjectRelease(v22);
    v24._object = (void *)0x80000000010C5C60;
    v24._countAndFlagsBits = 0xD00000000000001ALL;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
    v25 = String.LocalizationValue.init(stringInterpolation:)(v14);
    static Locale.current.getter(v25);
    v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, 0, 0, 256);
    v27 = (uint64_t *)(v19 + OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_text);
    v28 = *(_QWORD *)(v19 + OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_text);
    v29 = *(_QWORD *)(v19 + OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_text + 8);
    *v27 = v26;
    v27[1] = v30;
    sub_824168(v28, v29, v31);
    objc_msgSend(v3, "setNeedsLayout", swift_bridgeObjectRelease(v29).n128_f64[0]);
    v32 = objc_msgSend(v3, "superview");
    if (v32)
    {
      v33 = v32;
      v34 = type metadata accessor for PromotionalParallaxContentStackView();
      if (swift_dynamicCastClass(v33, v34))
        sub_7881BC(0);

    }
  }
}

id sub_AB898()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char *v21;
  double v22;
  CGFloat v23;
  void *v24;
  double v25;
  CGFloat v26;
  double v27;
  double v28;
  double MinY;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  void *v33;
  double v34;
  double v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  CGFloat Width;
  double v42;
  objc_super v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;

  v43.receiver = v0;
  v43.super_class = (Class)type metadata accessor for SocialProfileFollowRequestConfirmationView();
  objc_msgSendSuper2(&v43, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v9, "displayScale");
  v42 = v10;

  v11 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v14 = UIEdgeInsetsInsetRect(v2, v4, v6, v8, v12, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_backgroundView], "setFrame:", v2, v4, v6, v8);
  v44.origin.x = v14;
  v44.origin.y = v16;
  v44.size.width = v18;
  v44.size.height = v20;
  Width = CGRectGetWidth(v44);
  v21 = *(char **)&v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView];
  objc_msgSend(v21, "sizeThatFits:", v18, v20);
  v23 = v22;
  v24 = *(void **)&v21[OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_mainLabel];
  objc_msgSend(v24, "_firstBaselineOffsetFromTop");
  v45.origin.y = v16 + 30.0 - v25;
  v45.origin.x = v14;
  v45.size.width = Width;
  v45.size.height = v23;
  v26 = CGRectGetMaxY(v45) + 18.0;
  objc_msgSend(v24, "_baselineOffsetFromBottom");
  v28 = v26 - v27;
  v46.origin.x = v14;
  v46.origin.y = v28;
  v46.size.width = v18;
  v46.size.height = v20;
  MinY = CGRectGetMinY(v46);
  v47.origin.x = v14;
  v47.origin.y = v16;
  v47.size.width = v18;
  v47.size.height = v20;
  v30 = v20 - (MinY - CGRectGetMinY(v47));
  v48.origin.x = v14;
  v48.origin.y = v28;
  v48.size.width = v18;
  v48.size.height = v30;
  v31 = CGRectGetWidth(v48);
  v32 = CGFloat.floorValue(scale:)(v42, (v31 + -16.0) * 0.5);
  v33 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButton];
  objc_msgSend(v33, "sizeThatFits:", v18, v30);
  v35 = v34;
  v36 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButton];
  objc_msgSend(v36, "sizeThatFits:", v18, v30);
  if (v35 > v37)
    v38 = v35;
  else
    v38 = v37;
  if (v38 > 44.0)
    v39 = v38;
  else
    v39 = 44.0;
  v49.origin.x = v14;
  v49.origin.y = v28;
  v49.size.width = v32;
  v49.size.height = v39;
  CGRectGetMaxX(v49);
  v50.origin.x = v14;
  v50.origin.y = v28;
  v50.size.width = v32;
  v50.size.height = v39;
  CGRectGetMinY(v50);
  CGRect.applyingLayoutDirection(_:inBounds:)(v11);
  objc_msgSend(v21, "setFrame:");
  CGRect.applyingLayoutDirection(_:inBounds:)(v11);
  objc_msgSend(v33, "setFrame:");
  CGRect.applyingLayoutDirection(_:inBounds:)(v11);
  return objc_msgSend(v36, "setFrame:");
}

id sub_ABC40(double a1)
{
  char *v1;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  char *v8;
  double v9;
  void *v10;
  id result;

  objc_msgSend(v1, "music_inheritedLayoutInsets");
  if (a1 > 0.0)
    a1 = a1 - v3 - v4;
  v5 = objc_msgSend(v1, "traitCollection");
  objc_msgSend(v5, "displayScale");
  v7 = v6;

  v8 = *(char **)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView];
  v9 = 0.0;
  objc_msgSend(v8, "sizeThatFits:", a1, 0.0);
  v10 = *(void **)&v8[OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_mainLabel];
  objc_msgSend(v10, "_firstBaselineOffsetFromTop");
  objc_msgSend(v10, "_firstBaselineOffsetFromTop");
  if (a1 > 0.0)
    v9 = CGFloat.floorValue(scale:)(v7, (a1 + -16.0) * 0.5);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButton], "sizeThatFits:", v9, 0.0);
  result = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButton], "sizeThatFits:", v9, 0.0);
  if (qword_14AA918 != -1)
    return (id)swift_once(&qword_14AA918, sub_AC0FC);
  return result;
}

void sub_ABEA0(uint64_t a1)
{
  char *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  id v16;
  char *v17;
  objc_super v18;

  v2 = v1;
  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for SocialProfileFollowRequestConfirmationView();
  objc_msgSendSuper2(&v18, "traitCollectionDidChange:", a1);
  v4 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_backgroundView];
  v5 = objc_msgSend(v1, "traitCollection");
  if (objc_msgSend(v5, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  else
  {
    if (qword_14AB5E0 != -1)
      swift_once(&qword_14AB5E0, sub_609A54);
    v6 = (id)qword_1580AE0;
  }
  v7 = v6;

  objc_msgSend(v4, "setBackgroundColor:", v7);
  v8 = objc_msgSend(v4, "layer");
  v9 = objc_msgSend(v1, "traitCollection");
  v10 = (char *)objc_msgSend(v9, "userInterfaceStyle");
  v11 = &kCAFilterColorDodgeBlendMode;
  if (v10 != (_BYTE *)&dword_0 + 2)
    v11 = &kCAFilterColorBurnBlendMode;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v11);
  v13 = v12;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setCompositingFilter:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView];
  v16 = objc_msgSend(v2, "traitCollection");
  v17 = (char *)objc_msgSend(v16, "horizontalSizeClass");

  *(_QWORD *)(v15 + OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_properties + 8) = v17 == (_BYTE *)&dword_0 + 1;
  sub_824440();
}

double sub_AC0FC()
{
  double result;

  result = 0.0;
  *(_OWORD *)&qword_14AEFD0 = xmmword_1060610;
  *(_OWORD *)&qword_14AEFE0 = xmmword_1060610;
  return result;
}

void sub_AC114(SEL *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v30 = a3;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = objc_msgSend(v11, "whiteColor");
  _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v12, 8.0);
  v14 = v13;

  objc_msgSend(v10, "setBackgroundImage:forState:", v14, 0);
  v15 = objc_msgSend(v11, "whiteColor");
  v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.1);
  v17 = objc_msgSend(v15, "_colorBlendedWithColor:compositingFilter:", v16, kCAFilterPlusD);

  if (v17)
  {
    _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v17, 8.0);
    v19 = v18;

    objc_msgSend(v10, "setBackgroundImage:forState:", v19, 1);
    v20 = objc_msgSend(v11, *a1);
    objc_msgSend(v10, "setTitleColor:forStates:", v20, 0);

    v21 = String.LocalizationValue.init(stringLiteral:)(v29, v30);
    static Locale.current.getter(v21);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v23 = v22;
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setTitle:forState:", v24, 0, swift_bridgeObjectRelease(v23).n128_f64[0]);

    v25 = objc_msgSend(v10, "titleLabel");
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightBold);
      objc_msgSend(v26, "setFont:", v27);

    }
    if (qword_14AA918 != -1)
      swift_once(&qword_14AA918, sub_AC0FC);
    objc_msgSend(v10, "setTitleEdgeInsets:", *(double *)&qword_14AEFD0, *(double *)&qword_14AEFD8, *(double *)&qword_14AEFE0, *(double *)&qword_14AEFE8);
  }
  else
  {
    __break(1u);
  }
}

id sub_AC468()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SocialProfileFollowRequestConfirmationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SocialProfileFollowRequestConfirmationView()
{
  return objc_opt_self(_TtC16MusicApplication42SocialProfileFollowRequestConfirmationView);
}

BOOL sub_AC56C(int a1, id a2)
{
  return objc_msgSend(a2, "horizontalSizeClass") != (char *)&dword_0 + 2;
}

uint64_t sub_AC594(int a1, id a2)
{
  if (objc_msgSend(a2, "horizontalSizeClass") == (char *)&dword_0 + 2)
    return 2;
  else
    return 1;
}

void sub_AC5C0()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_followerName];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  v3 = &v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButtonHandler];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v0[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButtonHandler];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_backgroundView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_titleCompositingView;
  if (qword_14AB5E8 != -1)
    swift_once(&qword_14AB5E8, sub_609A80);
  v7 = (void *)qword_1580AE8;
  v8 = (void *)objc_opt_self(UIFont);
  v9 = v7;
  v10 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleBody);
  if (qword_14AB5F0 != -1)
    swift_once(&qword_14AB5F0, sub_609B24);
  v11 = (void *)qword_1580AF0;
  LOBYTE(v19) = 0;
  *((_QWORD *)&v19 + 1) = 1;
  v20 = v9;
  v21 = v10;
  v22 = 0;
  v23 = 0;
  v24 = 2;
  v25 = qword_1580AF0;
  v12 = objc_allocWithZone((Class)type metadata accessor for VibrancyLabelCompositingView());
  v13 = v11;
  v14 = sub_824A5C(&v19);

  *(_QWORD *)&v1[v6] = v14;
  v15 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButton;
  sub_AC114((SEL *)&selRef_systemGreenColor, 0x747065636341, 0xE600000000000000);
  *(_QWORD *)&v1[v15] = v16;
  v17 = OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButton;
  sub_AC114((SEL *)&selRef_systemRedColor, 0x656E696C636544, 0xE700000000000000);
  *(_QWORD *)&v1[v17] = v18;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptActionEventHandler] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineActionEventHandler] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/SocialProfileFollowRequestConfirmationView.swift", 65, 2, 54, 0);
  __break(1u);
}

uint64_t sub_AC7E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_AC808(uint64_t a1)
{
  uint64_t v1;

  sub_AB598(a1, v1, &OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_acceptButtonHandler);
}

unint64_t sub_AC828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AE630;
  if (!qword_14AE630)
  {
    v1 = objc_opt_self(UIButton);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14AE630);
  }
  return result;
}

void sub_AC864(uint64_t a1)
{
  uint64_t v1;

  sub_AB598(a1, v1, &OBJC_IVAR____TtC16MusicApplication42SocialProfileFollowRequestConfirmationView_declineButtonHandler);
}

uint64_t sub_AC884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  id v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _OWORD v64[3];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF208);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF210);
  __chkstk_darwin(v61);
  v63 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF218);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF220);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v62 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = static Alignment.topTrailing.getter(v19);
  v12[1] = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF228);
  sub_ACCF4(a1, a2, a3, a4, (uint64_t)v12 + *(int *)(v22 + 44));
  if (!a1)
    goto LABEL_7;
  KeyPath = swift_getKeyPath(&unk_10607B0);
  v24 = swift_getKeyPath(&unk_10607D8);
  swift_retain(a1);
  static Published.subscript.getter(v64, v25, KeyPath, v24);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v24);
  v26 = *(double *)v64;
  v27 = swift_getKeyPath(&unk_10606A0);
  v28 = swift_getKeyPath(&unk_10606C8);
  swift_retain(a1);
  static Published.subscript.getter(v64, v29, v27, v28);
  swift_release(a1);
  swift_release(v27);
  swift_release(v28);
  if (!(_QWORD)v65)
  {
    __break(1u);
LABEL_7:
    v57 = type metadata accessor for Environment(0);
    v58 = sub_4DD24(&qword_14AF1B8, type metadata accessor for Environment, (uint64_t)&unk_1060730);
    result = EnvironmentObject.error()(0, a2, v57, v58);
    __break(1u);
    return result;
  }
  v60 = v18;
  v30 = *((_QWORD *)&v64[0] + 1);

  v32 = static Alignment.center.getter(v31);
  v33 = v32;
  v35 = v34;
  if (v26 < -INFINITY)
  {
    v36 = static os_log_type_t.fault.getter(v32);
    v37 = v16;
    v38 = v17;
    v39 = v14;
    v40 = a5;
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v36, &dword_0, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    a5 = v40;
    v14 = v39;
    v17 = v38;
    v16 = v37;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v64, 0, 1, 0, 1, *(_QWORD *)&v26, 0, v30, 0, 0, 1, 0, 1, v33, v35);
  v42 = v63;
  sub_5C238((uint64_t)v12, v63, &qword_14AF208);
  v43 = (_OWORD *)(v42 + *(int *)(v61 + 36));
  v44 = v67;
  v43[4] = v66;
  v43[5] = v44;
  v43[6] = v68;
  v45 = v64[1];
  *v43 = v64[0];
  v43[1] = v45;
  v46 = v65;
  v43[2] = v64[2];
  v43[3] = v46;
  sub_56024((uint64_t)v12, &qword_14AF208);
  v47 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v48 = Color.init(_:)(v47);
  v49 = static Edge.Set.all.getter(v48);
  sub_5C238(v42, (uint64_t)v16, &qword_14AF210);
  v50 = &v16[*(int *)(v14 + 36)];
  *(_QWORD *)v50 = v48;
  v50[8] = v49;
  sub_56024(v42, &qword_14AF210);
  v51 = Corner.extraLarge.unsafeMutableAddressor();
  v52 = *v51;
  v53 = v51[1];
  LOBYTE(v42) = *((_BYTE *)v51 + 16);
  v54 = sub_AF6F4();
  v55 = v62;
  View.corner(_:)(v52, v53, v42, v14, v54);
  sub_56024((uint64_t)v16, &qword_14AF218);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(a5, v55, v17);
}

uint64_t sub_ACCF4@<X0>(uint64_t a1@<X0>, uint64_t KeyPath@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32[6];
  id v33;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF258);
  __chkstk_darwin(v10);
  v12 = (char *)&v32[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF260);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v32[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static HorizontalAlignment.center.getter(v14);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF268);
  sub_ACF1C(a1, KeyPath, a3, a4, (uint64_t)&v12[*(int *)(v17 + 44)]);
  if (!a1)
    goto LABEL_11;
  KeyPath = swift_getKeyPath(&unk_10606A0);
  v18 = swift_getKeyPath(&unk_10606C8);
  swift_retain(a1);
  static Published.subscript.getter(v32, v19, KeyPath, v18);
  swift_release(a1);
  swift_release(KeyPath);
  *(_QWORD *)&v20 = swift_release(v18).n128_u64[0];
  v21 = v33;
  if (!v33)
  {
    __break(1u);
LABEL_11:
    v29 = type metadata accessor for Environment(0);
    v30 = sub_4DD24(&qword_14AF1B8, type metadata accessor for Environment, (uint64_t)&unk_1060730);
    result = EnvironmentObject.error()(0, KeyPath, v29, v30);
    __break(1u);
    return result;
  }
  v22 = (char *)objc_msgSend(v33, "horizontalSizeClass", v20);

  if (v22 == (_BYTE *)&dword_0 + 1)
    v24 = 0x4040000000000000;
  else
    v24 = 0x4055000000000000;
  if (v22 == (_BYTE *)&dword_0 + 1)
    v25 = 0x4036000000000000;
  else
    v25 = 0x4034000000000000;
  v26 = static Edge.Set.all.getter(v23);
  sub_5C238((uint64_t)v12, (uint64_t)v16, &qword_14AF258);
  v27 = &v16[*(int *)(v13 + 36)];
  *v27 = v26;
  *((_QWORD *)v27 + 1) = 0x402A000000000000;
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v25;
  *((_QWORD *)v27 + 4) = v24;
  v27[40] = 0;
  sub_56024((uint64_t)v12, &qword_14AF258);
  return sub_5C090((uint64_t)v16, a5, &qword_14AF260);
}

void sub_ACF1C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  double v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  __n128 v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  _QWORD *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE v142[4];
  int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  uint64_t KeyPath;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  double v190;
  double v191;
  id v192;
  uint64_t v193;
  unsigned __int8 v194;
  uint64_t v195;
  unsigned __int8 v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unsigned __int8 v200;
  uint64_t v201;
  unsigned __int8 v202;
  uint64_t v203;
  uint64_t v204;

  v168 = a3;
  v169 = a2;
  v160 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v160);
  v161 = &v142[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF270);
  v166 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v10 = &v142[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF278);
  __chkstk_darwin(v165);
  v12 = &v142[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF280);
  __chkstk_darwin(v162);
  v14 = &v142[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF288);
  __chkstk_darwin(v163);
  v164 = &v142[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF290);
  __chkstk_darwin(v158);
  v181 = &v142[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v159 = &v142[-v18];
  __chkstk_darwin(v19);
  v178 = &v142[-v20];
  v21 = a4;
  v22 = JSListenNowMusicSiriUpsell.title.getter();
  v24 = v23;

  v187 = v22;
  v188 = v24;
  v25 = sub_55EA0();
  v180 = Text.init<A>(_:)(&v187, &type metadata for String, v25);
  v179 = v26;
  v157 = v27;
  v183 = v28;
  KeyPath = swift_getKeyPath(&unk_1060870);
  v29 = static Font.body.getter();
  v31 = static Font.Weight.semibold.getter(v30);
  v186 = Font.weight(_:)(v29, v31);
  swift_release(v29);
  v177 = swift_getKeyPath(&unk_10608A0);
  v32 = (void *)objc_opt_self(UIColor);
  v185 = Color.init(_:)(objc_msgSend(v32, "labelColor"));
  v176 = swift_getKeyPath(&unk_10608D0);
  if (!a1)
    goto LABEL_19;
  v33 = swift_getKeyPath(&unk_10606A0);
  v34 = swift_getKeyPath(&unk_10606C8);
  swift_retain(a1);
  static Published.subscript.getter(&v187, v35, v33, v34);
  swift_release(a1);
  swift_release(v33);
  *(_QWORD *)&v36 = swift_release(v34).n128_u64[0];
  v37 = v192;
  if (!v192)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v38 = (char *)objc_msgSend(v192, "horizontalSizeClass", v36);

  if (v38 == (_BYTE *)&dword_0 + 1)
    v40 = 0x4008000000000000;
  else
    v40 = 0x4000000000000000;
  v41 = static Alignment.center.getter(v39);
  _FrameLayout.init(width:height:alignment:)(&v193, 0, 1, v40, 0, v41, v42);
  v155 = v193;
  v154 = v194;
  v153 = v195;
  v152 = v196;
  v151 = v197;
  v150 = v198;
  v43 = v21;
  v44 = JSListenNowMusicSiriUpsell.subtitle.getter();
  v46 = v45;

  v187 = v44;
  v188 = v46;
  v156 = Text.init<A>(_:)(&v187, &type metadata for String, v25);
  v173 = v47;
  v149 = v48;
  v50 = v49;
  v175 = swift_getKeyPath(&unk_1060870);
  v174 = static Font.subheadline.getter();
  v172 = swift_getKeyPath(&unk_10608A0);
  v171 = Color.init(_:)(objc_msgSend(v32, "secondaryLabelColor"));
  v170 = swift_getKeyPath(&unk_10608D0);
  v51 = swift_getKeyPath(&unk_10606A0);
  v52 = swift_getKeyPath(&unk_10606C8);
  swift_retain(a1);
  static Published.subscript.getter(&v187, v53, v51, v52);
  swift_release(a1);
  swift_release(v51);
  *(_QWORD *)&v54 = swift_release(v52).n128_u64[0];
  v55 = v192;
  if (!v192)
    goto LABEL_15;
  v56 = (char *)objc_msgSend(v192, "horizontalSizeClass", v54);

  if (v56 == (_BYTE *)&dword_0 + 1)
    v58 = 0x4028000000000000;
  else
    v58 = 0x4032000000000000;
  v59 = static Alignment.center.getter(v57);
  _FrameLayout.init(width:height:alignment:)(&v199, 0, 1, v58, 0, v59, v60);
  v148 = v199;
  v147 = v200;
  v146 = v201;
  v143 = v202;
  v145 = v203;
  v144 = v204;
  v61 = (_QWORD *)swift_allocObject(&unk_1343500, 48, 7);
  v62 = v169;
  v61[2] = a1;
  v61[3] = v62;
  v61[4] = v168;
  v61[5] = v43;
  __chkstk_darwin(v61);
  *(_QWORD *)&v142[-32] = a1;
  *(_QWORD *)&v142[-24] = v63;
  *(_QWORD *)&v142[-16] = v64;
  *(_QWORD *)&v142[-8] = v43;
  v65 = v43;
  v66 = swift_retain(a1);
  v67 = Button.init(action:label:)(sub_AF840, v61, sub_AF84C, &v142[-48], &type metadata for Text, &protocol witness table for Text, v66);
  v68 = static Edge.Set.vertical.getter(v67);
  v69 = swift_getKeyPath(&unk_10606A0);
  v70 = swift_getKeyPath(&unk_10606C8);
  swift_retain(a1);
  static Published.subscript.getter(&v187, v71, v69, v70);
  swift_release(a1);
  swift_release(v69);
  swift_release(v70);
  if (!v192)
    goto LABEL_16;
  v72 = v190;

  v74 = EdgeInsets.init(_all:)(v73, v72);
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v81 = v166;
  v82 = v167;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v166 + 16))(v12, v10, v167);
  v83 = (double *)&v12[*(int *)(v165 + 36)];
  *(_BYTE *)v83 = v68;
  v83[1] = v74;
  *((_QWORD *)v83 + 2) = v76;
  *((_QWORD *)v83 + 3) = v78;
  *((_QWORD *)v83 + 4) = v80;
  *((_BYTE *)v83 + 40) = 0;
  v84 = (*(uint64_t (**)(_BYTE *, uint64_t))(v81 + 8))(v10, v82);
  v85 = static Edge.Set.horizontal.getter(v84);
  v86 = swift_getKeyPath(&unk_10606A0);
  v87 = swift_getKeyPath(&unk_10606C8);
  swift_retain(a1);
  static Published.subscript.getter(&v187, v88, v86, v87);
  swift_release(a1);
  swift_release(v86);
  swift_release(v87);
  if (v192)
  {
    v184 = v50;
    v89 = v191;

    v91 = EdgeInsets.init(_all:)(v90, v89);
    v93 = v92;
    v95 = v94;
    v97 = v96;
    sub_5C238((uint64_t)v12, (uint64_t)v14, &qword_14AF278);
    v98 = (double *)&v14[*(int *)(v162 + 36)];
    *(_BYTE *)v98 = v85;
    v98[1] = v91;
    *((_QWORD *)v98 + 2) = v93;
    *((_QWORD *)v98 + 3) = v95;
    *((_QWORD *)v98 + 4) = v97;
    *((_BYTE *)v98 + 40) = 0;
    v99 = sub_56024((uint64_t)v12, &qword_14AF278);
    v100 = static Color.accentColor.getter(v99);
    v101 = static Edge.Set.all.getter(v100);
    v102 = v164;
    sub_5C238((uint64_t)v14, (uint64_t)v164, &qword_14AF280);
    v103 = &v102[*(int *)(v163 + 36)];
    *(_QWORD *)v103 = v100;
    v103[8] = v101;
    sub_56024((uint64_t)v14, &qword_14AF280);
    v104 = swift_getKeyPath(&unk_10606A0);
    v105 = swift_getKeyPath(&unk_10606C8);
    swift_retain(a1);
    static Published.subscript.getter(&v187, v106, v104, v105);
    swift_release(a1);
    swift_release(v104);
    swift_release(v105);
    if (v192)
    {
      v107 = v189;
      v108 = v149 & 1;
      v109 = v157 & 1;

      v110 = v161;
      v111 = &v161[*(int *)(v160 + 20)];
      v112 = enum case for RoundedCornerStyle.continuous(_:);
      v113 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 104))(v111, v112, v113);
      *v110 = v107;
      v110[1] = v107;
      v114 = (uint64_t)v159;
      v115 = (uint64_t)&v159[*(int *)(v158 + 36)];
      sub_AF858((uint64_t)v110, v115);
      *(_WORD *)(v115 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14DD170) + 36)) = 256;
      sub_5C238((uint64_t)v102, v114, &qword_14AF288);
      sub_AF89C((uint64_t)v110);
      sub_56024((uint64_t)v102, &qword_14AF288);
      v116 = v114;
      v117 = v178;
      sub_5C090(v116, (uint64_t)v178, &qword_14AF290);
      LOBYTE(v112) = v109;
      LOBYTE(v187) = v109;
      sub_5C238((uint64_t)v117, (uint64_t)v181, &qword_14AF290);
      *(_QWORD *)(a5 + 224) = 0;
      *(_BYTE *)(a5 + 264) = v143;
      *(_QWORD *)(a5 + 96) = v155;
      *(_BYTE *)(a5 + 104) = v154;
      *(_QWORD *)(a5 + 112) = v153;
      *(_BYTE *)(a5 + 120) = v152;
      v118 = v150;
      *(_QWORD *)(a5 + 128) = v151;
      *(_QWORD *)(a5 + 136) = v118;
      *(_WORD *)(a5 + 40) = 1;
      *(_BYTE *)(a5 + 42) = 1;
      *(_BYTE *)(a5 + 88) = 1;
      *(_WORD *)(a5 + 184) = 1;
      *(_BYTE *)(a5 + 186) = 1;
      *(_BYTE *)(a5 + 232) = 1;
      *(_QWORD *)(a5 + 240) = v148;
      *(_BYTE *)(a5 + 248) = v147;
      *(_QWORD *)(a5 + 256) = v146;
      v119 = v144;
      *(_QWORD *)(a5 + 272) = v145;
      *(_QWORD *)(a5 + 280) = v119;
      v120 = v180;
      v121 = v179;
      *(_QWORD *)a5 = v180;
      *(_QWORD *)(a5 + 8) = v121;
      *(_BYTE *)(a5 + 16) = v109;
      v122 = KeyPath;
      *(_QWORD *)(a5 + 24) = v183;
      *(_QWORD *)(a5 + 32) = v122;
      v123 = v177;
      v124 = v186;
      *(_QWORD *)(a5 + 48) = v177;
      *(_QWORD *)(a5 + 56) = v124;
      v125 = v176;
      v126 = v185;
      *(_QWORD *)(a5 + 64) = v176;
      *(_QWORD *)(a5 + 72) = v126;
      *(_QWORD *)(a5 + 80) = 0;
      v127 = v156;
      v128 = v173;
      *(_QWORD *)(a5 + 144) = v156;
      *(_QWORD *)(a5 + 152) = v128;
      *(_BYTE *)(a5 + 160) = v108;
      v129 = v175;
      *(_QWORD *)(a5 + 168) = v184;
      *(_QWORD *)(a5 + 176) = v129;
      v130 = v174;
      *(_QWORD *)(a5 + 192) = v172;
      *(_QWORD *)(a5 + 200) = v130;
      v131 = v171;
      *(_QWORD *)(a5 + 208) = v170;
      *(_QWORD *)(a5 + 216) = v131;
      v132 = a5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AF298) + 96);
      v133 = v181;
      sub_5C238((uint64_t)v181, v132, &qword_14AF290);
      sub_AF8D8(v120, v121, v112);
      swift_bridgeObjectRetain();
      swift_retain(v122);
      swift_retain(v123);
      swift_retain(v186);
      swift_retain(v125);
      swift_retain(v185);
      v134 = v173;
      sub_AF8D8(v127, v173, v108);
      swift_bridgeObjectRetain();
      v135 = v175;
      swift_retain(v175);
      v136 = v172;
      swift_retain(v172);
      v137 = v174;
      swift_retain(v174);
      v138 = v170;
      swift_retain(v170);
      v139 = v171;
      swift_retain(v171);
      sub_56024((uint64_t)v178, &qword_14AF290);
      sub_56024((uint64_t)v133, &qword_14AF290);
      sub_AF8E8(v127, v134, v108);
      swift_release(v139);
      swift_release(v138);
      swift_release(v137);
      swift_release(v136);
      swift_release(v135);
      swift_bridgeObjectRelease(v184);
      sub_AF8E8(v180, v179, v187);
      swift_release(v185);
      swift_release(v176);
      swift_release(v186);
      swift_release(v177);
      swift_release(KeyPath);
      swift_bridgeObjectRelease(v183);
      return;
    }
    goto LABEL_18;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  v140 = type metadata accessor for Environment(0);
  v141 = sub_4DD24(&qword_14AF1B8, type metadata accessor for Environment, (uint64_t)&unk_1060730);
  EnvironmentObject.error()(0, v169, v140, v141);
  __break(1u);
}

double sub_ADC58@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  uint64_t v10;

  KeyPath = swift_getKeyPath(&unk_10606A0);
  v4 = swift_getKeyPath(&unk_10606C8);
  static Published.subscript.getter(v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v10;
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = v5;
  return result;
}

void sub_ADCE0(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(__n128);
  uint64_t v13;

  if (a1)
  {
    KeyPath = swift_getKeyPath(&unk_1060768);
    v4 = swift_getKeyPath(&unk_1060790);
    swift_retain(a1);
    static Published.subscript.getter(&v12, v5, KeyPath, v4);
    v6 = v12;
    if (v12)
    {
      v7 = v13;
      swift_retain(v13);
      swift_release(a1);
      swift_release(KeyPath);
      v8 = swift_release(v4);
      v6(v8);
      sub_5C198((uint64_t)v6, v7);
      sub_5C198((uint64_t)v6, v7);
    }
    else
    {
      swift_release(a1);
      swift_release(KeyPath);
      swift_release(v4);
    }
  }
  else
  {
    v10 = type metadata accessor for Environment(0);
    v11 = sub_4DD24(&qword_14AF1B8, type metadata accessor for Environment, (uint64_t)&unk_1060730);
    EnvironmentObject.error()(0, a2, v10, v11);
    __break(1u);
  }
}

uint64_t (*sub_ADDF8())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_1060768);
  v3 = swift_getKeyPath(&unk_1060790);
  static Published.subscript.getter(v8, v1, KeyPath, v3);
  v4 = v8[0];
  if (v8[0])
  {
    v5 = v8[1];
    v6 = swift_allocObject(&unk_1343458, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    swift_release(KeyPath);
    swift_release(v3);
    return sub_AF944;
  }
  else
  {
    swift_release(KeyPath);
    swift_release(v3);
    return 0;
  }
}

void sub_ADEC0(void *a1@<X3>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v3 = a1;
  v4 = JSListenNowMusicSiriUpsell.buttonTitle.getter();
  v6 = v5;

  v34[0] = v4;
  v34[1] = v6;
  v7 = sub_55EA0();
  v8 = Text.init<A>(_:)(v34, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v15 = static Font.callout.getter();
  v17 = static Font.Weight.semibold.getter(v16);
  v18 = Font.weight(_:)(v15, v17);
  swift_release(v15);
  v19 = Text.font(_:)(v18, v8, v10, v14, v12);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release(v18);
  LOBYTE(v18) = v23 & 1;
  sub_AF8E8(v8, v10, v14);
  v26 = swift_bridgeObjectRelease(v12);
  v27 = static Color.white.getter(v26);
  v28 = Text.foregroundColor(_:)(v27, v19, v21, v23 & 1, v25);
  v30 = v29;
  LOBYTE(v14) = v31;
  v33 = v32;
  swift_release(v27);
  sub_AF8E8(v19, v21, v18);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = v30;
  *(_BYTE *)(a2 + 16) = v14 & 1;
  *(_QWORD *)(a2 + 24) = v33;
}

double sub_AE010()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_10607B0);
  v2 = swift_getKeyPath(&unk_10607D8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_AE080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_AC884(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

double sub_AE08C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10607B0);
  v5 = swift_getKeyPath(&unk_10607D8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_AE108(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10607B0);
  v5 = swift_getKeyPath(&unk_10607D8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_AE180@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1060768);
  v5 = swift_getKeyPath(&unk_1060790);
  static Published.subscript.getter(v9, v3, KeyPath, v5);
  v6 = v9[0];
  v7 = v9[1];
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v6;
  a2[1] = v7;
  return result;
}

uint64_t sub_AE204(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  _QWORD v13[2];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_1343430, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_62604;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1060768);
  v9 = swift_getKeyPath(&unk_1060790);
  if (v3)
  {
    v10 = swift_allocObject(&unk_1343408, 32, 7);
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v5;
    v11 = sub_AF944;
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v13[0] = v11;
  v13[1] = v10;
  sub_A9DEC(v3, v4);
  swift_retain(v7);
  return static Published.subscript.setter(v13, v7, KeyPath, v9);
}

double sub_AE2F8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10606A0);
  v5 = swift_getKeyPath(&unk_10606C8);
  static Published.subscript.getter(v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v11;
  result = *(double *)v10;
  v8 = v10[1];
  v9 = v10[2];
  *(_OWORD *)a2 = v10[0];
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 48) = v6;
  return result;
}

uint64_t sub_AE384(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  __int128 v10;
  __int128 v11;
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v10 = a1[1];
  v11 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = (void *)*((_QWORD *)a1 + 6);
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_10606A0);
  v7 = swift_getKeyPath(&unk_10606C8);
  v12[0] = v11;
  v12[1] = v10;
  v13 = v2;
  v14 = v3;
  v15 = v4;
  v8 = v4;
  swift_retain(v5);
  return static Published.subscript.setter(v12, v5, KeyPath, v7);
}

uint64_t sub_AE424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC16MusicApplicationP33_65CD036AE6E15FDE6477DBFCBBC6957011Environment__width;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF200);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MusicApplicationP33_65CD036AE6E15FDE6477DBFCBBC6957011Environment__onButtonSelect;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF1F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MusicApplicationP33_65CD036AE6E15FDE6477DBFCBBC6957011Environment__specs;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF1F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_AE4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[3];
  uint64_t v21;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF1F0);
  v1 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF1F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF200);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC16MusicApplicationP33_65CD036AE6E15FDE6477DBFCBBC6957011Environment__width;
  *(_QWORD *)&v20[0] = 0;
  Published.init(initialValue:)(v20, &type metadata for CGFloat);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v13 = v0 + OBJC_IVAR____TtC16MusicApplicationP33_65CD036AE6E15FDE6477DBFCBBC6957011Environment__onButtonSelect;
  v20[0] = 0uLL;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF0C0);
  Published.init(initialValue:)(v20, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  v15 = v0 + OBJC_IVAR____TtC16MusicApplicationP33_65CD036AE6E15FDE6477DBFCBBC6957011Environment__specs;
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AF0D0);
  Published.init(initialValue:)(v20, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v15, v3, v19);
  return v0;
}

void sub_AE68C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_AE6DC();

  }
}

void sub_AE6DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  _OWORD v9[2];
  uint64_t v10;
  _BYTE v11[72];
  _OWORD v12[2];
  uint64_t v13;
  char v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v1);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
  v5 = *(void **)&v0[qword_14AF160];
  memset(v12, 0, sizeof(v12));
  v13 = 0;
  v14 = -1;
  v6 = v4;
  PresentationSource.init(viewController:position:)(v0, (uint64_t)v12, (uint64_t)v11);
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  memset(v9, 0, sizeof(v9));
  v10 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = sub_30D0F4();
  sub_907A7C(v5, 0, (uint64_t)v11, 0, 0, (uint64_t)v9, (uint64_t)v3, v8);
  sub_56024((uint64_t)v3, (uint64_t *)&unk_14B0AC0);
  sub_56024((uint64_t)v9, (uint64_t *)&unk_14B2930);
  sub_56060((uint64_t)v11);

}

void sub_AE814()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/JSListenNowMusicSiriUpsellViewController.swift", 63, 2, 126, 0);
  __break(1u);
}

Swift::Void __swiftcall JSListenNowMusicSiriUpsellViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (*v12)(_BYTE *, _QWORD);
  id v13;
  void *v14;
  _BYTE v15[32];
  objc_super v16;

  isa = a1.value.super.isa;
  v16.receiver = v1;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, "traitCollectionDidChange:", isa);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (!isa || v4 != -[objc_class horizontalSizeClass](isa, "horizontalSizeClass"))
  {
    v5 = *(_QWORD *)&v1[qword_14AF060];
    v6 = objc_msgSend(v1, "traitCollection");
    KeyPath = swift_getKeyPath(&unk_10606A0);
    v8 = swift_getKeyPath(&unk_10606C8);
    v9 = static Published.subscript.modify(v15, v5, KeyPath, v8);
    v11 = *(void **)(v10 + 48);
    if (v11)
    {
      v12 = (void (*)(_BYTE *, _QWORD))v9;
      *(_QWORD *)(v10 + 48) = v6;

      v12(v15, 0);
      swift_release(KeyPath);
      swift_release(v8);
      v13 = objc_msgSend(v1, "view");
      if (v13)
      {
        v14 = v13;
        objc_msgSend(v13, "setNeedsLayout");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_AE9D0(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  UITraitCollection_optional v8;

  v5 = a3;
  v6 = a1;
  v8.is_nil = (char)v6;
  v7 = v6;
  v8.value.super.isa = (Class)a3;
  JSListenNowMusicSiriUpsellViewController.traitCollectionDidChange(_:)(v8);

}

Swift::Void __swiftcall JSListenNowMusicSiriUpsellViewController.viewDidLayoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "viewDidLayoutSubviews");
  sub_AEA6C(0, 0, 1);
}

id sub_AEA6C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31[6];
  id v32;

  if ((a3 & 1) != 0)
  {
    result = objc_msgSend(v3, "view");
    if (!result)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    v7 = result;
    objc_msgSend(result, "bounds");
    a1 = v8;
    a2 = v9;

  }
  result = objc_msgSend(v3, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = result;
  objc_msgSend((id)objc_opt_self(UIView), "music_defaultLayoutInsetsInView:", result);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = CGSize.inset(by:)(v12, v14, v16, v18, *(double *)&a1, *(double *)&a2);
  dispatch thunk of UIHostingController.sizeThatFits(in:)(v19, 1.79769313e308);
  v21 = v20;
  v22 = *(_QWORD *)&v3[qword_14AF060];
  KeyPath = swift_getKeyPath(&unk_10606A0);
  v24 = swift_getKeyPath(&unk_10606C8);
  static Published.subscript.getter(v31, v22, KeyPath, v24);
  swift_release(KeyPath);
  result = (id)swift_release(v24);
  if (!v32)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v25 = v31[0];

  objc_msgSend(v3, "preferredContentSize");
  if (v21 + v25 != v26)
  {
    objc_msgSend(v3, "preferredContentSize");
    objc_msgSend(v3, "setPreferredContentSize:");
  }
  v27 = swift_getKeyPath(&unk_10607B0);
  v28 = swift_getKeyPath(&unk_10607D8);
  static Published.subscript.getter(v31, v22, v27, v28);
  swift_release(v27);
  result = (id)swift_release(v28);
  if (v31[0] != v19)
  {
    v29 = swift_getKeyPath(&unk_10607B0);
    v30 = swift_getKeyPath(&unk_10607D8);
    v31[0] = v19;
    swift_retain(v22);
    return (id)static Published.subscript.setter(v31, v22, v29, v30);
  }
  return result;
}

void sub_AECA8(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "viewDidLayoutSubviews");
  sub_AEA6C(0, 0, 1);

}

void JSListenNowMusicSiriUpsellViewController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.JSListenNowMusicSiriUpsellViewController", 57, "init(rootView:)", 15, 0);
  __break(1u);
}

void JSListenNowMusicSiriUpsellViewController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.JSListenNowMusicSiriUpsellViewController", 57, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_AED60()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_14AF060));
}

uint64_t sub_AED8C(uint64_t a1)
{

  return swift_release(*(_QWORD *)(a1 + qword_14AF060));
}

uint64_t sub_AEDC4()
{
  return type metadata accessor for Environment(0);
}

uint64_t type metadata accessor for Environment(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14AF0A8, (uint64_t)&nominal type descriptor for Environment);
}

void sub_AEDE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_AEEA0();
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_AEEF4(319, &qword_14AF0B8, &qword_14AF0C0);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_AEEF4(319, &qword_14AF0C8, (uint64_t *)&unk_14AF0D0);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 3, v8, a1 + 80);
      }
    }
  }
}

void sub_AEEA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_14DCED0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CGFloat);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_14DCED0);
  }
}

void sub_AEEF4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for JSListenNowMusicSiriUpsellViewController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14AF168, (uint64_t)&nominal type descriptor for JSListenNowMusicSiriUpsellViewController);
}

uint64_t sub_AEF54(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + class metadata base offset for JSListenNowMusicSiriUpsellViewController);
}

uint64_t sub_AEFAC()
{
  return type metadata accessor for JSListenNowMusicSiriUpsellViewController(0);
}

void destroy for Environment.Specs(uint64_t a1)
{

}

uint64_t initializeWithCopy for Environment.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for Environment.Specs(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v3 = (void *)a2[6];
  v4 = (void *)a1[6];
  a1[6] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for Environment.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for TextAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.Specs()
{
  return &type metadata for Environment.Specs;
}

char *sub_AF140(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __n128 v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  id v39;

  *(_QWORD *)&v1[qword_14AF160] = a1;
  v3 = type metadata accessor for Environment(0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = v1;
  v5 = a1;
  v6 = sub_AE4D0();
  v7 = qword_14AF060;
  *(_QWORD *)&v4[qword_14AF060] = v6;

  v8 = sub_4DD24(&qword_14AF1B8, type metadata accessor for Environment, (uint64_t)&unk_1060730);
  v9 = v5;
  v10 = EnvironmentObject.init()(v3, v8);
  v12 = v11;
  v13 = type metadata accessor for JSListenNowMusicSiriUpsell(0);
  v14 = sub_4DD24(&qword_14AF1C0, type metadata accessor for JSListenNowMusicSiriUpsell, (uint64_t)&protocol conformance descriptor for JSListenNowMusicSiriUpsell);
  v15 = ObservedObject.init(wrappedValue:)(v9, v13, v14);
  v17 = v16;
  v18 = *(_QWORD *)&v4[v7];
  v19 = swift_retain(v18);
  *(_QWORD *)&v36 = v10;
  *((_QWORD *)&v36 + 1) = v12;
  *(_QWORD *)&v37 = v15;
  *((_QWORD *)&v37 + 1) = v17;
  *(_QWORD *)&v38 = static ObservableObject.environmentStore.getter(v3, v8, v19);
  *((_QWORD *)&v38 + 1) = v18;
  swift_retain(v10);
  v20 = v17;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF1C8);
  v22 = sub_AF408();
  *(_QWORD *)&v36 = AnyView.init<A>(_:)(&v36, v21, v22);
  v23 = (char *)UIHostingController.init(rootView:)(&v36);
  v24 = qword_14AF060;
  v25 = *(_QWORD *)&v23[qword_14AF060];
  v26 = v23;
  v27 = objc_msgSend(v26, "traitCollection");
  KeyPath = swift_getKeyPath(&unk_10606A0);
  v29 = swift_getKeyPath(&unk_10606C8);
  v36 = xmmword_1060670;
  v37 = xmmword_1060680;
  v38 = xmmword_1060690;
  v39 = v27;
  swift_retain(v25);
  static Published.subscript.setter(&v36, v25, KeyPath, v29);
  v30 = *(_QWORD *)&v23[v24];
  v31 = swift_allocObject(&unk_13433B8, 24, 7);
  swift_unknownObjectWeakInit(v31 + 16, v26);

  v32 = swift_getKeyPath(&unk_1060768);
  v33 = swift_getKeyPath(&unk_1060790);
  v34 = swift_allocObject(&unk_13433E0, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_AF4F4;
  *(_QWORD *)(v34 + 24) = v31;
  *(_QWORD *)&v36 = sub_62604;
  *((_QWORD *)&v36 + 1) = v34;
  swift_retain(v31);
  swift_retain(v30);
  static Published.subscript.setter(&v36, v30, v32, v33);

  swift_release(v10);
  swift_release(v31);

  return v26;
}

unint64_t sub_AF408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AF1D0;
  if (!qword_14AF1D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AF1C8);
    sub_AF48C();
    sub_5C150(&qword_14AF1E0, &qword_14AF1E8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14AF1D0);
  }
  return result;
}

unint64_t sub_AF48C()
{
  unint64_t result;

  result = qword_14AF1D8;
  if (!qword_14AF1D8)
  {
    result = swift_getWitnessTable("1-.", &type metadata for ListenNowMusicSiriUpsellView);
    atomic_store(result, (unint64_t *)&qword_14AF1D8);
  }
  return result;
}

uint64_t sub_AF4D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_AF4F4()
{
  uint64_t v0;

  sub_AE68C(v0);
}

uint64_t sub_AF504()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void destroy for ListenNowMusicSiriUpsellView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);

}

uint64_t initializeWithCopy for ListenNowMusicSiriUpsellView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  v4 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain(v3);
  v5 = v4;
  return a1;
}

uint64_t *assignWithCopy for ListenNowMusicSiriUpsellView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = (void *)a2[3];
  v7 = (void *)a1[3];
  a1[3] = (uint64_t)v6;
  v8 = v6;

  return a1;
}

uint64_t *assignWithTake for ListenNowMusicSiriUpsellView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  v5 = (void *)a1[3];
  a1[3] = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for ListenNowMusicSiriUpsellView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListenNowMusicSiriUpsellView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListenNowMusicSiriUpsellView()
{
  return &type metadata for ListenNowMusicSiriUpsellView;
}

uint64_t sub_AF6E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11D5E28, 1);
}

unint64_t sub_AF6F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AF230;
  if (!qword_14AF230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AF218);
    sub_AF778();
    sub_5C150(&qword_14AF248, &qword_14AF250, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14AF230);
  }
  return result;
}

unint64_t sub_AF778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AF238;
  if (!qword_14AF238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AF210);
    sub_5C150(&qword_14AF240, &qword_14AF208, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14AF238);
  }
  return result;
}

uint64_t sub_AF814()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_AF840()
{
  uint64_t v0;

  sub_ADCE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_AF84C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_ADEC0(*(void **)(v1 + 40), a1);
}

uint64_t sub_AF858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_AF89C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_AF8D8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_AF8E8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_AF8F8()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AF218);
  v1[1] = sub_AF6F4();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
}

id sub_AF954()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  if (qword_14AA920 != -1)
    swift_once(&qword_14AA920, sub_BA688);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_14AF2A0);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v16, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_5C090((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_14AD640);
  if (v18)
  {
    v3 = type metadata accessor for AppInterfaceContext();
    if ((swift_dynamicCast(&v15, v17, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
      return (id)v15;
  }
  else
  {
    sub_56024((uint64_t)v17, (uint64_t *)&unk_14AD640);
  }
  v5 = objc_msgSend(v0, "parentViewController");
  if (v5)
  {
    v6 = v5;
    v4 = sub_AF954();

    return (id)v4;
  }
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, "window");

    if (v9)
    {
      v10 = objc_msgSend(v9, "windowScene");

      if (v10)
      {
        v11 = objc_msgSend(v10, "delegate");
        if (v11)
        {
          v12 = v11;
          v13 = type metadata accessor for AppSceneDelegate();
          v14 = swift_dynamicCastClass(v12, v13);
          if (v14)
          {
            v4 = *(_QWORD *)(v14 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
            swift_retain(v4);

            swift_unknownObjectRelease(v12);
            return (id)v4;
          }

          swift_unknownObjectRelease(v12);
        }
        else
        {

        }
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_AFB54(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28[5];
  _BYTE v29[24];

  v2 = v1;
  v4 = v1 + 24;
  swift_beginAccess(v1 + 24, v29, 0, 0);
  v5 = *(_QWORD *)(v1 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    sub_21BC50(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v6);
      swift_retain(v8);
      swift_bridgeObjectRelease(v5);
      return v8;
    }
    swift_bridgeObjectRelease(v5);
  }
  v9 = swift_allocObject(&unk_1343EB0, 25, 7);
  *(_QWORD *)(v9 + 16) = v2;
  *(_BYTE *)(v9 + 24) = a1;
  v10 = _s11AuthorityAICMa();
  v11 = swift_allocObject(v10, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_BE954;
  *(_QWORD *)(v11 + 24) = v9;
  v28[3] = v10;
  v28[4] = sub_4DD24(&qword_14AF5E0, (uint64_t (*)(uint64_t))_s11AuthorityAICMa, (uint64_t)&unk_106282C);
  v28[0] = v11;
  v12 = type metadata accessor for MusicStackAuthority(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  swift_retain(v2);
  v13 = swift_retain(v11);
  v8 = MusicStackAuthority.init(navigationPathProvider:)(v28, v13);
  swift_beginAccess(v4, v28, 33, 0);
  swift_retain(v11);
  swift_retain(v8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v2 + 24));
  v27 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = 0x8000000000000000;
  sub_19C278(v8, v11, a1, isUniquelyReferenced_nonNull_native);
  v15 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 24) = v27;
  swift_bridgeObjectRelease(v15);
  swift_endAccess(v28);
  sub_4DD24(&qword_14AF5E8, (uint64_t (*)(uint64_t))_s11AuthorityAICMa, (uint64_t)&unk_1062854);
  v16 = swift_retain(v11);
  MusicStackAuthority.navigationControllerDelegate.setter(v16);
  if (qword_14AA930 != -1)
    swift_once(&qword_14AA930, sub_BA6D0);
  v17 = type metadata accessor for Logger(0);
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_157F610);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v28[0] = v22;
    *(_DWORD *)v21 = 136446210;
    LOBYTE(v27) = a1;
    v23 = String.init<A>(describing:)(&v27, &type metadata for TabIdentifier);
    v25 = v24;
    v27 = sub_23EAC8(v23, v24, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28);
    swift_bridgeObjectRelease(v25);
    _os_log_impl(&dword_0, v19, v20, "Successfully setup StackAuthority for tab %{public}s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  swift_release(v11);

  return v8;
}

uint64_t sub_AFE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  void *v12;
  uint64_t ObjectType;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v4);
  v5 = *(_QWORD *)(a1 + 32);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC16MusicApplication16TabBarController__tabIdentifiers);
    v7 = (id)(v5 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    v8 = sub_6FF288(a2, v6);
    v10 = v9;
    swift_bridgeObjectRelease(v6);
    if ((v10 & 1) == 0)
    {
      v11 = sub_301F80(v8);
      if (v11)
      {
        v12 = v11;
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &_s11AuthorityAIC9NavigatorPMp))
          v14 = v12;
        else
          v14 = 0;
        if (v14)
        {

          return (uint64_t)v14;
        }

      }
    }
    if (qword_14AA930 != -1)
      swift_once(&qword_14AA930, sub_BA6D0);
    v15 = type metadata accessor for Logger(0);
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_157F610);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v31 = v20;
      *(_DWORD *)v19 = 136446210;
      LOBYTE(v33) = a2;
      v21 = String.init<A>(describing:)(&v33, &type metadata for TabIdentifier);
      v23 = v22;
      v33 = sub_23EAC8(v21, v22, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
      swift_bridgeObjectRelease(v23);
      _os_log_impl(&dword_0, v17, v18, "Attempted to perform navigation on stack authority for tab %{public}s, but no navigation delegate found… yikes!", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    return 0;
  }
  if (v5 >> 62 == 1)
    __asm { BR              X10 }
  if (qword_14AA930 != -1)
    swift_once(&qword_14AA930, sub_BA6D0);
  v25 = type metadata accessor for Logger(0);
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_157F610);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.fault.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v31 = v30;
    *(_DWORD *)v29 = 136315138;
    v33 = sub_23EAC8(0xD000000000000014, 0x80000000010C6230, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    _os_log_impl(&dword_0, v27, v28, "Unexpected call to %s in a miniPlayer UI context", v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }

  v31 = 0;
  v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease(v32);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x80000000010C61E0, "MusicApplication/AppInterfaceContext.swift", 42, 2, 109, 0);
  __break(1u);
  return result;
}

uint64_t sub_B0500(unint64_t *a1, unint64_t *a2)
{
  return sub_BC464(*a1, *a2);
}

void sub_B050C(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  id v17;
  unint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;

  v2 = a1 >> 62;
  v3 = a1 & 0x3FFFFFFFFFFFFFFFLL;
  if (!(a1 >> 62))
    v3 = a1;
  v4 = v1;
  v5 = v1[4];
  if (v5 >> 62)
    v5 &= 0x3FFFFFFFFFFFFFFFuLL;
  if (v3 != v5)
  {
    sub_12D03C();
    v7 = v1[4];
    if (v7 >> 62 == 2 || v7 >> 62 == 1)
    {
      v8 = (void *)(v7 & 0x3FFFFFFFFFFFFFFFLL);
      v7 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v8 = (void *)(v7 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v9 = qword_14AA920;
    swift_retain(v4);
    v10 = v8;
    if (v9 != -1)
      swift_once(&qword_14AA920, sub_BA688);
    objc_setAssociatedObject((id)v7, (const void *)qword_14AF2A0, v4, 0);

    swift_release(v4);
    if ((_DWORD)v2)
      v11 = a1 & 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = a1;
    ObjectType = swift_getObjectType();
    v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for BottomPlayerHost);
    if (v13)
      v14 = v13;
    else
      v14 = 0;
    if (!v13)
      v11 = 0;
    if (v11)
    {
      v15 = swift_getObjectType();
      v16 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
      v17 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      v16(v15, v14);

    }
    v18 = v4[4];
    if ((_DWORD)v2)
    {
      if ((_DWORD)v2 != 1 || v18 >> 62)
        goto LABEL_30;
      v19 = (id)v18;
      v20 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      v21 = v19;
      v22 = sub_B9100(v20);
    }
    else
    {
      if (v18 >> 62 != 1)
      {
LABEL_30:
        sub_B0968();
        return;
      }
      v23 = (void *)(v18 & 0x3FFFFFFFFFFFFFFFLL);
      v20 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      v21 = v23;
      v22 = sub_B8DF4((char *)a1);
    }
    v24 = v22;

    swift_bridgeObjectRelease(v24);
    goto LABEL_30;
  }
}

uint64_t sub_B0710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  id v10;
  _BYTE v12[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F40);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD *)(v0 + 32);
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      v5 = (v4 & 0x3FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks;
      swift_beginAccess(v5, v12, 0, 0);
      sub_5C238(v5, (uint64_t)v3, (uint64_t *)&unk_14C7F40);
      v6 = type metadata accessor for SidebarMenu.Item(0);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) != 1)
      {
        v7 = (char *)&loc_B0804 + 4 * byte_1060906[swift_getEnumCaseMultiPayload(v3, v6)];
        __asm { BR              X10 }
      }
    }
    return 6;
  }
  else
  {
    v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC16MusicApplication16TabBarController__tabIdentifiers);
    v10 = (id)(v4 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    Array.subscript.getter((uint64_t)objc_msgSend((id)v4, "selectedIndex"), v9, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v12);

    swift_bridgeObjectRelease(v9);
    return v12[0];
  }
}

void sub_B0874()
{
  JUMPOUT(0xB0860);
}

void sub_B0880()
{
  uint64_t v0;

  sub_5C0DC(v0, type metadata accessor for SidebarMenu.Item);
  JUMPOUT(0xB0860);
}

id sub_B0898()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 48);
  if (v1)
  {
    v2 = *(id *)(v0 + 48);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BottomPlayerViewController()), "init");
    v4 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_B0900()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(id *)(v0 + 56);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PalettePresentationInteraction(0)), "init");
    v4 = *(void **)(v0 + 56);
    *(_QWORD *)(v0 + 56) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_B0968()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  if (v2 >> 62)
    v3 = v2 & 0x3FFFFFFFFFFFFFFFLL;
  else
    v3 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for BottomPlayerHost);
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (v5)
    v7 = v3;
  else
    v7 = 0;
  if (v7)
  {
    v8 = sub_8AFF0();
    v9 = (id)(v2 & 0x3FFFFFFFFFFFFFFFLL);
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v8) & 1) != 0
      && (v10 = *(void **)(v1 + 64)) != 0)
    {
      v11 = swift_getObjectType();
      v12 = v10;
      v13 = sub_B0900();
      (*(void (**)(id, id, uint64_t, uint64_t))(v6 + 24))(v12, v13, v11, v6);
    }
    else
    {
      v14 = swift_getObjectType();
      v12 = sub_B0898();
      v13 = sub_B0900();
      (*(void (**)(id, id, uint64_t, uint64_t))(v6 + 16))(v12, v13, v14, v6);
    }

  }
}

Swift::Int sub_B0A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v9[9];

  Hasher.init(_seed:)(v9);
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(2uLL);
    }
    else
    {
      Hasher._combine(_:)(0);
      if (a2)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(a2);
        String.hash(into:)(v9, a1, a2);
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      String.hash(into:)(v9, a3, a4);
    }
  }
  else
  {
    Hasher._combine(_:)(1uLL);
  }
  return Hasher._finalize()();
}

Swift::Int sub_B0B60()
{
  uint64_t *v0;

  return sub_B0A90(*v0, v0[1], v0[2], v0[3]);
}

void sub_B0B6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1[3];
  if (!v3)
  {
    v4 = 1;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    v4 = 2;
LABEL_5:
    Hasher._combine(_:)(v4);
    return;
  }
  v6 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  Hasher._combine(_:)(0);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(a1, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  String.hash(into:)(a1, v7, v3);
}

Swift::Int sub_B0C30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  Hasher.init(_seed:)(v6);
  if (v4)
  {
    if (v4 == 1)
    {
      Hasher._combine(_:)(2uLL);
    }
    else
    {
      Hasher._combine(_:)(0);
      if (v1)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(v1);
        String.hash(into:)(v6, v2, v1);
        swift_bridgeObjectRelease(v1);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      String.hash(into:)(v6, v3, v4);
    }
  }
  else
  {
    Hasher._combine(_:)(1uLL);
  }
  return Hasher._finalize()();
}

uint64_t sub_B0CF4(uint64_t *a1, uint64_t a2)
{
  return sub_BC558(*a1, a1[1], a1[2], a1[3], *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

double sub_B0D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v7 = type metadata accessor for AppInterfaceContext.Activity(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(a2, (uint64_t)v10, type metadata accessor for AppInterfaceContext.Activity);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(&unk_1343730, v12 + v9, v11 | 7);
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  sub_5C04C((uint64_t)v10, v13 + v12, type metadata accessor for AppInterfaceContext.Activity);
  sub_A9DEC(a3, a4);
  sub_B1AAC(a2, (uint64_t)sub_BC450, v13);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_B0E04(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v53 = a4;
  v56 = a3;
  v58 = a2;
  v5 = type metadata accessor for Logger(0);
  v57 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C81F0);
  __chkstk_darwin(v8);
  v55 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for AppInterfaceContext.Activity(0);
  v54 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v52 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v52 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5C238(a1, (uint64_t)v23, &qword_14AF568);
  if (swift_getEnumCaseMultiPayload(v23, v21) == 1)
  {
    v24 = *v23;
    if (qword_14AA930 != -1)
      swift_once(&qword_14AA930, sub_BA6D0);
    v25 = __swift_project_value_buffer(v5, (uint64_t)qword_157F610);
    v26 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v7, v25, v5);
    sub_5BDB8(v53, (uint64_t)v11, type metadata accessor for AppInterfaceContext.Activity);
    swift_errorRetain(v24);
    swift_errorRetain(v24);
    sub_D88B0();
    swift_bridgeObjectRelease(v27);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      v52 = (uint64_t *)swift_slowAlloc(8, -1);
      v53 = swift_slowAlloc(32, -1);
      v61 = v53;
      *(_DWORD *)v31 = 136446466;
      sub_5BDB8((uint64_t)v11, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity);
      v32 = String.init<A>(describing:)(v14, v59);
      v34 = v33;
      v60 = sub_23EAC8(v32, v33, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      swift_bridgeObjectRelease(v34);
      sub_5C0DC((uint64_t)v11, type metadata accessor for AppInterfaceContext.Activity);
      *(_WORD *)(v31 + 12) = 2114;
      swift_errorRetain(v24);
      v35 = _swift_stdlib_bridgeErrorToNSError(v24);
      v60 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      v36 = v52;
      *v52 = v35;
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      _os_log_impl(&dword_0, v29, v30, "Failed to perform Activity=%{public}s with error=%{public}@", (uint8_t *)v31, 0x16u);
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
      swift_arrayDestroy(v36, 1, v37);
      swift_slowDealloc(v36, -1, -1);
      v38 = v53;
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v31, -1, -1);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v7, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
      sub_5C0DC((uint64_t)v11, type metadata accessor for AppInterfaceContext.Activity);
      swift_errorRelease(v24);
      swift_errorRelease(v24);
    }

    v47 = v58;
    if (v58)
    {
      v48 = v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v55, 1, 1, v59);
      v47(v48);
      swift_errorRelease(v24);
      return sub_56024(v48, (uint64_t *)&unk_14C81F0);
    }
    else
    {
      return swift_errorRelease(v24);
    }
  }
  else
  {
    sub_5C04C((uint64_t)v23, (uint64_t)v20, type metadata accessor for AppInterfaceContext.Activity);
    if (qword_14AA930 != -1)
      swift_once(&qword_14AA930, sub_BA6D0);
    __swift_project_value_buffer(v5, (uint64_t)qword_157F610);
    v39 = sub_5BDB8((uint64_t)v20, (uint64_t)v17, type metadata accessor for AppInterfaceContext.Activity);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v61 = v43;
      *(_DWORD *)v42 = 136446210;
      sub_5BDB8((uint64_t)v17, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity);
      v44 = String.init<A>(describing:)(v14, v59);
      v46 = v45;
      v60 = sub_23EAC8(v44, v45, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      swift_bridgeObjectRelease(v46);
      sub_5C0DC((uint64_t)v17, type metadata accessor for AppInterfaceContext.Activity);
      _os_log_impl(&dword_0, v40, v41, "Successfully performed Activity=%{public}s", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);
    }
    else
    {
      sub_5C0DC((uint64_t)v17, type metadata accessor for AppInterfaceContext.Activity);
    }

    v50 = v58;
    if (v58)
    {
      v51 = v55;
      sub_5BDB8((uint64_t)v20, v55, type metadata accessor for AppInterfaceContext.Activity);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v59);
      v50(v51);
      sub_56024(v51, (uint64_t *)&unk_14C81F0);
    }
    return sub_5C0DC((uint64_t)v20, type metadata accessor for AppInterfaceContext.Activity);
  }
}

uint64_t sub_B1498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = *(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8);
  v3[13] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v3[14] = v5;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v6);
  v3[16] = swift_task_alloc(v6);
  v3[17] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v3[18] = v7;
  v3[19] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v3[20] = v9;
  v3[21] = v10;
  return swift_task_switch(sub_B1550, v9, v10);
}

uint64_t sub_B1550(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 176) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_B15B8, v4, v6);
}

uint64_t sub_B15B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(uint64_t);
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v19;
  __n128 v20;
  _QWORD *v22;

  v1 = v0[16];
  v22 = v0 + 2;
  v2 = v0[14];
  v3 = v0[15];
  v4 = v0[12];
  v5 = v0[13];
  v6 = v0[11];
  v0[7] = v0[17];
  v0[2] = v0;
  v0[3] = sub_B1770;
  v7 = swift_continuation_init(v0 + 2, 1);
  sub_5BDB8(v6, v1, type metadata accessor for AppInterfaceContext.Activity);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = v9 + v2;
  v11 = v8 | 7;
  v12 = swift_allocObject(&unk_1343E38, v9 + v2, v8 | 7);
  *(_QWORD *)(v12 + 16) = v7;
  sub_5C04C(v1, v12 + v9, type metadata accessor for AppInterfaceContext.Activity);
  sub_5BDB8(v6, v3, type metadata accessor for AppInterfaceContext.Activity);
  v13 = (v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_1343E60, v13 + 16, v11);
  *(_QWORD *)(v14 + 16) = v4;
  sub_5C04C(v3, v14 + v9, type metadata accessor for AppInterfaceContext.Activity);
  v15 = (uint64_t (**)(uint64_t))(v14 + v13);
  *v15 = sub_BE8D8;
  v15[1] = (uint64_t (*)(uint64_t))v12;
  swift_retain(v4);
  swift_retain(v12);
  v16 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
  v17 = swift_allocObject(&unk_1343E88, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_BCA64;
  *(_QWORD *)(v17 + 24) = v14;
  v18 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v16) + 16];
  v19 = v16;
  v20 = swift_retain(v14);
  v18(sub_C31F4, v17, v20);
  swift_release(v12);
  swift_release(v14);

  swift_release(v17);
  return swift_continuation_await(v22);
}

uint64_t sub_B1770(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = (*v1)[6];
  (*v1)[23] = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_B1858;
  }
  else
  {
    v7 = v2[22];
    sub_5C04C(v2[17], v2[10], type metadata accessor for AppInterfaceContext.Activity);
    swift_release(v7);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_B17FC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_B17FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B1858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 176));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B18C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C81F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  sub_5C238(a1, (uint64_t)v8, (uint64_t *)&unk_14C81F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_56024((uint64_t)v8, (uint64_t *)&unk_14C81F0);
    v16 = type metadata accessor for AppInterfaceContext.Error(0);
    v17 = sub_4DD24(&qword_14AF5D8, type metadata accessor for AppInterfaceContext.Error, (uint64_t)&unk_1060CD8);
    v18 = swift_allocError(v16, v17, 0, 0);
    sub_5BDB8(a3, v19, type metadata accessor for AppInterfaceContext.Activity);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v21 = swift_allocError(v20, &protocol self-conformance witness table for Error, 0, 0);
    *v22 = v18;
    return swift_continuation_throwingResumeWithError(a2, v21);
  }
  else
  {
    sub_5C04C((uint64_t)v8, (uint64_t)v15, type metadata accessor for AppInterfaceContext.Activity);
    sub_5BDB8((uint64_t)v15, (uint64_t)v12, type metadata accessor for AppInterfaceContext.Activity);
    sub_5C04C((uint64_t)v12, *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), type metadata accessor for AppInterfaceContext.Activity);
    swift_continuation_throwingResume(a2);
    return sub_5C0DC((uint64_t)v15, type metadata accessor for AppInterfaceContext.Activity);
  }
}

void sub_B1AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a3;
  v36 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
  __chkstk_darwin(v4);
  v31 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  v24 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v26 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for PlaylistPicker.Context(0);
  __chkstk_darwin(v23);
  v30 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaylistCreation.LegacyContext(0);
  __chkstk_darwin(v8);
  v22 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v32);
  v33 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v14 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  __chkstk_darwin(v14);
  v15 = type metadata accessor for AppInterfaceContext.Activity(0);
  v27 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v29 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v22 - v18;
  v34 = a1;
  sub_5BDB8(a1, (uint64_t)&v22 - v18, v20);
  v21 = (char *)&loc_B1DA0 + *((int *)qword_B27D0 + swift_getEnumCaseMultiPayload(v19, v15));
  __asm { BR              X10 }
}

uint64_t sub_B1DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_5C04C(v1, v0, type metadata accessor for AppInterfaceContext.Activity.Destination);
  sub_B5154(v0, *(_QWORD *)(v2 - 328), *(_QWORD *)(v2 - 344));
  return sub_5C0DC(v0, type metadata accessor for AppInterfaceContext.Activity.Destination);
}

void sub_B27E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, __n128))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  objc_super v34;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v14, &qword_14AF568);
  LODWORD(v12) = swift_getEnumCaseMultiPayload(v14, v12);
  sub_56024((uint64_t)v14, &qword_14AF568);
  if ((_DWORD)v12 == 1)
    goto LABEL_15;
  v16 = *(_QWORD *)(a2 + 32);
  if (v16 >> 62)
  {
    if (v16 >> 62 == 1)
    {
      v17 = *(void **)(*(_QWORD *)(v16 + OBJC_IVAR____TtC16MusicApplication19SplitViewController_contentViewController)
                     + OBJC_IVAR____TtCC16MusicApplication19SplitViewControllerP33_7A1626E95DCA8A4D36C577E39B8D78C121PaletteViewController_contentNavigationController);
      v18 = type metadata accessor for NavigationController();
      v19 = swift_dynamicCastClass(v17, v18);
      if (v19)
      {
        v20 = (id)v19;
        v33 = a5;
        v21 = v17;
LABEL_8:
        v22 = objc_msgSend(v20, "viewControllers");
        v23 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
        v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);
        v25 = v24;
        if ((unint64_t)v24 >> 62)
        {
          if (v24 >= 0)
            v24 &= 0xFFFFFFFFFFFFFF8uLL;
          _CocoaArrayWrapper.endIndex.getter(v24);
        }
        swift_bridgeObjectRelease(v25);

        v26 = (objc_class *)type metadata accessor for NavigationController();
        v34.receiver = v20;
        v34.super_class = v26;
        v27 = objc_msgSendSuper2(&v34, "popToRootViewControllerAnimated:", 1);
        if (v27)
        {
          v28 = v27;
          v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v23);

        }
        else
        {
          v29 = 0;
        }
        a5 = v33;

        v15 = swift_bridgeObjectRelease(v29);
      }
    }
  }
  else
  {
    v20 = sub_301F80((uint64_t)objc_msgSend((id)v16, "selectedIndex"));

    if (v20)
    {
      v33 = a5;
      goto LABEL_8;
    }
  }
  v30 = *(_QWORD *)(a2 + 16);
  if (v30)
  {
    v31 = swift_retain(*(_QWORD *)(a2 + 16));
    MusicPageProvider.performSearch(for:in:)(a3, a4, a5, v31);
    v15 = swift_release(v30);
  }
LABEL_15:
  if (a6)
    a6(a1, v15);
}

void sub_B2A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "presentingViewController");

    if (v5)
    {
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

void sub_B2ABC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *Strong;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;
  _BYTE v25[72];
  char v26[24];

  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v26, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "presentingViewController");

    if (v14)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
      sub_6087C(a4, (uint64_t)v25);
      v15 = *(unsigned __int8 *)(v9 + 80);
      v16 = (v15 + 16) & ~v15;
      v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
      v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
      v19 = swift_allocObject(&unk_1343D48, v18 + 72, v15 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19 + v16, v11, v8);
      *(_QWORD *)(v19 + v17) = a1;
      sub_648A4((uint64_t)v25, v19 + v18);
      aBlock[4] = sub_BDD88;
      v24 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_42D124;
      aBlock[3] = &block_descriptor_148;
      v20 = _Block_copy(aBlock);
      v21 = v24;
      v22 = a1;
      objc_msgSend(v14, "dismissViewControllerAnimated:completion:", 1, v20, swift_release(v21).n128_f64[0]);
      _Block_release(v20);

    }
  }
}

double sub_B2C80(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  _BYTE v25[72];

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_6087C(a3, (uint64_t)v25);
  type metadata accessor for MainActor(0);
  v14 = a2;
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1343D98, v20 + 72, v17 | 7);
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v21 + v18, v9, v6);
  *(_QWORD *)(v21 + v19) = v14;
  sub_648A4((uint64_t)v25, v21 + v20);
  v22 = sub_2223C8((uint64_t)v12, (uint64_t)&unk_14AF5D0, v21);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_B2E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v6[11] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v6[12] = v13;
  v6[13] = v14;
  return swift_task_switch(sub_B2EE4, v13, v14);
}

uint64_t sub_B2EE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[6];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[9] + 16))(v0[10], v0[3] + OBJC_IVAR____TtCO16MusicApplication14PlaylistPicker14ViewController_tracksToAdd, v0[8]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.checkForDuplicates(_:), v2);
  v4 = (_QWORD *)swift_task_alloc(dword_14BAF94);
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_B2F9C;
  return Playlist.addTracks(_:duplicatePolicy:duplicateCount:presentationSource:presentNotice:mpModel:)(v0[10], v0[7], 0, 1, v0[4], 1, 0);
}

uint64_t sub_B2F9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 72);
  v2 = *(_QWORD *)(*v0 + 80);
  v5 = *(_QWORD *)(*v0 + 56);
  v4 = *(_QWORD *)(*v0 + 64);
  v6 = *(_QWORD *)(*v0 + 40);
  v7 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_B302C, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_B302C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B3070(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double (**v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v36;
  __n128 v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];

  v40 = a2;
  v3 = type metadata accessor for AppInterfaceContext.Activity(0);
  v4 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v43 = v4;
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v41 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B70C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&a1[OBJC_IVAR____TtCO16MusicApplication14PlaylistPicker14ViewController_folder];
  swift_beginAccess(&a1[OBJC_IVAR____TtCO16MusicApplication14PlaylistPicker14ViewController_folder], v44, 0, 0);
  sub_5C238(v18, (uint64_t)v14, (uint64_t *)&unk_14AE650);
  v19 = &a1[OBJC_IVAR____TtCO16MusicApplication14PlaylistPicker14ViewController_tracksToAdd];
  v39 = a1;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v11, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
  v22 = swift_allocObject(&unk_1343C80, 32, 7);
  *(_QWORD *)(v22 + 16) = a1;
  v23 = v40;
  *(_QWORD *)(v22 + 24) = v40;
  sub_5C090((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_14AE650);
  v24 = &v17[v15[5]];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  sub_5C090((uint64_t)v11, (uint64_t)&v17[v15[6]], (uint64_t *)&unk_14B70C0);
  v25 = (double (**)(uint64_t))&v17[v15[7]];
  *v25 = sub_BDA4C;
  v25[1] = (double (*)(uint64_t))v22;
  sub_5BDB8((uint64_t)v17, (uint64_t)v8, type metadata accessor for PlaylistCreation.Context);
  swift_storeEnumTagMultiPayload(v8, v42, 3);
  v26 = v41;
  sub_5BDB8((uint64_t)v8, v41, type metadata accessor for AppInterfaceContext.Activity);
  v27 = *(unsigned __int8 *)(v43 + 80);
  v28 = (v27 + 24) & ~v27;
  v29 = (v5 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1343CA8, v29 + 16, v27 | 7);
  *(_QWORD *)(v30 + 16) = v23;
  sub_5C04C(v26, v30 + v28, type metadata accessor for AppInterfaceContext.Activity);
  v31 = (_QWORD *)(v30 + v29);
  *v31 = 0;
  v31[1] = 0;
  swift_retain_n(v23, 2);
  v32 = v39;
  v33 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
  v34 = swift_allocObject(&unk_1343CD0, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_BCA64;
  *(_QWORD *)(v34 + 24) = v30;
  v35 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v33) + 16];
  v36 = v33;
  v37 = swift_retain(v30);
  v35(sub_C31F4, v34, v37);
  swift_release(v34);

  swift_release(v30);
  sub_5C0DC((uint64_t)v8, type metadata accessor for AppInterfaceContext.Activity);
  return sub_5C0DC((uint64_t)v17, type metadata accessor for PlaylistCreation.Context);
}

double sub_B33EC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  double result;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v5);
  v43 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v40 = (char *)&v36 - v11;
  v12 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v36 - v16;
  sub_5BDB8(a1, (uint64_t)&v36 - v16, type metadata accessor for PlaylistCreation.FlowResult);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v12);
  sub_5C0DC((uint64_t)v17, type metadata accessor for PlaylistCreation.FlowResult);
  if (EnumCaseMultiPayload != 2)
  {
    v20 = objc_msgSend(a2, "presentingViewController");
    v21 = a2;
    if (v20)
    {
      v22 = v20;
      objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 1, 0);

    }
    sub_5BDB8(a1, (uint64_t)v14, type metadata accessor for PlaylistCreation.FlowResult);
    if (swift_getEnumCaseMultiPayload(v14, v12))
    {
      sub_5C0DC((uint64_t)v14, type metadata accessor for PlaylistCreation.FlowResult);
    }
    else
    {
      v23 = *(void **)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7B0) + 48)];
      v37 = v23;
      v39 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v24 = v40;
      v39(v40, v14, v7);
      v25 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v43, 1, 1, v25);
      v26 = v41;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v24, v7);
      type metadata accessor for MainActor(0);
      v38 = v23;
      v27 = v21;
      v28 = v42;
      v29 = swift_retain(v42);
      v30 = static MainActor.shared.getter(v29);
      v31 = *(unsigned __int8 *)(v8 + 80);
      v32 = (v31 + 48) & ~v31;
      v33 = (v9 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      v34 = (char *)swift_allocObject(&unk_1343CF8, v33 + 8, v31 | 7);
      *((_QWORD *)v34 + 2) = v30;
      *((_QWORD *)v34 + 3) = &protocol witness table for MainActor;
      *((_QWORD *)v34 + 4) = v37;
      *((_QWORD *)v34 + 5) = v27;
      v39(&v34[v32], v26, v7);
      *(_QWORD *)&v34[v33] = v28;
      v35 = sub_2223C8(v43, (uint64_t)&unk_14AF5B8, (uint64_t)v34);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v7);
      *(_QWORD *)&result = swift_release(v35).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_B3708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  v7[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[9] = v9;
  v7[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  v7[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v7[12] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[13] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v7[14] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[15] = swift_task_alloc(v14);
  v7[16] = swift_task_alloc(v14);
  v15 = type metadata accessor for Notice.Variant(0);
  v7[17] = v15;
  v7[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice(0);
  v7[19] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[20] = swift_task_alloc(v17);
  v7[21] = swift_task_alloc(v17);
  v18 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD650) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[22] = swift_task_alloc(v18);
  v7[23] = swift_task_alloc(v18);
  v7[24] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v7[25] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  return swift_task_switch(sub_B389C, v21, v22);
}

uint64_t sub_B389C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  char *v77;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v5(v1, 1, 1, v3);
  if (v2)
  {
    v6 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(id *)(v0 + 32);
    v9 = objc_msgSend(objc_allocWithZone((Class)MPArtworkCatalog), "initWithToken:dataSource:", v8, *PlaylistCovers.ArtworkDataSource.shared.unsafeMutableAddressor());
    Artwork.init(_:)(v9);

    sub_56024(v7, (uint64_t *)&unk_14AD650);
    v5(v6, 0, 1, v3);
    sub_5C090(v6, v7, (uint64_t *)&unk_14AD650);
  }
  v10 = objc_msgSend(*(id *)(v0 + 40), "presentingViewController");
  if (v10 && (v11 = v10, v12 = UIViewController.noticePresenter.getter(), v11, v12))
  {
    v74 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5;
    v77 = v12;
    v13 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 176);
    v15 = *(uint64_t **)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5C0);
    v70 = (char *)v15 + *(int *)(v20 + 48);
    v72 = v20;
    *v15 = _s8MusicKit8PlaylistV0A11ApplicationE10storyTitleSSSgvg_0();
    v15[1] = v21;
    sub_5C238(v13, v14, (uint64_t *)&unk_14AD650);
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v22(v16, v19, v17);
    v76 = v22;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v14, 1, v3) == 1)
    {
      v23 = *(_QWORD *)(v0 + 128);
      v24 = *(_QWORD *)(v0 + 96);
      v25 = *(_QWORD *)(v0 + 104);
      v26 = *(_QWORD *)(v0 + 88);
      Playlist.artworkViewModel.getter(v26);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      v27 = type metadata accessor for ArtworkImage.ViewModel(0);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27);
      v29 = *(_QWORD *)(v0 + 88);
      if (v28 == 1)
      {
        sub_56024(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_14B0FA0);
        v30 = 1;
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 16))(v70, *(_QWORD *)(v0 + 88), v3);
        sub_5C0DC(v29, type metadata accessor for ArtworkImage.ViewModel);
        v30 = 0;
      }
      v33 = *(_QWORD *)(v0 + 176);
      v74(v70, v30, 1, v3);
      sub_56024(v33, (uint64_t *)&unk_14AD650);
    }
    else
    {
      v32 = *(_QWORD *)(v0 + 176);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 96));
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v70, v32, v3);
      v74(v70, 0, 1, v3);
    }
    v34 = v72;
    v73 = *(_QWORD *)(v0 + 192);
    v75 = *(_QWORD *)(v0 + 200);
    v35 = *(_QWORD *)(v0 + 168);
    v36 = *(_QWORD *)(v0 + 144);
    v62 = *(_QWORD *)(v0 + 136);
    v63 = *(_QWORD *)(v0 + 160);
    v68 = *(_QWORD *)(v0 + 112);
    v66 = *(_QWORD *)(v0 + 120);
    v67 = *(_QWORD *)(v0 + 104);
    v38 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 80);
    v39 = *(_QWORD *)(v0 + 64);
    v69 = *(_QWORD *)(v0 + 56);
    v71 = *(_QWORD *)(v0 + 152);
    v64 = *(_QWORD *)(v0 + 48);
    v65 = *(_QWORD *)(v0 + 96);
    v40 = *(int *)(v34 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v37, *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtCO16MusicApplication14PlaylistPicker14ViewController_tracksToAdd, v39);
    v41 = sub_BDBB0();
    dispatch thunk of Collection.startIndex.getter(v39);
    dispatch thunk of Collection.endIndex.getter(v39, v41);
    v42 = dispatch thunk of Collection.distance(from:to:)(v0 + 16, v0 + 24, v39, v41);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    *(_QWORD *)(v36 + v40) = v42;
    swift_storeEnumTagMultiPayload(v36, v62, 0);
    static Notice.variant(_:)(v36);
    sub_5C0DC(v36, type metadata accessor for Notice.Variant);
    v76(v66, v64, v65);
    v43 = *(unsigned __int8 *)(v67 + 80);
    v44 = (v43 + 16) & ~v43;
    v45 = (v68 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = swift_allocObject(&unk_1343D20, v46 + 8, v43 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v47 + v44, v66, v65);
    v48 = (_QWORD *)(v47 + v45);
    *v48 = 0;
    v48[1] = 0;
    *(_QWORD *)(v47 + v46) = v69;
    sub_5BDB8(v63, v35, type metadata accessor for Notice);
    v49 = (uint64_t *)(v35 + *(int *)(v71 + 32));
    v50 = *v49;
    v51 = v49[1];
    swift_retain(v69);
    sub_5C198(v50, v51);
    *v49 = (uint64_t)sub_BDC8C;
    v49[1] = v47;
    sub_5C0DC(v63, type metadata accessor for Notice);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v77 + 192))(v35, 0);
    sub_5C0DC(v35, type metadata accessor for Notice);
    sub_56024(v73, (uint64_t *)&unk_14AD650);
    v31 = v75;
    swift_release(v77);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 200);
    sub_56024(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_14AD650);
  }
  swift_release(v31);
  v52 = *(_QWORD *)(v0 + 184);
  v54 = *(_QWORD *)(v0 + 168);
  v53 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 160);
  v56 = *(_QWORD *)(v0 + 144);
  v58 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 128);
  v60 = *(_QWORD *)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_B3DEC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v9 - v7;
  if (a1)
  {
    sub_5BDB8(a3, (uint64_t)&v9 - v7, type metadata accessor for AppInterfaceContext.Activity);
    swift_storeEnumTagMultiPayload(v8, v5, 0);
    a1(v8);
    sub_56024((uint64_t)v8, &qword_14AF568);
  }
}

double sub_B3EA0(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  double result;
  uint64_t v40;
  uint64_t *v41;
  int v42;
  _QWORD *v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = a6;
  v50 = a2;
  v51 = a4;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14AA930 != -1)
    swift_once(&qword_14AA930, sub_BA6D0);
  v13 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v13, (uint64_t)qword_157F610);
  v14 = a1;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc(22, -1);
    v44 = v15;
    v19 = v18;
    v20 = (_QWORD *)swift_slowAlloc(8, -1);
    v43 = v20;
    v45 = swift_slowAlloc(32, -1);
    v52 = (uint64_t)v14;
    v53 = v45;
    *(_DWORD *)v19 = 138543618;
    v48 = a3;
    v47 = a5;
    v41 = &v53;
    v21 = v14;
    v42 = v17;
    v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    *v20 = v14;

    *(_WORD *)(v19 + 12) = 2082;
    v23 = sub_B41E4();
    v25 = v24;
    v26 = Optional<A>.description.getter(v23, v24);
    v46 = v10;
    v28 = v27;
    v29 = v25;
    a5 = v47;
    swift_bridgeObjectRelease(v29);
    v52 = sub_23EAC8(v26, v28, &v53);
    LOBYTE(a3) = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v41);
    v10 = v46;
    swift_bridgeObjectRelease(v28);

    v30 = v44;
    _os_log_impl(&dword_0, v44, (os_log_type_t)v42, "Presenting viewController=%{public}@\nidentified by %{public}s", (uint8_t *)v19, 0x16u);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
    v32 = v43;
    swift_arrayDestroy(v43, 1, v31);
    swift_slowDealloc(v32, -1, -1);
    v33 = v45;
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

  }
  sub_5BDB8(v49, (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AppInterfaceContext.Activity);
  v34 = *(unsigned __int8 *)(v10 + 80);
  v35 = (v34 + 40) & ~v34;
  v36 = (_QWORD *)swift_allocObject(&unk_1343DC0, v35 + v11, v34 | 7);
  v37 = v51;
  v36[2] = v14;
  v36[3] = v37;
  v36[4] = a5;
  sub_5C04C((uint64_t)v12, (uint64_t)v36 + v35, type metadata accessor for AppInterfaceContext.Activity);
  v38 = v14;
  sub_A9DEC(v37, a5);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v38, 1, (char *)&dword_C + 3, (void **)(a3 & 1), sub_BE250, (uint64_t)v36);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

uint64_t sub_B41E4()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_14AA928 != -1)
    swift_once(&qword_14AA928, sub_BA6AC);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_14AF2A8);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_5C090((uint64_t)v5, (uint64_t)v6, (uint64_t *)&unk_14AD640);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_56024((uint64_t)v6, (uint64_t *)&unk_14AD640);
    return 0;
  }
}

void sub_B42D4(void *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  id v43;
  uint64_t v44;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14AA930 != -1)
    swift_once(&qword_14AA930, sub_BA6D0);
  v10 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v10, (uint64_t)qword_157F610);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = v13;
  if (!os_log_type_enabled(v12, v13))
  {

    if (!a2)
      return;
    goto LABEL_7;
  }
  v15 = swift_slowAlloc(32, -1);
  v41 = a4;
  v16 = v15;
  v17 = (_QWORD *)swift_slowAlloc(8, -1);
  v36 = v17;
  v40 = swift_slowAlloc(64, -1);
  v43 = v11;
  v44 = v40;
  *(_DWORD *)v16 = 138543874;
  v42 = a2;
  v39 = v7;
  v18 = v11;
  v38 = v12;
  v19 = v18;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
  *v17 = v11;

  *(_WORD *)(v16 + 12) = 2082;
  v20 = sub_B41E4();
  v22 = v21;
  v23 = Optional<A>.description.getter(v20, v21);
  v37 = v14;
  v25 = v24;
  swift_bridgeObjectRelease(v22);
  v43 = (id)sub_23EAC8(v23, v25, &v44);
  v7 = v39;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
  swift_bridgeObjectRelease(v25);

  *(_WORD *)(v16 + 22) = 2082;
  v43 = objc_msgSend(v19, "presentingViewController");
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F68B0);
  v27 = String.init<A>(describing:)(&v43, v26);
  v29 = v28;
  v43 = (id)sub_23EAC8(v27, v28, &v44);
  a2 = v42;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
  swift_bridgeObjectRelease(v29);

  v30 = v38;
  _os_log_impl(&dword_0, v38, (os_log_type_t)v37, "Presented viewController=%{public}@\nidentified by %{public}s\npresented by %{public}s", (uint8_t *)v16, 0x20u);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
  v32 = v36;
  swift_arrayDestroy(v36, 1, v31);
  swift_slowDealloc(v32, -1, -1);
  v33 = v40;
  swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v33, -1, -1);
  v34 = v16;
  a4 = v41;
  swift_slowDealloc(v34, -1, -1);

  if (a2)
  {
LABEL_7:
    sub_5BDB8(a4, (uint64_t)v9, type metadata accessor for AppInterfaceContext.Activity);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    a2(v9);
    sub_56024((uint64_t)v9, &qword_14AF568);
  }
}

void sub_B465C(uint64_t *a1, void *a2, NSObject *a3, uint64_t a4, _BYTE *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t ObjectType;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v28;
  const void *v29;
  NSString v30;
  uint64_t v31;
  void *v32;
  NSObject *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  id v48;
  NSObject *v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  NSObject *v58;
  os_log_t v59;
  uint64_t v60;
  _BYTE *v61;
  os_log_t v62;
  uint64_t v63;
  NSObject *v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  uint64_t v69;
  NSObject **v70;
  NSObject *v71;
  NSObject *v72;
  NSObject *v73;
  NSObject *v74;
  NSObject **v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  NSObject *v89;
  double v90;
  NSObject *v91;
  char *v92;
  os_log_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  NSObject *v98;
  id v99;
  NSObject *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t aBlock;
  _QWORD v109[4];
  uint64_t v110;
  _BYTE *v111;
  unint64_t v112;
  os_log_t v113;

  v106 = a7;
  v107 = a5;
  LODWORD(v105) = a6;
  v113 = a3;
  v14 = type metadata accessor for AppInterfaceContext.Activity(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (void *)a1[3];
  if ((unint64_t)v17 < 2)
    return;
  v102 = a8;
  v104 = v9;
  v19 = *a1;
  v18 = (void *)a1[1];
  v20 = a1[2];
  v111 = 0;
  v112 = 0xE000000000000000;
  if (v18)
  {
    v21 = v18;
  }
  else
  {
    ObjectType = swift_getObjectType();
    v19 = _typeName(_:qualified:)(ObjectType, 0);
    v21 = v23;
  }
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = v19;
  v24._object = v21;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v21);
  v103 = v112;
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  swift_bridgeObjectRetain();
  v26._countAndFlagsBits = v20;
  v26._object = v17;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v112);
  v27 = v112;
  v28 = qword_14AA928;
  swift_bridgeObjectRetain();
  if (v28 != -1)
    swift_once(&qword_14AA928, sub_BA6AC);
  v29 = (const void *)qword_14AF2A8;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v112);
  objc_setAssociatedObject(a2, v29, v30, (char *)&dword_0 + 3);

  PresentationSource.windowScene.getter();
  if (!v31)
  {
    swift_bridgeObjectRelease(v112);
LABEL_30:
    swift_bridgeObjectRelease(v103);
    return;
  }
  v32 = (void *)v31;
  v33 = static PresentationSource.topmostPresentedViewController(in:options:)(v31, 0);
  if (!v33)
  {
    swift_bridgeObjectRelease(v112);
LABEL_16:

    goto LABEL_30;
  }
  v101 = v15;
  v34 = v33;
  v35 = sub_B41E4();
  if (!v36)
  {
    swift_bridgeObjectRelease(v112);

    goto LABEL_16;
  }
  v37 = v36;
  v100 = v34;
  v99 = v32;
  v38 = (uint64_t)v111;
  if ((_BYTE *)v35 == v111 && v36 == v112)
  {
    swift_bridgeObjectRelease(v36);
    v39 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  }
  else
  {
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v111, v112, 0);
    swift_bridgeObjectRelease(v37);
    v39 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRelease(v112);
      v62 = v100;
LABEL_29:

      goto LABEL_30;
    }
  }
  v41 = v101;
  if (!*(_QWORD *)(a4 + 16)
    || (Hasher.init(_seed:)(&v111),
        Hasher._combine(_:)(1uLL),
        v42 = Hasher._finalize()(),
        v43 = -1 << *(_BYTE *)(a4 + 32),
        v44 = v42 & ~v43,
        ((*(_QWORD *)(a4 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0))
  {
LABEL_23:
    *v107 = 0;
    if (qword_14AA930 != -1)
      swift_once(&qword_14AA930, sub_BA6D0);
    v46 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v46, (uint64_t)qword_157F610);
    v47 = v100;
    v48 = a2;
    swift_bridgeObjectRetain();
    v49 = v47;
    v50 = v48;
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.default.getter(v51);
    v53 = v52;
    v113 = v51;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc(32, -1);
      v55 = swift_slowAlloc(16, -1);
      v105 = v38;
      v56 = (_QWORD *)v55;
      v107 = (_BYTE *)swift_slowAlloc(32, -1);
      aBlock = v50;
      v111 = v107;
      *(_DWORD *)v54 = 138543874;
      LODWORD(v106) = v53;
      v57 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v109);
      *v56 = v50;

      *(_WORD *)(v54 + 12) = 2082;
      swift_bridgeObjectRetain();
      aBlock = (id)sub_23EAC8(v105, v27, (uint64_t *)&v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v109);
      swift_bridgeObjectRelease_n(v27, 3);
      *(_WORD *)(v54 + 22) = 2114;
      aBlock = v49;
      v58 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v109);
      v56[1] = v100;

      v59 = v113;
      _os_log_impl(&dword_0, v113, (os_log_type_t)v106, "Attempted to present a viewController=%{public}@\nidentified by %{public}s,\nbut a similar viewController is already presented %{public}@", (uint8_t *)v54, 0x20u);
      v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
      swift_arrayDestroy(v56, 2, v60);
      swift_slowDealloc(v56, -1, -1);
      v61 = v107;
      swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      swift_bridgeObjectRelease(v103);
      return;
    }

    swift_bridgeObjectRelease_n(v27, 2);
    v62 = v113;
    goto LABEL_29;
  }
  v45 = ~v43;
  while (*(_QWORD *)(*(_QWORD *)(a4 + 48) + 32 * v44 + 24))
  {
    v44 = (v44 + 1) & v45;
    if (((*(_QWORD *)(a4 + 56 + ((v44 >> 3) & 0xFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
      goto LABEL_23;
  }
  v96 = a9;
  if (qword_14AA930 != -1)
    swift_once(&qword_14AA930, sub_BA6D0);
  v63 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v63, (uint64_t)qword_157F610);
  v64 = v100;
  v65 = a2;
  swift_bridgeObjectRetain();
  v98 = v64;
  v97 = v65;
  v66 = Logger.logObject.getter(v97);
  v67 = static os_log_type_t.default.getter(v66);
  v68 = v67;
  if (os_log_type_enabled(v66, v67))
  {
    v69 = swift_slowAlloc(32, -1);
    v70 = (NSObject **)swift_slowAlloc(16, -1);
    v95 = swift_slowAlloc(32, -1);
    v111 = (_BYTE *)v95;
    *(_DWORD *)v69 = 138543874;
    v94 = v68;
    aBlock = v98;
    v92 = v39;
    v71 = v98;
    v93 = v66;
    v72 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v109);
    *v70 = v100;

    *(_WORD *)(v69 + 12) = 2082;
    swift_bridgeObjectRetain();
    aBlock = (id)sub_23EAC8(v38, v27, (uint64_t *)&v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v109);
    swift_bridgeObjectRelease_n(v27, 3);
    *(_WORD *)(v69 + 22) = 2114;
    v73 = v97;
    aBlock = v97;
    v74 = v97;
    v39 = v92;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((uint64_t *)&aBlock, v109);
    v75 = v70;
    v41 = v101;
    v75[1] = v73;

    v66 = v93;
    _os_log_impl(&dword_0, v93, (os_log_type_t)v94, "Dismissing viewController=%{public}@\nidentified by %{public}s,\nin favor of %{public}@", (uint8_t *)v69, 0x20u);
    v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
    swift_arrayDestroy(v75, 2, v76);
    swift_slowDealloc(v75, -1, -1);
    v77 = v95;
    swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v69, -1, -1);
  }
  else
  {
    v78 = v98;

    swift_bridgeObjectRelease_n(v27, 2);
    v79 = v97;

  }
  *v107 = 0;
  sub_6087C((uint64_t)v113, (uint64_t)&v111);
  sub_5BDB8(v96, (uint64_t)v39, type metadata accessor for AppInterfaceContext.Activity);
  v80 = *(unsigned __int8 *)(v41 + 80);
  v81 = (v80 + 120) & ~v80;
  v82 = swift_allocObject(&unk_1343DE8, v81 + v16, v80 | 7);
  v83 = v97;
  *(_QWORD *)(v82 + 16) = v97;
  sub_648A4((uint64_t)&v111, v82 + 24);
  v84 = v105 & 1;
  *(_BYTE *)(v82 + 96) = v105 & 1;
  v85 = v106;
  v86 = v102;
  *(_QWORD *)(v82 + 104) = v106;
  *(_QWORD *)(v82 + 112) = v86;
  sub_5C04C((uint64_t)v39, v82 + v81, type metadata accessor for AppInterfaceContext.Activity);
  v109[3] = sub_BE5B8;
  v110 = v82;
  aBlock = _NSConcreteStackBlock;
  v109[0] = 1107296256;
  v109[1] = sub_42D124;
  v109[2] = &block_descriptor_162;
  v87 = _Block_copy(&aBlock);
  v88 = v110;
  v89 = v83;
  sub_A9DEC(v85, v86);
  *(_QWORD *)&v90 = swift_release(v88).n128_u64[0];
  v91 = v98;
  -[NSObject dismissViewControllerAnimated:completion:](v98, "dismissViewControllerAnimated:completion:", v84, v87, v90);

  _Block_release(v87);
  swift_bridgeObjectRelease(v103);
}

void sub_B5000(void **a1, void (*a2)(char *), uint64_t a3)
{
  char *v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _BYTE v15[24];
  char v16[24];

  v5 = (char *)*a1;
  v6 = (char *)*a1 + OBJC_IVAR____TtC11MusicJSCore13JSApplication_isPrivacyDisclaimerPresented;
  swift_beginAccess(v6, v16, 0, 0);
  if (*v6 == 1)
  {
    v7 = swift_allocObject(&unk_1343708, 32, 7);
    *(_QWORD *)(v7 + 16) = a2;
    *(_QWORD *)(v7 + 24) = a3;
    v8 = &v5[OBJC_IVAR____TtC11MusicJSCore13JSApplication_pendingPrivacyDisclaimerDismissalCompletionHandlers];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicJSCore13JSApplication_pendingPrivacyDisclaimerDismissalCompletionHandlers], v15, 33, 0);
    v9 = *(_QWORD **)v8;
    v10 = v5;
    swift_retain(a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *(_QWORD *)v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_11FE8C(0, v9[2] + 1, 1, v9);
      *(_QWORD *)v8 = v9;
    }
    v13 = v9[2];
    v12 = v9[3];
    if (v13 >= v12 >> 1)
    {
      v9 = sub_11FE8C((_QWORD *)(v12 > 1), v13 + 1, 1, v9);
      *(_QWORD *)v8 = v9;
    }
    v9[2] = v13 + 1;
    v14 = &v9[2 * v13];
    v14[4] = sub_62604;
    v14[5] = v7;
    swift_endAccess(v15);
  }
  else
  {
    a2(v5);
  }

}

void sub_B5154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  _QWORD v65[5];
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;

  v99 = a2;
  v100 = a3;
  v102 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v4);
  v86 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Artist(0);
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  __chkstk_darwin(v6);
  v88 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v7;
  __chkstk_darwin(v8);
  v91 = (char *)v65 - v9;
  v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F90);
  __chkstk_darwin(v72);
  v74 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for SidebarMenu.Item(0);
  v71 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v65[1] = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v81 = (char *)v65 - v13;
  v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F40);
  __chkstk_darwin(v66);
  v65[3] = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v78 = (char *)v65 - v16;
  __chkstk_darwin(v17);
  v73 = (char *)v65 - v18;
  __chkstk_darwin(v19);
  v85 = (char *)v65 - v20;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v89);
  v90 = (char *)v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v95 = *(_QWORD *)(v22 - 8);
  v23 = *(_QWORD *)(v95 + 64);
  __chkstk_darwin(v22);
  v79 = (char *)v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v87 = (char *)v65 - v25;
  __chkstk_darwin(v26);
  v84 = (char *)v65 - v27;
  __chkstk_darwin(v28);
  v70 = (char *)v65 - v29;
  __chkstk_darwin(v30);
  v77 = (char *)v65 - v31;
  __chkstk_darwin(v32);
  v67 = (char *)v65 - v33;
  __chkstk_darwin(v34);
  __chkstk_darwin(v35);
  __chkstk_darwin(v36);
  v68 = (char *)v65 - v37;
  __chkstk_darwin(v38);
  v65[2] = (char *)v65 - v39;
  __chkstk_darwin(v40);
  v76 = (char *)v65 - v41;
  __chkstk_darwin(v42);
  v65[4] = (char *)v65 - v43;
  __chkstk_darwin(v44);
  __chkstk_darwin(v45);
  v83 = (char *)v65 - v46;
  __chkstk_darwin(v47);
  v69 = (char *)v65 - v48;
  __chkstk_darwin(v49);
  v82 = (char *)v65 - v50;
  __chkstk_darwin(v51);
  __chkstk_darwin(v52);
  __chkstk_darwin(v53);
  v96 = (char *)v65 - v54;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF578);
  v56 = __chkstk_darwin(v55);
  v58 = (char *)v65 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = *(_QWORD *)(v3 + 32);
  if (v59 >> 62)
    v60 = (void *)(v59 & 0x3FFFFFFFFFFFFFFFLL);
  else
    v60 = *(void **)(v3 + 32);
  v61 = objc_msgSend(v60, "traitCollection", v56);
  v97 = v3;
  v98 = v61;
  v62 = *(_QWORD *)(v3 + 32);
  v63 = *(int *)(v55 + 48);
  sub_5BDB8(v102, (uint64_t)v58, type metadata accessor for AppInterfaceContext.Activity.Destination);
  *(_QWORD *)&v58[v63] = v62;
  v94 = v22;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v58, v22);
  v101 = v58;
  __asm { BR              X10 }
}

void sub_B5738()
{
  unint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  unint64_t v27;
  void *v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  void *object;
  Swift::String v37;
  uint64_t v38;
  id v39;
  Swift::String v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  void *v49;
  id v50;
  id v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_5BDB8(*(_QWORD *)(v5 - 176), (uint64_t)v1, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v6 = *v1;
  if (!(v0 >> 62))
  {
    v19 = v2;
    v20 = (id)(v0 & 0x3FFFFFFFFFFFFFFFLL);
    v21 = (id)v0;
    sub_2FD674(v6);
    sub_5BDB8(*(_QWORD *)(v5 - 168), v3, type metadata accessor for AppInterfaceContext.Activity.Destination);
    sub_5BDB8(v3, *(_QWORD *)(v5 - 328), type metadata accessor for AppInterfaceContext.Activity.Destination);
    v22 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 224) + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject(&unk_1343AA0, v23 + v4, v22 | 7);
    v26 = *(void (**)(uint64_t))(v5 - 192);
    v25 = *(_QWORD *)(v5 - 184);
    *(_QWORD *)(v24 + 16) = v26;
    *(_QWORD *)(v24 + 24) = v25;
    sub_5C04C(v3, v24 + v23, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v27 = *(_QWORD *)(*(_QWORD *)(v5 - 208) + 32);
    if (v27 >> 62 == 2 || v27 >> 62 == 1)
    {
      v28 = (void *)(v27 & 0x3FFFFFFFFFFFFFFFLL);
      v27 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v28 = (void *)(v27 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v59 = (void *)objc_opt_self(ICPrivacyInfo);
    sub_A9DEC((uint64_t)v26, v25);
    sub_A9DEC((uint64_t)v26, v25);
    v60 = v28;
    v61 = objc_msgSend(v59, "sharedPrivacyInfo");
    v62 = objc_msgSend(v61, "privacyAcknowledgementRequiredForMusic");

    if ((v62 & 1) != 0)
    {
      if (v26)
      {
        v63 = *(_QWORD *)(v5 - 328);
        v64 = *(_QWORD *)(v5 - 264);
        sub_5BDB8(v63, v64, type metadata accessor for AppInterfaceContext.Activity.Destination);
        v65 = type metadata accessor for AppInterfaceContext.Activity(0);
        swift_storeEnumTagMultiPayload(v64, v65, 0);
        swift_storeEnumTagMultiPayload(v64, *(_QWORD *)(v5 - 272), 0);
        v26(v64);
        sub_56024(v64, &qword_14AF568);

        swift_release(v24);
        sub_5C198((uint64_t)v26, v25);
      }
      else
      {

        swift_release(v24);
        v63 = *(_QWORD *)(v5 - 328);
      }
      v68 = v63;
    }
    else
    {
      *(_QWORD *)(v5 - 104) = sub_BD35C;
      *(_QWORD *)(v5 - 96) = v24;
      *(_QWORD *)(v5 - 136) = _NSConcreteStackBlock;
      *(_QWORD *)(v5 - 128) = 1107296256;
      *(_QWORD *)(v5 - 120) = sub_42D124;
      *(_QWORD *)(v5 - 112) = &block_descriptor_92;
      v66 = _Block_copy((const void *)(v5 - 136));
      v67 = *(_QWORD *)(v5 - 96);
      swift_retain(v24);
      objc_msgSend((id)v27, "dismissViewControllerAnimated:completion:", 1, v66, swift_release(v67).n128_f64[0]);
      _Block_release(v66);

      swift_release(v24);
      sub_5C198((uint64_t)v26, v25);
      v68 = *(_QWORD *)(v5 - 328);
    }
    sub_5C0DC(v68, type metadata accessor for AppInterfaceContext.Activity.Destination);

    v70 = *(_QWORD *)(v5 - 176);
    v71 = v70;
LABEL_31:
    sub_5C0DC(v71, type metadata accessor for AppInterfaceContext.Activity.Destination);
    goto LABEL_32;
  }
  if (v0 >> 62 == 1)
  {
    v7 = (id)(v0 & 0x3FFFFFFFFFFFFFFFLL);
    if (objc_msgSend(v7, "displayMode") == (char *)&dword_0 + 3)
      objc_msgSend(v7, "hideColumn:", 0);
    v8 = *(_QWORD *)(v5 - 304);
    sub_8C728C(v6);
    sub_45710C(v8, 0);
    sub_56024(v8, (uint64_t *)&unk_14C7F40);
    v9 = *(_QWORD *)(v5 - 432);
    sub_5BDB8(*(_QWORD *)(v5 - 168), v9, type metadata accessor for AppInterfaceContext.Activity.Destination);
    sub_5BDB8(v9, *(_QWORD *)(v5 - 320), type metadata accessor for AppInterfaceContext.Activity.Destination);
    v10 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 224) + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = swift_allocObject(&unk_1343A50, v11 + v4, v10 | 7);
    v14 = *(void (**)(uint64_t))(v5 - 192);
    v13 = *(_QWORD *)(v5 - 184);
    *(_QWORD *)(v12 + 16) = v14;
    *(_QWORD *)(v12 + 24) = v13;
    sub_5C04C(v9, v12 + v11, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v15 = *(_QWORD *)(*(_QWORD *)(v5 - 208) + 32);
    if (v15 >> 62 == 2 || v15 >> 62 == 1)
    {
      v16 = v2;
      v17 = (void *)(v15 & 0x3FFFFFFFFFFFFFFFLL);
      v15 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      v16 = v2;
      v17 = (void *)(v15 & 0x3FFFFFFFFFFFFFFFLL);
    }
    v49 = (void *)objc_opt_self(ICPrivacyInfo);
    sub_A9DEC((uint64_t)v14, v13);
    sub_A9DEC((uint64_t)v14, v13);
    v50 = v17;
    v51 = objc_msgSend(v49, "sharedPrivacyInfo");
    v52 = objc_msgSend(v51, "privacyAcknowledgementRequiredForMusic");

    if ((v52 & 1) != 0)
    {
      if (v14)
      {
        v53 = *(_QWORD *)(v5 - 320);
        v54 = *(_QWORD *)(v5 - 264);
        sub_5BDB8(v53, v54, type metadata accessor for AppInterfaceContext.Activity.Destination);
        v55 = type metadata accessor for AppInterfaceContext.Activity(0);
        swift_storeEnumTagMultiPayload(v54, v55, 0);
        swift_storeEnumTagMultiPayload(v54, *(_QWORD *)(v5 - 272), 0);
        v14(v54);
        sub_56024(v54, &qword_14AF568);

        swift_release(v12);
        sub_5C198((uint64_t)v14, v13);
      }
      else
      {

        swift_release(v12);
        v53 = *(_QWORD *)(v5 - 320);
      }
      v58 = v53;
    }
    else
    {
      *(_QWORD *)(v5 - 104) = sub_BD35C;
      *(_QWORD *)(v5 - 96) = v12;
      *(_QWORD *)(v5 - 136) = _NSConcreteStackBlock;
      *(_QWORD *)(v5 - 128) = 1107296256;
      *(_QWORD *)(v5 - 120) = sub_42D124;
      *(_QWORD *)(v5 - 112) = &block_descriptor_86;
      v56 = _Block_copy((const void *)(v5 - 136));
      v57 = *(_QWORD *)(v5 - 96);
      swift_retain(v12);
      objc_msgSend((id)v15, "dismissViewControllerAnimated:completion:", 1, v56, swift_release(v57).n128_f64[0]);
      _Block_release(v56);

      swift_release(v12);
      sub_5C198((uint64_t)v14, v13);
      v58 = *(_QWORD *)(v5 - 320);
    }
    sub_5C0DC(v58, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v69 = *(_QWORD *)(v5 - 176);

    v71 = v69;
    goto LABEL_31;
  }
  v18 = (id)(v0 & 0x3FFFFFFFFFFFFFFFLL);
  v29 = *(void (**)(uint64_t *))(v5 - 192);
  v30 = *(_QWORD *)(v5 - 168);
  v31 = *(_QWORD *)(v5 - 216);
  v32 = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 136) = 0;
  *(_QWORD *)(v5 - 128) = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v33 = *(_QWORD *)(v5 - 128);
  *(_QWORD *)(v5 - 136) = *(_QWORD *)(v5 - 136);
  *(_QWORD *)(v5 - 128) = v33;
  v34._object = (void *)0x80000000010C60A0;
  v34._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v34);
  sub_5BDB8(v30, v31, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v35._countAndFlagsBits = String.init<A>(describing:)(v31, v32);
  object = v35._object;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(object);
  v37._countAndFlagsBits = 0xD00000000000001CLL;
  v37._object = (void *)0x80000000010C60C0;
  String.append(_:)(v37);
  v38 = *(_QWORD *)(*(_QWORD *)(v5 - 208) + 32);
  *(_QWORD *)(v5 - 160) = v38;
  v39 = (id)(v38 & 0x3FFFFFFFFFFFFFFFLL);
  v40._countAndFlagsBits = String.init<A>(describing:)(v5 - 160, &type metadata for AppInterfaceContext.RootViewControllerKind);
  v41 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v41);
  v42 = *(_QWORD *)(v5 - 136);
  v43 = *(_QWORD *)(v5 - 128);
  v44 = sub_BD024();
  v45 = swift_allocError(&type metadata for AppInterfaceContext.Activity.Error, v44, 0, 0);
  v47 = v45;
  *v46 = v42;
  v46[1] = v43;
  if (v29)
  {
    v48 = *(uint64_t **)(v5 - 264);
    *v48 = v45;
    swift_storeEnumTagMultiPayload(v48, *(_QWORD *)(v5 - 272), 1);
    swift_errorRetain(v47);
    v29(v48);
    sub_56024((uint64_t)v48, &qword_14AF568);
  }
  swift_errorRelease(v47);
  sub_56024(*(_QWORD *)(v5 - 176), &qword_14AF578);
LABEL_32:

}

void sub_B7A40(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v6);
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = (char *)&v11 - v8;
  if (a2)
  {
    sub_5BDB8(a4, (uint64_t)&v11 - v8, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v10 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v9, v10, 0);
    swift_storeEnumTagMultiPayload(v9, v6, 0);
    a2(v9);
    sub_56024((uint64_t)v9, &qword_14AF568);
  }
}

uint64_t sub_B7B0C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  unsigned int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v32);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  sub_5BDB8(a5, (uint64_t)&v31 - v16, type metadata accessor for AppInterfaceContext.Activity.Destination);
  sub_5BDB8((uint64_t)v17, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(&unk_1343B90, v19 + v13, v18 | 7);
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = a4;
  sub_5C04C((uint64_t)v17, v20 + v19, type metadata accessor for AppInterfaceContext.Activity.Destination);
  v21 = *(_QWORD *)(a2 + 32);
  if (v21 >> 62 == 2 || v21 >> 62 == 1)
  {
    v22 = (void *)(v21 & 0x3FFFFFFFFFFFFFFFLL);
    v21 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  else
  {
    v22 = (void *)(v21 & 0x3FFFFFFFFFFFFFFFLL);
  }
  v23 = (void *)objc_opt_self(ICPrivacyInfo);
  sub_A9DEC((uint64_t)a3, a4);
  sub_A9DEC((uint64_t)a3, a4);
  v24 = v22;
  v25 = objc_msgSend(v23, "sharedPrivacyInfo");
  v26 = objc_msgSend(v25, "privacyAcknowledgementRequiredForMusic");

  if (v26)
  {
    if (!a3)
    {

      swift_release(v20);
      return sub_5C0DC((uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
    }
    sub_5BDB8((uint64_t)v14, (uint64_t)v10, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v27 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v10, v27, 0);
    swift_storeEnumTagMultiPayload(v10, v32, 0);
    a3(v10);
    sub_56024((uint64_t)v10, &qword_14AF568);
  }
  else
  {
    aBlock[4] = sub_BD35C;
    v34 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_110;
    v28 = _Block_copy(aBlock);
    v29 = v34;
    swift_retain(v20);
    objc_msgSend((id)v21, "dismissViewControllerAnimated:completion:", 1, v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);
  }

  swift_release(v20);
  sub_5C198((uint64_t)a3, a4);
  return sub_5C0DC((uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
}

void sub_B7DE0(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (char *)&v10 - v7;
  if (a1)
  {
    sub_5BDB8(a3, (uint64_t)&v10 - v7, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v9 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v8, v9, 0);
    swift_storeEnumTagMultiPayload(v8, v5, 0);
    a1(v8);
    sub_56024((uint64_t)v8, &qword_14AF568);
  }
}

void sub_B7EAC(uint64_t a1, unsigned __int8 a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  unint64_t v27;

  v9 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v9 == 5 || a1 && (sub_482A78(a2), (v13 & 1) != 0))
  {
    if (a3)
    {
      sub_5BDB8(a5, (uint64_t)v12, type metadata accessor for AppInterfaceContext.Activity.Destination);
      v14 = type metadata accessor for AppInterfaceContext.Activity(0);
      swift_storeEnumTagMultiPayload(v12, v14, 0);
      swift_storeEnumTagMultiPayload(v12, v10, 0);
      a3(v12);
      sub_56024((uint64_t)v12, &qword_14AF568);
    }
  }
  else
  {
    v26 = 0;
    v27 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease(v27);
    v26 = 0xD00000000000002DLL;
    v27 = 0x80000000010C6180;
    v25 = a2;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A0);
    v16._countAndFlagsBits = String.init<A>(describing:)(&v25, v15);
    object = v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(object);
    v18 = v26;
    v19 = v27;
    v20 = sub_BD024();
    v21 = swift_allocError(&type metadata for AppInterfaceContext.Activity.Error, v20, 0, 0);
    v22 = v21;
    *v23 = v18;
    v23[1] = v19;
    if (a3)
    {
      *v12 = v21;
      swift_storeEnumTagMultiPayload(v12, v10, 1);
      swift_errorRetain(v22);
      a3(v12);
      sub_56024((uint64_t)v12, &qword_14AF568);
    }
    swift_errorRelease(v22);
  }
}

id sub_B8084(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id result;
  uint64_t v16;
  uint64_t v17;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, "pushViewController:overrideTraitCollection:animated:", a2, a3, 1, v12);
  if (a4)
  {
    sub_5BDB8(a6, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v16 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v14, v16, 0);
    swift_storeEnumTagMultiPayload(v14, v11, 0);
    a4(v14);
    return (id)sub_56024((uint64_t)v14, &qword_14AF568);
  }
  return result;
}

id sub_B8180(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id result;
  uint64_t v16;
  uint64_t v17;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicApplication19SplitViewController_contentViewController)+ OBJC_IVAR____TtCC16MusicApplication19SplitViewControllerP33_7A1626E95DCA8A4D36C577E39B8D78C121PaletteViewController_contentNavigationController), "pushViewController:overrideTraitCollection:animated:", a2, a3, 1, v12);
  if (a4)
  {
    sub_5BDB8(a6, (uint64_t)v14, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v16 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v14, v16, 0);
    swift_storeEnumTagMultiPayload(v14, v11, 0);
    a4(v14);
    return (id)sub_56024((uint64_t)v14, &qword_14AF568);
  }
  return result;
}

uint64_t sub_B8290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;

  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  v8[5] = v10;
  v8[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[7] = type metadata accessor for MainActor(0);
  v8[8] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_14E7A94);
  v8[9] = v12;
  *v12 = v8;
  v12[1] = sub_B8334;
  return sub_8B8020(a5);
}

uint64_t sub_B8334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_B83A4, v2, v3);
}

uint64_t sub_B83A4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v2 = *(_QWORD *)(v0 + 48);
    sub_5BDB8(*(_QWORD *)(v0 + 32), v2, type metadata accessor for AppInterfaceContext.Activity.Destination);
    v4 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v2, v4, 0);
    swift_storeEnumTagMultiPayload(v2, v3, 0);
    v1(v2);
    sub_56024(v2, &qword_14AF568);
  }
  v5 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B8448(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF568);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v16 - v11);
  sub_5C238(a1, (uint64_t)&v16 - v11, &qword_14AF568);
  if (swift_getEnumCaseMultiPayload(v12, v7) == 1)
  {
    v13 = *v12;
    if (a2)
    {
      *v9 = v13;
      swift_storeEnumTagMultiPayload(v9, v7, 1);
      swift_errorRetain(v13);
      a2(v9);
      sub_56024((uint64_t)v9, &qword_14AF568);
    }
    return swift_errorRelease(v13);
  }
  else
  {
    if (a2)
    {
      sub_5BDB8(a4, (uint64_t)v9, type metadata accessor for AppInterfaceContext.Activity.Destination);
      v15 = type metadata accessor for AppInterfaceContext.Activity(0);
      swift_storeEnumTagMultiPayload(v9, v15, 0);
      swift_storeEnumTagMultiPayload(v9, v7, 0);
      a2(v9);
      sub_56024((uint64_t)v9, &qword_14AF568);
    }
    return sub_56024((uint64_t)v12, &qword_14AF568);
  }
}

void sub_B85BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  _BYTE v45[32];
  char v46[24];

  v2 = v1;
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for PlaylistCreation.Context(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2 + 72;
  swift_beginAccess(v2 + 72, v46, 0, 0);
  v13 = *(_QWORD *)(v2 + 72);
  v14 = a1;
  v44 = a1;
  swift_bridgeObjectRetain();
  v15 = sub_482274((uint64_t (*)(uint64_t *))sub_BCA68, (uint64_t)v43, v13);
  swift_bridgeObjectRelease(v13);
  swift_release(v15);
  if (!v15)
  {
    v39 = v6;
    v40 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v41 = v9;
    sub_5BDB8(v14, (uint64_t)v12, type metadata accessor for PlaylistCreation.Context);
    v16 = type metadata accessor for PlaylistCreation.Flow(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    swift_retain(v2);
    v17 = sub_B392E8((uint64_t)v12, (uint64_t)sub_BCA9C, v2);
    swift_beginAccess(v42, v45, 33, 0);
    v18 = *(_QWORD *)(v2 + 72);
    v38 = v2;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v35 = v18;
      else
        v35 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v17);
      swift_bridgeObjectRetain();
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v18);
      v19 = v5;
      v20 = (uint64_t)v41;
      if (v36 < 0)
      {
        __break(1u);
        return;
      }
    }
    else
    {
      swift_retain(v17);
      v19 = v5;
      v20 = (uint64_t)v41;
    }
    sub_AA6DE0(0, 0, v17);
    swift_endAccess(v45);
    v21 = *(void **)(v17 + OBJC_IVAR____TtCV16MusicApplication16PlaylistCreation4Flow_navigationController);
    *(_QWORD *)v20 = v21;
    *(_BYTE *)(v20 + 8) = 1;
    *(_QWORD *)(v20 + 16) = &_swiftEmptySetSingleton;
    swift_storeEnumTagMultiPayload(v20, v4, 2);
    v22 = v40;
    sub_5BDB8(v20, v40, type metadata accessor for AppInterfaceContext.Activity);
    v23 = *(unsigned __int8 *)(v19 + 80);
    v24 = (v23 + 24) & ~v23;
    v25 = (v39 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject(&unk_13437D0, v25 + 16, v23 | 7);
    v27 = v38;
    *(_QWORD *)(v26 + 16) = v38;
    sub_5C04C(v22, v26 + v24, type metadata accessor for AppInterfaceContext.Activity);
    v28 = (_QWORD *)(v26 + v25);
    *v28 = 0;
    v28[1] = 0;
    swift_retain(v27);
    v29 = v21;
    v30 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v31 = swift_allocObject(&unk_13437F8, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_BCA64;
    *(_QWORD *)(v31 + 24) = v26;
    v32 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v30) + 16];
    v33 = v30;
    v34 = swift_retain(v26);
    v32(sub_C31F4, v31, v34);
    swift_release(v31);

    swift_release(v26);
    sub_5C0DC(v20, type metadata accessor for AppInterfaceContext.Activity);
    swift_release(v17);
  }
}

double sub_B8910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = a1;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCV16MusicApplication16PlaylistCreation4Flow_navigationController), "dismissViewControllerAnimated:completion:", 1, 0);
  v5 = a3 + 72;
  swift_beginAccess(a3 + 72, v13, 0, 0);
  v6 = *(_QWORD *)(a3 + 72);
  swift_bridgeObjectRetain();
  v7 = sub_6FF6AC(v4, v6);
  LOBYTE(v4) = v8;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  if ((v4 & 1) == 0)
  {
    v10 = swift_beginAccess(v5, v12, 33, 0);
    v11 = sub_7005E4(v7, v10);
    swift_endAccess(v12);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_B89D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(void (*)(void **), uint64_t, __n128);
  _QWORD *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  _BYTE v45[32];
  char v46[24];

  v2 = v1;
  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for PlaylistCreation.LegacyContext(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2 + 80;
  swift_beginAccess(v2 + 80, v46, 0, 0);
  v13 = *(_QWORD *)(v2 + 80);
  v14 = a1;
  v44 = a1;
  swift_bridgeObjectRetain();
  v15 = sub_482274((uint64_t (*)(uint64_t *))sub_BCA24, (uint64_t)v43, v13);
  swift_bridgeObjectRelease(v13);
  swift_release(v15);
  if (!v15)
  {
    v39 = v6;
    v40 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v41 = v9;
    sub_5BDB8(v14, (uint64_t)v12, type metadata accessor for PlaylistCreation.LegacyContext);
    v16 = type metadata accessor for PlaylistCreation.LegacyFlow(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    swift_retain(v2);
    v17 = sub_B39E68((uint64_t)v12, (uint64_t)sub_BCA58, v2);
    swift_beginAccess(v42, v45, 33, 0);
    v18 = *(_QWORD *)(v2 + 80);
    v38 = v2;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v35 = v18;
      else
        v35 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v17);
      swift_bridgeObjectRetain();
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v18);
      v19 = v5;
      v20 = (uint64_t)v41;
      if (v36 < 0)
      {
        __break(1u);
        return;
      }
    }
    else
    {
      swift_retain(v17);
      v19 = v5;
      v20 = (uint64_t)v41;
    }
    sub_AA70D0(0, 0, v17);
    swift_endAccess(v45);
    v21 = *(void **)(v17 + OBJC_IVAR____TtCV16MusicApplication16PlaylistCreation10LegacyFlow_navigationController);
    *(_QWORD *)v20 = v21;
    *(_BYTE *)(v20 + 8) = 1;
    *(_QWORD *)(v20 + 16) = &_swiftEmptySetSingleton;
    swift_storeEnumTagMultiPayload(v20, v4, 2);
    v22 = v40;
    sub_5BDB8(v20, v40, type metadata accessor for AppInterfaceContext.Activity);
    v23 = *(unsigned __int8 *)(v19 + 80);
    v24 = (v23 + 24) & ~v23;
    v25 = (v39 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject(&unk_1343780, v25 + 16, v23 | 7);
    v27 = v38;
    *(_QWORD *)(v26 + 16) = v38;
    sub_5C04C(v22, v26 + v24, type metadata accessor for AppInterfaceContext.Activity);
    v28 = (_QWORD *)(v26 + v25);
    *v28 = 0;
    v28[1] = 0;
    swift_retain(v27);
    v29 = v21;
    v30 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v31 = swift_allocObject(&unk_13437A8, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_BCA64;
    *(_QWORD *)(v31 + 24) = v26;
    v32 = *(void (**)(void (*)(void **), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v30)
                                                                                               + 16];
    v33 = v30;
    v34 = swift_retain(v26);
    v32(sub_55CD8, v31, v34);
    swift_release(v31);

    swift_release(v26);
    sub_5C0DC(v20, type metadata accessor for AppInterfaceContext.Activity);
    swift_release(v17);
  }
}

double sub_B8D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = a1;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCV16MusicApplication16PlaylistCreation10LegacyFlow_navigationController), "dismissViewControllerAnimated:completion:", 1, 0);
  v5 = a3 + 80;
  swift_beginAccess(a3 + 80, v13, 0, 0);
  v6 = *(_QWORD *)(a3 + 80);
  swift_bridgeObjectRetain();
  v7 = sub_6FF6B8(v4, v6);
  LOBYTE(v4) = v8;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  if ((v4 & 1) == 0)
  {
    v10 = swift_beginAccess(v5, v12, 33, 0);
    v11 = sub_7005E4(v7, v10);
    swift_endAccess(v12);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void *sub_B8DF4(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[16];
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  void **v37;
  _BYTE v38[32];
  void *v39;
  char v40;

  v3 = type metadata accessor for SidebarMenu.Item(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v29 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F40);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - v13;
  v15 = OBJC_IVAR____TtC16MusicApplication16TabBarController__tabIdentifiers;
  v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicApplication16TabBarController__tabIdentifiers];
  v17 = swift_bridgeObjectRetain();
  v18 = sub_512D28(v17);
  swift_bridgeObjectRelease(v16);
  v19 = *(_QWORD *)&a1[v15];
  swift_bridgeObjectRetain();
  Array.subscript.getter((uint64_t)objc_msgSend(a1, "selectedIndex"), v19, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v38);
  v20 = swift_bridgeObjectRelease(v19);
  v40 = v38[0];
  v30 = OBJC_IVAR____TtC16MusicApplication16TabBarController_isRestoringTabs;
  a1[OBJC_IVAR____TtC16MusicApplication16TabBarController_isRestoringTabs] = 1;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
  v21(v14, 1, 1, v3, v20);
  v39 = &_swiftEmptySetSingleton;
  v33 = v1;
  v34 = a1;
  v35 = &v40;
  v36 = v14;
  v37 = &v39;
  v31 = v18;
  sub_95F7E4((uint64_t (*)(char *))UIScreen.Dimensions.size.getter, (uint64_t)v32, v18);
  sub_5C238((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_14C7F40);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v22(v11, 1, v3) == 1)
  {
    sub_56024((uint64_t)v11, (uint64_t *)&unk_14C7F40);
  }
  else
  {
    v23 = v29;
    sub_5C04C((uint64_t)v11, v29, type metadata accessor for SidebarMenu.Item);
    sub_5BDB8(v23, (uint64_t)v8, type metadata accessor for SidebarMenu.Item);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v8, 0, 1, v3);
    sub_45710C((uint64_t)v8, 1);
    sub_56024((uint64_t)v8, (uint64_t *)&unk_14C7F40);
    sub_5C0DC(v23, type metadata accessor for SidebarMenu.Item);
  }
  if (v22(v14, 1, v3) == 1)
  {
    v24 = v39;
    v25 = v1 + OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks, v38, 0, 0);
    sub_5C238(v25, (uint64_t)v8, (uint64_t *)&unk_14C7F40);
    swift_bridgeObjectRetain();
    sub_45710C((uint64_t)v8, 1);
    sub_56024((uint64_t)v8, (uint64_t *)&unk_14C7F40);
    swift_bridgeObjectRelease(v24);
  }
  a1[v30] = 0;
  v26 = v39;
  sub_56024((uint64_t)v14, (uint64_t *)&unk_14C7F40);
  swift_bridgeObjectRelease(v31);
  return v26;
}

id sub_B9100(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  void *v27;
  id v28;
  id result;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(unsigned __int8 *, _QWORD);
  _QWORD *v41;
  void *v42;
  _BYTE v43[16];
  char *v44;
  char *v45;
  _BYTE *v46;
  unsigned __int8 *v47;
  void **v48;
  unsigned __int8 v49[32];
  void *v50;
  unsigned __int8 v51;
  char v52[40];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F40);
  __chkstk_darwin(v3);
  v5 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v49 = &_swiftEmptySetSingleton;
  v6 = OBJC_IVAR____TtC16MusicApplication16TabBarController__tabIdentifiers;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication16TabBarController__tabIdentifiers];
  v8 = v1;
  v9 = swift_bridgeObjectRetain();
  v10 = sub_512D28(v9);
  swift_bridgeObjectRelease(v7);
  v11 = a1;
  sub_BC644(v10, (uint64_t)v11, (uint64_t)v49);

  swift_bridgeObjectRelease(v10);
  v12 = *(_QWORD *)v49;
  v13 = (uint64_t)&v11[OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks];
  swift_beginAccess(&v11[OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks], v52, 0, 0);
  sub_5C238(v13, (uint64_t)v5, (uint64_t *)&unk_14C7F40);
  v8[OBJC_IVAR____TtC16MusicApplication16TabBarController_isRestoringTabs] = 1;
  v51 = 6;
  v50 = &_swiftEmptySetSingleton;
  v44 = v8;
  v45 = v11;
  v46 = v5;
  v47 = &v51;
  v48 = &v50;
  sub_95FDCC((void (*)(char *))sub_BE960, (uint64_t)v43, v12);
  v14 = v51;
  if (v51 == 6)
    goto LABEL_11;
  v15 = *(_QWORD *)&v1[v6];
  swift_bridgeObjectRetain();
  Array.subscript.getter((uint64_t)objc_msgSend(v8, "selectedIndex"), v15, (uint64_t)&type metadata for TabIdentifier, (uint64_t)v49);
  swift_bridgeObjectRelease(v15);
  if (v49[0] != 6)
  {
    sub_302648(v14);
    if ((v16 & 1) != 0)
      goto LABEL_11;
  }
  v17 = *(_QWORD *)&v1[v6];
  swift_bridgeObjectRetain();
  v18 = sub_6FF288(v14, v17);
  v20 = v19;
  *(_QWORD *)&v21 = swift_bridgeObjectRelease(v17).n128_u64[0];
  if ((v20 & 1) != 0)
    goto LABEL_11;
  v22 = objc_msgSend(v8, "viewControllers", v21);
  if (!v22)
    goto LABEL_11;
  v23 = v22;
  v24 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  Array.subscript.getter(v18, v25, v24, (uint64_t)v49);
  *(_QWORD *)&v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
  v27 = *(void **)v49;
  if (!*(_QWORD *)v49)
    goto LABEL_11;
  objc_msgSend(v8, "setSelectedViewController:", *(_QWORD *)v49, v26);
  v28 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_3001FC(v14);

  result = objc_msgSend(v8, "view");
  if (result)
  {
    v30 = result;
    v31 = UIView.noticePresenter.getter();

    if (v31)
    {
      sub_2FD444();
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;
      v40 = (void (*)(unsigned __int8 *, _QWORD))(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v31 + 248))(v49);
      v41[3] = v33;
      v41[4] = v35;
      v41[5] = v37;
      v41[6] = v39;
      v40(v49, 0);

      swift_release(v31);
    }
    else
    {

    }
LABEL_11:
    v42 = v50;
    swift_bridgeObjectRetain();
    sub_302E8C(v14);
    swift_bridgeObjectRelease(v42);
    sub_56024((uint64_t)v5, (uint64_t *)&unk_14C7F40);
    swift_bridgeObjectRelease(v12);
    return v50;
  }
  __break(1u);
  return result;
}

uint64_t sub_B9474()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_unknownObjectWeakDestroy(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  sub_5C198(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  sub_5C198(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return v0;
}

uint64_t sub_B94E4()
{
  uint64_t v0;

  sub_B9474();
  return swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for AppInterfaceContext()
{
  return objc_opt_self(_TtC16MusicApplication19AppInterfaceContext);
}

uint64_t sub_B9524()
{
  uint64_t v0;
  _QWORD v2[15];

  static ApplicationCapabilities.shared.getter((uint64_t)v2);
  v0 = v2[12];
  swift_bridgeObjectRetain();
  sub_A9008(v2);
  return v0;
}

uint64_t sub_B9564()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 88, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 88);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 96));
  return v1;
}

uint64_t sub_B95B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  if (a1)
    v5 = a2;
  else
    v5 = 0;
  swift_beginAccess(v2 + 88, v9, 1, 0);
  v6 = *(_QWORD *)(v2 + 88);
  v7 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v5;
  sub_A9DEC(a1, a2);
  sub_5C198(v6, v7);
  return sub_5C198(a1, a2);
}

void (*sub_B9634(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 88, v3, 33, 0);
  v4 = *(_QWORD *)(v1 + 88);
  if (v4)
    v5 = *(_QWORD *)(v1 + 96);
  else
    v5 = 0;
  v3[3] = v4;
  v3[4] = v5;
  return sub_B969C;
}

void sub_B969C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (!v4)
    v3 = 0;
  *(_QWORD *)(v2 + 88) = v4;
  *(_QWORD *)(v2 + 96) = v3;
  swift_endAccess(v1);
  free(v1);
}

uint64_t sub_B96D8@<X0>(char *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_B0710();
  if (result == 6)
    v3 = 1;
  else
    v3 = result;
  *a1 = v3;
  return result;
}

uint64_t sub_B9708(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v4 = *a1;
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  sub_B5154((uint64_t)v4, 0, 0);
  return sub_5C0DC((uint64_t)v4, type metadata accessor for AppInterfaceContext.Activity.Destination);
}

void (*sub_B97A0(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;

  *(_QWORD *)a1 = v1;
  v3 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  v4 = sub_B0710();
  if (v4 == 6)
    v5 = 1;
  else
    v5 = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return sub_B97FC;
}

void sub_B97FC(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE **)(a1 + 16);
  *v2 = *(_BYTE *)(a1 + 24);
  swift_storeEnumTagMultiPayload(v2, v1, 0);
  sub_B5154((uint64_t)v2, 0, 0);
  sub_5C0DC((uint64_t)v2, type metadata accessor for AppInterfaceContext.Activity.Destination);
  free(v2);
}

uint64_t (*sub_B9854())(unsigned __int8 *)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(unsigned __int8 *);
  _BYTE v6[24];

  swift_beginAccess(v0 + 104, v6, 0, 0);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    v3 = swift_allocObject(&unk_13436E0, 32, 7);
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_C314C;
  }
  else
  {
    v4 = 0;
  }
  sub_A9DEC(v1, v2);
  return v4;
}

uint64_t sub_B98DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(char);
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  if (a1)
  {
    v5 = swift_allocObject(&unk_13436B8, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = sub_C3180;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  swift_beginAccess(v2 + 104, v10, 1, 0);
  v7 = *(_QWORD *)(v2 + 104);
  v8 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 104) = v6;
  *(_QWORD *)(v2 + 112) = v5;
  sub_A9DEC((uint64_t)v6, v5);
  sub_5C198(v7, v8);
  return sub_5C198((uint64_t)v6, v5);
}

void (*sub_B9988(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 104, v3, 33, 0);
  v4 = *(_QWORD *)(v1 + 104);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 112);
    v6 = swift_allocObject(&unk_1343690, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_BC040;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v3[3] = v7;
  v3[4] = v6;
  return sub_B9A20;
}

void sub_B9A20(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(char);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if (v3)
  {
    if ((a2 & 1) != 0)
      v4 = sub_BC010;
    else
      v4 = sub_C3180;
    if ((a2 & 1) != 0)
      v5 = &unk_1343640;
    else
      v5 = &unk_1343668;
    v6 = v2[4];
    v7 = swift_allocObject(v5, 32, 7);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v6;
  }
  else
  {
    v4 = 0;
    v7 = 0;
  }
  v8 = v2[5];
  *(_QWORD *)(v8 + 104) = v4;
  *(_QWORD *)(v8 + 112) = v7;
  swift_endAccess(v2);
  free(v2);
}

uint64_t sub_B9AB0()
{
  char v0;

  v0 = sub_B0710();
  if (v0 == 6)
    v0 = 1;
  return sub_AFB54(v0);
}

void sub_B9AD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char **a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char **v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _BYTE *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 *i;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  __n128 v64;
  unsigned __int8 *v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char **v74;
  uint64_t v75;
  void **aBlock;
  uint64_t v77;
  void (*v78)(uint64_t, void *);
  void *v79;
  double (*v80)(double);
  uint64_t v81;

  v73 = a2;
  v74 = a4;
  v75 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v5);
  v72 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v70 - v8;
  v10 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v70 - v14;
  v16 = type metadata accessor for Playlist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - v21;
  LOBYTE(aBlock) = 5;
  v23 = sub_8AFF0();
  v24 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v23);
  if ((v24 & 1) != 0)
  {
    v71 = v17;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v25(v22, v75, v16);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE670);
    v70 = v9;
    v27 = v74;
    v28 = *(int *)(v26 + 48);
    v75 = a3;
    v29 = *(int *)(v26 + 64);
    v30 = _s6AlbumsV5ScopeOMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
    v15[v28] = 0;
    v15[v29] = 0;
    swift_storeEnumTagMultiPayload(v15, v10, 0);
    v31 = type metadata accessor for URL(0);
    v32 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v70, 1, 1, v31);
    v25(v19, (uint64_t)v22, v16);
    sub_5BDB8((uint64_t)v15, (uint64_t)v12, type metadata accessor for ContainerDetail.Source);
    v33 = v72;
    sub_5C238(v32, v72, &qword_14AED20);
    v34 = v75;
    swift_bridgeObjectRetain();
    v35 = sub_9514C4((uint64_t)v19, (uint64_t)v12, v73, v34, v33);
    v36 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
    v37 = sub_ADF21C((uint64_t)v35, 0, v36);

    sub_56024(v32, &qword_14AED20);
    sub_5C0DC((uint64_t)v15, type metadata accessor for ContainerDetail.Source);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v22, v16);
    *v27 = v37;
    v27[1] = 0;
    v38 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
    swift_storeEnumTagMultiPayload(v27, v38, 4);
    v39 = type metadata accessor for AppInterfaceContext.Activity(0);
    swift_storeEnumTagMultiPayload(v27, v39, 0);
    (*(void (**)(char **, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v27, 0, 1, v39);
    return;
  }
  v40 = Playlist.id.getter(v24);
  v42 = v41;
  v43 = HIBYTE(v41) & 0xF;
  v44 = v40 & 0xFFFFFFFFFFFFLL;
  if ((v42 & 0x2000000000000000) != 0)
    v45 = v43;
  else
    v45 = v40 & 0xFFFFFFFFFFFFLL;
  if (!v45)
  {
    swift_bridgeObjectRelease(v42);
LABEL_56:
    v68 = type metadata accessor for AppInterfaceContext.Activity(0);
    (*(void (**)(char **, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v74, 1, 1, v68);
    return;
  }
  if ((v42 & 0x1000000000000000) != 0)
  {
    v47 = sub_338138(v40, v42, 10);
    v49 = v69;
    goto LABEL_46;
  }
  if ((v42 & 0x2000000000000000) == 0)
  {
    if ((v40 & 0x1000000000000000) == 0)
      goto LABEL_59;
    for (i = (unsigned __int8 *)((v42 & 0xFFFFFFFFFFFFFFFLL) + 32);
          ;
          i = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v40, v42))
    {
      v47 = (uint64_t)sub_338110(i, v44, 10);
      v49 = v48 & 1;
LABEL_46:
      swift_bridgeObjectRelease(v42);
      if ((v49 & 1) != 0)
        break;
      sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
      sub_4E684(0, (unint64_t *)&qword_14B9C40, MPModelPlaylist_ptr);
      v59 = static MPModelPlaylist.defaultMusicKind.getter();
      MPIdentifierSet.init(kind:deviceLibraryPID:)(v59, v47);
      v61 = v60;
      v62 = objc_allocWithZone((Class)MPModelPlaylist);
      v80 = UIScreen.Dimensions.size.getter;
      v81 = 0;
      aBlock = _NSConcreteStackBlock;
      v77 = 1107296256;
      v78 = sub_23E9F0;
      v79 = &block_descriptor_9;
      v63 = _Block_copy(&aBlock);
      v42 = (uint64_t)objc_msgSend(v62, "initWithIdentifiers:block:", v61, v63);
      _Block_release(v63);
      v64 = swift_release(v81);
      LOBYTE(v63) = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v64);

      if ((v63 & 1) == 0)
      {
        sub_BA1C0(v42, 0);

        return;
      }
      __break(1u);
LABEL_59:
      ;
    }
    goto LABEL_56;
  }
  aBlock = (void **)v40;
  v77 = v42 & 0xFFFFFFFFFFFFFFLL;
  if (v40 == 43)
  {
    if (!v43)
      goto LABEL_61;
    if (v43 == 1 || (BYTE1(v40) - 48) > 9u)
      goto LABEL_33;
    v47 = (BYTE1(v40) - 48);
    if (v43 != 2)
    {
      if ((BYTE2(v40) - 48) > 9u)
        goto LABEL_33;
      v47 = 10 * (BYTE1(v40) - 48) + (BYTE2(v40) - 48);
      v50 = v43 - 3;
      if (v50)
      {
        v51 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v52 = *v51 - 48;
          if (v52 > 9)
            goto LABEL_33;
          v53 = 10 * v47;
          if ((unsigned __int128)(v47 * (__int128)10) >> 64 != (10 * v47) >> 63)
            goto LABEL_33;
          v47 = v53 + v52;
          if (__OFADD__(v53, v52))
            goto LABEL_33;
          v49 = 0;
          ++v51;
          if (!--v50)
            goto LABEL_46;
        }
      }
    }
LABEL_45:
    v49 = 0;
    goto LABEL_46;
  }
  if (v40 != 45)
  {
    if (!v43 || (v40 - 48) > 9u)
      goto LABEL_33;
    v47 = (v40 - 48);
    if (v43 != 1)
    {
      if ((BYTE1(v40) - 48) > 9u)
        goto LABEL_33;
      v47 = 10 * (v40 - 48) + (BYTE1(v40) - 48);
      v54 = v43 - 2;
      if (v54)
      {
        v55 = (unsigned __int8 *)&aBlock + 2;
        while (1)
        {
          v56 = *v55 - 48;
          if (v56 > 9)
            goto LABEL_33;
          v57 = 10 * v47;
          if ((unsigned __int128)(v47 * (__int128)10) >> 64 != (10 * v47) >> 63)
            goto LABEL_33;
          v47 = v57 + v56;
          if (__OFADD__(v57, v56))
            goto LABEL_33;
          v49 = 0;
          ++v55;
          if (!--v54)
            goto LABEL_46;
        }
      }
    }
    goto LABEL_45;
  }
  if (v43)
  {
    if (v43 != 1 && (BYTE1(v40) - 48) <= 9u)
    {
      if (v43 == 2)
      {
        v49 = 0;
        v47 = -(uint64_t)(BYTE1(v40) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(v40) - 48) <= 9u)
      {
        v47 = -10 * (BYTE1(v40) - 48) - (BYTE2(v40) - 48);
        v58 = v43 - 3;
        if (!v58)
          goto LABEL_45;
        v65 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          v66 = *v65 - 48;
          if (v66 > 9)
            break;
          v67 = 10 * v47;
          if ((unsigned __int128)(v47 * (__int128)10) >> 64 != (10 * v47) >> 63)
            break;
          v47 = v67 - v66;
          if (__OFSUB__(v67, v66))
            break;
          v49 = 0;
          ++v65;
          if (!--v58)
            goto LABEL_46;
        }
      }
    }
LABEL_33:
    v47 = 0;
    v49 = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_61:
  __break(1u);
}

uint64_t sub_BA1C0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Class isa;
  id v27;
  id v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  _QWORD v51[10];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE790);
  __chkstk_darwin(v6);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v51[0]) = 5;
  v13 = sub_8AFF0();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v13) & 1) != 0)
  {
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(a1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_56024((uint64_t)v8, (uint64_t *)&unk_14AE790);
      v14 = type metadata accessor for AppInterfaceContext.Activity(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    if (a2)
    {
      sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
      v40 = sub_4E684(0, (unint64_t *)&qword_14AEDD0, MPModelSong_ptr);
      v41 = a2;
      v42 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
      v43 = static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(v40, *v42, 0, v41);
      if (v44)
      {
        v45 = MusicItemID.init(_:)(v43, v44);
        v47 = v46;

LABEL_14:
        sub_B9AD0((uint64_t)v12, v45, v47, (char **)a3);
        v50 = swift_bridgeObjectRelease(v47);
        return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v50);
      }

    }
    v45 = 0;
    v47 = 0;
    goto LABEL_14;
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  sub_4E684(0, (unint64_t *)&unk_14AEE20, MPModelPlaylistEntry_ptr);
  v17 = static MPModelPlaylistEntry.defaultMusicKind.getter();
  v18 = (void *)objc_opt_self(MPModelPlaylist);
  v19 = static MPModelPlaylistVariants.allPlaylists.getter();
  v20 = v16;
  v21 = objc_msgSend(v18, "kindWithVariants:playlistEntryKind:options:", v19, v17, 0);
  objc_msgSend(v20, "setSectionKind:", v21);

  objc_msgSend(v20, "setItemKind:", v17);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1060220;
  *(_QWORD *)(v23 + 32) = a1;
  v51[0] = v23;
  specialized Array._endMutation()(v23);
  v24 = v51[0];
  sub_4E684(0, (unint64_t *)&qword_14B2100, MPModelObject_ptr);
  v25 = a1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "setScopedContainers:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v27 = v25;
  v28 = v20;
  sub_5877F0(v20, 0, 0, v25, 0, 0, 0, 0, (uint64_t)v51, (void (*)(id, __n128))UIScreen.Dimensions.size.getter, 0);
  v29 = objc_allocWithZone((Class)type metadata accessor for PlaylistDetailViewController(0));
  v30 = (char *)sub_8448BC((uint64_t)v51, 0);
  v31 = v30;
  if (a2)
  {
    v32 = *(_QWORD *)((char *)&stru_298.offset + (swift_isaMask & *(_QWORD *)v30));
    v33 = *(void **)&v30[v32];
    *(_QWORD *)&v30[v32] = a2;
    v34 = a2;
    v35 = v31;

    v36 = *(_QWORD *)&v35[*(_QWORD *)&stru_298.segname[(swift_isaMask & *(_QWORD *)v35) + 8]];
    v37 = *(void **)&v31[v32];
    v38 = *(void **)(v36 + qword_14F0248);
    *(_QWORD *)(v36 + qword_14F0248) = v37;
    v39 = v37;

    *(_BYTE *)(v36 + qword_14F0260) = 0;
    sub_ECF54();

    sub_BC950((uint64_t)v51);
  }
  else
  {
    sub_BC950((uint64_t)v51);
  }

  *(_QWORD *)a3 = v31;
  *(_QWORD *)(a3 + 8) = 0;
  v48 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(a3, v48, 4);
  v49 = type metadata accessor for AppInterfaceContext.Activity(0);
  swift_storeEnumTagMultiPayload(a3, v49, 0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(a3, 0, 1, v49);
}

uint64_t sub_BA688()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_14AF2A0 = result;
  return result;
}

uint64_t sub_BA6AC()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_14AF2A8 = result;
  return result;
}

uint64_t sub_BA6D0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_157F610);
  __swift_project_value_buffer(v0, (uint64_t)qword_157F610);
  return static Logger.music(_:)(0xD000000000000013, 0x80000000010609F0);
}

void sub_BA730()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "connectedScenes");
  v2 = sub_4E684(0, (unint64_t *)&qword_14C5D80, UIScene_ptr);
  v3 = sub_BC9CC();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);
  sub_1A3B54(v4);
  v6 = v5;

  swift_bridgeObjectRelease();
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v11 = v6;
    else
      v11 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_13;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    v7 = *(id *)(v6 + 32);
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "delegate", swift_bridgeObjectRelease().n128_f64[0]);

  if (v9)
  {
    v10 = type metadata accessor for AppSceneDelegate();
    if (!swift_dynamicCastClass(v9, v10))
      swift_unknownObjectRelease(v9);
  }
}

double sub_BA890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;

  v25 = a4;
  v26 = a2;
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  type metadata accessor for MainActor(0);
  swift_retain(a4);
  swift_bridgeObjectRetain();
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1343F50, v20 + 8, v17 | 7);
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + v18, v10, v7);
  v22 = (_QWORD *)(v21 + v19);
  *v22 = v26;
  v22[1] = a3;
  *(_QWORD *)(v21 + v20) = v25;
  v23 = sub_2223C8((uint64_t)v13, (uint64_t)&unk_14AF610, v21);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_BAA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C81F0);
  v7[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v7[7] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[8] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v7[9] = v11;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[10] = swift_task_alloc(v12);
  v7[11] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v7[12] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  return swift_task_switch(sub_BAB00, v15, v16);
}

void sub_BAB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v20;
  __n128 v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(char ***)(v0 + 48);
  sub_B9AD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v3);
  if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_14C81F0);
LABEL_24:
    v6 = *(_QWORD *)(v0 + 96);
    goto LABEL_25;
  }
  v4 = *(_QWORD *)(v0 + 40);
  sub_5C04C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 88), type metadata accessor for AppInterfaceContext.Activity);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 40);
    v6 = v5;
LABEL_5:
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 64);
    sub_5BDB8(v8, v10, type metadata accessor for AppInterfaceContext.Activity);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v13 = (v12 + 24) & ~v12;
    v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = swift_allocObject(&unk_1343F78, v14 + 16, v12 | 7);
    *(_QWORD *)(v15 + 16) = v6;
    sub_5C04C(v10, v15 + v13, type metadata accessor for AppInterfaceContext.Activity);
    v16 = (_QWORD *)(v15 + v14);
    *v16 = 0;
    v16[1] = 0;
    swift_retain(v5);
    swift_retain(v6);
    v17 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v18 = swift_allocObject(&unk_1343FA0, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_BCA64;
    *(_QWORD *)(v18 + 24) = v15;
    v19 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v17) + 16];
    v20 = v17;
    v21 = swift_retain(v15);
    v19(sub_C31F4, v18, v21);
    swift_release(v15);

    swift_release(v18);
    sub_5C0DC(v8, type metadata accessor for AppInterfaceContext.Activity);
    swift_release(v7);
LABEL_25:
    v38 = *(_QWORD *)(v0 + 80);
    v37 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 48);
    swift_release(v6);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v23 = objc_msgSend(v22, "connectedScenes");
  v24 = sub_4E684(0, (unint64_t *)&qword_14C5D80, UIScene_ptr);
  v25 = sub_BC9CC();
  v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v23, v24, v25);
  sub_1A3B54(v26);
  v28 = v27;

  swift_bridgeObjectRelease(v26);
  if (!((unint64_t)v28 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v28);
    goto LABEL_22;
  }
  if (v28 < 0)
    v35 = v28;
  else
    v35 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v28);
  if (!v36)
    goto LABEL_21;
LABEL_8:
  if ((v28 & 0xC000000000000001) != 0)
  {
    v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
    goto LABEL_11;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8)))
  {
    v29 = *(id *)(v28 + 32);
LABEL_11:
    v30 = v29;

    v31 = objc_msgSend(v30, "delegate", swift_bridgeObjectRelease(v28).n128_f64[0]);
    if (v31)
    {
      v32 = v31;
      v33 = type metadata accessor for AppSceneDelegate();
      v34 = swift_dynamicCastClass(v32, v33);
      if (v34)
      {
        v6 = *(_QWORD *)(v34 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
        swift_retain(v6);

        swift_unknownObjectRelease(v32);
        if (v6)
        {
          v5 = *(_QWORD *)(v0 + 40);
          goto LABEL_5;
        }
LABEL_23:
        sub_5C0DC(*(_QWORD *)(v0 + 88), type metadata accessor for AppInterfaceContext.Activity);
        goto LABEL_24;
      }
      swift_unknownObjectRelease(v32);
    }
    v22 = v30;
LABEL_22:

    goto LABEL_23;
  }
  __break(1u);
}

double sub_BAE88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor(0);
  swift_retain(a3);
  v10 = a1;
  v11 = a2;
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1343ED8, 56, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = a2;
  v14[6] = a3;
  v15 = sub_2223C8((uint64_t)v8, (uint64_t)&unk_14AF600, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_BAF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C81F0);
  v6[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppInterfaceContext.Activity(0);
  v6[6] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[7] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v6[8] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[9] = swift_task_alloc(v11);
  v6[10] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v6[11] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_BB058, v14, v15);
}

void sub_BB058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v20;
  __n128 v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  sub_BA1C0(*(void **)(v0 + 16), *(void **)(v0 + 24), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 40), (uint64_t *)&unk_14C81F0);
LABEL_24:
    v6 = *(_QWORD *)(v0 + 88);
    goto LABEL_25;
  }
  v4 = *(_QWORD *)(v0 + 32);
  sub_5C04C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 80), type metadata accessor for AppInterfaceContext.Activity);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 32);
    v6 = v5;
LABEL_5:
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 56);
    sub_5BDB8(v8, v10, type metadata accessor for AppInterfaceContext.Activity);
    v12 = *(unsigned __int8 *)(v11 + 80);
    v13 = (v12 + 24) & ~v12;
    v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = swift_allocObject(&unk_1343F00, v14 + 16, v12 | 7);
    *(_QWORD *)(v15 + 16) = v6;
    sub_5C04C(v10, v15 + v13, type metadata accessor for AppInterfaceContext.Activity);
    v16 = (_QWORD *)(v15 + v14);
    *v16 = 0;
    v16[1] = 0;
    swift_retain(v5);
    swift_retain(v6);
    v17 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
    v18 = swift_allocObject(&unk_1343F28, 32, 7);
    *(_QWORD *)(v18 + 16) = sub_BCA64;
    *(_QWORD *)(v18 + 24) = v15;
    v19 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v17) + 16];
    v20 = v17;
    v21 = swift_retain(v15);
    v19(sub_C31F4, v18, v21);
    swift_release(v18);

    swift_release(v15);
    sub_5C0DC(v8, type metadata accessor for AppInterfaceContext.Activity);
    swift_release(v7);
LABEL_25:
    v38 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 80);
    v39 = *(_QWORD *)(v0 + 40);
    swift_release(v6);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v23 = objc_msgSend(v22, "connectedScenes");
  v24 = sub_4E684(0, (unint64_t *)&qword_14C5D80, UIScene_ptr);
  v25 = sub_BC9CC();
  v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v23, v24, v25);
  sub_1A3B54(v26);
  v28 = v27;
  swift_bridgeObjectRelease(v26);

  if (!((unint64_t)v28 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v28);
    goto LABEL_22;
  }
  if (v28 < 0)
    v35 = v28;
  else
    v35 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v28);
  if (!v36)
    goto LABEL_21;
LABEL_8:
  if ((v28 & 0xC000000000000001) != 0)
  {
    v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
    goto LABEL_11;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8)))
  {
    v29 = *(id *)(v28 + 32);
LABEL_11:
    v30 = v29;
    swift_bridgeObjectRelease(v28);

    v31 = objc_msgSend(v30, "delegate");
    if (v31)
    {
      v32 = v31;
      v33 = type metadata accessor for AppSceneDelegate();
      v34 = swift_dynamicCastClass(v32, v33);
      if (v34)
      {
        v6 = *(_QWORD *)(v34 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
        swift_retain(v6);
        swift_unknownObjectRelease(v32);

        if (v6)
        {
          v5 = *(_QWORD *)(v0 + 32);
          goto LABEL_5;
        }
LABEL_23:
        sub_5C0DC(*(_QWORD *)(v0 + 80), type metadata accessor for AppInterfaceContext.Activity);
        goto LABEL_24;
      }
      swift_unknownObjectRelease(v32);
    }
    v22 = v30;
LABEL_22:

    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_BB3DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[9] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v6);
  v2[11] = swift_task_alloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F5E70);
  v2[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_BB49C, 0, 0);
}

uint64_t sub_BB49C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 120) = v1;
  *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_BB508, v3, v4);
}

uint64_t sub_BB508()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[16];
  v2 = *(_QWORD *)(v0[4] + 16);
  v0[17] = v2;
  swift_retain(v2);
  swift_release(v1);
  return swift_task_switch(sub_BB558, 0, 0);
}

uint64_t sub_BB558(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(v1 + 136))
  {
    v2 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v1 + 144) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_BB608, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 80);
    v7 = *(_QWORD *)(v1 + 88);
    v8 = *(_QWORD *)(v1 + 64);
    swift_task_dealloc(*(_QWORD *)(v1 + 112));
    swift_task_dealloc(v7);
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_BB608()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 208) = sub_B0710();
  swift_release(v1);
  return swift_task_switch(sub_BB654, 0, 0);
}

uint64_t sub_BB654(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)(v1 + 208) == 6)
  {
    swift_release(*(_QWORD *)(v1 + 136));
    v2 = *(_QWORD *)(v1 + 80);
    v3 = *(_QWORD *)(v1 + 88);
    v4 = *(_QWORD *)(v1 + 64);
    swift_task_dealloc(*(_QWORD *)(v1 + 112));
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 120);
    *(_QWORD *)(v1 + 152) = static MainActor.shared.getter(a1);
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    return swift_task_switch(sub_BB710, v7, v8);
  }
}

uint64_t sub_BB710()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 160) = sub_AFB54(*(_BYTE *)(v0 + 208));
  swift_release(v1);
  return swift_task_switch(sub_BB760, 0, 0);
}

uint64_t sub_BB760()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  __n128 v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[5], v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for MusicPageProvider.Destination.listenNow<A, B>(_:)
    || v4 == enum case for MusicPageProvider.Destination.radio<A, B>(_:))
  {
    v7 = 0x676F6C61746163;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[13] + 8))(v0[14], v0[12]);
    v7 = 0x746C7561666564;
  }
  v0[21] = v7;
  v8 = v0[15];
  v0[22] = static MainActor.shared.getter(v5);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_BB850, v9, v10);
}

uint64_t sub_BB850()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[22];
  v0[23] = MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)(v0[5], v0[20], v0[21], 0xE700000000000000);
  swift_release(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return swift_task_switch(sub_BB8B0, 0, 0);
}

uint64_t sub_BB8B0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[23];
  v2 = v0[9];
  v3 = (_QWORD *)v0[10];
  *v3 = v1;
  v3[1] = 0;
  v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload(v3, v4, 4);
  swift_storeEnumTagMultiPayload(v3, v2, 0);
  v5 = dword_14AF2DC;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v5);
  v0[24] = v7;
  *v7 = v0;
  v7[1] = sub_BB944;
  return sub_B1498(v0[11], v0[10]);
}

uint64_t sub_BB944()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  v4 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  sub_5C0DC(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = sub_BBA4C;
  }
  else
  {
    sub_5C0DC(*(_QWORD *)(v2 + 88), type metadata accessor for AppInterfaceContext.Activity);
    v5 = sub_BB9D4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_BB9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 136);

  swift_release(v1);
  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_BBA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 200);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 56);
    v30 = *(void **)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 48);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v34 = v12;
    *(_QWORD *)(v0 + 16) = v9;
    swift_errorRetain(v9);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v14 = String.init<A>(describing:)(v0 + 16, v13);
    v16 = v15;
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v14, v15, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl(&dword_0, v7, v8, "Failed to navigate to destination view controller with error=%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v9);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v29);
    swift_release(v32);
    v17 = v33;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 200);
    v19 = *(void **)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 136);
    v23 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 64);
    v24 = *(_QWORD *)(v0 + 48);
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    swift_errorRelease(v18);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    swift_release(v20);
    v17 = v21;
  }
  swift_release(v17);
  v25 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 88);
  v27 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v26);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_BBDBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MiniPlayerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MiniPlayerViewController()
{
  return objc_opt_self(_TtC16MusicApplication24MiniPlayerViewController);
}

_QWORD *initializeBufferWithCopyOfBuffer for AppInterfaceContext.RootViewControllerKind(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for AppInterfaceContext.RootViewControllerKind(_QWORD *a1)
{

}

uint64_t *assignWithCopy for AppInterfaceContext.RootViewControllerKind(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x3FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for AppInterfaceContext.RootViewControllerKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AppInterfaceContext.RootViewControllerKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AppInterfaceContext.RootViewControllerKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_BBF64(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_BBF70(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_BBF80(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.RootViewControllerKind()
{
  return &type metadata for AppInterfaceContext.RootViewControllerKind;
}

unint64_t sub_BBFA8()
{
  unint64_t result;

  result = qword_14AF560;
  if (!qword_14AF560)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_14AF560);
  }
  return result;
}

uint64_t sub_BBFEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_BC010(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_BC040(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t type metadata accessor for AppInterfaceContext.Activity.Destination(uint64_t a1)
{
  return sub_6345C(a1, qword_14AF7B8, (uint64_t)&nominal type descriptor for AppInterfaceContext.Activity.Destination);
}

void sub_BC078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v20[14];

  v20[7] = a6;
  v20[2] = a5;
  v20[5] = a4;
  v20[6] = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F90);
  __chkstk_darwin(v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C7F40);
  __chkstk_darwin(v8);
  v20[4] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v11 = type metadata accessor for SidebarMenu.Item(0);
  __chkstk_darwin(v11);
  v20[1] = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v20 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)v20 - v17;
  v20[13] = a1;
  sub_5BDB8(a1, (uint64_t)v20 - v17, type metadata accessor for SidebarMenu.Item);
  sub_5C04C((uint64_t)v18, (uint64_t)v15, type metadata accessor for SidebarMenu.Item);
  v19 = (char *)sub_BC208 + 4 * byte_106090C[swift_getEnumCaseMultiPayload(v15, v11)];
  __asm { BR              X10 }
}

void sub_BC208()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;

  v7 = *v1 + 1;
  swift_beginAccess(*(_QWORD *)(v6 - 128) + OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks, v6 - 104, 33, 0);
  v8 = *(_QWORD *)(v6 - 72);
  *(_QWORD *)(v6 - 152) = sub_45696C(v8);
  swift_endAccess(v6 - 104);
  sub_5BDB8(v8, v5, type metadata accessor for SidebarMenu.Item);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v2);
  v9 = v4 + *(int *)(v0 + 48);
  sub_5C238(v5, v4, (uint64_t *)&unk_14C7F40);
  sub_5C238(*(_QWORD *)(v6 - 136), v9, (uint64_t *)&unk_14C7F40);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v10(v4, 1, v2) == 1)
  {
    sub_56024(v5, (uint64_t *)&unk_14C7F40);
    if (v10(v9, 1, v2) == 1)
    {
      sub_56024(v4, (uint64_t *)&unk_14C7F40);
LABEL_8:
      **(_BYTE **)(v6 - 160) = v7;
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v6 - 144);
  sub_5C238(v4, v11, (uint64_t *)&unk_14C7F40);
  if (v10(v9, 1, v2) == 1)
  {
    sub_56024(v5, (uint64_t *)&unk_14C7F40);
    sub_5C0DC(v11, type metadata accessor for SidebarMenu.Item);
LABEL_6:
    sub_56024(v4, (uint64_t *)&unk_14C7F90);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(v6 - 168);
  sub_5C04C(v9, v12, type metadata accessor for SidebarMenu.Item);
  sub_8D1AA0(v11, v12);
  v14 = v13;
  sub_5C0DC(v12, type metadata accessor for SidebarMenu.Item);
  sub_56024(v5, (uint64_t *)&unk_14C7F40);
  sub_5C0DC(v11, type metadata accessor for SidebarMenu.Item);
  sub_56024(v4, (uint64_t *)&unk_14C7F40);
  if ((v14 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v15 = *(void **)(v6 - 152);
  sub_BE980((uint64_t)v15, *(_QWORD *)(v6 - 72));
  sub_6BB64(v6 - 104, v7);

}

uint64_t type metadata accessor for AppInterfaceContext.Activity(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14AF708, (uint64_t)&nominal type descriptor for AppInterfaceContext.Activity);
}

uint64_t sub_BC450(uint64_t a1)
{
  return sub_BCDC8(a1, type metadata accessor for AppInterfaceContext.Activity, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_B0E04);
}

uint64_t sub_BC464(unint64_t a1, unint64_t a2)
{
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  char v9;

  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a2 >> 62 != 1)
        goto LABEL_10;
      goto LABEL_8;
    }
    if (a2 >> 62 == 2)
    {
LABEL_8:
      v8 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
      sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
      v4 = v8;
      v5 = (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
      v6 = (unint64_t)v4;
      v7 = v5;
      goto LABEL_9;
    }
LABEL_10:
    v9 = 0;
    return v9 & 1;
  }
  if (a2 >> 62)
    goto LABEL_10;
  sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  v4 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
  v5 = (id)a2;
  v6 = a1;
  v7 = v5;
LABEL_9:
  v9 = static NSObject.== infix(_:_:)(v6, v7);

  return v9 & 1;
}

uint64_t sub_BC558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;
  char v13;

  if (!a4)
    return !a8;
  if (a4 == 1)
    return a8 == 1;
  if (a8 < 2)
    return 0;
  if (!a2)
  {
    if (a6)
      return 0;
    goto LABEL_16;
  }
  if (!a6)
    return 0;
  if (a1 == a5 && a2 == a6
    || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v13 & 1) != 0))
  {
LABEL_16:
    if (a3 != a7 || a4 != a8)
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
    return 1;
  }
  return result;
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_9(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_BC644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  char v19;

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v14);
    sub_45888C((uint64_t)&v19, a2, a3);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_17:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  v18 = v12 + 4;
  if (v12 + 4 >= v11)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v16 = *(_QWORD *)(v7 + 8 * v18);
  v12 += 4;
  if (v16)
    goto LABEL_17;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_24;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v16)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

_QWORD *sub_BC7C4(unint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;

  v2 = (_QWORD *)v1;
  *(_QWORD *)(v1 + 16) = 0;
  sub_196810((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 24) = v4;
  swift_unknownObjectWeakInit(v1 + 40, 0);
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  v5 = a1 >> 62;
  *(_QWORD *)(v1 + 32) = a1;
  if (a1 >> 62 == 2 || (_DWORD)v5 == 1)
  {
    v6 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    v7 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
  }
  else
  {
    v6 = (void *)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    v7 = (void *)a1;
  }
  v8 = qword_14AA920;
  v9 = v6;
  swift_retain(v2);
  if (v8 != -1)
    swift_once(&qword_14AA920, sub_BA688);
  objc_setAssociatedObject(v7, (const void *)qword_14AF2A0, v2, 0);
  swift_release(v2);
  v10 = sub_8AFF0();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v10) & 1) != 0)
  {
    type metadata accessor for BottomPlayerTabViewController();
    v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v12 = (void *)v2[8];
    v2[8] = v11;

  }
  if ((_DWORD)v5)
    v13 = v9;
  else
    v13 = (void *)a1;
  v14 = objc_msgSend(v13, "traitCollection");
  v15 = (char *)objc_msgSend(v14, "userInterfaceIdiom");

  if (v15 != (_BYTE *)&dword_4 + 2)
    sub_B0968();
  return v2;
}

uint64_t sub_BC950(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);

  sub_50C4C(v8, v9);
  return a1;
}

unint64_t sub_BC9CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14AD310;
  if (!qword_14AD310)
  {
    v1 = sub_4E684(255, (unint64_t *)&qword_14C5D80, UIScene_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_14AD310);
  }
  return result;
}

uint64_t sub_BCA24()
{
  uint64_t v0;

  return sub_B3A2D0(*(_QWORD **)(v0 + 16)) & 1;
}

double sub_BCA58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_B8D2C(a1, a2, v2);
}

uint64_t sub_BCA68()
{
  uint64_t v0;

  return sub_B39748(*(_QWORD *)(v0 + 16)) & 1;
}

double sub_BCA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_B8910(a1, a2, v2);
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v6, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease(v6[1]);
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      break;
    case 2u:

      v13 = (char *)v6[2];
      goto LABEL_17;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14))
        (*(void (**)(id *, uint64_t))(v15 + 8))(v6, v14);
      v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v6 + v16[5] + 8));
      v17 = (char *)v6 + v16[6];
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = v16[7];
      goto LABEL_21;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v6 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_21:
      v26 = (id *)((char *)v6 + v20);
      if (*v26)
        swift_release(v26[1]);
      break;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v6, v25);
      v13 = *(char **)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v13 != (_BYTE *)&dword_0 + 1)
LABEL_17:
        swift_bridgeObjectRelease(v13);
      break;
    default:
      break;
  }
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_BCDB4(uint64_t a1)
{
  return sub_BCDC8(a1, type metadata accessor for AppInterfaceContext.Activity.Destination, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_B8448);
}

uint64_t sub_BCDC8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v5 + 32) & ~v5));
}

uint64_t sub_BCE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  id *v14;
  int EnumCaseMultiPayload;
  uint64_t v17;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + v6 + 16) & ~v9;
  v17 = *(_QWORD *)(v8 + 64);
  v11 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = v0 + v4;
  v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  ((void (*)(uint64_t, uint64_t, __n128))v13)(v12, v1, v11);
  swift_release(*(_QWORD *)(v0 + v5));
  if (*(_QWORD *)(v0 + v6))
    swift_release(*(_QWORD *)(v0 + v6 + 8));
  v14 = (id *)(v0 + v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v10, v7);
  if (EnumCaseMultiPayload == 4)
  {

  }
  else if (EnumCaseMultiPayload == 3)
  {
    v13(v0 + v10, v1);
  }
  return swift_deallocObject(v0, v10 + v17, v3 | v9 | 7);
}

uint64_t sub_BCF3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = *(_QWORD *)(type metadata accessor for Artist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  v9 = (v8 + v7 + 16) & ~v8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = v1 + v7;
  v15 = *(_QWORD *)(v1 + v7);
  v16 = *(_QWORD *)(v14 + 8);
  v17 = v1 + v9;
  v18 = (_QWORD *)swift_task_alloc(dword_14AF58C);
  *(_QWORD *)(v2 + 16) = v18;
  *v18 = v2;
  v18[1] = sub_C3150;
  return sub_B8290(a1, v10, v11, v12, v13, v15, v16, v17);
}

unint64_t sub_BD024()
{
  unint64_t result;

  result = qword_14AF598;
  if (!qword_14AF598)
  {
    result = swift_getWitnessTable(&unk_1060D18, &type metadata for AppInterfaceContext.Activity.Error);
    atomic_store(result, (unint64_t *)&qword_14AF598);
  }
  return result;
}

uint64_t sub_BD06C()
{
  return sub_BD154((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_B8180);
}

uint64_t objectdestroy_46Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  v6 = (id *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 4)
  {

  }
  else if (EnumCaseMultiPayload == 3)
  {
    v8 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_BD148()
{
  return sub_BD154((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_B8084);
}

uint64_t sub_BD154(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), *((_QWORD *)v1 + 5), *((_QWORD *)v1 + 6), &v1[(v2 + 56) & ~v2]);
}

uint64_t objectdestroy_58Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  v6 = (id *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 4)
  {

  }
  else if (EnumCaseMultiPayload == 3)
  {
    v8 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_BD25C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  sub_B7EAC(a1, *(_BYTE *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t objectdestroy_39Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  v6 = (id *)(v0 + v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 4)
  {

  }
  else if (EnumCaseMultiPayload == 3)
  {
    v8 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_BD364()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  sub_B7DE0(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_BD398()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;

  v1 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*((_QWORD *)v0 + 2));
  if (*((_QWORD *)v0 + 3))
    swift_release(*((_QWORD *)v0 + 4));
  v6 = (id *)&v0[v4];
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(&v0[v4], v1);
  if (EnumCaseMultiPayload == 4)
  {

  }
  else if (EnumCaseMultiPayload == 3)
  {
    v8 = type metadata accessor for Artist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(&v0[v4], v8);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_BD454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  return sub_B7B0C(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

void sub_BD4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity.Destination(0) - 8)
                          + 80);
  sub_B7A40(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

void sub_BD4F4(uint64_t *a1)
{
  uint64_t v1;

  sub_B465C(a1, *(void **)(v1 + 16), *(NSObject **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE **)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_BD528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRetain(a3);
  return result;
}

uint64_t sub_BD53C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_BD560(uint64_t a1)
{
  uint64_t v1;

  sub_B2A38(a1, v1);
}

uint64_t sub_BD568()
{
  uint64_t v0;
  int v1;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 24);
  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

void sub_BD5C0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_B2ABC(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_BD5CC(char *a1)
{
  uint64_t v1;

  return sub_B3070(a1, v1);
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 1u:
      swift_bridgeObjectRelease(v6[1]);
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 2u:

      v13 = (char *)v6[2];
      goto LABEL_19;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v4, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0 + v4, v14);
      v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v6 + v16[5] + 8));
      v17 = (char *)v6 + v16[6];
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = v16[7];
      goto LABEL_23;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v6 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_23:
      v26 = (id *)((char *)v6 + v20);
      if (*v26)
        swift_release(v26[1]);
      break;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v0 + v4, v25);
      v13 = *(char **)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v13 != (_BYTE *)&dword_0 + 1)
LABEL_19:
        swift_bridgeObjectRelease(v13);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_BD8D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  sub_B3DEC(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_BD900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v5 = v0 + v3;
  v6 = type metadata accessor for SearchScope(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (*(_QWORD *)(v0 + v4))
    swift_release(*(_QWORD *)(v0 + v4 + 8));
  return swift_deallocObject(v0, v4 + 16, v2 | 7);
}

void sub_BD9C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_B27E8(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(void (**)(uint64_t, __n128))((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_BDA20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_BDA4C(uint64_t a1)
{
  uint64_t v1;

  return sub_B33EC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_BDA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_BDAF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_14AF5B4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_C3150;
  return sub_B3708(a1, v6, v7, v8, v9, v10, v11);
}

unint64_t sub_BDBB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14BAFB0;
  if (!qword_14BAFB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14AE7A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_14BAFB0);
  }
  return result;
}

uint64_t sub_BDBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

double sub_BDC8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_BA890(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_BDCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  v7 = v0 + v6;
  swift_unknownObjectWeakDestroy(v0 + v6);
  v8 = *(unsigned __int8 *)(v0 + v6 + 48);
  if (v8 != 255)
    sub_626A8(*(id *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), v8);
  if (*(_QWORD *)(v7 + 56))
    swift_release(*(_QWORD *)(v7 + 64));
  return swift_deallocObject(v0, v6 + 72, v3 | 7);
}

double sub_BDD88()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_B2C80(v0 + v2, *(void **)(v0 + v3), v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_BDDD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  int v9;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  v8 = v0 + v6;
  swift_unknownObjectWeakDestroy(v0 + v6);
  v9 = *(unsigned __int8 *)(v0 + v6 + 48);
  if (v9 != 255)
    sub_626A8(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  return swift_deallocObject(v0, v6 + 72, v3 | 7);
}

uint64_t sub_BDE9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc(dword_14AF5CC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_50F8C;
  return sub_B2E20(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_BDF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 1u:
      swift_bridgeObjectRelease(v6[1]);
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 2u:

      v13 = (char *)v6[2];
      goto LABEL_19;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v4, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0 + v4, v14);
      v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v6 + v16[5] + 8));
      v17 = (char *)v6 + v16[6];
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = v16[7];
      goto LABEL_23;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v6 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_23:
      v26 = (id *)((char *)v6 + v20);
      if (*v26)
        swift_release(v26[1]);
      break;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v0 + v4, v25);
      v13 = *(char **)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v13 != (_BYTE *)&dword_0 + 1)
LABEL_19:
        swift_bridgeObjectRelease(v13);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_BE250()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  sub_B42D4(*(void **)(v0 + 16), *(void (**)(_QWORD))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_BE284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);

  swift_unknownObjectWeakDestroy(v0 + 24);
  v5 = *(unsigned __int8 *)(v0 + 72);
  if (v5 != 255)
    sub_626A8(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v5);
  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));
  v6 = (v3 + 120) & ~v3;
  if (*(_QWORD *)(v0 + 104))
    swift_release(*(_QWORD *)(v0 + 112));
  v7 = (id *)(v0 + v6);
  switch(swift_getEnumCaseMultiPayload(v0 + v6, v1))
  {
    case 0u:
      v8 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v6, v8);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v10 = type metadata accessor for Artist(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v6, v10);
      }
      return swift_deallocObject(v0, v6 + v4, v3 | 7);
    case 1u:
      swift_bridgeObjectRelease(v7[1]);
      v11 = (char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v12 = type metadata accessor for SearchScope(0);
      v13 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      return swift_deallocObject(v0, v6 + v4, v3 | 7);
    case 2u:

      v14 = (char *)v7[2];
      goto LABEL_23;
    case 3u:
      v15 = type metadata accessor for Playlist.Folder(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v0 + v6, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v6, v15);
      v17 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v7 + v17[5] + 8));
      v18 = (char *)v7 + v17[6];
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
      v21 = v17[7];
      goto LABEL_27;
    case 4u:

      v22 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v23 = (id *)((char *)v7 + *(int *)(v22 + 28));
      v24 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
      {
        if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
        }
        else
        {

        }
      }
      v21 = *(int *)(v22 + 32);
LABEL_27:
      v27 = (id *)((char *)v7 + v21);
      if (*v27)
        swift_release(v27[1]);
      break;
    case 5u:
      v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v0 + v6, v26);
      v14 = *(char **)((char *)v7 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v14 != (_BYTE *)&dword_0 + 1)
LABEL_23:
        swift_bridgeObjectRelease(v14);
      break;
    default:
      return swift_deallocObject(v0, v6 + v4, v3 | 7);
  }
  return swift_deallocObject(v0, v6 + v4, v3 | 7);
}

double sub_BE5B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  return sub_B3EA0(*(void **)(v0 + 16), v0 + 24, *(unsigned __int8 *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v0 + ((v1 + 120) & ~v1));
}

uint64_t sub_BE5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      }
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 1u:
      swift_bridgeObjectRelease(v6[1]);
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 2u:

      v13 = (char *)v6[2];
      goto LABEL_17;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v4, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0 + v4, v14);
      v16 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)v6 + v16[5] + 8));
      v17 = (char *)v6 + v16[6];
      v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      v20 = v16[7];
      goto LABEL_21;
    case 4u:

      v21 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v22 = (id *)((char *)v6 + *(int *)(v21 + 28));
      v23 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
        }
        else
        {

        }
      }
      v20 = *(int *)(v21 + 32);
LABEL_21:
      v26 = (id *)((char *)v6 + v20);
      if (*v26)
        swift_release(v26[1]);
      break;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v0 + v4, v25);
      v13 = *(char **)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v13 != (_BYTE *)&dword_0 + 1)
LABEL_17:
        swift_bridgeObjectRelease(v13);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_BE8D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8) + 80);
  return sub_B18C0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t type metadata accessor for AppInterfaceContext.Error(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14AF688, (uint64_t)&nominal type descriptor for AppInterfaceContext.Error);
}

uint64_t sub_BE930()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_BE954()
{
  uint64_t v0;

  return sub_AFE8C(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

void sub_BE960(uint64_t a1)
{
  uint64_t *v1;

  sub_BC078(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_BE980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = v2;
  swift_beginAccess(v3 + OBJC_IVAR____TtC16MusicApplication19SplitViewController_navigationStacks, v11, 33, 0);
  sub_456B94(0, a2);
  swift_endAccess(v11);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16MusicApplication19SplitViewController_contentViewController);
  v7 = OBJC_IVAR____TtCC16MusicApplication19SplitViewControllerP33_7A1626E95DCA8A4D36C577E39B8D78C121PaletteViewController_contentNavigationController;
  if (*(_QWORD *)(v6
                 + OBJC_IVAR____TtCC16MusicApplication19SplitViewControllerP33_7A1626E95DCA8A4D36C577E39B8D78C121PaletteViewController_contentNavigationController) == a1)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NavigationController()), "init");
    v9 = *(void **)(v6 + v7);
    *(_QWORD *)(v6 + v7) = v8;
    v10 = v8;
    sub_458D00(v9);

  }
}

uint64_t sub_BEA44()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_BEA80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_14AF5FC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return sub_BAF88(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_BEB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_BEBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + v6);
  v12 = *v11;
  v13 = v11[1];
  v14 = *(_QWORD *)(v1 + v7);
  v15 = (_QWORD *)swift_task_alloc(dword_14AF60C);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_C3150;
  return sub_BAA30(a1, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_BEC70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = type metadata accessor for AppInterfaceContext.Activity(0);
    v7 = (char *)&loc_BECD8 + 4 * byte_1060930[swift_getEnumCaseMultiPayload(a2, v6)];
    __asm { BR              X10 }
  }
  v8 = *a2;
  *a1 = *a2;
  v9 = v8 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain(v8);
  return v9;
}

double sub_BF1CC(id *a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  void (*v7)(id *, uint64_t);
  id *v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = type metadata accessor for AppInterfaceContext.Activity(0);
  switch(swift_getEnumCaseMultiPayload(a1, v2))
  {
    case 0u:
      v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v6 = type metadata accessor for Artist(0);
        v7 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
        v8 = a1;
        goto LABEL_7;
      }
      return result;
    case 1u:
      swift_bridgeObjectRelease(a1[1]);
      v9 = (id *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48));
      v10 = type metadata accessor for SearchScope(0);
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v7 = *(void (**)(id *, uint64_t))(v11 + 8);
        v8 = v9;
        v6 = v10;
LABEL_7:
        v7(v8, v6);
      }
      return result;
    case 2u:

      v12 = (char *)a1[2];
      goto LABEL_18;
    case 3u:
      v13 = type metadata accessor for Playlist.Folder(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v14 + 48))(a1, 1, v13))
        (*(void (**)(id *, uint64_t))(v14 + 8))(a1, v13);
      v15 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)a1 + v15[5] + 8));
      v16 = (char *)a1 + v15[6];
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      v19 = v15[7];
      goto LABEL_22;
    case 4u:

      v20 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v21 = (id *)((char *)a1 + *(int *)(v20 + 28));
      v22 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
      {
        if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
        }
        else
        {

        }
      }
      v19 = *(int *)(v20 + 32);
LABEL_22:
      v25 = (id *)((char *)a1 + v19);
      if (*v25)
        *(_QWORD *)&result = swift_release(v25[1]).n128_u64[0];
      break;
    case 5u:
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
      v12 = *(char **)((char *)a1 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v12 != (_BYTE *)&dword_0 + 1)
LABEL_18:
        *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_BF4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  v3 = type metadata accessor for AppInterfaceContext.Activity(0);
  v4 = (char *)sub_BF50C + 4 * byte_106093C[swift_getEnumCaseMultiPayload(a2, v3)];
  __asm { BR              X10 }
}

_QWORD *sub_BF50C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;

  v25 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v25);
  if (EnumCaseMultiPayload == 4)
  {
    v29 = (void *)*v24;
    v30 = (void *)v24[1];
    *v22 = v29;
    v22[1] = v30;
    v31 = v29;
    v32 = v30;
    swift_storeEnumTagMultiPayload(v22, v25, 4);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v27 = type metadata accessor for Artist(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v24, v27);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
    *((_BYTE *)v22 + *(int *)(v28 + 48)) = *((_BYTE *)v24 + *(int *)(v28 + 48));
    swift_storeEnumTagMultiPayload(v22, v25, 3);
  }
  else
  {
    memcpy(v22, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  return v22;
}

uint64_t sub_BF9E0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char *v4;

  if (result != a2)
  {
    sub_5C0DC(result, type metadata accessor for AppInterfaceContext.Activity);
    v3 = type metadata accessor for AppInterfaceContext.Activity(0);
    v4 = (char *)&loc_BFA54 + 4 * byte_1060942[swift_getEnumCaseMultiPayload(a2, v3)];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *sub_BFF50(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  switch(swift_getEnumCaseMultiPayload(a2, v4))
  {
    case 0u:
      v5 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      if (swift_getEnumCaseMultiPayload(a2, v5) == 3)
      {
        v6 = type metadata accessor for Artist(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
        *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
        swift_storeEnumTagMultiPayload(a1, v5, 3);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      v28 = a1;
      v29 = v4;
      v30 = 0;
      goto LABEL_32;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v28 = a1;
      v29 = v4;
      v30 = 1;
      goto LABEL_32;
    case 3u:
      v14 = type metadata accessor for Playlist.Folder(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 32))(a1, a2, v14);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
      v31 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      *(_OWORD *)((char *)a1 + v31[5]) = *(_OWORD *)((char *)a2 + v31[5]);
      v32 = v31[6];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B70C0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v38 = v31[7];
      v39 = (_QWORD *)((char *)a1 + v38);
      v40 = (_QWORD *)((char *)a2 + v38);
      v41 = *v40;
      if (*v40)
      {
        v42 = v40[1];
        *v39 = v41;
        v39[1] = v42;
      }
      else
      {
        *(_OWORD *)v39 = *(_OWORD *)v40;
      }
      v28 = a1;
      v29 = v4;
      v30 = 3;
      goto LABEL_32;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v17 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v18 = *(int *)(v17 + 28);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = type metadata accessor for SourcedSongs(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B7090);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v19, v20, v43);
          swift_storeEnumTagMultiPayload(v19, v21, 1);
        }
        else
        {
          memcpy(v19, v20, *(_QWORD *)(v22 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v44 = *(int *)(v17 + 32);
      v45 = (_QWORD *)((char *)a1 + v44);
      v46 = (_QWORD *)((char *)a2 + v44);
      v47 = *v46;
      if (*v46)
      {
        v48 = v46[1];
        *v45 = v47;
        v45[1] = v48;
      }
      else
      {
        *(_OWORD *)v45 = *(_OWORD *)v46;
      }
      v28 = a1;
      v29 = v4;
      v30 = 4;
      goto LABEL_32;
    case 5u:
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
      v25 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
      v28 = a1;
      v29 = v4;
      v30 = 5;
LABEL_32:
      swift_storeEnumTagMultiPayload(v28, v29, v30);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_C03E0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity);
    v4 = type metadata accessor for AppInterfaceContext.Activity(0);
    switch(swift_getEnumCaseMultiPayload(a2, v4))
    {
      case 0u:
        v5 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        if (swift_getEnumCaseMultiPayload(a2, v5) == 3)
        {
          v6 = type metadata accessor for Artist(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
          v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
          *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
          swift_storeEnumTagMultiPayload(a1, v5, 3);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        }
        v28 = a1;
        v29 = v4;
        v30 = 0;
        goto LABEL_33;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = type metadata accessor for SearchScope(0);
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        v28 = a1;
        v29 = v4;
        v30 = 1;
        goto LABEL_33;
      case 3u:
        v14 = type metadata accessor for Playlist.Folder(0);
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 32))(a1, a2, v14);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        v31 = (int *)type metadata accessor for PlaylistCreation.Context(0);
        *(_OWORD *)((char *)a1 + v31[5]) = *(_OWORD *)((char *)a2 + v31[5]);
        v32 = v31[6];
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B70C0);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v39 = v31[7];
        v40 = (_QWORD *)((char *)a1 + v39);
        v41 = (_QWORD *)((char *)a2 + v39);
        v42 = *v41;
        if (*v41)
        {
          v43 = v41[1];
          *v40 = v42;
          v40[1] = v43;
        }
        else
        {
          *(_OWORD *)v40 = *(_OWORD *)v41;
        }
        v28 = a1;
        v29 = v4;
        v30 = 3;
        goto LABEL_33;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v17 = type metadata accessor for PlaylistCreation.LegacyContext(0);
        v18 = *(int *)(v17 + 28);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = type metadata accessor for SourcedSongs(0);
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B7090);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v19, v20, v38);
            swift_storeEnumTagMultiPayload(v19, v21, 1);
          }
          else
          {
            memcpy(v19, v20, *(_QWORD *)(v22 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        v44 = *(int *)(v17 + 32);
        v45 = (_QWORD *)((char *)a1 + v44);
        v46 = (_QWORD *)((char *)a2 + v44);
        v47 = *v46;
        if (*v46)
        {
          v48 = v46[1];
          *v45 = v47;
          v45[1] = v48;
        }
        else
        {
          *(_OWORD *)v45 = *(_OWORD *)v46;
        }
        v28 = a1;
        v29 = v4;
        v30 = 4;
        goto LABEL_33;
      case 5u:
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
        v25 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        *(_OWORD *)v26 = *(_OWORD *)v27;
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        v28 = a1;
        v29 = v4;
        v30 = 5;
LABEL_33:
        swift_storeEnumTagMultiPayload(v28, v29, v30);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_C0888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppInterfaceContext.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_C08C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for AppInterfaceContext.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_C0910(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for AppInterfaceContext.Activity(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase(a1, 256, v4 + 64);
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushNotificationObserver.PushConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for PushNotificationObserver.PushConfiguration(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for PushNotificationObserver.PushConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for PushNotificationObserver.PushConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork.Content(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Artwork.Content(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.Activity.Error()
{
  return &type metadata for AppInterfaceContext.Activity.Error;
}

unint64_t destroy for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  result = *(_QWORD *)(a1 + 24);
  if (result >= 0xFFFFFFFF)
  {
    v3 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(v3);
  }
  return result;
}

uint64_t initializeWithCopy for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v3;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for AppInterfaceContext.Activity.PresentationOptions(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = a2[3];
  if (a1[3] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v9 = a2[1];
      a1[1] = v9;
      a1[2] = a2[2];
      v10 = a2[3];
      a1[3] = v10;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_7:
    v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v5 = a2[1];
  v6 = a1[1];
  a1[1] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a1 + 24);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 < 0xFFFFFFFF)
  {
    v8 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(v8);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppInterfaceContext.Activity.PresentationOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppInterfaceContext.Activity.PresentationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_C0D64(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_C0D7C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.Activity.PresentationOptions()
{
  return &type metadata for AppInterfaceContext.Activity.PresentationOptions;
}

uint64_t storeEnumTagSinglePayload for AppInterfaceContext.Activity.Destination.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C0DFC + 4 * byte_1060959[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C0E30 + 4 * byte_1060954[v4]))();
}

uint64_t sub_C0E30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C0E38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC0E40);
  return result;
}

uint64_t sub_C0E4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC0E54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C0E58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C0E60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppInterfaceContext.Activity.Destination.Source()
{
  return &type metadata for AppInterfaceContext.Activity.Destination.Source;
}

uint64_t sub_C0E7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_C0EDC + 4 * byte_106095E[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

double sub_C13D0(id *a1, uint64_t a2)
{
  double result;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  void (*v7)(id *, uint64_t);
  id *v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v4 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v6 = type metadata accessor for Artist(0);
        v7 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
        v8 = a1;
        goto LABEL_7;
      }
      return result;
    case 1u:
      swift_bridgeObjectRelease(a1[1]);
      v9 = (id *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48));
      v10 = type metadata accessor for SearchScope(0);
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v7 = *(void (**)(id *, uint64_t))(v11 + 8);
        v8 = v9;
        v6 = v10;
LABEL_7:
        v7(v8, v6);
      }
      return result;
    case 2u:

      v12 = (char *)a1[2];
      goto LABEL_18;
    case 3u:
      v13 = type metadata accessor for Playlist.Folder(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v14 + 48))(a1, 1, v13))
        (*(void (**)(id *, uint64_t))(v14 + 8))(a1, v13);
      v15 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease(*(id *)((char *)a1 + v15[5] + 8));
      v16 = (char *)a1 + v15[6];
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      v19 = v15[7];
      goto LABEL_22;
    case 4u:

      v20 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v21 = (id *)((char *)a1 + *(int *)(v20 + 28));
      v22 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
      {
        if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
        }
        else
        {

        }
      }
      v19 = *(int *)(v20 + 32);
LABEL_22:
      v25 = (id *)((char *)a1 + v19);
      if (*v25)
        *(_QWORD *)&result = swift_release(v25[1]).n128_u64[0];
      break;
    case 5u:
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
      v12 = *(char **)((char *)a1 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16);
      if (v12 != (_BYTE *)&dword_0 + 1)
LABEL_18:
        *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_C16A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_C16F8 + 4 * byte_106096A[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

_QWORD *sub_C16F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;

  v25 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v25);
  if (EnumCaseMultiPayload == 4)
  {
    v29 = (void *)*v24;
    v30 = (void *)v24[1];
    *v22 = v29;
    v22[1] = v30;
    v31 = v29;
    v32 = v30;
    swift_storeEnumTagMultiPayload(v22, v25, 4);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v27 = type metadata accessor for Artist(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v22, v24, v27);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
    *((_BYTE *)v22 + *(int *)(v28 + 48)) = *((_BYTE *)v24 + *(int *)(v28 + 48));
    swift_storeEnumTagMultiPayload(v22, v25, 3);
  }
  else
  {
    memcpy(v22, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  return v22;
}

uint64_t sub_C1BCC(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_5C0DC(result, type metadata accessor for AppInterfaceContext.Activity);
    v5 = (char *)&loc_C1C38 + 4 * byte_1060970[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *sub_C2134(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
      {
        v7 = type metadata accessor for Artist(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
        *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
        swift_storeEnumTagMultiPayload(a1, v6, 3);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      v29 = a1;
      v30 = a3;
      v31 = 0;
      goto LABEL_32;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for SearchScope(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v29 = a1;
      v30 = a3;
      v31 = 1;
      goto LABEL_32;
    case 3u:
      v15 = type metadata accessor for Playlist.Folder(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 32))(a1, a2, v15);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
      v32 = (int *)type metadata accessor for PlaylistCreation.Context(0);
      *(_OWORD *)((char *)a1 + v32[5]) = *(_OWORD *)((char *)a2 + v32[5]);
      v33 = v32[6];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B70C0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v32[7];
      v40 = (_QWORD *)((char *)a1 + v39);
      v41 = (_QWORD *)((char *)a2 + v39);
      v42 = *v41;
      if (*v41)
      {
        v43 = v41[1];
        *v40 = v42;
        v40[1] = v43;
      }
      else
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
      }
      v29 = a1;
      v30 = a3;
      v31 = 3;
      goto LABEL_32;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v19 = *(int *)(v18 + 28);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = type metadata accessor for SourcedSongs(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B7090);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v20, v21, v44);
          swift_storeEnumTagMultiPayload(v20, v22, 1);
        }
        else
        {
          memcpy(v20, v21, *(_QWORD *)(v23 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v45 = *(int *)(v18 + 32);
      v46 = (_QWORD *)((char *)a1 + v45);
      v47 = (_QWORD *)((char *)a2 + v45);
      v48 = *v47;
      if (*v47)
      {
        v49 = v47[1];
        *v46 = v48;
        v46[1] = v49;
      }
      else
      {
        *(_OWORD *)v46 = *(_OWORD *)v47;
      }
      v29 = a1;
      v30 = a3;
      v31 = 4;
      goto LABEL_32;
    case 5u:
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
      v26 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
      v29 = a1;
      v30 = a3;
      v31 = 5;
LABEL_32:
      swift_storeEnumTagMultiPayload(v29, v30, v31);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_C25BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        if (swift_getEnumCaseMultiPayload(a2, v6) == 3)
        {
          v7 = type metadata accessor for Artist(0);
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
          *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
          swift_storeEnumTagMultiPayload(a1, v6, 3);
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        }
        v29 = a1;
        v30 = a3;
        v31 = 0;
        goto LABEL_33;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for SearchScope(0);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF5A8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        v29 = a1;
        v30 = a3;
        v31 = 1;
        goto LABEL_33;
      case 3u:
        v15 = type metadata accessor for Playlist.Folder(0);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE650);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        v32 = (int *)type metadata accessor for PlaylistCreation.Context(0);
        *(_OWORD *)((char *)a1 + v32[5]) = *(_OWORD *)((char *)a2 + v32[5]);
        v33 = v32[6];
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B70C0);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        v40 = v32[7];
        v41 = (_QWORD *)((char *)a1 + v40);
        v42 = (_QWORD *)((char *)a2 + v40);
        v43 = *v42;
        if (*v42)
        {
          v44 = v42[1];
          *v41 = v43;
          v41[1] = v44;
        }
        else
        {
          *(_OWORD *)v41 = *(_OWORD *)v42;
        }
        v29 = a1;
        v30 = a3;
        v31 = 3;
        goto LABEL_33;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v18 = type metadata accessor for PlaylistCreation.LegacyContext(0);
        v19 = *(int *)(v18 + 28);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for SourcedSongs(0);
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B7090);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
          {
            v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v20, v21, v39);
            swift_storeEnumTagMultiPayload(v20, v22, 1);
          }
          else
          {
            memcpy(v20, v21, *(_QWORD *)(v23 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v45 = *(int *)(v18 + 32);
        v46 = (_QWORD *)((char *)a1 + v45);
        v47 = (_QWORD *)((char *)a2 + v45);
        v48 = *v47;
        if (*v47)
        {
          v49 = v47[1];
          *v46 = v48;
          v46[1] = v49;
        }
        else
        {
          *(_OWORD *)v46 = *(_OWORD *)v47;
        }
        v29 = a1;
        v30 = a3;
        v31 = 4;
        goto LABEL_33;
      case 5u:
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        v26 = *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
        v29 = a1;
        v30 = a3;
        v31 = 5;
LABEL_33:
        swift_storeEnumTagMultiPayload(v29, v30, v31);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_C2A5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE v12[32];
  _QWORD v13[6];

  v2 = type metadata accessor for AppInterfaceContext.Activity.Destination(319);
  if (v3 <= 0x3F)
  {
    v13[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_C2B4C(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v12, &unk_1060B68, *(_QWORD *)(v4 - 8) + 64);
      v13[1] = v12;
      v13[2] = &unk_1060B80;
      v6 = type metadata accessor for PlaylistCreation.Context(319);
      if (v7 <= 0x3F)
      {
        v13[3] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for PlaylistCreation.LegacyContext(319);
        if (v9 <= 0x3F)
        {
          v13[4] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for PlaylistPicker.Context(319);
          if (v11 <= 0x3F)
          {
            v13[5] = *(_QWORD *)(v10 - 8) + 64;
            swift_initEnumMetadataMultiPayload(a1, 256, 6, v13);
          }
        }
      }
    }
  }
}

void sub_C2B4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14AF718)
  {
    v2 = type metadata accessor for SearchScope(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14AF718);
  }
}

char *sub_C2BA0(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 4)
    {
      v12 = *a2;
      v13 = a2[1];
      *(_QWORD *)a1 = v12;
      *((_QWORD *)a1 + 1) = v13;
      v14 = v12;
      v15 = v13;
      swift_storeEnumTagMultiPayload(a1, a3, 4);
    }
    else if (EnumCaseMultiPayload == 3)
    {
      v9 = type metadata accessor for Artist(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
      a1[*(int *)(v10 + 48)] = *((_BYTE *)a2 + *(int *)(v10 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

void sub_C2C98(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 4)
  {

  }
  else if (EnumCaseMultiPayload == 3)
  {
    v4 = type metadata accessor for Artist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
}

_QWORD *sub_C2D04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 4)
  {
    v9 = (void *)*a2;
    v10 = (void *)a2[1];
    *a1 = v9;
    a1[1] = v10;
    v11 = v9;
    v12 = v10;
    swift_storeEnumTagMultiPayload(a1, a3, 4);
  }
  else if (EnumCaseMultiPayload == 3)
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_C2DD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity.Destination);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 4)
    {
      v9 = (void *)*a2;
      *a1 = *a2;
      v10 = (void *)a2[1];
      a1[1] = v10;
      v11 = v9;
      v12 = v10;
      swift_storeEnumTagMultiPayload(a1, a3, 4);
    }
    else if (EnumCaseMultiPayload == 3)
    {
      v7 = type metadata accessor for Artist(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_BYTE *sub_C2EC4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
  {
    v6 = type metadata accessor for Artist(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 3);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_C2F68(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for AppInterfaceContext.Activity.Destination);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 3)
    {
      v6 = type metadata accessor for Artist(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF580);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 3);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_C3024(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[5];

  v5[0] = &unk_1060BA8;
  v5[1] = &unk_1060BC0;
  v5[2] = &unk_1060BA8;
  result = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_1060BD8);
    v5[3] = v4;
    v5[4] = &unk_1060BF0;
    swift_initEnumMetadataMultiPayload(a1, 256, 5, v5);
    return 0;
  }
  return result;
}

unint64_t sub_C30C0()
{
  unint64_t result;

  result = qword_14AF7F0;
  if (!qword_14AF7F0)
  {
    result = swift_getWitnessTable(&unk_1060C48, &type metadata for AppInterfaceContext.Activity.Destination.Source);
    atomic_store(result, (unint64_t *)&qword_14AF7F0);
  }
  return result;
}

unint64_t sub_C3108()
{
  unint64_t result;

  result = qword_14AF7F8;
  if (!qword_14AF7F8)
  {
    result = swift_getWitnessTable(&unk_1060C70, &type metadata for AppInterfaceContext.Activity.PresentationOptions);
    atomic_store(result, (unint64_t *)&qword_14AF7F8);
  }
  return result;
}

__int128 *initializeBufferWithCopyOfBuffer for PlayAction(__int128 *a1, __int128 *a2)
{
  __int128 v3;

  v3 = *a2;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t destroy for PlayAction(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t *assignWithCopy for PlayAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v5);
  a1[1] = v4;
  return a1;
}

_QWORD *assignWithTake for PlayAction(_QWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease(*a1);
  *(_OWORD *)a1 = *a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for DragDropController.DropContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DragDropController.DropContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayAction()
{
  return &type metadata for PlayAction;
}

void sub_C333C(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v11 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 8) + 24))(ObjectType);
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(v11) && (MPModelPlaylist.supportsSing.getter() & 1) != 0)
  {
    v12 = String.LocalizationValue.init(stringLiteral:)(0x6953207472617453, 0xED0000676E69676ELL);
    static Locale.current.getter(v12);
    v13 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v15 = v14;
    v16 = (id)*NSBundle.musicCoreUIBundle.unsafeMutableAddressor();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v17, v16);

    ActionDisplayConfiguration.init(title:subtitle:image:attributes:)(v13, v15, 0, 0, (uint64_t)v18, 0, &v31);
    v29 = v32;
    v30 = v31;
    v28 = v33;

    v20 = v28;
    v19 = v29;
    v21 = v30;
  }
  else
  {

    v22 = String.LocalizationValue.init(stringLiteral:)(2036427856, 0xE400000000000000);
    static Locale.current.getter(v22);
    v23 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
    v25 = v24;
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v26);

    ActionDisplayConfiguration.init(title:subtitle:image:attributes:)(v23, v25, 0, 0, (uint64_t)v27, 0, &v31);
    v21 = v31;
    v19 = v32;
    v20 = v33;
  }
  *a2 = v21;
  a2[1] = v19;
  a2[2] = v20;
}

uint64_t sub_C35F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  Swift::String v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[56];
  __int128 v32[2];
  __int128 v33[2];
  _OWORD v34[7];
  uint64_t v35;
  __int128 v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v4 = swift_allocObject(&unk_1344388, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)&v34[0] = 0;
  *((_QWORD *)&v34[0] + 1) = 0xE000000000000000;
  swift_unknownObjectRetain(a1);
  _StringGuts.grow(_:)(54);
  v5._countAndFlagsBits = 0x7369206C65646F4DLL;
  v5._object = (void *)0xE900000000000020;
  String.append(_:)(v5);
  ObjectType = swift_getObjectType();
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  v9 = (void *)v8(ObjectType, v7);
  v10 = swift_getObjectType();

  v11._countAndFlagsBits = _typeName(_:qualified:)(v10, 0);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 0xD00000000000002BLL;
  v13._object = (void *)0x80000000010C6250;
  String.append(_:)(v13);
  ActionCondition.init(_:_:redactLog:file:line:)((uint64_t)sub_C4620, v4, 0, 0xE000000000000000, 0, (uint64_t (*)())0xD00000000000005DLL, (uint64_t (*)())0x80000000010C6280, (uint64_t (*)())&stru_20.segname[5], (uint64_t (**)())v32);
  v14 = static ActionConditionEvaluator.buildExpression(_:)(v32);
  swift_release(*((_QWORD *)&v32[0] + 1));
  v39 = v32[1];
  sub_8B134((uint64_t)&v39);
  v15 = swift_allocObject(&unk_13443B0, 32, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  ActionCondition.init(_:_:redactLog:file:line:)((uint64_t)sub_C464C, v15, 0xD000000000000019, 0x80000000010C62E0, 0, (uint64_t (*)())0xD00000000000005DLL, (uint64_t (*)())0x80000000010C6280, (uint64_t (*)())&stru_20.segname[9], (uint64_t (**)())v33);
  v16 = static ActionConditionEvaluator.buildExpression(_:)(v33);
  v17 = *((_QWORD *)&v33[0] + 1);
  swift_unknownObjectRetain(a1);
  swift_release(v17);
  v38 = v33[1];
  sub_8B134((uint64_t)&v38);
  v18 = v8(ObjectType, v7);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v34, ObjectType, a2);
  v19 = swift_allocObject(&unk_13443D8, 144, 7);
  v20 = v34[5];
  *(_OWORD *)(v19 + 88) = v34[4];
  *(_OWORD *)(v19 + 104) = v20;
  *(_OWORD *)(v19 + 120) = v34[6];
  v21 = v34[1];
  *(_OWORD *)(v19 + 24) = v34[0];
  *(_OWORD *)(v19 + 40) = v21;
  v22 = v34[3];
  *(_OWORD *)(v19 + 56) = v34[2];
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 136) = v35;
  *(_OWORD *)(v19 + 72) = v22;
  ActionCondition.init(_:_:redactLog:file:line:)((uint64_t)sub_C46B0, v19, 0xD000000000000040, 0x80000000010C6300, 0, (uint64_t (*)())0xD000000000000055, (uint64_t (*)())0x80000000010C6350, (uint64_t (*)())&stru_68.sectname[13], (uint64_t (**)())v36);
  v23 = static ActionConditionEvaluator.buildExpression(_:)(v36);
  swift_release(*((_QWORD *)&v36[0] + 1));
  v37 = v36[1];
  sub_8B134((uint64_t)&v37);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE410);
  inited = swift_initStackObject(v24, v31);
  *(_OWORD *)(inited + 16) = xmmword_1060460;
  *(_QWORD *)(inited + 32) = v14;
  v26 = inited + 32;
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = v23;
  v27 = static ActionConditionEvaluator.buildBlock(_:)(inited);
  swift_setDeallocating(inited);
  v28 = *(_QWORD *)(inited + 16);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE418);
  swift_arrayDestroy(v26, v28, v29);
  return v27;
}

BOOL sub_C3950(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 24);
  swift_unknownObjectRetain(a1);
  v7 = (void *)v6(ObjectType, v5);
  v8 = objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v7, v8)
    || (v7,
        v7 = (void *)v6(ObjectType, v5),
        v9 = objc_opt_self(MPModelPlaylist),
        swift_dynamicCastObjCClass(v7, v9)))
  {
    v10 = 1;
  }
  else
  {

    v7 = (void *)v6(ObjectType, v5);
    v12 = objc_opt_self(MPModelRadioStation);
    v10 = swift_dynamicCastObjCClass(v7, v12) != 0;
  }
  swift_unknownObjectRelease(a1);

  return v10;
}

BOOL sub_C3A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjectType;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1;
  sub_56024((uint64_t)v5, (uint64_t *)&unk_14B0AC0);
  return v8;
}

uint64_t sub_C3AF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v2[11] = a1;
  v2[12] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[14] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_C3B88, v6, v7);
}

uint64_t sub_C3B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Class isa;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  UIViewController_optional v20;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = type metadata accessor for PlaybackIntentDescriptor(0);
  v4 = swift_allocBox(v3);
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(ObjectType, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3) == 1)
  {
    v8 = *(_QWORD *)(v0 + 112);
    sub_56024(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_14B0AC0);
    swift_deallocBox(v4);
    v9 = v8;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 96);
    sub_50E84(*(_QWORD *)(v0 + 104), v6);
    v11 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 24))(ObjectType);
    (*(void (**)(uint64_t, uint64_t))(v10 + 48))(ObjectType, v10);
    v20.value.super.super.isa = (Class)swift_unknownObjectWeakLoadStrong(v0 + 16);
    isa = v20.value.super.super.isa;
    PlaybackIntentDescriptor.configureForPlayActivity(using:)(v20);

    objc_opt_self(MPModelPlaylist);
    if (swift_dynamicCastObjCClass(v11))
    {
      v13 = v11;
      v14 = MPModelPlaylist.supportsSing.getter();

    }
    else
    {
      v14 = 0;
    }
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 96);
    *(_BYTE *)(v6 + *(int *)(v3 + 32)) = v14 & 1;
    v17 = (void *)(*(uint64_t (**)(uint64_t))(v16 + 32))(ObjectType);
    v18 = v11;
    swift_retain(v4);
    sub_280D90(v11, 0, 0, 1, v0 + 16, (void (*)(uint64_t, double))sub_C43F4, v4);

    sub_56060(v0 + 16);
    swift_release_n(v4, 2);

    v9 = v15;
  }
  swift_release(v9);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_C3D68(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  result = __chkstk_darwin(v7);
  v11 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v3 == 1)
  {
    v12 = swift_projectBox(a2);
    swift_beginAccess(v12, v22, 0, 0);
    sub_50D38(v12, (uint64_t)&v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    v13 = (void *)PlaybackIntentDescriptor.intent.getter();
    sub_5C0DC((uint64_t)&v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for PlaybackIntentDescriptor);
    objc_msgSend(v13, "setRepeatMode:", 0);

    swift_beginAccess(v12, v21, 0, 0);
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    sub_50D38(v12, (uint64_t)&v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    type metadata accessor for MainActor(0);
    v16 = static MainActor.shared.getter(v15);
    v17 = *(unsigned __int8 *)(v8 + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject(&unk_1344338, v18 + v9, v17 | 7);
    *(_QWORD *)(v19 + 16) = v16;
    *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
    sub_50E84((uint64_t)v11, v19 + v18);
    v20 = sub_2223C8((uint64_t)v6, (uint64_t)&unk_14AF838, v19);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

uint64_t sub_C3F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[2] = a4;
  v5 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v4[4] = v6;
  v4[5] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[7] = v8;
  v4[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_C3FD8, v10, v11);
}

uint64_t sub_C3FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_50D38(v6, v2);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = (v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_1344360, v13 + 16, v10 | 7);
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_50E84(v2, v14 + v11);
  *(_QWORD *)(v14 + v12) = 0;
  v15 = (_QWORD *)(v14 + v13);
  *v15 = 0;
  v15[1] = 0;
  v16 = sub_2223C8(v3, (uint64_t)&unk_14AD200, v14);
  swift_release(v16);
  swift_release(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_C40EC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;

  ObjectType = swift_getObjectType();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 24);
  v6 = (void *)v5(ObjectType, v4);
  v7 = swift_getObjectType();

  v8 = sub_27F814(v7);
  v9 = (void *)v5(ObjectType, v4);
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(v9))
  {

    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v11 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v11 + 16) = xmmword_105B360;
    *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistTraits);
    *(_QWORD *)(v11 + 40) = v12;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);
    swift_bridgeObjectRelease();

    v15 = objc_msgSend(v8, "propertySetByCombiningWithPropertySet:", v14);
    v9 = v8;
  }
  else
  {
    v15 = v8;
  }

  return v15;
}

uint64_t sub_C4244@<X0>(__int128 *a1@<X8>)
{
  __int128 *v1;
  __int128 v2;

  v2 = *v1;
  *a1 = *v1;
  return swift_unknownObjectRetain(v2);
}

__n128 sub_C4254@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_C4260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ActionDeclaring.init(context:)(a1, a2, (uint64_t)&off_14AF800, a3);
}

uint64_t sub_C426C()
{
  uint64_t *v0;

  return sub_C35F8(*v0, v0[1]);
}

uint64_t sub_C4274()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v3 = v0[1];
  v4 = (_QWORD *)swift_task_alloc(dword_14AF82C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_50F8C;
  return sub_C3AF8(v2, v3);
}

uint64_t sub_C42C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for Metrics.Event.Action(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 40))(v10, ObjectType, v4);
  v6 = v11;
  if (!v11)
    return sub_56024((uint64_t)v10, (uint64_t *)&unk_14AED10);
  v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  swift_storeEnumTagMultiPayload(v3, v1, 13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 8))(v3, v6, v7);
  sub_5C0DC((uint64_t)v3, type metadata accessor for Metrics.Event.Action);
  return __swift_destroy_boxed_opaque_existential_1(v10);
}

uint64_t sub_C43B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD v4[3];

  sub_C333C(*(_QWORD *)(v1 + 8), v4);
  return sub_C46BC((uint64_t)v4, a1);
}

double sub_C43F4(unsigned __int8 a1)
{
  uint64_t v1;

  return sub_C3D68(a1, v1);
}

uint64_t sub_C43FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {

  }
  v9 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v9[3])
    __swift_destroy_boxed_opaque_existential_1(v9);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_C44B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_14AF834);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_50F8C;
  return sub_C3F1C(a1, v5, v6, v7);
}

uint64_t sub_C4538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {

  }
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v10[3])
    __swift_destroy_boxed_opaque_existential_1(v10);

  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

BOOL sub_C4620()
{
  uint64_t v0;

  return sub_C3950(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_C4628()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_C464C()
{
  uint64_t v0;

  return sub_C3A40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_C4654()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_C46B0()
{
  uint64_t v0;

  return sub_7879DC(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_C46BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C470C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

unsigned __int8 *sub_C4744(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  _BYTE *v21;
  __int128 v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  id v27;
  unsigned __int8 *v28;
  id v29;
  void *v30;
  int v31;
  double v32;
  _BOOL4 v33;
  uint64_t v34;
  void *v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *result;
  uint64_t i;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t j;
  _QWORD *v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  unsigned __int8 *v64;
  id v65;
  id v66;
  uint64_t v67;
  char v68[24];
  char v69[24];
  objc_super v70;
  _OWORD v71[2];
  uint64_t v72;
  _OWORD v73[2];
  uint64_t v74;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_title];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v11 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_subtitle];
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  v12 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_descriptionText];
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v13 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlayTitleText];
  *v13 = 0;
  v13[1] = 0xE000000000000000;
  v14 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlaySubtitleText];
  *v14 = 0;
  v14[1] = 0xE000000000000000;
  v15 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_altText];
  *v15 = 0;
  v15[1] = 0;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_isGradientEnabled] = 2;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_isPlayButtonEnabled] = 2;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_isTitleChevronEnabled] = 2;
  v16 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText];
  *v16 = 0;
  v16[1] = 0;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeColor] = 2;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle] = 2;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_textAlignment] = 0;
  v17 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_videoLooperDidChangeHandler];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_videoLooperDidFailHandler];
  *v18 = 0;
  v18[1] = 0;
  v19 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_isPlayingDidChangeHandler];
  *v19 = 0;
  v19[1] = 0;
  v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_isVideoArtworkAllowed] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeView] = 0;
  v20 = &v4[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
  v21 = v4;
  sub_CC198((uint64_t *)v71);
  v22 = v71[1];
  *(_OWORD *)v20 = v71[0];
  *((_OWORD *)v20 + 1) = v22;
  *((_QWORD *)v20 + 4) = v72;
  v23 = &v21[OBJC_IVAR____TtC16MusicApplication10PosterCell_textStackViewInsets];
  *v23 = xmmword_1060DC0;
  v23[1] = xmmword_1060DC0;
  v24 = &v21[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents];
  v24[1] = 0;
  v24[2] = 0;
  *v24 = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextStackView] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicApplication10PosterCell_measurementTextStackViewComponent] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___measurementTextStackView] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientBottomView] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientTopView] = 0;
  v25 = OBJC_IVAR____TtC16MusicApplication10PosterCell_shadowBackdropView;
  type metadata accessor for ShadowBackdropView();
  v26 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(v26, "setUserInteractionEnabled:", 0);
  v27 = objc_msgSend(v26, "layer");
  objc_msgSend(v27, "setZPosition:", -1.0);

  *(_QWORD *)&v21[v25] = v26;
  *(_QWORD *)&v21[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___symbolButton] = 0;
  v21[OBJC_IVAR____TtC16MusicApplication10PosterCell_textSpacingPreference] = 2;

  v70.receiver = v21;
  v70.super_class = ObjectType;
  v28 = (unsigned __int8 *)objc_msgSendSuper2(&v70, "initWithFrame:", a1, a2, a3, a4);
  v29 = objc_msgSend(v28, "traitCollection");
  v30 = v29;
  v31 = v28[OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle];
  v32 = 1.0;
  if (v31 != 2)
  {
    v33 = objc_msgSend(v29, "horizontalSizeClass") == (char *)&dword_0 + 2;
    if ((v31 & 1) != 0)
      v32 = dbl_1060DD0[v33];
    else
      v32 = 0.75;
  }

  sub_9DBF34(v32);
  v34 = OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_textStackView;
  v35 = *(void **)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_textStackView];
  v36 = &v28[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
  swift_beginAccess(&v28[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents], v69, 0, 0);
  v37 = *((_QWORD *)v36 + 4);
  if ((unint64_t)v37 >> 62)
  {
    if (v37 < 0)
      v42 = v37;
    else
      v42 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v37, 2);
    v43 = v35;
    result = (unsigned __int8 *)_CocoaArrayWrapper.endIndex.getter(v42);
    v38 = (uint64_t)result;
    if (!result)
      goto LABEL_17;
  }
  else
  {
    v38 = *(_QWORD *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(v37, 2);
    result = v35;
    if (!v38)
      goto LABEL_17;
  }
  if (v38 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  for (i = 0; i != v38; ++i)
  {
    if ((v37 & 0xC000000000000001) != 0)
    {
      v41 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v37);
    }
    else
    {
      v41 = *(_QWORD **)(v37 + 8 * i + 32);
      swift_retain(v41);
    }
    TextStackView.add(_:)(v41);
    swift_release(v41);
  }
LABEL_17:
  swift_bridgeObjectRelease_n(v37, 2);

  v44 = (char *)*(id *)&v28[v34];
  v45 = &v44[OBJC_IVAR____TtC16MusicApplication13TextStackView_verticalAlignment];
  swift_beginAccess(&v44[OBJC_IVAR____TtC16MusicApplication13TextStackView_verticalAlignment], v68, 1, 0);
  *v45 = 1;

  v46 = (char *)sub_C4E44();
  v47 = &v46[OBJC_IVAR____TtC16MusicApplication13TextStackView_verticalAlignment];
  swift_beginAccess(&v46[OBJC_IVAR____TtC16MusicApplication13TextStackView_verticalAlignment], &v67, 1, 0);
  *v47 = 0;

  v48 = sub_C4E44();
  v50 = sub_C4EB8();
  v52 = v51;
  v53 = v49;
  if ((unint64_t)v49 >> 62)
  {
    if (v49 < 0)
      v57 = v49;
    else
      v57 = v49 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v49, 2);
    result = (unsigned __int8 *)_CocoaArrayWrapper.endIndex.getter(v57);
    v54 = (uint64_t)result;
    if (result)
    {
LABEL_19:
      if (v54 >= 1)
      {
        for (j = 0; j != v54; ++j)
        {
          if ((v53 & 0xC000000000000001) != 0)
          {
            v56 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v53);
          }
          else
          {
            v56 = *(_QWORD **)(v53 + 8 * j + 32);
            swift_retain(v56);
          }
          TextStackView.add(_:)(v56);
          swift_release(v56);
        }
        goto LABEL_29;
      }
LABEL_36:
      __break(1u);
      return result;
    }
  }
  else
  {
    v54 = *(_QWORD *)((char *)&dword_10 + (v49 & 0xFFFFFFFFFFFFF8));
    result = (unsigned __int8 *)swift_bridgeObjectRetain_n(v49, 2);
    if (v54)
      goto LABEL_19;
  }
LABEL_29:

  swift_bridgeObjectRelease_n(v53, 3);
  swift_release(v52);
  v58 = objc_msgSend(v28, "contentView", swift_release(v50).n128_f64[0]);

  v59 = sub_C4E44();
  objc_msgSend(v58, "addSubview:", v59);

  objc_msgSend(v28, "insertSubview:atIndex:", *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication10PosterCell_shadowBackdropView], 0);
  v60 = sub_9DC0B0();

  sub_4E684(0, (unint64_t *)&qword_14DB260, UIImage_ptr);
  v61 = UIImage.init(systemName:pointSize:weight:)(20.0, 0xD000000000000010, 0x80000000010C6930, 4);
  if (v61)
  {
    v62 = v61;
    v63 = objc_msgSend(v61, "imageWithRenderingMode:", 2);

  }
  else
  {
    v63 = 0;
  }
  objc_msgSend(v60, "setImage:forState:", v63, 0);

  v64 = v28;
  v65 = sub_9DC0B0();

  if (qword_14AA948 != -1)
    swift_once(&qword_14AA948, sub_C98DC);
  v73[0] = xmmword_14AF890;
  v73[1] = unk_14AF8A0;
  v74 = qword_14AF8B0;
  v66 = (id)xmmword_14AF890;
  UIView.shadow.setter((uint64_t)v73);

  return v64;
}

id sub_C4E44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextStackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextStackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextStackView);
  }
  else
  {
    type metadata accessor for TextStackView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_C4EB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  __int128 v20[5];
  __int128 v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents + 16);
  if (v2)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents);
  }
  else
  {
    sub_4E684(0, qword_14ADF70, UIFont_ptr);
    v6 = UIFontTextStyleHeadline;
    v7 = static UIFont.preferredFont(forTextStyle:weight:)(v6, UIFontWeightSemibold);
    v8 = (void *)objc_opt_self(UIColor);
    v9 = objc_msgSend(v8, "whiteColor");
    v10 = objc_msgSend(v8, "clearColor");

    *(_QWORD *)&v21[0] = v9;
    *((_QWORD *)&v21[0] + 1) = v10;
    v21[1] = xmmword_1060160;
    v22 = 0;
    v23 = 0;
    v24 = v7;
    v25 = 1;
    v26 = xmmword_1060DE0;
    v11 = type metadata accessor for TextStackView.Component();
    swift_allocObject(v11, 264, 7);
    v5 = TextStackView.Component.init(identifier:labelProperties:)(0xD000000000000016, 0x80000000010C67E0, v21);
    swift_retain(v5);
    sub_CC640((uint64_t)v20);
    swift_allocObject(v11, 264, 7);
    v12 = TextStackView.Component.init(identifier:labelProperties:)(0xD000000000000019, 0x80000000010C6800, v20);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
    v14 = swift_allocObject(v13, 48, 7);
    *(_OWORD *)(v14 + 16) = xmmword_105F8A0;
    *(_QWORD *)(v14 + 32) = v5;
    *(_QWORD *)(v14 + 40) = v12;
    v19 = v14;
    specialized Array._endMutation()(v14);
    v15 = *v1;
    v16 = v1[1];
    v17 = v1[2];
    *v1 = v5;
    v1[1] = v12;
    v1[2] = v19;
    swift_retain_n(v12, 2);
    swift_retain(v5);
    swift_bridgeObjectRetain();
    sub_CC708(v15, v16, v17);
  }
  sub_CC740(v2, v3, v4);
  return v5;
}

uint64_t sub_C513C()
{
  char *v0;
  _BYTE *v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  double v7;
  char v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE v26[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = &v0[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
  swift_beginAccess(v3, v26, 33, 0);
  sub_C9BA8(v2);
  swift_endAccess(v26);

  v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_textSpacingPreference] = 2;
  v4 = *((_QWORD *)v3 + 4);
  v5 = *(id *)&v1[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_textStackView];
  v6 = swift_bridgeObjectRetain();
  TextStackView.replace(with:)((Swift::OpaquePointer)v6);

  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v8 = v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle];
  v9 = objc_msgSend(v1, "traitCollection", v7);
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  v11 = UIContentSizeCategory.isAccessibilityCategory.getter(v10);
  v13 = sub_C4EB8();
  v14 = v12;
  v16 = v15;
  if ((v11 & 1) != 0)
  {
    v17 = 1;
  }
  else if ((v8 & 1) != 0)
  {
    v17 = 3;
  }
  else
  {
    swift_beginAccess(v12 + 112, v26, 0, 0);
    v18 = *(_QWORD *)(v14 + 120);
    v19 = *(_QWORD *)(v14 + 112) & 0xFFFFFFFFFFFFLL;
    if ((v18 & 0x2000000000000000) != 0)
      v19 = HIBYTE(v18) & 0xF;
    if (v19)
      v17 = 1;
    else
      v17 = 2;
  }
  swift_beginAccess(v13 + 32, &v25, 1, 0);
  *(_QWORD *)(v13 + 88) = v17;
  sub_705DEC();
  v20 = (uint64_t *)&v1[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents];
  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents];
  v22 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents + 8];
  v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___overlayTextComponents + 16];
  *v20 = v13;
  v20[1] = v14;
  v20[2] = v16;
  return sub_CC708(v21, v22, v23);
}

double sub_C53A0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  double result;
  Swift::String v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14[24];

  v3 = v2;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_title];
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_title + 8];
  v6 = v5 == a1 && v4 == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v5, v4, 0) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v8 = String.trim()();
    swift_bridgeObjectRelease();
    v9 = &v3[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
    swift_beginAccess(&v3[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents], v14, 0, 0);
    v10 = *(_QWORD *)v9;
    swift_retain(v10);
    swift_bridgeObjectRetain();
    TextStackView.Component.textValue.setter(v8._countAndFlagsBits, (uint64_t)v8._object);
    swift_release(v10);
    v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication10PosterCell_measurementTextStackViewComponent];
    if (v11)
    {
      swift_retain(*(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication10PosterCell_measurementTextStackViewComponent]);
      TextStackView.Component.textValue.setter(v8._countAndFlagsBits, (uint64_t)v8._object);
      swift_release(v11);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_C513C();
    sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v12 = swift_allocObject(&unk_1344AD8, 24, 7);
    *(_QWORD *)(v12 + 16) = v3;
    v13 = v3;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v12);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_C54FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_title);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_title);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_title + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_C53A0(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_C5538(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  double result;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  char *v13;
  char v14[24];

  v4 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_subtitle];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_subtitle];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_subtitle + 8];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  v7 = v5 == a1 && v6 == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, a1, a2, 0) & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v9 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents], v14, 0, 0);
    v10 = *((_QWORD *)v9 + 1);
    swift_retain(v10);
    swift_bridgeObjectRetain();
    v11 = String.trim()();
    swift_bridgeObjectRelease();
    TextStackView.Component.textValue.setter(v11._countAndFlagsBits, (uint64_t)v11._object);
    swift_release(v10);
    sub_C513C();
    sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v12 = swift_allocObject(&unk_1344AB0, 24, 7);
    *(_QWORD *)(v12 + 16) = v2;
    v13 = v2;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v12);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_C5694(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  double result;
  char *v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  char *v13;
  char v14[24];

  v4 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_descriptionText];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_descriptionText];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_descriptionText + 8];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  v7 = v5 == a1 && v6 == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, a1, a2, 0) & 1) != 0)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v9 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents], v14, 0, 0);
    v10 = *((_QWORD *)v9 + 2);
    swift_retain(v10);
    swift_bridgeObjectRetain();
    v11 = String.trim()();
    swift_bridgeObjectRelease();
    TextStackView.Component.textValue.setter(v11._countAndFlagsBits, (uint64_t)v11._object);
    swift_release(v10);
    sub_C513C();
    sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v12 = swift_allocObject(&unk_1344A88, 24, 7);
    *(_QWORD *)(v12 + 16) = v2;
    v13 = v2;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v12);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_C5868(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  id v16;
  double result;

  v4 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlayTitleText];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlayTitleText];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlayTitleText + 8];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  if (v5 == a1 && v6 == a2)
  {
    v6 = a2;
  }
  else
  {
    v8 = v2;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, a1, a2, 0) & 1) == 0)
    {
      v9 = sub_C4EB8();
      v11 = v10;
      swift_release(v12);
      swift_bridgeObjectRelease(v11);
      v13 = *((_QWORD *)v4 + 1);
      swift_bridgeObjectRetain();
      v14 = String.trim()();
      swift_bridgeObjectRelease(v13);
      TextStackView.Component.textValue.setter(v14._countAndFlagsBits, (uint64_t)v14._object);
      swift_release(v9);
      sub_C5994();
      sub_C513C();
      sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
      v15 = swift_allocObject(&unk_13449E8, 24, 7);
      *(_QWORD *)(v15 + 16) = v8;
      v16 = v8;
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v15);
      swift_release(v15);
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

void sub_C5994()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_isGradientEnabled) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_overlayTitleText + 8);
    if ((v2 & 0x2000000000000000) != 0)
      v3 = HIBYTE(v2) & 0xF;
    else
      v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_overlayTitleText) & 0xFFFFFFFFFFFFLL;
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent);
      v5 = sub_C8E90(&OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientTopView, 0.4, 0.0);
      objc_msgSend(*(id *)(v4 + 144), "addSubview:", v5);
    }
    else
    {
      v5 = sub_C8E90(&OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientTopView, 0.4, 0.0);
      objc_msgSend(v5, "removeFromSuperview");
    }

    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_title + 8);
    if ((v6 & 0x2000000000000000) != 0)
      v7 = HIBYTE(v6) & 0xF;
    else
      v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_title) & 0xFFFFFFFFFFFFLL;
    if (v7
      || ((v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_subtitle + 8),
           (v8 & 0x2000000000000000) != 0)
        ? (v9 = HIBYTE(v8) & 0xF)
        : (v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_subtitle) & 0xFFFFFFFFFFFFLL),
          v9
       || ((v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_descriptionText + 8),
            (v10 & 0x2000000000000000) != 0)
         ? (v11 = HIBYTE(v10) & 0xF)
         : (v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_descriptionText) & 0xFFFFFFFFFFFFLL),
           v11)))
    {
      v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent);
      v13 = sub_C8E90(&OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientBottomView, 0.0, 0.4);
      objc_msgSend(*(id *)(v12 + 144), "addSubview:", v13);
    }
    else
    {
      v13 = sub_C8E90(&OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientBottomView, 0.0, 0.4);
      objc_msgSend(v13, "removeFromSuperview");
    }
  }
  else
  {
    v1 = sub_C8E90(&OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientTopView, 0.4, 0.0);
    objc_msgSend(v1, "removeFromSuperview");

    v13 = sub_C8E90(&OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___gradientBottomView, 0.0, 0.4);
    objc_msgSend(v13, "removeFromSuperview");
  }

}

double sub_C5B84(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  void *v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  id v15;

  v4 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlaySubtitleText];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlaySubtitleText];
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_overlaySubtitleText + 8];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;
  v7 = v5 == a1 && v6 == a2;
  if (v7 || (v8 = v2, (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, a1, a2, 0) & 1) != 0))
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v10 = sub_C4EB8();
    v12 = v11;
    swift_release(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v13 = String.trim()();
    swift_bridgeObjectRelease();
    TextStackView.Component.textValue.setter(v13._countAndFlagsBits, (uint64_t)v13._object);
    swift_release(v12);
    sub_C5994();
    sub_C513C();
    sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v14 = swift_allocObject(&unk_13449C0, 24, 7);
    *(_QWORD *)(v14 + 16) = v8;
    v15 = v8;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v14);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

double sub_C5CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  _BYTE v12[24];

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_altText);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_altText);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_altText + 8);
  *v4 = a1;
  v4[1] = a2;
  if (v6)
  {
    if (!a2
      || (v5 == a1 ? (v7 = v6 == a2) : (v7 = 0),
          v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, a1, a2, 0) & 1) != 0))
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      return result;
    }
  }
  else if (!a2)
  {
    return result;
  }
  v9 = v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents;
  swift_beginAccess(v9, v12, 0, 0);
  v10 = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_retain(v10);
  v11 = String.trim()();
  TextStackView.Component.textValue.setter(v11._countAndFlagsBits, (uint64_t)v11._object);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

double sub_C5DA4(char a1)
{
  _BYTE *v1;
  int v2;
  uint64_t v3;
  _BYTE *v4;
  double result;

  v2 = v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_isGradientEnabled];
  v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_isGradientEnabled] = a1;
  if (v2 == 2)
  {
    if (a1 != 2)
    {
LABEL_7:
      sub_C5994();
      sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
      v3 = swift_allocObject(&unk_1344A38, 24, 7);
      *(_QWORD *)(v3 + 16) = v1;
      v4 = v1;
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v3);
      *(_QWORD *)&result = swift_release(v3).n128_u64[0];
    }
  }
  else if (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0)
  {
    goto LABEL_7;
  }
  return result;
}

void sub_C5E6C(unsigned __int8 a1)
{
  uint64_t v1;
  char v2;
  int v3;
  id v4;

  v2 = a1;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16MusicApplication10PosterCell_isPlayButtonEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication10PosterCell_isPlayButtonEnabled) = a1;
  if (v3 == 2)
  {
    if (a1 == 2)
      return;
    v2 = a1 & 1;
    goto LABEL_6;
  }
  if (a1 != 2 && ((a1 ^ v3) & 1) != 0)
  {
LABEL_6:
    v4 = sub_9DC0B0();
    objc_msgSend(v4, "setHidden:", (v2 & 1) == 0);

  }
}

double sub_C5EF8(unsigned __int8 a1, double result)
{
  unsigned __int8 *v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23[24];
  char v24[24];
  char v25[24];
  _OWORD v26[5];

  v3 = v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_isTitleChevronEnabled];
  if (a1 == 2)
  {
    if (v3 == 2)
      return result;
    LOBYTE(v3) = v3 & 1;
  }
  else if (v3 == 2 || ((v3 ^ a1) & 1) == 0)
  {
    return result;
  }
  v4 = &v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents];
  swift_beginAccess(&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textComponents], v25, 0, 0);
  v5 = *(_QWORD *)v4;
  *(_QWORD *)&result = swift_beginAccess(*(_QWORD *)v4 + 112, v24, 0, 0).n128_u64[0];
  v6 = *(_QWORD *)(v5 + 120);
  v7 = *(_QWORD *)(v5 + 112) & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v6) & 0xF;
  if (v7)
  {
    v8 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection", result) == (char *)&dword_0 + 1;
    v9 = *(_QWORD *)v4;
    v10 = v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_textAlignment];
    v11 = v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle];
    swift_retain(v9);
    if (v10)
      v12 = 4;
    else
      v12 = 3;
    sub_CBF1C(v12, v11, v3 & 1, v8, (uint64_t)v26);
    swift_beginAccess(v9 + 32, v23, 1, 0);
    v13 = *(void **)(v9 + 32);
    v14 = *(void **)(v9 + 40);
    v15 = *(_QWORD *)(v9 + 48);
    v16 = *(_QWORD *)(v9 + 56);
    v17 = *(_QWORD *)(v9 + 64);
    v18 = *(_QWORD *)(v9 + 72);
    v19 = *(void **)(v9 + 80);
    v21 = v26[3];
    v20 = v26[4];
    *(_OWORD *)(v9 + 64) = v26[2];
    *(_OWORD *)(v9 + 80) = v21;
    *(_OWORD *)(v9 + 96) = v20;
    v22 = v26[1];
    *(_OWORD *)(v9 + 32) = v26[0];
    *(_OWORD *)(v9 + 48) = v22;
    sub_CD068(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CC85C);
    sub_CD010(v13, v14, v15, v16, v17, v18, v19);
    sub_705DEC();
    sub_CD068(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CD010);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  return result;
}

double sub_C60A4(char a1, double a2)
{
  uint64_t v2;
  unsigned __int8 v3;

  v3 = *(_BYTE *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_isTitleChevronEnabled);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_isTitleChevronEnabled) = a1;
  return sub_C5EF8(v3, a2);
}

void sub_C60BC(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  char *v8;
  void (*v9)(_BYTE *, _QWORD, __n128);
  uint64_t v10;
  __n128 v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  char *v16;
  _BYTE v17[32];

  v3 = v2;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText + 8];
  if (!a2)
  {
    if (!v5)
      return;
    goto LABEL_10;
  }
  if (!v5)
    goto LABEL_16;
  v6 = v4 == a1 && v5 == a2;
  if (!v6
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText], *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText + 8], 0) & 1) == 0)
  {
LABEL_10:
    v7 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      swift_bridgeObjectRetain();
      v8 = sub_C6240();
      v9 = (void (*)(_BYTE *, _QWORD, __n128))(*(uint64_t (**)(_BYTE *))((char *)&stru_1A8.size
                                                                                            + (swift_isaMask & *(_QWORD *)v8)))(v17);
      *(_QWORD *)(v10 + 120) = v4;
      *(_QWORD *)(v10 + 128) = v5;
      v11 = swift_bridgeObjectRelease();
      v9(v17, 0, v11);

      v12 = sub_C6240();
      objc_msgSend(v12, "setContentVerticalAlignment:", 3);

      v13 = sub_C6240();
      v14 = objc_msgSend(v13, "superview");

      if (!v14)
      {
        v15 = sub_C6240();
        objc_msgSend(v3, "addSubview:", v15);

      }
      return;
    }
LABEL_16:
    v16 = sub_C6240();
    objc_msgSend(v16, "removeFromSuperview");

  }
}

char *sub_C6240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[72];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C0170);
  __chkstk_darwin(v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___symbolButton);
  if (v7)
  {
    v8 = *(char **)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___symbolButton);
  }
  else
  {
    v43 = OBJC_IVAR____TtC16MusicApplication10PosterCell____lazy_storage___symbolButton;
    SymbolButton.Configuration.init()((uint64_t)v6);
    static SymbolButton.Title.with(_:)((void (*)(__int128 *))sub_C994C, (uint64_t)v44);
    sub_CCE84((uint64_t)v44, (uint64_t)(v6 + 15));
    v9 = SymbolButton.Background.tertiary.unsafeMutableAddressor();
    v10 = *v9;
    v11 = (void *)v9[1];
    v12 = v9[3];
    v41 = v9[2];
    v42 = v0;
    v13 = v6[24];
    v14 = (char *)v6[25];
    v15 = v6[26];
    v16 = v6[27];
    swift_bridgeObjectRetain();
    v17 = v11;
    v18 = sub_CCEC0(v13, v14, v15, v16);
    v6[24] = v10;
    v6[25] = v11;
    v6[26] = v41;
    v6[27] = v12;
    static UIView.Corner.rounded.getter(v18);
    v19 = type metadata accessor for UIView.Corner(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 0, 1, v19);
    sub_CCEF0((uint64_t)v3, (uint64_t)v6 + v4[9]);
    __asm { FMOV            V0.2D, #20.0 }
    *(_OWORD *)((char *)v6 + v4[13]) = _Q0;
    v25 = (_OWORD *)((char *)v6 + v4[15]);
    *v25 = xmmword_1060610;
    v25[1] = xmmword_1060610;
    v26 = SymbolButton.Configuration.Accessibility.init(automaticallyAdjustsForAccessibility:minimumContentSizeCategory:maximumContentSizeCategory:showsLargeContentViewer:)(0);
    v28 = v27;
    v30 = v29;
    LOBYTE(v14) = v31;
    v32 = (char *)v6 + v4[16];

    *v32 = v26 & 1;
    *((_QWORD *)v32 + 1) = v28;
    *((_QWORD *)v32 + 2) = v30;
    v32[24] = v14 & 1;
    v33 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
    v34 = SymbolButton.init(configuration:handler:)((uint64_t)v6, 0, 0);
    v35 = swift_allocObject(&unk_13447E0, 24, 7);
    v36 = v42;
    swift_unknownObjectWeakInit(v35 + 16, v42);
    swift_retain(v35);
    v37 = SymbolButton.withProvider(_:)((uint64_t)sub_CCF38, v35);
    swift_release_n(v35, 2);

    v38 = *(void **)(v36 + v43);
    *(_QWORD *)(v36 + v43) = v37;
    v8 = v37;

    v7 = 0;
  }
  v39 = v7;
  return v8;
}

double sub_C64C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeText + 8);
  *v3 = a1;
  v3[1] = a2;
  sub_C60BC(v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_C6500(unsigned __int8 a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D3D30);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication10PosterCell_badgeColor) = a1;
  if (v3 != 2)
  {
    v7 = sub_C6240();
    v8 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
    sub_56024((uint64_t)v6, (uint64_t *)&unk_14D3D30);

  }
}

double sub_C65D0(char a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  int v3;
  id v4;
  void *v5;
  int v6;
  double v7;
  _BOOL4 v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 *v13;
  double result;

  v2 = OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle;
  v3 = v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle];
  if (a1 == 2)
  {
    if (v3 == 2)
      return result;
  }
  else if (v3 != 2 && ((((a1 & 1) == 0) ^ v3) & 1) != 0)
  {
    return result;
  }
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = v4;
  v6 = v1[v2];
  v7 = 1.0;
  if (v6 != 2)
  {
    v8 = objc_msgSend(v4, "horizontalSizeClass") == (char *)&dword_0 + 2;
    if ((v6 & 1) != 0)
      v7 = dbl_1060DD0[v8];
    else
      v7 = 0.75;
  }

  sub_9DBF34(v7);
  if (v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_isVideoArtworkAllowed] == 1
    && v1[v2] == 2
    && (v9 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent]
                      + 160)) != 0
    && (v10 = objc_msgSend(v9, "player")) != 0)
  {

  }
  else
  {
    sub_C6780();
  }
  if (v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_textAlignment])
    v11 = 4;
  else
    v11 = 3;
  sub_CCB38(v11, v1[v2]);
  sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  v12 = swift_allocObject(&unk_1344A60, 24, 7);
  *(_QWORD *)(v12 + 16) = v1;
  v13 = v1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v12);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_C6780()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char *v3;
  id v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  int v15;
  void *v16;
  id v17;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
    if (v2)
    {
      v3 = v1;
      v17 = v2;
      if (!objc_msgSend(v17, "enableSetNeedsDisplay"))
        goto LABEL_10;
      if (*(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle) == 2)
      {
        v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)+ 144), "image");
        if (v4)
        {
          v5 = v4;
          v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture);
          v7 = swift_allocObject(&unk_1344740, 24, 7);
          swift_unknownObjectWeakInit(v7 + 16, v0);
          v8 = swift_allocObject(&unk_1344768, 32, 7);
          *(_BYTE *)(v8 + 16) = v6;
          *(_QWORD *)(v8 + 24) = v7;
          v9 = swift_allocObject(&unk_1344740, 24, 7);
          swift_unknownObjectWeakInit(v9 + 16, v0);
          v10 = swift_allocObject(&unk_1344790, 56, 7);
          *(_QWORD *)(v10 + 16) = v5;
          *(_BYTE *)(v10 + 24) = 1;
          *(_QWORD *)(v10 + 32) = v17;
          *(_BYTE *)(v10 + 40) = v6;
          *(_QWORD *)(v10 + 48) = v9;
          v11 = v5;
          v12 = v17;
          v13 = v11;
          swift_retain(v9);
          sub_7FE2B8(v5, 1, (void (*)(uint64_t))sub_CD130, v8, (void (*)(uint64_t, uint64_t))sub_CBDA4, v10);

          swift_release(v8);
          swift_release(v9);
          swift_release(v10);
          return;
        }
      }
      v14 = &v3[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_textureSource];
      v15 = v3[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_textureSource + 8];
      if (v15 == 255)
      {
LABEL_10:

      }
      else
      {
        v16 = *(void **)v14;
        *(_QWORD *)v14 = 0;
        v14[8] = -1;
        v17 = v17;
        sub_CBD68(v16, v15);
        objc_msgSend(v17, "setNeedsDisplay");

      }
    }
  }
}

void sub_C6A14()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char *v3;
  id v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  int v15;
  void *v16;
  id v17;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
    if (v2)
    {
      v3 = v1;
      v17 = v2;
      if (!objc_msgSend(v17, "enableSetNeedsDisplay"))
        goto LABEL_9;
      v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)+ 144), "image");
      if (v4)
      {
        v5 = v4;
        v6 = *(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture);
        v7 = swift_allocObject(&unk_1344808, 24, 7);
        swift_unknownObjectWeakInit(v7 + 16);
        v8 = swift_allocObject(&unk_1344830, 32, 7);
        *(_BYTE *)(v8 + 16) = v6;
        *(_QWORD *)(v8 + 24) = v7;
        v9 = swift_allocObject(&unk_1344808, 24, 7);
        swift_unknownObjectWeakInit(v9 + 16);
        v10 = swift_allocObject(&unk_1344858, 56, 7);
        *(_QWORD *)(v10 + 16) = v5;
        *(_BYTE *)(v10 + 24) = 1;
        *(_QWORD *)(v10 + 32) = v17;
        *(_BYTE *)(v10 + 40) = v6;
        *(_QWORD *)(v10 + 48) = v9;
        v11 = v5;
        v12 = v17;
        v13 = v11;
        swift_retain(v9);
        sub_7FE2B8(v5, 1, (void (*)(uint64_t))sub_CD130, v8, (void (*)(uint64_t, uint64_t))sub_CC7A0, v10);

        swift_release(v8);
        swift_release(v9);
        swift_release(v10);
        return;
      }
      v14 = &v3[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_textureSource];
      v15 = v3[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_textureSource + 8];
      if (v15 == 255)
      {
LABEL_9:

      }
      else
      {
        v16 = *(void **)v14;
        *(_QWORD *)v14 = 0;
        v14[8] = -1;
        v17 = v17;
        sub_CBD68(v16, v15);
        objc_msgSend(v17, "setNeedsDisplay");

      }
    }
  }
}

void sub_C6C94()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  int v15;
  void *v16;
  id v17;

  v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer);
  if (v1)
  {
    v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
    if (v2)
    {
      v3 = v1;
      v17 = v2;
      if (!objc_msgSend(v17, "enableSetNeedsDisplay"))
        goto LABEL_9;
      v4 = (*(uint64_t (**)(void))((char *)&stru_3D8.flags + (swift_isaMask & *v0)))();
      if (v4)
      {
        v5 = (void *)v4;
        v6 = *((_BYTE *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture);
        v7 = swift_allocObject(&unk_13448A8, 24, 7);
        swift_unknownObjectWeakInit(v7 + 16);
        v8 = swift_allocObject(&unk_13448D0, 32, 7);
        *(_BYTE *)(v8 + 16) = v6;
        *(_QWORD *)(v8 + 24) = v7;
        v9 = swift_allocObject(&unk_13448A8, 24, 7);
        swift_unknownObjectWeakInit(v9 + 16);
        v10 = swift_allocObject(&unk_13448F8, 56, 7);
        *(_QWORD *)(v10 + 16) = v5;
        *(_BYTE *)(v10 + 24) = 1;
        *(_QWORD *)(v10 + 32) = v17;
        *(_BYTE *)(v10 + 40) = v6;
        *(_QWORD *)(v10 + 48) = v9;
        v11 = v5;
        v12 = v17;
        v13 = v11;
        swift_retain(v9);
        sub_7FE2B8(v5, 1, (void (*)(uint64_t))sub_CC7F0, v8, (void (*)(uint64_t, uint64_t))sub_CC844, v10);

        swift_release(v8);
        swift_release(v9);
        swift_release(v10);
        return;
      }
      v14 = &v3[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_textureSource];
      v15 = v3[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_textureSource + 8];
      if (v15 == 255)
      {
LABEL_9:

      }
      else
      {
        v16 = *(void **)v14;
        *(_QWORD *)v14 = 0;
        v14[8] = -1;
        v17 = v17;
        sub_CBD68(v16, v15);
        objc_msgSend(v17, "setNeedsDisplay");

      }
    }
  }
}

double sub_C6F08(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle) = a1;
  return sub_C65D0(v2);
}

double sub_C6F20(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  double result;
  unsigned __int8 v11;
  uint64_t v12;
  _BYTE *v13;

  v2 = OBJC_IVAR____TtC16MusicApplication10PosterCell_textAlignment;
  v3 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v4 = 1952867692;
  else
    v4 = 0x7265746E6563;
  if (v3)
    v5 = 0xE600000000000000;
  else
    v5 = 0xE400000000000000;
  if (v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_textAlignment])
    v6 = 1952867692;
  else
    v6 = 0x7265746E6563;
  if (v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_textAlignment])
    v7 = 0xE400000000000000;
  else
    v7 = 0xE600000000000000;
  if (v4 == v6 && v5 == v7)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v5, 2).n128_u64[0];
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    if ((v9 & 1) == 0)
    {
      if (v1[v2])
        v11 = 4;
      else
        v11 = 3;
      sub_CCB38(v11, v1[OBJC_IVAR____TtC16MusicApplication10PosterCell_displayStyle]);
      sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
      v12 = swift_allocObject(&unk_1344A10, 24, 7);
      *(_QWORD *)(v12 + 16) = v1;
      v13 = v1;
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CCE80, v12);
      *(_QWORD *)&result = swift_release(v12).n128_u64[0];
    }
  }
  return result;
}

