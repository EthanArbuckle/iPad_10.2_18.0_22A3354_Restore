uint64_t sub_C54E20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  if (result)
  {
    v9 = result;
    swift_retain(a2);
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a5, "setCacheIdentifier:forCacheReference:", v10, a6);

    objc_msgSend(a5, "setFittingSize:", 300.0, 300.0);
    objc_msgSend(a5, "setDestinationScale:", 0.0);
    v11 = swift_allocObject(&unk_13B1E78, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = a2;
    v12 = swift_allocObject(&unk_13B1EA0, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_C60330;
    *(_QWORD *)(v12 + 24) = v11;
    v15[4] = sub_C6033C;
    v16 = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_21B54C;
    v15[3] = &block_descriptor_90_0;
    v13 = _Block_copy(v15);
    v14 = v16;
    sub_A9DEC(v9, a2);
    swift_retain(v11);
    objc_msgSend(a5, "requestImageWithCompletion:", v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);
    swift_release(v11);
    return sub_5C198(v9, a2);
  }
  return result;
}

void sub_C54FA0(void *a1, char a2, void (*a3)(Class, _QWORD))
{
  NSData *v5;
  Class isa;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;

  if ((a2 & 1) != 0)
  {
    v11 = a1;
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    swift_willThrowTypedImpl(&v11, v10, &protocol self-conformance witness table for Error);
    a3(0, 0);
  }
  else
  {
    v5 = UIImagePNGRepresentation((UIImage *)a1);
    isa = (Class)v5;
    if (v5)
    {
      v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_50C60(v7, v9);
    }
    a3(isa, 0);
    swift_unknownObjectRelease(isa);
    sub_A90E8(a1, 0);
  }
}

double sub_C5508C(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(void *, uint64_t, uint64_t, uint64_t, __n128);
  void *v8;
  uint64_t v9;
  __n128 v10;
  double result;

  v7 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  if (v8)
  {
    v9 = swift_allocObject(&unk_13B1EF0, 24, 7);
    *(_QWORD *)(v9 + 16) = v8;
    v8 = sub_5F278;
    if (!ObjCClassMetadata)
      goto LABEL_4;
    goto LABEL_3;
  }
  v9 = 0;
  if (ObjCClassMetadata)
LABEL_3:
    ObjCClassMetadata = swift_getObjCClassMetadata(ObjCClassMetadata);
LABEL_4:
  if (a4)
    a4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v10 = swift_retain(v6);
  v7(v8, v9, ObjCClassMetadata, a4, v10);
  swift_bridgeObjectRelease(a4);
  sub_5C198((uint64_t)v8, v9);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

double sub_C55170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  result = __chkstk_darwin(v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v8);
    v17 = *(unsigned __int8 *)(v9 + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject(&unk_13B1F18, v19 + 16, v17 | 7);
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20 + v18, v11, v8);
    v21 = (_QWORD *)(v20 + v19);
    *v21 = a1;
    v21[1] = a2;
    swift_retain(a2);
    v22 = sub_C51F30((uint64_t)v15, (uint64_t)&unk_14FEDD8, v20, (uint64_t)&unk_13B1D38, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_14FECF0);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_C552F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDE0);
  v6[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDE8);
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C55398, 0, 0);
}

uint64_t sub_C55398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 56);
  _s8MusicKit8PlaylistV0A11ApplicationE12storyArtworkAA0F0VSgvg_0();
  v2 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 72) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 56), &qword_14FEDF0);
    (*(void (**)(_QWORD, _QWORD))(v0 + 24))(0, 0);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v0 + 80) = v11;
    *v11 = v0;
    v11[1] = sub_C554E4;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 40), 0, 0, 300.0, 300.0, 1.0);
  }
}

uint64_t sub_C554E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v2;
  v4 = (*v2)[10];
  (*v2)[11] = a1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v6 = v3[5];
    v5 = v3[6];
    swift_errorRelease(v1);
    sub_56024(v6, &qword_14FEDE0);
    sub_56024(v5, &qword_14FEDE8);
    v7 = sub_C55684;
  }
  else
  {
    v8 = v3[8];
    v9 = v3[9];
    v11 = v3[6];
    v10 = v3[7];
    sub_56024(v3[5], &qword_14FEDE0);
    sub_56024(v11, &qword_14FEDE8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    v7 = sub_C555C4;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_C555C4()
{
  uint64_t v0;
  NSData *v1;
  NSData *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  NSData v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = UIImagePNGRepresentation((UIImage *)*(id *)(v0 + 88));
  if (v1)
  {
    v2 = v1;
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    v6.super.isa = Data._bridgeToObjectiveC()().super.isa;
    sub_50C60(v3, v5);
  }
  else
  {
    v6.super.isa = 0;
  }
  v7 = *(void **)(v0 + 88);
  (*(void (**)(Class, _QWORD))(v0 + 24))(v6.super.isa, 0);

  swift_unknownObjectRelease(v6.super.isa);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C55684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  (*(void (**)(_QWORD, _QWORD))(v0 + 24))(0, 0);
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C556E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  char v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v1 = type metadata accessor for Playlist.EditableComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED50);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v0, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = (*(uint64_t (**)(char *, id *, uint64_t))(v9 + 32))(v11, v14, v8);
    Playlist.editableComponents.getter(v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_56024((uint64_t)v7, (uint64_t *)&unk_14FED50);
      v16 = 0;
    }
    else
    {
      static Playlist.EditableComponents.tracklist.getter();
      v19 = sub_4DD24((unint64_t *)&qword_14FB5F8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v16 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v1, v19);
      v20 = *(void (**)(char *, uint64_t))(v2 + 8);
      v20(v4, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v20(v7, v1);
    }
  }
  else
  {
    v17 = *v14;
    v18 = objc_msgSend(*v14, "userEditableComponents");

    v16 = v18 & 1;
  }
  return v16 & 1;
}

id Collaboration.Object.isOwner.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = (*(uint64_t (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = Playlist.isOwner.getter(v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v10 == 2)
      return 0;
    else
      return (id)(v10 & 1);
  }
  else
  {
    v12 = *v8;
    v11 = objc_msgSend(*v8, "isOwner");

  }
  return v11;
}

uint64_t Collaboration.Object.ownerName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = _s8MusicKit8PlaylistV0A11ApplicationE13storySubtitleSSSgvg_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = *v8;
    v11 = objc_msgSend(*v8, "curator");
    if (v11 && (v12 = v11, v13 = objc_msgSend(v11, "name"), v12, v13))
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

    }
    else
    {

      return 0;
    }
  }
  return v9;
}

uint64_t Collaboration.Object.musicItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_C5E078(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    v7 = type metadata accessor for Playlist(0);
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v8 + 32))(a1, v6, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    v10 = *v6;
    type metadata accessor for Playlist(0);
    return dispatch thunk of LegacyModelObjectConvertible.init(_:)(v10);
  }
}

uint64_t Collaboration.Object.hasUnsupportedContent.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[32] = v0;
  v2 = type metadata accessor for Playlist.Entry(0);
  v1[33] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[34] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[35] = swift_task_alloc(v4);
  v1[36] = swift_task_alloc(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE950);
  v1[37] = v5;
  v1[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB140);
  v1[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE960);
  v1[40] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[41] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[42] = swift_task_alloc(v9);
  v1[43] = swift_task_alloc(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE968);
  v1[44] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[45] = v11;
  v1[46] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  v1[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE978);
  v1[48] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v1[49] = v14;
  v1[50] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v1[51] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[52] = v16;
  v1[53] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Collaboration.Object(0);
  v1[54] = v17;
  v1[55] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C55E4C, 0, 0);
}

uint64_t sub_C55E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD *v11;
  id v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  Class isa;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  Class v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  Class v47;
  Class v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 440);
  sub_C5E078(*(_QWORD *)(v0 + 256), v2);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 416);
    v3 = *(_QWORD *)(v0 + 424);
    v5 = *(_QWORD *)(v0 + 408);
    v6 = *(_QWORD *)(v0 + 376);
    v7 = *(_QWORD *)(v0 + 384);
    v8 = *(_QWORD *)(v0 + 264);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v3, *(_QWORD *)(v0 + 440), v5);
    MusicLibraryRequest.init()(v8, &protocol witness table for Playlist.Entry);
    KeyPath = swift_getKeyPath(&unk_109FAB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v3, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    v10 = sub_4DD24(&qword_14FE980, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v6, v7, &protocol witness table for Playlist.Entry, v10);
    swift_release();
    sub_56024(v6, &qword_14FE970);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
    *(_QWORD *)(v0 + 488) = v11;
    *v11 = v0;
    v11[1] = sub_C56754;
    return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 384));
  }
  v53 = **(void ***)(v0 + 440);
  *(_QWORD *)(v0 + 448) = v53;
  v13 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  *(_QWORD *)(v0 + 456) = v13;
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setLabel:", v15);

  v16 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  objc_msgSend(v14, "setMediaLibrary:", v16);

  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v17 = swift_allocObject(v52, 56, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1060E10;
  *(_QWORD *)(v17 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
  v18 = (void *)objc_opt_self(NSUserDefaults);
  v19 = objc_msgSend(v18, "standardUserDefaults");
  strcpy((char *)(v0 + 232), "showAllTVShows");
  *(_BYTE *)(v0 + 247) = -18;
  v20 = sub_B9DEC0();
  NSUserDefaults.subscript.getter(v0 + 232, (uint64_t)&type metadata for String, v20, v0 + 152);
  if (!*(_QWORD *)(v0 + 176))
  {
    sub_56024(v0 + 152, &qword_14FF2A0);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v0 + 506, v0 + 152, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_8:

    v22 = v0 + 216;
    goto LABEL_9;
  }
  v21 = *(_BYTE *)(v0 + 506);

  v22 = v0 + 216;
  if ((v21 & 1) != 0)
  {
    v23 = 3;
    goto LABEL_10;
  }
LABEL_9:
  v23 = 2;
LABEL_10:
  *(_QWORD *)(v17 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v23);
  v24 = objc_msgSend(v18, "standardUserDefaults");
  strcpy((char *)(v0 + 216), "showAllTVShows");
  *(_BYTE *)(v0 + 231) = -18;
  v54 = v0 + 184;
  NSUserDefaults.subscript.getter(v22, (uint64_t)&type metadata for String, v20, v0 + 184);
  if (!*(_QWORD *)(v0 + 208))
  {
    sub_56024(v54, &qword_14FF2A0);
    goto LABEL_15;
  }
  if ((swift_dynamicCast(v0 + 505, v54, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_15:

    v26 = v52;
    v27 = v53;
    goto LABEL_16;
  }
  v25 = *(_BYTE *)(v0 + 505);

  v26 = v52;
  v27 = v53;
  if ((v25 & 1) == 0)
  {
LABEL_16:
    v28 = 2;
    goto LABEL_17;
  }
  v28 = 3;
LABEL_17:
  v29 = (void *)objc_opt_self(MPModelPlaylistEntry);
  v30 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v28);
  *(_QWORD *)(v17 + 48) = v30;
  specialized Array._endMutation()(v30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9A0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v29, "kindWithKinds:", isa, swift_bridgeObjectRelease().n128_f64[0]);
  *(_QWORD *)(v0 + 464) = v32;

  v33 = (void *)objc_opt_self(MPModelPlaylist);
  v34 = v14;
  v35 = objc_msgSend(v33, "kindWithVariants:playlistEntryKind:options:", 215, v32, 0);
  objc_msgSend(v34, "setSectionKind:", v35);

  objc_msgSend(v34, "setItemKind:", v32);
  v36 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v36 + 16) = xmmword_1060220;
  *(_QWORD *)(v36 + 32) = v27;
  specialized Array._endMutation()(v36);
  sub_4E684(0, &qword_14FE290, MPModelObject_ptr);
  v37 = v27;
  v38 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "setScopedContainers:", v38, swift_bridgeObjectRelease().n128_f64[0]);

  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v39, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_1060460;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(inited + 40) = v41;
  v42 = (void *)objc_opt_self(MPPropertySet);
  v43 = v34;
  *(_QWORD *)(inited + 48) = objc_msgSend(v42, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryTVEpisode);
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 72) = objc_msgSend(v42, "emptyPropertySet");
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryMovie);
  *(_QWORD *)(inited + 88) = v45;
  *(_QWORD *)(inited + 96) = objc_msgSend(v42, "emptyPropertySet");
  sub_C26530(inited);
  v46 = objc_allocWithZone((Class)MPPropertySet);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v48 = Dictionary._bridgeToObjectiveC()().super.isa;
  v49 = objc_msgSend(v46, "initWithProperties:relationships:", v47, v48, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v43, "setItemProperties:", v49);
  v50 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 472) = v50;
  *(_QWORD *)(v50 + 16) = v43;
  v51 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 480) = v51;
  *v51 = v0;
  v51[1] = sub_C5661C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 504, 0, 0, 0xD000000000000015, 0x8000000001105980, sub_C5E254, v50, &type metadata for Bool);
}

uint64_t sub_C5661C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 472);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_C56678, 0, 0);
}

uint64_t sub_C56678()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned int v14;

  v1 = *(void **)(v0 + 464);
  v2 = *(void **)(v0 + 448);

  v14 = *(unsigned __int8 *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 376);
  v8 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 288);
  v13 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v14);
}

uint64_t sub_C56754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 488);
  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C56B3C;
  else
    v3 = sub_C567B8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C567B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD);
  void (*v18)(uint64_t, uint64_t);
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v1 = v0[43];
  v2 = v0[41];
  v3 = v0[42];
  v4 = v0[40];
  v6 = v0[37];
  v5 = v0[38];
  MusicLibraryResponse.items.getter(v0[44]);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v55(v3, v1, v4);
  v7 = sub_C5E210(&qword_14FE988, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v4, v7);
  v8 = (uint64_t *)(v5 + *(int *)(v6 + 36));
  v9 = *v8;
  v10 = sub_C5E210((unint64_t *)&qword_14FE990, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.endIndex.getter(v4, v10);
  if (v9 == v0[31])
  {
LABEL_5:
    v26 = v0[41];
    v27 = v0[39];
    v28 = v0[33];
    v29 = v0[34];
    sub_56024(v0[38], (uint64_t *)&unk_14FE950);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    v18 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  }
  else
  {
    v52 = v0[41];
    v60 = v0[34];
    v53 = v0;
    v11 = v0 + 15;
    while (1)
    {
      v12 = v0[42];
      v13 = v0[40];
      v14 = v0[38];
      v15 = v0[36];
      v57 = v0[35];
      v16 = v0[33];
      v17 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v11, v8, v13, v10);
      (*(void (**)(uint64_t))(v60 + 16))(v15);
      v17(v11, 0);
      v55(v12, v14, v13);
      dispatch thunk of Collection.formIndex(after:)(v8, v13, v10);
      v18 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v18(v12, v13);
      v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 32);
      v20 = v19(v57, v15, v16);
      Playlist.Entry.catalogID.getter(v20);
      v22 = v21;
      v23 = swift_bridgeObjectRelease();
      if (!v22)
        break;
      v0 = v53;
      v24 = v53[40];
      (*(void (**)(_QWORD, _QWORD, __n128))(v60 + 8))(v53[35], v53[33], v23);
      v25 = *v8;
      dispatch thunk of Collection.endIndex.getter(v24, v10);
      if (v25 == v53[31])
        goto LABEL_5;
    }
    v0 = v53;
    v30 = v53[39];
    v32 = v53[34];
    v31 = v53[35];
    v33 = v53[33];
    sub_56024(v53[38], (uint64_t *)&unk_14FE950);
    v19(v30, v31, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v33);
  }
  v34 = v0[50];
  v58 = v0[51];
  v61 = v0[53];
  v36 = v0[48];
  v35 = v0[49];
  v37 = v0[45];
  v38 = v0[46];
  v39 = v0[44];
  v40 = v0[39];
  v41 = v0[34];
  v54 = v0[33];
  v56 = v0[52];
  v18(v0[43], v0[40]);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v61, v58);
  LODWORD(v61) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v40, 1, v54) != 1;
  sub_56024(v40, &qword_14FB140);
  v42 = v0[53];
  v43 = v0[50];
  v45 = v0[46];
  v44 = v0[47];
  v47 = v0[42];
  v46 = v0[43];
  v49 = v0[38];
  v48 = v0[39];
  v50 = v0[36];
  v59 = v0[35];
  swift_task_dealloc(v0[55]);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v59);
  return ((uint64_t (*)(_QWORD))v0[1])(v61);
}

uint64_t sub_C56B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 408);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_errorRelease(v1);
  v5 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 400);
  v8 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 376);
  v10 = *(_QWORD *)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_C56C2C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8E0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_13B1DB0, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_C60298;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21B54C;
  aBlock[3] = &block_descriptor_72_4;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
}

void sub_C56D5C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  void (*v7)(void *, uint64_t, _BYTE *);
  char v8;
  uint64_t v9;
  _QWORD aBlock[6];
  char v11;

  v11 = 0;
  if (!a1)
  {
    v8 = 0;
    v7 = 0;
    v3 = 0;
    goto LABEL_6;
  }
  v1 = objc_msgSend(a1, "results");
  if (v1)
  {
    v2 = v1;
    v3 = swift_allocObject(&unk_13B1E00, 24, 7);
    *(_QWORD *)(v3 + 16) = &v11;
    v4 = swift_allocObject(&unk_13B1E28, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_C60318;
    *(_QWORD *)(v4 + 24) = v3;
    aBlock[4] = sub_129E54;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_C56F80;
    aBlock[3] = &block_descriptor_81_3;
    v5 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend(v2, "enumerateItemsUsingBlock:", v5, swift_release().n128_f64[0]);

    _Block_release(v5);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 128, 264, 62, 1, v6);
    swift_release();
    if ((v2 & 1) == 0)
    {
      v7 = sub_C60318;
      v8 = v11;
LABEL_6:
      LOBYTE(aBlock[0]) = v8;
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8E0);
      CheckedContinuation.resume(returning:)(aBlock, v9);
      sub_5C198((uint64_t)v7, v3);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_C56EEC(void *a1, uint64_t a2, _BYTE *a3, _BYTE *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = objc_msgSend(a1, "anyObject");
  if (v6)
  {
    v9 = v6;
    MPModelObject.bestIdentifier(for:)(2, 1u);
    v8 = v7;
    swift_bridgeObjectRelease();
    if (!v8)
    {
      *a4 = 1;
      *a3 = 1;
    }

  }
}

uint64_t sub_C56F80(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(void);
  id v11;
  uint64_t v13;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(void))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a2;
  v10();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Collaboration.Object.duplicate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[2] = v0;
  v2 = type metadata accessor for MusicLibraryPlaylistResponse(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicLibraryPlaylistRequest(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v1[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[10] = v7;
  v1[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Collaboration.Object(0);
  v1[12] = v8;
  v1[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_C57110, 0, 0);
}

id sub_C57110()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t *v4;
  uint64_t v5;
  uint64_t **v6;
  id result;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t **v12;

  v1 = v0[12];
  v2 = v0[13];
  sub_C5E078(v0[2], v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  v4 = (uint64_t *)v0[13];
  if (EnumCaseMultiPayload == 1)
  {
    v5 = v0[11];
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v0[10] + 32))(v5, v4, v0[9]);
    static MusicLibraryPlaylistRequest.duplicatingPlaylist(_:)(v5);
    v6 = (uint64_t **)swift_task_alloc(async function pointer to MusicLibraryPlaylistRequest.response()[1]);
    v0[19] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = (uint64_t *)sub_C57368;
    return (id)MusicLibraryPlaylistRequest.response()(v0[5]);
  }
  else
  {
    v8 = *v4;
    v0[14] = *v4;
    result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
    if (result)
    {
      v9 = result;
      v10 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryDuplicatePlaylistChangeRequest), "initWithLibrary:playlist:", result, v8);
      v0[15] = (uint64_t)v10;

      v11 = swift_task_alloc(32);
      v0[16] = v11;
      *(_QWORD *)(v11 + 16) = v10;
      v12 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
      v0[17] = (uint64_t)v12;
      *v12 = v0;
      v12[1] = (uint64_t *)sub_C57290;
      return (id)withCheckedThrowingContinuation<A>(isolation:function:_:)(v12, 0, 0, 0x746163696C707564, 0xEB00000000292865, sub_C5E25C, v11, (char *)&type metadata for () + 8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_C57290()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_C57460;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 128));
    v4 = sub_C572FC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_C572FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 120);

  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C57368()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_C574D8;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    v4 = sub_C573DC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_C573DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C57460()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);

  swift_task_dealloc(v2);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C574D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_C5755C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED60);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_13B1D60, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_C60278;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_995FDC;
  aBlock[3] = &block_descriptor_66_0;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
}

uint64_t sub_C5768C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (a2)
  {
    v5 = a2;
    swift_errorRetain(a2);
    v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED60);
    return CheckedContinuation.resume(throwing:)(&v5, v2);
  }
  else
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED60);
    return CheckedContinuation.resume(returning:)(v4, v4);
  }
}

uint64_t Collaboration.Manager.__allocating_init(coordinator:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 56, 7);
  sub_8B15C(a1, v3 + 16);
  return v3;
}

uint64_t Collaboration.Manager.init(coordinator:)(__int128 *a1)
{
  uint64_t v1;

  sub_8B15C(a1, v1 + 16);
  return v1;
}

uint64_t GroupActivitiesManager.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_55D1C(v3, a1);
}

id Collaboration.Manager.participantProfile.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v1 = objc_msgSend(v0, "activeUserState");

  v2 = objc_msgSend(v1, "music");
  v3 = objc_msgSend(v2, "userProfile");

  return v3;
}

double Collaboration.Manager.supportsCollaboration(for:)(uint64_t a1)
{
  return sub_C5E264(a1);
}

uint64_t Collaboration.Manager.isCollaborationSupported(for:)(uint64_t a1)
{
  return sub_C57AD4(a1);
}

uint64_t Logger.collaboration.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.collaboration);
}

void Collaboration.Manager.canCollaborate(for:)()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v0 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109FAE0);
  v2 = swift_getKeyPath(&unk_109FB08);
  static Published.subscript.getter(&v19, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v21;
  v4 = v22;
  v5 = v23;
  v6 = v24;
  v7 = v25;
  v8 = v26;
  v9 = v27;
  if ((v20 & 1) == 0)
  {
    v10 = sub_C5E5E8();
    v11 = swift_allocError(&type metadata for Collaboration.Error, v10, 0, 0);
    v13 = 3;
LABEL_10:
    *(_QWORD *)v12 = v13;
    goto LABEL_11;
  }
  if (!BYTE2(v19))
  {
    v18 = sub_C5E5E8();
    v11 = swift_allocError(&type metadata for Collaboration.Error, v18, 0, 0);
    v13 = 6;
    goto LABEL_10;
  }
  v28 = v25;
  v14 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "isInitialImport");

    if ((v16 & 1) != 0)
    {
      v17 = sub_C5E5E8();
      v11 = swift_allocError(&type metadata for Collaboration.Error, v17, 0, 0);
      *(_QWORD *)v12 = 7;
      v7 = v28;
LABEL_11:
      *(_QWORD *)(v12 + 8) = 0;
      *(_BYTE *)(v12 + 16) = 3;
      swift_willThrow(v11);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v6);

      return;
    }
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);

  }
  else
  {
    __break(1u);
  }
}

uint64_t Collaboration.Manager.isCollaborationPossible(for:)(uint64_t a1)
{
  return sub_C57AD4(a1);
}

uint64_t sub_C57AD4(uint64_t a1)
{
  sub_C5E264(a1);
  return 1;
}

uint64_t *Collaboration.Manager.DeepLinkType.actionKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.actionKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.getter()
{
  return sub_C57D14(&static Collaboration.Manager.DeepLinkType.actionKey);
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_C57D74(a1, a2, &static Collaboration.Manager.DeepLinkType.actionKey, &qword_14FE8D8);
}

uint64_t (*static Collaboration.Manager.DeepLinkType.actionKey.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static Collaboration.Manager.DeepLinkType.actionKey, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *Collaboration.Manager.DeepLinkType.profileKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.profileKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.getter()
{
  return sub_C57D14((uint64_t *)&static Collaboration.Manager.DeepLinkType.profileKey);
}

uint64_t sub_C57D14(uint64_t *a1)
{
  uint64_t v2;
  _BYTE v4[24];

  swift_beginAccess(a1, v4, 0, 0);
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_C57D74(a1, a2, static Collaboration.Manager.DeepLinkType.profileKey, &static Collaboration.Manager.DeepLinkType.profileKey[1]);
}

uint64_t sub_C57D74(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v8;
  _BYTE v10[24];

  swift_beginAccess(a3, v10, 1, 0);
  v8 = *a4;
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease(v8);
}

uint64_t (*static Collaboration.Manager.DeepLinkType.profileKey.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static Collaboration.Manager.DeepLinkType.profileKey, a1, 33, 0);
  return j_j__swift_endAccess;
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::Int v10;
  MusicCore::Collaboration::Manager::DeepLinkType_optional v11;
  _BYTE v13[24];

  swift_beginAccess(&static Collaboration.Manager.DeepLinkType.actionKey, v13, 0, 0);
  if (!*((_QWORD *)a1._rawValue + 2))
    goto LABEL_10;
  v2 = qword_14FE8D8;
  v3 = static Collaboration.Manager.DeepLinkType.actionKey;
  swift_bridgeObjectRetain();
  v4 = sub_21BAD0(v3, v2);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease(v2);
LABEL_10:
    swift_bridgeObjectRelease(a1._rawValue);
    return (MusicCore::Collaboration::Manager::DeepLinkType_optional)2;
  }
  v6 = (uint64_t *)(*((_QWORD *)a1._rawValue + 7) + 16 * v4);
  v7 = *v6;
  v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(a1._rawValue);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  v10 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A67B0, v9);
  swift_bridgeObjectRelease(v8);
  if (v10 == 1)
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  else
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  if (v10)
    return v11;
  else
    return 0;
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MusicCore::Collaboration::Manager::DeepLinkType_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A67B0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  else
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t Collaboration.Manager.DeepLinkType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E69646E6570;
  else
    return 1852403562;
}

uint64_t sub_C57F74(char *a1, char *a2)
{
  return sub_BB8640(*a1, *a2);
}

Swift::Int sub_C57F80()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x676E69646E6570;
  else
    v2 = 1852403562;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_C57FF8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x676E69646E6570;
  else
    v2 = 1852403562;
  if (*v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_C5804C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x676E69646E6570;
  else
    v2 = 1852403562;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_C580C0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A67B0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_C5811C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1852403562;
  if (*v1)
    v2 = 0x676E69646E6570;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t Collaboration.Manager.queryItemsDictionary(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::Int v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  _BYTE v23[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE9D0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for URLComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_56024((uint64_t)v4, &qword_14FE9D0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v9 = URLComponents.queryItemsDictionary.getter();
  if (v9)
  {
    v10 = sub_C5DCB0((uint64_t)&off_13A6800);
    swift_arrayDestroy(&unk_13A6820, 2, &type metadata for String);
    v11 = swift_beginAccess(&static Collaboration.Manager.DeepLinkType.actionKey, v23, 0, 0);
    if (*(_QWORD *)(v9 + 16))
    {
      v12 = qword_14FE8D8;
      v13 = static Collaboration.Manager.DeepLinkType.actionKey;
      swift_bridgeObjectRetain();
      v14 = sub_21BAD0(v13, v12);
      if ((v15 & 1) != 0)
      {
        v16 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v14);
        v17 = *v16;
        v18 = v16[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v12);
        v19 = sub_A324A0(v17, v18, v10);
        v20 = swift_bridgeObjectRelease(v10);
        (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v20);
        swift_bridgeObjectRelease(v18);
        if ((v19 & 1) != 0)
          return v9;
        goto LABEL_11;
      }
      v11 = swift_bridgeObjectRelease(v12);
    }
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v11);
    swift_bridgeObjectRelease(v10);
LABEL_11:
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t Collaboration.Manager.start(_:isOpen:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t started;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)(v3 + 328) = a3;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F0);
  *(_QWORD *)(v3 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v3 + 56) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 64) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 72) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 80) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 88) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 96) = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  *(_QWORD *)(v3 + 104) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 112) = v9;
  *(_QWORD *)(v3 + 120) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 128) = swift_task_alloc(v10);
  *(_QWORD *)(v3 + 136) = swift_task_alloc(v10);
  v11 = type metadata accessor for Playlist.Collaboration.InvitationMode(0);
  *(_QWORD *)(v3 + 144) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 152) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 160) = swift_task_alloc(v13);
  *(_QWORD *)(v3 + 168) = swift_task_alloc(v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9E0);
  *(_QWORD *)(v3 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for MusicCollaborativePlaylist.StartCollaborationRequest(0);
  *(_QWORD *)(v3 + 184) = started;
  v16 = *(_QWORD *)(started - 8);
  *(_QWORD *)(v3 + 192) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v17);
  v18 = type metadata accessor for Collaboration.Object(0);
  *(_QWORD *)(v3 + 216) = v18;
  *(_QWORD *)(v3 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 232) = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 240) = v21;
  *(_QWORD *)(v3 + 248) = v22;
  return swift_task_switch(sub_C58568, v21, v22);
}

uint64_t sub_C58568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void (*v20)(uint64_t, void **, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  unsigned int *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  void (*v33)(uint64_t, _QWORD, uint64_t);
  unsigned int *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.collaboration);
  *(_QWORD *)(v0 + 256) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 328);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl(&dword_0, v3, v4, "Start called - isOpenInvite=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 40);

  sub_C5E078(v9, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  v11 = *(void ***)(v0 + 224);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 64);
    v19 = *(unsigned __int8 *)(v0 + 328);
    v20 = *(void (**)(uint64_t, void **, uint64_t))(v18 + 32);
    *(_QWORD *)(v0 + 296) = v20;
    v20(v15, v11, v17);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    *(_QWORD *)(v0 + 304) = v21;
    v21(v16, v15, v17);
    v22 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    if (!v19)
      v22 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v12, *v22, v14);
    MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)(v16, v12);
    v23 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.StartCollaborationRequest.response()[1]);
    *(_QWORD *)(v0 + 312) = v23;
    *v23 = v0;
    v23[1] = sub_C58F14;
    return MusicCollaborativePlaylist.StartCollaborationRequest.response()(*(_QWORD *)(v0 + 80));
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 152);
    v31 = *(unsigned __int8 *)(v0 + 328);
    v32 = *v11;
    *(_QWORD *)(v0 + 264) = *v11;
    v33 = *(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104);
    if (v31)
      v34 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    else
      v34 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    v33(v28, *v34, v29);
    v35 = v32;
    MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
    {
      v36 = *(_QWORD *)(v0 + 176);
      swift_release();
      sub_56024(v36, (uint64_t *)&unk_14FE9E0);
      v37 = sub_C5E5E8();
      v53 = swift_allocError(&type metadata for Collaboration.Error, v37, 0, 0);
      *(_OWORD *)v38 = xmmword_1099300;
      *(_BYTE *)(v38 + 16) = 3;
      swift_willThrow(v53);

      v40 = *(_QWORD *)(v0 + 200);
      v39 = *(_QWORD *)(v0 + 208);
      v42 = *(_QWORD *)(v0 + 168);
      v41 = *(_QWORD *)(v0 + 176);
      v43 = *(_QWORD *)(v0 + 160);
      v45 = *(_QWORD *)(v0 + 128);
      v44 = *(_QWORD *)(v0 + 136);
      v46 = *(_QWORD *)(v0 + 120);
      v47 = *(_QWORD *)(v0 + 96);
      v49 = *(_QWORD *)(v0 + 88);
      v50 = *(_QWORD *)(v0 + 80);
      v51 = *(_QWORD *)(v0 + 72);
      v52 = *(_QWORD *)(v0 + 48);
      swift_task_dealloc(*(_QWORD *)(v0 + 224));
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v51);
      swift_task_dealloc(v52);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
      v48 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.StartCollaborationRequest.perform()[1]);
      *(_QWORD *)(v0 + 272) = v48;
      *v48 = v0;
      v48[1] = sub_C58934;
      return MusicCollaborativePlaylist.StartCollaborationRequest.perform()();
    }
  }
}

uint64_t sub_C58934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 272);
  v3[35] = a1;
  v3[36] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_C59548;
  else
    v5 = sub_C5899C;
  return swift_task_switch(v5, v3[30], v3[31]);
}

uint64_t sub_C5899C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[2];

  v1 = objc_msgSend(*(id *)(v0 + 280), "collaborationInvitationURL", swift_release().n128_f64[0]);
  v2 = *(_QWORD *)(v0 + 136);
  if (v1)
  {
    v3 = v1;
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v1);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v6) != 1)
    {
      v7 = *(_QWORD *)(v0 + 280);
      v8 = *(_QWORD *)(v0 + 208);
      v9 = *(_QWORD *)(v0 + 216);
      v10 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD *)(v0 + 192);
      v12 = *(_QWORD *)(v0 + 136);
      v13 = *(_QWORD **)(v0 + 32);

      sub_56024(v12, &qword_14FAC20);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
      *v13 = v7;
      swift_storeEnumTagMultiPayload(v13, v9, 0);
      v14 = *(_QWORD *)(v0 + 200);
      v15 = *(_QWORD *)(v0 + 208);
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 160);
      v20 = *(_QWORD *)(v0 + 128);
      v19 = *(_QWORD *)(v0 + 136);
      v21 = *(_QWORD *)(v0 + 120);
      v22 = *(_QWORD *)(v0 + 96);
      v64 = *(_QWORD *)(v0 + 88);
      v66 = *(_QWORD *)(v0 + 80);
      v68 = *(_QWORD *)(v0 + 72);
      v70 = *(_QWORD *)(v0 + 48);
      swift_task_dealloc(*(_QWORD *)(v0 + 224));
      swift_task_dealloc(v15);
      swift_task_dealloc(v14);
      swift_task_dealloc(v16);
      swift_task_dealloc(v17);
      swift_task_dealloc(v18);
      swift_task_dealloc(v19);
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v64);
      swift_task_dealloc(v66);
      swift_task_dealloc(v68);
      swift_task_dealloc(v70);
      v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23();
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 104));
  }
  v24 = *(void **)(v0 + 280);
  sub_56024(*(_QWORD *)(v0 + 136), &qword_14FAC20);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(void **)(v0 + 280);
  if (v27)
  {
    v29 = swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v72[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v31 = v28;
    v32 = objc_msgSend(v31, "description");
    v33 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v29 + 4) = sub_BA95EC(v33, v35, v72);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v25, v26, "invitationURL missing for=%{public}s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {

  }
  v36 = sub_C5E5E8();
  v37 = swift_allocError(&type metadata for Collaboration.Error, v36, 0, 0);
  *(_OWORD *)v38 = xmmword_1061BE0;
  *(_BYTE *)(v38 + 16) = 3;
  swift_willThrow(v37);

  swift_errorRetain(v37);
  v39 = swift_errorRetain(v37);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    v72[0] = v43;
    *(_DWORD *)v42 = 136446210;
    *(_QWORD *)(v0 + 24) = v37;
    swift_errorRetain(v37);
    v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v45 = (char *)String.init<A>(describing:)(v0 + 24, v44);
    *(_QWORD *)(v42 + 4) = sub_BA95EC(v45, v46, v72);
    swift_bridgeObjectRelease();
    swift_errorRelease(v37);
    swift_errorRelease(v37);
    _os_log_impl(&dword_0, v40, v41, "Start failed with error=%{public}s", (uint8_t *)v42, 0xCu);
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);
  }
  else
  {
    swift_errorRelease(v37);
    swift_errorRelease(v37);
  }

  v47 = *(void **)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 208);
  v49 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 192);
  v51 = sub_C5E5E8();
  v71 = swift_allocError(&type metadata for Collaboration.Error, v51, 0, 0);
  *(_QWORD *)v52 = v37;
  *(_QWORD *)(v52 + 8) = 0;
  *(_BYTE *)(v52 + 16) = 1;
  swift_willThrow(v71);

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v54 = *(_QWORD *)(v0 + 200);
  v53 = *(_QWORD *)(v0 + 208);
  v56 = *(_QWORD *)(v0 + 168);
  v55 = *(_QWORD *)(v0 + 176);
  v57 = *(_QWORD *)(v0 + 160);
  v59 = *(_QWORD *)(v0 + 128);
  v58 = *(_QWORD *)(v0 + 136);
  v60 = *(_QWORD *)(v0 + 120);
  v61 = *(_QWORD *)(v0 + 96);
  v63 = *(_QWORD *)(v0 + 88);
  v65 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 72);
  v69 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_C58F14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C597B8;
  else
    v4 = sub_C58F74;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 240), *(_QWORD *)(v2 + 248));
}

uint64_t sub_C58F74()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void);
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[2];

  v1 = v0[6];
  *(_QWORD *)&v2 = swift_release().n128_u64[0];
  Playlist.collaboration.getter(v2);
  v3 = type metadata accessor for Playlist.Collaboration(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[16];
  v7 = v0[13];
  v8 = v0[14];
  v9 = v0[6];
  if (v5 == 1)
  {
    sub_56024(v0[6], &qword_14FE8F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    Playlist.Collaboration.invitationURL.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v58 = (void (*)(uint64_t, uint64_t, uint64_t))v0[37];
      v85 = v0[27];
      v60 = v0[24];
      v59 = v0[25];
      v61 = v0[23];
      v62 = v0[12];
      v63 = v0[10];
      v65 = v0[7];
      v64 = v0[8];
      v66 = v0[4];
      sub_56024(v0[16], &qword_14FAC20);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v65);
      v58(v66, v63, v65);
      swift_storeEnumTagMultiPayload(v66, v85, 1);
      v67 = v0[25];
      v68 = v0[26];
      v70 = v0[21];
      v69 = v0[22];
      v71 = v0[20];
      v73 = v0[16];
      v72 = v0[17];
      v74 = v0[15];
      v75 = v0[12];
      v79 = v0[11];
      v81 = v0[10];
      v83 = v0[9];
      v86 = v0[6];
      swift_task_dealloc(v0[28]);
      swift_task_dealloc(v68);
      swift_task_dealloc(v67);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v75);
      swift_task_dealloc(v79);
      swift_task_dealloc(v81);
      swift_task_dealloc(v83);
      swift_task_dealloc(v86);
      v57 = (uint64_t (*)(void))v0[1];
      return v57();
    }
  }
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[38];
  v12 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  sub_56024(v0[16], &qword_14FAC20);
  v14 = v10(v12, v11, v13);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  v17 = os_log_type_enabled(v15, v16);
  v19 = v0[8];
  v18 = v0[9];
  v20 = v0[7];
  if (v17)
  {
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v87[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v23 = sub_4DD24(&qword_14FC9C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v23);
    *(_QWORD *)(v21 + 4) = sub_BA95EC(v24, v25, v87);
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    v27(v18, v20, v26);
    _os_log_impl(&dword_0, v15, v16, "invitationURL missing for=%{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    ((void (*)(_QWORD, _QWORD))v27)(v0[9], v0[7]);
  }

  v28 = v0[10];
  v29 = v0[7];
  v30 = sub_C5E5E8();
  v31 = swift_allocError(&type metadata for Collaboration.Error, v30, 0, 0);
  *(_OWORD *)v32 = xmmword_1061BE0;
  *(_BYTE *)(v32 + 16) = 3;
  swift_willThrow(v31);
  ((void (*)(uint64_t, uint64_t))v27)(v28, v29);
  swift_errorRetain(v31);
  v33 = swift_errorRetain(v31);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.error.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v87[0] = v37;
    *(_DWORD *)v36 = 136446210;
    v0[2] = v31;
    swift_errorRetain(v31);
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v39 = (char *)String.init<A>(describing:)(v0 + 2, v38);
    *(_QWORD *)(v36 + 4) = sub_BA95EC(v39, v40, v87);
    swift_bridgeObjectRelease();
    swift_errorRelease(v31);
    swift_errorRelease(v31);
    _os_log_impl(&dword_0, v34, v35, "Start failed with error=%{public}s", (uint8_t *)v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {
    swift_errorRelease(v31);
    swift_errorRelease(v31);
  }

  v41 = v0[24];
  v42 = v0[25];
  v43 = v0[23];
  v44 = v0[12];
  v45 = v0[7];
  v46 = v0[8];
  v84 = swift_allocError(&type metadata for Collaboration.Error, v30, 0, 0);
  *(_QWORD *)v47 = v31;
  *(_QWORD *)(v47 + 8) = 0;
  *(_BYTE *)(v47 + 16) = 1;
  swift_willThrow(v84);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  v49 = v0[25];
  v48 = v0[26];
  v51 = v0[21];
  v50 = v0[22];
  v52 = v0[20];
  v54 = v0[16];
  v53 = v0[17];
  v55 = v0[15];
  v56 = v0[12];
  v77 = v0[11];
  v78 = v0[10];
  v80 = v0[9];
  v82 = v0[6];
  swift_task_dealloc(v0[28]);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  v57 = (uint64_t (*)(void))v0[1];
  return v57();
}

uint64_t sub_C59548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  v1 = *(_QWORD *)(v0 + 288);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v31 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 24) = v1;
    swift_errorRetain(v1);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v8 = (char *)String.init<A>(describing:)(v0 + 24, v7);
    *(_QWORD *)(v5 + 4) = sub_BA95EC(v8, v9, &v31);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "Start failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = *(void **)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 192);
  v14 = sub_C5E5E8();
  v30 = swift_allocError(&type metadata for Collaboration.Error, v14, 0, 0);
  *(_QWORD *)v15 = v1;
  *(_QWORD *)(v15 + 8) = 0;
  *(_BYTE *)(v15 + 16) = 1;
  swift_willThrow(v30);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v17 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 88);
  v27 = *(_QWORD *)(v0 + 80);
  v28 = *(_QWORD *)(v0 + 72);
  v29 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C597B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  swift_release();
  v1 = *(_QWORD *)(v0 + 320);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v33 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v8 = (char *)String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v5 + 4) = sub_BA95EC(v8, v9, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "Start failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = sub_C5E5E8();
  v32 = swift_allocError(&type metadata for Collaboration.Error, v16, 0, 0);
  *(_QWORD *)v17 = v1;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  swift_willThrow(v32);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v19 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 96);
  v28 = *(_QWORD *)(v0 + 88);
  v29 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 72);
  v31 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.validate(_:url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.JoinRequest(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  v3[9] = v6;
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v3[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[13] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v10);
  v3[15] = swift_task_alloc(v10);
  v11 = type metadata accessor for URL(0);
  v3[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[17] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v13);
  v3[19] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v3[20] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v3[21] = v16;
  v3[22] = v17;
  return swift_task_switch(sub_C59B88, v16, v17);
}

uint64_t sub_C59B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 184) = __swift_project_value_buffer(v5, (uint64_t)static Logger.collaboration);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = v44(v1, v4, v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v45 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_4DD24((unint64_t *)&qword_14FE9F8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v16, v17, &v45);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v19);
    _os_log_impl(&dword_0, v7, v8, "Validate called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  }

  v20 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  sub_C5E078(*(_QWORD *)(v0 + 32), v21);
  if (swift_getEnumCaseMultiPayload(v21, v20) == 1)
  {
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 32))(v24, *(_QWORD *)(v0 + 80), v22);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
  }
  else
  {
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(**(_QWORD **)(v0 + 80));
  }
  v25 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 160));
    sub_56024(v27, &qword_14FE970);
    v28 = sub_C5E5E8();
    v29 = swift_allocError(&type metadata for Collaboration.Error, v28, 0, 0);
    *(_OWORD *)v30 = xmmword_1099300;
    *(_BYTE *)(v30 + 16) = 3;
    swift_willThrow(v29);
    v31 = *(_QWORD *)(v0 + 144);
    v33 = *(_QWORD *)(v0 + 112);
    v32 = *(_QWORD *)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 80);
    v34 = *(_QWORD *)(v0 + 88);
    v36 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 144);
    v40 = *(_QWORD *)(v0 + 120);
    v39 = *(_QWORD *)(v0 + 128);
    v41 = *(_QWORD *)(v0 + 112);
    v42 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v40, v27, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v41, v40, v25);
    v44(v38, v42, v39);
    MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)(v41, v38);
    v43 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.JoinRequest.validate()[1]);
    *(_QWORD *)(v0 + 192) = v43;
    *v43 = v0;
    v43[1] = sub_C59F38;
    return MusicCollaborativePlaylist.JoinRequest.validate()(*(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_C59F38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5A064;
  else
    v4 = sub_C59F98;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
}

uint64_t sub_C59F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5A064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = swift_release(*(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v5);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 200);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v31 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 16) = v9;
    swift_errorRetain(v9);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v13 = (char *)String.init<A>(describing:)(v0 + 16, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v14, &v31);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl(&dword_0, v7, v8, "Validate failed with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 200);
    swift_errorRelease(v16);
    swift_errorRelease(v16);
  }

  v17 = *(_QWORD *)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = sub_C5E5E8();
  v22 = swift_allocError(&type metadata for Collaboration.Error, v21, 0, 0);
  *(_QWORD *)v23 = v17;
  *(_QWORD *)(v23 + 8) = 0;
  *(_BYTE *)(v23 + 16) = 1;
  swift_willThrow(v22);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  v24 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 112);
  v25 = *(_QWORD *)(v0 + 120);
  v28 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v29 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.join(_:url:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for MusicCollaborativePlaylist.JoinRequest(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Collaboration.Object(0);
  v2[8] = v5;
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v9);
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  v10 = type metadata accessor for URL(0);
  v2[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[17] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v12);
  v2[19] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v2[20] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v2[21] = v15;
  v2[22] = v16;
  return swift_task_switch(sub_C5A3E8, v15, v16);
}

uint64_t sub_C5A3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 184) = __swift_project_value_buffer(v5, (uint64_t)static Logger.collaboration);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = v44(v1, v4, v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v45 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_4DD24((unint64_t *)&qword_14FE9F8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v16, v17, &v45);
    v18 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v18);
    _os_log_impl(&dword_0, v7, v8, "Join called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  }

  v19 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 72);
  sub_C5E078(*(_QWORD *)(v0 + 24), v20);
  if (swift_getEnumCaseMultiPayload(v20, v19) == 1)
  {
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 32))(v23, *(_QWORD *)(v0 + 72), v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
  }
  else
  {
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(**(_QWORD **)(v0 + 72));
  }
  v24 = *(_QWORD *)(v0 + 88);
  v25 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v26, 1, v24) == 1)
  {
    swift_release();
    sub_56024(v26, &qword_14FE970);
    v27 = sub_C5E5E8();
    v28 = swift_allocError(&type metadata for Collaboration.Error, v27, 0, 0);
    *(_OWORD *)v29 = xmmword_1099300;
    *(_BYTE *)(v29 + 16) = 3;
    swift_willThrow(v28);
    v30 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 72);
    v34 = *(_QWORD *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 144);
    v40 = *(_QWORD *)(v0 + 120);
    v39 = *(_QWORD *)(v0 + 128);
    v41 = *(_QWORD *)(v0 + 112);
    v42 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v40, v26, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v41, v40, v24);
    v44(v38, v42, v39);
    MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)(v41, v38);
    v43 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.JoinRequest.response()[1]);
    *(_QWORD *)(v0 + 192) = v43;
    *v43 = v0;
    v43[1] = sub_C5A7A4;
    return MusicCollaborativePlaylist.JoinRequest.response()(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_C5A7A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[21];
    v5 = v2[22];
    v6 = sub_C5A8F4;
  }
  else
  {
    v7 = v2[13];
    v8 = v2[11];
    v9 = *(void (**)(uint64_t, uint64_t))(v2[12] + 8);
    v2[26] = v9;
    v9(v7, v8);
    v4 = v2[21];
    v5 = v2[22];
    v6 = sub_C5A81C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_C5A81C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  v1(v4, v6);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5A8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 200);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v30 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "Join failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 200);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 40);
  v19 = sub_C5E5E8();
  v20 = swift_allocError(&type metadata for Collaboration.Error, v19, 0, 0);
  *(_QWORD *)v21 = v12;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  swift_willThrow(v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v22 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v28 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.end(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicCollaborativePlaylist.EndCollaborationRequest(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[11] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[12] = v9;
  v2[13] = v10;
  return swift_task_switch(sub_C5ABEC, v9, v10);
}

uint64_t sub_C5ABEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.collaboration);
  v0[14] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "End called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[4];
  v8 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  MusicCollaborativePlaylist.EndCollaborationRequest.init(playlist:)(v6);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.EndCollaborationRequest.response()[1]);
  v0[15] = v10;
  *v10 = v0;
  v10[1] = sub_C5AD2C;
  return MusicCollaborativePlaylist.EndCollaborationRequest.response()(v0[3]);
}

uint64_t sub_C5AD2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5AD8C;
  else
    v4 = sub_C6053C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_C5AD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v21 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "End failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v17 = sub_C5E5E8();
  v18 = swift_allocError(&type metadata for Collaboration.Error, v17, 0, 0);
  *(_QWORD *)v19 = v12;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 1;
  swift_willThrow(v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc(v13);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.moderate(_:collaborator:in:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  *(_BYTE *)(v3 + 193) = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest(0);
  *(_QWORD *)(v3 + 40) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v3 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 72) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 80) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist.Collaborator(0);
  *(_QWORD *)(v3 + 96) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 104) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 112) = swift_task_alloc(v11);
  *(_QWORD *)(v3 + 120) = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 128) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 136) = v14;
  *(_QWORD *)(v3 + 144) = v15;
  return swift_task_switch(sub_C5B074, v14, v15);
}

uint64_t sub_C5B074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t type;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 152) = __swift_project_value_buffer(v9, (uint64_t)static Logger.collaboration);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v44(v1, v8, v2);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v10(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  if (v14)
  {
    type = v13;
    v21 = *(_BYTE *)(v0 + 193) & 1;
    v41 = *(_QWORD *)(v0 + 72);
    v22 = swift_slowAlloc(32, -1);
    v42 = swift_slowAlloc(96, -1);
    v45 = v42;
    *(_DWORD *)v22 = 136446722;
    *(_BYTE *)(v0 + 192) = v21;
    v23 = (char *)String.init<A>(describing:)(v0 + 192, &type metadata for Collaboration.Manager.Moderation);
    *(_QWORD *)(v22 + 4) = sub_BA95EC(v23, v24, &v45);
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v25 = sub_4DD24(&qword_14FEA18, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v25);
    *(_QWORD *)(v22 + 14) = sub_BA95EC(v26, v27, &v45);
    v28 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v28);
    *(_WORD *)(v22 + 22) = 2082;
    v29 = sub_4DD24(&qword_14FC9C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v29);
    *(_QWORD *)(v22 + 24) = sub_BA95EC(v30, v31, &v45);
    v32 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v18, v20, v32);
    _os_log_impl(&dword_0, v12, type, "    Moderate called for:\n        - type=%{public}s\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy(v42, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v16 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }

  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 80);
  v35 = *(_QWORD *)(v0 + 64);
  v36 = *(_QWORD *)(v0 + 32);
  v37 = *(_BYTE *)(v0 + 193);
  v44(v33, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  v10(v34, v36, v35);
  MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.init(collaborator:playlist:)(v33, v34);
  if ((v37 & 1) != 0)
  {
    v40 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.reject()[1]);
    *(_QWORD *)(v0 + 176) = v40;
    *v40 = v0;
    v40[1] = sub_C5B4D0;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.reject()();
  }
  else
  {
    v38 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.approve()[1]);
    *(_QWORD *)(v0 + 160) = v38;
    *v38 = v0;
    v38[1] = sub_C5B3DC;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.approve()();
  }
}

uint64_t sub_C5B3DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 160);
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5B530;
  else
    v4 = sub_C5B43C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_C5B43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5B4D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5B730;
  else
    v4 = sub_C6056C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_C5B530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v21 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v8 = (char *)String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v5 + 4) = sub_BA95EC(v8, v9, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "Moderate failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v11 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 40);
  v16 = sub_C5E5E8();
  v17 = swift_allocError(&type metadata for Collaboration.Error, v16, 0, 0);
  *(_QWORD *)v18 = v1;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  swift_willThrow(v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v20);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5B730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v21 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v8 = (char *)String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v5 + 4) = sub_BA95EC(v8, v9, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v3, v4, "Moderate failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v11 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 40);
  v16 = sub_C5E5E8();
  v17 = swift_allocError(&type metadata for Collaboration.Error, v16, 0, 0);
  *(_QWORD *)v18 = v1;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  swift_willThrow(v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v20);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.remove(collaborator:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.RemoveCollaboratorRequest(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[10] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v8);
  v3[12] = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist.Collaborator(0);
  v3[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[14] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v11);
  v3[16] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v3[17] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v3[18] = v14;
  v3[19] = v15;
  return swift_task_switch(sub_C5BA38, v14, v15);
}

uint64_t sub_C5BA38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = v0[16];
  v2 = v0[13];
  v3 = v0[14];
  v4 = v0[12];
  v5 = v0[9];
  v6 = v0[10];
  v8 = v0[4];
  v7 = v0[5];
  v9 = type metadata accessor for Logger(0);
  v0[20] = __swift_project_value_buffer(v9, (uint64_t)static Logger.collaboration);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v38(v1, v8, v2);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v10(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = v0[16];
  v17 = v0[13];
  v16 = v0[14];
  v18 = v0[12];
  v20 = v0[9];
  v19 = v0[10];
  if (v14)
  {
    v36 = v0[10];
    v21 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v39 = v37;
    *(_DWORD *)v21 = 136446466;
    v22 = sub_4DD24(&qword_14FEA18, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v23 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v22);
    *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, &v39);
    v25 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v25);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = sub_4DD24(&qword_14FC9C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v26);
    *(_QWORD *)(v21 + 14) = sub_BA95EC(v27, v28, &v39);
    v29 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v36 + 8))(v18, v20, v29);
    _os_log_impl(&dword_0, v12, v13, "    Remove called for:\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v16 + 8))(v0[16], v0[13]);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }

  v30 = v0[15];
  v31 = v0[11];
  v32 = v0[9];
  v33 = v0[5];
  v38(v30, v0[4], v0[13]);
  v10(v31, v33, v32);
  MusicCollaborativePlaylist.RemoveCollaboratorRequest.init(collaborator:playlist:)(v30, v31);
  v34 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.RemoveCollaboratorRequest.response()[1]);
  v0[21] = v34;
  *v34 = v0;
  v34[1] = sub_C5BD1C;
  return MusicCollaborativePlaylist.RemoveCollaboratorRequest.response()(v0[3]);
}

uint64_t sub_C5BD1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5BE10;
  else
    v4 = sub_C5BD7C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_C5BD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5BE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v24 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v24);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "Remove failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 176);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 48);
  v20 = sub_C5E5E8();
  v21 = swift_allocError(&type metadata for Collaboration.Error, v20, 0, 0);
  *(_QWORD *)v22 = v12;
  *(_QWORD *)(v22 + 8) = 0;
  *(_BYTE *)(v22 + 16) = 1;
  swift_willThrow(v21);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.resetInvitationURL(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicCollaborativePlaylist.ResetInvitationLinkRequest(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[11] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[12] = v9;
  v2[13] = v10;
  return swift_task_switch(sub_C5C0D4, v9, v10);
}

uint64_t sub_C5C0D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.collaboration);
  v0[14] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "Reset URL called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[4];
  v8 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  MusicCollaborativePlaylist.ResetInvitationLinkRequest.init(playlist:)(v6);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.ResetInvitationLinkRequest.response()[1]);
  v0[15] = v10;
  *v10 = v0;
  v10[1] = sub_C5C214;
  return MusicCollaborativePlaylist.ResetInvitationLinkRequest.response()(v0[3]);
}

uint64_t sub_C5C214()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5C2D8;
  else
    v4 = sub_C5C274;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_C5C274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5C2D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v21 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "Reset failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v17 = sub_C5E5E8();
  v18 = swift_allocError(&type metadata for Collaboration.Error, v17, 0, 0);
  *(_QWORD *)v19 = v12;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 1;
  swift_willThrow(v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc(v13);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.updateShareOption(_:for:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v2 + 24) = a2;
  *(_BYTE *)(v2 + 168) = a1;
  v3 = type metadata accessor for Playlist.Collaboration.InvitationMode(0);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for MusicCollaborativePlaylist.UpdateInvitationModeRequest(0);
  *(_QWORD *)(v2 + 56) = updated;
  v6 = *(_QWORD *)(updated - 8);
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F0);
  *(_QWORD *)(v2 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Collaboration(0);
  *(_QWORD *)(v2 + 88) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v2 + 96) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v2 + 112) = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 120) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 128) = v13;
  *(_QWORD *)(v2 + 136) = v14;
  return swift_task_switch(sub_C5C5D4, v13, v14);
}

uint64_t sub_C5C5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unsigned int *v28;
  _QWORD *v29;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.collaboration);
  *(_QWORD *)(v0 + 144) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 168);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl(&dword_0, v3, v4, "updateShareOption called with isOpen=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);

  Playlist.collaboration.getter(v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    v11 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_56024(v11, &qword_14FE8F0);
    v12 = sub_C5E5E8();
    v13 = swift_allocError(&type metadata for Collaboration.Error, v12, 0, 0);
    *(_OWORD *)v14 = xmmword_1099300;
    *(_BYTE *)(v14 + 16) = 3;
    swift_willThrow(v13);
    v15 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 40);
    v24 = *(_QWORD *)(v0 + 48);
    v26 = *(_QWORD *)(v0 + 32);
    v27 = *(unsigned __int8 *)(v0 + 168);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 32))(v21, *(_QWORD *)(v0 + 80), v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v20, v21, v22);
    v28 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    if (!v27)
      v28 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v24, *v28, v26);
    MusicCollaborativePlaylist.UpdateInvitationModeRequest.init(collaboration:updatedInvitationMode:)(v20, v24);
    v29 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.UpdateInvitationModeRequest.response()[1]);
    *(_QWORD *)(v0 + 152) = v29;
    *v29 = v0;
    v29[1] = sub_C5C854;
    return MusicCollaborativePlaylist.UpdateInvitationModeRequest.response()();
  }
}

uint64_t sub_C5C854()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_C5C960;
  else
    v4 = sub_C5C8B4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_C5C8B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C5C960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 160);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v27 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v27);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "updateShareOption failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 56);
  v19 = sub_C5E5E8();
  v20 = swift_allocError(&type metadata for Collaboration.Error, v19, 0, 0);
  *(_QWORD *)v21 = v12;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  swift_willThrow(v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v22 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.handleError(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v2 = v1;
  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.collaboration);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138543362;
    swift_errorRetain(a1);
    v10 = _swift_stdlib_bridgeErrorToNSError(a1);
    *(_QWORD *)(v8 + 4) = v10;
    *v9 = v10;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v6, v7, "Calling coordinator to handle error=%{public}@", (uint8_t *)v8, 0xCu);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  swift_beginAccess(v2 + 16, v18, 0, 0);
  sub_55D1C(v2 + 16, (uint64_t)v15);
  v12 = v16;
  v13 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, v12, v13);
  return __swift_destroy_boxed_opaque_existential_1(v15);
}

uint64_t Collaboration.Manager.activityViewController(for:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSURL *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  NSURL *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  Class isa;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t result;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _QWORD aBlock[5];
  uint64_t v63;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    URL._bridgeToObjectiveC()(v17);
    v18 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  v20 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithContentsOfURL:", v18);

  if (v20)
  {
    v21 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
    URL._bridgeToObjectiveC()(v22);
    v24 = v23;
    objc_msgSend(v21, "setURL:", v23);

    v25 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata), "init");
    v27 = Collaboration.Object.name.getter();
    if (v26)
    {
      v28 = v26;
    }
    else
    {
      v60 = v20;
      v29 = v5;
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000000010C5810);
      v30 = v6;
      v31 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v32 = v61;
      v31(v8, v11, v61);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v33 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      String.init(localized:table:bundle:locale:comment:)(v8, v27, 0, v33, v29, 0, 0, 256);
      v28 = v34;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v32);
      v20 = v60;
    }
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setName:", v35, swift_bridgeObjectRelease(v28).n128_f64[0]);

    Collaboration.Object.ownerName.getter();
    if (v36)
    {
      v38 = v36;
      v39 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v38).n128_u64[0];
    }
    else
    {
      v39 = 0;
    }
    objc_msgSend(v25, "setCurator:", v39, v37);

    Collaboration.Object.storeIdentifier.getter();
    if (v40)
    {
      v42 = v40;
      v43 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v41 = swift_bridgeObjectRelease(v42).n128_u64[0];
    }
    else
    {
      v43 = 0;
    }
    objc_msgSend(v25, "setStoreIdentifier:", v43, v41);

    Collaboration.Object.lpImage.getter();
    v45 = v44;
    objc_msgSend(v25, "setArtwork:", v44);

    objc_msgSend(v21, "setSpecialization:", v25);
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v47 = swift_allocObject(v46, 40, 7);
    *(_OWORD *)(v47 + 16) = xmmword_1060220;
    *(_QWORD *)(v47 + 32) = v20;
    aBlock[0] = v47;
    specialized Array._endMutation()(v47);
    v48 = aBlock[0];
    v49 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_4E684(0, &qword_14FEA40, NSItemProvider_ptr);
    v50 = v20;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v52 = objc_msgSend(v49, "initWithItemProviders:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v53 = swift_allocObject(&unk_13B19F8, 24, 7);
    *(_QWORD *)(v53 + 16) = v21;
    aBlock[4] = sub_C5E650;
    v63 = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_C5D3B0;
    aBlock[3] = &block_descriptor_44_7;
    v54 = _Block_copy(aBlock);
    v55 = v63;
    v56 = v21;
    objc_msgSend(v52, "setPerItemMetadataProvider:", v54, swift_release(v55).n128_f64[0]);
    _Block_release(v54);
    v57 = objc_msgSend(objc_allocWithZone((Class)UIActivityViewController), "initWithActivityItemsConfiguration:", v52);
    objc_msgSend(v57, "setAllowsProminentActivity:", 0);

    return (uint64_t)v57;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000019, 0x80000000011059C0, "MusicCore/Collaboration.swift", 29, 2, 620, 0);
    __break(1u);
  }
  return result;
}

void sub_C5D2D0(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  id v12;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) == 0)
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
  }
  *(_QWORD *)(a3 + 24) = sub_4E684(0, &qword_14FED38, LPLinkMetadata_ptr);
  *(_QWORD *)a3 = a2;
  v12 = a2;
}

id sub_C5D3B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, uint64_t, id);
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD v16[3];
  uint64_t v17;

  v6 = *(void (**)(_QWORD *__return_ptr, uint64_t, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(v16, a2, v7);
  swift_release(v5);

  v8 = v17;
  if (!v17)
    return 0;
  v9 = __swift_project_boxed_opaque_existential_1(v16, v17);
  v10 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v13, v11);
  v14 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v13, v8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v14;
}

uint64_t Collaboration.Manager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  return v0;
}

double Collaboration.Manager.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 56, 7).n128_u64[0];
  return result;
}

uint64_t Collaboration.ArtworkCachingReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_C5D508()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.collaboration);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.collaboration);
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x726F62616C6C6F43, 0xED00006E6F697461);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9E50 != -1)
    swift_once(&qword_14F9E50, sub_C5D508);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.collaboration);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t Playlist.Collaborator.isHost.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  uint64_t *v17;
  char v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v0 = type metadata accessor for Playlist.Collaborator.Role(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEA48);
  __chkstk_darwin();
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FEA50);
  __chkstk_darwin();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v22 - v9;
  v11 = __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  Playlist.Collaborator.role.getter(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v10, enum case for Playlist.Collaborator.Role.host(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v10, 0, 1, v0);
  v14 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_5C238((uint64_t)v13, (uint64_t)v6, &qword_14FEA50);
  sub_5C238((uint64_t)v10, v14, &qword_14FEA50);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v15((uint64_t)v6, 1, v0) == 1)
  {
    sub_56024((uint64_t)v10, &qword_14FEA50);
    sub_56024((uint64_t)v13, &qword_14FEA50);
    v16 = v15(v14, 1, v0);
    if (v16 == 1)
      v17 = &qword_14FEA50;
    else
      v17 = &qword_14FEA48;
    if (v16 == 1)
      v18 = -1;
    else
      v18 = 0;
  }
  else
  {
    sub_5C238((uint64_t)v6, (uint64_t)v8, &qword_14FEA50);
    if (v15(v14, 1, v0) == 1)
    {
      sub_56024((uint64_t)v10, &qword_14FEA50);
      sub_56024((uint64_t)v13, &qword_14FEA50);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v8, v0);
      v18 = 0;
      v17 = &qword_14FEA48;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v14, v0);
      v19 = sub_4DD24(&qword_14FEA58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Role, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Role);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v3, v0, v19);
      v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      v17 = &qword_14FEA50;
      sub_56024((uint64_t)v10, &qword_14FEA50);
      sub_56024((uint64_t)v13, &qword_14FEA50);
      v20(v8, v0);
    }
  }
  sub_56024((uint64_t)v6, v17);
  return v18 & 1;
}

uint64_t Playlist.hasJoinedCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint64_t v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE8F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v19 - v8;
  Playlist.collaboration.getter(v7);
  v10 = type metadata accessor for Playlist.Collaboration(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) == 1)
  {
    sub_56024((uint64_t)v2, &qword_14FE8F0);
    v12 = type metadata accessor for Playlist.Collaborator.Status(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
LABEL_10:
    v17 = 0;
    goto LABEL_11;
  }
  Playlist.Collaboration.collaboratorStatus.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  v13 = type metadata accessor for Playlist.Collaborator.Status(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    goto LABEL_10;
  sub_5C238((uint64_t)v9, (uint64_t)v5, &qword_14FE8F8);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v5, v13);
  if (v15 != enum case for Playlist.Collaborator.Status.host(_:)
    && v15 != enum case for Playlist.Collaborator.Status.joined(_:))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    goto LABEL_10;
  }
  v17 = 1;
LABEL_11:
  sub_56024((uint64_t)v9, &qword_14FE8F8);
  return v17;
}

BOOL MPModelPlaylist.hasJoinedCollaboration.getter()
{
  void *v0;

  return (char *)objc_msgSend(v0, "collaboratorStatus") - 3 < (_BYTE *)&dword_0 + 2;
}

uint64_t _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if ((a1 & 1) != 0)
  {
    v12 = 0x8000000001105AF0;
    v13 = 0x1000000000000017;
  }
  else
  {
    v13 = 0x726F62616C6C6F43;
    v12 = 0xAE00A680E2657461;
  }
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v14 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

Swift::Int sub_C5DCB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED40);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28);
      swift_bridgeObjectRetain();
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_C5DE50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FECE8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)(v19);
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_C5DF90()
{
  _QWORD *v0;
  uint64_t v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = v0[5];
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[7]);
    if (v0[9])
      swift_release(v0[10]);
  }
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_C5DFD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_14FE914);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_50F8C;
  v4[9] = a1;
  v4[10] = v1 + 32;
  return swift_task_switch(sub_C53B88, 0, 0);
}

uint64_t type metadata accessor for Collaboration.Object(uint64_t a1)
{
  uint64_t result;

  result = qword_14FEAE8;
  if (!qword_14FEAE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Collaboration.Object);
  return result;
}

uint64_t sub_C5E078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C5E0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_C5E11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  return sub_C55170(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

uint64_t block_copy_helper_293(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_293(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C5E198()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C5E1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_C54E20(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_C5E1CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter(v1, v2);
}

uint64_t sub_C5E210(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FE960);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_C5E254(uint64_t a1)
{
  uint64_t v1;

  sub_C56C2C(a1, *(void **)(v1 + 16));
}

void sub_C5E25C(uint64_t a1)
{
  uint64_t v1;

  sub_C5755C(a1, *(void **)(v1 + 16));
}

double sub_C5E264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  char active;
  id v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE *v22;
  unint64_t v23;
  __int128 *v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[16];
  uint64_t v37;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v9 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109FAE0);
  v11 = swift_getKeyPath(&unk_109FB08);
  static Published.subscript.getter(v36, v9, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = BYTE1(v36[0]);
  v13 = v36[3];
  v34 = v36[4];
  v35 = v36[7];
  v14 = (void *)v36[10];
  v37 = v36[9];
  v33 = v36[12];
  v31 = v36[1];
  v32 = v36[14];
  sub_C5E078(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    active = Playlist.hasActiveCollaboration.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((active & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    v16 = *v8;
    v17 = (char *)objc_msgSend(*v8, "collaboratorStatus");

    if ((unint64_t)(v17 - 2) < 3)
      goto LABEL_9;
  }
  if (!v12)
  {
    v26 = sub_C5E5E8();
    v19 = swift_allocError(&type metadata for Collaboration.Error, v26, 0, 0);
    v25 = xmmword_1060130;
    goto LABEL_18;
  }
  if ((sub_C556E8() & 1) == 0)
  {
    v27 = sub_C5E5E8();
    v19 = swift_allocError(&type metadata for Collaboration.Error, v27, 0, 0);
    v25 = xmmword_10612E0;
    goto LABEL_18;
  }
LABEL_9:
  if ((sub_C521F8(3u, v13) & 1) == 0)
  {
    v23 = sub_C5E5E8();
    v19 = swift_allocError(&type metadata for Collaboration.Error, v23, 0, 0);
    v25 = xmmword_1099310;
LABEL_18:
    *v24 = v25;
    v22 = v24 + 1;
    goto LABEL_19;
  }
  if (!v14 || (objc_msgSend(v14, "isMinorAccountHolder") & 1) != 0)
  {
    v18 = sub_C5E5E8();
    v19 = swift_allocError(&type metadata for Collaboration.Error, v18, 0, 0);
    v21 = (_QWORD *)v20;
    v22 = (_BYTE *)(v20 + 16);
    *v21 = 0;
    v21[1] = 0;
LABEL_19:
    *v22 = 3;
    swift_willThrow(v19);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v37);

    return result;
  }
  if ((v31 & 1) == 0)
  {
    v28 = sub_C5E5E8();
    v19 = swift_allocError(&type metadata for Collaboration.Error, v28, 0, 0);
    v25 = xmmword_106C810;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v33);

  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v35);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v37).n128_u64[0];
  return result;
}

unint64_t sub_C5E5E8()
{
  unint64_t result;

  result = qword_14FE9C8;
  if (!qword_14FE9C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Error, &type metadata for Collaboration.Error);
    atomic_store(result, (unint64_t *)&qword_14FE9C8);
  }
  return result;
}

uint64_t sub_C5E62C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_C5E650(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_C5D2D0(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_C5E65C()
{
  unint64_t result;

  result = qword_14FEA60;
  if (!qword_14FEA60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Collaborator.Change, &type metadata for Collaboration.Collaborator.Change);
    atomic_store(result, (unint64_t *)&qword_14FEA60);
  }
  return result;
}

unint64_t sub_C5E6A8()
{
  unint64_t result;

  result = qword_14FEA68;
  if (!qword_14FEA68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Manager.DeepLinkType, &type metadata for Collaboration.Manager.DeepLinkType);
    atomic_store(result, (unint64_t *)&qword_14FEA68);
  }
  return result;
}

unint64_t sub_C5E6F0()
{
  unint64_t result;

  result = qword_14FEA70;
  if (!qword_14FEA70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Manager.Moderation, &type metadata for Collaboration.Manager.Moderation);
    atomic_store(result, (unint64_t *)&qword_14FEA70);
  }
  return result;
}

ValueMetadata *type metadata accessor for Collaboration()
{
  return &type metadata for Collaboration;
}

ValueMetadata *type metadata accessor for Collaboration.Collaborator()
{
  return &type metadata for Collaboration.Collaborator;
}

uint64_t storeEnumTagSinglePayload for Collaboration.Collaborator.Change(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_C5E7A0 + 4 * byte_109FAA1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_C5E7D4 + 4 * byte_109FA9C[v4]))();
}

uint64_t sub_C5E7D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C5E7DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC5E7E4);
  return result;
}

uint64_t sub_C5E7F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC5E7F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_C5E7FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C5E804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Collaborator.Change()
{
  return &type metadata for Collaboration.Collaborator.Change;
}

ValueMetadata *type metadata accessor for Collaboration.Setup()
{
  return &type metadata for Collaboration.Setup;
}

uint64_t sub_C5E834(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return swift_bridgeObjectRetain();
  if (a3 <= 1u)
    return swift_errorRetain(result);
  return result;
}

uint64_t destroy for Collaboration.Error(uint64_t a1)
{
  return sub_7A285C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9MusicCore13CollaborationO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_C5E834(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_C5E834(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_7A285C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_7A285C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSNowPlayingViewModel.MetricsValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSNowPlayingViewModel.MetricsValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_C5E9D8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_C5E9F0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Error()
{
  return &type metadata for Collaboration.Error;
}

char *initializeBufferWithCopyOfBuffer for Collaboration.Object(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void destroy for Collaboration.Object(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **initializeWithCopy for Collaboration.Object(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **assignWithCopy for Collaboration.Object(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_C5EC54((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_C5EC54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for Collaboration.Object(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Collaboration.Object(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_C5EC54((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_C5EDB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Manager()
{
  return objc_opt_self(_TtCO9MusicCore13Collaboration7Manager);
}

ValueMetadata *type metadata accessor for Collaboration.Manager.DeepLinkType()
{
  return &type metadata for Collaboration.Manager.DeepLinkType;
}

uint64_t _s9MusicCore13CollaborationO7ManagerC12DeepLinkTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C5EEAC + 4 * byte_109FAAB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C5EEE0 + 4 * byte_109FAA6[v4]))();
}

uint64_t sub_C5EEE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C5EEE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC5EEF0);
  return result;
}

uint64_t sub_C5EEFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC5EF04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C5EF08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C5EF10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Manager.Moderation()
{
  return &type metadata for Collaboration.Manager.Moderation;
}

uint64_t type metadata accessor for Collaboration.ArtworkCachingReference()
{
  return objc_opt_self(_TtCO9MusicCore13Collaboration23ArtworkCachingReference);
}

uint64_t sub_C5EF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_14FECC4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_14FECC0 + dword_14FECC0))(a1, v4);
}

uint64_t sub_C5EFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_14FECD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_14FECD0 + dword_14FECD0))(a1, v4);
}

uint64_t sub_C5F02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1503D5C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1503D58 + dword_1503D58))(a1, v4);
}

void sub_C5F09C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_14FED10);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_4DD24(&qword_14FED20, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFFF8)))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_C5F330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FED08);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v24 = v1;
    v25 = a1 + 32;
    while (1)
    {
      v6 = *(unsigned __int8 *)(v25 + v4++);
      Hasher.init(_seed:)(v26);
      v7 = 0x657469726F766166;
      if (v6 != 1)
        v7 = 0x64616F6C6E776F64;
      if (v6)
        v8 = v7;
      else
        v8 = 7105633;
      if (v6)
        v9 = 0xE900000000000073;
      else
        v9 = 0xE300000000000000;
      String.hash(into:)(v26, v8, v9);
      swift_bridgeObjectRelease(v9);
      v10 = Hasher._finalize()();
      v11 = ~(-1 << *(_BYTE *)(v3 + 32));
      v12 = v10 & v11;
      v13 = (v10 & (unint64_t)v11) >> 6;
      v14 = *(_QWORD *)(v5 + 8 * v13);
      v15 = 1 << (v10 & v11);
      if ((v15 & v14) != 0)
      {
        do
        {
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v12))
          {
            if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v12) == 1)
              v16 = 0x657469726F766166;
            else
              v16 = 0x64616F6C6E776F64;
            v17 = 0xE900000000000073;
            if (!v6)
            {
LABEL_18:
              v18 = 0xE300000000000000;
              v19 = 7105633;
              if (v16 != 7105633)
                goto LABEL_27;
              goto LABEL_26;
            }
          }
          else
          {
            v17 = 0xE300000000000000;
            v16 = 7105633;
            if (!v6)
              goto LABEL_18;
          }
          if (v6 == 1)
            v19 = 0x657469726F766166;
          else
            v19 = 0x64616F6C6E776F64;
          v18 = 0xE900000000000073;
          if (v16 != v19)
            goto LABEL_27;
LABEL_26:
          if (v17 == v18)
          {
            swift_bridgeObjectRelease_n(v17, 2);
            goto LABEL_4;
          }
LABEL_27:
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v19, v18, 0);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v18);
          if ((v20 & 1) != 0)
            goto LABEL_4;
          v12 = (v12 + 1) & v11;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
          v15 = 1 << v12;
        }
        while ((v14 & (1 << v12)) != 0);
      }
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v12) = v6;
      v21 = *(_QWORD *)(v3 + 16);
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        break;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_4:
      if (v4 == v24)
        return;
    }
    __break(1u);
  }
}

void *sub_C5F590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[10];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FED00);
    static _SetStorage.allocate(capacity:)(v1);
    v3 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(v5);
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_C5FAA4(uint64_t a1)
{
  uint64_t v1;
  int v3;
  __int128 v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FECF8);
    static _SetStorage.allocate(capacity:)(v1);
    v3 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(&v5);
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_C6026C()
{
  return objectdestroy_42Tm((uint64_t *)&unk_14FED60);
}

uint64_t sub_C60278(uint64_t a1, uint64_t a2)
{
  return sub_C602AC(a1, a2, (uint64_t *)&unk_14FED60, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_C5768C);
}

uint64_t sub_C6028C()
{
  return objectdestroy_42Tm(&qword_14FF8E0);
}

uint64_t sub_C60298(uint64_t a1, uint64_t a2)
{
  return sub_C602AC(a1, a2, &qword_14FF8E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_C56D5C);
}

uint64_t sub_C602AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, v4 + ((v7 + 16) & ~v7));
}

uint64_t sub_C60308()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_C60318(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_C56EEC(a1, a2, a3, *(_BYTE **)(v3 + 16));
}

uint64_t sub_C60320()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_C60330(void *a1, char a2)
{
  uint64_t v2;

  sub_C54FA0(a1, a2 & 1, *(void (**)(Class, _QWORD))(v2 + 16));
}

void sub_C6033C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_C70C18(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_C60344()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C60368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_C603FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc(dword_14FEDD4);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_C3150;
  return sub_C552F0(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_C604A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C604CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_14FEDFC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_14FEDF8 + dword_14FEDF8))(a1, v4);
}

double static Alert.enableCloudLibraryAlert(context:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_C68C80(a1, (uint64_t)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

double static Alert.explicitRestrictedAlert(forPlayback:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_C68E74(a1, (uint64_t)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

double static Alert.confirmDelete(for:library:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  double result;
  _OWORD v10[2];
  __int128 v11;
  uint64_t v12;

  v5 = a1[3];
  v6 = a1[4];
  v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  sub_C62078((uint64_t)v7, a2, v5, v6, (uint64_t)v10);
  v8 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v8;
  result = *(double *)&v11;
  *(_OWORD *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 48) = v12;
  return result;
}

double static Alert.cellularDataDisallowedAlert(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_C69BAC(a1, a2, (uint64_t *)v6);
  v4 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v4;
  result = *(double *)&v7;
  *(_OWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 48) = v8;
  return result;
}

double static Alert.dolbyAtmosDownloadsAlert(message:completion:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;
  uint64_t v10;

  sub_C69808(a1, a2, a3, a4, (uint64_t)v8);
  v6 = v8[1];
  *(_OWORD *)a5 = v8[0];
  *(_OWORD *)(a5 + 16) = v6;
  result = *(double *)&v9;
  *(_OWORD *)(a5 + 32) = v9;
  *(_QWORD *)(a5 + 48) = v10;
  return result;
}

uint64_t static Alert.Action.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  _BYTE v11[56];

  sub_C69FA0(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v11);
  return sub_C6A2F4((uint64_t)v11, a9);
}

double static Alert.cellularRestrictedAlert(model:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_C6A33C(a1, v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_C60794()
{
  return swift_task_switch(sub_C607A8, 0, 0);
}

id sub_C607A8()
{
  uint64_t v0;
  id result;
  void *v2;

  result = objc_msgSend((id)objc_opt_self(MPNetworkObserver), "sharedNetworkObserver");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "setVideoCellularStreamingAllowed:", 1);

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C60810()
{
  return swift_task_switch(sub_C60824, 0, 0);
}

id sub_C60824()
{
  uint64_t v0;
  id result;
  void *v2;

  result = objc_msgSend((id)objc_opt_self(MPNetworkObserver), "sharedNetworkObserver");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "setMusicCellularStreamingAllowed:", 1);

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.networkUnavailableAlert(model:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_C6AEFC(a1, (uint64_t *)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_C608D4()
{
  return swift_task_switch(sub_C6BA00, 0, 0);
}

double static Alert.accountRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000001105B10);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v53 = v17;
  v54 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000004FLL, 0x8000000001105B30);
  v14(v10, v13, v7);
  v19 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
  v51 = v21;
  v52 = v20;
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v14(v10, v13, v7);
  v22 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v23 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v6, 0, 0, 256);
  v48 = v24;
  v49 = v23;
  v18(v13, v7);
  v25 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v26 = UUID.uuidString.getter(v25);
  v46 = v27;
  v47 = v26;
  v28 = *(void (**)(char *, uint64_t))(v50 + 8);
  v29 = v55;
  v28(v3, v55);
  String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v14(v10, v13, v7);
  v30 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v31 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v30, v6, 0, 0, 256);
  v33 = v32;
  v18(v13, v7);
  v34 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  v28(v3, v29);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v39 = swift_allocObject(v38, 144, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v39 + 16) = xmmword_105F890;
  *(_QWORD *)(v39 + 32) = v35;
  *(_QWORD *)(v39 + 40) = v37;
  *(_QWORD *)(v39 + 48) = v31;
  *(_QWORD *)(v39 + 56) = v33;
  *(_BYTE *)(v39 + 64) = 2;
  *(_QWORD *)(v39 + 72) = &unk_14FEE80;
  *(_QWORD *)(v39 + 80) = 0;
  v41 = v46;
  *(_QWORD *)(v39 + 88) = v47;
  *(_QWORD *)(v39 + 96) = v41;
  v42 = v48;
  *(_QWORD *)(v39 + 104) = v49;
  *(_QWORD *)(v39 + 112) = v42;
  *(_BYTE *)(v39 + 120) = 2;
  *(_QWORD *)(v39 + 128) = 0;
  *(_QWORD *)(v39 + 136) = 0;
  v43 = v53;
  *(_QWORD *)a1 = v54;
  *(_QWORD *)(a1 + 8) = v43;
  v44 = v51;
  *(_QWORD *)(a1 + 16) = v52;
  *(_QWORD *)(a1 + 24) = v44;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v39;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_C60CB4()
{
  return swift_task_switch(sub_C60CC8, 0, 0);
}

id sub_C60CC8()
{
  uint64_t v0;
  id result;
  void *v2;

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v2 = result;
    LSApplicationWorkspace.openSettings()();

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.subscriptionRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000000010D2FA0);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v53 = v17;
  v54 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000059, 0x80000000010D2FC0);
  v14(v10, v13, v7);
  v19 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
  v51 = v21;
  v52 = v20;
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v14(v10, v13, v7);
  v22 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v23 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v6, 0, 0, 256);
  v48 = v24;
  v49 = v23;
  v18(v13, v7);
  v25 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v26 = UUID.uuidString.getter(v25);
  v46 = v27;
  v47 = v26;
  v28 = *(void (**)(char *, uint64_t))(v50 + 8);
  v29 = v55;
  v28(v3, v55);
  String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v14(v10, v13, v7);
  v30 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v31 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v30, v6, 0, 0, 256);
  v33 = v32;
  v18(v13, v7);
  v34 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  v28(v3, v29);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v39 = swift_allocObject(v38, 144, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v39 + 16) = xmmword_105F890;
  *(_QWORD *)(v39 + 32) = v35;
  *(_QWORD *)(v39 + 40) = v37;
  *(_QWORD *)(v39 + 48) = v31;
  *(_QWORD *)(v39 + 56) = v33;
  *(_BYTE *)(v39 + 64) = 2;
  *(_QWORD *)(v39 + 72) = &unk_14FEE88;
  *(_QWORD *)(v39 + 80) = 0;
  v41 = v46;
  *(_QWORD *)(v39 + 88) = v47;
  *(_QWORD *)(v39 + 96) = v41;
  v42 = v48;
  *(_QWORD *)(v39 + 104) = v49;
  *(_QWORD *)(v39 + 112) = v42;
  *(_BYTE *)(v39 + 120) = 2;
  *(_QWORD *)(v39 + 128) = 0;
  *(_QWORD *)(v39 + 136) = 0;
  v43 = v53;
  *(_QWORD *)a1 = v54;
  *(_QWORD *)(a1 + 8) = v43;
  v44 = v51;
  *(_QWORD *)(a1 + 16) = v52;
  *(_QWORD *)(a1 + 24) = v44;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v39;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_C610F0()
{
  return swift_task_switch(sub_C61104, 0, 0);
}

uint64_t sub_C61104()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v1)
  {
    v2 = v1;
    LSApplicationWorkspace.openRestrictions()();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C6115C()
{
  return swift_task_switch(sub_C61170, 0, 0);
}

id sub_C61170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  id result;
  void *v5;
  NSString v6;
  void *v7;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109FDD0);
  v3 = swift_getKeyPath(&unk_109FDF8);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release();
  swift_release();
  v7 = *(void **)(v0 + 96);
  result = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (result)
  {
    v5 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureExplicitContentAllowed);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setBoolValue:forSetting:", 1, v6, swift_bridgeObjectRelease().n128_f64[0]);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.contentUnavailableAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = type metadata accessor for UUID(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x80000000010D3110);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v16 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v17 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v16, v7, 0, 0, 256);
  v33 = v18;
  v34 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v15(v11, v14, v8);
  v20 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v21 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v7, 0, 0, 256);
  v23 = v22;
  v19(v14, v8);
  v24 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v25 = UUID.uuidString.getter(v24);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v36);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v29 = swift_allocObject(v28, 88, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v29 + 16) = xmmword_105B360;
  *(_QWORD *)(v29 + 32) = v25;
  *(_QWORD *)(v29 + 40) = v27;
  *(_QWORD *)(v29 + 48) = v21;
  *(_QWORD *)(v29 + 56) = v23;
  *(_BYTE *)(v29 + 64) = 2;
  *(_QWORD *)(v29 + 72) = 0;
  *(_QWORD *)(v29 + 80) = 0;
  v31 = v33;
  *(_QWORD *)a1 = v34;
  *(_QWORD *)(a1 + 8) = v31;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v29;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

double static Alert.userUploadRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = type metadata accessor for UUID(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000001105B80);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v16 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v17 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v16, v7, 0, 0, 256);
  v36 = v18;
  v37 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000060, 0x8000000001105BB0);
  v15(v11, v14, v8);
  v20 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v35 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v7, 0, 0, 256);
  v22 = v21;
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v15(v11, v14, v8);
  v23 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v24 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v23, v7, 0, 0, 256);
  v26 = v25;
  v19(v14, v8);
  v27 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v28 = UUID.uuidString.getter(v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v39);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v32 = swift_allocObject(v31, 88, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v32 + 16) = xmmword_105B360;
  *(_QWORD *)(v32 + 32) = v28;
  *(_QWORD *)(v32 + 40) = v30;
  *(_QWORD *)(v32 + 48) = v24;
  *(_QWORD *)(v32 + 56) = v26;
  *(_BYTE *)(v32 + 64) = 2;
  *(_QWORD *)(v32 + 72) = 0;
  *(_QWORD *)(v32 + 80) = 0;
  v34 = v36;
  *(_QWORD *)a1 = v37;
  *(_QWORD *)(a1 + 8) = v34;
  *(_QWORD *)(a1 + 16) = v35;
  *(_QWORD *)(a1 + 24) = v22;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v32;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

double static Alert.ageVerificationFallbackAlert()@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;

  sub_C6B3C0((uint64_t)v4);
  v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_C618CC()
{
  return swift_task_switch(sub_C618E0, 0, 0);
}

uint64_t sub_C618E0()
{
  uint64_t v0;

  if (qword_14F9EF8 != -1)
    swift_once(&qword_14F9EF8, sub_C83C34);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static Alert.Action.cancel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v7 = static String.cancelButtonTitle;
  v6 = qword_1582D20;
  swift_bridgeObjectRetain();
  v8 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v9 = UUID.uuidString.getter(v8);
  v11 = v10;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_C61A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_C61A40, 0, 0);
}

uint64_t sub_C61A40()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  if (v1)
    v1(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C61A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_C61A94, 0, 0);
}

id sub_C61A94()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend((id)objc_opt_self(MPNetworkObserver), "sharedNetworkObserver");
  if (result)
  {
    v2 = result;
    v3 = *(_QWORD *)(v0 + 16);
    objc_msgSend(result, "setMusicCellularDownloadingAllowed:", 1);

    if (v3)
      (*(void (**)(uint64_t))(v0 + 16))(1);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_C61B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_C61B28, 0, 0);
}

uint64_t sub_C61B28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *(_QWORD **)(v0 + 24);
  v3 = v1[3];
  v2 = v1[4];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v3);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_C61B9C;
  return MusicLibrary.remove<A>(_:)(v4, v3, v2);
}

uint64_t sub_C61B9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_C61C08, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_C61C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  if (qword_14F9CA0 != -1)
    swift_once(&qword_14F9CA0, sub_C14A2C);
  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 48);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v11 = (char *)String.init<A>(describing:)(v0 + 16, v10);
    *(_QWORD *)(v8 + 4) = sub_BA95EC(v11, v12, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to delete item=%s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 48));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C61DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_C61DE4, 0, 0);
}

uint64_t sub_C61DE4()
{
  uint64_t v0;
  int *v1;
  id v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = *(int **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  objc_msgSend(v2, "setPrefersSpatialDownloads:", 1);

  v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  v3 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_C61E7C;
  return v5(1);
}

uint64_t sub_C61E7C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_C61EC4(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v4 = (uint64_t (*)(_QWORD))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return v4(0);
}

uint64_t sub_C61F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_C61F8C, v4, v5);
}

uint64_t sub_C61F8C()
{
  uint64_t v0;
  id v1;
  NSURL *v2;
  void *v3;
  void *v4;
  Class isa;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v2);
  v4 = v3;
  sub_C26514((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_4DD24((unint64_t *)&qword_15009F0, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_109B6B8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "openURL:options:completionHandler:", v4, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C62078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*boxed_opaque_existential_1Tm)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  _QWORD v43[5];

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = a3;
  v43[4] = a4;
  boxed_opaque_existential_1Tm = (void (*)(char *, char *, uint64_t))__swift_allocate_boxed_opaque_existential_1Tm(v43);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  v15 = sub_C67754(boxed_opaque_existential_1Tm, a3, a4);
  v40 = v16;
  v41 = v15;
  v39 = v17;
  v19 = v18;
  sub_55D1C((uint64_t)v43, (uint64_t)v42);
  v20 = swift_allocObject(&unk_13B20E8, 64, 7);
  sub_8B15C(v42, v20 + 16);
  *(_QWORD *)(v20 + 56) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v21 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v22 = UUID.uuidString.getter(v21);
  v37 = v23;
  v38 = v22;
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v13, v10);
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v26 = static String.cancelButtonTitle;
  v25 = qword_1582D20;
  swift_bridgeObjectRetain();
  v27 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v28 = UUID.uuidString.getter(v27);
  v30 = v29;
  v24(v13, v10);
  swift_bridgeObjectRelease();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v32 = swift_allocObject(v31, 144, 7);
  *(_OWORD *)(v32 + 16) = xmmword_105F890;
  v33 = v37;
  *(_QWORD *)(v32 + 32) = v38;
  *(_QWORD *)(v32 + 40) = v33;
  *(_QWORD *)(v32 + 48) = v39;
  *(_QWORD *)(v32 + 56) = v19;
  *(_BYTE *)(v32 + 64) = 2;
  *(_QWORD *)(v32 + 72) = &unk_14FEF08;
  *(_QWORD *)(v32 + 80) = v20;
  *(_QWORD *)(v32 + 88) = v28;
  *(_QWORD *)(v32 + 96) = v30;
  *(_QWORD *)(v32 + 104) = v26;
  *(_QWORD *)(v32 + 112) = v25;
  *(_BYTE *)(v32 + 120) = 0;
  *(_QWORD *)(v32 + 128) = 0;
  *(_QWORD *)(v32 + 136) = 0;
  result = __swift_destroy_boxed_opaque_existential_1(v43);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  v35 = v40;
  *(_QWORD *)(a5 + 16) = v41;
  *(_QWORD *)(a5 + 24) = v35;
  *(_BYTE *)(a5 + 32) = 1;
  *(_QWORD *)(a5 + 40) = v32;
  *(_QWORD *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_C62290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *boxed_opaque_existential_1Tm;
  void (*v41)(_QWORD *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  id v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  id v112;
  char *v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t result;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  void (*v147)(char *, char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  id v150;
  char *v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD v190[5];
  uint64_t v191;
  uint64_t v192;

  v188 = a1;
  v166 = type metadata accessor for Track(0);
  v161 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v159 = (char *)&v154 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v160 = (char *)&v154 - v3;
  __chkstk_darwin(v4);
  v162 = (char *)&v154 - v5;
  v164 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v165 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Playlist.Entry(0);
  v167 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v168 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v169 = (char *)&v154 - v9;
  v174 = type metadata accessor for TVEpisode(0);
  v171 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v155 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v173 = (char *)&v154 - v12;
  v177 = type metadata accessor for TVSeason(0);
  v172 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v176 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for MusicMovie(0);
  v175 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v158 = (char *)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v179 = (char *)&v154 - v16;
  v17 = type metadata accessor for Song(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v157 = (char *)&v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v182 = (char *)&v154 - v21;
  v183 = type metadata accessor for Playlist(0);
  v181 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v185 = (char *)&v154 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MusicVideo(0);
  v184 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v156 = (char *)&v154 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v154 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v187 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v154 - v35;
  v37 = type metadata accessor for Album(0);
  v186 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v154 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190[3] = v17;
  v190[4] = &protocol witness table for Song;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v190);
  v178 = v18;
  v41 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 16);
  v42 = v188;
  v188 = v17;
  v41(boxed_opaque_existential_1Tm, v42, v17);
  sub_55D1C((uint64_t)v190, (uint64_t)&v189);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF10);
  if (swift_dynamicCast(v39, &v189, v43, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EBC80);
    v44 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v44(v33, v36, v30);
    v45 = v33;
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v46 = qword_1581E30;
    v47 = (id)qword_1581E30;
    v48 = v187;
    static Locale.current.getter(v47);
    v188 = String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v46, v48, 0, 0, 256);
    v185 = v49;
    v50 = *(void (**)(char *, uint64_t))(v31 + 8);
    v50(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v44(v45, v36, v30);
    v51 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v51, v48, 0, 0, 256);
    v52 = v36;
    v53 = v188;
    v50(v52, v30);
    v54 = *(void (**)(char *, uint64_t))(v186 + 8);
    v55 = v39;
    goto LABEL_5;
  }
  v57 = v33;
  v186 = v30;
  v58 = v23;
  if ((swift_dynamicCast(v27, &v189, v43, v23, 0) & 1) != 0)
  {
    v188 = v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000001106290);
    v59 = v31;
    v60 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v61 = v57;
    v62 = v186;
    v60(v57, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v63 = qword_1581E30;
    v64 = (id)qword_1581E30;
    v65 = v187;
    static Locale.current.getter(v64);
    v66 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v63, v65, 0, 0, 256);
    v67 = *(void (**)(char *, uint64_t))(v59 + 8);
    v67(v36, v62);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000000011062E0);
    v60(v61, v36, v62);
    v68 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v68, v65, 0, 0, 256);
    v69 = v36;
    v53 = v66;
    v67(v69, v62);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v27, v188);
    goto LABEL_32;
  }
  v70 = v183;
  if (swift_dynamicCast(v185, &v189, v43, v183, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000000010EB5F0);
    v71 = v31;
    v72 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v73 = v186;
    v72(v33, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v74 = qword_1581E30;
    v75 = (id)qword_1581E30;
    v76 = v187;
    static Locale.current.getter(v75);
    v77 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v74, v76, 0, 0, 256);
    v78 = *(void (**)(char *, uint64_t))(v71 + 8);
    v78(v36, v73);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v72(v33, v36, v73);
    v79 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v79, v76, 0, 0, 256);
    v80 = v36;
    v53 = v77;
    v78(v80, v73);
    (*(void (**)(char *, uint64_t))(v181 + 8))(v185, v70);
    goto LABEL_32;
  }
  v81 = v33;
  if (swift_dynamicCast(v182, &v189, v43, v188, 0))
  {
    v82 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000000010D9830);
    v83 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v84 = v186;
    v83(v57, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v85 = qword_1581E30;
    v86 = (id)qword_1581E30;
    v87 = v187;
    static Locale.current.getter(v86);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v85, v87, 0, 0, 256);
    v88 = *(void (**)(char *, uint64_t))(v31 + 8);
    v88(v82, v84);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v83(v81, v82, v84);
    v89 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v89, v87, 0, 0, 256);
    v88(v82, v84);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v182, v188);
    goto LABEL_32;
  }
  if (swift_dynamicCast(v179, &v189, v43, v180, 0))
  {
    v90 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EB5B0);
    v91 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v92 = v186;
    v91(v57, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v93 = qword_1581E30;
    v94 = (id)qword_1581E30;
    v95 = v187;
    static Locale.current.getter(v94);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v93, v95, 0, 0, 256);
    v96 = *(void (**)(char *, uint64_t))(v31 + 8);
    v96(v90, v92);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v91(v81, v90, v92);
    v97 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v97, v95, 0, 0, 256);
    v96(v90, v92);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v179, v180);
    goto LABEL_32;
  }
  if (swift_dynamicCast(v176, &v189, v43, v177, 0))
  {
    v98 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000001106250);
    v99 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v100 = v186;
    v99(v57, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v101 = qword_1581E30;
    v102 = (id)qword_1581E30;
    v103 = v187;
    static Locale.current.getter(v102);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v101, v103, 0, 0, 256);
    v104 = *(void (**)(char *, uint64_t))(v31 + 8);
    v104(v98, v100);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v99(v81, v98, v100);
    v105 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v105, v103, 0, 0, 256);
    v104(v98, v100);
    v54 = *(void (**)(char *, uint64_t))(v172 + 8);
    v55 = v176;
    v106 = &v192;
LABEL_30:
    v56 = *(v106 - 32);
    goto LABEL_31;
  }
  if (swift_dynamicCast(v173, &v189, v43, v174, 0))
  {
    v107 = v33;
    v108 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000000011061E0);
    v109 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v110 = v186;
    v109(v57, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v111 = qword_1581E30;
    v112 = (id)qword_1581E30;
    v113 = v187;
    static Locale.current.getter(v112);
    v53 = String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v111, v113, 0, 0, 256);
    v114 = *(void (**)(char *, uint64_t))(v31 + 8);
    v114(v108, v110);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000001106230);
    v109(v107, v108, v110);
    v115 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v115, v113, 0, 0, 256);
    v114(v108, v110);
    v54 = *(void (**)(char *, uint64_t))(v171 + 8);
    v55 = v173;
    v106 = &v191;
    goto LABEL_30;
  }
  v117 = v169;
  v37 = v170;
  if (!swift_dynamicCast(v169, &v189, v43, v170, 0))
  {
    v128 = v162;
    v129 = v166;
    if ((swift_dynamicCast(v162, &v189, v43, v166, 0) & 1) != 0)
    {
      v130 = v161;
      v131 = v160;
      (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v160, v128, v129);
      v132 = v159;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v159, v131, v129);
      v133 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v132, v129);
      if (v133 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v130 + 96))(v132, v129);
        v134 = v178;
        v135 = v157;
        v136 = v188;
        (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v157, v132, v188);
        v53 = sub_C62290(v135);
        (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
LABEL_44:
        (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v129);
        goto LABEL_32;
      }
      if (v133 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v130 + 96))(v132, v129);
        v139 = v184;
        v140 = (uint64_t)v156;
        (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v156, v132, v58);
        v53 = sub_C637AC(v140);
        (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v140, v58);
        goto LABEL_44;
      }
      v145 = *(void (**)(char *, uint64_t))(v130 + 8);
      v145(v131, v129);
      v145(v132, v129);
    }
LABEL_55:
    __swift_destroy_boxed_opaque_existential_1(&v189);
    v146 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000000010EB420);
    v147 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v148 = v186;
    v147(v81, v36, v186);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v149 = qword_1581E30;
    v150 = (id)qword_1581E30;
    v151 = v187;
    static Locale.current.getter(v150);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v149, v151, 0, 0, 256);
    v152 = *(void (**)(char *, uint64_t))(v31 + 8);
    v152(v146, v148);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v147(v81, v146, v148);
    v153 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v153, v151, 0, 0, 256);
    v152(v146, v148);
    goto LABEL_33;
  }
  v118 = v167;
  v119 = v168;
  v120 = (*(uint64_t (**)(char *, char *, uint64_t))(v167 + 32))(v168, v117, v37);
  v121 = v165;
  Playlist.Entry.internalItem.getter(v120);
  v122 = v163;
  v123 = v164;
  v124 = (*(uint64_t (**)(char *, uint64_t))(v163 + 88))(v121, v164);
  if (v124 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v125 = v175;
    v126 = (uint64_t)v158;
    v127 = v180;
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v158, v121, v180);
    v53 = sub_C64CF4(v126);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v127);
    v54 = *(void (**)(char *, uint64_t))(v118 + 8);
    v55 = v119;
LABEL_5:
    v56 = v37;
LABEL_31:
    v54(v55, v56);
LABEL_32:
    __swift_destroy_boxed_opaque_existential_1(&v189);
LABEL_33:
    __swift_destroy_boxed_opaque_existential_1(v190);
    return v53;
  }
  if (v124 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v137 = v184;
    v138 = (uint64_t)v156;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v156, v121, v58);
    v53 = sub_C637AC(v138);
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v138, v58);
LABEL_51:
    v54 = *(void (**)(char *, uint64_t))(v118 + 8);
    v55 = v119;
    goto LABEL_5;
  }
  if (v124 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v141 = v178;
    v142 = (uint64_t)v157;
    v143 = v188;
    (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v157, v121, v188);
    v144 = sub_C62290(v142);
LABEL_50:
    v53 = v144;
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v143);
    goto LABEL_51;
  }
  if (v124 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v141 = v171;
    v142 = (uint64_t)v155;
    v143 = v174;
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v155, v121, v174);
    v144 = sub_C66244(v142);
    goto LABEL_50;
  }
  if (v124 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v124 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v37);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
    goto LABEL_55;
  }
  (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000000011061A0, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_C637AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  id v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  id v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  id v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t *v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  uint64_t v105;
  id v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t result;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  int v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t);
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;
  id v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD v188[5];
  uint64_t v189;
  uint64_t v190;

  v186 = a1;
  v162 = type metadata accessor for Track(0);
  v159 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v157 = (char *)&v152 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v158 = (char *)&v152 - v3;
  __chkstk_darwin(v4);
  v160 = (char *)&v152 - v5;
  v165 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v161 = (char *)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for Playlist.Entry(0);
  v167 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v163 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v166 = (char *)&v152 - v9;
  v171 = type metadata accessor for TVEpisode(0);
  v168 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v153 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v170 = (char *)&v152 - v12;
  v174 = type metadata accessor for TVSeason(0);
  v169 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v173 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for MusicMovie(0);
  v172 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v156 = (char *)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v177 = (char *)&v152 - v16;
  v181 = type metadata accessor for Song(0);
  v175 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v155 = (char *)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v180 = (char *)&v152 - v19;
  v183 = type metadata accessor for Playlist(0);
  v179 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v21 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MusicVideo(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v154 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v152 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v185 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v152 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v152 - v35;
  v37 = type metadata accessor for Album(0);
  v184 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v152 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188[3] = v22;
  v188[4] = &protocol witness table for MusicVideo;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v188);
  v182 = v23;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 16))(boxed_opaque_existential_1Tm, v186, v22);
  sub_55D1C((uint64_t)v188, (uint64_t)&v187);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF10);
  if (swift_dynamicCast(v39, &v187, v41, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EBC80);
    v42 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v42(v33, v36, v30);
    v43 = v30;
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v44 = qword_1581E30;
    v45 = (id)qword_1581E30;
    v46 = v185;
    static Locale.current.getter(v45);
    v47 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v44, v46, 0, 0, 256);
    v186 = v48;
    v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v36, v43);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v42(v33, v36, v43);
    v50 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v50, v46, 0, 0, 256);
    v51 = v36;
    v52 = v47;
    v49(v51, v43);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v39, v37);
    goto LABEL_31;
  }
  if ((swift_dynamicCast(v27, &v187, v41, v22, 0) & 1) != 0)
  {
    v186 = v22;
    v53 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000001106290);
    v54 = v31;
    v55 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v56 = v30;
    v55(v33, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v57 = qword_1581E30;
    v58 = (id)qword_1581E30;
    v59 = v185;
    static Locale.current.getter(v58);
    v60 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v57, v59, 0, 0, 256);
    v61 = *(void (**)(char *, uint64_t))(v54 + 8);
    v61(v53, v56);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000000011062E0);
    v55(v33, v53, v56);
    v62 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v63 = v59;
    v52 = v60;
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v62, v63, 0, 0, 256);
    v61(v53, v56);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v27, v186);
    goto LABEL_31;
  }
  if (swift_dynamicCast(v21, &v187, v41, v183, 0))
  {
    v64 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000000010EB5F0);
    v65 = v31;
    v66 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v67 = v33;
    v68 = v33;
    v69 = v30;
    v66(v68, v64, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v70 = qword_1581E30;
    v71 = (id)qword_1581E30;
    v72 = v185;
    static Locale.current.getter(v71);
    v73 = String.init(localized:table:bundle:locale:comment:)(v67, 0, 0, v70, v72, 0, 0, 256);
    v186 = v74;
    v75 = *(void (**)(char *, uint64_t))(v65 + 8);
    v75(v64, v69);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v66(v67, v64, v69);
    v76 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v77 = v67;
    v52 = v73;
    String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v76, v72, 0, 0, 256);
    v75(v64, v69);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v21, v183);
    goto LABEL_31;
  }
  v78 = v36;
  if (swift_dynamicCast(v180, &v187, v41, v181, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000000010D9830);
    v79 = v31;
    v80 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v80(v33, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v81 = qword_1581E30;
    v82 = (id)qword_1581E30;
    v83 = v185;
    static Locale.current.getter(v82);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v81, v83, 0, 0, 256);
    v84 = *(void (**)(char *, uint64_t))(v79 + 8);
    v84(v78, v30);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v80(v33, v78, v30);
    v85 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v85, v83, 0, 0, 256);
    v84(v78, v30);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v180, v181);
    goto LABEL_31;
  }
  v86 = v176;
  v87 = v30;
  if (swift_dynamicCast(v177, &v187, v41, v178, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EB5B0);
    v88 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v88(v33, v36, v87);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v89 = qword_1581E30;
    v90 = (id)qword_1581E30;
    v91 = v185;
    static Locale.current.getter(v90);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v89, v91, 0, 0, 256);
    v92 = *(void (**)(char *, uint64_t))(v31 + 8);
    v92(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v88(v33, v78, v87);
    v93 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v93, v91, 0, 0, 256);
    v92(v78, v87);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v177, v178);
    goto LABEL_31;
  }
  if (swift_dynamicCast(v173, &v187, v41, v174, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000001106250);
    v94 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v94(v33, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v95 = qword_1581E30;
    v96 = (id)qword_1581E30;
    v97 = v185;
    static Locale.current.getter(v96);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v95, v97, 0, 0, 256);
    v98 = *(void (**)(char *, uint64_t))(v31 + 8);
    v98(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v94(v33, v78, v87);
    v99 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v99, v97, 0, 0, 256);
    v98(v78, v87);
    v100 = *(void (**)(char *, uint64_t))(v169 + 8);
    v101 = v173;
    v102 = &v190;
LABEL_29:
    v110 = *(v102 - 32);
LABEL_30:
    v100(v101, v110);
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1(&v187);
LABEL_32:
    __swift_destroy_boxed_opaque_existential_1(v188);
    return v52;
  }
  if (swift_dynamicCast(v170, &v187, v41, v171, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000000011061E0);
    v103 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v104 = v33;
    v103(v33, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v105 = qword_1581E30;
    v106 = (id)qword_1581E30;
    v107 = v185;
    static Locale.current.getter(v106);
    v52 = String.init(localized:table:bundle:locale:comment:)(v104, 0, 0, v105, v107, 0, 0, 256);
    v108 = *(void (**)(char *, uint64_t))(v31 + 8);
    v108(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000001106230);
    v103(v104, v78, v87);
    v109 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v104, 0, 0, v109, v107, 0, 0, 256);
    v108(v78, v87);
    v100 = *(void (**)(char *, uint64_t))(v168 + 8);
    v101 = v170;
    v102 = &v189;
    goto LABEL_29;
  }
  v112 = v166;
  if (!swift_dynamicCast(v166, &v187, v41, v86, 0))
  {
    v122 = v160;
    v123 = v162;
    if ((swift_dynamicCast(v160, &v187, v41, v162, 0) & 1) != 0)
    {
      v124 = v159;
      v125 = v158;
      (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v158, v122, v123);
      v126 = v157;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v157, v125, v123);
      v127 = (*(uint64_t (**)(char *, uint64_t))(v124 + 88))(v126, v123);
      if (v127 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v124 + 96))(v126, v123);
        v128 = v175;
        v129 = v155;
        v130 = v125;
        v131 = v181;
        (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v155, v126, v181);
        v52 = sub_C62290(v129);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v131);
        v100 = *(void (**)(char *, uint64_t))(v124 + 8);
        v101 = v130;
LABEL_43:
        v110 = v123;
        goto LABEL_30;
      }
      if (v127 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v124 + 96))(v126, v123);
        v136 = v182;
        v137 = v154;
        (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v154, v126, v22);
        v52 = sub_C637AC(v137);
        (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v22);
        v100 = *(void (**)(char *, uint64_t))(v124 + 8);
        v101 = v125;
        goto LABEL_43;
      }
      v144 = v125;
      v145 = *(void (**)(char *, uint64_t))(v124 + 8);
      v145(v144, v123);
      v145(v126, v123);
    }
LABEL_54:
    __swift_destroy_boxed_opaque_existential_1(&v187);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000000010EB420);
    v146 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v146(v33, v78, v87);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v147 = qword_1581E30;
    v148 = (id)qword_1581E30;
    v149 = v185;
    static Locale.current.getter(v148);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v147, v149, 0, 0, 256);
    v150 = *(void (**)(char *, uint64_t))(v31 + 8);
    v150(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v146(v33, v78, v87);
    v151 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v151, v149, 0, 0, 256);
    v150(v78, v87);
    goto LABEL_32;
  }
  v113 = v163;
  v114 = (*(uint64_t (**)(char *, char *, uint64_t))(v167 + 32))(v163, v112, v86);
  v115 = v161;
  Playlist.Entry.internalItem.getter(v114);
  v116 = v164;
  v117 = v165;
  v118 = (*(uint64_t (**)(char *, uint64_t))(v164 + 88))(v115, v165);
  if (v118 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v116 + 96))(v115, v117);
    v119 = v172;
    v120 = (uint64_t)v156;
    v121 = v178;
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v156, v115, v178);
    v52 = sub_C64CF4(v120);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v120, v121);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v113, v176);
    goto LABEL_31;
  }
  v132 = v113;
  v133 = v167;
  if (v118 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v164 + 96))(v115, v165);
    v134 = v182;
    v135 = v154;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v154, v115, v22);
    v52 = sub_C637AC(v135);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v22);
    v100 = *(void (**)(char *, uint64_t))(v133 + 8);
LABEL_50:
    v101 = v132;
    v110 = v86;
    goto LABEL_30;
  }
  v138 = v165;
  v139 = v164;
  if (v118 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v164 + 96))(v115, v165);
    v140 = v175;
    v141 = (uint64_t)v155;
    v142 = v181;
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v155, v115, v181);
    v143 = sub_C62290(v141);
LABEL_49:
    v52 = v143;
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v141, v142);
    v100 = *(void (**)(char *, uint64_t))(v133 + 8);
    goto LABEL_50;
  }
  if (v118 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v164 + 96))(v115, v165);
    v140 = v168;
    v141 = (uint64_t)v153;
    v142 = v171;
    (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v153, v115, v171);
    v143 = sub_C66244(v141);
    goto LABEL_49;
  }
  if (v118 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v118 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v132, v86);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v115, v138);
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v164 + 8))(v115, v165);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000000011061A0, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_C64CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  id v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  id v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  id v115;
  char *v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  int v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  uint64_t result;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  id v157;
  char *v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD v197[5];
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;

  v195 = a1;
  v172 = type metadata accessor for Track(0);
  v168 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v166 = (char *)&v161 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v167 = (char *)&v161 - v3;
  __chkstk_darwin(v4);
  v169 = (char *)&v161 - v5;
  v170 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v174 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v171 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for Playlist.Entry(0);
  v175 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v173 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v176 = (char *)&v161 - v9;
  v181 = type metadata accessor for TVEpisode(0);
  v177 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v162 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v180 = (char *)&v161 - v12;
  v184 = type metadata accessor for TVSeason(0);
  v179 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v183 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicMovie(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v165 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v186 = (char *)&v161 - v18;
  v189 = type metadata accessor for Song(0);
  v185 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v164 = (char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v188 = (char *)&v161 - v21;
  v190 = type metadata accessor for Playlist(0);
  v187 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v192 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MusicVideo(0);
  v191 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v163 = (char *)&v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v161 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v194 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v161 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v161 - v35;
  v37 = type metadata accessor for Album(0);
  v193 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v161 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197[3] = v14;
  v197[4] = sub_4DD24(&qword_14FEF18, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v197);
  v182 = v15;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(boxed_opaque_existential_1Tm, v195, v14);
  sub_55D1C((uint64_t)v197, (uint64_t)&v196);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF10);
  if (swift_dynamicCast(v39, &v196, v41, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EBC80);
    v42 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v42(v33, v36, v30);
    v43 = v30;
    v44 = v36;
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v45 = qword_1581E30;
    v46 = (id)qword_1581E30;
    v47 = v194;
    static Locale.current.getter(v46);
    v192 = (char *)String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v45, v47, 0, 0, 256);
    v195 = v48;
    v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v44, v43);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v42(v33, v44, v43);
    v50 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v50, v47, 0, 0, 256);
    v51 = v44;
    v52 = (uint64_t)v192;
    v49(v51, v43);
    (*(void (**)(char *, uint64_t))(v193 + 8))(v39, v37);
    goto LABEL_49;
  }
  v193 = v31;
  v53 = v33;
  v54 = v23;
  if ((swift_dynamicCast(v27, &v196, v41, v23, 0) & 1) != 0)
  {
    v192 = (char *)v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000001106290);
    v55 = v193;
    v56 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v57 = v33;
    v58 = v33;
    v59 = v30;
    v56(v58, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v60 = qword_1581E30;
    v61 = (id)qword_1581E30;
    v62 = v194;
    static Locale.current.getter(v61);
    v63 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v60, v62, 0, 0, 256);
    v195 = v64;
    v65 = *(void (**)(char *, uint64_t))(v55 + 8);
    v65(v36, v59);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000000011062E0);
    v56(v57, v36, v59);
    v66 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v67 = v57;
    v52 = v63;
    String.init(localized:table:bundle:locale:comment:)(v67, 0, 0, v66, v62, 0, 0, 256);
    v65(v36, v59);
    (*(void (**)(char *, char *))(v191 + 8))(v27, v192);
    goto LABEL_49;
  }
  v68 = v190;
  if (swift_dynamicCast(v192, &v196, v41, v190, 0))
  {
    v69 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000000010EB5F0);
    v70 = v193;
    v71 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v72 = v33;
    v73 = v33;
    v74 = v30;
    v71(v73, v69, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v75 = qword_1581E30;
    v76 = (id)qword_1581E30;
    v77 = v194;
    static Locale.current.getter(v76);
    v78 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v75, v77, 0, 0, 256);
    v79 = *(void (**)(char *, uint64_t))(v70 + 8);
    v52 = v78;
    v79(v69, v74);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v71(v72, v69, v74);
    v80 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v72, 0, 0, v80, v77, 0, 0, 256);
    v79(v69, v74);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v192, v68);
    goto LABEL_49;
  }
  if (swift_dynamicCast(v188, &v196, v41, v189, 0))
  {
    v81 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000000010D9830);
    v82 = v193;
    v83 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v84 = v53;
    v85 = v53;
    v86 = v30;
    v83(v85, v81, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v87 = qword_1581E30;
    v88 = (id)qword_1581E30;
    v89 = v194;
    static Locale.current.getter(v88);
    v52 = String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v87, v89, 0, 0, 256);
    v90 = *(void (**)(char *, uint64_t))(v82 + 8);
    v90(v81, v86);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v83(v84, v81, v86);
    v91 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v91, v89, 0, 0, 256);
    v90(v81, v86);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v188, v189);
    goto LABEL_49;
  }
  v92 = v30;
  v93 = v53;
  if (swift_dynamicCast(v186, &v196, v41, v14, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EB5B0);
    v94 = v193;
    v95 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v95(v53, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v96 = qword_1581E30;
    v97 = (id)qword_1581E30;
    v98 = v194;
    static Locale.current.getter(v97);
    v192 = (char *)String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v96, v98, 0, 0, 256);
    v99 = *(void (**)(char *, uint64_t))(v94 + 8);
    v99(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v95(v93, v36, v30);
    v100 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v100, v98, 0, 0, 256);
    v99(v36, v30);
    v101 = v14;
    v52 = (uint64_t)v192;
    (*(void (**)(char *, uint64_t))(v182 + 8))(v186, v101);
    goto LABEL_49;
  }
  if (swift_dynamicCast(v183, &v196, v41, v184, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000001106250);
    v102 = v193;
    v103 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v103(v53, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v104 = qword_1581E30;
    v105 = (id)qword_1581E30;
    v106 = v194;
    static Locale.current.getter(v105);
    v52 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v104, v106, 0, 0, 256);
    v107 = *(void (**)(char *, uint64_t))(v102 + 8);
    v107(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v103(v93, v36, v30);
    v108 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v108, v106, 0, 0, 256);
    v107(v36, v30);
    v109 = *(void (**)(char *, uint64_t))(v179 + 8);
    v110 = v183;
    v111 = &v200;
    goto LABEL_47;
  }
  if (swift_dynamicCast(v180, &v196, v41, v181, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000000011061E0);
    v112 = v193;
    v113 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v113(v93, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v114 = qword_1581E30;
    v115 = (id)qword_1581E30;
    v116 = v194;
    static Locale.current.getter(v115);
    v52 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v114, v116, 0, 0, 256);
    v117 = *(void (**)(char *, uint64_t))(v112 + 8);
    v117(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000001106230);
    v113(v93, v36, v30);
    v118 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v118, v116, 0, 0, 256);
    v117(v36, v30);
    v109 = *(void (**)(char *, uint64_t))(v177 + 8);
    v110 = v180;
    v111 = &v199;
    goto LABEL_47;
  }
  v119 = v176;
  v120 = v178;
  if (!swift_dynamicCast(v176, &v196, v41, v178, 0))
  {
    v133 = v169;
    v134 = v41;
    v135 = v172;
    v136 = swift_dynamicCast(v169, &v196, v134, v172, 0);
    v137 = v193;
    if ((v136 & 1) != 0)
    {
      v138 = v168;
      v139 = v167;
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v167, v133, v135);
      v140 = v166;
      (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v166, v139, v135);
      v141 = (*(uint64_t (**)(char *, uint64_t))(v138 + 88))(v140, v135);
      if (v141 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v138 + 96))(v140, v135);
        v142 = v139;
        v143 = v185;
        v144 = v164;
        v145 = v189;
        (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v164, v140, v189);
        v52 = sub_C62290(v144);
        (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v145);
        v109 = *(void (**)(char *, uint64_t))(v138 + 8);
        v110 = v142;
LABEL_39:
        v151 = v135;
LABEL_48:
        v109(v110, v151);
LABEL_49:
        __swift_destroy_boxed_opaque_existential_1(&v196);
LABEL_50:
        __swift_destroy_boxed_opaque_existential_1(v197);
        return v52;
      }
      if (v141 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v138 + 96))(v140, v135);
        v149 = v191;
        v150 = v163;
        (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v163, v140, v54);
        v52 = sub_C637AC(v150);
        (*(void (**)(char *, uint64_t))(v149 + 8))(v150, v54);
        v109 = *(void (**)(char *, uint64_t))(v138 + 8);
        v110 = v139;
        goto LABEL_39;
      }
      v152 = *(void (**)(char *, uint64_t))(v138 + 8);
      v152(v139, v135);
      v152(v140, v135);
    }
LABEL_54:
    __swift_destroy_boxed_opaque_existential_1(&v196);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000000010EB420);
    v155 = *(void (**)(char *, char *, uint64_t))(v137 + 16);
    v155(v93, v36, v92);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v156 = qword_1581E30;
    v157 = (id)qword_1581E30;
    v158 = v194;
    static Locale.current.getter(v157);
    v52 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v156, v158, 0, 0, 256);
    v159 = *(void (**)(char *, uint64_t))(v137 + 8);
    v159(v36, v92);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v155(v93, v36, v92);
    v160 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v160, v158, 0, 0, 256);
    v159(v36, v92);
    goto LABEL_50;
  }
  v121 = v54;
  v122 = v175;
  v123 = v173;
  v124 = (*(uint64_t (**)(char *, char *, uint64_t))(v175 + 32))(v173, v119, v120);
  v125 = v171;
  Playlist.Entry.internalItem.getter(v124);
  v126 = v174;
  v127 = v170;
  v128 = (*(uint64_t (**)(char *, uint64_t))(v174 + 88))(v125, v170);
  if (v128 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v126 + 96))(v125, v127);
    v129 = v182;
    v130 = v165;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v165, v125, v14);
    v131 = sub_C64CF4(v130);
    v132 = v14;
    v52 = v131;
    (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v132);
    v109 = *(void (**)(char *, uint64_t))(v122 + 8);
    v110 = v123;
LABEL_46:
    v111 = &v198;
LABEL_47:
    v151 = *(v111 - 32);
    goto LABEL_48;
  }
  if (v128 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v174 + 96))(v125, v127);
    v146 = v191;
    v147 = (uint64_t)v163;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v163, v125, v121);
    v148 = sub_C637AC(v147);
LABEL_45:
    v52 = v148;
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v147, v121);
    v109 = *(void (**)(char *, uint64_t))(v175 + 8);
    v110 = v123;
    goto LABEL_46;
  }
  if (v128 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v174 + 96))(v125, v127);
    v146 = v185;
    v147 = (uint64_t)v164;
    v121 = v189;
    (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v164, v125, v189);
    v148 = sub_C62290(v147);
    goto LABEL_45;
  }
  v153 = v174;
  if (v128 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v174 + 96))(v125, v127);
    v146 = v177;
    v147 = (uint64_t)v162;
    v121 = v181;
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v162, v125, v181);
    v148 = sub_C66244(v147);
    goto LABEL_45;
  }
  if (v128 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v128 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v175 + 8))(v123, v178);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v125, v127);
    v137 = v193;
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v174 + 8))(v125, v127);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000000011061A0, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_C66244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *boxed_opaque_existential_1Tm;
  void (*v41)(_QWORD *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  id v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  id v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  id v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  id v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  void (*v96)(char *, _QWORD);
  char *v97;
  uint64_t *v98;
  uint64_t result;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  id v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  id v138;
  char *v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD v178[5];
  uint64_t v179;
  uint64_t v180;

  v176 = a1;
  v153 = type metadata accessor for Track(0);
  v149 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v147 = (char *)&v142 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v148 = (char *)&v142 - v3;
  __chkstk_darwin(v4);
  v150 = (char *)&v142 - v5;
  v151 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v155 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v152 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for Playlist.Entry(0);
  v156 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v154 = (char *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v157 = (char *)&v142 - v9;
  v10 = type metadata accessor for TVEpisode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v143 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v161 = (char *)&v142 - v14;
  v164 = type metadata accessor for TVSeason(0);
  v160 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v163 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for MusicMovie(0);
  v162 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v146 = (char *)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v166 = (char *)&v142 - v18;
  v170 = type metadata accessor for Song(0);
  v165 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v145 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v169 = (char *)&v142 - v21;
  v171 = type metadata accessor for Playlist(0);
  v168 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v173 = (char *)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MusicVideo(0);
  v172 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v144 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v142 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v175 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v142 - v35;
  v37 = type metadata accessor for Album(0);
  v174 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v142 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178[3] = v10;
  v178[4] = sub_4DD24(&qword_14FEF20, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v178);
  v158 = v11;
  v41 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 16);
  v42 = v176;
  v176 = v10;
  v41(boxed_opaque_existential_1Tm, v42, v10);
  sub_55D1C((uint64_t)v178, (uint64_t)&v177);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF10);
  if (swift_dynamicCast(v39, &v177, v43, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EBC80);
    v173 = *(char **)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v173)(v33, v36, v30);
    v44 = v36;
    v45 = v33;
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v46 = qword_1581E30;
    v47 = (id)qword_1581E30;
    v48 = v175;
    static Locale.current.getter(v47);
    v176 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v46, v48, 0, 0, 256);
    v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v44, v30);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    ((void (*)(char *, char *, uint64_t))v173)(v45, v44, v30);
    v50 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v50, v48, 0, 0, 256);
    v51 = v44;
    v52 = v176;
    v49(v51, v30);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v39, v37);
    goto LABEL_26;
  }
  if ((swift_dynamicCast(v27, &v177, v43, v23, 0) & 1) != 0)
  {
    v174 = v23;
    v53 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000001106290);
    v54 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v55 = v33;
    v54(v33, v53, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v56 = qword_1581E30;
    v57 = (id)qword_1581E30;
    v58 = v175;
    static Locale.current.getter(v57);
    v176 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v56, v58, 0, 0, 256);
    v59 = *(void (**)(char *, uint64_t))(v31 + 8);
    v59(v53, v30);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000000011062E0);
    v54(v55, v53, v30);
    v60 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v60, v58, 0, 0, 256);
    v59(v53, v30);
    v61 = v27;
    v52 = v176;
    (*(void (**)(char *, uint64_t))(v172 + 8))(v61, v174);
    goto LABEL_26;
  }
  v62 = v171;
  if (swift_dynamicCast(v173, &v177, v43, v171, 0))
  {
    v63 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000000010EB5F0);
    v64 = v31;
    v65 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v66 = v33;
    v65(v33, v36, v30);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v67 = qword_1581E30;
    v68 = (id)qword_1581E30;
    v69 = v175;
    static Locale.current.getter(v68);
    v70 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v67, v69, 0, 0, 256);
    v71 = *(void (**)(char *, uint64_t))(v64 + 8);
    v71(v63, v30);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v65(v66, v63, v30);
    v72 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v66, 0, 0, v72, v69, 0, 0, 256);
    v73 = v63;
    v52 = v70;
    v71(v73, v30);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v173, v62);
    goto LABEL_26;
  }
  v74 = v30;
  v75 = v36;
  if (swift_dynamicCast(v169, &v177, v43, v170, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000000010D9830);
    v76 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v77 = v33;
    v76(v33, v75, v74);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v78 = qword_1581E30;
    v79 = (id)qword_1581E30;
    v80 = v175;
    static Locale.current.getter(v79);
    v52 = String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v78, v80, 0, 0, 256);
    v81 = *(void (**)(char *, uint64_t))(v31 + 8);
    v81(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v76(v77, v75, v74);
    v82 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v82, v80, 0, 0, 256);
    v81(v75, v74);
    (*(void (**)(char *, uint64_t))(v165 + 8))(v169, v170);
    goto LABEL_26;
  }
  v83 = v33;
  if (swift_dynamicCast(v166, &v177, v43, v167, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EB5B0);
    v84 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v84(v33, v75, v74);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v85 = qword_1581E30;
    v86 = (id)qword_1581E30;
    v87 = v175;
    static Locale.current.getter(v86);
    v52 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v85, v87, 0, 0, 256);
    v88 = *(void (**)(char *, uint64_t))(v31 + 8);
    v88(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v84(v83, v75, v74);
    v89 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v89, v87, 0, 0, 256);
    v88(v75, v74);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v166, v167);
    goto LABEL_26;
  }
  if (swift_dynamicCast(v163, &v177, v43, v164, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000001106250);
    v90 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v90(v33, v75, v74);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v91 = qword_1581E30;
    v92 = (id)qword_1581E30;
    v93 = v175;
    static Locale.current.getter(v92);
    v52 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v91, v93, 0, 0, 256);
    v94 = *(void (**)(char *, uint64_t))(v31 + 8);
    v94(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v90(v83, v75, v74);
    v95 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v95, v93, 0, 0, 256);
    v94(v75, v74);
    v96 = *(void (**)(char *, _QWORD))(v160 + 8);
    v97 = v163;
    v98 = &v180;
    goto LABEL_25;
  }
  if (swift_dynamicCast(v161, &v177, v43, v176, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000000011061E0);
    v100 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v100(v33, v75, v74);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v101 = qword_1581E30;
    v102 = (id)qword_1581E30;
    v103 = v175;
    static Locale.current.getter(v102);
    v104 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v101, v103, 0, 0, 256);
    v105 = *(void (**)(char *, uint64_t))(v31 + 8);
    v52 = v104;
    v105(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000001106230);
    v100(v33, v75, v74);
    v106 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v106, v103, 0, 0, 256);
    v105(v75, v74);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v161, v176);
    goto LABEL_26;
  }
  v107 = v23;
  v108 = v157;
  v109 = v159;
  if (!swift_dynamicCast(v157, &v177, v43, v159, 0))
  {
    v120 = v150;
    v121 = v153;
    if ((swift_dynamicCast(v150, &v177, v43, v153, 0) & 1) != 0)
    {
      v122 = v149;
      v123 = v148;
      (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v148, v120, v121);
      v124 = v147;
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v147, v123, v121);
      v125 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v124, v121);
      if (v125 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v122 + 96))(v124, v121);
        v126 = v165;
        v127 = v145;
        v128 = v170;
        (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v145, v124, v170);
        v129 = sub_C62290(v127);
LABEL_42:
        v52 = v129;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v121);
        goto LABEL_26;
      }
      if (v125 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v122 + 96))(v124, v121);
        v126 = v172;
        v127 = v144;
        v128 = v107;
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v144, v124, v107);
        v129 = sub_C637AC(v127);
        goto LABEL_42;
      }
      v134 = *(void (**)(char *, uint64_t))(v122 + 8);
      v134(v123, v121);
      v134(v124, v121);
    }
LABEL_53:
    __swift_destroy_boxed_opaque_existential_1(&v177);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000000010EB420);
    v136 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v136(v83, v75, v74);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v137 = qword_1581E30;
    v138 = (id)qword_1581E30;
    v139 = v175;
    static Locale.current.getter(v138);
    v52 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v137, v139, 0, 0, 256);
    v140 = *(void (**)(char *, uint64_t))(v31 + 8);
    v140(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v136(v83, v75, v74);
    v141 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v141, v139, 0, 0, 256);
    v140(v75, v74);
    goto LABEL_27;
  }
  v110 = v156;
  v111 = v154;
  v112 = (*(uint64_t (**)(char *, char *, uint64_t))(v156 + 32))(v154, v108, v109);
  v113 = v152;
  Playlist.Entry.internalItem.getter(v112);
  v114 = v155;
  v115 = v151;
  v116 = (*(uint64_t (**)(char *, uint64_t))(v155 + 88))(v113, v151);
  if (v116 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v114 + 96))(v113, v115);
    v117 = v162;
    v118 = v146;
    v119 = v167;
    (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v146, v113, v167);
    v52 = sub_C64CF4(v118);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v119);
    v96 = *(void (**)(char *, _QWORD))(v110 + 8);
    v97 = v111;
LABEL_49:
    v98 = &v179;
LABEL_25:
    v96(v97, *(v98 - 32));
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1(&v177);
LABEL_27:
    __swift_destroy_boxed_opaque_existential_1(v178);
    return v52;
  }
  if (v116 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v155 + 96))(v113, v115);
    v130 = v172;
    v131 = v144;
    v132 = v107;
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v144, v113, v107);
    v133 = sub_C637AC(v131);
LABEL_48:
    v52 = v133;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v132);
    v96 = *(void (**)(char *, _QWORD))(v156 + 8);
    v97 = v111;
    goto LABEL_49;
  }
  if (v116 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v155 + 96))(v113, v115);
    v130 = v165;
    v131 = v145;
    v132 = v170;
    (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v145, v113, v170);
    v133 = sub_C62290(v131);
    goto LABEL_48;
  }
  v135 = v155;
  if (v116 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v155 + 96))(v113, v115);
    v130 = v158;
    v131 = v143;
    v132 = v176;
    (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v143, v113, v176);
    v133 = sub_C66244(v131);
    goto LABEL_48;
  }
  if (v116 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v116 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v156 + 8))(v111, v159);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v113, v115);
    goto LABEL_53;
  }
  (*(void (**)(char *, uint64_t))(v155 + 8))(v113, v115);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000000011061A0, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_C67754(void (*a1)(char *, char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  id v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  id v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  id v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  id v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  id v108;
  char *v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  uint64_t result;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  id v150;
  char *v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  _QWORD v190[5];
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v187 = a3;
  v188 = a1;
  v164 = type metadata accessor for Track(0);
  v160 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v158 = (char *)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v159 = (char *)&v154 - v6;
  __chkstk_darwin(v7);
  v161 = (char *)&v154 - v8;
  v162 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v166 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v163 = (char *)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Playlist.Entry(0);
  v167 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v165 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v168 = (char *)&v154 - v12;
  v173 = type metadata accessor for TVEpisode(0);
  v169 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v154 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v172 = (char *)&v154 - v15;
  v176 = type metadata accessor for TVSeason(0);
  v171 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v175 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for MusicMovie(0);
  v174 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v157 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v178 = (char *)&v154 - v19;
  v182 = type metadata accessor for Song(0);
  v177 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v156 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v181 = (char *)&v154 - v22;
  v184 = type metadata accessor for Playlist(0);
  v180 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v24 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MusicVideo(0);
  v183 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v155 = (char *)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v154 - v28;
  v30 = type metadata accessor for Locale(0);
  __chkstk_darwin(v30);
  v186 = (char *)&v154 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for String.LocalizationValue(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v154 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v38 = (char *)&v154 - v37;
  v39 = type metadata accessor for Album(0);
  v185 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v41 = (char *)&v154 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190[3] = a2;
  v190[4] = v187;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v190);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1Tm, v188, a2);
  sub_55D1C((uint64_t)v190, (uint64_t)&v189);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF10);
  if (swift_dynamicCast(v41, &v189, v43, v39, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EBC80);
    v188 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v188(v35, v38, v32);
    v44 = v32;
    v45 = v35;
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v46 = qword_1581E30;
    v47 = (id)qword_1581E30;
    v48 = v186;
    static Locale.current.getter(v47);
    v49 = String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v46, v48, 0, 0, 256);
    v187 = v50;
    v51 = *(void (**)(char *, uint64_t))(v33 + 8);
    v51(v38, v44);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v188(v45, v38, v44);
    v52 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v53 = v45;
    v54 = v49;
    String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v52, v48, 0, 0, 256);
    v51(v38, v44);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v41, v39);
    goto LABEL_49;
  }
  v55 = v35;
  v56 = v25;
  if ((swift_dynamicCast(v29, &v189, v43, v25, 0) & 1) != 0)
  {
    v188 = (void (*)(char *, char *, uint64_t))v25;
    v57 = v38;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000001106290);
    v58 = v33;
    v59 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v60 = v55;
    v61 = v55;
    v62 = v32;
    v59(v61, v57, v32);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v63 = qword_1581E30;
    v64 = (id)qword_1581E30;
    v65 = v186;
    static Locale.current.getter(v64);
    v66 = String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, v63, v65, 0, 0, 256);
    v67 = *(void (**)(char *, uint64_t))(v58 + 8);
    v67(v57, v62);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000000011062E0);
    v59(v60, v57, v62);
    v68 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, v68, v65, 0, 0, 256);
    v69 = v57;
    v54 = v66;
    v67(v69, v62);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v183 + 8))(v29, v188);
    goto LABEL_49;
  }
  v70 = v32;
  if (swift_dynamicCast(v24, &v189, v43, v184, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000000010EB5F0);
    v71 = v33;
    v72 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v73 = v55;
    v72(v55, v38, v70);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v74 = qword_1581E30;
    v75 = (id)qword_1581E30;
    v76 = v186;
    static Locale.current.getter(v75);
    v188 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v74, v76, 0, 0, 256);
    v77 = *(void (**)(char *, uint64_t))(v71 + 8);
    v77(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v72(v73, v38, v70);
    v78 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v73, 0, 0, v78, v76, 0, 0, 256);
    v77(v38, v70);
    v79 = v24;
    v54 = (uint64_t)v188;
    (*(void (**)(char *, uint64_t))(v180 + 8))(v79, v184);
    goto LABEL_49;
  }
  if (swift_dynamicCast(v181, &v189, v43, v182, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000000010D9830);
    v80 = v33;
    v81 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v81(v55, v38, v32);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v82 = qword_1581E30;
    v83 = (id)qword_1581E30;
    v84 = v186;
    static Locale.current.getter(v83);
    v54 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v82, v84, 0, 0, 256);
    v85 = *(void (**)(char *, uint64_t))(v80 + 8);
    v85(v38, v32);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v81(v55, v38, v32);
    v86 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v86, v84, 0, 0, 256);
    v85(v38, v32);
    (*(void (**)(char *, uint64_t))(v177 + 8))(v181, v182);
    goto LABEL_49;
  }
  v87 = v55;
  if (swift_dynamicCast(v178, &v189, v43, v179, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000010EB5B0);
    v88 = v33;
    v89 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v89(v55, v38, v70);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v90 = qword_1581E30;
    v91 = (id)qword_1581E30;
    v92 = v186;
    static Locale.current.getter(v91);
    v54 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v90, v92, 0, 0, 256);
    v93 = *(void (**)(char *, uint64_t))(v88 + 8);
    v93(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v89(v55, v38, v70);
    v94 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v94, v92, 0, 0, 256);
    v93(v38, v70);
    v95 = *(void (**)(char *, uint64_t))(v174 + 8);
    v96 = v178;
    v97 = &v194;
    goto LABEL_47;
  }
  if (swift_dynamicCast(v175, &v189, v43, v176, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000001106250);
    v98 = v33;
    v99 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v99(v55, v38, v70);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v100 = qword_1581E30;
    v101 = (id)qword_1581E30;
    v102 = v186;
    static Locale.current.getter(v101);
    v54 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v100, v102, 0, 0, 256);
    v103 = *(void (**)(char *, uint64_t))(v98 + 8);
    v103(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v99(v55, v38, v70);
    v104 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v104, v102, 0, 0, 256);
    v103(v38, v70);
    v95 = *(void (**)(char *, uint64_t))(v171 + 8);
    v96 = v175;
    v97 = &v193;
    goto LABEL_47;
  }
  if (swift_dynamicCast(v172, &v189, v43, v173, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000000011061E0);
    v105 = v33;
    v106 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v106(v55, v38, v70);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v107 = qword_1581E30;
    v108 = (id)qword_1581E30;
    v109 = v186;
    static Locale.current.getter(v108);
    v54 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v107, v109, 0, 0, 256);
    v110 = *(void (**)(char *, uint64_t))(v105 + 8);
    v110(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000001106230);
    v106(v87, v38, v70);
    v111 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v111, v109, 0, 0, 256);
    v110(v38, v70);
    v95 = *(void (**)(char *, uint64_t))(v169 + 8);
    v96 = v172;
    v97 = &v192;
    goto LABEL_47;
  }
  v112 = v168;
  v113 = v170;
  if (!swift_dynamicCast(v168, &v189, v43, v170, 0))
  {
    v125 = v161;
    v126 = v43;
    v127 = v164;
    v128 = v33;
    if ((swift_dynamicCast(v161, &v189, v126, v164, 0) & 1) != 0)
    {
      v129 = v160;
      v130 = v159;
      (*(void (**)(char *, char *, uint64_t))(v160 + 32))(v159, v125, v127);
      v131 = v158;
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v158, v130, v127);
      v132 = (*(uint64_t (**)(char *, uint64_t))(v129 + 88))(v131, v127);
      if (v132 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v129 + 96))(v131, v127);
        v133 = v177;
        v134 = (uint64_t)v156;
        v135 = v130;
        v136 = v182;
        (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v156, v131, v182);
        v54 = sub_C62290(v134);
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v134, v136);
        v95 = *(void (**)(char *, uint64_t))(v129 + 8);
        v96 = v135;
LABEL_39:
        v143 = v127;
LABEL_48:
        v95(v96, v143);
LABEL_49:
        __swift_destroy_boxed_opaque_existential_1(&v189);
LABEL_50:
        __swift_destroy_boxed_opaque_existential_1(v190);
        return v54;
      }
      if (v132 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v129 + 96))(v131, v127);
        v141 = v183;
        v142 = (uint64_t)v155;
        (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v155, v131, v56);
        v54 = sub_C637AC(v142);
        (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v56);
        v95 = *(void (**)(char *, uint64_t))(v129 + 8);
        v96 = v130;
        goto LABEL_39;
      }
      v144 = v130;
      v145 = *(void (**)(char *, uint64_t))(v129 + 8);
      v145(v144, v127);
      v145(v131, v127);
    }
LABEL_54:
    __swift_destroy_boxed_opaque_existential_1(&v189);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000000010EB420);
    v148 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
    v148(v87, v38, v70);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v149 = qword_1581E30;
    v150 = (id)qword_1581E30;
    v151 = v186;
    static Locale.current.getter(v150);
    v54 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v149, v151, 0, 0, 256);
    v152 = *(void (**)(char *, uint64_t))(v128 + 8);
    v152(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v148(v87, v38, v70);
    v153 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v153, v151, 0, 0, 256);
    v152(v38, v70);
    goto LABEL_50;
  }
  v114 = v25;
  v115 = v167;
  v116 = v165;
  v117 = (*(uint64_t (**)(char *, char *, uint64_t))(v167 + 32))(v165, v112, v113);
  v118 = v163;
  Playlist.Entry.internalItem.getter(v117);
  v119 = v166;
  v120 = v162;
  v121 = (*(uint64_t (**)(char *, uint64_t))(v166 + 88))(v118, v162);
  if (v121 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v119 + 96))(v118, v120);
    v122 = v174;
    v123 = (uint64_t)v157;
    v124 = v179;
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v157, v118, v179);
    v54 = sub_C64CF4(v123);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v123, v124);
    v95 = *(void (**)(char *, uint64_t))(v115 + 8);
LABEL_46:
    v96 = v116;
    v97 = &v191;
LABEL_47:
    v143 = *(v97 - 32);
    goto LABEL_48;
  }
  if (v121 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v166 + 96))(v118, v120);
    v137 = v183;
    v138 = (uint64_t)v155;
    v139 = v114;
    (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v155, v118, v114);
    v140 = sub_C637AC(v138);
LABEL_45:
    v54 = v140;
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v138, v139);
    v95 = *(void (**)(char *, uint64_t))(v167 + 8);
    goto LABEL_46;
  }
  if (v121 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v166 + 96))(v118, v120);
    v137 = v177;
    v138 = (uint64_t)v156;
    v139 = v182;
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v156, v118, v182);
    v140 = sub_C62290(v138);
    goto LABEL_45;
  }
  v146 = v166;
  if (v121 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v166 + 96))(v118, v120);
    v137 = v169;
    v138 = (uint64_t)v154;
    v139 = v173;
    (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v154, v118, v173);
    v140 = sub_C66244(v138);
    goto LABEL_45;
  }
  if (v121 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v121 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v116, v170);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v118, v120);
    v128 = v33;
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v166 + 8))(v118, v120);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x80000000011061A0, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

void sub_C68C80(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9EF0 != -1)
    swift_once(&qword_14F9EF0, sub_C83A68);
  v9 = static CloudLibrary.EnablementContext.action;
  v8 = unk_15821C0;
  swift_bridgeObjectRetain();
  v10 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v7, v4);
  CloudLibrary.EnablementContext.title.getter(a1);
  v34 = v15;
  v35 = v14;
  CloudLibrary.EnablementContext.message.getter(a1);
  v32 = v17;
  v33 = v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v19 = swift_allocObject(v18, 144, 7);
  *(_OWORD *)(v19 + 16) = xmmword_105F890;
  *(_QWORD *)(v19 + 32) = v11;
  *(_QWORD *)(v19 + 40) = v13;
  *(_QWORD *)(v19 + 48) = v9;
  *(_QWORD *)(v19 + 56) = v8;
  *(_BYTE *)(v19 + 64) = 2;
  *(_QWORD *)(v19 + 72) = &unk_14FEF38;
  *(_QWORD *)(v19 + 80) = 0;
  v20 = qword_14FA560;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v4;
  if (v20 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v22 = static String.cancelButtonTitle;
  v23 = qword_1582D20;
  swift_bridgeObjectRetain();
  v24 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v25 = UUID.uuidString.getter(v24);
  v27 = v26;
  v31(v7, v21);
  *(_QWORD *)(v19 + 88) = v25;
  *(_QWORD *)(v19 + 96) = v27;
  *(_QWORD *)(v19 + 104) = v22;
  *(_QWORD *)(v19 + 112) = v23;
  *(_BYTE *)(v19 + 120) = 0;
  *(_QWORD *)(v19 + 128) = 0;
  *(_QWORD *)(v19 + 136) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v34;
  *(_QWORD *)a2 = v35;
  *(_QWORD *)(a2 + 8) = v28;
  v29 = v32;
  *(_QWORD *)(a2 + 16) = v33;
  *(_QWORD *)(a2 + 24) = v29;
  *(_BYTE *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = 0;
}

char *sub_C68E74@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unsigned __int8 v32;
  unint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *result;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  const char *v52;
  uint64_t v53;
  id v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(char *, uint64_t);
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  _QWORD v119[16];

  v111 = a2;
  v117 = type metadata accessor for UUID(0);
  v112 = *(uint64_t (**)(char *, uint64_t))(v117 - 8);
  __chkstk_darwin(v117);
  v116 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v118 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v8 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v105 - v10;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v12 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109FDD0);
  v14 = swift_getKeyPath(&unk_109FDF8);
  static Published.subscript.getter(v119, v12, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  v15 = v119[3];
  v16 = v119[4];
  v17 = v119[7];
  v18 = v119[9];
  v19 = (void *)v119[10];
  v20 = v119[12];
  swift_bridgeObjectRelease(v119[14]);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);

  v21 = sub_C521F8(7u, v16);
  swift_bridgeObjectRelease(v16);
  if ((a1 & 1) != 0)
  {
    v22 = 0x80000000010D3020;
    v23 = 0xD000000000000012;
  }
  else
  {
    v22 = 0x8000000001106300;
    v23 = 0x100000000000002DLL;
  }
  String.LocalizationValue.init(stringLiteral:)(v23, v22);
  v24 = v115;
  v114 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v114(v8, v11, v115);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v25 = qword_1581E30;
  v26 = (id)qword_1581E30;
  v27 = v118;
  static Locale.current.getter(v26);
  v28 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v25, v27, 0, 0, 256);
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v11, v24);
  v32 = objc_msgSend((id)objc_opt_self(AMSRestrictions), "allowAccountModifications");
  v113 = v30;
  if ((v32 & 1) != 0)
  {
    v110 = v28;
    v109 = v31;
    if ((v21 & 1) != 0)
    {
      if ((a1 & 1) != 0)
      {
        v33 = 0xD000000000000087;
        v34 = "This content is restricted from playing on this device. To change your Content Restrictions, go to Setting"
              "s and allow explicit content.";
      }
      else
      {
        v33 = 0xD000000000000061;
        v34 = "To add this to your library, change your Content Restrictions to allow a less restrictive rating.";
      }
      String.LocalizationValue.init(stringLiteral:)(v33, (unint64_t)(v34 - 32) | 0x8000000000000000);
      v114(v8, v11, v24);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v53 = qword_1581E30;
      v54 = (id)qword_1581E30;
      v55 = v118;
      static Locale.current.getter(v54);
      v108 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v53, v55, 0, 0, 256);
      v107 = v56;
      v31(v11, v24);
      String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
      v114(v8, v11, v24);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v57 = qword_1581E30;
      v58 = (id)qword_1581E30;
      v59 = v118;
      static Locale.current.getter(v58);
      v106 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v57, v59, 0, 0, 256);
      v105 = v60;
      v31(v11, v24);
      v61 = v116;
      v62 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v63 = UUID.uuidString.getter(v62);
      v65 = v64;
      v66 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
      v66(v61, v117);
      v43 = sub_BCC868(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v68 = *((_QWORD *)v43 + 2);
      v67 = *((_QWORD *)v43 + 3);
      v112 = (uint64_t (*)(char *, uint64_t))v66;
      if (v68 >= v67 >> 1)
        v43 = sub_BCC868((char *)(v67 > 1), v68 + 1, 1, v43);
      *((_QWORD *)v43 + 2) = v68 + 1;
      v69 = &v43[56 * v68];
      *((_QWORD *)v69 + 4) = v63;
      *((_QWORD *)v69 + 5) = v65;
      v70 = v105;
      *((_QWORD *)v69 + 6) = v106;
      *((_QWORD *)v69 + 7) = v70;
      v69[64] = 2;
      v71 = &unk_14FEF30;
    }
    else
    {
      if ((a1 & 1) != 0)
      {
        v51 = 0xD00000000000005BLL;
        v52 = "To play this item, change your Content Restrictions to allow a less restrictive rating now.";
      }
      else
      {
        v51 = 0xD000000000000065;
        v52 = "To add this to your library, change your Content Restrictions to allow a less restrictive rating now.";
      }
      String.LocalizationValue.init(stringLiteral:)(v51, (unint64_t)(v52 - 32) | 0x8000000000000000);
      v114(v8, v11, v24);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v72 = qword_1581E30;
      v73 = (id)qword_1581E30;
      v74 = v118;
      static Locale.current.getter(v73);
      v108 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v72, v74, 0, 0, 256);
      v107 = v75;
      v31(v11, v24);
      String.LocalizationValue.init(stringLiteral:)(0x776F6C6C41, 0xE500000000000000);
      v114(v8, v11, v24);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v76 = qword_1581E30;
      v77 = (id)qword_1581E30;
      v78 = v118;
      static Locale.current.getter(v77);
      v106 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v76, v78, 0, 0, 256);
      v105 = v79;
      v31(v11, v24);
      v80 = v116;
      v81 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v82 = UUID.uuidString.getter(v81);
      v84 = v83;
      v85 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
      v85(v80, v117);
      v43 = sub_BCC868(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v87 = *((_QWORD *)v43 + 2);
      v86 = *((_QWORD *)v43 + 3);
      v112 = (uint64_t (*)(char *, uint64_t))v85;
      if (v87 >= v86 >> 1)
        v43 = sub_BCC868((char *)(v86 > 1), v87 + 1, 1, v43);
      *((_QWORD *)v43 + 2) = v87 + 1;
      v69 = &v43[56 * v87];
      *((_QWORD *)v69 + 4) = v82;
      *((_QWORD *)v69 + 5) = v84;
      v88 = v105;
      *((_QWORD *)v69 + 6) = v106;
      *((_QWORD *)v69 + 7) = v88;
      v69[64] = 2;
      v71 = &unk_14FEF28;
    }
    *((_QWORD *)v69 + 9) = v71;
    *((_QWORD *)v69 + 10) = 0;
    String.LocalizationValue.init(stringLiteral:)(0x776F4E20746F4ELL, 0xE700000000000000);
    v89 = v115;
    v114(v8, v11, v115);
    v90 = qword_1581E30;
    v91 = (id)qword_1581E30;
    v92 = v118;
    static Locale.current.getter(v91);
    v93 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v90, v92, 0, 0, 256);
    v95 = v94;
    v109(v11, v89);
    v96 = v116;
    v97 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v98 = UUID.uuidString.getter(v97);
    v100 = v99;
    result = (char *)v112(v96, v117);
    v102 = *((_QWORD *)v43 + 2);
    v101 = *((_QWORD *)v43 + 3);
    if (v102 >= v101 >> 1)
    {
      result = sub_BCC868((char *)(v101 > 1), v102 + 1, 1, v43);
      v43 = result;
    }
    v46 = v111;
    v47 = v108;
    v50 = v107;
    *((_QWORD *)v43 + 2) = v102 + 1;
    v103 = &v43[56 * v102];
    *((_QWORD *)v103 + 4) = v98;
    *((_QWORD *)v103 + 5) = v100;
    *((_QWORD *)v103 + 6) = v93;
    *((_QWORD *)v103 + 7) = v95;
    v103[64] = 2;
    v49 = v103 + 72;
    v28 = v110;
  }
  else
  {
    if (qword_14FA550 != -1)
      swift_once(&qword_14FA550, sub_D73C68);
    v35 = static String.okButtonTitle;
    v36 = qword_1582D00;
    swift_bridgeObjectRetain();
    v37 = v116;
    v38 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v39 = UUID.uuidString.getter(v38);
    v41 = v40;
    (*((void (**)(char *, uint64_t))v112 + 1))(v37, v117);
    result = sub_BCC868(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v43 = result;
    v45 = *((_QWORD *)result + 2);
    v44 = *((_QWORD *)result + 3);
    v46 = v111;
    if (v45 >= v44 >> 1)
    {
      result = sub_BCC868((char *)(v44 > 1), v45 + 1, 1, result);
      v43 = result;
    }
    v47 = 0;
    *((_QWORD *)v43 + 2) = v45 + 1;
    v48 = &v43[56 * v45];
    *((_QWORD *)v48 + 4) = v39;
    *((_QWORD *)v48 + 5) = v41;
    *((_QWORD *)v48 + 6) = v35;
    *((_QWORD *)v48 + 7) = v36;
    v48[64] = 2;
    v49 = v48 + 72;
    v50 = 0xE000000000000000;
  }
  *v49 = 0;
  v49[1] = 0;
  v104 = v113;
  *(_QWORD *)v46 = v28;
  *(_QWORD *)(v46 + 8) = v104;
  *(_QWORD *)(v46 + 16) = v47;
  *(_QWORD *)(v46 + 24) = v50;
  *(_BYTE *)(v46 + 32) = 0;
  *(_QWORD *)(v46 + 40) = v43;
  *(_QWORD *)(v46 + 48) = 0;
  return result;
}

uint64_t sub_C69808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a2;
  v55 = a3;
  v53 = a1;
  v56 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
  v50 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v50(v16, v19, v13);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v20 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v21 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v20, v12, 0, 0, 256);
  v51 = v22;
  v52 = v21;
  v49 = *(void (**)(char *, uint64_t))(v14 + 8);
  v49(v19, v13);
  v23 = swift_allocObject(&unk_13B2048, 32, 7);
  *(_QWORD *)(v23 + 16) = v55;
  *(_QWORD *)(v23 + 24) = a4;
  v45 = v23;
  swift_retain();
  v24 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v25 = UUID.uuidString.getter(v24);
  v47 = v26;
  v48 = v25;
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v9, v56);
  if (qword_14FA570 != -1)
    swift_once(&qword_14FA570, sub_D73D9C);
  v28 = qword_1582D40;
  v46 = static String.notNowButtonTitle;
  v29 = swift_allocObject(&unk_13B2070, 32, 7);
  *(_QWORD *)(v29 + 16) = v55;
  *(_QWORD *)(v29 + 24) = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  v30 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v31 = UUID.uuidString.getter(v30);
  v55 = v32;
  v27(v9, v56);
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x80000000010D3560);
  v50(v16, v19, v13);
  v33 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v34 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v33, v12, 0, 0, 256);
  v36 = v35;
  v49(v19, v13);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v38 = swift_allocObject(v37, 144, 7);
  *(_OWORD *)(v38 + 16) = xmmword_105F890;
  v39 = v47;
  *(_QWORD *)(v38 + 32) = v48;
  *(_QWORD *)(v38 + 40) = v39;
  v40 = v51;
  *(_QWORD *)(v38 + 48) = v52;
  *(_QWORD *)(v38 + 56) = v40;
  *(_BYTE *)(v38 + 64) = 2;
  v41 = v45;
  *(_QWORD *)(v38 + 72) = &unk_14FEEC8;
  *(_QWORD *)(v38 + 80) = v41;
  v42 = v55;
  *(_QWORD *)(v38 + 88) = v31;
  *(_QWORD *)(v38 + 96) = v42;
  *(_QWORD *)(v38 + 104) = v46;
  *(_QWORD *)(v38 + 112) = v28;
  *(_BYTE *)(v38 + 120) = 0;
  *(_QWORD *)(v38 + 128) = &unk_14FEED8;
  *(_QWORD *)(v38 + 136) = v29;
  result = swift_bridgeObjectRetain();
  *(_QWORD *)a5 = v34;
  *(_QWORD *)(a5 + 8) = v36;
  *(_QWORD *)(a5 + 16) = v53;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = v38;
  *(_QWORD *)(a5 + 48) = 0;
  return result;
}

id sub_C69BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id result;
  void *v22;
  int wapiCapability;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);

  v47 = a3;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000000010EBEF0);
  v50 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v50(v11, v14, v8);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v48 = v17;
  v49 = v16;
  v18 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v19 = v18(v14, v8);
  result = (id)MobileGestalt_get_current_device(v19, v20);
  if (result)
  {
    v22 = result;
    wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability)
    {
      v24 = 0x80000000010EBF20;
      v25 = 0x100000000000008BLL;
    }
    else
    {
      v25 = 0x100000000000008CLL;
      v24 = 0x80000000010EBE60;
    }
    String.LocalizationValue.init(stringLiteral:)(v25, v24);
    v50(v11, v14, v8);
    v26 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v27 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v26, v7, 0, 0, 256);
    v45 = v28;
    v46 = v27;
    v29 = a1;
    v30 = a2;
    v18(v14, v8);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
    v32 = swift_allocObject(v31, 144, 7);
    *(_OWORD *)(v32 + 16) = xmmword_105F890;
    if (qword_14FA570 != -1)
      swift_once(&qword_14FA570, sub_D73D9C);
    v33 = static String.notNowButtonTitle;
    v34 = qword_1582D40;
    v35 = swift_allocObject(&unk_13B2098, 32, 7);
    *(_QWORD *)(v35 + 16) = v29;
    *(_QWORD *)(v35 + 24) = v30;
    *(_QWORD *)(v32 + 32) = 0x6C65636E6163;
    *(_QWORD *)(v32 + 40) = 0xE600000000000000;
    *(_QWORD *)(v32 + 48) = v33;
    *(_QWORD *)(v32 + 56) = v34;
    *(_BYTE *)(v32 + 64) = 0;
    *(_QWORD *)(v32 + 72) = &unk_14FEEE8;
    *(_QWORD *)(v32 + 80) = v35;
    swift_bridgeObjectRetain();
    sub_A9DEC(v29, v30);
    String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
    v50(v11, v14, v8);
    v36 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v37 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v36, v7, 0, 0, 256);
    v39 = v38;
    v18(v14, v8);
    v40 = swift_allocObject(&unk_13B20C0, 32, 7);
    *(_QWORD *)(v40 + 16) = v29;
    *(_QWORD *)(v40 + 24) = v30;
    *(_QWORD *)(v32 + 88) = 0x6E4F6E727574;
    *(_QWORD *)(v32 + 96) = 0xE600000000000000;
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 112) = v39;
    *(_BYTE *)(v32 + 120) = 2;
    *(_QWORD *)(v32 + 128) = &unk_14FEEF8;
    *(_QWORD *)(v32 + 136) = v40;
    result = (id)sub_A9DEC(v29, v30);
    v41 = v47;
    v42 = v48;
    *v47 = v49;
    v41[1] = v42;
    v43 = v45;
    v41[2] = v46;
    v41[3] = v43;
    *((_BYTE *)v41 + 32) = 0;
    v41[5] = v32;
    v41[6] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_C69FA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int64x2_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  void (*v33)(char *, char *, uint64_t);
  id v34;
  NSURL *v35;
  void *v36;
  void *v37;
  unsigned int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a8;
  v54 = a6;
  v55 = a7;
  v52 = a4;
  v53 = a5;
  v13 = type metadata accessor for UUID(0);
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  __chkstk_darwin(v13);
  v48 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v47 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v21);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v46 - v25;
  if (qword_14FA618 != -1)
    swift_once(&qword_14FA618, sub_D75398);
  v27 = 0uLL;
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    sub_C81E20(a1, a2, a3, v52, v53, v54, v55, v51 & 1, (uint64_t)v26);
    sub_B9E670((uint64_t)v26, (uint64_t)v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15) == 1)
    {
      sub_B9E6B8((uint64_t)v26);
      v28 = (uint64_t)v23;
LABEL_10:
      sub_B9E6B8(v28);
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 0uLL;
      v27 = 0uLL;
      goto LABEL_11;
    }
    v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v33(v20, v23, v15);
    v34 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    URL._bridgeToObjectiveC()(v35);
    v37 = v36;
    v38 = objc_msgSend(v34, "canOpenURL:", v36);

    if (!v38)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
      v28 = (uint64_t)v26;
      goto LABEL_10;
    }
    v39 = v47;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v47, v20, v15);
    v40 = *(unsigned __int8 *)(v16 + 80);
    v41 = (v40 + 16) & ~v40;
    v31 = swift_allocObject(&unk_13B2020, v41 + v17, v40 | 7);
    v33((char *)(v31 + v41), v39, v15);
    v42 = v48;
    v43 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v29 = UUID.uuidString.getter(v43);
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v50);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    sub_B9E6B8((uint64_t)v26);
    v27 = vdupq_n_s64(0x52206120656C6946uLL);
    v27.i64[0] = v45;
    v32 = xmmword_1099320;
    v30 = &unk_14FEEB8;
  }
  else
  {
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0uLL;
  }
LABEL_11:
  *(_QWORD *)a9 = v29;
  *(int64x2_t *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v32;
  *(_QWORD *)(a9 + 40) = v30;
  *(_QWORD *)(a9 + 48) = v31;
}

uint64_t sub_C6A2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_C6A33C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  void *v19;
  char wapiCapability;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  id v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  BOOL v58;
  id v59;
  char *v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  void *v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;

  v4 = type metadata accessor for UUID(0);
  v119 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v120 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v109 - v14;
  result = (id)MobileGestalt_get_current_device(v16, v17);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v19 = result;
  wapiCapability = MobileGestalt_get_wapiCapability();

  v117 = v4;
  v118 = a2;
  if (!a1)
    goto LABEL_24;
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(a1) || (objc_opt_self(MPModelArtist), swift_dynamicCastObjCClass(a1)))
  {
    v21 = v6;
    if ((wapiCapability & 1) != 0)
    {
      String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000001105DA0);
      v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v22(v12, v15, v9);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v23 = qword_1581E30;
      v24 = (id)qword_1581E30;
      v25 = v120;
      static Locale.current.getter(v24);
      v26 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v23, v25, 0, 0, 256);
      v111 = v27;
      v112 = v26;
      v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v28(v15, v9);
      v29 = 0x8000000001106110;
      v30 = 0x100000000000006ALL;
      goto LABEL_48;
    }
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000001105D50);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v31 = qword_1581E30;
    v32 = (id)qword_1581E30;
    v25 = v120;
    static Locale.current.getter(v32);
    v33 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v31, v25, 0, 0, 256);
    v111 = v34;
    v112 = v33;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v30 = 0x100000000000006BLL;
    v35 = "To play Radio when you aren’t connected to Wi-Fi, turn on cellular playback in Music in the Settings app.";
LABEL_47:
    v29 = (unint64_t)(v35 - 32) | 0x8000000000000000;
LABEL_48:
    String.LocalizationValue.init(stringLiteral:)(v30, v29);
    v22(v12, v15, v9);
    v77 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v78 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v77, v25, 0, 0, 256);
    v109 = v79;
    v110 = v78;
    v28(v15, v9);
    String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
    v22(v12, v15, v9);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v80 = qword_1581E30;
    v81 = (id)qword_1581E30;
    v82 = v120;
    static Locale.current.getter(v81);
    v115 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v80, v82, 0, 0, 256);
    v113 = v83;
    v72 = &unk_14FEE98;
    goto LABEL_51;
  }
  objc_opt_self(MPModelTVEpisode);
  if (swift_dynamicCastObjCClass(a1) || (objc_opt_self(MPModelMovie), swift_dynamicCastObjCClass(a1)))
  {
    if ((wapiCapability & 1) == 0)
      goto LABEL_37;
LABEL_15:
    v21 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000001105FF0);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v36 = qword_1581E30;
    v37 = (id)qword_1581E30;
    v38 = v120;
    static Locale.current.getter(v37);
    v39 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v36, v38, 0, 0, 256);
    v111 = v40;
    v112 = v39;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v41 = 0x1000000000000087;
    v42 = "To stream videos when you aren’t connected to WLAN, turn on Cellular Data for streaming. You can change this a"
          "nytime in Settings > TV";
    goto LABEL_40;
  }
  objc_opt_self(MPModelMediaClip);
  v43 = swift_dynamicCastObjCClass(a1);
  if (!v43)
  {
LABEL_24:
    if ((wapiCapability & 1) != 0)
      goto LABEL_25;
LABEL_44:
    v21 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000001105DF0);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v73 = qword_1581E30;
    v74 = (id)qword_1581E30;
    v25 = v120;
    static Locale.current.getter(v74);
    v75 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v73, v25, 0, 0, 256);
    v111 = v76;
    v112 = v75;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v30 = 0x100000000000008BLL;
    v35 = "To stream music when you aren’t connected to Wi-Fi, turn on Cellular Data for streaming. You can change this a"
          "nytime in Settings > Music.";
    goto LABEL_47;
  }
  v44 = (void *)v43;
  v45 = MPModelRelationshipMediaClipStaticAssets;
  v46 = a1;
  if (!objc_msgSend(v44, "hasLoadedValueForKey:", v45)
    || (v47 = objc_msgSend(v44, "staticAssets")) == 0)
  {

    if ((wapiCapability & 1) != 0)
      goto LABEL_25;
    goto LABEL_44;
  }
  v48 = v47;
  v49 = sub_C6B69C();
  v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

  v51 = v50;
  v116 = v50;
  v112 = v46;
  if (v50 >> 62)
  {
LABEL_55:
    if (v51 < 0)
      v107 = v116;
    else
      v107 = v51 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v108 = v107;
    v51 = v116;
    v52 = _CocoaArrayWrapper.endIndex.getter(v108);
    swift_bridgeObjectRelease(v51);
    if (v52)
      goto LABEL_23;
LABEL_59:

    swift_bridgeObjectRelease(v51);
    if ((wapiCapability & 1) == 0)
      goto LABEL_44;
LABEL_25:
    v21 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000001105DF0);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v54 = qword_1581E30;
    v55 = (id)qword_1581E30;
    v25 = v120;
    static Locale.current.getter(v55);
    v56 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v54, v25, 0, 0, 256);
    v111 = v57;
    v112 = v56;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v30 = 0x100000000000008ALL;
    v35 = "To stream music when you aren’t connected to WLAN, turn on Cellular Data for streaming. You can change this an"
          "ytime in Settings > Music.";
    goto LABEL_47;
  }
  v52 = *(_QWORD *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFF8));
  if (!v52)
    goto LABEL_59;
LABEL_23:
  v115 = v51 & 0xC000000000000001;
  v113 = v9;
  v114 = (void *)MPModelPropertyStaticAssetMediaType;
  v53 = 4;
  while (1)
  {
    if (v115)
      v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 4, v51);
    else
      v59 = *(id *)(v51 + 8 * v53);
    v51 = (uint64_t)v59;
    v9 = v53 - 3;
    if (__OFADD__(v53 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (objc_msgSend(v59, "hasLoadedValueForKey:", v114))
      break;

LABEL_29:
    ++v53;
    v58 = v9 == v52;
    v9 = v113;
    v51 = v116;
    if (v58)
      goto LABEL_59;
  }
  v60 = (char *)objc_msgSend((id)v51, "mediaType");

  if (v60 != (_BYTE *)&dword_0 + 2)
    goto LABEL_29;

  swift_bridgeObjectRelease(v116);
  v9 = v113;
  if ((wapiCapability & 1) != 0)
    goto LABEL_15;
LABEL_37:
  v21 = v6;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000001105F40);
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v22(v12, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v61 = qword_1581E30;
  v62 = (id)qword_1581E30;
  v38 = v120;
  static Locale.current.getter(v62);
  v63 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v61, v38, 0, 0, 256);
  v111 = v64;
  v112 = v63;
  v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  v28(v15, v9);
  v41 = 0x1000000000000088;
  v42 = "To stream videos when you aren’t connected to Wi-Fi, turn on Cellular Data for streaming. You can change this an"
        "ytime in Settings > TV";
LABEL_40:
  String.LocalizationValue.init(stringLiteral:)(v41, (unint64_t)(v42 - 32) | 0x8000000000000000);
  v22(v12, v15, v9);
  v65 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v66 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v65, v38, 0, 0, 256);
  v109 = v67;
  v110 = v66;
  v28(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
  v22(v12, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v68 = qword_1581E30;
  v69 = (id)qword_1581E30;
  v70 = v120;
  static Locale.current.getter(v69);
  v115 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v68, v70, 0, 0, 256);
  v113 = v71;
  v72 = &unk_14FEEA8;
LABEL_51:
  v114 = v72;
  v28(v15, v9);
  v84 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v85 = v21;
  v86 = UUID.uuidString.getter(v84);
  v116 = v87;
  v88 = *(void (**)(char *, uint64_t))(v119 + 8);
  v89 = v21;
  v90 = v117;
  v88(v89, v117);
  String.LocalizationValue.init(stringLiteral:)(0x776F4E20746F4ELL, 0xE700000000000000);
  v22(v12, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v91 = qword_1581E30;
  v92 = (id)qword_1581E30;
  v93 = v120;
  static Locale.current.getter(v92);
  v94 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v91, v93, 0, 0, 256);
  v96 = v95;
  v28(v15, v9);
  v97 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v98 = UUID.uuidString.getter(v97);
  v100 = v99;
  v88(v85, v90);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  result = (id)swift_allocObject(v101, 144, 7);
  *((_OWORD *)result + 1) = xmmword_105F890;
  v102 = v116;
  *((_QWORD *)result + 4) = v86;
  *((_QWORD *)result + 5) = v102;
  v103 = v113;
  *((_QWORD *)result + 6) = v115;
  *((_QWORD *)result + 7) = v103;
  *((_BYTE *)result + 64) = 2;
  *((_QWORD *)result + 9) = v114;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 11) = v98;
  *((_QWORD *)result + 12) = v100;
  *((_QWORD *)result + 13) = v94;
  *((_QWORD *)result + 14) = v96;
  *((_BYTE *)result + 120) = 0;
  *((_QWORD *)result + 16) = 0;
  *((_QWORD *)result + 17) = 0;
  v104 = v118;
  v105 = v111;
  *v118 = v112;
  v104[1] = v105;
  v106 = v109;
  v104[2] = v110;
  v104[3] = v106;
  *((_BYTE *)v104 + 32) = 0;
  v104[5] = result;
  v104[6] = 0;
  return result;
}

id sub_C6AEFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  void *v19;
  int wapiCapability;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int cellularDataCapability;
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  const char *v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;

  v4 = type metadata accessor for UUID(0);
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v71 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v62 - v14;
  result = (id)MobileGestalt_get_current_device(v16, v17);
  if (!result)
  {
    __break(1u);
    goto LABEL_30;
  }
  v19 = result;
  wapiCapability = MobileGestalt_get_wapiCapability();

  result = (id)MobileGestalt_get_current_device(v21, v22);
  if (!result)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  v23 = result;
  cellularDataCapability = MobileGestalt_get_cellularDataCapability();

  v68 = a2;
  if (!a1)
  {
    if (wapiCapability)
    {
      if ((cellularDataCapability & 1) != 0)
        goto LABEL_10;
LABEL_20:
      v28 = "Connect to WLAN to Play Music";
      goto LABEL_21;
    }
    if ((cellularDataCapability & 1) != 0)
    {
LABEL_15:
      v26 = 0xD00000000000002ALL;
      v27 = "Connect to Wi-Fi or Cellular to Play Music";
      goto LABEL_23;
    }
LABEL_22:
    v26 = 0xD00000000000001ELL;
    v27 = "Connect to Wi-Fi to Play Music";
    goto LABEL_23;
  }
  objc_opt_self(MPModelRadioStation);
  v25 = swift_dynamicCastObjCClass(a1);
  if (!wapiCapability)
  {
    if (cellularDataCapability)
    {
      if (v25)
      {
        v26 = 0xD00000000000002ALL;
        v27 = "Connect to Wi-Fi or Cellular to Play Radio";
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v25)
    {
      v26 = 0xD00000000000001ELL;
      v27 = "Connect to Wi-Fi to Play Radio";
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (cellularDataCapability)
  {
    if (v25)
    {
      v26 = 0xD000000000000029;
      v27 = "Connect to WLAN or Cellular to Play Radio";
LABEL_23:
      v29 = (unint64_t)(v27 - 32) | 0x8000000000000000;
      goto LABEL_24;
    }
LABEL_10:
    v26 = 0xD000000000000029;
    v27 = "Connect to WLAN or Cellular to Play Music";
    goto LABEL_23;
  }
  if (!v25)
    goto LABEL_20;
  v28 = "Connect to WLAN to Play Radio";
LABEL_21:
  v29 = (unint64_t)(v28 - 32) | 0x8000000000000000;
  v26 = 0xD00000000000001DLL;
LABEL_24:
  String.LocalizationValue.init(stringLiteral:)(v26, v29);
  v30 = v10;
  v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v32 = v12;
  v31(v12, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v33 = qword_1581E30;
  v34 = (id)qword_1581E30;
  v35 = v71;
  static Locale.current.getter(v34);
  v36 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v33, v35, 0, 0, 256);
  v62 = v37;
  v63 = v36;
  v38 = *(void (**)(char *, uint64_t))(v30 + 8);
  v38(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v31(v12, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v39 = qword_1581E30;
  v40 = (id)qword_1581E30;
  v41 = v71;
  static Locale.current.getter(v40);
  v42 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, v39, v41, 0, 0, 256);
  v66 = v43;
  v67 = v42;
  v38(v15, v9);
  v44 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v45 = UUID.uuidString.getter(v44);
  v64 = v46;
  v65 = v45;
  v47 = v70;
  v48 = *(void (**)(char *, uint64_t))(v69 + 8);
  v48(v6, v70);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v31(v32, v15, v9);
  v49 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v50 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, v49, v41, 0, 0, 256);
  v52 = v51;
  v38(v15, v9);
  v53 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v54 = UUID.uuidString.getter(v53);
  v56 = v55;
  v48(v6, v47);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  result = (id)swift_allocObject(v57, 144, 7);
  *((_OWORD *)result + 1) = xmmword_105F890;
  v58 = v64;
  *((_QWORD *)result + 4) = v65;
  *((_QWORD *)result + 5) = v58;
  v59 = v66;
  *((_QWORD *)result + 6) = v67;
  *((_QWORD *)result + 7) = v59;
  *((_BYTE *)result + 64) = 2;
  *((_QWORD *)result + 9) = &unk_14FEE90;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 11) = v54;
  *((_QWORD *)result + 12) = v56;
  *((_QWORD *)result + 13) = v50;
  *((_QWORD *)result + 14) = v52;
  *((_BYTE *)result + 120) = 2;
  *((_QWORD *)result + 16) = 0;
  *((_QWORD *)result + 17) = 0;
  v60 = v68;
  v61 = v62;
  *v68 = v63;
  v60[1] = v61;
  v60[2] = 0;
  v60[3] = 0;
  *((_BYTE *)v60 + 32) = 0;
  v60[5] = (uint64_t)result;
  v60[6] = 0;
  return result;
}

uint64_t sub_C6B3C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = type metadata accessor for UUID(0);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x8000000001105C20);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v16 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v17 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v16, v7, 0, 0, 256);
  v35 = v18;
  v36 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000001105C50);
  v15(v11, v14, v8);
  v20 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v21 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v7, 0, 0, 256);
  v23 = v22;
  v19(v14, v8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v25 = swift_allocObject(v24, 88, 7);
  *(_OWORD *)(v25 + 16) = xmmword_105B360;
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v26 = static String.cancelButtonTitle;
  v27 = qword_1582D20;
  swift_bridgeObjectRetain();
  v28 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v4, v38);
  *(_QWORD *)(v25 + 32) = v29;
  *(_QWORD *)(v25 + 40) = v31;
  *(_QWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 56) = v27;
  *(_BYTE *)(v25 + 64) = 2;
  *(_QWORD *)(v25 + 72) = 0;
  *(_QWORD *)(v25 + 80) = 0;
  v33 = v35;
  *(_QWORD *)a1 = v36;
  *(_QWORD *)(a1 + 8) = v33;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v23;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

unint64_t sub_C6B69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FEEA0;
  if (!qword_14FEEA0)
  {
    v1 = objc_opt_self(MPModelStaticAsset);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FEEA0);
  }
  return result;
}

uint64_t sub_C6B6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_C6B738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_14FEEB4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_C3150;
  return sub_C61F20(v3);
}

uint64_t sub_C6B79C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C6B7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_14FEEC4);
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_C3150;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_C61DE4, 0, 0);
}

uint64_t sub_C6B820()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_14FEED4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  v6 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc(v2[1]);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_C3150;
  return v6(0);
}

uint64_t sub_C6B8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_14FEEE4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_C3150;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch(sub_C61A40, 0, 0);
}

uint64_t sub_C6B908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_14FEEF4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_C3150;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch(sub_C61A94, 0, 0);
}

uint64_t sub_C6B968()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_release();
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_C6B994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 56);
  v4 = (_QWORD *)swift_task_alloc(dword_14FEF04);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_C3150;
  v4[3] = v2;
  v4[4] = v3;
  return swift_task_switch(sub_C61B28, 0, 0);
}

uint64_t UInt32.formatName.getter(int a1)
{
  OSStatus Property;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  UInt32 ioPropertyDataSize;
  uint64_t inSpecifier;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  id outPropertyData;

  inSpecifier = 0;
  v12 = 0;
  v14 = 0;
  v13 = 0;
  v15 = 0;
  v11 = a1;
  if (a1 == 1634492771)
    return 1128352833;
  outPropertyData = 0;
  ioPropertyDataSize = 8;
  Property = AudioFormatGetProperty(0x666E616Du, 0x28u, &inSpecifier, &ioPropertyDataSize, &outPropertyData);
  v3 = outPropertyData;
  if (Property != noErr.getter() && v3)
    return String.init(_:)(v3)._countAndFlagsBits;
  if (qword_14F9E88 != -1)
    swift_once(&qword_14F9E88, sub_C7B304);
  v4 = type metadata accessor for Logger(0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.audioFormat);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    *(_DWORD *)(v8 + 4) = Property;
    _os_log_impl(&dword_0, v6, v7, "AudioFormatGetProperty kAudioFormatProperty_FormatName error: %d", (uint8_t *)v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }

  return 0;
}

_QWORD *sub_C6BBA8()
{
  _QWORD *result;

  result = sub_C6BBC4();
  static Datavault.music = (uint64_t)result;
  return result;
}

_QWORD *sub_C6BBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSString v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  char *v33;
  _QWORD v34[3];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF58);
  __chkstk_darwin(v0);
  v33 = (char *)&v34[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v2);
  v4 = (char *)&v34[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34[-1] - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v34[-1] - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v34[-1] - v16;
  v18 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "containerURLForSecurityApplicationGroupIdentifier:", v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

  v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v21(v4, v14, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_B9E6B8((uint64_t)v4);
    return 0;
  }
  v22 = v6;
  v23 = v17;
  v21(v17, v4, v5);
  v24 = v11;
  URL.appendingPathComponent(_:isDirectory:)(0x6C75617661746164, 0xE900000000000074, 1);
  type metadata accessor for Datavault(0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v31 = Datavault.__allocating_init(url:storageClass:)((uint64_t)v8, 0x707041636973754DLL, 0xE800000000000000);
  if (qword_14F9E60 != -1)
    swift_once(&qword_14F9E60, sub_C6C440);
  v25 = type metadata accessor for Logger(0);
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_14FEF40);
  v27 = *(_QWORD *)(v25 - 8);
  v28 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v33, v26, v25);
  v29 = *(void (**)(char *, uint64_t))(v22 + 8);
  v29(v24, v5);
  v29(v23, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v25);
  v30 = (uint64_t)v31 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess((char *)v31 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger, v34, 33, 0);
  sub_C6C4B8(v28, v30);
  swift_endAccess(v34);
  return v31;
}

uint64_t *Datavault.music.unsafeMutableAddressor()
{
  if (qword_14F9E58 != -1)
    swift_once(&qword_14F9E58, sub_C6BBA8);
  return &static Datavault.music;
}

double static Datavault.music.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_14F9E58 != -1)
    swift_once(&qword_14F9E58, sub_C6BBA8);
  swift_beginAccess(&static Datavault.music, v1, 0, 0);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double static Datavault.music.setter(uint64_t a1)
{
  double result;
  _BYTE v3[24];

  if (qword_14F9E58 != -1)
    swift_once(&qword_14F9E58, sub_C6BBA8);
  swift_beginAccess(&static Datavault.music, v3, 1, 0);
  static Datavault.music = a1;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t (*static Datavault.music.modify(uint64_t a1))(_QWORD)
{
  if (qword_14F9E58 != -1)
    swift_once(&qword_14F9E58, sub_C6BBA8);
  swift_beginAccess(&static Datavault.music, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t sub_C6C404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF320;
  if (!qword_14FF320)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FF320);
  }
  return result;
}

uint64_t sub_C6C440()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14FEF40);
  __swift_project_value_buffer(v0, (uint64_t)qword_14FEF40);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x6C75617661746144, 0xE900000000000074);
}

uint64_t sub_C6C4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NSDateComponents.lastUpdatedDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for DateComponents(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v0, v13);
  v17 = static Date.now.getter(v16);
  DateComponents.date.getter(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_C6C82C((uint64_t)v3);
    v18 = 0;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    Date.lastUpdatedDateString(relativeTo:)();
    v18 = v19;
    v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v7, v4);
    v20(v10, v4);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v18;
}

uint64_t DateComponents.lastUpdatedDateString(relativeTo:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DateComponents.date.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_C6C82C((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    Date.lastUpdatedDateString(relativeTo:)();
    v8 = v9;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v8;
}

uint64_t sub_C6C82C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DateComponents.lastUpdatedDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  v11 = static Date.now.getter(v10);
  DateComponents.date.getter(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_C6C82C((uint64_t)v2);
    v12 = 0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    Date.lastUpdatedDateString(relativeTo:)();
    v12 = v13;
    v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v6, v3);
    v14(v9, v3);
  }
  return v12;
}

void Date.lastUpdatedDateString(relativeTo:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  Swift::String v22;
  unint64_t v23;
  double v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = Date.timeIntervalSince(_:)(v0);
  if (v14 <= 0.0)
    return;
  if (v14 < 3600.0)
  {
    v15 = v14 / 60.0;
    if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          v16 = (uint64_t)v15;
          if (!(uint64_t)v15)
          {
            String.LocalizationValue.init(stringLiteral:)(0x647055207473754ALL, 0xEC00000064657461);
            goto LABEL_21;
          }
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
          v17._countAndFlagsBits = 0x2064657461647055;
          v17._object = (void *)0xE800000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
          v32 = v16;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v18 = 9;
          goto LABEL_8;
        }
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v14 >= 86400.0)
  {
    if (v14 >= 604800.0)
    {
      if (v14 >= 2592000.0)
        return;
      v28 = v14 / 604800.0;
      if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) != 0)
      {
        if (v28 > -9.22337204e18)
        {
          if (v28 < 9.22337204e18)
          {
            v29 = (uint64_t)v28;
            String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
            v30._countAndFlagsBits = 0x2064657461647055;
            v30._object = (void *)0xE800000000000000;
            String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v30);
            v32 = v29;
            String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
            v18 = 19;
LABEL_8:
            v19 = v18 | 0x6F67612064;
LABEL_19:
            v23 = 0xE500000000000000;
            goto LABEL_20;
          }
LABEL_43:
          __break(1u);
          return;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v24 = v14 / 86400.0;
    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          v25 = (uint64_t)v24;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
          v26._countAndFlagsBits = 0x2064657461647055;
          v26._object = (void *)0xE800000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
          v32 = v25;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v19 = 0x6F67612064;
          goto LABEL_19;
        }
        goto LABEL_40;
      }
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v20 = v14 / 3600.0;
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
    goto LABEL_35;
  if (v20 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v21 = (uint64_t)v20;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1);
  v22._countAndFlagsBits = 0x2064657461647055;
  v22._object = (void *)0xE800000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  v32 = v21;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v19 = 0x6F6761207268;
  v23 = 0xE600000000000000;
LABEL_20:
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v19);
  String.LocalizationValue.init(stringInterpolation:)(v3);
LABEL_21:
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v27 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v27, v6, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t Date.lastUpdatedDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter(v4);
  Date.lastUpdatedDateString(relativeTo:)();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t static String.stringForTrackCountAndDuration(trackCount:duration:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  double v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  __n128 v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  char *v63;
  uint64_t v64;
  Swift::String v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[3];

  v80 = a1;
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v77 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  __chkstk_darwin(v9);
  v76 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v81 = (char *)&v73 - v12;
  v13 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Calendar.Component(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Calendar(0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = 0;
  v27 = 0;
  if ((a4 & 1) != 0)
  {
LABEL_32:
    if ((a2 & 1) != 0)
      goto LABEL_41;
    goto LABEL_33;
  }
  v28 = *(double *)&a3;
  if (*(double *)&a3 <= 0.0)
  {
    v26 = 0;
    v27 = 0;
    goto LABEL_32;
  }
  v74 = v22;
  v75 = v21;
  static Calendar.current.getter(v23);
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v17 + 104);
  v29(v19, enum case for Calendar.Component.second(_:), v16);
  Calendar.maximumRange(of:)(v19);
  v31 = v30;
  v33 = v32;
  v34 = *(void (**)(char *, uint64_t))(v17 + 8);
  v34(v19, v16);
  if ((v33 & 1) != 0)
    goto LABEL_28;
  v29(v19, enum case for Calendar.Component.minute(_:), v16);
  Calendar.maximumRange(of:)(v19);
  v36 = v35;
  v38 = v37;
  result = ((uint64_t (*)(char *, uint64_t))v34)(v19, v16);
  if ((v38 & 1) != 0)
    goto LABEL_28;
  v40 = v31 * v36;
  if ((unsigned __int128)(v31 * (__int128)v36) >> 64 != (v31 * v36) >> 63)
  {
    __break(1u);
    goto LABEL_45;
  }
  if ((~a3 & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (*(double *)&a3 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (*(double *)&a3 >= 9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (!v40)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v41 = (uint64_t)*(double *)&a3;
  if ((uint64_t)*(double *)&a3 == 0x8000000000000000 && v40 == -1)
    goto LABEL_55;
  v42 = v41 / v40 * v40;
  if ((unsigned __int128)(v41 / v40 * (__int128)v40) >> 64 != v42 >> 63)
    goto LABEL_49;
  v43 = v41 % v40;
  if (__OFSUB__(v41, v42))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (!v31)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v43 == 0x8000000000000000 && v31 == -1)
    goto LABEL_56;
  v45 = v43 / v31;
  v46 = v43 / v31 * v31;
  if ((unsigned __int128)(v45 * (__int128)v31) >> 64 != v46 >> 63)
    goto LABEL_52;
  v47 = __OFADD__(v42, v46);
  v48 = v42 + v46;
  if (v47)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v47 = __OFSUB__(v41, v48);
  v49 = v41 - v48;
  if (v47)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v31 >= 0)
    v50 = v31;
  else
    v50 = v31 + 1;
  if (v49 < v50 >> 1)
  {
LABEL_28:
    v52 = objc_msgSend((id)*NSDateFormatter.collectionsDurationFormatter.unsafeMutableAddressor(), "stringFromTimeInterval:", v28);
    v27 = v52;
    if (v52)
    {
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v55 = v54;

      v84[0] = v53;
      v84[1] = v55;
      v83[0] = 44;
      v83[1] = 0xE100000000000000;
      v82[0] = 0;
      v82[1] = 0xE000000000000000;
      v56 = sub_B9DEC0();
      v26 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v83, v82, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v56, v56, v56);
      v27 = v57;
      v58 = swift_bridgeObjectRelease(v55);
      (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v25, v75, v58);
      if ((a2 & 1) != 0)
      {
LABEL_41:
        if (v27)
          return v26;
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v25, v75);
      v26 = 0;
      if ((a2 & 1) != 0)
        goto LABEL_41;
    }
LABEL_33:
    if (v27)
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 2);
      v59._countAndFlagsBits = 0;
      v59._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v59);
      v84[0] = v80;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v84, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v60._countAndFlagsBits = 0x297328676E6F7320;
      v60._object = (void *)0xEA0000000000202CLL;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v60);
      v61._countAndFlagsBits = v26;
      v61._object = v27;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v61);
      swift_bridgeObjectRelease(v27);
      v62._countAndFlagsBits = 0;
      v62._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v62);
      v63 = v81;
    }
    else
    {
      v64 = v80;
      v63 = v81;
      if (v80 < 1)
        return 0;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1);
      v65._countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v65);
      v84[0] = v64;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v84, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v66._countAndFlagsBits = 0x297328676E6F7320;
      v66._object = (void *)0xE800000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v66);
    }
    String.LocalizationValue.init(stringInterpolation:)(v15);
    v68 = v78;
    v67 = v79;
    v69 = v76;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, v63, v79);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v70 = qword_1581E30;
    v71 = (id)qword_1581E30;
    v72 = v77;
    static Locale.current.getter(v71);
    v26 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, v70, v72, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v67);
    return v26;
  }
  v47 = __OFSUB__(v31, v49);
  v51 = v31 - v49;
  if (!v47)
  {
    v28 = *(double *)&a3 + (double)v51;
    goto LABEL_28;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t NSFileManager.musicAppGroupCachesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return NSFileManager.groupCacheURL(for:)(a1);
}

Swift::Void __swiftcall LSApplicationWorkspace.openSettings()()
{
  sub_C6D588(0x3A7366657270, 0xE600000000000000);
}

Swift::Void __swiftcall LSApplicationWorkspace.openRestrictions()()
{
  sub_C6D588(0xD00000000000002BLL, 0x80000000011064C0);
}

uint64_t sub_C6D588(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSURL *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  Class isa;
  uint64_t v19;

  v5 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_56024((uint64_t)v8, &qword_14FAC20);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  URL._bridgeToObjectiveC()(v14);
  v16 = v15;
  v17 = sub_C263E0((uint64_t)_swiftEmptyArrayStorage);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "openSensitiveURL:withOptions:", v16, isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAudioQuality()()
{
  sub_C6D588(0xD000000000000032, 0x80000000011064F0);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAtmos()()
{
  sub_C6D588(0xD00000000000002BLL, 0x8000000001106530);
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusicSettings()()
{
  sub_C6D588(0xD000000000000025, 0x8000000001106560);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAccountSettings()()
{
  sub_C6D588(0xD000000000000018, 0x8000000001106590);
}

Swift::Bool __swiftcall LSApplicationWorkspace.openNotificationSettings()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned __int8 v9;
  NSURL *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  Class isa;
  uint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000030, 0x80000000011065B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_56024((uint64_t)v4, &qword_14FAC20);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    URL._bridgeToObjectiveC()(v10);
    v12 = v11;
    v13 = sub_C263E0((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v1, "openSensitiveURL:withOptions:", v12, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusicHapticsSettings()()
{
  sub_C6D588(0xD00000000000002ALL, 0x80000000011065F0);
}

uint64_t LSApplicationWorkspace.openiTunesStore(with:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t, uint64_t, double);
  id v25;
  id v26;
  void *v27;
  NSString v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSURL *v43;
  void *v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  Class isa;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  char *v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  _QWORD *v68;

  v4 = type metadata accessor for URLComponents(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v7);
  v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - v10;
  v12 = type metadata accessor for URL(0);
  v66 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v62 = (char *)&v58 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE9D0);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v58 - v22;
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
  v25 = (id)v24((char *)&v58 - v22, 1, 1, v4, v21);
  if (a1)
  {
    v25 = objc_msgSend(a1, "universalStore");
    if (v25)
    {
      v26 = v25;
      v61 = a2;
      v59 = objc_msgSend(v25, "adamID");
      swift_unknownObjectRelease(v26);
      if (qword_14F9E30 != -1)
        swift_once(&qword_14F9E30, sub_C4F36C);
      __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
      UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
      v27 = v68;
      a2 = v61;
      if (v68)
      {
        v28 = String._bridgeToObjectiveC()();
        v60 = v27;
        v29 = objc_msgSend(v27, "urlForBagKey:", v28);

        if (v29)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

          v30 = v66;
          v31 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
          v31(v11, v14, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v12);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v11, 1, v12) != 1)
          {
            v32 = v62;
            v31(v62, v11, v12);
            URLComponents.init(url:resolvingAgainstBaseURL:)(v32, 0);
            sub_C6DF9C((uint64_t)v19, (uint64_t)v23);
            v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
            v34 = v33(v23, 1, v4);
            if ((_DWORD)v34 || (v35 = (_QWORD *)URLComponents.queryItems.getter(v34)) == 0)
            {
              swift_bridgeObjectRelease(0);
              v35 = _swiftEmptyArrayStorage;
            }
            v38 = v66;
            v68 = v35;
            v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF40);
            v51 = type metadata accessor for URLQueryItem(0);
            v52 = swift_allocObject(v50, ((*(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v51 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80) | 7);
            *(_OWORD *)(v52 + 16) = xmmword_105F890;
            v67 = v59;
            v53 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
            v55 = v54;
            URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v53, v54);
            swift_bridgeObjectRelease(v55);
            URLQueryItem.init(name:value:)(7368801, 0xE300000000000000, 0x73656E757469, 0xE600000000000000);
            sub_C18904(v52);
            if (v33(v23, 1, v4))
            {

              v57 = swift_bridgeObjectRelease(v68);
            }
            else
            {
              URLComponents.queryItems.setter(v68, v56);

            }
            a2 = v61;
            v37 = (uint64_t)v65;
            (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v62, v12, v57);
            goto LABEL_16;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v11, 1, 1, v12);
        }

        v25 = (id)sub_56024((uint64_t)v11, &qword_14FAC20);
        a2 = v61;
      }
    }
  }
  URLComponents.init()(v25);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v19, 0, 1, v4);
  sub_C6DF9C((uint64_t)v19, (uint64_t)v23);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (!v33(v23, 1, v4))
    URLComponents.scheme.setter(0x73736D7469, 0xE500000000000000);
  v36 = v33(v23, 1, v4);
  v37 = (uint64_t)v65;
  v38 = v66;
  if (!v36)
    URLComponents.host.setter(0, 0xE000000000000000);
LABEL_16:
  if (v33(v23, 1, v4))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, 1, 1, v12);
  }
  else
  {
    v39 = v64;
    v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 16))(v64, v23, v4);
    URLComponents.url.getter(v40);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v39, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v12) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(a2, v37, v12);
      URL._bridgeToObjectiveC()(v43);
      v45 = v44;
      v46 = sub_C263E0((uint64_t)_swiftEmptyArrayStorage);
      v47 = a2;
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v49 = swift_bridgeObjectRelease(v46).n128_u64[0];
      objc_msgSend(v63, "openSensitiveURL:withOptions:", v45, isa, v49);

      a2 = v47;
      v41 = 0;
      goto LABEL_20;
    }
  }
  sub_56024(v37, &qword_14FAC20);
  v41 = 1;
LABEL_20:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(a2, v41, 1, v12);
  return sub_56024((uint64_t)v23, &qword_14FE9D0);
}

uint64_t sub_C6DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE9D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t LSApplicationWorkspace.openiTunesStore(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSString v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSURL *v49;
  void *v50;
  void *v51;
  Class isa;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;

  v60 = a1;
  v1 = type metadata accessor for URLComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v4);
  v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - v7;
  v9 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v57 = (char *)&v53 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE9D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v53 - v19;
  v61 = v2;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v2 + 56);
  v22 = v21((char *)&v53 - v19, 1, 1, v1, v18);
  v23 = Album.catalogID.getter(v22);
  if (v24)
  {
    v25 = v24;
    v54 = v23;
    if (qword_14F9E30 != -1)
      swift_once(&qword_14F9E30, sub_C4F36C);
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
    v26 = v63;
    if (v63)
    {
      v27 = String._bridgeToObjectiveC()();
      v55 = v26;
      v28 = objc_msgSend(v26, "urlForBagKey:", v27);

      if (v28)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

        v29 = v62;
        v30 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
        v30(v8, v11, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v9) != 1)
        {
          v31 = v57;
          v30(v57, v8, v9);
          URLComponents.init(url:resolvingAgainstBaseURL:)(v31, 0);
          sub_C6DF9C((uint64_t)v16, (uint64_t)v20);
          v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
          v33 = v32(v20, 1, v1);
          if ((_DWORD)v33 || (v34 = (_QWORD *)URLComponents.queryItems.getter(v33)) == 0)
          {
            swift_bridgeObjectRelease();
            v34 = _swiftEmptyArrayStorage;
          }
          v38 = (uint64_t)v59;
          v37 = v60;
          v63 = v34;
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF40);
          v41 = type metadata accessor for URLQueryItem(0);
          v42 = swift_allocObject(v40, ((*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v41 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80) | 7);
          *(_OWORD *)(v42 + 16) = xmmword_105F890;
          URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v54, v25);
          swift_bridgeObjectRelease();
          URLQueryItem.init(name:value:)(7368801, 0xE300000000000000, 0x73656E757469, 0xE600000000000000);
          sub_C18904(v42);
          if (v32(v20, 1, v1))
          {

            v44 = swift_bridgeObjectRelease();
          }
          else
          {
            URLComponents.queryItems.setter(v63, v43);

          }
          v39 = v62;
          (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v57, v9, v44);
          v35 = v61;
          goto LABEL_21;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v8, 1, 1, v9);
      }

      swift_bridgeObjectRelease();
      v23 = sub_56024((uint64_t)v8, &qword_14FAC20);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  URLComponents.init()(v23);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v16, 0, 1, v1);
  sub_C6DF9C((uint64_t)v16, (uint64_t)v20);
  v35 = v61;
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  if (!v32(v20, 1, v1))
    URLComponents.scheme.setter(0x73736D7469, 0xE500000000000000);
  v36 = v32(v20, 1, v1);
  v38 = (uint64_t)v59;
  v37 = v60;
  v39 = v62;
  if (!v36)
    URLComponents.host.setter(0, 0xE000000000000000);
LABEL_21:
  if (v32(v20, 1, v1))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v38, 1, 1, v9);
  }
  else
  {
    v45 = v58;
    v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 16))(v58, v20, v1);
    URLComponents.url.getter(v46);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v1);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v9) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v37, v38, v9);
      URL._bridgeToObjectiveC()(v49);
      v51 = v50;
      sub_C263E0((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v56, "openSensitiveURL:withOptions:", v51, isa, swift_bridgeObjectRelease().n128_f64[0]);

      v47 = 0;
      goto LABEL_25;
    }
  }
  sub_56024(v38, &qword_14FAC20);
  v47 = 1;
LABEL_25:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v37, v47, 1, v9);
  return sub_56024((uint64_t)v20, &qword_14FE9D0);
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusic(tabIdentifier:)(MusicCore::TabIdentifier_optional tabIdentifier)
{
  void *v1;
  void *v2;
  int value;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  NSURL *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  Class isa;
  _QWORD v18[4];

  v2 = v1;
  value = tabIdentifier.value;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[2] = 0x2F2F3A636973756DLL;
  v18[3] = 0xE800000000000000;
  if (value != 6)
  {
    v18[0] = 0x6261743F2F626174;
    v18[1] = 0xE90000000000003DLL;
    __asm { BR              X11 }
  }
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  v12 = swift_bridgeObjectRelease(0xE800000000000000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v12) == 1)
  {
    sub_56024((uint64_t)v7, &qword_14FAC20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    URL._bridgeToObjectiveC()(v13);
    v15 = v14;
    v16 = sub_C263E0((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "openSensitiveURL:withOptions:", v15, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

id static MPModelPlaylistEntry.defaultMusicKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  Class isa;
  id v14;
  char v16[16];
  _QWORD v17[3];
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060E10;
  *(_QWORD *)(v1 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v16, "showAllTVShows");
  v16[15] = -18;
  v4 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v16, (uint64_t)&type metadata for String, v4, (uint64_t)v17);
  if (!v18)
  {
    sub_C261DC((uint64_t)v17);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v16, v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v5 = v16[0];

  if ((v5 & 1) != 0)
  {
    v6 = 3;
    goto LABEL_8;
  }
LABEL_7:
  v6 = 2;
LABEL_8:
  *(_QWORD *)(v1 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v6);
  v7 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v16, "showAllTVShows");
  v16[15] = -18;
  NSUserDefaults.subscript.getter((uint64_t)v16, (uint64_t)&type metadata for String, v4, (uint64_t)v17);
  if (!v18)
  {
    sub_C261DC((uint64_t)v17);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(v16, v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_13:

    goto LABEL_14;
  }
  v8 = v16[0];

  if ((v8 & 1) == 0)
  {
LABEL_14:
    v9 = 2;
    goto LABEL_15;
  }
  v9 = 3;
LABEL_15:
  v10 = (void *)objc_opt_self(MPModelPlaylistEntry);
  v11 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v9);
  *(_QWORD *)(v1 + 48) = v11;
  v17[0] = v1;
  specialized Array._endMutation()(v11);
  v12 = v17[0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9A0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v10, "kindWithKinds:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  return v14;
}

void *MPModelObject.isCloudLibraryRequired.getter()
{
  uint64_t v0;
  void *result;

  objc_opt_self(MPModelSong);
  result = (void *)swift_dynamicCastObjCClass(v0);
  if (result)
    return (void *)(objc_msgSend(result, "isLibraryAdded") ^ 1);
  objc_opt_self(MPModelAlbum);
  result = (void *)swift_dynamicCastObjCClass(v0);
  if (result)
    return (void *)(objc_msgSend(result, "isLibraryAdded") ^ 1);
  objc_opt_self(MPModelPlaylist);
  result = (void *)swift_dynamicCastObjCClass(v0);
  if (result)
    return (void *)(objc_msgSend(result, "isLibraryAdded") ^ 1);
  return result;
}

id static MPModelPlaylist.defaultMusicKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  Class isa;
  id v15;
  id v16;
  char v18[16];
  _QWORD v19[3];
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060E10;
  *(_QWORD *)(v1 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v18, "showAllTVShows");
  v18[15] = -18;
  v4 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v18, (uint64_t)&type metadata for String, v4, (uint64_t)v19);
  if (!v20)
  {
    sub_C261DC((uint64_t)v19);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v18, v19, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v5 = v18[0];

  if ((v5 & 1) != 0)
  {
    v6 = 3;
    goto LABEL_8;
  }
LABEL_7:
  v6 = 2;
LABEL_8:
  *(_QWORD *)(v1 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v6);
  v7 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v18, "showAllTVShows");
  v18[15] = -18;
  NSUserDefaults.subscript.getter((uint64_t)v18, (uint64_t)&type metadata for String, v4, (uint64_t)v19);
  if (!v20)
  {
    sub_C261DC((uint64_t)v19);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(v18, v19, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_13:

    goto LABEL_14;
  }
  v8 = v18[0];

  if ((v8 & 1) == 0)
  {
LABEL_14:
    v9 = 2;
    goto LABEL_15;
  }
  v9 = 3;
LABEL_15:
  v10 = (void *)objc_opt_self(MPModelPlaylist);
  v11 = (void *)objc_opt_self(MPModelPlaylistEntry);
  v12 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v9);
  *(_QWORD *)(v1 + 48) = v12;
  v19[0] = v1;
  specialized Array._endMutation()(v12);
  v13 = v19[0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9A0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v11, "kindWithKinds:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v16 = objc_msgSend(v10, "kindWithPlaylistEntryKind:options:", v15, 0);
  return v16;
}

id static MPModelTVEpisode.defaultMusicKind.getter()
{
  return sub_C6EE88(MPModelTVEpisode_ptr);
}

id static MPModelMovie.defaultMusicKind.getter()
{
  return sub_C6EE88(MPModelMovie_ptr);
}

id sub_C6EE88(_QWORD *a1)
{
  id v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  char v7[16];
  _BYTE v8[24];
  uint64_t v9;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  strcpy(v7, "showAllTVShows");
  v7[15] = -18;
  v3 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v7, (uint64_t)&type metadata for String, v3, (uint64_t)v8);
  if (!v9)
  {
    sub_C261DC((uint64_t)v8);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v7, v8, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v4 = v7[0];

  if ((v4 & 1) == 0)
  {
LABEL_7:
    v5 = 2;
    return objc_msgSend((id)objc_opt_self(*a1), "kindWithVariants:", v5);
  }
  v5 = 3;
  return objc_msgSend((id)objc_opt_self(*a1), "kindWithVariants:", v5);
}

id static MPModelArtist.defaultMusicKind.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self(MPModelArtist);
  v1 = (void *)objc_opt_self(MPModelAlbum);
  v2 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 3);
  v3 = objc_msgSend(v1, "kindWithSongKind:", v2);

  v4 = objc_msgSend(v0, "kindWithAlbumKind:", v3);
  return v4;
}

id static MPModelAlbum.defaultMusicKind.getter()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self(MPModelAlbum);
  v1 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 3);
  v2 = objc_msgSend(v0, "kindWithSongKind:", v1);

  return v2;
}

id static MPModelTVShow.defaultMusicKind.getter()
{
  id v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v10[16];
  _BYTE v11[24];
  uint64_t v12;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  strcpy(v10, "showAllTVShows");
  v10[15] = -18;
  v1 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v10, (uint64_t)&type metadata for String, v1, (uint64_t)v11);
  if (!v12)
  {
    sub_C261DC((uint64_t)v11);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v10, v11, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v2 = v10[0];

  if ((v2 & 1) == 0)
  {
LABEL_7:
    v3 = 2;
    goto LABEL_8;
  }
  v3 = 3;
LABEL_8:
  v4 = (void *)objc_opt_self(MPModelTVShow);
  v5 = (void *)objc_opt_self(MPModelTVSeason);
  v6 = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v3);
  v7 = objc_msgSend(v5, "kindWithEpisodeKind:", v6);

  v8 = objc_msgSend(v4, "kindWithSeasonKind:", v7);
  return v8;
}

id static MPModelTVSeason.defaultMusicKind.getter()
{
  id v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char v8[16];
  _BYTE v9[24];
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  strcpy(v8, "showAllTVShows");
  v8[15] = -18;
  v1 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v8, (uint64_t)&type metadata for String, v1, (uint64_t)v9);
  if (!v10)
  {
    sub_C261DC((uint64_t)v9);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v8, v9, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v2 = v8[0];

  if ((v2 & 1) == 0)
  {
LABEL_7:
    v3 = 2;
    goto LABEL_8;
  }
  v3 = 3;
LABEL_8:
  v4 = (void *)objc_opt_self(MPModelTVSeason);
  v5 = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v3);
  v6 = objc_msgSend(v4, "kindWithEpisodeKind:", v5);

  return v6;
}

id MPModelPlaylistEntry.innermostModelObject.getter()
{
  void *v0;
  char *v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = (char *)objc_msgSend(v0, "type");
  if (v1 == (_BYTE *)&dword_0 + 3)
  {
    v3 = objc_msgSend(v5, "movie");
    goto LABEL_7;
  }
  if (v1 == (_BYTE *)&dword_0 + 2)
  {
    v3 = objc_msgSend(v5, "tvEpisode");
LABEL_7:
    result = v3;
    v2 = v5;
    if (result)
      return result;
    return v2;
  }
  v2 = v5;
  if (v1 == (_BYTE *)&dword_0 + 1)
  {
    v3 = objc_msgSend(v5, "song");
    goto LABEL_7;
  }
  return v2;
}

id MPModelGenericObject.innermostModelObject.getter()
{
  void *v0;
  id result;
  id v2;
  void *v3;
  id v4;
  id v5;

  switch((unint64_t)objc_msgSend(v0, "type"))
  {
    case 1uLL:
      result = objc_msgSend(v5, "song");
      if (!result)
        goto LABEL_37;
      break;
    case 2uLL:
      result = objc_msgSend(v5, "album");
      if (!result)
        goto LABEL_37;
      break;
    case 3uLL:
      result = objc_msgSend(v5, "artist");
      if (!result)
        goto LABEL_37;
      break;
    case 4uLL:
      result = objc_msgSend(v5, "playlist");
      if (!result)
        goto LABEL_37;
      break;
    case 5uLL:
      v2 = objc_msgSend(v5, "playlistEntry");
      if (!v2)
        goto LABEL_37;
      v3 = v2;
      v4 = objc_msgSend(v2, "innermostModelObject");

      result = v4;
      break;
    case 6uLL:
      result = objc_msgSend(v5, "tvEpisode");
      if (!result)
        goto LABEL_37;
      break;
    case 7uLL:
      result = objc_msgSend(v5, "season");
      if (!result)
        goto LABEL_37;
      break;
    case 8uLL:
      result = objc_msgSend(v5, "show");
      if (!result)
        goto LABEL_37;
      break;
    case 9uLL:
      result = objc_msgSend(v5, "movie");
      if (!result)
        goto LABEL_37;
      break;
    case 0xAuLL:
      result = objc_msgSend(v5, "mediaClip");
      if (!result)
        goto LABEL_37;
      break;
    case 0xBuLL:
      result = objc_msgSend(v5, "podcast");
      if (!result)
        goto LABEL_37;
      break;
    case 0xCuLL:
      result = objc_msgSend(v5, "podcastEpisode");
      if (!result)
        goto LABEL_37;
      break;
    case 0xDuLL:
      result = objc_msgSend(v5, "radioStation");
      if (!result)
        goto LABEL_37;
      break;
    case 0xFuLL:
      result = objc_msgSend(v5, "genre");
      if (!result)
        goto LABEL_37;
      break;
    case 0x10uLL:
      result = objc_msgSend(v5, "curator");
      if (!result)
        goto LABEL_37;
      break;
    case 0x11uLL:
      result = objc_msgSend(v5, "socialPerson");
      if (!result)
        goto LABEL_37;
      break;
    case 0x13uLL:
      result = objc_msgSend(v5, "recordLabel");
      if (!result)
        goto LABEL_37;
      break;
    case 0x14uLL:
      result = objc_msgSend(v5, "creditsArtist");
      if (!result)
        goto LABEL_37;
      break;
    default:
LABEL_37:
      result = v5;
      break;
  }
  return result;
}

id MPModelStoreBrowseContentItem.innermostModelObject.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v5;

  v1 = objc_msgSend(v0, "innerObject");
  if (!v1)
    return v5;
  v2 = v1;
  v3 = objc_msgSend(v1, "innermostModelObject");

  return v3;
}

uint64_t MPModelSong.nowPlayingTitle(radioStation:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[16];

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v11);
  v14 = &v29[-v13];
  v15 = objc_msgSend(v2, "title", v12);
  if (v15)
  {
    v17 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v20 = v19;

    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = v18 & 0xFFFFFFFFFFFFLL;
    if (v21)
      return v18;
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  if (!a1)
    goto LABEL_12;
  v22 = objc_msgSend(a1, "name", v16);
  if (!v22)
    goto LABEL_12;
  v23 = v22;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v18 & 0xFFFFFFFFFFFFLL;
  if (!v26)
  {
    swift_bridgeObjectRelease(v25);
LABEL_12:
    String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v14, v7);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v27 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v27, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v14, v7);
  }
  return v18;
}

uint64_t MPModelSong.preferredBylineAttribution(with:radioStation:)(uint64_t a1, id a2)
{
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;

  if (a2 && (v4 = objc_msgSend(a2, "attributionLabel")) != 0)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  }
  else
  {
    v7 = v2;
    v8 = sub_C70190(a1, v7);

    if (*((_QWORD *)v8 + 2))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
      v10 = sub_C702D0();
      v6 = BidirectionalCollection<>.joined(separator:)(0x209480E220, 0xA500000000000000, v9, v10);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      swift_bridgeObjectRelease(v8);
      return 0;
    }
  }
  return v6;
}

void sub_C6FB80(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  id v17;
  unsigned int v18;
  id v19;
  uint64_t *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for String.LocalizationValue(0);
  v45 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = sub_C6FED0(v16);
  v18 = objc_msgSend(a2, "hasLoadedValuesForPropertySet:", v17);

  if (!v18)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  if (v16 == 2)
  {
    v19 = objc_msgSend(a2, "artist");
    v20 = a3;
    if (!v19)
      goto LABEL_21;
    v21 = v19;
    v22 = objc_msgSend(v19, "name");

    if (!v22)
      goto LABEL_21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v26 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0)
      v26 = v23 & 0xFFFFFFFFFFFFLL;
    if (v26)
    {
      *a3 = v23;
      a3[1] = v25;
      return;
    }
LABEL_20:
    swift_bridgeObjectRelease(v25);
LABEL_21:
    *v20 = 0;
    v20[1] = 0;
    return;
  }
  v20 = a3;
  if ((v16 & 1) == 0 && !objc_msgSend(a2, "shouldShowComposer"))
    goto LABEL_21;
  v27 = objc_msgSend(a2, "composer");
  if (!v27)
    goto LABEL_21;
  v28 = v27;
  v29 = objc_msgSend(v27, "name");

  if (!v29)
    goto LABEL_21;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v25 = v31;

  v32 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v32 = v30 & 0xFFFFFFFFFFFFLL;
  if (!v32)
    goto LABEL_20;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 1);
  v33._countAndFlagsBits = 2128194;
  v33._object = (void *)0xE300000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v33);
  v34._countAndFlagsBits = v30;
  v34._object = (void *)v25;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v34);
  swift_bridgeObjectRelease(v25);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
  String.LocalizationValue.init(stringInterpolation:)(v15);
  v36 = v45;
  v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v9, v12, v47);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v38 = qword_1581E30;
  v39 = (id)qword_1581E30;
  v40 = v46;
  static Locale.current.getter(v39);
  v41 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v38, v40, 0, 0, 256);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  *a3 = v41;
  a3[1] = v43;
}

id sub_C6FED0(char a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  id v8;
  unint64_t v9;
  id v10;
  NSArray v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  id v22;
  Class v23;
  id v24;
  _BYTE v26[56];
  _BYTE v27[56];

  if (a1 == 2)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
    inited = swift_initStackObject(v1, v26);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
    *(_QWORD *)(inited + 40) = v3;
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_105B360;
    *(_QWORD *)(v5 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
    *(_QWORD *)(v5 + 40) = v6;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    v8 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

    *(_QWORD *)(inited + 48) = v8;
    v9 = sub_C26530(inited);
    v10 = objc_allocWithZone((Class)MPPropertySet);
    v11.super.isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    if ((a1 & 1) != 0)
    {
      v13 = _swiftEmptyArrayStorage;
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
      v13 = (_QWORD *)swift_allocObject(v12, 48, 7);
      *((_OWORD *)v13 + 1) = xmmword_105B360;
      v13[4] = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongShouldShowComposer);
      v13[5] = v14;
    }
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
    v16 = swift_initStackObject(v15, v27);
    *(_OWORD *)(v16 + 16) = xmmword_105B360;
    *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongComposer);
    *(_QWORD *)(v16 + 40) = v17;
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
    v19 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v19 + 16) = xmmword_105B360;
    *(_QWORD *)(v19 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyComposerName);
    *(_QWORD *)(v19 + 40) = v20;
    v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    v22 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v21);

    *(_QWORD *)(v16 + 48) = v22;
    v9 = sub_C26530(v16);
    v10 = objc_allocWithZone((Class)MPPropertySet);
    v11.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
  }
  sub_C704A4();
  v23 = Dictionary._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v10, "initWithProperties:relationships:", v11.super.isa, v23, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return v24;
}

char *sub_C70190(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (char *)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v16 = *(_BYTE *)(a1 + v5 + 32);
    sub_C6FB80(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(a1);
      return v6;
    }
    v8 = v15;
    if (v15)
    {
      v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_BCC9AC(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v11 = *((_QWORD *)v6 + 2);
      v10 = *((_QWORD *)v6 + 3);
      if (v11 >= v10 >> 1)
        v6 = sub_BCC9AC((char *)(v10 > 1), v11 + 1, 1, v6);
      *((_QWORD *)v6 + 2) = v11 + 1;
      v7 = &v6[16 * v11];
      *((_QWORD *)v7 + 4) = v9;
      *((_QWORD *)v7 + 5) = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease(a1);
  return v6;
}

unint64_t sub_C702D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FEF80;
  if (!qword_14FEF80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FB868);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14FEF80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SongBylineAttributionComponent(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_C7036C + 4 * byte_109FE30[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SongBylineAttributionComponent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_C70424 + 4 * byte_109FE3A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_C70458 + 4 * byte_109FE35[v5]))();
}

uint64_t sub_C70458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C70460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC70468);
  return result;
}

uint64_t sub_C70474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC7047CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_C70480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C70488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SongBylineAttributionComponent()
{
  return &type metadata for SongBylineAttributionComponent;
}

unint64_t sub_C704A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FEFF0;
  if (!qword_14FEFF0)
  {
    v1 = objc_opt_self(MPPropertySet);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FEFF0);
  }
  return result;
}

uint64_t sub_C704E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  double v29;

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - v13;
  v15 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  if ((a2 & 0x8000000000000000) == 0 && a1 >= 1)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 3);
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    v29 = *(double *)&a1;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v29, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v20._countAndFlagsBits = 0x2F7469622DLL;
    v20._object = (void *)0xE500000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
    v29 = (double)a2 / 1000.0;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v29, 6712357, 0xE300000000000000, &type metadata for Double, &protocol witness table for Double);
    v21._countAndFlagsBits = 0x207A486B20;
    v21._object = (void *)0xE500000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
    v22._countAndFlagsBits = UInt32.formatName.getter(a3);
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
    String.LocalizationValue.init(stringInterpolation:)(v17);
    v24 = v28;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v28);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v25 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v18 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v8, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v24);
  }
  return v18;
}

uint64_t _sSo27MPNowPlayingInfoAudioFormatC9MusicCoreE12inputDetailsSSSgvg_0()
{
  void *v0;

  return sub_C704E4((uint64_t)objc_msgSend(v0, "bitDepth"), (uint64_t)objc_msgSend(v0, "sampleRate"), (int)objc_msgSend(v0, "codec"));
}

void *MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.catalog;
}

uint64_t MPModelObject.bestIdentifier(for:)(uint64_t a1, unsigned __int8 a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t ObjectType;

  v3 = v2;
  objc_opt_self(MPModelGenericObject);
  v6 = (void *)swift_dynamicCastObjCClass(v3);
  if (v6)
  {
    v7 = objc_msgSend(v6, "anyObject");
    goto LABEL_5;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v8 = (void *)swift_dynamicCastObjCClass(v3);
  if (v8)
  {
    v7 = objc_msgSend(v8, "innerObject");
LABEL_5:
    v9 = v7;
    if (v9)
      goto LABEL_7;
  }
  v9 = v3;
LABEL_7:
  if (a2 == 1)
  {
    v10 = objc_msgSend(v9, "identifiers");
    if (a1 == 2)
    {
      ObjectType = swift_getObjectType();
      v12 = sub_C27FD8(ObjectType, 2, 1u, v10);
    }
    else if (a1 == 1 || (v11 = swift_getObjectType(), v12 = sub_C27FD8(v11, 2, 1u, v10), !v13))
    {
      sub_C71F78(v9);
    }
    v16 = v12;

  }
  else
  {
    v14 = swift_getObjectType();
    v15 = objc_msgSend(v9, "identifiers");
    v16 = sub_C27FD8(v14, a1, a2, v15);

  }
  return v16;
}

void MPArtworkCatalog.requestImage(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v5 = swift_allocObject(&unk_13B21A8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v8[4] = sub_C6033C;
  v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_21B54C;
  v8[3] = &block_descriptor_298;
  v6 = _Block_copy(v8);
  v7 = v9;
  swift_retain(a2);
  objc_msgSend(v2, "requestImageWithCompletion:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

uint64_t static MPModelPlaylistVariants.allPlaylists.getter()
{
  return 215;
}

uint64_t MPArtworkCatalog.getImage()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_C70A4C, 0, 0);
}

uint64_t sub_C70A4C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_C70AE0;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_C70B8C;
  v4[3] = &block_descriptor_1_0;
  v4[4] = v3;
  objc_msgSend(v2, "requestImageWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_C70AE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_C70B50;
  else
    v2 = sub_C70B40;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_C70B40()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_C70B50(uint64_t a1)
{
  uint64_t v1;

  swift_willThrow(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_C70B8C(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_C70C18(void *a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;

  if (a1)
  {
    v9 = a1;
    a3(a1, 0);

  }
  else
  {
    v6 = sub_C77F70();
    v7 = swift_allocError(&_s12LoadingErrorON, v6, 0, 0);
    *v8 = a2;
    swift_errorRetain(a2);
    a3((void *)v7, 1);
    swift_errorRelease(v7);
  }
}

void *MPArtworkCatalog.image(from:size:)(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  dispatch_semaphore_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  __n128 v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_13B2210, 24, 7);
  *(_QWORD *)(v10 + 16) = 0;
  objc_msgSend(a1, "setDestinationScale:", 0.0);
  objc_msgSend(a1, "setFittingSize:", a2, a3);
  v11 = dispatch_semaphore_create(0);
  v12 = swift_allocObject(&unk_13B2238, 32, 7);
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = swift_allocObject(&unk_13B2260, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_C7695C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_C7812C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21B54C;
  aBlock[3] = &block_descriptor_15_10;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = v11;
  swift_retain();
  objc_msgSend(a1, "requestImageWithCompletion:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  v16 = swift_release();
  static DispatchTime.distantFuture.getter(v16);
  OS_dispatch_semaphore.wait(timeout:)(v9);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess(v10 + 16, aBlock, 0, 0);
  v17 = *(void **)(v10 + 16);
  v18 = v17;
  swift_release();
  return v17;
}

Swift::Int sub_C70EB8(void *a1, char a2, uint64_t a3)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[3];

  v4 = a1;
  if ((a2 & 1) != 0)
  {
    v9[0] = a1;
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    swift_willThrowTypedImpl(v9, v6, &protocol self-conformance witness table for Error);
    v4 = 0;
  }
  else
  {
    v5 = a1;
  }
  swift_beginAccess(a3 + 16, v9, 1, 0);
  v7 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = v4;

  return OS_dispatch_semaphore.signal()();
}

double MPArtworkCatalog.setDestination<A>(_:for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  double result;
  _QWORD v15[5];
  _QWORD *v16;

  v10 = _bridgeAnythingToObjectiveC<A>(_:)(a1, a5);
  v11 = (_QWORD *)swift_allocObject(&unk_13B22B0, 40, 7);
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v15[4] = sub_C7698C;
  v16 = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_C710E0;
  v15[3] = &block_descriptor_21_10;
  v12 = _Block_copy(v15);
  v13 = v16;
  swift_retain(a4);
  objc_msgSend(v5, "setDestination:forRepresentationKinds:configurationBlock:", v10, a2, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_C71030(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[32];

  v8 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_95094(v11, (uint64_t)v13);
  swift_dynamicCast(v10, v13, (char *)&type metadata for Any + 8, a5, 7);
  a3(v10, a2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, a5);
}

uint64_t sub_C710E0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *, id);
  id v7;
  _QWORD v9[4];

  v6 = *(void (**)(_QWORD *, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(v9, v7);
  swift_release(v5);

  return __swift_destroy_boxed_opaque_existential_1(v9);
}

uint64_t MPArtworkCatalog.originalSize.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[4];

  v1 = objc_msgSend(v0, "token");
  _bridgeAnyObjectToAny(_:)(v10, v1);
  swift_unknownObjectRelease(v1);
  v2 = sub_4E684(0, &qword_14FEF68, MPStoreArtworkRequestToken_ptr);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
  {
    v3 = v9;
    v4 = objc_msgSend(v9, "imageArtworkInfo");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "originalSize");
      v7 = v6;

      return v7;
    }

  }
  return 0;
}

uint64_t MPArtworkCatalog.expectedRatio.getter()
{
  double v0;
  double v1;
  char v2;
  uint64_t result;

  v0 = COERCE_DOUBLE(MPArtworkCatalog.originalSize.getter());
  if ((v2 & 1) != 0 || v1 <= 0.0)
    *(double *)&result = 0.0;
  else
    *(double *)&result = v0 / v1;
  return result;
}

id static MPArtworkCatalog.monogram(for:layoutDirection:)(uint64_t a1, uint64_t a2, char *a3, char a4)
{
  return sub_C76C70(a1, a2, a3, a4 & 1);
}

id static MPMediaLibrary.device.getter()
{
  uint64_t v0;
  id result;

  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

id MPMediaLibrary.canCreatePlaylists.getter()
{
  uint64_t v0;
  id result;
  void *v2;
  char v3;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    v2 = result;
    sub_4E684(0, (unint64_t *)&unk_14FEF70, MPMediaLibrary_ptr);
    v3 = static NSObject.== infix(_:_:)(v0, v2);

    return (id)(v3 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *MPMediaPickerConfiguration.musicTypeIdentifiers.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = NSBundle.exportedTypeDeclarations.getter();

  if (!v3)
    return (char *)_swiftEmptyArrayStorage;
  v4 = objc_msgSend(v1, "typeIdentifiers");
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (v6)
  {
    v8 = objc_msgSend(v1, "typeIdentifiers", v7);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

    swift_bridgeObjectRetain();
    v10 = sub_C76B20(v9, v3);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease_n(v3, 2);
    sub_C766BC((uint64_t)v10);
    v12 = v11;
    swift_bridgeObjectRelease(v10);
    return (char *)v12;
  }
  if (objc_msgSend(v1, "mediaTypes", swift_bridgeObjectRelease(v3).n128_f64[0]))
    return sub_C71688((__int16)objc_msgSend(v1, "mediaTypes"));
  else
    return (char *)_swiftEmptyArrayStorage;
}

void sub_C714B8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[32];
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v3 = a3;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v20 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = (char *)_swiftEmptyArrayStorage;
    v25 = (char *)&type metadata for Any + 8;
    do
    {
      v10 = *(_QWORD *)(a2 + 8 * v7 + 32);
      v11 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRetain();
      if (!v11
        || (v12 = sub_21BAD0(0xD000000000000010, 0x8000000001106770), (v13 & 1) == 0)
        || (sub_95094(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)v22),
            (swift_dynamicCast(&v23, v22, v25, &type metadata for String, 6) & 1) == 0))
      {
        v23 = 0;
        v24 = 0;
      }
      swift_bridgeObjectRelease(v10);
      v14 = v24;
      if (v24)
      {
        v15 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_BCC9AC(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v17 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        if (v17 >= v16 >> 1)
          v8 = sub_BCC9AC((char *)(v16 > 1), v17 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v17 + 1;
        v9 = &v8[16 * v17];
        *((_QWORD *)v9 + 4) = v15;
        *((_QWORD *)v9 + 5) = v14;
      }
      ++v7;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease(a2);
    v4 = v20;
    v3 = a3;
  }
  else
  {
    v8 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  sub_C76998((uint64_t)v8);
  v19 = v18;
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v4);
  *v3 = v19;
}

char *sub_C71688(__int16 a1)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;

  if ((a1 & 1) == 0)
  {
    v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 0x800) == 0)
      return v2;
    goto LABEL_7;
  }
  v2 = sub_BCC9AC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_BCC9AC((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v5 = &v2[16 * v4];
  *((_QWORD *)v5 + 4) = 0xD000000000000014;
  *((_QWORD *)v5 + 5) = 0x80000000010CDDA0;
  if ((a1 & 0x800) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_BCC9AC(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v7 = *((_QWORD *)v2 + 2);
    v6 = *((_QWORD *)v2 + 3);
    if (v7 >= v6 >> 1)
      v2 = sub_BCC9AC((char *)(v6 > 1), v7 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v7 + 1;
    v8 = &v2[16 * v7];
    *((_QWORD *)v8 + 4) = 0xD00000000000001BLL;
    *((_QWORD *)v8 + 5) = 0x8000000001106790;
  }
  return v2;
}

id MPMediaPickerConfiguration.supportsCatalogContent.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109FEC0);
  v3 = swift_getKeyPath(&unk_109FEE8);
  static Published.subscript.getter(&v12, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v13;
  v5 = v14;
  v6 = v15;
  v7 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v8);

  if ((v4 & 1) != 0)
    return objc_msgSend(v0, "showsCatalogContent");
  else
    return 0;
}

id MPMediaPickerConfiguration.supportsCloudLibrary.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_109FEC0);
  v3 = swift_getKeyPath(&unk_109FEE8);
  static Published.subscript.getter(&v12, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v13;
  v5 = v14;
  v6 = v15;
  v7 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v8);

  if ((v4 & 0x100) != 0)
    return objc_msgSend(v0, "showsCloudItems");
  else
    return 0;
}

void *MPIdentifierSet.Purpose.Options.local.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.local;
}

void *MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.all;
}

unint64_t MPIdentifierSet.publicLoggingDescription.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  Swift::String v33;

  v1 = MPIdentifierSet.bestLibraryIdentifier.getter();
  if (v2)
  {
    v3 = v2;
    String.append(_:)(*(Swift::String *)&v1);
    swift_bridgeObjectRelease(v3);
    v4._countAndFlagsBits = 59;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    v5 = sub_BCC9AC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v7 = *((_QWORD *)v5 + 2);
    v6 = *((_QWORD *)v5 + 3);
    if (v7 >= v6 >> 1)
      v5 = sub_BCC9AC((char *)(v6 > 1), v7 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v7 + 1;
    v8 = &v5[16 * v7];
    *((_QWORD *)v8 + 4) = 0x507972617262696CLL;
    *((_QWORD *)v8 + 5) = 0xEB000000003D4449;
  }
  else
  {
    v5 = (char *)_swiftEmptyArrayStorage;
  }
  v9 = objc_msgSend(v0, "universalStore");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "globalPlaylistID");
    swift_unknownObjectRelease(v10);
    if (v11)
    {
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v15._countAndFlagsBits = v12;
      v15._object = v14;
      String.append(_:)(v15);
      swift_bridgeObjectRelease(v14);
      v16._countAndFlagsBits = 59;
      v16._object = (void *)0xE100000000000000;
      String.append(_:)(v16);
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = sub_BCC9AC(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      v18 = *((_QWORD *)v5 + 2);
      v17 = *((_QWORD *)v5 + 3);
      if (v18 >= v17 >> 1)
        v5 = sub_BCC9AC((char *)(v17 > 1), v18 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v18 + 1;
      v19 = &v5[16 * v18];
      *((_QWORD *)v19 + 4) = 0xD000000000000011;
      *((_QWORD *)v19 + 5) = 0x8000000001106650;
    }
  }
  v20 = MPIdentifierSet.bestStoreIdentifier.getter();
  if (v21)
  {
    v22 = v21;
    String.append(_:)(*(Swift::String *)&v20);
    swift_bridgeObjectRelease(v22);
    v23._countAndFlagsBits = 59;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
      v5 = sub_BCC9AC(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v25 = *((_QWORD *)v5 + 2);
    v24 = *((_QWORD *)v5 + 3);
    if (v25 >= v24 >> 1)
      v5 = sub_BCC9AC((char *)(v24 > 1), v25 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v25 + 1;
    v26 = &v5[16 * v25];
    *((_QWORD *)v26 + 4) = 0x3D65726F7473;
    *((_QWORD *)v26 + 5) = 0xE600000000000000;
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  v28 = sub_C702D0();
  v29 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v27, v28);
  v31 = v30;
  swift_bridgeObjectRelease(v5);
  v32._countAndFlagsBits = v29;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v31);
  v33._countAndFlagsBits = 62;
  v33._object = (void *)0xE100000000000000;
  String.append(_:)(v33);
  return 0xD000000000000010;
}

uint64_t MPIdentifierSet.bestLibraryIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  Class isa;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, "library");
  if (!v1)
    return 0;
  v2 = v1;
  if (!objc_msgSend(v1, "persistentID")
    || (objc_msgSend(v2, "persistentID"),
        isa = Int64._bridgeToObjectiveC()().super.super.isa,
        v4 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
        isa,
        !v4))
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  swift_unknownObjectRelease(v2);
  return v5;
}

uint64_t MPIdentifierSet.bestStoreIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  Class isa;
  id v8;

  v1 = objc_msgSend(v0, "universalStore");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "subscriptionAdamID");
  v4 = objc_msgSend(v2, "purchasedAdamID");
  v5 = objc_msgSend(v2, "adamID");
  if (!v3 && !v4)
  {
    v6 = (uint64_t)v5;
    if (!v5)
    {
      swift_unknownObjectRelease(v2);
      return v6;
    }
  }
  isa = Int64._bridgeToObjectiveC()().super.super.isa;
  v8 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();

  if (!v8)
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

  swift_unknownObjectRelease(v2);
  return v6;
}

void static MPIdentifierSet.bestPlayabilityIdentifier<A>(for:options:identifiers:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 == 2)
  {
    sub_C72300((uint64_t)a1, a3);
  }
  else if (a2 == 1 || (sub_C72300((uint64_t)a1, a3), !v7))
  {
    sub_C72100(a1, (uint64_t)a3, a4);
  }
}

void sub_C71F78(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 2;
  v2 = objc_opt_self(MPModelObject);
  v3 = swift_allocObject(&unk_13B2B58, 32, 7);
  *(_QWORD *)(v3 + 16) = &v11;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = swift_allocObject(&unk_13B2B80, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_C77FD8;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_12BACC;
  v10 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_128_0;
  v5 = _Block_copy(aBlock);
  v6 = v10;
  v7 = a1;
  swift_retain(v4);
  objc_msgSend((id)v2, "performWithoutEnforcement:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 129, 235, 53, 1, v8);
  swift_release(v4);
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else if (v11 != 2 && (v11 & 1) != 0)
  {
    MPIdentifierSet.bestLibraryIdentifier.getter();
    swift_release(v3);
  }
  else
  {
    swift_release(v3);
  }
}

void sub_C72100(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  __n128 v10;
  _QWORD aBlock[6];
  char v12;

  v12 = 2;
  v5 = objc_opt_self(MPModelObject);
  v6 = (_QWORD *)swift_allocObject(&unk_13B2AE0, 40, 7);
  v6[2] = a3;
  v6[3] = &v12;
  v6[4] = a1;
  v7 = swift_allocObject(&unk_13B2B08, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_C77F54;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_12BACC;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_118_2;
  v8 = _Block_copy(aBlock);
  v9 = a1;
  swift_retain();
  objc_msgSend((id)v5, "performWithoutEnforcement:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 129, 235, 53, 1, v10);
  swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else if (v12 != 2 && (v12 & 1) != 0)
  {
    MPIdentifierSet.bestLibraryIdentifier.getter();
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_C72290(char *a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;

  ObjectType = swift_getObjectType();
  result = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
  if (result)
    v6 = result;
  else
    v6 = 0;
  if (!result)
    a2 = 0;
  if (a2)
  {
    v7 = swift_getObjectType();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    v8 = result & 1;
  }
  else
  {
    v8 = 2;
  }
  *a1 = v8;
  return result;
}

uint64_t sub_C72300(uint64_t a1, void *a2)
{
  uint64_t ObjectType;

  sub_4E684(0, &qword_14FE288, MPIdentifierSet_ptr);
  ObjectType = swift_getObjectType();
  return static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(ObjectType, 2, 1u, a2);
}

uint64_t static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, void *a4)
{
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  double v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Class isa;
  id v32;

  v5 = a2;
  if (a3 > 1u)
    __asm { BR              X9 }
  v7 = sub_4E684(0, &qword_14FDB38, MPModelPlaylist_ptr);
  if (!swift_dynamicCastMetatype(a1, v7))
  {
    v10 = sub_4E684(0, &qword_14FDB40, MPModelSocialPerson_ptr);
    if (swift_dynamicCastMetatype(a1, v10))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v11)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      v17 = objc_msgSend(a4, "universalStore");
      if (!v17)
        return MPIdentifierSet.bestStoreIdentifier.getter();
      v14 = v17;
      v15 = objc_msgSend(v17, "socialProfileID");
      goto LABEL_24;
    }
    v12 = sub_4E684(0, qword_14FDB48, MPModelRadioStation_ptr);
    if (!swift_dynamicCastMetatype(a1, v12))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v16)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0)
      return 0;
    v23 = objc_msgSend(a4, "radio");
    if (!v23)
      return 0;
    v24 = v23;
    v25 = objc_msgSend(v23, "stationStringID");
    if (v25)
    {
      v27 = v25;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v29 = v28;

      v30 = HIBYTE(v29) & 0xF;
      if ((v29 & 0x2000000000000000) == 0)
        v30 = v19 & 0xFFFFFFFFFFFFLL;
      if (v30)
      {
LABEL_40:
        swift_unknownObjectRelease(v24);
        return v19;
      }
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v29).n128_u64[0];
    }
    if (!objc_msgSend(v24, "stationID", v26)
      || (objc_msgSend(v24, "stationID"),
          isa = Int64._bridgeToObjectiveC()().super.super.isa,
          v32 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
          isa,
          !v32))
    {
      swift_unknownObjectRelease(v24);
      return 0;
    }
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);

    goto LABEL_40;
  }
  if ((v5 & 1) != 0)
  {
    v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v9)
      return v8;
  }
  if ((v5 & 2) == 0)
    return 0;
  v13 = objc_msgSend(a4, "universalStore");
  if (!v13)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v14 = v13;
  v15 = objc_msgSend(v13, "globalPlaylistID");
LABEL_24:
  v18 = v15;
  swift_unknownObjectRelease(v14);
  if (!v18)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    swift_bridgeObjectRelease(v21);
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v19;
}

void MPIdentifierSet.init(kind:deviceLibraryPID:)(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  _QWORD v10[5];
  uint64_t v11;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = swift_allocObject(&unk_13B2300, 24, 7);
  *(_QWORD *)(v5 + 16) = a2;
  v6 = swift_allocObject(&unk_13B2328, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_C76DF0;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_129E54;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_23E9F0;
  v10[3] = &block_descriptor_32_2;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_retain(v6);
  objc_msgSend(v4, "initWithModelKind:block:", a1, v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v6, "", 129, 335, 36, 1, v9);
  swift_release(v5);
  swift_release(v6);
  if ((a1 & 1) != 0)
    __break(1u);
}

void sub_C72910(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __n128 v11;
  char isEscapingClosureAtFileLocation;
  _QWORD v13[5];
  uint64_t v14;

  v4 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = objc_msgSend(v4, "uniqueIdentifier");

  if (v6)
  {
    v7 = swift_allocObject(&unk_13B2A68, 24, 7);
    *(_QWORD *)(v7 + 16) = a2;
    v8 = swift_allocObject(&unk_13B2A90, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_B38934;
    *(_QWORD *)(v8 + 24) = v7;
    v13[4] = sub_12BACC;
    v14 = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_9AA80C;
    v13[3] = &block_descriptor_108_3;
    v9 = _Block_copy(v13);
    v10 = v14;
    swift_retain(v8);
    objc_msgSend(a1, "setLibraryIdentifiersWithDatabaseID:block:", v6, v9, swift_release(v10).n128_f64[0]);

    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 129, 338, 78, 1, v11);
    swift_release(v7);
    swift_release(v8);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_6:
      __break(1u);
    }
  }
}

id LibraryAddable.hasLoadedLibraryAddedProperty.getter()
{
  void *v0;

  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyAlbumLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyMovieLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertySongLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVEpisodeLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVSeasonLibraryAdded) & 1) != 0)
  {
    return &dword_0 + 1;
  }
  else
  {
    return objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyArtistLibraryAdded);
  }
}

BOOL LibraryAddable.isUserLibraryAddable.getter()
{
  uint64_t v0;
  id v1;
  char *v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)MPLibraryAddStatusObserver), "init");
  objc_msgSend(v1, "configureWithModelObject:", v0);
  v2 = (char *)objc_msgSend(v1, "currentStatus");

  return (unint64_t)(v2 - 1) < 3;
}

id sub_C72BDC()
{
  void *v0;

  return objc_msgSend(v0, "isLibraryAdded");
}

BOOL PlaylistAddable.isPlaylistAddEligible.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  objc_opt_self(MPModelSong);
  v5 = (void *)swift_dynamicCastObjCClass(v2);
  return (!v5 || (objc_msgSend(v5, "isArtistUploadedContent") & 1) == 0)
      && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 16))(a1) & 1) != 0;
}

Swift::String_optional __swiftcall MPModelObject.genericModelRelationshipKey()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v0))
  {
    v1 = &MPModelRelationshipGenericAlbum;
  }
  else
  {
    objc_opt_self(MPModelArtist);
    if (swift_dynamicCastObjCClass(v0))
    {
      v1 = &MPModelRelationshipGenericArtist;
    }
    else
    {
      objc_opt_self(MPModelComposer);
      if (swift_dynamicCastObjCClass(v0))
      {
        v1 = &MPModelRelationshipGenericComposer;
      }
      else
      {
        objc_opt_self(MPModelCurator);
        if (swift_dynamicCastObjCClass(v0))
        {
          v1 = &MPModelRelationshipGenericCurator;
        }
        else
        {
          objc_opt_self(MPModelGenre);
          if (swift_dynamicCastObjCClass(v0))
          {
            v1 = &MPModelRelationshipGenericGenre;
          }
          else
          {
            objc_opt_self(MPModelMovie);
            if (swift_dynamicCastObjCClass(v0))
            {
              v1 = &MPModelRelationshipGenericMovie;
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              if (swift_dynamicCastObjCClass(v0))
              {
                v1 = &MPModelRelationshipGenericPlaylist;
              }
              else
              {
                objc_opt_self(MPModelRadioStation);
                if (swift_dynamicCastObjCClass(v0))
                {
                  v1 = &MPModelRelationshipGenericRadioStation;
                }
                else
                {
                  objc_opt_self(MPModelSong);
                  if (swift_dynamicCastObjCClass(v0))
                  {
                    v1 = &MPModelRelationshipGenericSong;
                  }
                  else
                  {
                    objc_opt_self(MPModelTVEpisode);
                    if (swift_dynamicCastObjCClass(v0))
                    {
                      v1 = &MPModelRelationshipGenericTVEpisode;
                    }
                    else
                    {
                      objc_opt_self(MPModelTVSeason);
                      if (swift_dynamicCastObjCClass(v0))
                      {
                        v1 = &MPModelRelationshipGenericTVSeason;
                      }
                      else
                      {
                        objc_opt_self(MPModelTVShow);
                        v2 = swift_dynamicCastObjCClass(v0);
                        if (!v2)
                        {
                          v3 = 0;
                          goto LABEL_27;
                        }
                        v1 = &MPModelRelationshipGenericTVShow;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
LABEL_27:
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

uint64_t MPModelObject.MediaKitPlayableKind.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C72EA8 + 4 * asc_109FE70[a1]))(0x73676E6F73, 0xE500000000000000);
}

uint64_t sub_C72EA8()
{
  return 0x6F736970652D7674;
}

uint64_t sub_C72EC8()
{
  return 0x73776F68732D7674;
}

uint64_t sub_C72EE0()
{
  return 0x646564616F6C7075;
}

uint64_t sub_C72F14()
{
  return 0x736E6F6974617473;
}

uint64_t sub_C72F2C()
{
  return 0x69762D636973756DLL;
}

uint64_t sub_C72F4C()
{
  return 0x6F6D2D636973756DLL;
}

uint64_t sub_C72F6C()
{
  return 0x7473696C79616C70;
}

uint64_t sub_C72F88()
{
  return 0x736D75626C61;
}

uint64_t sub_C72F9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = MPModelObject.MediaKitPlayableKind.rawValue.getter(*a1);
  v5 = v4;
  v6 = MPModelObject.MediaKitPlayableKind.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_C73024()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = MPModelObject.MediaKitPlayableKind.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_C73084(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = MPModelObject.MediaKitPlayableKind.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_C730C4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = MPModelObject.MediaKitPlayableKind.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_C73120@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _sSo13MPModelObjectC9MusicCoreE20MediaKitPlayableKindO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C7314C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MPModelObject.MediaKitPlayableKind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MPModelObject.mediaKitPlayableKind.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;
  unsigned int v5;

  objc_opt_self(MPModelSong);
  v1 = swift_dynamicCastObjCClass(v0);
  if (v1)
  {
    v2 = (void *)v1;
    v3 = v0;
    v4 = objc_msgSend(v2, "isArtistUploadedContent");
    v5 = objc_msgSend(v2, "hasVideo");

    if (v4)
    {
      if (v5)
        return 4;
      else
        return 3;
    }
    else if (v5)
    {
      return 6;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(v0))
    {
      return 1;
    }
    else
    {
      objc_opt_self(MPModelTVShow);
      if (swift_dynamicCastObjCClass(v0))
      {
        return 2;
      }
      else
      {
        objc_opt_self(MPModelRadioStation);
        if (swift_dynamicCastObjCClass(v0))
        {
          return 5;
        }
        else
        {
          objc_opt_self(MPModelMovie);
          if (swift_dynamicCastObjCClass(v0))
          {
            return 7;
          }
          else
          {
            objc_opt_self(MPModelPlaylist);
            if (swift_dynamicCastObjCClass(v0))
            {
              return 8;
            }
            else
            {
              objc_opt_self(MPModelAlbum);
              if (swift_dynamicCastObjCClass(v0))
                return 9;
              else
                return 10;
            }
          }
        }
      }
    }
  }
}

uint64_t MPModelObject.FavoriteStatus.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C7331C + 4 * byte_109FE7A[a1]))(0x657469726F766166, 0xE900000000000064);
}

uint64_t sub_C7331C()
{
  return 0x6C61727475656ELL;
}

uint64_t sub_C73334()
{
  return 0x64656B696C736964;
}

uint64_t sub_C7334C()
{
  return 0x726F707075736E75;
}

void sub_C7336C(char *a1)
{
  sub_BB7650(*a1);
}

void sub_C73378()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_C733C8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C61727475656ELL, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_C73440()
{
  __asm { BR              X10 }
}

uint64_t sub_C73480(uint64_t a1)
{
  String.hash(into:)(a1, 0x6C61727475656ELL, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_C734E4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_C73530()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C61727475656ELL, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_C735A8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _sSo13MPModelObjectC9MusicCoreE14FavoriteStatusO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C735D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_C73608 + 4 * byte_109FE8A[*v0]))();
}

void sub_C73608(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61727475656ELL;
  a1[1] = 0xE700000000000000;
}

void sub_C73624(_QWORD *a1@<X8>)
{
  *a1 = 0x64656B696C736964;
  a1[1] = 0xE800000000000000;
}

void sub_C73640(_QWORD *a1@<X8>)
{
  *a1 = 0x726F707075736E75;
  a1[1] = 0xEB00000000646574;
}

uint64_t MPModelObject.favoriteStatus.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t result;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  unsigned __int8 v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  objc_opt_self(MPModelSong);
  v2 = swift_dynamicCastObjCClass(v0);
  if (v2
    || (objc_opt_self(MPModelAlbum), (v2 = swift_dynamicCastObjCClass(v0)) != 0)
    || (objc_opt_self(MPModelPlaylist), (v2 = swift_dynamicCastObjCClass(v0)) != 0))
  {
    v3 = (void *)v2;
    v4 = v1;
LABEL_5:
    v5 = objc_msgSend(v3, "isFavorite");
    v6 = objc_msgSend(v3, "isDisliked");
    v7 = v6;
    if (v5)
    {
      if ((v6 & 1) == 0)
      {

        return 0;
      }
LABEL_28:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000004DLL, 0x80000000011066A0, "MusicCore/MediaPlayer+Music.swift", 33, 2, 513, 0);
      __break(1u);
      return result;
    }

    v9 = v7 == 0;
    goto LABEL_9;
  }
  objc_opt_self(MPModelArtist);
  v10 = swift_dynamicCastObjCClass(v0);
  if (v10)
  {
    v3 = (void *)v10;
    v11 = qword_14F9D68;
    v4 = v1;
    if (v11 != -1)
      swift_once(&qword_14F9D68, sub_C3FD38);
    v12 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_109FEC0);
    v14 = swift_getKeyPath(&unk_109FEE8);
    static Published.subscript.getter(&v40, v12, KeyPath, v14);
    swift_release(KeyPath);
    swift_release(v14);
    v15 = v41;
    v16 = v42;
    v17 = v43;
    v18 = v44;
    v19 = v45;
    v20 = v46;
    v21 = v47;
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);

    if ((v15 & 1) != 0)
      goto LABEL_5;
    goto LABEL_25;
  }
  objc_opt_self(MPModelCreditsArtist);
  v22 = swift_dynamicCastObjCClass(v0);
  if (!v22)
    return 3;
  v23 = (void *)v22;
  v24 = qword_14F9D68;
  v4 = v1;
  if (v24 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v25 = static ApplicationCapabilities.Controller.shared;
  v26 = swift_getKeyPath(&unk_109FEC0);
  v27 = swift_getKeyPath(&unk_109FEE8);
  static Published.subscript.getter(&v40, v25, v26, v27);
  swift_release(v26);
  swift_release(v27);
  v28 = v41;
  v29 = v42;
  v30 = v43;
  v31 = v44;
  v32 = v45;
  v33 = v46;
  v34 = v47;
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v32);

  if ((v28 & 1) == 0 || (v35 = objc_msgSend(v23, "artist")) == 0)
  {
LABEL_25:

    return 3;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "isFavorite");
  v38 = objc_msgSend(v36, "isDisliked");
  v39 = v38;
  if ((v37 & 1) != 0)
  {
    if ((v38 & 1) == 0)
    {

      return 0;
    }
    goto LABEL_28;
  }

  v9 = v39 == 0;
LABEL_9:
  if (v9)
    return 1;
  else
    return 2;
}

void *MPModelAlbum.orphanMusicVideo.getter()
{
  void *v0;
  id v1;
  void *v2;

  if ((uint64_t)objc_msgSend(v0, "trackCount") > 1)
    return 0;
  v1 = objc_msgSend(v0, "representativeSong");
  v2 = v1;
  if (v1 && (objc_msgSend(v1, "hasVideo") & 1) == 0)
  {

    return 0;
  }
  return v2;
}

uint64_t static MPModelPlaylistVariants.playlistsAndFolders.getter()
{
  return 223;
}

uint64_t Array<A>.union()(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  _QWORD v7[5];
  id v8[2];
  uint64_t v9;

  v8[1] = a1;
  v8[0] = objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
  v7[2] = a2;
  v3 = type metadata accessor for Array(0);
  v4 = sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  Sequence.reduce<A>(_:_:)(&v9, v8, sub_C76E98, v7, v3, v4, WitnessTable);

  return v9;
}

id SnapshotIdentifier.Lazy.identifiers.getter(uint64_t a1)
{
  return sub_C73B60(a1, (SEL *)&selRef_identifiersForSectionAtIndex_, (SEL *)&selRef_identifiersForItemAtIndexPath_);
}

id SnapshotIdentifier.Lazy.object.getter(uint64_t a1)
{
  return sub_C73B60(a1, (SEL *)&selRef_sectionAtIndex_, (SEL *)&selRef_itemAtIndexPath_);
}

id sub_C73B60(uint64_t a1, SEL *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  Class isa;
  id v19;
  void *v21;
  id v22;
  uint64_t v23;

  v6 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t, double))(v16 + 16))(v15, v6, a1, v13);
  if (swift_getEnumCaseMultiPayload(v15, a1) == 1)
  {
    v17 = *(void **)((char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48));
    (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v11, v15, v8);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(v17, *a3, isa);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v19;
  }
  else
  {
    v21 = (void *)v15[1];
    v22 = objc_msgSend(v21, *a2, *v15);

    return v22;
  }
}

id SnapshotIdentifier.identifiers.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v19;
  uint64_t v20;

  v5 = v4;
  v7 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a1 + 16), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (id *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, double))(v15 + 16))(v14, v5, a1, v12);
  if (swift_getEnumCaseMultiPayload(v14, a1) == 1)
  {
    v16 = *v14;
    v17 = objc_msgSend(*v14, "identifiers");

    return v17;
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v10, v14, v7);
    v19 = SnapshotIdentifier.Lazy.identifiers.getter(v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v19;
  }
}

id SnapshotIdentifier.object.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v5 = v4;
  v7 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a1 + 16), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v14, v5, a1, v12);
  if (swift_getEnumCaseMultiPayload(v14, a1) == 1)
    return *(id *)v14;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
  v16 = SnapshotIdentifier.Lazy.object.getter(v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16;
}

unint64_t SnapshotIdentifier.debugDescription.getter(uint64_t a1)
{
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t WitnessTable;
  id v11;
  Swift::String v12;
  unint64_t v13;
  uint64_t v14;

  v13 = SnapshotIdentifier.description.getter(a1);
  v14 = v2;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0x7463656A626F202CLL;
  v3._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v3);
  v7 = SnapshotIdentifier.object.getter(a1, v4, v5, v6);
  v11 = v7;
  v8 = *(_QWORD *)(a1 + 16);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v8);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v11, v8, WitnessTable);

  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t SnapshotIdentifier.description.getter(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;

  v2._countAndFlagsBits = _typeName(_:qualified:)(*(_QWORD *)(a1 + 16), 0);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 2112062;
  v3._object = (void *)0xE300000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 60;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v8 = SnapshotIdentifier.identifiers.getter(a1, v5, v6, v7);
  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);

  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x696669746E656469;
  v14._object = (void *)0xEB000000003D7265;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void SnapshotIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = SnapshotIdentifier.identifiers.getter(a2, a2, a3, a4);
  NSObject.hash(into:)(a1);

}

uint64_t static SnapshotIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;

  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  v6 = type metadata accessor for SnapshotIdentifier(0, a3, v4, v5);
  v10 = SnapshotIdentifier.identifiers.getter(v6, v7, v8, v9);
  v14 = SnapshotIdentifier.identifiers.getter(v6, v11, v12, v13);
  v15 = static NSObject.== infix(_:_:)(v10, v14);

  return v15 & 1;
}

Swift::Int SnapshotIdentifier.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7);
  v5 = SnapshotIdentifier.identifiers.getter(a1, v2, v3, v4);
  NSObject.hash(into:)(v7);

  return Hasher._finalize()();
}

Swift::Int sub_C74200(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  SnapshotIdentifier.hash(into:)((uint64_t)v6, a2, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_C74248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static SnapshotIdentifier.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

void static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  _QWORD aBlock[5];
  uint64_t v19;
  char v20;

  v20 = 0;
  v12 = (_QWORD *)swift_allocObject(&unk_13B2378, 72, 7);
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  v12[8] = &v20;
  v13 = swift_allocObject(&unk_13B23A0, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_C76F18;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_129E54;
  v19 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_C744D0;
  aBlock[3] = &block_descriptor_41_4;
  v14 = _Block_copy(aBlock);
  v15 = v19;
  v16 = a1;
  swift_retain(v13);
  objc_msgSend(v16, "enumerateItemIdentifiersUsingBlock:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v13, "", 129, 656, 45, 1, v17);
  swift_release(v12);
  swift_release(v13);
  if ((v16 & 1) != 0)
    __break(1u);
}

uint64_t sub_C743AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, char *, _BYTE *), uint64_t a6, _BYTE *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  _BYTE *v25;

  v25 = (_BYTE *)a3;
  v13 = type metadata accessor for SnapshotIdentifier(0, a9, a3, (uint64_t)a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v24 - v15;
  v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
  v18 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, a1, v18);
  *(_QWORD *)&v16[v17] = a4;
  v21 = type metadata accessor for SnapshotIdentifier.Lazy(0, a9, v19, v20);
  swift_storeEnumTagMultiPayload(v16, v21, 1);
  swift_storeEnumTagMultiPayload(v16, v13, 0);
  v22 = a4;
  a5(a1, v16, a7);
  *v25 = *a7;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_C744D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, id, uint64_t);
  id v13;
  uint64_t v15;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, id, uint64_t))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v13 = a3;
  v12(v11, v13, a4);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:inSection:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD aBlock[5];
  uint64_t v21;
  char v22;

  v22 = 0;
  v14 = (_QWORD *)swift_allocObject(&unk_13B23F0, 80, 7);
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a7;
  v14[5] = a2;
  v14[6] = a1;
  v14[7] = a3;
  v14[8] = a4;
  v14[9] = &v22;
  v15 = swift_allocObject(&unk_13B2418, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_C76F7C;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_129E54;
  v21 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_286B88;
  aBlock[3] = &block_descriptor_50_11;
  v16 = _Block_copy(aBlock);
  v17 = v21;
  v18 = a1;
  swift_retain(v15);
  objc_msgSend(v18, "enumerateItemIdentifiersInSectionAtIndex:usingBlock:", a2, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v15, "", 129, 668, 67, 1, v19);
  swift_release(v14);
  swift_release(v15);
  if ((a2 & 1) != 0)
    __break(1u);
}

uint64_t sub_C746F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, char *, _BYTE *), uint64_t a7, _BYTE *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  _BYTE *v26;

  v25 = a7;
  v26 = (_BYTE *)a3;
  v15 = type metadata accessor for SnapshotIdentifier(0, a10, a3, a4);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v25 - v17;
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
  IndexPath.init(item:section:)(a1, a4);
  *(_QWORD *)&v18[v19] = a5;
  v22 = type metadata accessor for SnapshotIdentifier.Lazy(0, a10, v20, v21);
  swift_storeEnumTagMultiPayload(v18, v22, 1);
  swift_storeEnumTagMultiPayload(v18, v15, 0);
  v23 = a5;
  a6(a1, v18, a8);
  *v26 = *a8;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD v12[7];
  uint64_t v13;

  v10 = type metadata accessor for SnapshotIdentifier(0, a4, a3, a4);
  v13 = static Array._allocateUninitialized(_:)(0, v10);
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = &v13;
  static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:inSection:using:)(a1, a2, (uint64_t)sub_C76FC0, (uint64_t)v12, a3, a4, a5);
  return v13;
}

uint64_t sub_C748A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = type metadata accessor for SnapshotIdentifier(0, a6, a3, a4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v14 - v9, a2, v7, v8);
  v12 = type metadata accessor for Array(0);
  return Array.append(_:)(v10, v12);
}

void static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierSections(from:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;
  __n128 v16;
  _QWORD aBlock[6];
  char v18;

  v18 = 0;
  v12 = (_QWORD *)swift_allocObject(&unk_13B2468, 72, 7);
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  v12[8] = &v18;
  v13 = swift_allocObject(&unk_13B2490, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_C76FCC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_12BACC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_286B88;
  aBlock[3] = &block_descriptor_60_8;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_retain();
  objc_msgSend(v15, "enumerateSectionIdentifiersUsingBlock:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v13, "", 129, 691, 48, 1, v16);
  swift_release();
  swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
}

uint64_t sub_C74A8C(uint64_t a1, uint64_t a2, _BYTE *a3, void *a4, void (*a5)(uint64_t, _QWORD *, _BYTE *), uint64_t a6, _BYTE *a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  v14 = type metadata accessor for SnapshotIdentifier(0, a8, (uint64_t)a3, (uint64_t)a4);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v23 - v16);
  *v17 = a1;
  v17[1] = a4;
  v20 = type metadata accessor for SnapshotIdentifier.Lazy(0, a8, v18, v19);
  swift_storeEnumTagMultiPayload(v17, v20, 0);
  swift_storeEnumTagMultiPayload(v17, v14, 0);
  v21 = a4;
  a5(a1, v17, a7);
  *a3 = *a7;
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
}

void static NSDiffableDataSourceSnapshot<>.snapshot(from:)(void *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  __n128 v22;
  __n128 v23;
  void **aBlock;
  uint64_t v25;
  double (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;

  v10 = type metadata accessor for SnapshotIdentifier(255, a3, a3, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v10);
  aBlock = a2;
  v25 = v10;
  v26 = (double (*)(uint64_t, uint64_t, uint64_t, uint64_t))a4;
  v27 = (void *)WitnessTable;
  v12 = type metadata accessor for NSDiffableDataSourceSnapshot(0, &aBlock);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&aBlock - v14;
  NSDiffableDataSourceSnapshot.init()(a2, v10, a4, WitnessTable);
  v16 = objc_opt_self(MPSectionedCollection);
  v17 = swift_dynamicCastObjCClassUnconditional(a1, v16, 0, 0, 0);
  v18 = (_QWORD *)swift_allocObject(&unk_13B24E0, 56, 7);
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = v15;
  v18[6] = v17;
  v19 = (_QWORD *)swift_allocObject(&unk_13B2508, 56, 7);
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = sub_C77030;
  v19[6] = v18;
  v28 = sub_686F2C;
  v29 = v19;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_C74EC4;
  v27 = &block_descriptor_69_6;
  v20 = _Block_copy(&aBlock);
  v21 = a1;
  swift_retain();
  objc_msgSend(v21, "enumerateSectionsUsingBlock:", v20, swift_release().n128_f64[0]);
  _Block_release(v20);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation(v19, "", 129, 708, 38, 1, v22);
  v23 = swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v13 + 32))(a5, v15, v12, v23);
    swift_release();
  }
}

double sub_C74D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  _QWORD v25[4];

  v14 = sub_CADE3C(a6, a6);
  v15 = swift_allocObject(v14, ((*(unsigned int *)(v14 + 48) + 7) & 0x1FFFFFFF8) + 8, *(unsigned __int16 *)(v14 + 52) | 7);
  v16 = static Array._adoptStorage(_:count:)(v15, 1);
  *v17 = a1;
  v18 = sub_9777F0(v16);
  v21 = type metadata accessor for SnapshotIdentifier(255, a7, v19, v20);
  swift_unknownObjectRetain(a1);
  v25[0] = a6;
  v25[1] = v21;
  v25[2] = a8;
  v25[3] = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v21);
  v22 = type metadata accessor for NSDiffableDataSourceSnapshot(0, v25);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v18);
  swift_bridgeObjectRelease();
  v23 = static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(a5, a2, a6, a7, a8);
  v25[0] = a1;
  swift_unknownObjectRetain(a1);
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v23, v25, v22);
  swift_unknownObjectRelease(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_C74EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  double result;

  sub_4E684(0, &qword_14FE290, MPModelObject_ptr);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v9 = swift_unknownObjectRetain(a2);
  v8(v9, a3, a4);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

void static NSDiffableDataSourceSnapshot<>.snapshot(from:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  __n128 v22;
  void **aBlock;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  uint64_t (*v27)();
  uint64_t v28;

  v8 = type metadata accessor for SnapshotIdentifier(255, a2, a3, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v8);
  aBlock = (void **)&type metadata for String;
  v24 = v8;
  v25 = (void (*)(uint64_t, void *))&protocol witness table for String;
  v26 = (void *)WitnessTable;
  v10 = type metadata accessor for NSDiffableDataSourceSnapshot(0, &aBlock);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock - v12;
  NSDiffableDataSourceSnapshot.init()(&type metadata for String, v8, &protocol witness table for String, WitnessTable);
  v14 = objc_opt_self(MPSectionedCollection);
  v15 = swift_dynamicCastObjCClassUnconditional(a1, v14, 0, 0, 0);
  v16 = (_QWORD *)swift_allocObject(&unk_13B2558, 40, 7);
  v16[2] = a2;
  v16[3] = v13;
  v16[4] = v15;
  v17 = swift_allocObject(&unk_13B2580, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_C77050;
  *(_QWORD *)(v17 + 24) = v16;
  v27 = sub_12BACC;
  v28 = v17;
  aBlock = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_16E2C0;
  v26 = &block_descriptor_78_2;
  v18 = _Block_copy(&aBlock);
  v19 = v28;
  v20 = a1;
  swift_retain(v17);
  objc_msgSend(v20, "enumerateSectionsUsingBlock:", v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation(v17, "", 129, 725, 38, 1, v21);
  v22 = swift_release(v17);
  if ((v20 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v11 + 32))(a5, v13, v10, v22);
    swift_release(v16);
  }
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v20[6];

  v9 = type metadata accessor for SnapshotIdentifier(0, a2, a3, a4);
  v12 = type metadata accessor for SnapshotIdentifier(0, a3, v10, v11);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v9);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v12);
  NSDiffableDataSourceSnapshot.init()(v9, v12, WitnessTable, v14);
  v15 = objc_opt_self(MPSectionedCollection);
  v16 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v15, 0, 0, 0);
  v17 = objc_opt_self(MPSectionedCollection);
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a5;
  v20[5] = swift_dynamicCastObjCClassUnconditional(a1, v17, 0, 0, 0);
  v18 = a1;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for NSObject, a3);
  static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierSections(from:using:)(v16, (uint64_t)sub_C7706C, (uint64_t)v20, a2, a3, v19);

}

double sub_C7513C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  Swift::OpaquePointer v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  uint64_t WitnessTable;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v11._rawValue = (void *)swift_allocObject(v10, 48, 7);
  *((_OWORD *)v11._rawValue + 1) = xmmword_105B360;
  *((_QWORD *)v11._rawValue + 4) = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  *((_QWORD *)v11._rawValue + 5) = v12;
  v21 = &type metadata for String;
  v22 = type metadata accessor for SnapshotIdentifier(255, a6, v13, v14);
  v23 = &protocol witness table for String;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v22);
  v15 = type metadata accessor for NSDiffableDataSourceSnapshot(0, &v21);
  NSDiffableDataSourceSnapshot.appendSections(_:)(v11);
  swift_bridgeObjectRelease(v11._rawValue);
  v16 = static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(a5, a2, (uint64_t)&type metadata for String, a6, (uint64_t)&protocol witness table for String);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v19 = v18;
  v21 = (_QWORD *)v17;
  v22 = v18;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v16, &v21, v15);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

uint64_t sub_C75398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v31 = a2;
  v32 = a6;
  v33 = a1;
  v34 = a5;
  v9 = type metadata accessor for SnapshotIdentifier(255, a6, a3, a4);
  v10 = type metadata accessor for Optional(0, v9);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for _ContiguousArrayStorage(0, v9);
  v14 = *(_QWORD *)(v9 - 8);
  v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72), *(unsigned __int8 *)(v14 + 80) | 7);
  v16 = static Array._adoptStorage(_:count:)(v15, 1);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v17(v18, a2, v9);
  v19 = sub_9777F0(v16);
  v22 = type metadata accessor for SnapshotIdentifier(255, a7, v20, v21);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v9);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v22);
  v37[0] = v9;
  v37[1] = v22;
  v37[2] = WitnessTable;
  v37[3] = v24;
  v25 = type metadata accessor for NSDiffableDataSourceSnapshot(0, v37);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v19);
  swift_bridgeObjectRelease();
  v26 = v32;
  v27 = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v32);
  v28 = static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(v34, v33, v26, a7, v27);
  v17((uint64_t)v12, v31, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v9);
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v28, v12, v25);
  v29 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v35 + 8))(v12, v36, v29);
}

uint64_t MPModelPlaylist.supportsSing.getter()
{
  void *v0;

  if ((objc_msgSend(v0, "traits") & 0x100) != 0)
    return MSVDeviceSupportsVocalAttenuation();
  else
    return 0;
}

id MPModelPlaylist.coverArtworkCatalog.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1060460;
  *(_QWORD *)(v2 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCoverArtworkRecipe);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistUserEditableComponents);
  *(_QWORD *)(v2 + 72) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  v7 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  LODWORD(isa) = objc_msgSend(v0, "hasLoadedValuesForPropertySet:", v7);
  if (!(_DWORD)isa)
    return 0;
  v8 = objc_msgSend(v0, "name");
  if (!v8)
    return 0;
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;

  if ((objc_msgSend(v0, "userEditableComponents") & 2) == 0)
  {
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  v13 = objc_msgSend(v0, "coverArtworkRecipe");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = _s9MusicCore14PlaylistCoversO12ArtworkTokenC7rawJSON13playlistTitleAESgSS_SStcfC_0(v14, v16, v10, v12);
  if (!v17)
    return 0;
  v18 = v17;
  v19 = objc_msgSend(v0, "artworkCatalog");
  if (v19)
  {
    v20 = v19;

  }
  else
  {
    if (qword_14FA000 != -1)
      swift_once(&qword_14FA000, sub_D24C00);
    v22 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v22, (uint64_t)static Logger.playlistCovers);
    v23 = v0;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v34 = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = objc_msgSend(v23, "coverArtworkRecipe");
      v29 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      *(_QWORD *)(v26 + 4) = sub_BA95EC(v29, v31, &v34);
      swift_bridgeObjectRelease(v31);
      _os_log_impl(&dword_0, v24, v25, "No server artwork catalog available for playlist with coverArtworkRecipe=%{public}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    v32 = qword_14F9FB0;
    v33 = v18;
    if (v32 != -1)
      swift_once(&qword_14F9FB0, sub_D16E34);
    v20 = objc_msgSend(objc_allocWithZone((Class)MPArtworkCatalog), "initWithToken:dataSource:", v33, static PlaylistCovers.ArtworkDataSource.shared);

  }
  return v20;
}

void *static MPModelPlaylist.favoriteSongsRequest(labeled:)(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  NSString v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF010);
  static MPModelLibraryRequest<>.favoriteSongs.getter();
  v4 = v3;
  if (a2 && v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setLabel:", v6);

  }
  return v4;
}

void static MPModelLibraryRequest<>.favoriteSongs.getter()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  NSString v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  void *v35;
  uint64_t v36;
  _QWORD aBlock[3];
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];

  v0 = objc_msgSend((id)objc_opt_self(MPMediaQuery), "favoriteSongsPlaylist");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "valueForProperty:", MPMediaItemPropertyPersistentID);
    if (v2)
    {
      v3 = v2;
      _bridgeAnyObjectToAny(_:)(v42, v2);
      swift_unknownObjectRelease(v3);
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    sub_C3B070((uint64_t)v42, (uint64_t)aBlock);
    if (!v38)
    {

      sub_C261DC((uint64_t)aBlock);
      return;
    }
    if ((swift_dynamicCast(&v41, aBlock, (char *)&type metadata for Any + 8, &type metadata for Int64, 6) & 1) == 0)
    {

      return;
    }
    v36 = v41;
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v6 = swift_allocObject(v5, 56, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1060E10;
    *(_QWORD *)(v6 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
    v7 = (void *)objc_opt_self(NSUserDefaults);
    v8 = objc_msgSend(v7, "standardUserDefaults");
    strcpy((char *)v42, "showAllTVShows");
    HIBYTE(v42[0]) = -18;
    v9 = sub_B9DEC0();
    NSUserDefaults.subscript.getter((uint64_t)v42, (uint64_t)&type metadata for String, v9, (uint64_t)aBlock);
    if (v38)
    {
      if ((swift_dynamicCast(v42, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v10 = v42[0];

        if ((v10 & 1) != 0)
        {
          v11 = 3;
          goto LABEL_17;
        }
LABEL_16:
        v11 = 2;
LABEL_17:
        *(_QWORD *)(v6 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v11);
        v12 = objc_msgSend(v7, "standardUserDefaults");
        strcpy((char *)v42, "showAllTVShows");
        HIBYTE(v42[0]) = -18;
        NSUserDefaults.subscript.getter((uint64_t)v42, (uint64_t)&type metadata for String, v9, (uint64_t)aBlock);
        if (v38)
        {
          if ((swift_dynamicCast(v42, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
          {
            v13 = v42[0];

            if ((v13 & 1) != 0)
            {
              v14 = 3;
              goto LABEL_24;
            }
LABEL_23:
            v14 = 2;
LABEL_24:
            v15 = (void *)objc_opt_self(MPModelPlaylistEntry);
            v16 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v14);
            *(_QWORD *)(v6 + 48) = v16;
            aBlock[0] = v6;
            specialized Array._endMutation()(v16);
            v17 = aBlock[0];
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9A0);
            isa = Array._bridgeToObjectiveC()().super.isa;
            v19 = objc_msgSend(v15, "kindWithKinds:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

            v20 = objc_msgSend((id)objc_opt_self(MPModelPlaylist), "kindWithVariants:playlistEntryKind:options:", 2, v19, 0);
            v21 = v4;
            v22 = String._bridgeToObjectiveC()();
            objc_msgSend(v21, "setLabel:", v22);

            objc_msgSend(v21, "setSectionKind:", v20);
            v35 = v19;
            objc_msgSend(v21, "setItemKind:", v19);
            v23 = swift_allocObject(v5, 40, 7);
            *(_OWORD *)(v23 + 16) = xmmword_1060220;
            v24 = objc_allocWithZone((Class)MPIdentifierSet);
            v25 = swift_allocObject(&unk_13B25D0, 24, 7);
            *(_QWORD *)(v25 + 16) = v36;
            v26 = swift_allocObject(&unk_13B25F8, 32, 7);
            *(_QWORD *)(v26 + 16) = sub_C780B0;
            *(_QWORD *)(v26 + 24) = v25;
            v39 = sub_12BACC;
            v40 = v26;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_23E9F0;
            v38 = &block_descriptor_89_3;
            v27 = _Block_copy(aBlock);
            v28 = v40;
            v29 = v20;
            swift_retain(v26);
            v30 = objc_msgSend(v24, "initWithModelKind:block:", v29, v27, swift_release(v28).n128_f64[0]);

            _Block_release(v27);
            LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v26, "", 129, 335, 36, 1, v31);
            swift_release(v25);
            swift_release(v26);
            if ((v28 & 1) != 0)
            {
              __break(1u);
            }
            else
            {
              *(_QWORD *)(v23 + 32) = v30;
              aBlock[0] = v23;
              specialized Array._endMutation()(v32);
              v33 = aBlock[0];
              sub_4E684(0, &qword_14FE288, MPIdentifierSet_ptr);
              v34 = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v21, "setAllowedSectionIdentifiers:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

            }
            return;
          }
        }
        else
        {
          sub_C261DC((uint64_t)aBlock);
        }

        goto LABEL_23;
      }
    }
    else
    {
      sub_C261DC((uint64_t)aBlock);
    }

    goto LABEL_16;
  }
}

unint64_t MPNowPlayingAudioFormatBadging.debugDescription.getter(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  switch(a1)
  {
    case 0:
      v1 = 0x6574537973736F6CLL;
      v2 = 0xEB000000006F6572;
      goto LABEL_9;
    case 1:
      v2 = 0xEA0000000000736FLL;
      v1 = 0x6D744179626C6F64;
      goto LABEL_9;
    case 2:
      v1 = 0x64754179626C6F64;
      v2 = 0xEA00000000006F69;
      goto LABEL_9;
    case 3:
      v1 = 0x7373656C73736F6CLL;
      v2 = 0xE800000000000000;
      goto LABEL_9;
    case 4:
      v2 = 0x8000000001106750;
      v1 = 0xD000000000000016;
      goto LABEL_9;
    case 5:
      v1 = 0x416C616974617073;
      v2 = 0xEC0000006F696475;
LABEL_9:
      String.append(_:)(*(Swift::String *)&v1);
      break;
    default:
      v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v3._object;
      String.append(_:)(v3);
      swift_bridgeObjectRelease(object);
      v5._countAndFlagsBits = 62;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      v6._countAndFlagsBits = 0x3C6E776F6E6B6E75;
      v6._object = (void *)0xE800000000000000;
      String.append(_:)(v6);
      swift_bridgeObjectRelease(0xE800000000000000);
      break;
  }
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return 0xD00000000000001FLL;
}

unint64_t sub_C76148()
{
  uint64_t *v0;

  return MPNowPlayingAudioFormatBadging.debugDescription.getter(*v0);
}

id MPModelPerson.monogramArtworkCatalog.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (!objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPersonName))
    return 0;
  v1 = objc_msgSend(v0, "name");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v7 = sub_C76C70(v3, v5, 0, 1);
  swift_bridgeObjectRelease(v5);
  return v7;
}

id sub_C761FC()
{
  void *v0;
  id result;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  result = objc_msgSend(v0, "artworkCatalog");
  if (!result)
  {
    if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPersonName))
    {
      v2 = objc_msgSend(v0, "name");
      if (v2)
      {
        v3 = v2;
        v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
        v6 = v5;

      }
      else
      {
        v4 = 0;
        v6 = 0;
      }
      v7 = sub_C76C70(v4, v6, 0, 1);
      swift_bridgeObjectRelease();
      return v7;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void MPModelTVSeason.title.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B2648, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_13B2670, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_C770BC;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_129E54;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_3A1A94;
  v9[3] = &block_descriptor_98_2;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 129, 870, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

double sub_C76408(void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(a1, "number") < 1)
  {
    v25 = objc_msgSend(a1, "show");
    v26 = v25;
    if (v25)
    {
      v27 = objc_msgSend(v25, "title");

      if (v27)
      {
        v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v29 = v28;

LABEL_10:
        v30 = a2[1];
        *a2 = (uint64_t)v26;
        a2[1] = v29;
        *(_QWORD *)&result = swift_bridgeObjectRelease(v30).n128_u64[0];
        return result;
      }
      v26 = 0;
    }
    v29 = 0;
    goto LABEL_10;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
  v17._countAndFlagsBits = 0x206E6F73616553;
  v17._object = (void *)0xE700000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
  v32 = objc_msgSend(a1, "number");
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  String.LocalizationValue.init(stringInterpolation:)(v16);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v19 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v6, 0, 0, 256);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v23 = a2[1];
  *a2 = v20;
  a2[1] = v22;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  return result;
}

void sub_C766BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  v7 = (char *)&_swiftEmptyArrayStorage[4];
LABEL_3:
  v9 = *(_QWORD *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_34:
      __break(1u);
    }
    else
    {
      while (1)
      {
        v10 = v3;
        v3 = *(_QWORD *)(v2 + 8 * v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v10);
        if (v3)
        {
          v8 = *(_QWORD *)(v3 + 16);
          if (v8)
            break;
        }
        ++v5;
        v11 = *(_QWORD *)(a1 + 16);
        if (v5 == v11)
          goto LABEL_30;
        if (v5 >= v11)
          goto LABEL_34;
      }
      v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        v13 = v3 + 16 * v12;
        v14 = *(_QWORD *)(v13 + 40);
        v31 = *(_QWORD *)(v13 + 32);
        if (v4)
        {
          swift_bridgeObjectRetain();
          v15 = v6;
          v16 = __OFSUB__(v4--, 1);
          if (v16)
            goto LABEL_36;
        }
        else
        {
          v17 = *((_QWORD *)v6 + 3);
          if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_37;
          v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
          if (v18 <= 1)
            v19 = 1;
          else
            v19 = v18;
          v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
          v15 = (char *)swift_allocObject(v20, 16 * v19 + 32, 7);
          v21 = _swift_stdlib_malloc_size_0(v15);
          v22 = v21 - 32;
          if (v21 < 32)
            v22 = v21 - 17;
          v23 = v22 >> 4;
          *((_QWORD *)v15 + 2) = v19;
          *((_QWORD *)v15 + 3) = 2 * (v22 >> 4);
          v24 = v15 + 32;
          v25 = *((_QWORD *)v6 + 3) >> 1;
          v7 = &v15[16 * v25 + 32];
          v26 = (v23 & 0x7FFFFFFFFFFFFFFFLL) - v25;
          if (*((_QWORD *)v6 + 2))
          {
            v27 = v6 + 32;
            if (v15 != v6 || v24 >= &v27[16 * v25])
              memmove(v24, v27, 16 * v25);
            swift_bridgeObjectRetain();
            *((_QWORD *)v6 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_release(v6);
          v16 = __OFSUB__(v26, 1);
          v4 = v26 - 1;
          if (v16)
            goto LABEL_36;
        }
        ++v12;
        *(_QWORD *)v7 = v31;
        *((_QWORD *)v7 + 1) = v14;
        v7 += 16;
        v6 = v15;
        v8 = *(_QWORD *)(v3 + 16);
        if (v12 == v8)
          goto LABEL_3;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_30:
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v3);
  v28 = *((_QWORD *)v6 + 3);
  if (v28 >= 2)
  {
    v29 = v28 >> 1;
    v16 = __OFSUB__(v29, v4);
    v30 = v29 - v4;
    if (v16)
    {
LABEL_38:
      __break(1u);
      return;
    }
    *((_QWORD *)v6 + 2) = v30;
  }
}

uint64_t sub_C768D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_294(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C7690C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C76930()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_C7695C(void *a1, char a2)
{
  uint64_t v2;

  return sub_C70EB8(a1, a2 & 1, *(_QWORD *)(v2 + 16));
}

uint64_t sub_C76968()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C7698C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_C71030(a1, a2, *(void (**)(_BYTE *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
}

void sub_C76998(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  __CFString *v11;
  __CFString *v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = a1 + 40;
    v4 = -(uint64_t)v1;
    v5 = _swiftEmptyArrayStorage;
    v17 = a1 + 40;
    v18 = *(_QWORD *)(a1 + 16);
    do
    {
      v19 = v5;
      if (v2 <= v1)
        v6 = v1;
      else
        v6 = v2;
      v7 = -(uint64_t)v6;
      for (i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
      {
        if (v7 + v2 == 1)
        {
          __break(1u);
          return;
        }
        v10 = *(i - 1);
        v9 = *i;
        swift_bridgeObjectRetain();
        v11 = (__CFString *)String._bridgeToObjectiveC()();
        v12 = (__CFString *)String._bridgeToObjectiveC()();
        v13 = UTTypeConformsTo(v11, v12);

        if (v13)
          break;
        swift_bridgeObjectRelease(v9);
        ++v2;
        if (v4 + v2 == 1)
          return;
      }
      v5 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_C058BC(0, v19[2] + 1, 1);
        v5 = v19;
      }
      v15 = v5[2];
      v14 = v5[3];
      if (v15 >= v14 >> 1)
      {
        sub_C058BC((char *)(v14 > 1), v15 + 1, 1);
        v5 = v19;
      }
      v5[2] = v15 + 1;
      v16 = &v5[2 * v15];
      v16[4] = v10;
      v16[5] = v9;
      v3 = v17;
      v1 = v18;
    }
    while (v4 + v2);
  }
}

_QWORD *sub_C76B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[2];
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v7 = _swiftEmptyArrayStorage;
  do
  {
    v8 = *v6;
    v13[0] = *(v6 - 1);
    v13[1] = v8;
    swift_bridgeObjectRetain();
    sub_C714B8((uint64_t)v13, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(v8);
      return v7;
    }
    swift_bridgeObjectRelease(v8);
    v9 = v14;
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_BCCE6C(0, v7[2] + 1, 1, v7);
      v11 = v7[2];
      v10 = v7[3];
      if (v11 >= v10 >> 1)
        v7 = sub_BCCE6C((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
      v7[2] = v11 + 1;
      v7[v11 + 4] = v9;
    }
    v6 += 2;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease(a1);
  return v7;
}

id sub_C76C70(uint64_t a1, uint64_t a2, char *a3, char a4)
{
  id v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  if ((a4 & 1) != 0)
  {
    if (!objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    {
      a3 = 0;
      if (a2)
        goto LABEL_5;
      goto LABEL_7;
    }
    v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    a3 = (char *)objc_msgSend(v6, "userInterfaceLayoutDirection");

  }
  if (a2)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    goto LABEL_8;
  }
LABEL_7:
  v7 = 0;
LABEL_8:
  v8 = objc_msgSend(objc_allocWithZone((Class)MusicMonogramArtworkToken), "initWithFullName:rightToLeft:", v7, a3 == (_BYTE *)&dword_0 + 1);

  if (v8)
  {
    v9 = (void *)objc_opt_self(MusicMonogramArtworkDataSource);
    v10 = v8;
    v11 = objc_msgSend(v9, "sharedMonogramArtworkDataSource");
    v12 = objc_allocWithZone((Class)MPArtworkCatalog);
    v13 = v10;
    v8 = objc_msgSend(v12, "initWithToken:dataSource:", v13, v11);

  }
  return v8;
}

uint64_t sub_C76DE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_C76DF0(void *a1)
{
  uint64_t v1;

  sub_C72910(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_C76DF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t _sSo13MPModelObjectC9MusicCoreE20MediaKitPlayableKindO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6840, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xA)
    return 10;
  else
    return v3;
}

unint64_t _sSo13MPModelObjectC9MusicCoreE14FavoriteStatusO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6950, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

id sub_C76E98@<X0>(id *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "propertySetByCombiningWithPropertySet:", *a2);
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for SnapshotIdentifier.Lazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotIdentifier.Lazy);
}

uint64_t type metadata accessor for SnapshotIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotIdentifier);
}

uint64_t sub_C76EF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_C76F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_C743AC(a1, a2, a3, *(void **)(v3 + 40), *(void (**)(uint64_t, char *, _BYTE *))(v3 + 48), *(_QWORD *)(v3 + 56), *(_BYTE **)(v3 + 64), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_C76F48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C76F58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_C76F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_C746F4(a1, a2, a3, *(_QWORD *)(v3 + 40), *(void **)(v3 + 48), *(void (**)(uint64_t, char *, _BYTE *))(v3 + 56), *(_QWORD *)(v3 + 64), *(_BYTE **)(v3 + 72), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_C76FB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C76FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_C748A0(a1, a2, a3, v3[5], v3[2], v3[3]);
}

uint64_t sub_C76FCC(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  return sub_C74A8C(a1, a2, a3, *(void **)(v3 + 40), *(void (**)(uint64_t, _QWORD *, _BYTE *))(v3 + 48), *(_QWORD *)(v3 + 56), *(_BYTE **)(v3 + 64), *(_QWORD *)(v3 + 16));
}

uint64_t sub_C76FFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C7700C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

double sub_C77030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_C74D8C(a1, a2, a3, *(_QWORD *)(v3 + 40), *(void **)(v3 + 48), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_C77040()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

double sub_C77050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_C7513C(a1, a2, a3, *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(_QWORD *)(v3 + 16));
}

uint64_t sub_C7705C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C7706C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_C75398(a1, a2, a3, *(_QWORD *)(v3 + 32), *(void **)(v3 + 40), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_C77078()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C77088()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C77098()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_C770BC()
{
  uint64_t v0;

  return sub_C76408(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_C770C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_C770D8()
{
  unint64_t result;

  result = qword_14FF030;
  if (!qword_14FF030)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_14FF030);
  }
  return result;
}

unint64_t sub_C77120()
{
  unint64_t result;

  result = qword_14FF038;
  if (!qword_14FF038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_14FF038);
  }
  return result;
}

unint64_t sub_C77168()
{
  unint64_t result;

  result = qword_14FF040;
  if (!qword_14FF040)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_14FF040);
  }
  return result;
}

unint64_t sub_C771B0()
{
  unint64_t result;

  result = qword_14FF048;
  if (!qword_14FF048)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_14FF048);
  }
  return result;
}

unint64_t sub_C771F8()
{
  unint64_t result;

  result = qword_14FF050;
  if (!qword_14FF050)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPModelObject.MediaKitPlayableKind, &type metadata for MPModelObject.MediaKitPlayableKind);
    atomic_store(result, (unint64_t *)&qword_14FF050);
  }
  return result;
}

unint64_t sub_C77240()
{
  unint64_t result;

  result = qword_14FF058[0];
  if (!qword_14FF058[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPModelObject.FavoriteStatus, &type metadata for MPModelObject.FavoriteStatus);
    atomic_store(result, qword_14FF058);
  }
  return result;
}

uint64_t sub_C77284(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, a1);
}

ValueMetadata *type metadata accessor for MPIdentifierSet.Purpose()
{
  return &type metadata for MPIdentifierSet.Purpose;
}

ValueMetadata *type metadata accessor for MPIdentifierSet.Purpose.Options()
{
  return &type metadata for MPIdentifierSet.Purpose.Options;
}

uint64_t _s20MediaKitPlayableKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_C77300 + 4 * byte_109FE99[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_C77334 + 4 * byte_109FE94[v4]))();
}

uint64_t sub_C77334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C7733C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC77344);
  return result;
}

uint64_t sub_C77350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC77358);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_C7735C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C77364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.MediaKitPlayableKind()
{
  return &type metadata for MPModelObject.MediaKitPlayableKind;
}

uint64_t _s14FavoriteStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_C773CC + 4 * byte_109FEA3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_C77400 + 4 * byte_109FE9E[v4]))();
}

uint64_t sub_C77400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C77408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC77410);
  return result;
}

uint64_t sub_C7741C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC77424);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_C77428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C77430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.FavoriteStatus()
{
  return &type metadata for MPModelObject.FavoriteStatus;
}

uint64_t sub_C7744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for SnapshotIdentifier.Lazy(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v7);
    return 0;
  }
  return result;
}

char *sub_C774BC(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v9 = *a2;
      *(_QWORD *)a1 = *a2;
      v10 = v9;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v7, v8);
      if (swift_getEnumCaseMultiPayload(a2, v15) == 1)
      {
        v16 = type metadata accessor for IndexPath(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
        v18 = *(char **)((char *)a2 + v17);
        *(_QWORD *)&a1[v17] = v18;
        v19 = v18;
        v20 = a1;
        v21 = v15;
        v22 = 1;
      }
      else
      {
        v23 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v23;
        v24 = v23;
        v20 = a1;
        v21 = v15;
        v22 = 0;
      }
      swift_storeEnumTagMultiPayload(v20, v21, v22);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void sub_C775E4(id *a1, uint64_t a2)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a1;
  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
  {
    v6 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a2 + 16), v4, v5);
    if (swift_getEnumCaseMultiPayload(v3, v6) == 1)
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
      v3 = (id *)((char *)v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48));
    }
    else
    {
      ++v3;
    }
  }

}

_QWORD *sub_C7766C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = *(void **)a2;
    *a1 = *(_QWORD *)a2;
    v9 = v8;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v6, v7);
    if (swift_getEnumCaseMultiPayload(a2, v13) == 1)
    {
      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
      v16 = *(void **)(a2 + v15);
      *(_QWORD *)((char *)a1 + v15) = v16;
      v17 = v16;
      v18 = a1;
      v19 = v13;
      v20 = 1;
    }
    else
    {
      v21 = *(void **)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v21;
      v22 = v21;
      v18 = a1;
      v19 = v13;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **sub_C77768(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  if (a1 != a2)
  {
    (*(void (**)(void **, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v8 = *a2;
      *a1 = *a2;
      v9 = v8;
      v10 = 1;
    }
    else
    {
      v11 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v6, v7);
      if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
      {
        v12 = type metadata accessor for IndexPath(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
        v14 = *(void **)((char *)a2 + v13);
        *(void **)((char *)a1 + v13) = v14;
        v15 = v14;
        v16 = a1;
        v17 = v11;
        v18 = 1;
      }
      else
      {
        *a1 = *a2;
        v19 = a2[1];
        a1[1] = v19;
        v20 = v19;
        v16 = a1;
        v17 = v11;
        v18 = 0;
      }
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v10);
  }
  return a1;
}

char *sub_C77880(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v6, v7);
    if (swift_getEnumCaseMultiPayload(a2, v8) == 1)
    {
      v9 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8);
      *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload(a1, v8, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_C7796C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
    else
    {
      v9 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v7, v8);
      if (swift_getEnumCaseMultiPayload(a2, v9) == 1)
      {
        v10 = type metadata accessor for IndexPath(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8);
        *(_QWORD *)&a1[*(int *)(v11 + 48)] = *(_QWORD *)&a2[*(int *)(v11 + 48)];
        swift_storeEnumTagMultiPayload(a1, v9, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_C77A70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_10A0498;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_C77AF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
      v9 = *(void **)((char *)a2 + v8);
      *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
      v10 = v9;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = (uint64_t)v15;
      v16 = v15;
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void sub_C77BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id *v4;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (id *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48));
  }
  else
  {
    v4 = (id *)(a1 + 8);
  }

}

_QWORD *sub_C77C34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for IndexPath(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
    v8 = *(void **)((char *)a2 + v7);
    *(_QWORD *)((char *)a1 + v7) = v8;
    v9 = v8;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = v13;
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

_QWORD *sub_C77CE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (a1 != a2)
  {
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for IndexPath(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8) + 48);
      v8 = *(void **)((char *)a2 + v7);
      *(_QWORD *)((char *)a1 + v7) = v8;
      v9 = v8;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      *a1 = *a2;
      v13 = (void *)a2[1];
      a1[1] = v13;
      v14 = v13;
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

char *sub_C77DB0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_C77E54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEFF8);
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_C77F10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C77F20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C77F30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_C77F54()
{
  uint64_t v0;

  return sub_C72290(*(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_C77F60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_C77F70()
{
  unint64_t result;

  result = qword_14FF1D0;
  if (!qword_14FF1D0)
  {
    result = swift_getWitnessTable("y'1", &_s12LoadingErrorON);
    atomic_store(result, (unint64_t *)&qword_14FF1D0);
  }
  return result;
}

uint64_t sub_C77FB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C77FD8()
{
  uint64_t v0;

  return sub_C72290(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_C77FE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *_s12LoadingErrorOwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

uint64_t _s12LoadingErrorOwxx(_QWORD *a1)
{
  return swift_errorRelease(*a1);
}

uint64_t *_s12LoadingErrorOwca(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  swift_errorRetain(*a2);
  v4 = *a1;
  *a1 = v3;
  swift_errorRelease(v4);
  return a1;
}

_QWORD *__swift_memcpy8_8_0(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *_s12LoadingErrorOwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_errorRelease(v3);
  return a1;
}

ValueMetadata *_s12LoadingErrorOMa()
{
  return &_s12LoadingErrorON;
}

void *Playlist.maximumBatchLimit.unsafeMutableAddressor()
{
  return &static Playlist.maximumBatchLimit;
}

BOOL sub_C7813C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  if (v2)
    v3 = (_QWORD *)v2;
  else
    v3 = _swiftEmptyArrayStorage;
  v4 = sub_C7AE90((uint64_t)v3);
  swift_bridgeObjectRelease();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF270);
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v5, v10 + 2 * v8, v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_105F890;
  v12 = v11 + v10;
  v13 = *(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104);
  v13(v12, enum case for AudioVariant.dolbyAtmos(_:), v6);
  v13(v12 + v8, enum case for AudioVariant.dolbyAudio(_:), v6);
  v14 = sub_C79BBC(v11, v4);
  swift_setDeallocating(v11);
  swift_arrayDestroy(v12, *(_QWORD *)(v11 + 16), v6);
  swift_deallocClassInstance(v11, 32, 7);
  v15 = *(_QWORD *)(v14 + 16);
  swift_release();
  return v15 != 0;
}

uint64_t sub_C78264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF260);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a2, v9);
  v11(v8, a1, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 1;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 0;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 1;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 1;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 1;
}

BOOL MusicLibrarySectionedResponse.isEmpty.getter()
{
  return MusicLibrarySectionedResponse.totalItemCount.getter() == 0;
}

uint64_t AudioVariant.supportsBadge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  BOOL v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  v9 = v6 == enum case for AudioVariant.dolbyAtmos(_:)
    || v6 == enum case for AudioVariant.dolbyAudio(_:)
    || v6 == enum case for AudioVariant.lossless(_:)
    || v6 == enum case for AudioVariant.highResolutionLossless(_:);
  v10 = v9;
  if (!v9)
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

unint64_t AudioVariant.symbolString.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v10;

  v1 = v0;
  v2 = 0xD000000000000018;
  v3 = type metadata accessor for AudioVariant(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 != enum case for AudioVariant.dolbyAtmos(_:) && v7 != enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v7 == enum case for AudioVariant.lossless(_:) || v7 == enum case for AudioVariant.highResolutionLossless(_:))
    {
      return 0xD000000000000015;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return 0;
    }
  }
  return v2;
}

uint64_t AudioVariant.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for AudioVariant.dolbyAtmos(_:))
  {
    if (qword_14FA5A8 != -1)
      swift_once(&qword_14FA5A8, sub_D746B0);
    v8 = &static AccessibilityString.dolbyAtmosLabel;
  }
  else if (v7 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (qword_14FA5B0 != -1)
      swift_once(&qword_14FA5B0, sub_D746FC);
    v8 = &static AccessibilityString.dolbyAudioLabel;
  }
  else if (v7 == enum case for AudioVariant.lossless(_:))
  {
    if (qword_14FA5C0 != -1)
      swift_once(&qword_14FA5C0, sub_D74798);
    v8 = &static AccessibilityString.losslessLabel;
  }
  else
  {
    if (v7 != enum case for AudioVariant.highResolutionLossless(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 0;
    }
    if (qword_14FA5B8 != -1)
      swift_once(&qword_14FA5B8, sub_D74748);
    v8 = &static AccessibilityString.hiResLosslessLabel;
  }
  v9 = *v8;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t AudioVariant.badgeText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v23[-v10];
  v12 = type metadata accessor for AudioVariant(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v13 + 16))(v16, v1, v12, v14);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == enum case for AudioVariant.lossless(_:))
  {
    v18 = 0x7373656C73736F4CLL;
    v19 = 0xE800000000000000;
  }
  else
  {
    if (v17 != enum case for AudioVariant.highResolutionLossless(_:))
    {
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v12);
      return 0;
    }
    v19 = 0x80000000010D7FC0;
    v18 = 0x1000000000000012;
  }
  String.LocalizationValue.init(stringLiteral:)(v18, v19);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v20 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v21 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v20, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v21;
}

uint64_t sub_C78A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF260);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a1, v9);
  v11(v8, a2, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 1;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 0;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 1;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 1;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 1;
}

uint64_t sub_C78BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF260);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a2, v9);
  v11(v8, a1, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 0;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 1;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 0;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 0;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 0;
}

uint64_t Array<A>.removingEquivalents()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  void (*v12)(char *, _QWORD, uint64_t, __n128);
  __n128 v13;
  void (*v14)(char *, uint64_t, __n128);
  uint64_t v15;
  char v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF240);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AudioVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_bridgeObjectRetain();
  v10 = sub_C7AE90(v9);
  v11 = swift_bridgeObjectRelease(a1);
  v20 = v10;
  v12 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104);
  v12(v8, enum case for AudioVariant.highResolutionLossless(_:), v5, v11);
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_C525C4((uint64_t)v8, v10);
  v13 = swift_bridgeObjectRelease(v10);
  v14 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  v14(v8, v5, v13);
  if ((a1 & 1) != 0)
  {
    ((void (*)(char *, _QWORD, uint64_t))v12)(v8, enum case for AudioVariant.lossless(_:), v5);
    sub_C79FFC((uint64_t)v8, (uint64_t)v4);
    ((void (*)(char *, uint64_t))v14)(v8, v5);
    sub_C7AFB8((uint64_t)v4);
  }
  v15 = v20;
  ((void (*)(char *, _QWORD, uint64_t))v12)(v8, enum case for AudioVariant.dolbyAtmos(_:), v5);
  swift_bridgeObjectRetain();
  v16 = sub_C525C4((uint64_t)v8, v15);
  v17 = swift_bridgeObjectRelease(v15);
  v14(v8, v5, v17);
  if ((v16 & 1) != 0)
  {
    ((void (*)(char *, _QWORD, uint64_t))v12)(v8, enum case for AudioVariant.dolbyAudio(_:), v5);
    sub_C79FFC((uint64_t)v8, (uint64_t)v4);
    ((void (*)(char *, uint64_t))v14)(v8, v5);
    sub_C7AFB8((uint64_t)v4);
  }
  return v20;
}

uint64_t MusicLibrary.DownloadStatus.DownloadPauseReasons.init(mediaPlayerReason:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 4) != 0)
  {
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.cellularDataDisallowed.getter(v6);
  }
  else if ((a1 & 2) != 0)
  {
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.constrainedNetwork.getter(v6);
  }
  else
  {
    if ((a1 & 1) == 0)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.thermalPressure.getter(v6);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t MusicLibrary.DownloadStatus.DownloadPauseReasons.alert.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72[4];
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v70 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  v12 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v68 - v18;
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v68 - v18, v2, v12, v17);
  static MusicLibrary.DownloadStatus.DownloadPauseReasons.cellularDataDisallowed.getter(v20);
  v21 = sub_4DD24(&qword_14FF248, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v12, v21);
  v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v24 = v23(v15, v12);
  if ((v22 & 1) != 0)
  {
    v23(v19, v12);
    result = (uint64_t)sub_C69BAC(0, 0, v72);
    v26 = v72[0];
    v27 = v72[1];
    v28 = v72[2];
    v29 = v72[3];
    v30 = v73;
    v32 = v74;
    v31 = v75;
  }
  else
  {
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.constrainedNetwork.getter(v24);
    v33 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v12, v21);
    v34 = v23(v15, v12);
    if ((v33 & 1) != 0)
    {
      v23(v19, v12);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000001106850);
      v35 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v36 = v71;
      v35(v8, v11, v71);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v37 = qword_1581E30;
      v38 = (id)qword_1581E30;
      v39 = v70;
      static Locale.current.getter(v38);
      v40 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v37, v39, 0, 0, 256);
      v68 = v41;
      v69 = v40;
      v42 = *(void (**)(char *, uint64_t))(v6 + 8);
      v42(v11, v36);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x8000000001106870);
      v35(v8, v11, v36);
      v43 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v28 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v43, v39, 0, 0, 256);
      v29 = v44;
      v42(v11, v36);
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
      v46 = v35;
      v32 = swift_allocObject(v45, 144, 7);
      *(_OWORD *)(v32 + 16) = xmmword_105F890;
      if (qword_14FA550 != -1)
        swift_once(&qword_14FA550, sub_D73C68);
      v48 = static String.okButtonTitle;
      v47 = qword_1582D00;
      *(_QWORD *)(v32 + 32) = 0x6C65636E6163;
      *(_QWORD *)(v32 + 40) = 0xE600000000000000;
      *(_QWORD *)(v32 + 48) = v48;
      *(_QWORD *)(v32 + 56) = v47;
      *(_BYTE *)(v32 + 64) = 0;
      *(_QWORD *)(v32 + 72) = 0;
      *(_QWORD *)(v32 + 80) = 0;
      swift_bridgeObjectRetain();
      String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
      v46(v8, v11, v36);
      v49 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v50 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v49, v39, 0, 0, 256);
      v51 = v36;
      v53 = v52;
      result = ((uint64_t (*)(char *, uint64_t))v42)(v11, v51);
      v30 = 0;
      v31 = 0;
      *(_QWORD *)(v32 + 88) = 0x73676E6974746573;
      *(_QWORD *)(v32 + 96) = 0xE800000000000000;
      *(_QWORD *)(v32 + 104) = v50;
      *(_QWORD *)(v32 + 112) = v53;
      *(_BYTE *)(v32 + 120) = 2;
      *(_QWORD *)(v32 + 128) = &unk_14FF250;
      *(_QWORD *)(v32 + 136) = 0;
    }
    else
    {
      static MusicLibrary.DownloadStatus.DownloadPauseReasons.thermalPressure.getter(v34);
      v54 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v12, v21);
      v23(v15, v12);
      result = v23(v19, v12);
      if ((v54 & 1) == 0)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v30 = 0;
        v32 = 0;
        v31 = 0;
        goto LABEL_17;
      }
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x80000000011067B0);
      v55 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v56 = v71;
      v55(v8, v11, v71);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v57 = qword_1581E30;
      v58 = (id)qword_1581E30;
      v59 = v70;
      static Locale.current.getter(v58);
      v60 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v57, v59, 0, 0, 256);
      v68 = v61;
      v69 = v60;
      v62 = *(void (**)(char *, uint64_t))(v6 + 8);
      v62(v11, v56);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x80000000011067F0);
      v55(v8, v11, v56);
      v63 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v28 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v63, v59, 0, 0, 256);
      v29 = v64;
      v62(v11, v56);
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
      v32 = swift_allocObject(v65, 88, 7);
      *(_OWORD *)(v32 + 16) = xmmword_105B360;
      if (qword_14FA550 != -1)
        swift_once(&qword_14FA550, sub_D73C68);
      v67 = static String.okButtonTitle;
      v66 = qword_1582D00;
      *(_QWORD *)(v32 + 32) = 0x6C65636E6163;
      *(_QWORD *)(v32 + 40) = 0xE600000000000000;
      *(_QWORD *)(v32 + 48) = v67;
      *(_QWORD *)(v32 + 56) = v66;
      *(_BYTE *)(v32 + 64) = 0;
      *(_QWORD *)(v32 + 72) = 0;
      *(_QWORD *)(v32 + 80) = 0;
      result = swift_bridgeObjectRetain();
      v30 = 0;
      v31 = 0;
    }
    v27 = v68;
    v26 = v69;
  }
LABEL_17:
  *a1 = v26;
  a1[1] = v27;
  a1[2] = v28;
  a1[3] = v29;
  a1[4] = v30;
  a1[5] = v32;
  a1[6] = v31;
  return result;
}

uint64_t Track.musicItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for Track(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v28 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v28 - v8, v1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v12 = type metadata accessor for Song(0);
    v13 = v12;
    v14 = &protocol witness table for Song;
LABEL_5:
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v14;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((_QWORD *)a1);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(boxed_opaque_existential_1Tm, v9, v13);
  }
  if (v11 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v12 = type metadata accessor for MusicVideo(0);
    v13 = v12;
    v14 = &protocol witness table for MusicVideo;
    goto LABEL_5;
  }
  if (qword_14F9E70 != -1)
    swift_once(&qword_14F9E70, sub_C79AD8);
  v17 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v17, (uint64_t)static Logger.musicKit);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v7, v1, v3);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v29 = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_4DD24(&qword_14FF258, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v3, v23);
    v26 = v25;
    *(_QWORD *)(v21 + 4) = sub_BA95EC(v24, v25, &v29);
    swift_bridgeObjectRelease(v26);
    v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    v27(v7, v3);
    _os_log_impl(&dword_0, v19, v20, "Unsupported Track type=%s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    v27(v7, v3);
  }

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v27)(v9, v3);
}

uint64_t Logger.musicKit.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9E70 != -1)
    swift_once(&qword_14F9E70, sub_C79AD8);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.musicKit);
}

NSString sub_C79A1C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static MusicLibrary.downloadingStateDidChange = (uint64_t)result;
  return result;
}

uint64_t *MusicLibrary.downloadingStateDidChange.unsafeMutableAddressor()
{
  if (qword_14F9E68 != -1)
    swift_once(&qword_14F9E68, sub_C79A1C);
  return &static MusicLibrary.downloadingStateDidChange;
}

id static MusicLibrary.downloadingStateDidChange.getter()
{
  if (qword_14F9E68 != -1)
    swift_once(&qword_14F9E68, sub_C79A1C);
  return (id)static MusicLibrary.downloadingStateDidChange;
}

uint64_t static Playlist.maximumBatchLimit.getter()
{
  return 10000;
}

uint64_t sub_C79AD8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.musicKit);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.musicKit);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x74694B636973754DLL, 0xE800000000000000);
}

uint64_t static Logger.musicKit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9E70 != -1)
    swift_once(&qword_14F9E70, sub_C79AD8);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.musicKit);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_C79BBC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_C79D3C((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v3, a2);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v9 = sub_C79D3C((unint64_t *)v10, v7, v3, a2);
    swift_release();
    swift_slowDealloc(v10, -1, -1);
  }
  return v9;
}

uint64_t sub_C79D3C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a1;
  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - v13;
  v37 = *(_QWORD *)(a3 + 16);
  if (v37)
  {
    v32 = a2;
    v33 = v4;
    v39 = v12;
    v40 = a4 + 56;
    v36 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v41 = *(_QWORD *)(v12 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v31 = a3;
    swift_bridgeObjectRetain();
    v34 = 0;
    v16 = 0;
    while (1)
    {
      v38 = v16;
      v15(v14, v36 + v41 * v16, v8);
      v18 = a4;
      v19 = *(_QWORD *)(a4 + 40);
      v20 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v21 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v8, v20);
      a4 = v18;
      v22 = -1 << *(_BYTE *)(v18 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v40 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = ~v22;
        while (1)
        {
          v15(v10, *(_QWORD *)(a4 + 48) + v23 * v41, v8);
          v25 = sub_4DD24(&qword_14FED30, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
          v26 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v14, v8, v25);
          v17 = *(void (**)(char *, uint64_t))(v39 + 8);
          v17(v10, v8);
          if ((v26 & 1) != 0)
            break;
          v23 = (v23 + 1) & v24;
          a4 = v18;
          if (((*(_QWORD *)(v40 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            goto LABEL_4;
        }
        result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
        v28 = (v23 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v29 = *(unint64_t *)((char *)v35 + v28);
        *(unint64_t *)((char *)v35 + v28) = v29 | (1 << v23);
        if ((v29 & (1 << v23)) != 0)
        {
          a4 = v18;
        }
        else
        {
          if (__OFADD__(v34, 1))
          {
            __break(1u);
            return result;
          }
          a4 = v18;
          ++v34;
        }
      }
      else
      {
        v17 = *(void (**)(char *, uint64_t))(v39 + 8);
LABEL_4:
        v17(v14, v8);
      }
      v16 = v38 + 1;
      if (v38 + 1 == v37)
      {
        swift_bridgeObjectRelease();
        a2 = v32;
        v30 = v34;
        goto LABEL_17;
      }
    }
  }
  v30 = 0;
LABEL_17:
  swift_retain();
  return sub_CBF990(v35, a2, v30, a4);
}

uint64_t sub_C79FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24(&qword_14FED28, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v34 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v35 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_4DD24(&qword_14FED30, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v34, v6, v21);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease(v10);
        v24 = 1;
        a2 = v33;
        v7 = v35;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease(v10);
    v25 = v32;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
    v27 = *v25;
    v36 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_CC1400();
      v27 = v36;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v35;
    a2 = v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 32))(v33, v28, v6);
    sub_C7A714(v16);
    v29 = *v25;
    *v25 = v36;
    v23 = swift_bridgeObjectRelease(v29);
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease(v10);
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

uint64_t sub_C7A238(unsigned __int8 a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[10];

  v3 = *v1;
  Hasher.init(_seed:)(v9);
  v4 = Library.Menu.Identifier.rawValue.getter(a1);
  v6 = v5;
  swift_bridgeObjectRetain();
  String.hash(into:)(v9, v4, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  return 13;
}

uint64_t sub_C7A60C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v2 + 40), a1);
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_CC1980();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_70E734(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

void sub_C7A714(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for AudioVariant(0);
  v32 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v29 = v1;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v31 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v32 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        v15 = *(_QWORD *)(v6 + 40);
        v16 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
        v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
        v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v18 < v12 || a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v13 * a1;
        v23 = v21 + v13 * a1;
        v24 = v21 + v14;
        if (v13 * a1 < v14 || v23 >= v24 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23, v24, 1, v3);
        }
        else
        {
          a1 = v9;
          if (v22 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v23, v24);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v31 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v6);
    v1 = v29;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v1;
  v26 = *(_QWORD *)(*v1 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
}

unint64_t sub_C7A990(unint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v12[10];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
      Hasher.init(_seed:)(v12);
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0xC7ACB8);
  }
  *(_QWORD *)(v3 + 16) = v11;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t _s8MusicKit12AudioVariantO0A4CoreE1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF260);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a1, v9);
  v11(v8, a2, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 0;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 1;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 0;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 0;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 0;
}

uint64_t sub_C7AE90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v11 = sub_4DD24(&qword_14FED28, v10, (uint64_t)&protocol conformance descriptor for AudioVariant);
  result = Set.init(minimumCapacity:)(v9, v2, v11);
  v17 = result;
  if (v9)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v5, v13, v2);
      sub_CBCD48((uint64_t)v8, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v14;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_C7AFB8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF240);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C7AFF8()
{
  return sub_4DD24(&qword_14FED30, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
}

uint64_t sub_C7B024(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_C7B094();
  result = Set.init(minimumCapacity:)(v2, &type metadata for Library.Menu.Identifier, v3);
  v8 = result;
  if (v2)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_CBD494(&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_C7B094()
{
  unint64_t result;

  result = qword_14FF268;
  if (!qword_14FF268)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_14FF268);
  }
  return result;
}

uint64_t static Logger.music(_:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, a1, a2);
}

uint64_t Logger.motion.unsafeMutableAddressor()
{
  return sub_C7B42C(&qword_14F9E98, (uint64_t)static Logger.motion, (uint64_t)sub_C7B488);
}

uint64_t *OS_os_log.musicBag.unsafeMutableAddressor()
{
  if (qword_14F9E80 != -1)
    swift_once(&qword_14F9E80, sub_C7B288);
  return &static OS_os_log.musicBag;
}

uint64_t OS_os_log.init(musicCategory:)(uint64_t a1, uint64_t a2)
{
  return OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, a1, a2);
}

uint64_t Logger.audioFormat.unsafeMutableAddressor()
{
  return sub_C7B42C(&qword_14F9E88, (uint64_t)static Logger.audioFormat, (uint64_t)sub_C7B304);
}

uint64_t sub_C7B1CC()
{
  uint64_t result;

  sub_C7B808();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x74736F706E676953, 0xE900000000000073);
  static OS_os_log.musicSignposts = result;
  return result;
}

uint64_t *OS_os_log.musicSignposts.unsafeMutableAddressor()
{
  if (qword_14F9E78 != -1)
    swift_once(&qword_14F9E78, sub_C7B1CC);
  return &static OS_os_log.musicSignposts;
}

id static OS_os_log.musicSignposts.getter()
{
  return sub_C44F68(&qword_14F9E78, (id *)&static OS_os_log.musicSignposts, (uint64_t)sub_C7B1CC);
}

uint64_t sub_C7B288()
{
  uint64_t result;

  sub_C7B808();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 6775106, 0xE300000000000000);
  static OS_os_log.musicBag = result;
  return result;
}

id static OS_os_log.musicBag.getter()
{
  return sub_C44F68(&qword_14F9E80, (id *)&static OS_os_log.musicBag, (uint64_t)sub_C7B288);
}

void *String.musicSubsystem.unsafeMutableAddressor()
{
  return &static String.musicSubsystem;
}

uint64_t sub_C7B304()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.audioFormat);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.audioFormat);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x726F466F69647541, 0xEB0000000074616DLL);
}

uint64_t static Logger.audioFormat.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C7B520(&qword_14F9E88, (uint64_t)static Logger.audioFormat, (uint64_t)sub_C7B304, a1);
}

uint64_t sub_C7B39C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.badging);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.badging);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x676E6967646142, 0xE700000000000000);
}

uint64_t Logger.badging.unsafeMutableAddressor()
{
  return sub_C7B42C(&qword_14F9E90, (uint64_t)static Logger.badging, (uint64_t)sub_C7B39C);
}

uint64_t sub_C7B42C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v4, a2);
}

uint64_t static Logger.badging.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C7B520(&qword_14F9E90, (uint64_t)static Logger.badging, (uint64_t)sub_C7B39C, a1);
}

uint64_t sub_C7B488()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.motion);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.motion);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x7472416F65646956, 0xEC0000006B726F77);
}

uint64_t static Logger.motion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C7B520(&qword_14F9E98, (uint64_t)static Logger.motion, (uint64_t)sub_C7B488, a1);
}

uint64_t sub_C7B520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for Logger(0);
  v7 = __swift_project_value_buffer(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

unint64_t static String.musicSubsystem.getter()
{
  return 0xD000000000000013;
}

uint64_t Optional.expectNotNil(logger:file:line:function:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X4>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  os_log_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v8 = v7;
  v35 = a3;
  v36 = a4;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(*(_QWORD *)(*(_QWORD *)(a6 + 16) - 8) + 48))(v7, 1, v16) == 1)
  {
    v34 = a7;
    v19 = static os_log_type_t.info.getter();
    swift_bridgeObjectRetain_n(a2, 2);
    v20 = swift_bridgeObjectRetain_n(a5, 2);
    v21 = Logger.logObject.getter(v20);
    if (os_log_type_enabled(v21, v19))
    {
      v22 = swift_slowAlloc(32, -1);
      v33 = v19;
      v23 = v22;
      v32 = swift_slowAlloc(64, -1);
      v37 = v32;
      *(_DWORD *)v23 = 136315650;
      v24 = URL.init(fileURLWithPath:)(a1, a2);
      v31 = v21;
      v25 = (char *)URL.lastPathComponent.getter(v24);
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      *(_QWORD *)(v23 + 4) = sub_BA95EC(v25, v27, &v37);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v27);
      *(_WORD *)(v23 + 12) = 2048;
      *(_QWORD *)(v23 + 14) = v35;
      *(_WORD *)(v23 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v23 + 24) = sub_BA95EC(v36, a5, &v37);
      swift_bridgeObjectRelease_n(a5, 3);
      v21 = v31;
      _os_log_impl(&dword_0, v31, (os_log_type_t)v33, "Unexpectedly found nil: %s:%ld %s", (uint8_t *)v23, 0x20u);
      v28 = v32;
      swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a5, 2);
      swift_bridgeObjectRelease_n(a2, 2);
    }

    a7 = v34;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(a7, v8, a6);
}

unint64_t sub_C7B808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FDBD0;
  if (!qword_14FDBD0)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FDBD0);
  }
  return result;
}

id sub_C7B870()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s27WeakViewControllerReferenceCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_C7B8B4()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_14FF280 = result;
  return result;
}

uint64_t sub_C7B8D8()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_14FF288 = result;
  return result;
}

uint64_t sub_C7B8FC()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_14FF290 = result;
  return result;
}

uint64_t sub_C7B920()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_14FF298 = result;
  return result;
}

id UIViewController.playActivityFeatureNameSourceViewController.getter()
{
  return sub_C7BA30(&qword_14F9EA8, (const void **)&qword_14FF288, (uint64_t)sub_C7B8D8);
}

uint64_t _s27WeakViewControllerReferenceCMa()
{
  return objc_opt_self(_TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference);
}

void UIViewController.playActivityFeatureNameSourceViewController.setter(void *a1)
{
  sub_C7BB54(a1, &qword_14F9EA8, (const void **)&qword_14FF288, (uint64_t)sub_C7B8D8);
}

id UIViewController.playActivityRecommendationDataSourceViewController.getter()
{
  return sub_C7BA30(&qword_14F9EB0, (const void **)&qword_14FF290, (uint64_t)sub_C7B8FC);
}

id sub_C7BA30(_QWORD *a1, const void **a2, uint64_t a3)
{
  void *v3;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t Strong;
  char *v11;
  _OWORD v12[2];
  _BYTE v13[24];
  uint64_t v14;

  if (*a1 != -1)
    swift_once(a1, a3);
  v5 = objc_getAssociatedObject(v3, *a2);
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v12, v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_C3B070((uint64_t)v12, (uint64_t)v13);
  if (!v14)
  {
    sub_C261DC((uint64_t)v13);
    return objc_msgSend(v3, "parentViewController");
  }
  v7 = _s27WeakViewControllerReferenceCMa();
  if ((swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    return objc_msgSend(v3, "parentViewController");
  v8 = v11;
  Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);

  if (!Strong)
    return objc_msgSend(v3, "parentViewController");
  return (id)Strong;
}

void UIViewController.playActivityRecommendationDataSourceViewController.setter(void *a1)
{
  sub_C7BB54(a1, &qword_14F9EB0, (const void **)&qword_14FF290, (uint64_t)sub_C7B8FC);
}

void sub_C7BB54(void *a1, _QWORD *a2, const void **a3, uint64_t a4)
{
  void *v4;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  id v13;
  const void *v14;
  id v15;
  objc_super v16;

  if (a1)
  {
    v9 = (objc_class *)_s27WeakViewControllerReferenceCMa();
    v10 = (char *)objc_allocWithZone(v9);
    v11 = swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);
    *(_QWORD *)&v12 = swift_unknownObjectWeakAssign(v11, a1).n128_u64[0];
    v16.receiver = v10;
    v16.super_class = v9;
    v13 = objc_msgSendSuper2(&v16, "init", v12);
  }
  else
  {
    v13 = 0;
  }
  if (*a2 != -1)
    swift_once(a2, a4);
  v14 = *a3;
  v15 = v13;
  objc_setAssociatedObject(v4, v14, v15, (char *)&dword_0 + 1);

}

void (*UIViewController.playActivityRecommendationDataSourceViewController.modify(_QWORD *a1))(objc_super **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v3[4] = UIViewController.playActivityRecommendationDataSourceViewController.getter();
  return sub_C7BC84;
}

void sub_C7BC84(objc_super **a1, char a2)
{
  objc_super *v2;
  id receiver;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super *v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  id v13;
  Class super_class;
  const void *v15;
  objc_super *v16;
  Class v17;
  const void *v18;
  id v19;

  v2 = *a1;
  receiver = (*a1)[2].receiver;
  if ((a2 & 1) != 0)
  {
    if (receiver)
    {
      v4 = (objc_class *)_s27WeakViewControllerReferenceCMa();
      v5 = (char *)objc_allocWithZone(v4);
      v6 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);
      swift_unknownObjectWeakAssign(v6, receiver);
      v2->receiver = v5;
      v2->super_class = v4;
      v7 = receiver;
      v8 = -[objc_super init](v2, "init");
    }
    else
    {
      v8 = 0;
    }
    if (qword_14F9EB0 != -1)
      swift_once(&qword_14F9EB0, sub_C7B8FC);
    super_class = v2[2].super_class;
    v15 = (const void *)qword_14FF290;
    v16 = v8;
    objc_setAssociatedObject(super_class, v15, v16, (char *)&dword_0 + 1);

    receiver = v2[2].receiver;
  }
  else
  {
    if (receiver)
    {
      v9 = (objc_class *)_s27WeakViewControllerReferenceCMa();
      v10 = (char *)objc_allocWithZone(v9);
      v11 = swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);
      *(_QWORD *)&v12 = swift_unknownObjectWeakAssign(v11, receiver).n128_u64[0];
      v2[1].receiver = v10;
      v2[1].super_class = v9;
      v13 = objc_msgSendSuper2(v2 + 1, "init", v12);
    }
    else
    {
      v13 = 0;
    }
    if (qword_14F9EB0 != -1)
      swift_once(&qword_14F9EB0, sub_C7B8FC);
    v17 = v2[2].super_class;
    v18 = (const void *)qword_14FF290;
    v19 = v13;
    objc_setAssociatedObject(v17, v18, v19, (char *)&dword_0 + 1);

  }
  free(v2);
}

uint64_t UIViewController.playActivityRecommendationData.getter()
{
  return 0;
}

uint64_t UIViewController.playActivityForwardedRecommendationData.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_14F9EB8 != -1)
    swift_once(&qword_14F9EB8, sub_C7B920);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_14FF298);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_C3B070((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Data, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_C261DC((uint64_t)v6);
    return 0;
  }
}

void UIViewController.playActivityForwardedRecommendationData.setter(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  const void *v6;
  Class value;

  v3 = v2;
  if (qword_14F9EB8 != -1)
    swift_once(&qword_14F9EB8, sub_C7B920);
  v6 = (const void *)qword_14FF298;
  if (a2 >> 60 == 15)
  {
    value = 0;
    objc_setAssociatedObject(v3, (const void *)qword_14FF298, 0, (char *)&dword_0 + 3);
  }
  else
  {
    sub_50CB4(a1, a2);
    value = Data._bridgeToObjectiveC()().super.isa;
    sub_50C4C(a1, a2);
    objc_setAssociatedObject(v3, v6, value, (char *)&dword_0 + 3);
  }
  sub_50C4C(a1, a2);

}

void (*UIViewController.playActivityForwardedRecommendationData.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = UIViewController.playActivityForwardedRecommendationData.getter();
  a1[1] = v3;
  return sub_C7C024;
}

void sub_C7C024(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  const void *v5;
  Class isa;
  const void *v7;
  Class value;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    sub_1390D8(*(_QWORD *)a1, v4);
    if (qword_14F9EB8 != -1)
      swift_once(&qword_14F9EB8, sub_C7B920);
    v5 = (const void *)qword_14FF298;
    if (v4 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      sub_50CB4(v3, v4);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_50C4C(v3, v4);
    }
    objc_setAssociatedObject(*(id *)(a1 + 16), v5, isa, (char *)&dword_0 + 3);
    sub_50C4C(v3, v4);

    sub_50C4C(v3, v4);
  }
  else
  {
    if (qword_14F9EB8 != -1)
      swift_once(&qword_14F9EB8, sub_C7B920);
    v7 = (const void *)qword_14FF298;
    if (v4 >> 60 == 15)
    {
      value = 0;
      objc_setAssociatedObject(*(id *)(a1 + 16), (const void *)qword_14FF298, 0, (char *)&dword_0 + 3);
    }
    else
    {
      sub_50CB4(v3, v4);
      value = Data._bridgeToObjectiveC()().super.isa;
      sub_50C4C(v3, v4);
      objc_setAssociatedObject(*(id *)(a1 + 16), v7, value, (char *)&dword_0 + 3);
    }
    sub_50C4C(v3, v4);

  }
}

uint64_t UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(char a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id Strong;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;
  _BYTE v29[24];
  uint64_t v30;

  v3 = objc_msgSend(v1, "playActivityRecommendationData");
  if (v3)
  {
    v4 = v3;
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    if ((a1 & 1) == 0)
    {
      Strong = UIViewController.playActivityRecommendationDataSourceViewController.getter();
      v5 = 0;
LABEL_8:
      if (!Strong)
        return v5;
      while (1)
      {
        v10 = objc_msgSend(Strong, "playActivityRecommendationData");
        if (v10)
        {
          v11 = v10;
          v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v13 = v12;

          goto LABEL_27;
        }
        if ((a1 & 1) == 0)
          goto LABEL_26;
        v14 = qword_14F9EB8;
        v15 = Strong;
        if (v14 != -1)
          swift_once(&qword_14F9EB8, sub_C7B920);
        v16 = objc_getAssociatedObject(v15, (const void *)qword_14FF298);
        if (v16)
        {
          v17 = v16;
          _bridgeAnyObjectToAny(_:)(&v27, v16);
          swift_unknownObjectRelease(v17);
        }
        else
        {
          v27 = 0u;
          v28 = 0u;
        }
        sub_C3B070((uint64_t)&v27, (uint64_t)v29);
        if (!v30)
          break;
        v18 = swift_dynamicCast(v26, v29, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
        if (v18)
          v5 = v26[0];
        else
          v5 = 0;
        if (v18)
          v13 = v26[1];
        else
          v13 = 0xF000000000000000;

LABEL_27:
        v19 = qword_14F9EB0;
        v20 = Strong;
        if (v19 != -1)
          swift_once(&qword_14F9EB0, sub_C7B8FC);
        v21 = objc_getAssociatedObject(v20, (const void *)qword_14FF290);
        if (v21)
        {
          v22 = v21;
          _bridgeAnyObjectToAny(_:)(&v27, v21);
          swift_unknownObjectRelease(v22);
        }
        else
        {
          v27 = 0u;
          v28 = 0u;
        }
        sub_C3B070((uint64_t)&v27, (uint64_t)v29);
        if (v30)
        {
          v23 = _s27WeakViewControllerReferenceCMa();
          if ((swift_dynamicCast(v26, v29, (char *)&type metadata for Any + 8, v23, 6) & 1) != 0)
          {
            v24 = (void *)v26[0];
            Strong = (id)swift_unknownObjectWeakLoadStrong(v26[0]+ OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController);

            if (Strong)
              goto LABEL_38;
          }
        }
        else
        {
          sub_C261DC((uint64_t)v29);
        }
        Strong = objc_msgSend(v20, "parentViewController");
LABEL_38:

        if (v13 >> 60 != 15)
          goto LABEL_6;
        if (!Strong)
          return v5;
      }
      sub_C261DC((uint64_t)v29);

LABEL_26:
      v5 = 0;
      v13 = 0xF000000000000000;
      goto LABEL_27;
    }
    v5 = UIViewController.playActivityForwardedRecommendationData.getter();
    v7 = v8;
  }
  Strong = UIViewController.playActivityRecommendationDataSourceViewController.getter();
  if (v7 >> 60 == 15)
    goto LABEL_8;
LABEL_6:

  return v5;
}

uint64_t UIViewController.playActivityFeatureName.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_14F9EA0 != -1)
    swift_once(&qword_14F9EA0, sub_C7B8B4);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_14FF280);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_C3B070((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
  }
  else
  {
    sub_C261DC((uint64_t)v6);
  }
  return 0;
}

void UIViewController.playActivityFeatureName.setter()
{
  void *v0;
  const void *v1;
  id value;

  if (qword_14F9EA0 != -1)
    swift_once(&qword_14F9EA0, sub_C7B8B4);
  v1 = (const void *)qword_14FF280;
  value = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v0, v1, value, (char *)&dword_0 + 3);

}

uint64_t UIViewController.playActivityFeatureIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, "playActivityFeatureName");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  return _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0(v2, v4);
}

void UIViewController.playActivityFeatureIdentifier.setter(unsigned __int8 a1)
{
  void *v1;
  unint64_t v2;
  unint64_t v3;
  id v4;

  if (a1 == 18)
  {
    v2 = 0xE000000000000000;
  }
  else
  {
    PlayActivityFeatureIdentifier.rawValue.getter(a1);
    v2 = v3;
  }
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v1, "setPlayActivityFeatureName:", v4);

}

void (*UIViewController.playActivityFeatureIdentifier.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = v1;
  v3 = objc_msgSend(v1, "playActivityFeatureName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *(_BYTE *)(a1 + 8) = _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0(v4, v6);
  return sub_C7C820;
}

void sub_C7C820(uint64_t a1)
{
  int v2;
  void *v3;
  id v4;

  v2 = *(unsigned __int8 *)(a1 + 8);
  if (v2 != 18)
    PlayActivityFeatureIdentifier.rawValue.getter(v2);
  v3 = *(void **)a1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setPlayActivityFeatureName:", v4, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t UIViewController.playActivityFeatureNames(sourceChildViewController:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_105B360;
  v3 = objc_msgSend(v0, "playActivityFeatureName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  return v2;
}

uint64_t UIViewController.completePlayActivityFeatureNames.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = 0;
  do
  {
    v3 = v1;
    v4 = objc_msgSend(v1, "playActivityFeatureNamesWithSourceChildViewController:", v2);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

    sub_C18A04(v5);
    v1 = objc_msgSend(v3, "playActivityFeatureNameSourceViewController");
    v2 = v3;
  }
  while (v1);
  v6 = _swiftEmptyArrayStorage[2];
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = &_swiftEmptyArrayStorage[5];
    do
    {
      v12 = *(v7 - 1);
      v11 = *v7;
      v13 = HIBYTE(*v7) & 0xF;
      if ((*v7 & 0x2000000000000000) == 0)
        v13 = v12 & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_C058BC(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v9 = _swiftEmptyArrayStorage[2];
        v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1)
          sub_C058BC((char *)(v8 > 1), v9 + 1, 1);
        _swiftEmptyArrayStorage[2] = v9 + 1;
        v10 = &_swiftEmptyArrayStorage[2 * v9];
        v10[4] = v12;
        v10[5] = v11;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_C7CBC4((uint64_t)_swiftEmptyArrayStorage);
  v15 = v14;

  return v15;
}

void sub_C7CBC4(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;

  v1 = (char *)a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 < 2)
    return;
  v3 = 0;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 16 * v2 + 16;
  v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v8 = *((_QWORD *)v1 + 2);
    if (v4 >= v8)
      break;
    if (v6 >= v8)
      goto LABEL_13;
    v10 = *(_QWORD *)&v1[v3 + 32];
    v9 = *(_QWORD *)&v1[v3 + 40];
    v12 = *(_QWORD *)&v1[v7];
    v11 = *(_QWORD *)&v1[v7 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
      v1 = sub_D3F000((uint64_t)v1);
    v13 = &v1[v3];
    swift_bridgeObjectRelease();
    *((_QWORD *)v13 + 4) = v12;
    *((_QWORD *)v13 + 5) = v11;
    if (v6 >= *((_QWORD *)v1 + 2))
      goto LABEL_14;
    v14 = &v1[v7];
    swift_bridgeObjectRelease();
    *(_QWORD *)v14 = v10;
    *((_QWORD *)v14 + 1) = v9;
    v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 16;
    if (v5 == v4)
      return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t UIViewController.combinedPlayActivityFeatureName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, "completePlayActivityFeatureNames");
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  v3 = sub_5C150((unint64_t *)&qword_14FEF80, &qword_14FB868, (uint64_t)&protocol conformance descriptor for [A]);
  v4 = BidirectionalCollection<>.joined(separator:)(2109216, 0xE300000000000000, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t UIViewController.playActivityInformation.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "combinedPlayActivityFeatureName");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(1);
  return v2;
}

void UINavigationController.playActivityFeatureNames(sourceChildViewController:)(void *a1)
{
  void *v1;
  uint64_t v2;
  int64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = objc_msgSend(v1, "viewControllers");
  v6 = sub_4E684(0, &qword_14FF2B8, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!a1)
    goto LABEL_25;
  v8 = a1;
  sub_C7D31C((uint64_t)v8, v7);
  if ((v10 & 1) == 0)
  {
    v11 = v9;
    if (v9 < 0)
      goto LABEL_56;
    v3 = (unint64_t)v7 >> 62;
    if ((unint64_t)v7 >> 62)
    {
LABEL_57:
      if (v7 < 0)
        v37 = v7;
      else
        v37 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (v2 < 0)
      {
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain();
      v12 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (v12 >= (uint64_t)v11)
      {
LABEL_6:
        if ((v7 & 0xC000000000000001) != 0 && v11)
        {
          v13 = 0;
          do
          {
            v14 = v13 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v13);
            v13 = v14;
          }
          while (v11 != v14);
        }
        if (v3)
        {
          if (v7 < 0)
            v15 = v7;
          else
            v15 = v7 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v6 = _CocoaArrayWrapper.subscript.getter(0, v11, v15);
          v2 = v16;
          v12 = v17;
          v11 = v18;
          swift_bridgeObjectRelease_n(v7, 2);
          if ((v11 & 1) == 0)
            goto LABEL_18;
        }
        else
        {
          v12 = 0;
          v6 = v7 & 0xFFFFFFFFFFFFFF8;
          v2 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
          v11 = (2 * v11) | 1;
          if ((v11 & 1) == 0)
          {
LABEL_18:
            sub_C7D818(v6, v2, v12, v11);
            v7 = v19;

            swift_unknownObjectRelease(v6);
            goto LABEL_25;
          }
        }
        v20 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v21 = swift_unknownObjectRetain_n(v6, 2);
        v22 = (_QWORD *)swift_dynamicCastClass(v21, v20);
        if (!v22)
        {
          swift_unknownObjectRelease(v6);
          v22 = _swiftEmptyArrayStorage;
        }
        v3 = v22[2];
        swift_release();
        if (!__OFSUB__(v11 >> 1, v12))
        {
          v9 = v6;
          if (v3 == (v11 >> 1) - v12)
          {
            v7 = swift_dynamicCastClass(v6, v20);

            swift_unknownObjectRelease(v6);
            if (!v7)
            {
              swift_unknownObjectRelease(v6);
              v7 = (uint64_t)_swiftEmptyArrayStorage;
            }
            goto LABEL_25;
          }
          goto LABEL_64;
        }
LABEL_63:
        __break(1u);
LABEL_64:
        swift_unknownObjectRelease(v9);
        goto LABEL_18;
      }
    }
    else
    {
      v12 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
      if (v12 >= v9)
        goto LABEL_6;
    }
    __break(1u);
    goto LABEL_63;
  }

LABEL_25:
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v8 = (char *)swift_allocObject(v23, 48, 7);
  *((_OWORD *)v8 + 1) = xmmword_105B360;
  v24 = objc_msgSend(v1, "playActivityFeatureName");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v11 = v25;

  *((_QWORD *)v8 + 4) = v6;
  *((_QWORD *)v8 + 5) = v11;
  if ((unint64_t)v7 >> 62)
    goto LABEL_50;
  v1 = *(void **)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  while (v1)
  {
    if ((uint64_t)v1 < 1)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v6 = 0;
    v11 = (unint64_t)&type metadata for String;
    while (1)
    {
      v26 = (v7 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v7)
          : *(id *)(v7 + 8 * v6 + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, "playActivityFeatureNamesWithSourceChildViewController:", 0);
      v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, &type metadata for String);

      v3 = *(_QWORD *)(v29 + 16);
      v30 = *((_QWORD *)v8 + 2);
      v31 = v30 + v3;
      if (__OFADD__(v30, v3))
        break;
      if (v31 > *((_QWORD *)v8 + 3) >> 1)
      {
        if (v30 <= v31)
          v35 = v30 + v3;
        else
          v35 = *((_QWORD *)v8 + 2);
        v8 = sub_BCC9AC((_BYTE *)&dword_0 + 1, v35, 1, v8);
        v30 = *((_QWORD *)v8 + 2);
        if (*(_QWORD *)(v29 + 16))
        {
LABEL_37:
          if ((*((_QWORD *)v8 + 3) >> 1) - v30 < v3)
            goto LABEL_48;
          swift_arrayInitWithCopy(&v8[16 * v30 + 32]);
          if (v3)
          {
            v32 = *((_QWORD *)v8 + 2);
            v33 = __OFADD__(v32, v3);
            v34 = v32 + v3;
            if (v33)
              goto LABEL_49;
            *((_QWORD *)v8 + 2) = v34;
          }
          goto LABEL_30;
        }
      }
      else if (v3)
      {
        goto LABEL_37;
      }
      if (v3)
        goto LABEL_47;
LABEL_30:
      ++v6;
      swift_bridgeObjectRelease();

      if (v1 == (void *)v6)
        goto LABEL_54;
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    if (v7 < 0)
      v36 = v7;
    else
      v36 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v1 = (void *)_CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease();
  }
LABEL_54:
  swift_bridgeObjectRelease();
}

void sub_C7D31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      sub_4E684(0, &qword_14FF2B8, UIViewController_ptr);
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_C7D4B4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    __asm { BR              X9 }
  return 0;
}

void sub_C7D818(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        sub_4E684(0, &qword_14FF2B8, UIViewController_ptr);
        swift_arrayInitWithCopy(v8 + 4);
        return;
      }
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
      v8 = (_QWORD *)swift_allocObject(v7, 8 * v5 + 32, 7);
      v9 = _swift_stdlib_malloc_size_0(v8);
      v10 = v9 - 32;
      if (v9 < 32)
        v10 = v9 - 25;
      v8[2] = v5;
      v8[3] = (2 * (v10 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_11;
  }
}

_QWORD *sub_C7D904(const void *a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;

  if (!a2)
    return _swiftEmptyArrayStorage;
  if (a2 <= 0)
  {
    v5 = 8 * a2;
    v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF318);
    v5 = 8 * a2;
    v6 = (_QWORD *)swift_allocObject(v4, 8 * a2 + 32, 7);
    v7 = _swift_stdlib_malloc_size_0(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = a2;
    v6[3] = 2 * (v8 >> 3);
  }
  memcpy(v6 + 4, a1, v5);
  return v6;
}

_QWORD *sub_C7D9A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF308);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_C7DD90((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain();
  sub_55D68(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_C7DA88(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = _swift_stdlib_malloc_size_0(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_C7E548((uint64_t)(v4 + 4), v2, v1);
    v1 = v7;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v8 = v1;
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease();
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_C7DB7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF310);
  v4 = (_QWORD *)swift_allocObject(v3, 40 * v1 + 32, 7);
  v5 = _swift_stdlib_malloc_size_0(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  v6 = sub_C7DF8C((uint64_t)&v9, (uint64_t)(v4 + 4), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain();
  sub_55D68(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_C7DC6C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (!v6)
      {
LABEL_20:
        v8 = 0;
        goto LABEL_17;
      }
      v8 = v6 - 1;
      v9 = a4 + 16 * (v6 - 1);
      v10 = *(_QWORD *)(v9 + 40);
      *a2 = *(_QWORD *)(v9 + 32);
      a2[1] = v10;
      if (a3 == 1)
      {
LABEL_15:
        v6 = a3;
      }
      else if (v6 != 1)
      {
        v11 = 0;
        v12 = a3 - 2;
        v13 = (uint64_t *)(a4 + 16 * v6 + 8);
        v14 = a2 + 3;
        while (v6 + v11 - 1 <= *(_QWORD *)(a4 + 16))
        {
          v15 = *v13;
          *(v14 - 1) = *(v13 - 1);
          *v14 = v15;
          if (!(v12 + v11))
          {
            swift_bridgeObjectRetain();
            v8 = v6 + v11 - 2;
            goto LABEL_15;
          }
          swift_bridgeObjectRetain();
          --v11;
          v13 -= 2;
          v14 += 2;
          if (v6 + v11 == 1)
          {
            v8 = 0;
            goto LABEL_16;
          }
        }
        __break(1u);
        goto LABEL_19;
      }
LABEL_16:
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *(_QWORD *)(a4 + 16);
      v6 = 0;
    }
  }
  else
  {
    v8 = *(_QWORD *)(a4 + 16);
    v6 = 0;
  }
LABEL_17:
  *a1 = a4;
  a1[1] = v8;
  return v6;
}

uint64_t sub_C7DD90(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_C7DF8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    result = sub_138F24(*(_QWORD *)(a4 + 48) + 40 * v16, (uint64_t)v23);
    v17 = v24;
    v18 = v23[1];
    *(_OWORD *)v11 = v23[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(_QWORD *)(v11 + 32) = v17;
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v22;
      goto LABEL_36;
    }
  }
  v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v19);
  if (v20)
    goto LABEL_23;
  v21 = v12 + 2;
  ++v12;
  if (v19 + 1 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v12 = v19 + 1;
  if (v19 + 2 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_23;
  }
  v12 = v19 + 2;
  if (v19 + 3 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 3));
  if (v20)
  {
    v19 += 3;
    goto LABEL_23;
  }
  v21 = v19 + 4;
  v12 = v19 + 3;
  if (v19 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
LABEL_16:
    v19 = v21;
LABEL_23:
    v9 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v19 << 6);
    v12 = v19;
    goto LABEL_9;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

void (*sub_C7E194(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_C171B8(v6, a2, a3);
  return sub_1BBEB8;
}

uint64_t sub_C7E1E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  void (*v11)(_QWORD *);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15[4];

  v5 = result;
  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    result = swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      if (a3 < 0)
        v8 = a3;
      else
        v8 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      result = swift_bridgeObjectRelease(a3);
      if (v9 <= a2)
      {
        if (v7 >= 1)
        {
          sub_5C150((unint64_t *)&unk_14FF340, &qword_14FF338, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_14FF338);
            v11 = sub_45BD1C(v15, i, a3);
            v13 = *v12;
            swift_retain(*v12);
            ((void (*)(uint64_t **, _QWORD))v11)(v15, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease(a3);
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) <= a2)
      {
        type metadata accessor for BagProvider.Observer();
        swift_arrayInitWithCopy(v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_C7E390(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  void (*v11)(_QWORD *);
  id *v12;
  id v13;
  uint64_t v14;
  void (*v15[4])(id *);

  v5 = result;
  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    result = swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      if (a3 < 0)
        v8 = a3;
      else
        v8 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      result = swift_bridgeObjectRelease(a3);
      if (v9 <= a2)
      {
        if (v7 >= 1)
        {
          sub_5C150(&qword_14FF330, &qword_14FF328, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_14FF328);
            v11 = sub_45BC74(v15, i, a3);
            v13 = *v12;
            ((void (*)(void (**)(id *), _QWORD))v11)(v15, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease(a3);
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) <= a2)
      {
        sub_4E684(0, (unint64_t *)&qword_14FF320, NSError_ptr);
        swift_arrayInitWithCopy(v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_C7E548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  void (*v11)(_QWORD *);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease();
    if (!v7)
      return;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v6)
  {
    if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) <= a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2F0);
      swift_arrayInitWithCopy(a1);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v8 = a3;
  else
    v8 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease();
  if (v9 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_5C150(&qword_14FF300, &qword_14FF2F8, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain();
  for (i = 0; i != v7; ++i)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2F8);
    v11 = sub_C7E194(v15, i, a3);
    v13 = *v12;
    swift_unknownObjectRetain(*v12);
    ((void (*)(uint64_t **, _QWORD))v11)(v15, 0);
    *(_QWORD *)(a1 + 8 * i) = v13;
  }
  swift_bridgeObjectRelease();
}

uint64_t *NSUserDefaults.mobileiPod.unsafeMutableAddressor()
{
  if (qword_14F9EC0 != -1)
    swift_once(&qword_14F9EC0, sub_C7E81C);
  return &static NSUserDefaults.mobileiPod;
}

uint64_t NSUserDefaults.hasUserRequestedSubscriptionHidden.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t result;
  unsigned __int8 v3;
  _BYTE v4[24];
  uint64_t v5;

  v0 = sub_C48028();
  v1 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v0, v1, (uint64_t)v4);
  if (v5)
  {
    result = swift_dynamicCast(&v3, v4, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return v3;
  }
  else
  {
    sub_C261DC((uint64_t)v4);
    return 0;
  }
  return result;
}

uint64_t NSUserDefaults.hasUserRequestedSubscriptionHidden.setter(char a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[24];
  void *v6;

  v6 = &type metadata for Bool;
  v5[0] = a1;
  v1 = sub_C48028();
  v2 = sub_B9DEC0();
  return NSUserDefaults.subscript.setter((uint64_t)v5, v3, (uint64_t)&type metadata for NSUserDefaults.MobileiPod, v1, v2);
}

void *NSUserDefaults.MobileiPod.suiteName.unsafeMutableAddressor()
{
  return &static NSUserDefaults.MobileiPod.suiteName;
}

void sub_C7E81C()
{
  id v0;
  NSString v1;
  id v2;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  static NSUserDefaults.mobileiPod = (uint64_t)v2;
}

uint64_t static NSUserDefaults.mobileiPod.getter()
{
  uint64_t v0;
  id v1;

  if (qword_14F9EC0 != -1)
    swift_once(&qword_14F9EC0, sub_C7E81C);
  v0 = static NSUserDefaults.mobileiPod;
  v1 = (id)static NSUserDefaults.mobileiPod;
  return v0;
}

unint64_t static NSUserDefaults.MobileiPod.suiteName.getter()
{
  return 0xD000000000000014;
}

BOOL NSUserDefaults.MobileiPod.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6BA0, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

unint64_t NSUserDefaults.MobileiPod.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

Swift::Int sub_C7E954()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0xD00000000000001FLL, 0x8000000001102C80);
  return Hasher._finalize()();
}

uint64_t sub_C7E9A8(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD00000000000001FLL, 0x8000000001102C80);
}

Swift::Int sub_C7E9C4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0xD00000000000001FLL, 0x8000000001102C80);
  return Hasher._finalize()();
}

uint64_t sub_C7EA14@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6BD8, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_C7EA64(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x8000000001102C80;
}

void (*NSUserDefaults.hasUserRequestedSubscriptionHidden.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  char v6;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = sub_C48028();
  v3[5] = v4;
  v5 = sub_B9DEC0();
  v3[6] = v5;
  NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v4, v5, (uint64_t)v3);
  if (!v3[3])
  {
    sub_C261DC((uint64_t)v3);
    goto LABEL_5;
  }
  if ((swift_dynamicCast((char *)v3 + 57, v3, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v6 = *((_BYTE *)v3 + 57);
LABEL_6:
  *((_BYTE *)v3 + 56) = v6;
  return sub_C7EB44;
}

void sub_C7EB44(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  void *v7;

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v7 = &type metadata for Bool;
  v6[0] = v3;
  NSUserDefaults.subscript.setter((uint64_t)v6, a2, (uint64_t)&type metadata for NSUserDefaults.MobileiPod, v4, v5);
  free(v2);
}

unint64_t sub_C7EB9C()
{
  unint64_t result;

  result = qword_14FF350;
  if (!qword_14FF350)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NSUserDefaults.MobileiPod, &type metadata for NSUserDefaults.MobileiPod);
    atomic_store(result, (unint64_t *)&qword_14FF350);
  }
  return result;
}

uint64_t _s10MobileiPodOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_C7EC20 + 4 * byte_10A0648[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_C7EC40 + 4 * byte_10A064D[v4]))();
}

_BYTE *sub_C7EC20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_C7EC40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_C7EC48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_C7EC50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_C7EC58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_C7EC60(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NSUserDefaults.MobileiPod()
{
  return &type metadata for NSUserDefaults.MobileiPod;
}

id static ICUserIdentity.active.getter()
{
  uint64_t v0;

  return objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "activeAccount");
}

id static ICUserIdentityStore.activeAccountDSID.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v9;

  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "defaultIdentityStore");
  v2 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v9 = 0;
  v3 = objc_msgSend(v1, "DSIDForUserIdentity:outError:", v2, &v9);

  v4 = v9;
  if (!v3)
  {
    v5 = v4;
    v6 = _convertNSErrorToError(_:)(v4);

    swift_willThrow(v7);
    swift_errorRelease(v6);
    return 0;
  }
  return v3;
}

uint64_t static ICMusicKitRequestContext.music.getter()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5[4] = sub_C7FF3C;
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_23E9F0;
  v5[3] = &block_descriptor_299;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

id static ICURLSessionManager.musicSession.getter()
{
  return objc_msgSend((id)objc_opt_self(ICURLSessionManager), "highPrioritySession");
}

double ICURLBag.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  double result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend(v2, "valueForBagKey:", v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)((_QWORD *)a2, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t *ICClientInfo.music.unsafeMutableAddressor()
{
  if (qword_14F9EC8 != -1)
    swift_once(&qword_14F9EC8, sub_C7F8F8);
  return &static ICClientInfo.music;
}

void sub_C7EF60(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  objc_opt_self(ICMusicKitRequestContext);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend((id)objc_opt_self(ICClientInfo), "clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:", v5, v6);

    objc_msgSend(v3, "setClientInfo:", v7);
    v8 = (void *)objc_opt_self(ICUserIdentityStore);
    v9 = v4;
    v10 = objc_msgSend(v8, "defaultIdentityStore");
    objc_msgSend(v3, "setIdentityStore:", v10);

    v11 = (void *)objc_opt_self(ICUserIdentity);
    v12 = v9;
    v13 = objc_msgSend(v11, "activeAccount");
    objc_msgSend(v3, "setIdentity:", v13);

  }
}

void ICMusicSubscriptionStatusController.performDefaultActiveSubscriptionStatusRequest(completionHandler:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  __n128 v8;
  id v9;
  uint64_t v10;
  void *v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v5 = objc_allocWithZone((Class)ICStoreRequestContext);
  v16 = sub_C7FF40;
  v17 = 0;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_23E9F0;
  v15 = &block_descriptor_3_15;
  v6 = _Block_copy(&v12);
  v7 = objc_msgSend(v5, "initWithBlock:", v6);
  _Block_release(v6);
  v8 = swift_release();
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v8) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)ICMusicSubscriptionStatusRequest), "initWithStoreRequestContext:", v7);
    objc_msgSend(v9, "setShouldReturnLastKnownStatusOnly:", 1);
    v10 = swift_allocObject(&unk_13B2F98, 32, 7);
    *(_QWORD *)(v10 + 16) = a1;
    *(_QWORD *)(v10 + 24) = a2;
    v16 = sub_129E54;
    v17 = v10;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_21B54C;
    v15 = &block_descriptor_6_21;
    v11 = _Block_copy(&v12);
    swift_retain();
    objc_msgSend(v2, "performSubscriptionStatusRequest:withCompletionHandler:", v9, v11, swift_release().n128_f64[0]);
    _Block_release(v11);

  }
}

void sub_C7F2A0(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  objc_opt_self(ICStoreRequestContext);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)objc_opt_self(ICUserIdentityStore);
    v5 = a1;
    v6 = objc_msgSend(v4, "defaultIdentityStore");
    objc_msgSend(v3, "setIdentityStore:", v6);

    v7 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    objc_msgSend(v3, "setIdentity:", v7);

    objc_msgSend(v3, "setAllowsExpiredBags:", 1);
    v8 = objc_allocWithZone((Class)ICURLResponseAuthenticationProvider);
    v9 = v5;
    v10 = objc_msgSend(v8, "initWithUserInteractionLevel:", 1);
    objc_msgSend(v3, "setAuthenticationProvider:", v10);

  }
}

BOOL ICMusicSubscriptionStatusCapabilities.hasVoiceActivatedCatalogPlaybackOnly.getter(char a1)
{
  return (a1 & 3) == 2;
}

void static ICStoreRequestContext.default(withConfigurationBlock:)(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  void *v4;
  __n128 v5;
  _QWORD v6[4];
  _QWORD aBlock[6];

  v6[2] = a1;
  v6[3] = a2;
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = swift_allocObject(&unk_13B2FE8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_C7FF80;
  *(_QWORD *)(v3 + 24) = v6;
  aBlock[4] = sub_129E54;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E9F0;
  aBlock[3] = &block_descriptor_12_17;
  v4 = _Block_copy(aBlock);
  objc_msgSend(v2, "initWithBlock:", v4, swift_retain().n128_f64[0]);
  _Block_release(v4);
  v5 = swift_release();
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v3, "", 0, 0, 0, 1, v5);
  swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
}

void sub_C7F50C(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  objc_opt_self(ICStoreRequestContext);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)objc_opt_self(ICUserIdentityStore);
    v8 = a1;
    v5 = objc_msgSend(v4, "defaultIdentityStore");
    objc_msgSend(v3, "setIdentityStore:", v5);

    v6 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    objc_msgSend(v3, "setIdentity:", v6);

    objc_msgSend(v3, "setAllowsExpiredBags:", 1);
    v7 = objc_msgSend(objc_allocWithZone((Class)ICURLResponseAuthenticationProvider), "initWithUserInteractionLevel:", 1);
    objc_msgSend(v3, "setAuthenticationProvider:", v7);

    if (qword_14F9ED0 != -1)
      swift_once(&qword_14F9ED0, sub_C7F948);
    objc_msgSend(v3, "setClientInfo:", static ICClientInfo.storeFlow);

  }
}

void sub_C7F684(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  objc_opt_self(ICStoreRequestContext);
  v4 = swift_dynamicCastObjCClass(a1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void *)objc_opt_self(ICUserIdentityStore);
    v9 = a1;
    v7 = objc_msgSend(v6, "defaultIdentityStore");
    objc_msgSend(v5, "setIdentityStore:", v7);

    v8 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    objc_msgSend(v5, "setIdentity:", v8);

    a2(v5);
  }
}

id static ICStoreRequestContext.current.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v1 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:", v0);

  return v1;
}

uint64_t static ICStoreRequestContext.storeFlow.getter()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)ICStoreRequestContext);
  v5[4] = sub_C7FF38;
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_23E9F0;
  v5[3] = &block_descriptor_15_11;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

uint64_t *ICClientInfo.storeFlow.unsafeMutableAddressor()
{
  if (qword_14F9ED0 != -1)
    swift_once(&qword_14F9ED0, sub_C7F948);
  return &static ICClientInfo.storeFlow;
}

id sub_C7F8F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)ICClientInfo), "initWithSystemApplicationType:", 0);
  static ICClientInfo.music = (uint64_t)result;
  return result;
}

id static ICClientInfo.music.getter()
{
  return sub_C44F68(&qword_14F9EC8, (id *)&static ICClientInfo.music, (uint64_t)sub_C7F8F8);
}

void *sub_C7F948()
{
  void *result;

  result = sub_C7F964();
  static ICClientInfo.storeFlow = (uint64_t)result;
  return result;
}

void *sub_C7F964()
{
  id v0;
  id v1;
  unint64_t v2;
  void *v3;
  NSString v4;
  void *v6;
  _QWORD v7[4];

  v0 = objc_msgSend(objc_allocWithZone((Class)ICClientInfo), "initWithSystemApplicationType:", 0);
  v1 = objc_msgSend(v0, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(v7, v1);
  swift_unknownObjectRelease(v1);
  v2 = sub_C80334();
  swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v2, 7);
  v3 = v6;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setBagProfileVersion:", v4);

  return v3;
}

id static ICClientInfo.storeFlow.getter()
{
  return sub_C44F68(&qword_14F9ED0, (id *)&static ICClientInfo.storeFlow, (uint64_t)sub_C7F948);
}

double ICURLBag.subscript.getter@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  NSString v3;
  id v4;
  double result;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "valueForBagKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)((_QWORD *)a1, v4);
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t ICURLBag.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];
  _OWORD v65[2];
  uint64_t v66;

  v5 = v4;
  v6 = v3;
  v10 = type metadata accessor for Optional(0, a2);
  __chkstk_darwin(v10);
  v13 = (char *)&v52 - v12;
  if (!*(_QWORD *)(a1 + 16))
  {
    v31 = sub_C7FF98();
    v32 = swift_allocError(&type metadata for ICURLBag.Error, v31, 0, 0);
    *(_OWORD *)v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    *(_QWORD *)(v33 + 32) = 0;
    *(_BYTE *)(v33 + 40) = 2;
    return swift_willThrow(v32);
  }
  v60 = v11;
  v66 = a1;
  v14 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v15 = v14;
  sub_BCEC50(0, 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v6, "valueForBagKey:", v16, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v17)
  {
    swift_bridgeObjectRelease();
    v34 = sub_C7FF98();
    v32 = swift_allocError(&type metadata for ICURLBag.Error, v34, 0, 0);
    *(_QWORD *)v35 = v15;
    *(_BYTE *)(v35 + 40) = 0;
    return swift_willThrow(v32);
  }
  v54 = v10;
  v55 = a3;
  v57 = v13;
  v58 = a2;
  v56 = v5;
  _bridgeAnyObjectToAny(_:)(v64, v17);
  swift_unknownObjectRelease(v17);
  sub_50CA4(v64, v65);
  sub_95094((uint64_t)v65, (uint64_t)v64);
  v18 = v66;
  v19 = *(_QWORD *)(v66 + 16);
  v59 = v15;
  if (v19)
  {
    v20 = v15;
    v21 = 0;
    v53 = v20;
    v22 = v20;
    while (1)
    {
      v23 = *(void **)(v18 + 8 * v21 + 32);
      sub_95094((uint64_t)v64, (uint64_t)&v62);
      v24 = v23;
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
      if (!swift_dynamicCast(&v61, &v62, (char *)&type metadata for Any + 8, v25, 6))
      {
        swift_bridgeObjectRelease();
        v46 = sub_C7FF98();
        swift_allocError(&type metadata for ICURLBag.Error, v46, 0, 0);
        v48 = v47;
        *v47 = v24;
        sub_95094((uint64_t)v64, (uint64_t)(v47 + 1));
        *((_BYTE *)v48 + 40) = 1;
        goto LABEL_22;
      }
      v26 = v61;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      if (*(_QWORD *)(v26 + 16) && (v29 = sub_21BAD0(v27, v28), (v30 & 1) != 0))
      {
        sub_95094(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v62);
      }
      else
      {
        v62 = 0u;
        v63 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v63 + 1))
        break;
      ++v21;
      __swift_destroy_boxed_opaque_existential_1(v64);

      sub_50CA4(&v62, v64);
      v22 = v24;
      if (v19 == v21)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    sub_C261DC((uint64_t)&v62);
    v49 = sub_C7FF98();
    swift_allocError(&type metadata for ICURLBag.Error, v49, 0, 0);
    *(_QWORD *)v50 = v24;
    *(_BYTE *)(v50 + 40) = 0;
LABEL_22:
    v51 = v24;
    swift_willThrow(v51);

  }
  else
  {
    v24 = v15;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_95094((uint64_t)v64, (uint64_t)&v62);
    v38 = v57;
    v37 = v58;
    v39 = swift_dynamicCast(v57, &v62, (char *)&type metadata for Any + 8, v58, 6);
    v40 = *(_QWORD *)(v37 - 8);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    if ((v39 & 1) != 0)
    {
      v41(v38, 0, 1, v37);

      __swift_destroy_boxed_opaque_existential_1(v64);
      __swift_destroy_boxed_opaque_existential_1(v65);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v55, v38, v37);
    }
    v41(v38, 1, 1, v37);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v54);
    v42 = sub_C7FF98();
    swift_allocError(&type metadata for ICURLBag.Error, v42, 0, 0);
    v44 = v43;
    *v43 = v24;
    v45 = sub_95094((uint64_t)v64, (uint64_t)(v43 + 1));
    *((_BYTE *)v44 + 40) = 1;
    swift_willThrow(v45);

  }
  __swift_destroy_boxed_opaque_existential_1(v64);
  return __swift_destroy_boxed_opaque_existential_1(v65);
}

BOOL static ICEnvironmentMonitorThermalPressureLevel.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

uint64_t block_copy_helper_295(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_295(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C7FF5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_C7FF80(void *a1)
{
  uint64_t v1;

  sub_C7F684(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_C7FF88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_C7FF98()
{
  unint64_t result;

  result = qword_14FF358;
  if (!qword_14FF358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ICURLBag.Error, &type metadata for ICURLBag.Error);
    atomic_store(result, (unint64_t *)&qword_14FF358);
  }
  return result;
}

unint64_t sub_C7FFE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF360;
  if (!qword_14FF360)
  {
    type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(255);
    result = swift_getWitnessTable(&unk_109A58C, v1);
    atomic_store(result, (unint64_t *)&qword_14FF360);
  }
  return result;
}

void _s5ErrorOwxx(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  if (v2 == 1)
  {

    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 8));
  }
  else if (!v2)
  {

  }
}

uint64_t _s5ErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  __int128 v11;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v6 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = a2 + 8;
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v8;
    v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    v10 = v6;
    v9(a1 + 8, v7, v8);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 0;
    v5 = v4;
  }
  return a1;
}

uint64_t _s5ErrorOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  __int128 v13;
  __int128 v14;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 8));
    }
    else if (!v4)
    {

    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = (uint64_t)a2 + 8;
      v10 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 32) = v10;
      v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
      v12 = v8;
      v11(a1 + 8, v9, v10);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v13 = *a2;
      v14 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v14;
    }
    else
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      v7 = v6;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5ErrorOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 8));
    }
    else if (!v4)
    {

    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for ICURLBag.Error()
{
  return &type metadata for ICURLBag.Error;
}

unint64_t sub_C80334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF368;
  if (!qword_14FF368)
  {
    v1 = objc_opt_self(ICMutableClientInfo);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FF368);
  }
  return result;
}

unint64_t EnvironmentVariable.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t EnvironmentVariable.isEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = _s9MusicCore19EnvironmentVariableO5valueSSSgvg_0();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    if (v0 == 49 && v1 == 0xE100000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v0, v1, 49, 0xE100000000000000, 0) & 1) != 0
      || v2 == 1702195828 && v3 == 0xE400000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 1702195828, 0xE400000000000000, 0) & 1) != 0
      || v2 == 5457241 && v3 == 0xE300000000000000)
    {
      v4 = 1;
    }
    else
    {
      v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 5457241, 0xE300000000000000, 0);
    }
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

BOOL EnvironmentVariable.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6C10, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

Swift::Int sub_C804E0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0xD000000000000013, 0x8000000001102F50);
  return Hasher._finalize()();
}

uint64_t sub_C80534(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD000000000000013, 0x8000000001102F50);
}

Swift::Int sub_C80550()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0xD000000000000013, 0x8000000001102F50);
  return Hasher._finalize()();
}

uint64_t sub_C805A0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6C48, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_C805F0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000001102F50;
}

uint64_t _s9MusicCore19EnvironmentVariableO5valueSSSgvg_0()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v1 = objc_msgSend(v0, "environment");

  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_21BAD0(0xD000000000000013, 0x8000000001102F50), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
  }
  swift_bridgeObjectRelease(v2);
  return v5;
}

unint64_t sub_C806F0()
{
  unint64_t result;

  result = qword_14FF370;
  if (!qword_14FF370)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EnvironmentVariable, &type metadata for EnvironmentVariable);
    atomic_store(result, (unint64_t *)&qword_14FF370);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EnvironmentVariable(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_C80774 + 4 * asc_10A07C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_C80794 + 4 * byte_10A07C5[v4]))();
}

_BYTE *sub_C80774(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_C80794(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_C8079C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_C807A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_C807AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_C807B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentVariable()
{
  return &type metadata for EnvironmentVariable;
}

uint64_t sub_C807D0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14FF378);
  __swift_project_value_buffer(v0, (uint64_t)qword_14FF378);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x6E49646567617453, 0xED00006C6C617473);
}

uint64_t static StagedInstall.current()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v26;
  uint64_t v27;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - v5;
  if (qword_14FA618 != -1)
    swift_once(&qword_14FA618, sub_D75398);
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    if (qword_14F9ED8 != -1)
      swift_once(&qword_14F9ED8, sub_C807D0);
    v27 = v1;
    v7 = type metadata accessor for Logger(0);
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_14FF378);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "Checking for a staged install of Music", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    URL.init(fileURLWithPath:)(0xD00000000000002FLL, 0x8000000001106A60);
    v12 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL.path.getter(v12);
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v12, "fileExistsAtPath:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v18 = Logger.logObject.getter(v17);
    v19 = v18;
    if (v16)
    {
      v20 = static os_log_type_t.error.getter(v18);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_0, v19, v20, "Found Music.app in staged_system_apps", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      Data.init(contentsOf:options:)(v6, 0);
      __asm { BR              X10 }
    }
    v22 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v19, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_0, v19, v22, "✅ No staged copy found", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v27);
  }
  return 2;
}

void sub_C80FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_C81000(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0xC811E4);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_C81208(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_C81264()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_C80FA0((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_50C60(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_C8142C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_C80FA0(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_C814E0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_C81524()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_C81558 + *((int *)qword_C81618 + (v0 >> 62))))();
}

uint64_t sub_C81568@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_50CB4(v2, v1);
      sub_C81208(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t storeEnumTagSinglePayload for StagedInstall(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_C81674 + 4 * byte_10A0889[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_C816A8 + 4 * asc_10A0884[v4]))();
}

uint64_t sub_C816A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C816B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC816B8);
  return result;
}

uint64_t sub_C816C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC816CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_C816D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C816D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StagedInstall()
{
  return &type metadata for StagedInstall;
}

char *sub_C816F4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  UIImage *v6;
  UIImage *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v3 = (char *)_swiftEmptyArrayStorage;
    v4 = 4;
    v16 = v2;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (UIImage *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : (UIImage *)*(id *)(a1 + 8 * v4);
      v7 = v6;
      v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v9 = sub_C825BC(v4 - 4, v6);
      v11 = v10;

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = sub_BCC9AC(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
        v13 = *((_QWORD *)v3 + 2);
        v12 = *((_QWORD *)v3 + 3);
        if (v13 >= v12 >> 1)
          v3 = sub_BCC9AC((char *)(v12 > 1), v13 + 1, 1, v3);
        *((_QWORD *)v3 + 2) = v13 + 1;
        v5 = &v3[16 * v13];
        *((_QWORD *)v5 + 4) = v9;
        *((_QWORD *)v5 + 5) = v11;
        v2 = v16;
      }
      ++v4;
      if (v8 == v2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v3 = (char *)_swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return v3;
}

uint64_t sub_C81868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  __int128 v14;
  unint64_t v15;
  BOOL v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  Swift::String v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v2 = v1;
  v4 = type metadata accessor for URL.DirectoryHint(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v67 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 64);
  v55 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v56 = (unint64_t)(v9 + 63) >> 6;
  v58 = enum case for URL.DirectoryHint.inferFromPath(_:);
  v63 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v52 = (char *)_swiftEmptyArrayStorage;
  *(_QWORD *)&v14 = 136446210;
  v54 = v14;
  v53 = (char *)&type metadata for Any + 8;
  v57 = v6;
  while (1)
  {
    if (v11)
    {
      v64 = (v11 - 1) & v11;
      v65 = v13;
      v15 = __clz(__rbit64(v11)) | (v13 << 6);
      goto LABEL_22;
    }
    v16 = __OFADD__(v13, 1);
    v17 = v13 + 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v56)
      goto LABEL_38;
    v18 = *(_QWORD *)(v55 + 8 * v17);
    if (!v18)
      break;
LABEL_21:
    v64 = (v18 - 1) & v18;
    v65 = v17;
    v15 = __clz(__rbit64(v18)) + (v17 << 6);
LABEL_22:
    v20 = 16 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v63 + 48) + v20);
    v22 = *v21;
    v23 = (void *)v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(v63 + 56) + v20);
    v26 = *v24;
    v25 = v24[1];
    swift_bridgeObjectRetain();
    sub_50CB4(v26, v25);
    if (qword_14F9EE0 != -1)
      swift_once(&qword_14F9EE0, sub_C82418);
    __swift_project_value_buffer(v6, (uint64_t)qword_14FF390);
    v68 = 47;
    v69 = 0xE100000000000000;
    v27._countAndFlagsBits = v22;
    v66 = v23;
    v27._object = v23;
    String.append(_:)(v27);
    v28 = v60;
    v29 = v61;
    v30 = v62;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, v58, v62);
    v31 = sub_B9DEC0();
    v32 = v67;
    URL.appending<A>(path:directoryHint:)(&v68, v28, &type metadata for String, v31);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
    swift_bridgeObjectRelease(v69);
    v33 = Data.write(to:options:)(v32, 0, v26, v25);
    if (v2)
    {
      if (qword_14F9EE8 != -1)
        swift_once(&qword_14F9EE8, sub_C82540);
      v34 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v34, (uint64_t)qword_14FF3A8);
      swift_errorRetain(v2);
      v35 = swift_errorRetain(v2);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v68 = v39;
        *(_DWORD *)v38 = v54;
        v70 = v2;
        swift_errorRetain(v2);
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
        v41 = (char *)String.init<A>(describing:)(&v70, v40);
        v43 = v42;
        *(_QWORD *)(v38 + 4) = sub_BA95EC(v41, v42, &v68);
        swift_bridgeObjectRelease(v43);
        swift_errorRelease(v2);
        swift_errorRelease(v2);
        _os_log_impl(&dword_0, v36, v37, "Tap-to-Radar Attachment file write failed with error: %{public}s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, v53);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

      }
      else
      {

        swift_errorRelease(v2);
        swift_errorRelease(v2);
      }
      swift_errorRelease(v2);
      v6 = v57;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v57);
      swift_bridgeObjectRelease(v66);
      result = sub_50C60(v26, v25);
      v2 = 0;
    }
    else
    {
      v44 = v67;
      v45 = URL.path.getter(v33);
      v47 = v46;
      v6 = v57;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v57);
      swift_bridgeObjectRelease(v66);
      sub_50C60(v26, v25);
      result = swift_isUniquelyReferenced_nonNull_native(v52);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_BCC9AC(0, *((_QWORD *)v52 + 2) + 1, 1, v52);
        v52 = (char *)result;
      }
      v49 = *((_QWORD *)v52 + 2);
      v48 = *((_QWORD *)v52 + 3);
      if (v49 >= v48 >> 1)
      {
        result = (uint64_t)sub_BCC9AC((char *)(v48 > 1), v49 + 1, 1, v52);
        v52 = (char *)result;
      }
      v50 = v52;
      *((_QWORD *)v52 + 2) = v49 + 1;
      v51 = &v50[16 * v49];
      *((_QWORD *)v51 + 4) = v45;
      *((_QWORD *)v51 + 5) = v47;
    }
    v11 = v64;
    v13 = v65;
  }
  v19 = v17 + 1;
  if (v17 + 1 >= v56)
    goto LABEL_38;
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v17 + 2;
  if (v17 + 2 >= v56)
    goto LABEL_38;
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v17 + 3;
  if (v17 + 3 >= v56)
    goto LABEL_38;
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v17 + 4;
  if (v17 + 4 >= v56)
  {
LABEL_38:
    swift_release(v63);
    return (uint64_t)v52;
  }
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
  {
LABEL_20:
    v17 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v56)
      goto LABEL_38;
    v18 = *(_QWORD *)(v55 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_C81E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v70 = a3;
  v71 = a4;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE9D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URLComponents(0);
  __chkstk_darwin(v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA618 != -1)
  {
    v69 = a7;
    v59 = v20;
    swift_once(&qword_14FA618, sub_D75398);
    v20 = v59;
    a7 = v69;
  }
  if (static DeviceCapabilities.isInternalInstall != 1)
  {
    v29 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a9, 1, 1, v29);
  }
  v69 = a7;
  v23 = v20;
  URLComponents.init(string:)(0xD000000000000012, 0x8000000001106A90);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v19);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v66 = v23;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v18, v19);
  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v60 = a5;
    else
      v60 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v61 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(a5);
    v67 = a8;
    if (v61)
      goto LABEL_8;
  }
  else
  {
    v25 = *(_QWORD *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8));
    v67 = a8;
    if (v25)
    {
LABEL_8:
      v26 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      if (qword_14F9EE0 != -1)
        swift_once(&qword_14F9EE0, sub_C82418);
      v27 = type metadata accessor for URL(0);
      __swift_project_value_buffer(v27, (uint64_t)qword_14FF390);
      NSFileManager.createDirectoryIfNeeded(at:)();
      v28 = a2;

      goto LABEL_13;
    }
  }
  if (*(_QWORD *)(a6 + 16))
    goto LABEL_8;
  v28 = a2;
LABEL_13:
  v30 = swift_bridgeObjectRetain();
  v31 = sub_C816F4(v30);
  swift_bridgeObjectRelease(a5);
  v64 = sub_C81868(a6);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBF40);
  v33 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v34 = swift_allocObject(v32, ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ 8 * *(_QWORD *)(v33 + 72), *(unsigned __int8 *)(v33 + 80) | 7);
  *(_OWORD *)(v34 + 16) = xmmword_10618F0;
  URLQueryItem.init(name:value:)(0x656C746954, 0xE500000000000000, a1, v28);
  URLQueryItem.init(name:value:)(0x7470697263736544, 0xEB000000006E6F69, v70, v71);
  v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v36 = objc_msgSend(v35, "bundleIdentifier");

  v68 = a9;
  v65 = v19;
  v63 = v34;
  if (v36)
  {
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  URLQueryItem.init(name:value:)(0x4449656C646E7542, 0xE800000000000000, v37, v39);
  swift_bridgeObjectRelease(v39);
  v72 = (uint64_t)v31;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  v41 = sub_C702D0();
  v42 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v40, v41);
  v44 = v43;
  URLQueryItem.init(name:value:)(0x68736E6565726353, 0xEA0000000000746FLL, v42, v43);
  swift_bridgeObjectRelease(v44);
  v45 = v64;
  v72 = v64;
  v46 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v40, v41);
  v48 = v47;
  URLQueryItem.init(name:value:)(0x656D686361747441, 0xEB0000000073746ELL, v46, v47);
  swift_bridgeObjectRelease(v48);
  v72 = v69;
  v49 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v40, v41);
  v51 = v50;
  URLQueryItem.init(name:value:)(0x7364726F7779654BLL, 0xE800000000000000, v49, v50);
  swift_bridgeObjectRelease(v51);
  v72 = (uint64_t)v31;
  sub_C18718(v45);
  v52 = *(_QWORD *)(v72 + 16);
  swift_bridgeObjectRelease(v72);
  if (v52)
    v53 = 49;
  else
    v53 = 0;
  if (v52)
    v54 = 0xE100000000000000;
  else
    v54 = 0;
  URLQueryItem.init(name:value:)(0x6E4F6574656C6544, 0xEE00686361747441, v53, v54);
  swift_bridgeObjectRelease(v54);
  if ((v67 & 1) != 0)
    v55 = 49;
  else
    v55 = 0;
  if ((v67 & 1) != 0)
    v56 = 0xE100000000000000;
  else
    v56 = 0;
  URLQueryItem.init(name:value:)(0xD00000000000001ALL, 0x8000000001106AB0, v55, v56);
  v57 = swift_bridgeObjectRelease(v56);
  v58 = URLComponents.queryItems.setter(v63, v57);
  URLComponents.url.getter(v58);
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v22, v65);
}

uint64_t sub_C82418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for URL.DirectoryHint(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  __swift_allocate_value_buffer(v7, qword_14FF390);
  __swift_project_value_buffer(v7, (uint64_t)qword_14FF390);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v0);
  return URL.init(filePath:directoryHint:relativeTo:)(0xD000000000000015, 0x8000000001106AF0, v3, v6);
}

uint64_t sub_C82540()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14FF3A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_14FF3A8);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x522D6F742D706154, 0xEC00000072616461);
}

uint64_t sub_C825BC(uint64_t a1, UIImage *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  unint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  NSData *v22;
  NSData *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  unint64_t v30;
  unint64_t v31;

  v4 = type metadata accessor for URL.DirectoryHint(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v29 - v13;
  if (qword_14F9EE0 != -1)
    swift_once(&qword_14F9EE0, sub_C82418);
  v15 = __swift_project_value_buffer(v8, (uint64_t)qword_14FF390);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  v30 = 0;
  v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v31);
  v30 = 0xD000000000000012;
  v31 = 0x8000000001106AD0;
  v29[1] = a1;
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18._countAndFlagsBits = 1735420462;
  v18._object = (void *)0xE400000000000000;
  String.append(_:)(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  v19 = sub_B9DEC0();
  URL.appending<A>(path:directoryHint:)(&v30, v7, &type metadata for String, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = swift_bridgeObjectRelease(v31);
  v21 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v21(v11, v8, v20);
  v22 = UIImageJPEGRepresentation(a2, 85.0);
  if (v22)
  {
    v23 = v22;
    v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

    Data.write(to:options:)(v14, 0, v24, v26);
    v22 = (NSData *)sub_50C60(v24, v26);
  }
  v27 = URL.path.getter(v22);
  ((void (*)(char *, uint64_t))v21)(v14, v8);
  return v27;
}

uint64_t static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  *(_BYTE *)(v3 + 89) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  return swift_task_switch(sub_C82A3C, v6, v7);
}

uint64_t sub_C82A3C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 89);
  v5 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 64) = v5;
  v6 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 72) = v6;
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v2;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 80) = v7;
  *v7 = v1;
  v7[1] = sub_C82B08;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 88, v5, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000001103250, sub_C8715C, v6, &type metadata for Bool);
}

uint64_t sub_C82B08()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_C8ADD4, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_C82B70(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF900);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_95094(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_50CA4(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_50CA4(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_50CA4(v37, v38);
    sub_50CA4(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_50CA4(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_55D68(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_C82F34(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF900);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v12);
    *(_QWORD *)&v39[0] = *v17;
    *((_QWORD *)&v39[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    v30 = v19;
    swift_dynamicCast(v34, &v30, &type metadata for Bool, (char *)&type metadata for Any + 8, 7);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_50CA4(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_50CA4(v38, v39);
    sub_50CA4(v39, &v35);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v31;
    *(_OWORD *)(v10 + 16) = v32;
    *(_QWORD *)(v10 + 32) = v33;
    sub_50CA4(&v35, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_55D68(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t *CloudLibrary.EnablementContext.action.unsafeMutableAddressor()
{
  if (qword_14F9EF0 != -1)
    swift_once(&qword_14F9EF0, sub_C83A68);
  return &static CloudLibrary.EnablementContext.action;
}

uint64_t *CloudLibrary.StatusObserver.shared.unsafeMutableAddressor()
{
  if (qword_14F9EF8 != -1)
    swift_once(&qword_14F9EF8, sub_C83C34);
  return &static CloudLibrary.StatusObserver.shared;
}

void CloudLibrary.EnablementContext.title.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_C8341C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x8000000001106BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v5 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

void CloudLibrary.EnablementContext.message.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_C83620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0xD000000000000079, 0x8000000001106F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v5 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

void UIView.CompressionResistancePriority.vertical.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

double (*UIView.CompressionResistancePriority.vertical.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t static CloudLibrary.UpdateContext.__derived_struct_equals(_:_:)(int a1, unsigned int a2, float a3, float a4)
{
  return (a3 == a4) & ~(a1 ^ a2);
}

BOOL sub_C837A8(float *a1, float *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

unint64_t CloudLibrary.FailureType.rawValue.getter(int a1)
{
  return ~a1 | 0xFFFFFFFFFFFFFF00;
}

Swift::Int sub_C837E4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(~v1);
  return Hasher._finalize()();
}

void sub_C83828()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(~(unint64_t)*v0);
}

Swift::Int sub_C83854()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(~v1);
  return Hasher._finalize()();
}

uint64_t sub_C83894@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore12CloudLibraryO11FailureTypeO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_C838BC(unint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = ~(unint64_t)*v1;
}

BOOL CloudLibrary.Status.shouldDisplayBanner.getter(uint64_t a1)
{
  if (a1 >> 30 == 1)
    return a1 & 1;
  return a1 >> 30 != 2 || (unint64_t)(a1 - 0x80000000) >= 3;
}

BOOL CloudLibrary.Status.shouldShowDismissButton.getter(uint64_t a1)
{
  return a1 >> 30 != 1 && (a1 >> 30 != 2 || a1 != 2147483652);
}

BOOL CloudLibrary.Status.shouldShowActionButton.getter(uint64_t a1)
{
  return !(a1 >> 30) || a1 >> 30 == 2 && a1 == 2147483651;
}

void (*CloudLibrary.Status.action.getter(uint64_t a1))()
{
  if (!(a1 >> 30) || a1 >> 30 == 2 && a1 == 2147483651)
    return sub_C839A0;
  else
    return 0;
}

void sub_C839A0()
{
  if (qword_14F9EF8 != -1)
    swift_once(&qword_14F9EF8, sub_C83C34);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
}

BOOL CloudLibrary.Status.shouldShowLoadingView.getter(uint64_t a1)
{
  return a1 >> 30 == 1 || a1 >> 30 == 2 && a1 == 2147483652;
}

unint64_t CloudLibrary.Status.progress.getter(unint64_t a1)
{
  unint64_t v1;

  v1 = HIDWORD(a1);
  if ((a1 & 0xC0000000) != 0x40000000)
    v1 = 0;
  return v1 | ((unint64_t)((a1 & 0xC0000000) != 0x40000000) << 32);
}

uint64_t sub_C83A5C(uint64_t *a1, uint64_t *a2)
{
  return _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_C83A68()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v15[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000011072D0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  v13 = v12;
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  static CloudLibrary.EnablementContext.action = v11;
  unk_15821C0 = v13;
  return result;
}

uint64_t static CloudLibrary.EnablementContext.action.getter()
{
  uint64_t v0;

  if (qword_14F9EF0 != -1)
    swift_once(&qword_14F9EF0, sub_C83A68);
  v0 = static CloudLibrary.EnablementContext.action;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_C83C34()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for CloudLibrary.StatusObserver(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_C83CB0();
  static CloudLibrary.StatusObserver.shared = result;
  return result;
}

double static CloudLibrary.StatusObserver.shared.getter()
{
  double result;

  if (qword_14F9EF8 != -1)
    swift_once(&qword_14F9EF8, sub_C83C34);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_C83CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  double v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  void *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v48[152];
  _QWORD v49[2];
  char v50;
  __int128 v51;
  uint64_t v52;
  char v53;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF3F8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v48[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50 = 2;
  v49[0] = 0xD000000000000014;
  v49[1] = 0x8000000001103050;
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v7 = sub_B9DEC0();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v50, (uint64_t)v6, (uint64_t)v49, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Bool, v7, (char *)&v51);
  v8 = v52;
  v9 = v53;
  *(_OWORD *)(v1 + 16) = v51;
  *(_QWORD *)(v1 + 32) = v8;
  *(_BYTE *)(v1 + 40) = v9;
  *(_QWORD *)(v1 + 48) = _swiftEmptyArrayStorage;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v10 = static ApplicationCapabilities.Controller.shared;
  *(_QWORD *)(v1 + 56) = static ApplicationCapabilities.Controller.shared;
  *(_QWORD *)(v1 + 64) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  v11 = v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status;
  *(_QWORD *)&v51 = 0x80000000;
  swift_retain(v10);
  Published.init(initialValue:)(&v51, &type metadata for CloudLibrary.Status);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 32))(v11, v5, v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE300);
  inited = swift_initStackObject(v12, v48);
  *(_QWORD *)&v14 = 3;
  *(_OWORD *)(inited + 16) = xmmword_1060460;
  if (qword_14F9DC8 != -1)
    swift_once(&qword_14F9DC8, sub_C44D88);
  v15 = (void *)static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
  v16 = *(_QWORD *)(v1 + 56);
  UIScreen.Dimensions.size.getter(v14);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(inited + 40) = v18;
  v19 = qword_14F9DE8;
  v20 = v15;
  *(_QWORD *)&v21 = swift_retain(v16).n128_u64[0];
  if (v19 != -1)
    swift_once(&qword_14F9DE8, sub_C44EC8);
  v22 = (void *)static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
  v23 = *(_QWORD *)(v1 + 56);
  v24 = UIScreen.Dimensions.size.getter(v21);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(inited + 80) = v26;
  v27 = (void *)MPCloudControllerCloudLibraryFailureDidChangeNotification;
  UIScreen.Dimensions.size.getter(v24);
  *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 112) = v28;
  *(_QWORD *)(inited + 120) = v29;
  v30 = swift_allocObject(&unk_13B32B0, 24, 7);
  swift_weakInit(v30 + 16);
  v31 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v31, 48, 7);
  v32 = v22;
  swift_retain(v23);
  v33 = v27;
  v34 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_C8AC0C, v30);
  swift_beginAccess(v1 + 72, &v51, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v37 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)(v1 + 72) & 0xFFFFFFFFFFFFFF8));
  v36 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)(v1 + 72) & 0xFFFFFFFFFFFFFF8));
  if (v37 >= v36 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
  v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v34);
  specialized Array._endMutation()(v38);
  swift_endAccess(&v51);
  v39 = (void *)MPCloudControllerIsUpdateInProgressDidChangeNotification;
  v40 = (void *)objc_opt_self(MPCloudController);
  v41 = v39;
  v42 = objc_msgSend(v40, "sharedCloudController");
  v43 = swift_allocObject(&unk_13B32B0, 24, 7);
  swift_weakInit(v43 + 16);
  v44 = type metadata accessor for NotificationObserver();
  swift_allocObject(v44, 64, 7);
  v45 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v41, (uint64_t)v42, 1, 1, (uint64_t)sub_C8AC14, v43);
  v46 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = v45;
  swift_release(v46);
  return v1;
}

uint64_t property wrapper backing initializer of CloudLibrary.StatusObserver.status(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for CloudLibrary.Status);
}

uint64_t sub_C84108(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 aBlock;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = *(_QWORD *)(result + 56);
    KeyPath = swift_getKeyPath(&unk_10A0DC8);
    v5 = swift_getKeyPath(&unk_10A0DF0);
    static Published.subscript.getter(&aBlock, v3, KeyPath, v5);
    swift_release(KeyPath);
    swift_release(v5);
    v6 = v14;
    v7 = v15;
    v8 = v16;
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);

    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_C84570(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  double (*v36)();
  _QWORD *v37;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19, v30, v31, aBlock, v33, v34, v35, v36);
  v21 = (_QWORD *)swift_allocObject(&unk_13B39A8, 40, 7);
  v21[2] = a2;
  v21[3] = a1;
  v21[4] = a3;
  v36 = sub_C8AC58;
  v37 = v21;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_42D124;
  v35 = &block_descriptor_86_3;
  v22 = _Block_copy(&aBlock);
  v23 = v37;
  swift_errorRetain(a2);
  v24 = a1;
  swift_retain(a3);
  v25 = swift_release(v23);
  static DispatchQoS.unspecified.getter(v25);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v26 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v28 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v27, v28, v6, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v30);
}

double sub_C8479C(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!a1 && a2)
  {
    v4 = a2;
    v5 = (unint64_t)objc_msgSend(v4, "integerValue");
    if (v5 > 0xFFFFFFFFFFFFFFF9)
    {
      v6 = ~v5;
      KeyPath = swift_getKeyPath(&unk_10A08D8);
      v8 = swift_getKeyPath(&unk_10A0900);
      static Published.subscript.getter(&v18, a3, KeyPath, v8);
      swift_release(KeyPath);
      swift_release(v8);
      v9 = v18;
      v10 = swift_getKeyPath(&unk_10A08D8);
      v11 = swift_getKeyPath(&unk_10A0900);
      v18 = v6;
      swift_retain(a3);
      static Published.subscript.setter(&v18, a3, v10, v11);
      sub_C85A14(v9);

      return result;
    }

  }
  v13 = swift_getKeyPath(&unk_10A08D8);
  v14 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(&v18, a3, v13, v14);
  swift_release(v13);
  swift_release(v14);
  v15 = v18;
  v16 = swift_getKeyPath(&unk_10A08D8);
  v17 = swift_getKeyPath(&unk_10A0900);
  v18 = 2147483651;
  swift_retain(a3);
  static Published.subscript.setter(&v18, a3, v16, v17);
  return sub_C85A14(v15);
}

double sub_C84930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_C86078();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

BOOL CloudLibrary.StatusObserver.shouldDisplayStatusBanner.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _BOOL4 v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v2 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(&v5, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = (unint64_t)(v5 - 2147483651) < 0xFFFFFFFFFFFFFFFDLL;
  if (v5 >> 30 != 2)
    v3 = 1;
  if (v5 >> 30 == 1)
    return v5 & 1;
  else
    return v3;
}

double sub_C84A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  double result;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  char v14;
  _BYTE v15[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v15, 0, 0);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v11 = *(_OWORD *)(v0 + 16);
  v12 = v2;
  v13 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF3E8);
  UserDefault.wrappedValue.getter(v4, (uint64_t)&v14);
  if ((v14 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_10A08D8);
    v7 = swift_getKeyPath(&unk_10A0900);
    static Published.subscript.getter(&v11, v0, KeyPath, v7);
    swift_release();
    swift_release();
    v8 = v11;
    v9 = swift_getKeyPath(&unk_10A08D8);
    v10 = swift_getKeyPath(&unk_10A0900);
    *(_QWORD *)&v11 = 2147483650;
    swift_retain();
    static Published.subscript.setter(&v11, v1, v9, v10);
    return sub_C85A14(v8);
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.hasDisregardedBanner.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF3E8);
  UserDefault.wrappedValue.getter(v1, (uint64_t)&v3);
  return v3;
}

double CloudLibrary.StatusObserver.hasDisregardedBanner.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[31];
  char v5;

  v5 = a1;
  swift_beginAccess(v1 + 16, v4, 33, 0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF3E8);
  UserDefault.wrappedValue.setter((uint64_t)&v5, v2);
  swift_endAccess(v4);
  return sub_C84A24();
}

void (*CloudLibrary.StatusObserver.hasDisregardedBanner.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess(v1 + 16, v3 + 4, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  *(_OWORD *)v3 = *(_OWORD *)(v1 + 16);
  v3[2] = v4;
  *((_BYTE *)v3 + 24) = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF3E8);
  v3[8] = v6;
  UserDefault.wrappedValue.getter(v6, (uint64_t)v3 + 25);
  return sub_C84CA0;
}

void sub_C84CA0(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v3 = *(_QWORD *)(*a1 + 56);
  v2 = *(_QWORD *)(*a1 + 64);
  v4 = *a1;
  *(_BYTE *)(*a1 + 26) = *(_BYTE *)(*a1 + 25);
  swift_beginAccess(v3 + 16, v1, 33, 0);
  UserDefault.wrappedValue.setter(v4 + 26, v2);
  swift_endAccess(v1);
  sub_C84A24();
  free(v1);
}

void CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  void *v27;
  _QWORD v28[5];
  uint64_t v29;
  _BYTE v30[80];

  if (a1)
  {
    v5 = swift_allocObject(&unk_13B3300, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = *(_QWORD **)(v2 + 48);
    swift_retain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    *(_QWORD *)(v2 + 48) = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_BCD1CC(0, v6[2] + 1, 1, v6);
      *(_QWORD *)(v2 + 48) = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_BCD1CC((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *(_QWORD *)(v2 + 48) = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = sub_BC040;
    v10[5] = v5;
  }
  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v12 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(v28, v2, KeyPath, v12);
  swift_release(v12);
  swift_release(KeyPath);
  v13 = v28[0];
  v14 = swift_getKeyPath(&unk_10A08D8);
  v15 = swift_getKeyPath(&unk_10A0900);
  v28[0] = 2147483652;
  swift_retain(v2);
  static Published.subscript.setter(v28, v2, v14, v15);
  sub_C85A14(v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF3F0);
  inited = swift_initStackObject(v16, v30);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCloudControllerEnableCloudLibraryOptionStartInitialImport);
  *(_QWORD *)(inited + 40) = v18;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary);
  *(_QWORD *)(inited + 64) = v19;
  *(_BYTE *)(inited + 72) = 1;
  v20 = sub_C269E4(inited);
  v21 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v21)
  {
    v22 = v21;
    sub_C82F34(v20);
    v24 = v23;
    swift_bridgeObjectRelease(v20);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    v26 = swift_allocObject(&unk_13B32B0, 24, 7);
    swift_weakInit(v26 + 16);
    v28[4] = sub_C89B48;
    v29 = v26;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 1107296256;
    v28[2] = sub_153944;
    v28[3] = &block_descriptor_300;
    v27 = _Block_copy(v28);
    objc_msgSend(v22, "enableCloudLibraryWithOptions:completionHandler:", isa, v27, swift_release(v29).n128_f64[0]);
    _Block_release(v27);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_C84FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[5];
  uint64_t v51;
  _QWORD v52[3];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_14F9F00 != -1)
      swift_once(&qword_14F9F00, sub_C898A8);
    v12 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v12, (uint64_t)qword_14FF3C0);
    swift_errorRetain(a1);
    v13 = swift_errorRetain(a1);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v47 = v5;
      v18 = v17;
      aBlock[0] = v17;
      *(_DWORD *)v16 = 136315138;
      v52[0] = a1;
      swift_errorRetain(a1);
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v20 = (char *)String.init<A>(describing:)(v52, v19);
      v22 = v21;
      *(_QWORD *)(v16 + 4) = sub_BA95EC(v20, v21, aBlock);
      swift_bridgeObjectRelease(v22);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl(&dword_0, v14, v15, "Failed to enable Cloud Library with error=%s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      v23 = v18;
      v5 = v47;
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      swift_errorRelease(a1);
      goto LABEL_12;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_14F9F00 != -1)
      swift_once(&qword_14F9F00, sub_C898A8);
    v24 = type metadata accessor for Logger(0);
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_14FF3C0);
    v14 = Logger.logObject.getter(v25);
    v26 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_0, v14, v26, "Successfully enabled Cloud Library", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }
  }

LABEL_12:
  swift_beginAccess(v11, v52, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v29 = result;
    v30 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    v38 = (void *)static OS_dispatch_queue.main.getter(v30, v31, v32, v33, v34, v35, v36, v37);
    v39 = swift_allocObject(&unk_13B3930, 32, 7);
    *(_QWORD *)(v39 + 16) = v29;
    *(_QWORD *)(v39 + 24) = a1;
    aBlock[4] = (uint64_t)sub_C8AC04;
    v51 = v39;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_42D124;
    aBlock[3] = (uint64_t)&block_descriptor_75_5;
    v40 = _Block_copy(aBlock);
    v41 = v51;
    swift_errorRetain(a1);
    swift_retain(v29);
    v42 = swift_release(v41);
    static DispatchQoS.unspecified.getter(v42);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v43 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
    v45 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v45, v4, v43);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v40);
    _Block_release(v40);

    v46 = swift_release(v29);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v46);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v10, v49);
  }
  return result;
}

uint64_t sub_C85478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(BOOL *);
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = a2 == 0;
    swift_bridgeObjectRetain();
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v7 = (void (*)(BOOL *))*(v5 - 1);
      v6 = *v5;
      v9 = v4;
      swift_retain(v6);
      v7(&v9);
      swift_release(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
  }
  return swift_bridgeObjectRelease(v2);
}

void CloudLibrary.StatusObserver.add(updateObserver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  _BYTE v21[8];
  uint64_t v22;
  _BYTE v23[24];

  v3 = v2;
  v6 = (_QWORD *)(v3 + 64);
  swift_beginAccess(v3 + 64, v23, 1, 0);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v7 + 32;
    swift_bridgeObjectRetain();
    do
    {
      Strong = swift_unknownObjectWeakLoadStrong(v9);
      if (Strong)
      {
        v11 = Strong;
        swift_unknownObjectRelease(Strong);
        if (v11 == a1)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  v22 = a2;
  swift_unknownObjectWeakInit(v21);
  ObjectType = swift_getObjectType();
  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v14 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(v20, v3, KeyPath, v14);
  swift_release();
  v15 = swift_release();
  (*(void (**)(_QWORD, uint64_t, uint64_t, __n128))(a2 + 8))(v20[0], ObjectType, a2, v15);
  sub_C89B68((uint64_t)v21, (uint64_t)v20);
  v16 = *(_QWORD **)(v3 + 64);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
  *(_QWORD *)(v3 + 64) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_BCD2F4(0, v16[2] + 1, 1, v16);
    *v6 = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_BCD2F4((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *v6 = v16;
  }
  v16[2] = v19 + 1;
  sub_C89BA0((uint64_t)v20, (uint64_t)&v16[2 * v19 + 4]);
  sub_64880((uint64_t)v21);
}

double CloudLibrary.StatusObserver.remove(updateObserver:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t i;
  uint64_t Strong;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[16];
  _BYTE v13[24];

  v3 = v1 + 64;
  *(_QWORD *)&result = swift_beginAccess(v1 + 64, v13, 0, 0).n128_u64[0];
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v7);
      if (Strong)
      {
        v10 = Strong;
        swift_unknownObjectRelease(Strong);
        if (v10 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess(v3, v11, 33, 0);
          sub_C857B0(i, (uint64_t)v12);
          sub_64880((uint64_t)v12);
          *(_QWORD *)&result = swift_endAccess(v11).n128_u64[0];
          return result;
        }
      }
      v7 += 16;
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_C857B0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v5 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_D3F014(v5);
    v5 = (_QWORD *)result;
  }
  v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    v8 = v7 - 1;
    v9 = &v5[2 * a1];
    sub_C89BA0((uint64_t)(v9 + 4), a2);
    result = swift_arrayInitWithTakeFrontToBack(v9 + 4, v9 + 6, v8 - a1, &type metadata for CloudLibrary.StatusObserver.InternalObserver);
    v5[2] = v8;
    *v2 = v5;
  }
  return result;
}

char *sub_C85850(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *v1;
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((result & 1) == 0)
  {
    result = sub_D3F028(v3);
    v3 = (uint64_t)result;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    v7 = *(unsigned __int8 *)(v3 + a1 + 32);
    memmove((void *)(v3 + a1 + 32), (const void *)(v3 + a1 + 33), v5 - 1 - a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
    return (char *)v7;
  }
  return result;
}

uint64_t sub_C858D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v5 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

double sub_C8594C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v5 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = v10;
  v7 = swift_getKeyPath(&unk_10A08D8);
  v8 = swift_getKeyPath(&unk_10A0900);
  v10 = v2;
  swift_retain();
  static Published.subscript.setter(&v10, v3, v7, v8);
  return sub_C85A14(v6);
}

double sub_C85A14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v5 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(&v19, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if ((_s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(v19, a1) & 1) == 0)
  {
    if (qword_14F9F00 != -1)
      swift_once(&qword_14F9F00, sub_C898A8);
    v7 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v7, (uint64_t)qword_14FF3C0);
    v8 = swift_retain_n(v2, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v19 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = swift_getKeyPath(&unk_10A08D8);
      v14 = swift_getKeyPath(&unk_10A0900);
      static Published.subscript.getter(&v18, v2, v13, v14);
      swift_release(v14);
      swift_release(v13);
      v15 = (char *)String.init<A>(describing:)(&v18, &type metadata for CloudLibrary.Status);
      v17 = v16;
      *(_QWORD *)(v11 + 4) = sub_BA95EC(v15, v16, &v19);
      swift_bridgeObjectRelease(v17);
      swift_release_n(v2, 2);
      _os_log_impl(&dword_0, v9, v10, "Status did change: %s", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2);
    }

    return sub_C869E8();
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.status.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v2 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_C85CAC(_QWORD *a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF3F8);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t sub_C85D10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v18[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8D8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v18[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16);
  v12(&v18[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status, v18, 33, 0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF3F8);
  Published.projectedValue.setter(v7, v14);
  v15 = swift_endAccess(v18);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v11, v4, v15);
}

double CloudLibrary.StatusObserver.$status.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF3F8);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

double sub_C85E80(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
  if (a1 == 2)
  {
    if (v2 != 2 && (v2 & 1) != 0)
    {
      v3 = HIDWORD(v2);
      goto LABEL_9;
    }
  }
  else
  {
    if (v2 == 2)
    {
      KeyPath = swift_getKeyPath(&unk_10A08D8);
      v5 = swift_getKeyPath(&unk_10A0900);
      static Published.subscript.getter(&v13, v1, KeyPath, v5);
      swift_release(v5);
      swift_release(KeyPath);
      v6 = v13;
      v7 = swift_getKeyPath(&unk_10A08D8);
      v8 = swift_getKeyPath(&unk_10A0900);
      v13 = 0x80000000;
LABEL_10:
      swift_retain(v1);
      static Published.subscript.setter(&v13, v1, v7, v8);
      return sub_C85A14(v6);
    }
    v3 = HIDWORD(v2);
    LODWORD(result) = HIDWORD(*(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext));
    if (((((a1 & 1) == 0) ^ v2) & (*((float *)&a1 + 1) == *((float *)&v2 + 1))) == 0 && (v2 & 1) != 0)
    {
LABEL_9:
      v10 = (v3 << 32) | 0x40000001;
      v11 = swift_getKeyPath(&unk_10A08D8);
      v12 = swift_getKeyPath(&unk_10A0900);
      static Published.subscript.getter(&v13, v1, v11, v12);
      swift_release(v12);
      swift_release(v11);
      v6 = v13;
      v7 = swift_getKeyPath(&unk_10A08D8);
      v8 = swift_getKeyPath(&unk_10A0900);
      v13 = v10;
      goto LABEL_10;
    }
  }
  return result;
}

double (*sub_C86028(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2);
  return sub_C8604C;
}

double sub_C8604C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v1 = a1[2];
  v3 = *a1;
  v4 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = v3;
  return sub_C85E80(v4);
}

void sub_C86078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  unsigned int v23;
  id v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v40;
  void (*v41)(_QWORD *, uint64_t);
  void *v42;
  __n128 v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD aBlock[5];
  uint64_t v64;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v2 - 8);
  v62 = v2;
  __chkstk_darwin(v2);
  v60 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  __chkstk_darwin(v4);
  v57 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTimeInterval(0);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  __chkstk_darwin(v6);
  v54 = (uint64_t *)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v53 = (uint64_t *)((char *)&v48 - v9);
  v10 = type metadata accessor for DispatchTime(0);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  __chkstk_darwin(v10);
  v50 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v49 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS.QoSClass(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void *)objc_opt_self(MPCloudController);
  v21 = objc_msgSend(v20, "sharedCloudController");
  if (!v21)
  {
    __break(1u);
    goto LABEL_13;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "isUpdateInProgress");

  v24 = objc_msgSend(v20, "sharedCloudController");
  if (!v24)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "isInitialImport");

  v27 = *(_QWORD *)(v1 + 88);
  if ((v23 & v26) == 1)
  {
    if (!v27)
    {
      v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
      *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 1;
      sub_C85E80(v28);
      sub_4E684(0, &qword_15017F0, OS_dispatch_source_ptr);
      sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.userInteractive(_:), v16);
      v29 = (void *)static OS_dispatch_queue.global(qos:)(v19);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      aBlock[0] = _swiftEmptyArrayStorage;
      v30 = sub_4DD24(&qword_14FF8A8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8B0);
      v32 = sub_5C150(&qword_14FF8B8, &qword_14FF8B0, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v12, v30);
      v33 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v15, v29);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
      ObjectType = swift_getObjectType();
      v35 = v50;
      static DispatchTime.now()(ObjectType);
      v36 = v53;
      *v53 = 1;
      v38 = v55;
      v37 = v56;
      v39 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v55 + 104);
      v39(v36, enum case for DispatchTimeInterval.seconds(_:), v56);
      v40 = v54;
      *v54 = 1;
      v39(v40, enum case for DispatchTimeInterval.nanoseconds(_:), v37);
      OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v35, v36, v40, ObjectType);
      v41 = *(void (**)(_QWORD *, uint64_t))(v38 + 8);
      v41(v40, v37);
      v41(v36, v37);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v52);
      aBlock[4] = sub_C8AB44;
      v64 = v1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_42D124;
      aBlock[3] = &block_descriptor_37_9;
      v42 = _Block_copy(aBlock);
      v43 = swift_retain(v1);
      v44 = v57;
      j___s8Dispatch0A3QoSV11unspecifiedACvgZ(v43);
      v45 = v60;
      sub_CF9A58();
      OS_dispatch_source.setEventHandler(qos:flags:handler:)(v44, v45, v42, ObjectType);
      _Block_release(v42);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v62);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v59);
      swift_release(v64);
      v46 = *(_QWORD *)(v1 + 88);
      *(_QWORD *)(v1 + 88) = v33;
      swift_unknownObjectRetain_n(v33, 2);
      if (v46)
      {
        swift_getObjectType();
        swift_unknownObjectRetain(v46);
        OS_dispatch_source.cancel()();
        swift_unknownObjectRelease_n(v46, 2);
      }
      swift_unknownObjectRelease(v33);
      OS_dispatch_source.resume()();
      swift_unknownObjectRelease(v33);
    }
  }
  else
  {
    *(_QWORD *)(v1 + 88) = 0;
    if (v27)
    {
      swift_getObjectType();
      swift_unknownObjectRetain(v27);
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease_n(v27, 2);
    }
    v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
    *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 2;
    sub_C85E80(v47);
  }
}

void sub_C86618(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v2)
  {
    v3 = v2;
    v6[4] = sub_C8AB4C;
    v7 = a1;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_C869AC;
    v6[3] = &block_descriptor_40_7;
    v4 = _Block_copy(v6);
    v5 = v7;
    swift_retain(a1);
    objc_msgSend(v3, "loadCloudMusicLibraryUpdateProgressWithCompletionHandler:", v4, swift_release(v5).n128_f64[0]);
    _Block_release(v4);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_C866E8(float a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void **aBlock;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  void (*v32)();
  uint64_t v33;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v9, v10, v11, v12, v13, v14, v15, v16, v26, v27, aBlock, v29, v30, v31, v32);
  v18 = swift_allocObject(&unk_13B32B0, 24, 7);
  swift_weakInit(v18 + 16);
  v19 = swift_allocObject(&unk_13B3818, 28, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(float *)(v19 + 24) = a1;
  v32 = sub_C8AB78;
  v33 = v19;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_42D124;
  v31 = &block_descriptor_47_3;
  v20 = _Block_copy(&aBlock);
  v21 = swift_release(v33);
  static DispatchQoS.unspecified.getter(v21);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v22 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v24 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v23, v24, v2, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_C86928(uint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  double (*v7)(uint64_t *);
  _QWORD v8[4];
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v7 = sub_C86028(v8);
    if (*(_BYTE *)v6 != 2)
      *(float *)(v6 + 4) = a2;
    ((void (*)(_QWORD *, _QWORD))v7)(v8, 0);
    swift_release(v5);
  }
}

uint64_t sub_C869AC(uint64_t a1, float a2)
{
  void (*v3)(uint64_t, float);
  uint64_t v4;
  uint64_t v5;

  v3 = *(void (**)(uint64_t, float))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = swift_retain(v4);
  v3(v5, a2);
  return swift_release(v4);
}

double sub_C869E8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _BYTE v12[8];
  uint64_t v13;
  _QWORD v14[3];

  KeyPath = swift_getKeyPath(&unk_10A08D8);
  v2 = swift_getKeyPath(&unk_10A0900);
  static Published.subscript.getter(v14, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = v14[0];
  *(_QWORD *)&result = swift_beginAccess(v0 + 64, v14, 0, 0).n128_u64[0];
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_C89B68(v7, (uint64_t)v12);
      Strong = swift_unknownObjectWeakLoadStrong(v12);
      if (Strong)
      {
        v9 = Strong;
        v10 = v13;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(v3, ObjectType, v10);
        swift_unknownObjectRelease(v9);
      }
      sub_64880((uint64_t)v12);
      v7 += 16;
      --v6;
    }
    while (v6);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.deinit()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  v2 = v0 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF3F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

double CloudLibrary.StatusObserver.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  CloudLibrary.StatusObserver.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_C86B9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for CloudLibrary.StatusObserver(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t CloudLibrary.Status.message.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1 >> 30)
  {
    if (a1 >> 30 == 1)
      goto LABEL_3;
    if ((unint64_t)(a1 - 0x80000000) < 3)
      return 0;
    if (a1 != 2147483651)
    {
LABEL_3:
      v12 = 0x8000000001106FE0;
      v13 = 0x1000000000000017;
    }
    else
    {
      v13 = 0xD00000000000002ALL;
      v12 = 0x8000000001107000;
    }
  }
  else
  {
    v12 = 0x8000000001106FC0;
    v13 = 0xD00000000000001CLL;
  }
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v14 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t CloudLibrary.Status.actionTitle.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1 >> 30)
  {
    v12 = 0;
    if (a1 >> 30 == 1)
      return v12;
    if (a1 != 2147483651)
      return 0;
    v13 = 0x6E4F206E727554;
    v14 = 0xE700000000000000;
  }
  else
  {
    v13 = 0x7972746552;
    v14 = 0xE500000000000000;
  }
  String.LocalizationValue.init(stringLiteral:)(v13, v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v12 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v12;
}

BOOL static CloudLibrary.PresentationStyle.__derived_enum_equals(_:_:)(char *a1, char *a2)
{
  char v5;

  if (!a1)
    return !a2;
  if (a1 == (_BYTE *)&dword_0 + 1)
    return a2 == (_BYTE *)&dword_0 + 1;
  if ((unint64_t)a2 < 2)
    return 0;
  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  sub_AAE78(a1);
  sub_AAE78(a2);
  v5 = static NSObject.== infix(_:_:)(a1, a2);
  sub_AAE88(a2);
  sub_AAE88(a1);
  return v5 & 1;
}

BOOL sub_C8702C(void **a1, void **a2)
{
  char *v2;
  char *v3;
  char v5;

  v2 = (char *)*a1;
  v3 = (char *)*a2;
  if (!*a1)
    return !v3;
  if (v2 == (_BYTE *)&dword_0 + 1)
    return v3 == (_BYTE *)&dword_0 + 1;
  if ((unint64_t)v3 < 2)
    return 0;
  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  sub_AAE78(v2);
  sub_AAE78(v3);
  v5 = static NSObject.== infix(_:_:)(v2, v3);
  sub_AAE88(v3);
  sub_AAE88(v2);
  return v5 & 1;
}

void sub_C870DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_14F9EF8 != -1)
    swift_once(&qword_14F9EF8, sub_C83C34);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(a2, a3);
}

double sub_C87140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_C87370(a1, a2, a3, a4, (uint64_t)&unk_13B39F8, (uint64_t)sub_C8AB88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0);
}

double sub_C8715C(uint64_t a1)
{
  uint64_t v1;

  return sub_C87370(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_13B39F8, (uint64_t)sub_C8AB88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0);
}

uint64_t static CloudLibrary.presentCloudLibraryEnablerIfNeeded(context:presentationSource:style:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  *(_BYTE *)(v3 + 89) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  return swift_task_switch(sub_C87208, v6, v7);
}

uint64_t sub_C87208(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 89);
  v5 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 64) = v5;
  v6 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 72) = v6;
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v2;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 80) = v7;
  *v7 = v1;
  v7[1] = sub_C872D4;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 88, v5, &protocol witness table for MainActor, 0xD000000000000045, 0x8000000001107030, sub_C8A28C, v6, &type metadata for Bool);
}

uint64_t sub_C872D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_C8733C, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_C8733C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 88));
}

double sub_C87370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v22 = a7;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8E0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v16);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(a5, v18 + v15, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v22(a2, a3, a4, a6, v19);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

char *sub_C87474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)();
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  double v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];

  *(_QWORD *)&v6[qword_14FF628] = 0;
  v13 = type metadata accessor for EnableCloudLibraryView.Model(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v15 = v6;
  sub_A9DEC(a5, a6);
  sub_C87C54(a1, a2, a3, a4, a5, a6, 1, 0, 0);
  *(_QWORD *)&v15[qword_14FF620] = v14;
  swift_retain_n(v14, 2);

  v16 = sub_4DD24(&qword_14FF8E8, type metadata accessor for EnableCloudLibraryView.Model, (uint64_t)&unk_10A0D14);
  v37[0] = ObservedObject.init(wrappedValue:)(v14, v13, v16);
  v37[1] = v17;
  v18 = (char *)UIHostingController.init(rootView:)(v37);
  v19 = *(_QWORD *)&v18[qword_14FF620];
  v20 = swift_allocObject(&unk_13B37A0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v21 = (void (**)())(v19 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v23 = (uint64_t)v21[1];
  *v21 = sub_C8ABD0;
  v21[1] = (void (*)())v20;
  v24 = v18;
  sub_5C198(v22, v23);
  sub_C879BC();
  v25 = objc_msgSend(v24, "presentingViewController");
  if (v25)
  {
    v27 = v25;
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF8F0);
    v29 = swift_allocObject(v28, 48, 7);
    *(_OWORD *)(v29 + 16) = xmmword_105B360;
    *(_QWORD *)(v29 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v29 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v30 = UIViewController.registerForTraitChanges(_:action:)(v29, "determineHorizontalSizeClass");
    swift_unknownObjectRelease(v30);

    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  v31 = objc_msgSend(v24, "presentationController", v26);
  if (v31)
  {
    v32 = v31;
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF8F0);
    v34 = swift_allocObject(v33, 48, 7);
    *(_OWORD *)(v34 + 16) = xmmword_105B360;
    *(_QWORD *)(v34 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v34 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v35 = UIPresentationController.registerForTraitChanges(_:action:)(v34, "determineHorizontalSizeClass");
    sub_5C198(a5, a6);
    swift_unknownObjectRelease(v35);

    swift_bridgeObjectRelease(v34);
  }
  else
  {
    sub_5C198(a5, a6);
  }
  swift_release(v14);

  return v24;
}

void sub_C87710(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_C87770(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_14FF628] = 0;
  v4 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCore/CloudLibrary.swift", 28, 2, 499, 0);
  __break(1u);
}

void sub_C877E4(void *a1)
{
  id v1;
  id v2;
  objc_class *v3;
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CloudLibraryViewController(0);
  v1 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewDidLoad");
  v2 = objc_msgSend(v1, "navigationItem", v5.receiver, v5.super_class);
  v3 = sub_C878A8();
  objc_msgSend(v2, "setRightBarButtonItem:", v3);

  v4 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v4, "setLargeTitleDisplayMode:", 2);

}

objc_class *sub_C878A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  UIBarButtonItem v6;
  void *v7;
  id v8;
  UIAction_optional v10;
  UIMenu_optional v11;

  v1 = qword_14FF628;
  v2 = *(void **)(v0 + qword_14FF628);
  if (v2)
  {
    v3 = *(objc_class **)(v0 + qword_14FF628);
  }
  else
  {
    v4 = v0;
    sub_4E684(0, &qword_14FF898, UIBarButtonItem_ptr);
    sub_4E684(0, &qword_14FF8A0, UIAction_ptr);
    v5 = swift_allocObject(&unk_13B37A0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v10.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_12BA28, v5);
    v10.is_nil = 0;
    v6.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemClose, v10, v11).super.super.isa;
    v7 = *(void **)(v0 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v6;
    v3 = v6.super.super.isa;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_C879BC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t KeyPath;
  uint64_t v9;
  id v10;

  v1 = objc_msgSend(v0, "presentingViewController");
  if (v1
    && (v2 = v1, v3 = objc_msgSend(v1, "traitCollection"), v2, v3)
    || (v4 = objc_msgSend(v0, "presentationController")) != 0
    && (v5 = v4, v3 = objc_msgSend(v4, "traitCollection"), v5, v3))
  {
    v6 = *(_QWORD *)&v0[qword_14FF620];
    swift_retain(v6);
    v7 = objc_msgSend(v3, "horizontalSizeClass");
    KeyPath = swift_getKeyPath(&unk_10A0D50);
    v9 = swift_getKeyPath(&unk_10A0D78);
    v10 = v7;
    static Published.subscript.setter(&v10, v6, KeyPath, v9);

  }
}

void sub_C87AC0(void *a1)
{
  id v1;

  v1 = a1;
  sub_C879BC();

}

void sub_C87AF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_14FF620));

}

id sub_C87B20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudLibraryViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_C87B54(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_14FF620));

}

uint64_t sub_C87B8C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A0D50);
  v2 = swift_getKeyPath(&unk_10A0D78);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_C87BFC()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.CloudLibraryViewController", 36, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_C87C28()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.CloudLibraryViewController", 36, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

_QWORD *sub_C87C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];

  v14 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  *v14 = 0;
  v14[1] = 0;
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v9[6] = a5;
  v9[7] = a6;
  swift_beginAccess((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model__horizontalSizeClass, v21, 33, 0);
  v20 = a7;
  sub_A9DEC(a5, a6);
  _s3__C24UIUserInterfaceSizeClassOMa_0(0);
  Published.init(initialValue:)(&v20, v15);
  swift_endAccess(v21);
  sub_5C198(a5, a6);
  v16 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v17 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v18 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss + 8);
  *v16 = a8;
  v16[1] = a9;
  sub_5C198(v17, v18);
  return v9;
}

double sub_C87D30()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_5C198(v0[6], v0[7]);
  v1 = (char *)v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model__horizontalSizeClass;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF890);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_5C198(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss + 8));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_C87DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for EnableCloudLibraryView.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_C87DEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v47;
  uint64_t v48;

  v47 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7C8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = static Axis.Set.vertical.getter(v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7D0);
  v16 = sub_C880B4(a1, a2, (uint64_t)&v7[*(int *)(v15 + 44)]);
  v17 = static Edge.Set.horizontal.getter(v16);
  KeyPath = swift_getKeyPath(&unk_10A0D50);
  v19 = swift_getKeyPath(&unk_10A0D78);
  swift_retain();
  static Published.subscript.getter(&v48, v20, KeyPath, v19);
  swift_release();
  swift_release();
  swift_release();
  v22 = 32.0;
  if (v48 != 2)
    v22 = 24.0;
  v23 = EdgeInsets.init(_all:)(v21, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_5C238((uint64_t)v7, (uint64_t)v10, &qword_14FF7B8);
  v30 = &v10[*(int *)(v8 + 36)];
  *v30 = v17;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  v31 = sub_56024((uint64_t)v7, &qword_14FF7B8);
  v32 = static Edge.Set.bottom.getter(v31);
  v33 = swift_getKeyPath(&unk_10A0D50);
  v34 = swift_getKeyPath(&unk_10A0D78);
  swift_retain();
  static Published.subscript.getter(&v48, v35, v33, v34);
  swift_release();
  swift_release();
  swift_release();
  v37 = 36.0;
  if (v48 != 2)
    v37 = 8.0;
  v38 = EdgeInsets.init(_all:)(v36, v37);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_5C238((uint64_t)v10, (uint64_t)v14, &qword_14FF7C0);
  v45 = &v14[*(int *)(v11 + 36)];
  *v45 = v32;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_56024((uint64_t)v10, &qword_14FF7C0);
  return sub_5C090((uint64_t)v14, v47, &qword_14FF7C8);
}

uint64_t sub_C880B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7E0);
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7E8);
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v32 - v23;
  *(_QWORD *)v24 = static HorizontalAlignment.center.getter(v22);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7F0);
  v26 = sub_C88360(a1, a2, (uint64_t)&v24[*(int *)(v25 + 44)]);
  *(_QWORD *)v17 = static HorizontalAlignment.center.getter(v26);
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF7F8);
  sub_C88818(a1, a2, (uint64_t)&v17[*(int *)(v27 + 44)]);
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v28);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF800);
  sub_C88DE0(a1, (uint64_t)a2, &v11[*(int *)(v29 + 44)]);
  sub_5C238((uint64_t)v24, (uint64_t)v20, &qword_14FF7E8);
  sub_5C238((uint64_t)v17, (uint64_t)v14, &qword_14FF7E0);
  sub_5C238((uint64_t)v11, (uint64_t)v8, &qword_14FF7D8);
  sub_5C238((uint64_t)v20, a3, &qword_14FF7E8);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF808);
  sub_5C238((uint64_t)v14, a3 + *(int *)(v30 + 48), &qword_14FF7E0);
  sub_5C238((uint64_t)v8, a3 + *(int *)(v30 + 64), &qword_14FF7D8);
  sub_56024((uint64_t)v11, &qword_14FF7D8);
  sub_56024((uint64_t)v17, &qword_14FF7E0);
  sub_56024((uint64_t)v24, &qword_14FF7E8);
  sub_56024((uint64_t)v8, &qword_14FF7D8);
  sub_56024((uint64_t)v14, &qword_14FF7E0);
  return sub_56024((uint64_t)v20, &qword_14FF7E8);
}

double sub_C88360@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, __n128);
  __n128 v39;
  double result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;

  v53 = type metadata accessor for BorderedProminentButtonStyle(0);
  v54 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF810);
  v52 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF818);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v56 = (char *)&v41 - v17;
  v51 = static HorizontalAlignment.center.getter(v16);
  sub_C89368(a2, (uint64_t)v63);
  v58 = v63[0];
  v44 = v63[1];
  v57 = v64;
  v59 = v65;
  v61 = v66;
  v50 = v67;
  v47 = v68;
  v46 = v69;
  v45 = v70;
  v60 = v71;
  v48 = v72;
  v49 = v73;
  v62 = Image.init(_:bundle:)(0xD000000000000011, 0x8000000001107250, 0);
  v18 = swift_allocObject(&unk_13B3778, 32, 7);
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  swift_retain();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF840);
  v20 = sub_184F98(&qword_14FF848, &qword_14FF840, (void (*)(void))sub_C8AA70);
  v22 = Button.init(action:label:)(sub_C8AD84, v18, sub_C896F0, 0, v19, v20, v21);
  BorderedProminentButtonStyle.init()(v22);
  v23 = sub_5C150(&qword_14FF860, &qword_14FF810, (uint64_t)&protocol conformance descriptor for Button<A>);
  v24 = sub_4DD24(&qword_14FF868, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v55 = v14;
  v25 = v53;
  View.buttonStyle<A>(_:)(v7, v8, v53, v23, v24);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v8);
  v43 = v12;
  v26 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v27 = v56;
  v42 = v11;
  v26(v56, v14, v11);
  v54 = *(_QWORD *)(v12 + 16);
  ((void (*)(char *, char *, uint64_t))v54)(v14, v27, v11);
  *(_QWORD *)a3 = v51;
  *(_QWORD *)(a3 + 8) = 0x4020000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  v28 = v58;
  v29 = v59;
  v30 = v44;
  *(_QWORD *)(a3 + 24) = v58;
  *(_QWORD *)(a3 + 32) = v30;
  LOBYTE(v27) = v57;
  *(_BYTE *)(a3 + 40) = v57;
  v32 = v60;
  v31 = v61;
  *(_QWORD *)(a3 + 48) = v29;
  *(_QWORD *)(a3 + 56) = v31;
  *(_BYTE *)(a3 + 64) = v50;
  v33 = v47;
  v34 = v46;
  *(_QWORD *)(a3 + 72) = v47;
  *(_QWORD *)(a3 + 80) = v34;
  LOBYTE(v19) = v45;
  *(_BYTE *)(a3 + 88) = v45;
  v35 = v48;
  *(_QWORD *)(a3 + 96) = v32;
  *(_QWORD *)(a3 + 104) = v35;
  *(_BYTE *)(a3 + 112) = v49;
  *(_QWORD *)(a3 + 120) = 0;
  *(_BYTE *)(a3 + 128) = 1;
  *(_QWORD *)(a3 + 136) = v62;
  *(_QWORD *)(a3 + 144) = 0;
  *(_BYTE *)(a3 + 152) = 1;
  v36 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FF888) + 96);
  v37 = v42;
  ((void (*)(uint64_t, char *, uint64_t))v54)(v36, v55, v42);
  sub_AF8D8(v28, v30, (char)v27);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_AF8D8(v33, v34, v19);
  v38 = *(void (**)(char *, uint64_t, __n128))(v43 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v39 = swift_retain();
  v38(v56, v37, v39);
  ((void (*)(char *, uint64_t))v38)(v55, v37);
  swift_release();
  sub_AF8E8(v58, v30, v57);
  swift_release();
  swift_bridgeObjectRelease();
  sub_AF8E8(v33, v34, v19);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_C88818(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  _QWORD v78[2];
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;

  v58 = type metadata accessor for BorderedProminentButtonStyle(0);
  v59 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF810);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF818);
  v71 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF820);
  __chkstk_darwin(v70);
  v75 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  v18 = __chkstk_darwin(v17);
  v73 = (uint64_t)&v56 - v19;
  v69 = static HorizontalAlignment.center.getter(v18);
  sub_C89368(a2, (uint64_t)v78);
  v61 = v78[0];
  v60 = v78[1];
  v76 = v79;
  v62 = v80;
  v77 = v81;
  v68 = v82;
  v65 = v83;
  v64 = v84;
  v63 = v85;
  v74 = v86;
  v66 = v87;
  v67 = v88;
  v20 = swift_allocObject(&unk_13B3750, 32, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  swift_retain();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF840);
  v22 = sub_184F98(&qword_14FF848, &qword_14FF840, (void (*)(void))sub_C8AA70);
  v24 = Button.init(action:label:)(sub_C8AD84, v20, sub_C896F0, 0, v21, v22, v23);
  BorderedProminentButtonStyle.init()(v24);
  v25 = sub_5C150(&qword_14FF860, &qword_14FF810, (uint64_t)&protocol conformance descriptor for Button<A>);
  v26 = sub_4DD24(&qword_14FF868, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v27 = v58;
  View.buttonStyle<A>(_:)(v7, v8, v58, v25, v26);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v7, v27);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v10, v8);
  v29 = static Edge.Set.top.getter(v28);
  KeyPath = swift_getKeyPath(&unk_10A0D50);
  v31 = swift_getKeyPath(&unk_10A0D78);
  swift_retain();
  static Published.subscript.getter(v78, v32, KeyPath, v31);
  swift_release();
  swift_release();
  swift_release();
  v34 = 16.0;
  if (v78[0] == 2)
    v34 = 24.0;
  v35 = EdgeInsets.init(_all:)(v33, v34);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = v71;
  v43 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v16, v12, v72);
  v44 = &v16[*(int *)(v70 + 36)];
  *v44 = v29;
  *((double *)v44 + 1) = v35;
  *((_QWORD *)v44 + 2) = v37;
  *((_QWORD *)v44 + 3) = v39;
  *((_QWORD *)v44 + 4) = v41;
  v44[40] = 0;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
  v45 = v73;
  sub_5C090((uint64_t)v16, v73, &qword_14FF820);
  v46 = v45;
  v47 = v75;
  sub_5C238(v46, v75, &qword_14FF820);
  *(_QWORD *)a3 = v69;
  *(_QWORD *)(a3 + 8) = 0x4020000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  v48 = v61;
  v49 = v60;
  *(_QWORD *)(a3 + 24) = v61;
  *(_QWORD *)(a3 + 32) = v49;
  *(_BYTE *)(a3 + 40) = v76;
  v50 = v77;
  *(_QWORD *)(a3 + 48) = v62;
  *(_QWORD *)(a3 + 56) = v50;
  *(_BYTE *)(a3 + 64) = v68;
  v51 = v65;
  v52 = v64;
  *(_QWORD *)(a3 + 72) = v65;
  *(_QWORD *)(a3 + 80) = v52;
  v53 = v63;
  *(_BYTE *)(a3 + 88) = v63;
  v54 = v66;
  *(_QWORD *)(a3 + 96) = v74;
  *(_QWORD *)(a3 + 104) = v54;
  *(_BYTE *)(a3 + 112) = v67;
  *(_QWORD *)(a3 + 120) = 0;
  *(_BYTE *)(a3 + 128) = 1;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF880);
  sub_5C238(v47, a3 + *(int *)(v55 + 64), &qword_14FF820);
  LOBYTE(v47) = v76;
  sub_AF8D8(v48, v49, v76);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_AF8D8(v51, v52, v53);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_56024(v73, &qword_14FF820);
  sub_56024(v75, &qword_14FF820);
  sub_AF8E8(v48, v49, v47);
  swift_release();
  swift_bridgeObjectRelease();
  sub_AF8E8(v51, v52, v53);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_C88DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char v81[16];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v80 = a3;
  v5 = type metadata accessor for BorderedProminentButtonStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  v72 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF810);
  v10 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  v70 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF818);
  v77 = *(_QWORD *)(v13 - 8);
  v78 = v13;
  __chkstk_darwin(v13);
  v68 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF820);
  __chkstk_darwin(v76);
  v79 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v19);
  v75 = (uint64_t)&v67 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF828);
  v74 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v73 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v67 - v25;
  v27 = static Axis.Set.vertical.getter(v24);
  v82 = a1;
  v83 = a2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF830);
  v29 = sub_5C150(&qword_14FF838, &qword_14FF830, (uint64_t)&protocol conformance descriptor for VStack<A>);
  ScrollView.init(_:showsIndicators:content:)(v27, 1, sub_C8AA3C, v81, v28, v29);
  v30 = swift_allocObject(&unk_13B3728, 32, 7);
  *(_QWORD *)(v30 + 16) = a1;
  *(_QWORD *)(v30 + 24) = a2;
  swift_retain();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF840);
  v32 = sub_184F98(&qword_14FF848, &qword_14FF840, (void (*)(void))sub_C8AA70);
  v34 = Button.init(action:label:)(sub_C8AA68, v30, sub_C896F0, 0, v31, v32, v33);
  BorderedProminentButtonStyle.init()(v34);
  v35 = sub_5C150(&qword_14FF860, &qword_14FF810, (uint64_t)&protocol conformance descriptor for Button<A>);
  v36 = sub_4DD24(&qword_14FF868, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v37 = v68;
  v38 = v69;
  v39 = v71;
  View.buttonStyle<A>(_:)(v8, v69, v71, v35, v36);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v39);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v12, v38);
  v41 = static Edge.Set.top.getter(v40);
  KeyPath = swift_getKeyPath(&unk_10A0D50);
  v43 = swift_getKeyPath(&unk_10A0D78);
  swift_retain();
  static Published.subscript.getter(&v84, v44, KeyPath, v43);
  swift_release();
  swift_release();
  swift_release();
  v46 = 16.0;
  if (v84 == 2)
    v46 = 24.0;
  v47 = EdgeInsets.init(_all:)(v45, v46);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v55 = v77;
  v54 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v18, v37, v78);
  v56 = &v18[*(int *)(v76 + 36)];
  *v56 = v41;
  *((double *)v56 + 1) = v47;
  *((_QWORD *)v56 + 2) = v49;
  *((_QWORD *)v56 + 3) = v51;
  *((_QWORD *)v56 + 4) = v53;
  v56[40] = 0;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v54);
  v57 = v75;
  sub_5C090((uint64_t)v18, v75, &qword_14FF820);
  v58 = v73;
  v59 = v74;
  v60 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  v60(v73, v26, v21);
  v61 = v79;
  sub_5C238(v57, v79, &qword_14FF820);
  v62 = v80;
  v60(v80, v58, v21);
  v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF870);
  v64 = &v62[*(int *)(v63 + 48)];
  *(_QWORD *)v64 = 0;
  v64[8] = 1;
  sub_5C238(v61, (uint64_t)&v62[*(int *)(v63 + 64)], &qword_14FF820);
  sub_56024(v57, &qword_14FF820);
  v65 = *(void (**)(char *, uint64_t))(v59 + 8);
  v65(v26, v21);
  sub_56024(v61, &qword_14FF820);
  return ((uint64_t (*)(char *, uint64_t))v65)(v58, v21);
}

__n128 sub_C892D0@<Q0>(_QWORD *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __n128 result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  __n128 v16;
  char v17;
  __int128 v18;
  char v19;
  __int128 v20;
  char v21;

  v5 = static HorizontalAlignment.center.getter(a3);
  sub_C89368(a1, (uint64_t)&v14);
  v6 = v15;
  v7 = v17;
  v8 = v19;
  v9 = v21;
  result = v16;
  v11 = v20;
  v12 = v14;
  v13 = v18;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = 0x4020000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 40) = v6;
  *(__n128 *)(a2 + 48) = result;
  *(_BYTE *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 72) = v13;
  *(_BYTE *)(a2 + 88) = v8;
  *(_OWORD *)(a2 + 96) = v11;
  *(_BYTE *)(a2 + 112) = v9;
  return result;
}

double sub_C89368@<D0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  double result;
  unint64_t v50;
  uint64_t KeyPath;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v3 = a1[3];
  v57 = a1[2];
  v58 = v3;
  v50 = sub_B9DEC0();
  swift_bridgeObjectRetain();
  v4 = Text.init<A>(_:)(&v57, &type metadata for String, v50);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = static Font.largeTitle.getter();
  v12 = Text.font(_:)(v11, v4, v6, v10, v8);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release();
  v19 = v16 & 1;
  sub_AF8E8(v4, v6, v10);
  swift_bridgeObjectRelease();
  v21 = static Font.Weight.bold.getter(v20);
  v22 = Text.fontWeight(_:)(*(_QWORD *)&v21, 0, v12, v14, v19, v18);
  v54 = v23;
  v55 = v22;
  v56 = v24;
  v53 = v25 & 1;
  sub_AF8E8(v12, v14, v19);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_10A0D98);
  v26 = a1[5];
  v57 = a1[4];
  v58 = v26;
  swift_bridgeObjectRetain();
  v27 = Text.init<A>(_:)(&v57, &type metadata for String, v50);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  v34 = static Font.title3.getter(v27);
  v35 = Text.font(_:)(v34, v27, v29, v33, v31);
  v37 = v36;
  LOBYTE(v10) = v38;
  v40 = v39;
  swift_release();
  sub_AF8E8(v27, v29, v33);
  v41 = swift_bridgeObjectRelease();
  LODWORD(v57) = static HierarchicalShapeStyle.primary.getter(v41);
  v42 = Text.foregroundStyle<A>(_:)(&v57, v35, v37, v10 & 1, v40, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v44 = v43;
  v46 = v45;
  LOBYTE(v33) = v47 & 1;
  sub_AF8E8(v35, v37, v10 & 1);
  swift_bridgeObjectRelease();
  v48 = swift_getKeyPath(&unk_10A0D98);
  LOBYTE(v57) = v53;
  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v54;
  *(_BYTE *)(a2 + 16) = v53;
  *(_QWORD *)(a2 + 24) = v56;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v42;
  *(_QWORD *)(a2 + 56) = v44;
  *(_BYTE *)(a2 + 64) = v33;
  *(_QWORD *)(a2 + 72) = v46;
  *(_QWORD *)(a2 + 80) = v48;
  *(_BYTE *)(a2 + 88) = 1;
  sub_AF8D8(v55, v54, v53);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_AF8D8(v42, v44, v33);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_AF8E8(v42, v44, v33);
  swift_release();
  swift_bridgeObjectRelease();
  sub_AF8E8(v55, v54, v57);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_C89638(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void (*v7)(__n128);
  uint64_t v8;
  __n128 v9;

  if (qword_14F9EF8 != -1)
    swift_once(&qword_14F9EF8, sub_C83C34);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  sub_A9DEC(v3, v4);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(v3, v4);
  result = sub_5C198(v3, v4);
  v6 = a2 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss;
  v7 = *(void (**)(__n128))(a2 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 8);
    v9 = swift_retain();
    v7(v9);
    return sub_5C198((uint64_t)v7, v8);
  }
  return result;
}

double sub_C896F0@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  double result;
  __int128 v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  if (qword_14F9EF0 != -1)
    swift_once(&qword_14F9EF0, sub_C83A68);
  v33[0] = static CloudLibrary.EnablementContext.action;
  v2 = sub_B9DEC0();
  swift_bridgeObjectRetain();
  v3 = Text.init<A>(_:)(v33, &type metadata for String, v2);
  v5 = v4;
  v7 = v6 & 1;
  v10 = Text.bold()(v3, v4, v6 & 1, v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  sub_AF8E8(v3, v5, v7);
  swift_bridgeObjectRelease();
  v18 = static Edge.Set.vertical.getter(v17);
  LOBYTE(v3) = v18;
  v19 = EdgeInsets.init(_all:)(v18, 8.0);
  v44 = v10;
  v45 = v12;
  v46 = v16;
  v47 = v14;
  v48 = v3;
  v49 = v19;
  v50 = v20;
  v51 = v21;
  v52 = v22;
  v53 = 0;
  v24 = static Alignment.center.getter(v23);
  sub_9C1AE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v33, 0.0, 1, 0.0, 1, v24, v25);
  sub_AF8E8(v10, v12, v16);
  swift_bridgeObjectRelease();
  v26 = v41;
  a1[8] = v40;
  a1[9] = v26;
  v27 = v43;
  a1[10] = v42;
  a1[11] = v27;
  v28 = v37;
  a1[4] = v36;
  a1[5] = v28;
  v29 = v39;
  a1[6] = v38;
  a1[7] = v29;
  v30 = v33[1];
  *a1 = v33[0];
  a1[1] = v30;
  result = *(double *)&v34;
  v32 = v35;
  a1[2] = v34;
  a1[3] = v32;
  return result;
}

uint64_t sub_C898A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_C87DEC(*(_QWORD *)v1, *(_QWORD **)(v1 + 8), a1);
}

uint64_t sub_C898A8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14FF3C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_14FF3C0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x62694C64756F6C43, 0xEC00000079726172);
}

uint64_t sub_C89924@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A0D50);
  v5 = swift_getKeyPath(&unk_10A0D78);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_C899A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A0D50);
  v5 = swift_getKeyPath(&unk_10A0D78);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (a1 >> 30)
  {
    if (a1 >> 30 == 1)
    {
      if ((a2 & 0xC0000000) == 0x40000000)
        return (((a1 & 1) == 0) ^ a2) & (*((float *)&a1 + 1) == *((float *)&a2 + 1));
      return 0;
    }
    return ((uint64_t (*)(void))((char *)&loc_C89A8C + 4 * byte_10A08BE[a1 - 0x80000000]))();
  }
  else
  {
    if ((a2 & 0xC0000000) != 0)
      return 0;
    return a1 == a2;
  }
}

uint64_t sub_C89AC4(uint64_t a1, uint64_t a2)
{
  if (a2 != 2147483650)
    JUMPOUT(0xC89A64);
  return 1;
}

uint64_t sub_C89ADC(uint64_t a1, uint64_t a2)
{
  if (a2 != 2147483651)
    JUMPOUT(0xC89A64);
  return 1;
}

uint64_t sub_C89AF4(uint64_t a1, uint64_t a2)
{
  if (a2 != 2147483652)
    JUMPOUT(0xC89A64);
  return 1;
}

uint64_t _s9MusicCore12CloudLibraryO11FailureTypeO8rawValueAESgSi_tcfC_0(unint64_t a1)
{
  if (a1 > 0xFFFFFFFFFFFFFFF9)
    return ~(_DWORD)a1;
  else
    return 6;
}

uint64_t sub_C89B24()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_C89B48(uint64_t a1)
{
  uint64_t v1;

  return sub_C84FFC(a1, v1);
}

uint64_t block_copy_helper_296(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_296(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_C89B68(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_C89BA0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

void _s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  void **aBlock;
  uint64_t v48;
  void (*v49)(uint64_t, void *);
  void *v50;
  void *v51;
  uint64_t v52;

  CloudLibrary.EnablementContext.title.getter(a1);
  v10 = v9;
  v12 = v11;
  CloudLibrary.EnablementContext.message.getter(a1);
  v14 = v13;
  v16 = v15;
  if (a3)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, 1);

    if (qword_14FA560 != -1)
      swift_once(&qword_14FA560, sub_D73CDC);
    v20 = qword_1582D20;
    v21 = swift_allocObject(&unk_13B3890, 32, 7);
    *(_QWORD *)(v21 + 16) = a4;
    *(_QWORD *)(v21 + 24) = a5;
    sub_A9DEC(a4, a5);
    swift_bridgeObjectRetain();
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v51 = sub_C8AB98;
    v52 = v21;
    aBlock = _NSConcreteStackBlock;
    v48 = 1107296256;
    v49 = sub_5FEBC;
    v50 = &block_descriptor_62_2;
    v23 = _Block_copy(&aBlock);
    swift_release(v52);
    v24 = (void *)objc_opt_self(UIAlertAction);
    v25 = objc_msgSend(v24, "actionWithTitle:style:handler:", v22, 1, v23);
    _Block_release(v23);

    objc_msgSend(v19, "addAction:", v25);
    if (qword_14F9EF0 != -1)
      swift_once(&qword_14F9EF0, sub_C83A68);
    v26 = unk_15821C0;
    v27 = swift_allocObject(&unk_13B38E0, 32, 7);
    *(_QWORD *)(v27 + 16) = a4;
    *(_QWORD *)(v27 + 24) = a5;
    sub_A9DEC(a4, a5);
    swift_bridgeObjectRetain();
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v51 = sub_C8ABC8;
    v52 = v27;
    aBlock = _NSConcreteStackBlock;
    v48 = 1107296256;
    v49 = sub_5FEBC;
    v50 = &block_descriptor_68_6;
    v29 = _Block_copy(&aBlock);
    v30 = objc_msgSend(v24, "actionWithTitle:style:handler:", v28, 0, v29, swift_release(v52).n128_f64[0]);
    _Block_release(v29);

    objc_msgSend(v19, "addAction:", v30);
    if ((unint64_t)a3 >= 2)
    {
      v31 = a3;
      objc_msgSend(v19, "setPreferredStyle:", 0);
      v32 = v31;
      objc_msgSend(v32, "bounds");
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v41 = objc_msgSend(v19, "popoverPresentationController");
      if (v41)
      {
        v42 = v41;
        v43 = v32;
        objc_msgSend(v42, "setSourceView:", v43);
        objc_msgSend(v42, "setSourceRect:", v34, v36, v38, v40);

        sub_AAE88(a3);
        sub_AAE88(a3);

      }
      else
      {
        sub_AAE88(a3);
        sub_AAE88(a3);
      }
    }
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v19, 1, (char *)&dword_C + 3, (void **)((unint64_t)a3 > 1), 0, 0);

  }
  else
  {
    v44 = objc_allocWithZone((Class)type metadata accessor for CloudLibraryViewController(0));
    sub_A9DEC(a4, a5);
    v45 = sub_C87474(v10, v12, v14, v16, a4, a5);
    v46 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v45);
    objc_msgSend(v46, "setModalPresentationStyle:", 2);
    objc_msgSend(v46, "setModalPresentationCapturesStatusBarAppearance:", 1);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v46, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

  }
}

void _s9MusicCore12CloudLibraryO07presentcD15EnablerIfNeeded7context18presentationSource5style05cloudD17EnabledCompletionyAC17EnablementContextO_AA012PresentationK0VAC0R5StyleOySbcSgtFZ_0(char a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v7 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10A0DC8);
  v9 = swift_getKeyPath(&unk_10A0DF0);
  static Published.subscript.getter(&v31, v7, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = BYTE2(v31);
  v11 = v33;
  v12 = v34;
  v13 = v35;
  v15 = v36;
  v14 = v37;
  v16 = v38;
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v15);

  if ((v10 & 1) != 0)
  {
    if (!a4)
      return;
    v17 = 1;
LABEL_9:
    a4(v17);
    return;
  }
  v18 = static ApplicationCapabilities.Controller.shared;
  v19 = swift_getKeyPath(&unk_10A0DC8);
  v20 = swift_getKeyPath(&unk_10A0DF0);
  static Published.subscript.getter(&v31, v18, v19, v20);
  swift_release(v19);
  swift_release(v20);
  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  v26 = v36;
  v25 = v37;
  v27 = v38;
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v26);

  if ((v21 & 0x100) == 0)
  {
    if (!a4)
      return;
    v17 = 0;
    goto LABEL_9;
  }
  _s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0(a1, a2, a3, (uint64_t)a4, a5);
}

double sub_C8A28C(uint64_t a1)
{
  uint64_t v1;

  return sub_C87370(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_13B3868, (uint64_t)sub_C8AB88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD15EnablerIfNeeded7context18presentationSource5style05cloudD17EnabledCompletionyAC17EnablementContextO_AA012PresentationK0VAC0R5StyleOySbcSgtFZ_0);
}

unint64_t sub_C8A2C4()
{
  unint64_t result;

  result = qword_14FF410;
  if (!qword_14FF410)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CloudLibrary.FailureType, &type metadata for CloudLibrary.FailureType);
    atomic_store(result, (unint64_t *)&qword_14FF410);
  }
  return result;
}

unint64_t sub_C8A30C()
{
  unint64_t result;

  result = qword_14FF418;
  if (!qword_14FF418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CloudLibrary.EnablementContext, &type metadata for CloudLibrary.EnablementContext);
    atomic_store(result, (unint64_t *)&qword_14FF418);
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary()
{
  return &type metadata for CloudLibrary;
}

ValueMetadata *type metadata accessor for CloudLibrary.UpdateContext()
{
  return &type metadata for CloudLibrary.UpdateContext;
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.FailureType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_C8A3C4 + 4 * byte_10A08C8[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_C8A3F8 + 4 * byte_10A08C3[v4]))();
}

uint64_t sub_C8A3F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C8A400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC8A408);
  return result;
}

uint64_t sub_C8A414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC8A41CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_C8A420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C8A428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.FailureType()
{
  return &type metadata for CloudLibrary.FailureType;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.Status(uint64_t a1, unsigned int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 > 0x1FFFFFFD && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 536870910);
  if ((((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFFu) >= 0x1FFFFFFD)
    v3 = -1;
  else
    v3 = ((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FFFFFFD)
  {
    *(_QWORD *)result = a2 - 536870910;
    if (a3 >= 0x1FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x1FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 8 * ((-a2 >> 2) & 0x7FFFFFF) - (a2 << 30);
  }
  return result;
}

uint64_t sub_C8A504(_QWORD *a1)
{
  if ((int)*a1 >= 0)
    return *a1 >> 30;
  else
    return ((*a1 >> 29) & 0xFFFFFFF8 | *a1 & 7) + 2;
}

_QWORD *sub_C8A524(_QWORD *result)
{
  *result &= 0xFFFFFFFF3FFFFFFFLL;
  return result;
}

unint64_t *sub_C8A534(unint64_t *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0xFFFFFFFF00000007 | (a2 << 30);
  else
    *result = ((a2 - 2) | ((unint64_t)(a2 - 2) << 29)) & 0xFFFFFFFF00000007 | 0x80000000;
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.Status()
{
  return &type metadata for CloudLibrary.Status;
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.EnablementContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_C8A5C4 + 4 * byte_10A08D2[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_C8A5F8 + 4 * byte_10A08CD[v4]))();
}

uint64_t sub_C8A5F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C8A600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xC8A608);
  return result;
}

uint64_t sub_C8A614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xC8A61CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_C8A620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C8A628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.EnablementContext()
{
  return &type metadata for CloudLibrary.EnablementContext;
}

uint64_t sub_C8A644()
{
  return type metadata accessor for CloudLibrary.StatusObserver(0);
}

uint64_t type metadata accessor for CloudLibrary.StatusObserver(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14FF448, (uint64_t)&nominal type descriptor for CloudLibrary.StatusObserver);
}

void sub_C8A660(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_10A0B90;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = &unk_10A0BA8;
  v4[6] = &unk_10A0BA8;
  sub_C8A70C();
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_10A0BC0;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_C8A70C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_14FF458)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CloudLibrary.Status);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_14FF458);
  }
}

ValueMetadata *type metadata accessor for CloudLibrary.PresentationStyle()
{
  return &type metadata for CloudLibrary.PresentationStyle;
}

uint64_t type metadata accessor for CloudLibraryViewController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14FF640, (uint64_t)&nominal type descriptor for CloudLibraryViewController);
}

uint64_t sub_C8A784(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_10A0BA8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_14FF630);
}

uint64_t sub_C8A7D8()
{
  return type metadata accessor for CloudLibraryViewController(0);
}

uint64_t sub_C8A7E0()
{
  return type metadata accessor for EnableCloudLibraryView.Model(0);
}

uint64_t type metadata accessor for EnableCloudLibraryView.Model(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14FF6C0, (uint64_t)&nominal type descriptor for EnableCloudLibraryView.Model);
}

void sub_C8A7FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10A0C58;
  v4[1] = &unk_10A0C58;
  v4[2] = &unk_10A0C70;
  sub_C8A880(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_10A0C70;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_C8A880(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14FF6D0)
  {
    _s3__C24UIUserInterfaceSizeClassOMa_0(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14FF6D0);
  }
}

ValueMetadata *type metadata accessor for EnableCloudLibraryView()
{
  return &type metadata for EnableCloudLibraryView;
}

uint64_t initializeWithCopy for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.StatusObserver.InternalObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.StatusObserver.InternalObserver()
{
  return &type metadata for CloudLibrary.StatusObserver.InternalObserver;
}

uint64_t sub_C8AA24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_120A988, 1);
}

double sub_C8AA3C@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = sub_C892D0((_QWORD *)*(_QWORD *)(v2 + 24), a1, a2).n128_u64[0];
  return result;
}

uint64_t sub_C8AA44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C8AA68()
{
  uint64_t v0;

  return sub_C89638(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_C8AA70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF850;
  if (!qword_14FF850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FF858);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14FF850);
  }
  return result;
}

uint64_t sub_C8AAD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_C8AAFC(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_C8AB20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_C8AB44()
{
  uint64_t v0;

  sub_C86618(v0);
}

uint64_t sub_C8AB4C(float a1)
{
  return sub_C866E8(a1);
}

uint64_t sub_C8AB54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 28, 7);
}

void sub_C8AB78()
{
  uint64_t v0;

  sub_C86928(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_C8AB98()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

void sub_C8ABC8(uint64_t a1)
{
  uint64_t v1;

  sub_C870DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_C8ABD0()
{
  uint64_t v0;

  sub_C87710(v0);
}

uint64_t sub_C8ABD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_errorRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C8AC04()
{
  uint64_t v0;

  return sub_C85478(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_C8AC0C()
{
  uint64_t v0;

  return sub_C84108(v0);
}

double sub_C8AC14(uint64_t a1)
{
  uint64_t v1;

  return sub_C84930(a1, v1);
}

uint64_t sub_C8AC1C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_C84570(a1, a2, v2);
}

uint64_t sub_C8AC24()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_C8AC58()
{
  uint64_t v0;

  return sub_C8479C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_49Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_C8ACCC()
{
  return sub_184F98(&qword_14FF910, &qword_14FF7C8, (void (*)(void))sub_C8AD00);
}

unint64_t sub_C8AD00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FF918;
  if (!qword_14FF918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FF7C0);
    sub_5C150((unint64_t *)&unk_14FF920, &qword_14FF7B8, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14FF918);
  }
  return result;
}

uint64_t sub_C8ADD8(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C8AEC8, 0, 0);
}

uint64_t sub_C8AEC8()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B4380, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C8B768;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C8B768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C8B7CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C8B7CC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B43A8, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFBC8, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8BB7C(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C8BC6C, 0, 0);
}

uint64_t sub_C8BC6C()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B43F8, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C8C50C;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C8C50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C8C570;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C8C570()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B4420, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFBE8, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8C920(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C8CA10, 0, 0);
}

uint64_t sub_C8CA10()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B45D8, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C8D2B0;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C8D2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C8D314;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C8D314()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B4600, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFC68, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8D6C4(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_C8D7B8, 0, 0);
}

uint64_t sub_C8D7B8()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  uint64_t v89;
  _OWORD v90[4];
  uint64_t v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v90[2] = *(_OWORD *)(v2 + 32);
  v90[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v90[0] = *(_OWORD *)v2;
  v90[1] = v5;
  v96 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v94 = *(_OWORD *)(v0 + 104);
  v95 = *(_OWORD *)(v0 + 120);
  v91 = v4;
  v92 = v6;
  v93 = v7;
  v8 = v6(v90);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_BE354C((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v87 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_BA95EC(v28, v29, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_8AD610((_QWORD *)(v0 + 144));
      _os_log_impl(&dword_0, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v87, v25);
    }
    else
    {
      sub_8AD610((_QWORD *)(v0 + 144));

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_56024(v31, &qword_14FB798);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_13B4560, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_BE354C((_QWORD *)(v0 + 272));
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v49 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_CB00B8, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v88 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_C8DED8;
    return v88();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_BE354C((_QWORD *)(v0 + 400));
    sub_210FB4(v53, v54);
    sub_BE354C((_QWORD *)(v0 + 400));
    v63 = sub_210FB4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v89 = *(_QWORD *)(v0 + 960);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v71;
      *(_DWORD *)v70 = 136446466;
      sub_8AD610((_QWORD *)(v0 + 400));
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v67;
      *(_QWORD *)(v70 + 4) = sub_BA95EC(v72, v73, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_8AD610((_QWORD *)(v0 + 400));
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_1492CC(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_BA95EC(v74, v76, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);
      _os_log_impl(&dword_0, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v86, v89);
    }
    else
    {
      sub_8AD610((_QWORD *)(v0 + 400));
      sub_8AD610((_QWORD *)(v0 + 400));
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_BBE8FC();
    v78 = swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v79 = v53;
    v79[1] = v54;
    v80 = *(_QWORD *)(v0 + 1000);
    v81 = *(_QWORD *)(v0 + 992);
    v82 = *(_QWORD *)(v0 + 984);
    v83 = *(_QWORD *)(v0 + 976);
    v84 = *(_QWORD *)(v0 + 952);
    v85 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C8DED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C8E220;
  else
    v3 = sub_C8DF3C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C8DF3C()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_BE354C((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_8AD610((_QWORD *)(v0 + 784));
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v39);
    _os_log_impl(&dword_0, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_8AD610((_QWORD *)(v0 + 784));

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_13B4588, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_BE354C((_QWORD *)(v0 + 528));
  sub_BBDAAC(v25, (uint64_t)&unk_14FFC48, v31);
  swift_release();
  swift_release();
  sub_56024(v25, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8E220()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_BE354C((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_BE354C((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1024);
    v15 = *(_QWORD *)(v0 + 960);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v37[0] = v17;
    *(_DWORD *)v16 = 136446466;
    sub_8AD610((_QWORD *)(v0 + 656));
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, v37);
    swift_bridgeObjectRelease();
    sub_8AD610((_QWORD *)(v0 + 656));
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 912, v20);
    *(_QWORD *)(v16 + 14) = sub_BA95EC(v21, v22, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v23 = v36(v35, v15);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 1048);
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1024);
    v26 = *(_QWORD *)(v0 + 984);
    v27 = *(_QWORD *)(v0 + 960);
    sub_8AD610((_QWORD *)(v0 + 656));
    sub_8AD610((_QWORD *)(v0 + 656));
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    v23 = v25(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 1000);
  v29 = *(_QWORD *)(v0 + 992);
  v30 = *(_QWORD *)(v0 + 984);
  v31 = *(_QWORD *)(v0 + 976);
  v32 = *(_QWORD *)(v0 + 952);
  v33 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v23);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8E4CC(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_C8E5C0, 0, 0);
}

uint64_t sub_C8E5C0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_1399BC((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_BA95EC(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_BE327C((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      _os_log_impl(&dword_0, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_BE327C((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_56024(v31, &qword_14FB798);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_13B44E8, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_1399BC((_QWORD *)(v0 + 272));
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v49 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_CAFF6C, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_C8ED18;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_1399BC((_QWORD *)(v0 + 400));
    sub_210FB4(v53, v54);
    sub_1399BC((_QWORD *)(v0 + 400));
    v63 = sub_210FB4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_BA95EC(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_1492CC(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_BA95EC(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);
      _os_log_impl(&dword_0, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_BBE8FC();
    v78 = swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v79 = v53;
    v79[1] = v54;
    v80 = *(_QWORD *)(v0 + 1000);
    v81 = *(_QWORD *)(v0 + 992);
    v82 = *(_QWORD *)(v0 + 984);
    v83 = *(_QWORD *)(v0 + 976);
    v84 = *(_QWORD *)(v0 + 952);
    v85 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C8ED18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C8F070;
  else
    v3 = sub_C8ED7C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C8ED7C()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_1399BC((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v39);
    _os_log_impl(&dword_0, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_13B4510, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_1399BC((_QWORD *)(v0 + 528));
  sub_BBDAAC(v25, (uint64_t)&unk_14FFC28, v31);
  swift_release();
  swift_release();
  sub_56024(v25, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8F070()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_1399BC((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_1399BC((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1024);
    v34 = *(_QWORD *)(v0 + 960);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37[0] = v16;
    *(_DWORD *)v15 = 136446466;
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    v17 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v15 + 4) = sub_BA95EC(v17, v18, v37);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v20 = (char *)String.init<A>(describing:)(v0 + 912, v19);
    *(_QWORD *)(v15 + 14) = sub_BA95EC(v20, v21, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v22 = v36(v35, v34);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 1048);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 984);
    v26 = *(_QWORD *)(v0 + 960);
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v22 = v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 1000);
  v28 = *(_QWORD *)(v0 + 992);
  v29 = *(_QWORD *)(v0 + 984);
  v30 = *(_QWORD *)(v0 + 976);
  v31 = *(_QWORD *)(v0 + 952);
  v32 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8F340(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 992) = v2;
  *(_BYTE *)(v3 + 1112) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 1008) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 1016) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 1024) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 1032) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1040) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1048) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1056) = swift_task_alloc(v8);
  v9 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 128) = v9;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(v2 + 128);
  v10 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v10;
  v11 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v11;
  v12 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v12;
  return swift_task_switch(sub_C8F43C, 0, 0);
}

uint64_t sub_C8F43C()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  uint64_t v89;
  _OWORD v90[5];
  uint64_t (*v91)(_QWORD);
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1112) & 1) != 0)
    goto LABEL_3;
  v2 = *(_OWORD **)(v0 + 992);
  v3 = v2[3];
  v90[2] = v2[2];
  v90[3] = v3;
  v90[4] = v2[4];
  v4 = v2[1];
  v90[0] = *v2;
  v90[1] = v4;
  v5 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_OWORD *)(v0 + 128);
  v93 = *(_OWORD *)(v0 + 112);
  v94 = v7;
  v95 = *(_QWORD *)(v0 + 144);
  v91 = v5;
  v92 = v6;
  v8 = v5(v90);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v10 = *(_QWORD *)(v0 + 1056);
    v11 = *(_QWORD *)(v0 + 1024);
    v12 = *(_QWORD *)(v0 + 1016);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 1064) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1072) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 264) = v15;
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 144);
    v16 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 200) = v16;
    v17 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 232) = v17;
    v18 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 152) = *v1;
    *(_OWORD *)(v0 + 168) = v18;
    v19 = sub_BE11DC(v0 + 152);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1056);
    v24 = *(_QWORD *)(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 1016);
    if (v22)
    {
      v87 = *(_QWORD *)(v0 + 1056);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 224));
      *(_QWORD *)(v26 + 4) = sub_BA95EC(v28, v29, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_BE101C(v0 + 152);
      _os_log_impl(&dword_0, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v87, v25);
    }
    else
    {
      sub_BE101C(v0 + 152);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1080) = v30;
    v31 = *(_QWORD *)(v0 + 1008);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v32 = *(double *)(v0 + 112);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_56024(v31, &qword_14FB798);
    *(_QWORD *)(v0 + 984) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 976) = v38;
    v39 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 400) = v39;
    *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 144);
    v40 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 336) = v40;
    v41 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 368) = v41;
    v42 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 288) = *v1;
    *(_OWORD *)(v0 + 304) = v42;
    v43 = swift_allocObject(&unk_13B4128, 152, 7);
    v44 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v43 + 112) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v43 + 128) = v44;
    *(_QWORD *)(v43 + 144) = *(_QWORD *)(v0 + 144);
    v45 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v43 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v43 + 64) = v45;
    v46 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v43 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v43 + 96) = v46;
    v47 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v43 + 16) = *v1;
    *(_OWORD *)(v43 + 32) = v47;
    sub_BE11DC(v0 + 288);
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v49 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1088) = Publisher<>.sink(receiveValue:)(sub_CAF91C, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 120);
    v88 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1096) = v51;
    *v51 = v0;
    v51[1] = sub_C8FB74;
    return v88();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v55 = *(_QWORD *)(v0 + 1032);
    v56 = *(_QWORD *)(v0 + 1024);
    v57 = *(_QWORD *)(v0 + 1016);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 536) = v59;
    *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 144);
    v60 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 472) = v60;
    v61 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 504) = v61;
    v62 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 424) = *v1;
    *(_OWORD *)(v0 + 440) = v62;
    sub_BE11DC(v0 + 424);
    sub_210FB4(v53, v54);
    sub_BE11DC(v0 + 424);
    v63 = sub_210FB4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 1032);
    v68 = *(_QWORD *)(v0 + 1024);
    v69 = *(_QWORD *)(v0 + 1016);
    if (v66)
    {
      v89 = *(_QWORD *)(v0 + 1016);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v71;
      *(_DWORD *)v70 = 136446466;
      sub_BE101C(v0 + 424);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 496));
      v86 = v67;
      *(_QWORD *)(v70 + 4) = sub_BA95EC(v72, v73, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_BE101C(v0 + 424);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_1492CC(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_BA95EC(v74, v76, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);
      _os_log_impl(&dword_0, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v86, v89);
    }
    else
    {
      sub_BE101C(v0 + 424);
      sub_BE101C(v0 + 424);
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_BBE8FC();
    v78 = swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v79 = v53;
    v79[1] = v54;
    v80 = *(_QWORD *)(v0 + 1056);
    v81 = *(_QWORD *)(v0 + 1048);
    v82 = *(_QWORD *)(v0 + 1040);
    v83 = *(_QWORD *)(v0 + 1032);
    v84 = *(_QWORD *)(v0 + 1008);
    v85 = *(_QWORD *)(v0 + 1000);
    swift_willThrow(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C8FB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1096);
  *(_QWORD *)(*(_QWORD *)v1 + 1104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C8FED4;
  else
    v3 = sub_C8FBD8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C8FBD8()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1048);
  v5 = *(_QWORD *)(v0 + 1016);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 944) = v6;
  *(_QWORD *)(v0 + 960) = *(_QWORD *)(v0 + 144);
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 864) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 880) = v7;
  v8 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 896) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 912) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 832) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 848) = v9;
  v10 = sub_BE11DC(v0 + 832);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
  v15 = *(_QWORD *)(v0 + 1048);
  v16 = *(_QWORD *)(v0 + 1016);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 904));
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_BE101C(v0 + 832);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v39);
    _os_log_impl(&dword_0, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_BE101C(v0 + 832);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1056);
  v22 = *(_QWORD *)(v0 + 1048);
  v23 = *(_QWORD *)(v0 + 1040);
  v24 = *(_QWORD *)(v0 + 1032);
  v38 = *(_QWORD *)(v0 + 1008);
  v25 = *(_QWORD *)(v0 + 1000);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 672) = v27;
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 144);
  v28 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 608) = v28;
  v29 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 640) = v29;
  v30 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 560) = *v1;
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_13B4150, 168, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v32;
  *(_QWORD *)(v31 + 160) = *(_QWORD *)(v0 + 144);
  v33 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v33;
  v34 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v34;
  v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v35;
  sub_BE11DC(v0 + 560);
  sub_BBDAAC(v25, (uint64_t)&unk_14FFB28, v31);
  swift_release();
  swift_release();
  sub_56024(v25, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C8FED4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1104);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1040);
  v5 = *(_QWORD *)(v0 + 1016);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 808) = v7;
  *(_QWORD *)(v0 + 824) = *(_QWORD *)(v0 + 144);
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 744) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 776) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 712) = v10;
  sub_BE11DC(v0 + 696);
  swift_errorRetain(v1);
  sub_BE11DC(v0 + 696);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1104);
    v35 = *(_QWORD *)(v0 + 1040);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    v15 = *(_QWORD *)(v0 + 1016);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v37[0] = v17;
    *(_DWORD *)v16 = 136446466;
    sub_BE101C(v0 + 696);
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 768));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, v37);
    swift_bridgeObjectRelease();
    sub_BE101C(v0 + 696);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 968) = v14;
    swift_errorRetain(v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 968, v20);
    *(_QWORD *)(v16 + 14) = sub_BA95EC(v21, v22, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v23 = v36(v35, v15);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 1104);
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    v26 = *(_QWORD *)(v0 + 1040);
    v27 = *(_QWORD *)(v0 + 1016);
    sub_BE101C(v0 + 696);
    sub_BE101C(v0 + 696);
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    v23 = v25(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 1056);
  v29 = *(_QWORD *)(v0 + 1048);
  v30 = *(_QWORD *)(v0 + 1040);
  v31 = *(_QWORD *)(v0 + 1032);
  v32 = *(_QWORD *)(v0 + 1008);
  v33 = *(_QWORD *)(v0 + 1000);
  swift_willThrow(v23);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C90188(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C90278, 0, 0);
}

uint64_t sub_C90278()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B4470, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C90B18;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C90B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C90B7C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C90B7C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B4498, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFC08, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C90F2C(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C9101C, 0, 0);
}

uint64_t sub_C9101C()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B4290, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C918BC;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C918BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C91920;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C91920()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B42B8, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFB88, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C91CD0(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C91DC0, 0, 0);
}

uint64_t sub_C91DC0()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B3DE0, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C92660;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C92660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C926C4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C926C4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B3E08, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFA50, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C92A74(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(v2 + 1240) = v1;
  *(_BYTE *)(v2 + 1362) = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v2 + 1248) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v2 + 1256) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v2 + 1264) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 1272) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 1280) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 1288) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 1296) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 1304) = swift_task_alloc(v7);
  return swift_task_switch(sub_C92B48, 0, 0);
}

uint64_t sub_C92B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  char *v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77[2];

  if ((*(_BYTE *)(v0 + 1362) & 1) != 0 || (v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 1240) + 144))(), v2 == 1))
  {
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v3 = *(_QWORD *)(v0 + 1304);
    v4 = *(_QWORD *)(v0 + 1272);
    v5 = *(_QWORD *)(v0 + 1264);
    v6 = *(_QWORD *)(v0 + 1240);
    v7 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 1312) = v7;
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(_QWORD *)(v0 + 1320) = v8;
    v8(v3, v7, v5);
    v9 = sub_5C238(v6, v0 + 16, &qword_14FB400);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 1304);
    v14 = *(_QWORD *)(v0 + 1272);
    v15 = *(_QWORD *)(v0 + 1264);
    if (v12)
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v77[0] = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = *(_BYTE *)(v0 + 153);
      sub_56024(v0 + 16, &qword_14FB400);
      v19 = (char *)ActionType.rawValue.getter(v18);
      *(_QWORD *)(v16 + 4) = sub_BA95EC(v19, v20, v77);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "%{public}s: performing…", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      sub_56024(v0 + 16, &qword_14FB400);
    }

    v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v21(v13, v15);
    *(_QWORD *)(v0 + 1328) = v21;
    v22 = *(_QWORD *)(v0 + 1256);
    v23 = *(_QWORD *)(v0 + 1240);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v24 = *(double *)(v23 + 160);
    v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 1, 1, v26);
    v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v22, v24);

    sub_56024(v22, &qword_14FB798);
    *(_QWORD *)(v0 + 1232) = v27;
    v28 = type metadata accessor for NSTimer.TimerPublisher(0);
    v29 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v30 = ConnectablePublisher.autoconnect()(v28, v29);
    swift_release();
    *(_QWORD *)(v0 + 1224) = v30;
    sub_5C238(v23, v0 + 616, &qword_14FB400);
    v31 = swift_allocObject(&unk_13B3E58, 216, 7);
    v32 = *(_OWORD *)(v0 + 792);
    *(_OWORD *)(v31 + 176) = *(_OWORD *)(v0 + 776);
    *(_OWORD *)(v31 + 192) = v32;
    *(_QWORD *)(v31 + 208) = *(_QWORD *)(v0 + 808);
    v33 = *(_OWORD *)(v0 + 728);
    *(_OWORD *)(v31 + 112) = *(_OWORD *)(v0 + 712);
    *(_OWORD *)(v31 + 128) = v33;
    v34 = *(_OWORD *)(v0 + 760);
    *(_OWORD *)(v31 + 144) = *(_OWORD *)(v0 + 744);
    *(_OWORD *)(v31 + 160) = v34;
    v35 = *(_OWORD *)(v0 + 664);
    *(_OWORD *)(v31 + 48) = *(_OWORD *)(v0 + 648);
    *(_OWORD *)(v31 + 64) = v35;
    v36 = *(_OWORD *)(v0 + 696);
    *(_OWORD *)(v31 + 80) = *(_OWORD *)(v0 + 680);
    *(_OWORD *)(v31 + 96) = v36;
    v37 = *(_OWORD *)(v0 + 632);
    *(_OWORD *)(v31 + 16) = *(_OWORD *)(v0 + 616);
    *(_OWORD *)(v31 + 32) = v37;
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v39 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1336) = Publisher<>.sink(receiveValue:)(sub_CAF3C4, v31, v38, v39);
    swift_release();
    swift_release();
    v40 = *(int **)(v23 + 168);
    v75 = (int *)((char *)v40 + *v40);
    v41 = (_QWORD *)swift_task_alloc(v40[1]);
    *(_QWORD *)(v0 + 1344) = v41;
    *v41 = v0;
    v41[1] = sub_C9321C;
    return ((uint64_t (*)(uint64_t, _QWORD))v75)(v0 + 1360, *(_QWORD *)(v0 + 1240));
  }
  else
  {
    v43 = v1;
    v44 = v2;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v45 = *(_QWORD *)(v0 + 1280);
    v46 = *(_QWORD *)(v0 + 1272);
    v47 = *(_QWORD *)(v0 + 1264);
    v48 = *(_QWORD *)(v0 + 1240);
    v49 = __swift_project_value_buffer(v47, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v45, v49, v47);
    sub_5C238(v48, v0 + 216, &qword_14FB400);
    sub_210FB4(v43, v44);
    v50 = swift_bridgeObjectRetain();
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.error.getter(v51);
    v53 = os_log_type_enabled(v51, v52);
    v54 = *(_QWORD *)(v0 + 1280);
    v55 = *(_QWORD *)(v0 + 1272);
    v56 = *(_QWORD *)(v0 + 1264);
    if (v53)
    {
      v76 = *(_QWORD *)(v0 + 1264);
      v57 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      v77[0] = v58;
      *(_DWORD *)v57 = 136446466;
      v74 = v54;
      v59 = *(_BYTE *)(v0 + 353);
      sub_56024(v0 + 216, &qword_14FB400);
      v60 = (char *)ActionType.rawValue.getter(v59);
      *(_QWORD *)(v57 + 4) = sub_BA95EC(v60, v61, v77);
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2082;
      swift_bridgeObjectRetain();
      v62 = (char *)Optional<A>.description.getter(v43, v44);
      v64 = v63;
      sub_1492CC(v43, v44);
      *(_QWORD *)(v57 + 14) = sub_BA95EC(v62, v64, v77);
      swift_bridgeObjectRelease();
      sub_1492CC(v43, v44);
      sub_1492CC(v43, v44);
      _os_log_impl(&dword_0, v51, v52, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v74, v76);
    }
    else
    {
      sub_56024(v0 + 216, &qword_14FB400);
      sub_1492CC(v43, v44);
      sub_1492CC(v43, v44);

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
    v65 = sub_BBE8FC();
    v66 = swift_allocError(&type metadata for ActionError, v65, 0, 0);
    *v67 = v43;
    v67[1] = v44;
    v68 = *(_QWORD *)(v0 + 1304);
    v69 = *(_QWORD *)(v0 + 1296);
    v70 = *(_QWORD *)(v0 + 1288);
    v71 = *(_QWORD *)(v0 + 1280);
    v72 = *(_QWORD *)(v0 + 1256);
    v73 = *(_QWORD *)(v0 + 1248);
    swift_willThrow(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C9321C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1344);
  *(_QWORD *)(*(_QWORD *)v1 + 1352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C935F4;
  else
    v3 = sub_C93280;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C93280()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  char *v14;
  char *v15;
  Swift::String v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  char *v41[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1320);
  v2 = *(_QWORD *)(v0 + 1312);
  v3 = *(_QWORD *)(v0 + 1296);
  v4 = *(_QWORD *)(v0 + 1264);
  v5 = *(_QWORD *)(v0 + 1240);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v6 = sub_5C238(v5, v0 + 816, &qword_14FB400);
  v7 = *(_BYTE *)(v0 + 1360);
  v8 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 1296);
    v38 = *(_QWORD *)(v0 + 1264);
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1328);
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(64, -1);
    v40 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = *(_BYTE *)(v0 + 953);
    sub_56024(v0 + 816, &qword_14FB400);
    v14 = (char *)ActionType.rawValue.getter(v13);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v14, v15, &v40);
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    v41[0] = 0;
    v41[1] = (char *)0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v41, " with result: ");
    HIBYTE(v41[1]) = -18;
    *(_BYTE *)(v0 + 1361) = v7;
    v16._countAndFlagsBits = String.init<A>(describing:)(v0 + 1361, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 14) = sub_BA95EC(v41[0], v41[1], &v40);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v9, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    v39(v10, v38);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 1328);
    v18 = *(_QWORD *)(v0 + 1296);
    v19 = *(_QWORD *)(v0 + 1264);
    sub_56024(v0 + 816, &qword_14FB400);

    v17(v18, v19);
  }
  v20 = *(_QWORD *)(v0 + 1304);
  v21 = *(_QWORD *)(v0 + 1296);
  v22 = *(_QWORD *)(v0 + 1288);
  v23 = *(_QWORD *)(v0 + 1280);
  v24 = *(_QWORD *)(v0 + 1256);
  v25 = *(_QWORD *)(v0 + 1248);
  v26 = *(_QWORD *)(v0 + 1240);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v25, 1, 1, v27);
  sub_5C238(v26, v0 + 416, &qword_14FB400);
  v28 = *(_BYTE *)(v0 + 1360);
  v29 = swift_allocObject(&unk_13B3E80, 233, 7);
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  v30 = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v29 + 192) = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v29 + 208) = v30;
  *(_QWORD *)(v29 + 224) = *(_QWORD *)(v0 + 608);
  v31 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v29 + 128) = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v29 + 144) = v31;
  v32 = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v29 + 160) = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v29 + 176) = v32;
  v33 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v29 + 80) = v33;
  v34 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v29 + 96) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v29 + 112) = v34;
  v35 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v29 + 48) = v35;
  *(_BYTE *)(v29 + 232) = v28;
  sub_BBDAAC(v25, (uint64_t)&unk_14FFA68, v29);
  swift_release();
  swift_release();
  sub_56024(v25, (uint64_t *)&unk_1500E30);
  v36 = *(unsigned __int8 *)(v0 + 1360);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
}

uint64_t sub_C935F4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35[2];

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1320);
  v3 = *(_QWORD *)(v0 + 1312);
  v4 = *(_QWORD *)(v0 + 1288);
  v5 = *(_QWORD *)(v0 + 1264);
  v6 = *(_QWORD *)(v0 + 1240);
  v7 = swift_release();
  v2(v4, v3, v5, v7);
  sub_5C238(v6, v0 + 1016, &qword_14FB400);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 1352);
    v33 = *(_QWORD *)(v0 + 1288);
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1328);
    v12 = *(_QWORD *)(v0 + 1264);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v35[0] = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = *(_BYTE *)(v0 + 1153);
    sub_56024(v0 + 1016, &qword_14FB400);
    v16 = (char *)ActionType.rawValue.getter(v15);
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v16, v17, v35);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v0 + 1216) = v11;
    swift_errorRetain(v11);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v19 = (char *)String.init<A>(describing:)(v0 + 1216, v18);
    *(_QWORD *)(v13 + 14) = sub_BA95EC(v19, v20, v35);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl(&dword_0, v9, v10, "%{public}s: perform failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    v21 = v34(v33, v12);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 1352);
    v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1328);
    v24 = *(_QWORD *)(v0 + 1288);
    v25 = *(_QWORD *)(v0 + 1264);
    sub_56024(v0 + 1016, &qword_14FB400);
    swift_errorRelease(v22);
    swift_errorRelease(v22);

    v21 = v23(v24, v25);
  }
  v26 = *(_QWORD *)(v0 + 1304);
  v27 = *(_QWORD *)(v0 + 1296);
  v28 = *(_QWORD *)(v0 + 1288);
  v29 = *(_QWORD *)(v0 + 1280);
  v30 = *(_QWORD *)(v0 + 1256);
  v31 = *(_QWORD *)(v0 + 1248);
  swift_willThrow(v21);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9388C(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_C93980, 0, 0);
}

uint64_t sub_C93980()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_BE1EDC((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_BA95EC(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_BE327C((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);
      _os_log_impl(&dword_0, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_BE327C((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_56024(v31, &qword_14FB798);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_13B41A0, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_BE1EDC((_QWORD *)(v0 + 272));
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v49 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_CAFABC, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_C940D8;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_BE1EDC((_QWORD *)(v0 + 400));
    sub_210FB4(v53, v54);
    sub_BE1EDC((_QWORD *)(v0 + 400));
    v63 = sub_210FB4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_BA95EC(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_1492CC(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_BA95EC(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);
      _os_log_impl(&dword_0, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_BBE8FC();
    v78 = swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v79 = v53;
    v79[1] = v54;
    v80 = *(_QWORD *)(v0 + 1000);
    v81 = *(_QWORD *)(v0 + 992);
    v82 = *(_QWORD *)(v0 + 984);
    v83 = *(_QWORD *)(v0 + 976);
    v84 = *(_QWORD *)(v0 + 952);
    v85 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C940D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C94430;
  else
    v3 = sub_C9413C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9413C()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_BE1EDC((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v39);
    _os_log_impl(&dword_0, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_13B41C8, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_BE1EDC((_QWORD *)(v0 + 528));
  sub_BBDAAC(v25, (uint64_t)&unk_14FFB48, v31);
  swift_release();
  swift_release();
  sub_56024(v25, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C94430()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_BE1EDC((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_BE1EDC((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1024);
    v34 = *(_QWORD *)(v0 + 960);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37[0] = v16;
    *(_DWORD *)v15 = 136446466;
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    v17 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v15 + 4) = sub_BA95EC(v17, v18, v37);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v20 = (char *)String.init<A>(describing:)(v0 + 912, v19);
    *(_QWORD *)(v15 + 14) = sub_BA95EC(v20, v21, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v22 = v36(v35, v34);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 1048);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 984);
    v26 = *(_QWORD *)(v0 + 960);
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v22 = v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 1000);
  v28 = *(_QWORD *)(v0 + 992);
  v29 = *(_QWORD *)(v0 + 984);
  v30 = *(_QWORD *)(v0 + 976);
  v31 = *(_QWORD *)(v0 + 952);
  v32 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C94700(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_C947F4, 0, 0);
}

uint64_t sub_C947F4()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_BE1EDC((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_BA95EC(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_BE327C((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);
      _os_log_impl(&dword_0, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_BE327C((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_56024(v31, &qword_14FB798);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_13B4218, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_BE1EDC((_QWORD *)(v0 + 272));
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v49 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_CB0294, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_C94F4C;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_BE1EDC((_QWORD *)(v0 + 400));
    sub_210FB4(v53, v54);
    sub_BE1EDC((_QWORD *)(v0 + 400));
    v63 = sub_210FB4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_BA95EC(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_1492CC(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_BA95EC(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);
      _os_log_impl(&dword_0, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_1492CC(v53, v54);
      sub_1492CC(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_BBE8FC();
    v78 = swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v79 = v53;
    v79[1] = v54;
    v80 = *(_QWORD *)(v0 + 1000);
    v81 = *(_QWORD *)(v0 + 992);
    v82 = *(_QWORD *)(v0 + 984);
    v83 = *(_QWORD *)(v0 + 976);
    v84 = *(_QWORD *)(v0 + 952);
    v85 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C94F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB0288;
  else
    v3 = sub_C94FB0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C94FB0()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_BE1EDC((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v39);
    _os_log_impl(&dword_0, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_13B4240, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_BE1EDC((_QWORD *)(v0 + 528));
  sub_BBDAAC(v25, (uint64_t)&unk_14FFB68, v31);
  swift_release();
  swift_release();
  sub_56024(v25, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C952A4(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C95394, 0, 0);
}

uint64_t sub_C95394()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B4308, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C95C34;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C95C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C95C98;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C95C98()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B4330, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFBA8, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C96048(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C96138, 0, 0);
}

uint64_t sub_C96138()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B3F48, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C969D8;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C969D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C96A3C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C96A3C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B3F70, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFAA8, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C96DEC(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C96EDC, 0, 0);
}

uint64_t sub_C96EDC()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B3FC0, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CAF6E8, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C9777C;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C9777C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C97B90;
  else
    v3 = sub_C977E0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C977E0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B3FE8, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFAC8, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C97B90()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t type;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *log;
  uint64_t v42[2];

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 224);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = *(_QWORD *)(v0 + 248);
    v37 = *(_QWORD *)(v0 + 176);
    v38 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 192);
    type = v16;
    v18 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v42[0] = v36;
    *(_DWORD *)v18 = 136446466;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v19 = (char *)ActionType.rawValue.getter(v10);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v19, v20, v42);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v17;
    swift_errorRetain(v17);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v22 = (char *)String.init<A>(describing:)(v0 + 144, v21);
    *(_QWORD *)(v18 + 14) = sub_BA95EC(v22, v23, v42);
    swift_bridgeObjectRelease();
    swift_errorRelease(v17);
    swift_errorRelease(v17);
    _os_log_impl(&dword_0, log, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_release_n(v13, 2);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v40, v27);
  }
  v29 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 160);
  swift_willThrow(v24);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C97F18(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C98008, 0, 0);
}

uint64_t sub_C98008()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B4038, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C988A8;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C988A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C9890C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9890C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B4060, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFAE8, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C98CBC(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_C98DAC, 0, 0);
}

uint64_t sub_C98DAC()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[3];
  char v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v90[0] = *(_OWORD *)(v0 + 16);
  v90[1] = v5;
  v90[2] = *(_OWORD *)(v0 + 48);
  v91 = v1;
  v92 = v2;
  v93 = v3;
  v94 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v95 = *(_OWORD *)(v0 + 96);
  v96 = v6;
  v7 = v2(v90);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = __swift_project_value_buffer(v10, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v84 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v80 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_56024(v25, &qword_14FB798);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_13B40B0, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v43 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_CB028C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v87 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_C9964C;
    return v87();
  }
  else
  {
    v47 = v8;
    v89 = v7;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = __swift_project_value_buffer(v50, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v81 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v89;
    sub_210FB4(v89, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_210FB4(v89, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v88 = *(_QWORD *)(v0 + 184);
    v85 = *(_QWORD *)(v0 + 176);
    v86 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v62 = swift_slowAlloc(22, -1);
      v79 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v79;
      *(_DWORD *)v62 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v63 = (char *)ActionType.rawValue.getter(v81);
      *(_QWORD *)(v62 + 4) = sub_BA95EC(v63, v64, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v62 + 12) = 2082;
      swift_bridgeObjectRetain();
      v65 = Optional<A>.description.getter(v89, v47);
      v67 = v66;
      sub_1492CC(v89, v47);
      v68 = (char *)v65;
      v58 = v89;
      *(_QWORD *)(v62 + 14) = sub_BA95EC(v68, v67, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2);
      swift_release_n(v53, 2);
      swift_release_n(v54, 2);
      swift_release_n(v55, 2);
      swift_release_n(v56, 2);
      swift_release_n(v57, 2);
      sub_1492CC(v89, v47);
      sub_1492CC(v89, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    v69 = sub_BBE8FC();
    v70 = swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v71 = v58;
    v71[1] = v47;
    v73 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C9964C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02AC;
  else
    v3 = sub_C996B0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C996B0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_13B40D8, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFB08, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C99A60(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 240) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v3 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 152) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 160) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 168) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 176) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  v9 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v9;
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  return swift_task_switch(sub_C99B48, 0, 0);
}

uint64_t sub_C99B48()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  BOOL v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *log;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void);
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t (*v89)(_QWORD);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;

  if ((*(_BYTE *)(v0 + 240) & 1) != 0)
    goto LABEL_3;
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(uint64_t (**)(_QWORD))(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 104);
  v85 = *(_QWORD *)(v0 + 16);
  v86 = *(_OWORD *)(v0 + 24);
  v87 = v1;
  v88 = v2;
  v89 = v3;
  v90 = v4;
  v91 = v5;
  v92 = v6;
  v80 = v86;
  v83 = *(_OWORD *)(v0 + 88);
  v93 = v83;
  v94 = v7;
  v8 = v3(&v85);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v10 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v13 = __swift_project_value_buffer(v11, (uint64_t)qword_14FB768);
    *(_QWORD *)(v0 + 200) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    *(_QWORD *)(v0 + 208) = v14;
    v14(v10, v13, v11);
    v78 = *(_BYTE *)(v0 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 160);
    if (v18)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 192);
      v22 = swift_slowAlloc(12, -1);
      v74 = v20;
      v23 = swift_slowAlloc(32, -1);
      v85 = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = (char *)ActionType.rawValue.getter(v78);
      *(_QWORD *)(v22 + 4) = sub_BA95EC(v24, v25, &v85);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl(&dword_0, v16, v17, "%{public}s: performing…", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v21 + 8))(*(os_log_type_t **)typea, v74);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
    v26 = *(_QWORD *)(v0 + 144);
    sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
    v27 = *(double *)(v0 + 72);
    v28 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v29 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v26, 1, 1, v29);
    v30 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v28, NSRunLoopCommonModes, v26, v27);

    sub_56024(v26, &qword_14FB798);
    *(_QWORD *)(v0 + 112) = v30;
    v31 = type metadata accessor for NSTimer.TimerPublisher(0);
    v32 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v33 = ConnectablePublisher.autoconnect()(v31, v32);
    swift_release();
    *(_QWORD *)(v0 + 120) = v33;
    v34 = *(_QWORD *)(v0 + 16);
    v35 = *(_QWORD *)(v0 + 40);
    v36 = *(_BYTE *)(v0 + 48);
    v38 = *(_QWORD *)(v0 + 56);
    v37 = *(_QWORD *)(v0 + 64);
    v39 = *(_QWORD *)(v0 + 72);
    v40 = *(int **)(v0 + 80);
    v41 = *(_QWORD *)(v0 + 104);
    v42 = swift_allocObject(&unk_13B3ED0, 112, 7);
    *(_QWORD *)(v42 + 16) = v34;
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v42 + 40) = v35;
    *(_BYTE *)(v42 + 48) = v36;
    *(_QWORD *)(v42 + 56) = v38;
    *(_QWORD *)(v42 + 64) = v37;
    *(_QWORD *)(v42 + 72) = v39;
    *(_QWORD *)(v42 + 80) = v40;
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v0 + 88);
    *(_QWORD *)(v42 + 104) = v41;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
    v44 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CAF508, v42, v43, v44);
    swift_release();
    swift_release();
    v81 = (uint64_t (*)(void))((char *)v40 + *v40);
    v45 = (_QWORD *)swift_task_alloc(v40[1]);
    *(_QWORD *)(v0 + 224) = v45;
    *v45 = v0;
    v45[1] = sub_C9A390;
    return v81();
  }
  else
  {
    v47 = v8;
    v48 = v9;
    if (qword_14F9C88 != -1)
      swift_once(&qword_14F9C88, sub_BBE1CC);
    v50 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 168);
    v51 = *(_QWORD *)(v0 + 152);
    v52 = __swift_project_value_buffer(v51, (uint64_t)qword_14FB768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v52, v51);
    v53 = v80;
    swift_retain();
    swift_retain();
    swift_retain();
    v54 = v83;
    swift_retain();
    swift_retain();
    sub_210FB4(v47, v48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v55 = sub_210FB4(v47, v48);
    v56 = Logger.logObject.getter(v55);
    type = static os_log_type_t.error.getter(v56);
    v57 = os_log_type_enabled(v56, type);
    v84 = *(_QWORD *)(v0 + 168);
    v79 = *(_QWORD *)(v0 + 160);
    v82 = *(_QWORD *)(v0 + 152);
    if (v57)
    {
      log = v56;
      v58 = swift_slowAlloc(22, -1);
      v75 = swift_slowAlloc(64, -1);
      v85 = v75;
      *(_DWORD *)v58 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v59 = (char *)ActionType.rawValue.getter(v2);
      *(_QWORD *)(v58 + 4) = sub_BA95EC(v59, v60, &v85);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v58 + 12) = 2082;
      swift_bridgeObjectRetain();
      v61 = (char *)Optional<A>.description.getter(v47, v48);
      v63 = v62;
      sub_1492CC(v47, v48);
      *(_QWORD *)(v58 + 14) = sub_BA95EC(v61, v63, &v85);
      swift_bridgeObjectRelease();
      sub_1492CC(v47, v48);
      sub_1492CC(v47, v48);
      _os_log_impl(&dword_0, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy(v75, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v58, -1, -1);

    }
    else
    {
      swift_release_n(v53, 2);
      swift_release_n(v1, 2);
      swift_release_n(v4, 2);
      swift_release_n(v54, 2);
      swift_release_n(v7, 2);
      sub_1492CC(v47, v48);
      sub_1492CC(v47, v48);

    }
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v84, v82);
    v64 = sub_BBE8FC();
    v65 = swift_allocError(&type metadata for ActionError, v64, 0, 0);
    *v66 = v47;
    v66[1] = v48;
    v68 = *(_QWORD *)(v0 + 184);
    v67 = *(_QWORD *)(v0 + 192);
    v70 = *(_QWORD *)(v0 + 168);
    v69 = *(_QWORD *)(v0 + 176);
    v72 = *(_QWORD *)(v0 + 136);
    v71 = *(_QWORD *)(v0 + 144);
    swift_willThrow(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_C9A390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C9A76C;
  else
    v3 = sub_C9A3F4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9A3F4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 152);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v31 = *(_BYTE *)(v0 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 152);
  v33 = *(_QWORD *)(v0 + 160);
  if (v8)
  {
    v29 = *(_QWORD *)(v0 + 184);
    v11 = swift_slowAlloc(22, -1);
    v27 = swift_slowAlloc(64, -1);
    v35 = v27;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v31);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(0, (char *)0xE000000000000000, &v35);
    _os_log_impl(&dword_0, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v29, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v26 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 136);
  v32 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 144);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_BYTE *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 64);
  v21 = *(_QWORD *)(v0 + 72);
  v22 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = swift_allocObject(&unk_13B3EF8, 128, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v24 + 56) = v17;
  *(_BYTE *)(v24 + 64) = v18;
  *(_QWORD *)(v24 + 72) = v19;
  *(_QWORD *)(v24 + 80) = v20;
  *(_QWORD *)(v24 + 88) = v21;
  *(_QWORD *)(v24 + 96) = v22;
  *(_OWORD *)(v24 + 104) = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v24 + 120) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_BBDAAC(v14, (uint64_t)&unk_14FFA88, v24);
  swift_release();
  swift_release();
  sub_56024(v14, (uint64_t *)&unk_1500E30);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9A76C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *log;
  uint64_t v41[2];

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = swift_errorRetain(v1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  log = v14;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = v9;
    v17 = *(_QWORD *)(v0 + 232);
    v37 = *(_QWORD *)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 152);
    v39 = *(_QWORD *)(v0 + 176);
    v18 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v41[0] = v36;
    *(_DWORD *)v18 = 136446466;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v19 = (char *)ActionType.rawValue.getter(v16);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v19, v20, v41);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v17;
    swift_errorRetain(v17);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v22 = (char *)String.init<A>(describing:)(v0 + 128, v21);
    *(_QWORD *)(v18 + 14) = sub_BA95EC(v22, v23, v41);
    swift_bridgeObjectRelease();
    swift_errorRelease(v17);
    swift_errorRelease(v17);
    _os_log_impl(&dword_0, log, v15, "%{public}s: perform failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 160);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v10, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  v30 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 176);
  v34 = *(_QWORD *)(v0 + 136);
  v33 = *(_QWORD *)(v0 + 144);
  swift_willThrow(v24);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9AAC0(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_BE381C((_QWORD *)a2);
  v10 = sub_BE381C((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 48));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_139824((_QWORD *)a2);
    sub_139824((_QWORD *)a2);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_139824((_QWORD *)a2);
    sub_139824((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_C9AC9C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1399BC((_QWORD *)a2);
  v10 = sub_1399BC((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_C9AE98(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_BE1EDC((_QWORD *)a2);
  v10 = sub_BE1EDC((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_C9B094(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_C9B154, 0, 0);
}

uint64_t sub_C9B154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B43D0, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_C9B63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB02B0;
  else
    v3 = sub_CB02A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9B6A0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_C9B760, 0, 0);
}

uint64_t sub_C9B760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B4448, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_C9BC48(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_C9BD08, 0, 0);
}

uint64_t sub_C9BD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B4628, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_C9C1F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_C9C2B0, 0, 0);
}

uint64_t sub_C9C2B0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_BE354C((_QWORD *)(v0 + 16));
  v11 = sub_BE354C((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_8AD610((_QWORD *)(v0 + 16));
    sub_8AD610((_QWORD *)(v0 + 16));
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_8AD610((_QWORD *)(v0 + 16));
    sub_8AD610((_QWORD *)(v0 + 16));

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_56024(v23, &qword_14FB798);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_13B45B0, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_BE354C((_QWORD *)(v0 + 272));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v41 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_CB01A8, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_C9C6AC;
  return v46(v1);
}

uint64_t sub_C9C6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C9C91C;
  else
    v3 = sub_C9C710;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9C710()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_BE354C((_QWORD *)(v0 + 528));
  v9 = sub_BE354C((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_8AD610((_QWORD *)(v0 + 528));
    sub_8AD610((_QWORD *)(v0 + 528));
    _os_log_impl(&dword_0, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_8AD610((_QWORD *)(v0 + 528));
    sub_8AD610((_QWORD *)(v0 + 528));
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 712);
  v21 = *(_QWORD *)(v0 + 704);
  v22 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9C91C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_BE354C((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_BE354C((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_8AD610((_QWORD *)(v0 + 400));
    sub_8AD610((_QWORD *)(v0 + 400));
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_BA95EC(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_8AD610((_QWORD *)(v0 + 400));
    sub_8AD610((_QWORD *)(v0 + 400));
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9CBB0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_C9CC70, 0, 0);
}

uint64_t sub_C9CC70()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_1399BC((_QWORD *)(v0 + 16));
  v11 = sub_1399BC((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_56024(v23, &qword_14FB798);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_13B4538, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_1399BC((_QWORD *)(v0 + 272));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v41 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_CB005C, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_C9D08C;
  return v46(v1);
}

uint64_t sub_C9D08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C9D31C;
  else
    v3 = sub_C9D0F0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9D0F0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_1399BC((_QWORD *)(v0 + 528));
  v9 = sub_1399BC((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl(&dword_0, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 712);
  v21 = *(_QWORD *)(v0 + 704);
  v22 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9D31C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_1399BC((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_1399BC((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_BA95EC(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9D5D0(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 720) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 728) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 736) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 744) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 752) = swift_task_alloc(v9);
  v10 = swift_task_alloc(v9);
  v11 = a4[4];
  *(_OWORD *)(v4 + 232) = a4[5];
  v12 = a4[7];
  *(_OWORD *)(v4 + 248) = a4[6];
  *(_OWORD *)(v4 + 264) = v12;
  v13 = *a4;
  *(_OWORD *)(v4 + 168) = a4[1];
  v14 = a4[3];
  *(_OWORD *)(v4 + 184) = a4[2];
  *(_OWORD *)(v4 + 200) = v14;
  *(_OWORD *)(v4 + 216) = v11;
  *(_QWORD *)(v4 + 760) = v10;
  *(_QWORD *)(v4 + 280) = *((_QWORD *)a4 + 16);
  *(_OWORD *)(v4 + 152) = v13;
  return swift_task_switch(sub_C9D6B4, 0, 0);
}

uint64_t sub_C9D6B4()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 152);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v2 = *(_QWORD *)(v0 + 760);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 768) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 776) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 128) = v7;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v8 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v8;
  v9 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v9;
  v10 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v10;
  sub_BE11DC(v0 + 16);
  v11 = sub_BE11DC(v0 + 16);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 760);
  v16 = *(_QWORD *)(v0 + 736);
  v17 = *(_QWORD *)(v0 + 728);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 760);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 88));
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_BE101C(v0 + 16);
    sub_BE101C(v0 + 16);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_BE101C(v0 + 16);
    sub_BE101C(v0 + 16);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 784) = v22;
  v23 = *(_QWORD *)(v0 + 720);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v24 = *(double *)(v0 + 248);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_56024(v23, &qword_14FB798);
  *(_QWORD *)(v0 + 696) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 712) = v30;
  v31 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 400) = v31;
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 280);
  v32 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 336) = v32;
  v33 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 368) = v33;
  v34 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 288) = *v1;
  *(_OWORD *)(v0 + 304) = v34;
  v35 = swift_allocObject(&unk_13B4178, 152, 7);
  v36 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v35 + 112) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v35 + 128) = v36;
  *(_QWORD *)(v35 + 144) = *(_QWORD *)(v0 + 280);
  v37 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v35 + 64) = v37;
  v38 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v35 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v35 + 96) = v38;
  v39 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v35 + 16) = *v1;
  *(_OWORD *)(v35 + 32) = v39;
  sub_BE11DC(v0 + 288);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v41 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 792) = Publisher<>.sink(receiveValue:)(sub_CAFA5C, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 272);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 800) = v43;
  *v43 = v0;
  v43[1] = sub_C9DAC8;
  return v46(v1);
}

uint64_t sub_C9DAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  *(_QWORD *)(*(_QWORD *)v1 + 808) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C9DD54;
  else
    v3 = sub_C9DB2C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9DB2C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  v2 = *(_QWORD *)(v0 + 768);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = *(_QWORD *)(v0 + 728);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 232);
  v6 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 672) = v6;
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 280);
  v7 = *(_OWORD *)(v0 + 168);
  v8 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 608) = v8;
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 640) = v5;
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 576) = v7;
  sub_BE11DC(v0 + 560);
  v9 = sub_BE11DC(v0 + 560);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
  v14 = *(_QWORD *)(v0 + 752);
  v15 = *(_QWORD *)(v0 + 728);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 632));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_BE101C(v0 + 560);
    sub_BE101C(v0 + 560);
    _os_log_impl(&dword_0, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_BE101C(v0 + 560);
    sub_BE101C(v0 + 560);
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 752);
  v21 = *(_QWORD *)(v0 + 744);
  v22 = *(_QWORD *)(v0 + 720);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9DD54()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 808);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 776);
  v3 = *(_QWORD *)(v0 + 768);
  v4 = *(_QWORD *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 728);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 232);
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 536) = v8;
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 280);
  v9 = *(_OWORD *)(v0 + 168);
  v10 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 472) = v10;
  *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 504) = v7;
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 440) = v9;
  sub_BE11DC(v0 + 424);
  swift_errorRetain(v1);
  sub_BE11DC(v0 + 424);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 808);
    v31 = *(_QWORD *)(v0 + 744);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v15 = *(_QWORD *)(v0 + 728);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 496));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_BE101C(v0 + 424);
    sub_BE101C(v0 + 424);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 704) = v14;
    swift_errorRetain(v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 704, v20);
    *(_QWORD *)(v16 + 14) = sub_BA95EC(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 808);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v25 = *(_QWORD *)(v0 + 744);
    v26 = *(_QWORD *)(v0 + 728);
    swift_errorRelease(v23);
    sub_BE101C(v0 + 424);
    sub_BE101C(v0 + 424);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 752);
  v28 = *(_QWORD *)(v0 + 744);
  v29 = *(_QWORD *)(v0 + 720);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9E004(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_C9E0C4, 0, 0);
}

uint64_t sub_C9E0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B44C0, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_C9E5AC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_C9E66C, 0, 0);
}

uint64_t sub_C9E66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B42E0, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_C9EB54(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_C9EC14, 0, 0);
}

uint64_t sub_C9EC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B3E30, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_C9F0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_QWORD *)(v5 + 840) = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v5 + 848) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  *(_QWORD *)(v5 + 856) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 864) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 872) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 880) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 888) = swift_task_alloc(v10);
  *(_BYTE *)(v5 + 944) = a5;
  return swift_task_switch(sub_C9F1A4, 0, 0);
}

uint64_t sub_C9F1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  _QWORD *v38;
  int *v40;
  uint64_t v41;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 888);
  v2 = *(_QWORD *)(v0 + 864);
  v3 = *(_QWORD *)(v0 + 856);
  v4 = *(_QWORD *)(v0 + 840);
  v5 = __swift_project_value_buffer(v3, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 896) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 904) = v6;
  v6(v1, v5, v3);
  v7 = sub_5C238(v4, v0 + 216, &qword_14FB400);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 888);
  v12 = *(_QWORD *)(v0 + 864);
  v13 = *(_QWORD *)(v0 + 856);
  if (v10)
  {
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v41 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 353));
    *(_QWORD *)(v14 + 4) = sub_BA95EC(v16, v17, &v41);
    swift_bridgeObjectRelease();
    sub_56024(v0 + 216, &qword_14FB400);
    _os_log_impl(&dword_0, v8, v9, "%{public}s: finishing…", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_56024(v0 + 216, &qword_14FB400);
  }

  v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v18(v11, v13);
  *(_QWORD *)(v0 + 912) = v18;
  v19 = *(_QWORD *)(v0 + 848);
  v20 = *(_QWORD *)(v0 + 840);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v21 = *(double *)(v20 + 160);
  v22 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v23 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  v24 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v22, NSRunLoopCommonModes, v19, v21);

  sub_56024(v19, &qword_14FB798);
  *(_QWORD *)(v0 + 824) = v24;
  v25 = type metadata accessor for NSTimer.TimerPublisher(0);
  v26 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v27 = ConnectablePublisher.autoconnect()(v25, v26);
  swift_release();
  *(_QWORD *)(v0 + 816) = v27;
  sub_5C238(v20, v0 + 16, &qword_14FB400);
  v28 = swift_allocObject(&unk_13B3EA8, 216, 7);
  v29 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v28 + 176) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v28 + 192) = v29;
  *(_QWORD *)(v28 + 208) = *(_QWORD *)(v0 + 208);
  v30 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v28 + 112) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v28 + 128) = v30;
  v31 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v28 + 144) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v28 + 160) = v31;
  v32 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v28 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v28 + 64) = v32;
  v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v28 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v28 + 96) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v28 + 32) = v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v36 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 920) = Publisher<>.sink(receiveValue:)(sub_CAF4E4, v28, v35, v36);
  swift_release();
  swift_release();
  v37 = *(int **)(v20 + 184);
  v40 = (int *)((char *)v37 + *v37);
  v38 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 928) = v38;
  *v38 = v0;
  v38[1] = sub_C9F588;
  return ((uint64_t (*)(_QWORD, uint64_t))v40)(*(_QWORD *)(v0 + 840), v0 + 944);
}

uint64_t sub_C9F588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 928);
  *(_QWORD *)(*(_QWORD *)v1 + 936) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_C9F7E0;
  else
    v3 = sub_C9F5EC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9F5EC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(_QWORD *)(v0 + 880);
  v4 = *(_QWORD *)(v0 + 856);
  v5 = *(_QWORD *)(v0 + 840);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v6 = sub_5C238(v5, v0 + 616, &qword_14FB400);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
  v11 = *(_QWORD *)(v0 + 880);
  v12 = *(_QWORD *)(v0 + 856);
  if (v9)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v22 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 753));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v22);
    swift_bridgeObjectRelease();
    sub_56024(v0 + 616, &qword_14FB400);
    _os_log_impl(&dword_0, v7, v8, "%{public}s: finish success", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
    swift_release();

    v21(v11, v12);
  }
  else
  {
    sub_56024(v0 + 616, &qword_14FB400);
    swift_release();

    v10(v11, v12);
  }
  v17 = *(_QWORD *)(v0 + 880);
  v18 = *(_QWORD *)(v0 + 872);
  v19 = *(_QWORD *)(v0 + 848);
  swift_task_dealloc(*(_QWORD *)(v0 + 888));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9F7E0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 904);
  v3 = *(_QWORD *)(v0 + 896);
  v4 = *(_QWORD *)(v0 + 872);
  v5 = *(_QWORD *)(v0 + 856);
  v6 = *(_QWORD *)(v0 + 840);
  v7 = swift_release();
  v2(v4, v3, v5, v7);
  sub_5C238(v6, v0 + 416, &qword_14FB400);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 936);
    v28 = *(_QWORD *)(v0 + 872);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v12 = *(_QWORD *)(v0 + 856);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v30 = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 553));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v30);
    swift_bridgeObjectRelease();
    sub_56024(v0 + 416, &qword_14FB400);
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v0 + 832) = v11;
    swift_errorRetain(v11);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v18 = (char *)String.init<A>(describing:)(v0 + 832, v17);
    *(_QWORD *)(v13 + 14) = sub_BA95EC(v18, v19, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl(&dword_0, v9, v10, "%{public}s: finish failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v11);
    v29(v28, v12);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 936);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v22 = *(_QWORD *)(v0 + 872);
    v23 = *(_QWORD *)(v0 + 856);
    swift_errorRelease(v20);
    sub_56024(v0 + 416, &qword_14FB400);
    swift_errorRelease(v20);
    swift_errorRelease(v20);

    v21(v22, v23);
  }
  v24 = *(_QWORD *)(v0 + 880);
  v25 = *(_QWORD *)(v0 + 872);
  v26 = *(_QWORD *)(v0 + 848);
  swift_task_dealloc(*(_QWORD *)(v0 + 888));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_C9FA5C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_C9FB1C, 0, 0);
}

uint64_t sub_C9FB1C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_BE1EDC((_QWORD *)(v0 + 16));
  v11 = sub_BE1EDC((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_56024(v23, &qword_14FB798);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_13B41F0, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_BE1EDC((_QWORD *)(v0 + 272));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v41 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_CAFBA4, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_C9FF38;
  return v46(v1);
}

uint64_t sub_C9FF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CA01C8;
  else
    v3 = sub_C9FF9C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_C9FF9C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_BE1EDC((_QWORD *)(v0 + 528));
  v9 = sub_BE1EDC((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    _os_log_impl(&dword_0, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 712);
  v21 = *(_QWORD *)(v0 + 704);
  v22 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA01C8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_BE1EDC((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_BE1EDC((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_BA95EC(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA047C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_CA053C, 0, 0);
}

uint64_t sub_CA053C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_BE1EDC((_QWORD *)(v0 + 16));
  v11 = sub_BE1EDC((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_BE327C((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_56024(v23, &qword_14FB798);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_13B4268, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_BE1EDC((_QWORD *)(v0 + 272));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v41 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_CB0298, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_CA0958;
  return v46(v1);
}

uint64_t sub_CA0958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CB0280;
  else
    v3 = sub_CB0284;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_CA09BC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_CA0A7C, 0, 0);
}

uint64_t sub_CA0A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B4358, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_CA0F64(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_CA1024, 0, 0);
}

uint64_t sub_CA1024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B3F98, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_CA150C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_CA15CC, 0, 0);
}

uint64_t sub_CA15CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B4010, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CAF7B8, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_CA1AB4;
  return v49(v0 + 16);
}

uint64_t sub_CA1AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CA1DD0;
  else
    v3 = sub_CA1B18;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_CA1B18()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v28 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v5, 2);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v29 = v9;
  swift_retain_n(v9, 2);
  v30 = v10;
  v11 = swift_retain_n(v10, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 168);
  if (v14)
  {
    v27 = *(_QWORD *)(v0 + 160);
    v18 = swift_slowAlloc(12, -1);
    v26 = v15;
    v19 = swift_slowAlloc(32, -1);
    v31 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v28);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v31);
    swift_bridgeObjectRelease();
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v29, 2);
    swift_release_n(v30, 2);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finish success", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v27);
  }
  else
  {
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v29, 2);
    swift_release_n(v30, 2);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v22 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA1DD0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *log;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v30 = *(_QWORD *)(v0 + 232);
    v32 = *(_QWORD *)(v0 + 168);
    v33 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 176);
    v17 = swift_slowAlloc(22, -1);
    v31 = swift_slowAlloc(64, -1);
    v37 = v31;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v10);
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v18, v19, &v37);
    swift_bridgeObjectRelease();
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_release_n(v13, 2);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v30;
    swift_errorRetain(v30);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v21 = (char *)String.init<A>(describing:)(v0 + 144, v20);
    *(_QWORD *)(v17 + 14) = sub_BA95EC(v21, v22, &v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v30);
    swift_errorRelease(v30);
    _os_log_impl(&dword_0, log, v16, "%{public}s: finish failed: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v30);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 232);
    v24 = *(_QWORD *)(v0 + 168);
    v35 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v23);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_release_n(v13, 2);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v35, v25);
  }
  v26 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 176);
  v28 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA2138(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_CA21F8, 0, 0);
}

uint64_t sub_CA21F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B4088, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_CA26E0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_CA27A0, 0, 0);
}

uint64_t sub_CA27A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v45 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v47 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v44 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v43 = v17;
    v19 = swift_slowAlloc(32, -1);
    v51 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v45);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v51);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);
    _os_log_impl(&dword_0, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v47, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v48 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v46 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_13B4100, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  *(_OWORD *)(v38 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v48;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v46;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v40 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_CB0290, v38, v39, v40);
  swift_release();
  swift_release();
  v49 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v41 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v41;
  *v41 = v0;
  v41[1] = sub_C9B63C;
  return v49(v0 + 16);
}

uint64_t sub_CA2C88(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB798);
  *(_QWORD *)(v4 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 144) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 152) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 160) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  return swift_task_switch(sub_CA2D40, 0, 0);
}

uint64_t sub_CA2D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_14FB768);
  *(_QWORD *)(v0 + 184) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 192) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v46 = *(_BYTE *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 104);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v48 = v10;
  v11 = swift_retain_n(v10, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 152);
  if (v14)
  {
    v43 = *(_QWORD *)(v0 + 176);
    v18 = swift_slowAlloc(12, -1);
    v42 = v16;
    v19 = swift_slowAlloc(32, -1);
    v49 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v46);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v20, v21, &v49);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v48, 2);
    _os_log_impl(&dword_0, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v43, v42);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v48, 2);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v22 = *(_QWORD *)(v0 + 136);
  sub_4E684(0, (unint64_t *)&qword_14FB7A0, NSTimer_ptr);
  v23 = *(double *)(v0 + 72);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_56024(v22, &qword_14FB798);
  *(_QWORD *)(v0 + 112) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_4DD24((unint64_t *)&qword_14FB7A8, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release();
  *(_QWORD *)(v0 + 120) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 40);
  LOBYTE(v29) = *(_BYTE *)(v0 + 48);
  v32 = *(_QWORD *)(v0 + 56);
  v33 = *(_QWORD *)(v0 + 64);
  v34 = *(_QWORD *)(v0 + 72);
  v35 = *(_QWORD *)(v0 + 88);
  v36 = *(int **)(v0 + 96);
  v44 = *(_QWORD *)(v0 + 80);
  v47 = *(_QWORD *)(v0 + 104);
  v37 = swift_allocObject(&unk_13B3F20, 112, 7);
  *(_QWORD *)(v37 + 16) = v30;
  *(_OWORD *)(v37 + 24) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v37 + 40) = v31;
  *(_BYTE *)(v37 + 48) = v29;
  *(_QWORD *)(v37 + 56) = v32;
  *(_QWORD *)(v37 + 64) = v33;
  *(_QWORD *)(v37 + 72) = v34;
  *(_QWORD *)(v37 + 80) = v44;
  *(_QWORD *)(v37 + 88) = v35;
  *(_QWORD *)(v37 + 96) = v36;
  *(_QWORD *)(v37 + 104) = v47;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB7B0);
  v39 = sub_5C150(&qword_14FB7B8, &qword_14FB7B0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 200) = Publisher<>.sink(receiveValue:)(sub_CAF618, v37, v38, v39);
  swift_release();
  swift_release();
  v45 = (uint64_t (*)(uint64_t))((char *)v36 + *v36);
  v40 = (_QWORD *)swift_task_alloc(v36[1]);
  *(_QWORD *)(v0 + 208) = v40;
  *v40 = v0;
  v40[1] = sub_CA31DC;
  return v45(v0 + 16);
}

uint64_t sub_CA31DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_CA34CC;
  else
    v3 = sub_CA3240;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_CA3240()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v27 = *(_BYTE *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 104);
  swift_retain_n(v5, 2);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v28 = v9;
  v10 = swift_retain_n(v9, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 152);
  if (v13)
  {
    v26 = *(_QWORD *)(v0 + 168);
    v17 = swift_slowAlloc(12, -1);
    v25 = v16;
    v18 = swift_slowAlloc(32, -1);
    v29 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = (char *)ActionType.rawValue.getter(v27);
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v19, v20, &v29);
    swift_bridgeObjectRelease();
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v28, 2);
    _os_log_impl(&dword_0, v11, v12, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v15);
  }
  else
  {
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v28, 2);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA34CC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *log;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 192);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = swift_errorRetain(v1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  log = v14;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 144);
    v35 = *(_QWORD *)(v0 + 160);
    v17 = v9;
    v18 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(64, -1);
    v37 = v32;
    *(_DWORD *)v18 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(v17);
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v19, v20, &v37);
    swift_bridgeObjectRelease();
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v10, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v16;
    swift_errorRetain(v16);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v22 = (char *)String.init<A>(describing:)(v0 + 128, v21);
    *(_QWORD *)(v18 + 14) = sub_BA95EC(v22, v23, &v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    _os_log_impl(&dword_0, log, v15, "%{public}s: finish failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v16);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 144);
    swift_errorRelease(v24);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v10, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA37FC(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_BE354C((_QWORD *)a2);
  v10 = sub_BE354C((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_8AD610((_QWORD *)a2);
    sub_8AD610((_QWORD *)a2);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_8AD610((_QWORD *)a2);
    sub_8AD610((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_CA39D8(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_BE11DC(a2);
  v10 = sub_BE11DC(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 72));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_BE101C(a2);
    sub_BE101C(a2);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_BE101C(a2);
    sub_BE101C(a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_CA3BB4(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  _BYTE v19[200];

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_5C238(a2, (uint64_t)v19, &qword_14FB400);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(v19[137]);
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v18);
    swift_bridgeObjectRelease();
    sub_56024((uint64_t)v19, &qword_14FB400);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_56024((uint64_t)v19, &qword_14FB400);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_CA3D98(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9C88 != -1)
    swift_once(&qword_14F9C88, sub_BBE1CC);
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_14FB768);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_955B18((_QWORD *)a2);
  v10 = sub_955B18((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 32));
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_8AD51C((_QWORD *)a2);
    sub_8AD51C((_QWORD *)a2);
    _os_log_impl(&dword_0, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_8AD51C((_QWORD *)a2);
    sub_8AD51C((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MusicLibrary.ActionableState.description.getter(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  void *object;
  Swift::String v16;
  _QWORD v17[2];
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF930);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = 1701736270;
  switch(HIBYTE(a2))
  {
    case 2:
      return result;
    case 3:
      result = 0x6164644120959EE2;
      break;
    case 4:
      result = 0x1000000000000013;
      break;
    case 5:
      result = 0x1000000000000014;
      break;
    default:
      if ((a2 & 0x100) != 0)
      {
        result = 0x100000000000001DLL;
      }
      else if ((a2 & 1) != 0)
      {
        result = 0x100000000000001ELL;
      }
      else
      {
        v19 = 0;
        v20 = 0xE000000000000000;
        _StringGuts.grow(_:)(24);
        v12 = swift_bridgeObjectRelease(v20);
        v19 = 0x1000000000000014;
        v20 = 0x8000000001107310;
        v17[1] = a1;
        static Locale.autoupdatingCurrent.getter(v12);
        v13 = sub_CA41C0();
        FloatingPointFormatStyle.Percent.init(locale:)(v6, &type metadata for Double, v13);
        v14 = sub_5C150(&qword_14FF940, &qword_14FF930, (uint64_t)&protocol conformance descriptor for FloatingPointFormatStyle<A>.Percent);
        BinaryFloatingPoint.formatted<A>(_:)(&v18, v10, &type metadata for Double, v7, v13, v14);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        object = v18._object;
        String.append(_:)(v18);
        swift_bridgeObjectRelease(object);
        v16._countAndFlagsBits = 8233;
        v16._object = (void *)0xE200000000000000;
        String.append(_:)(v16);
        result = v19;
      }
      break;
  }
  return result;
}

unint64_t sub_CA41C0()
{
  unint64_t result;

  result = qword_14FF938;
  if (!qword_14FF938)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_14FF938);
  }
  return result;
}

uint64_t sub_CA4208(uint64_t a1, uint64_t a2)
{
  return _s8MusicKit0A7LibraryC0A4CoreE15ActionableStateO21__derived_enum_equalsySbAF_AFtFZ_0(*(_QWORD *)a1, *(_WORD *)(a1 + 8), *(_QWORD *)a2, *(_WORD *)(a2 + 8));
}

uint64_t sub_CA4220()
{
  uint64_t v0;

  return MusicLibrary.ActionableState.description.getter(*(_QWORD *)v0, *(_WORD *)(v0 + 8));
}

uint64_t MusicLibrary.performAction<A>(for:on:itemState:alertPresenter:noticePresenter:presentationSource:actionsObserver:metricsReportingContext:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;
  uint64_t v38;

  *(_QWORD *)(v9 + 1176) = v8;
  *(_QWORD *)(v9 + 1168) = v38;
  *(_OWORD *)(v9 + 1152) = v37;
  *(_QWORD *)(v9 + 1144) = a8;
  *(_QWORD *)(v9 + 1136) = a7;
  *(_QWORD *)(v9 + 1128) = a6;
  *(_QWORD *)(v9 + 1120) = a5;
  *(_QWORD *)(v9 + 1112) = a4;
  *(_QWORD *)(v9 + 1104) = a3;
  *(_WORD *)(v9 + 354) = a2;
  *(_QWORD *)(v9 + 1096) = a1;
  v10 = *a4;
  *(_QWORD *)(v9 + 1184) = *a4;
  v11 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  *(_QWORD *)(v9 + 1192) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 1200) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1208) = swift_task_alloc(v13);
  *(_QWORD *)(v9 + 1216) = swift_task_alloc(v13);
  *(_QWORD *)(v9 + 1224) = swift_task_alloc(v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  *(_QWORD *)(v9 + 1232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FAFF8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1240) = swift_task_alloc(v15);
  *(_QWORD *)(v9 + 1248) = swift_task_alloc(v15);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  *(_QWORD *)(v9 + 1256) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v9 + 1264) = v17;
  *(_QWORD *)(v9 + 1272) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Notice.Variant(0);
  *(_QWORD *)(v9 + 1280) = v18;
  *(_QWORD *)(v9 + 1288) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  *(_QWORD *)(v9 + 1296) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v9 + 1304) = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1312) = swift_task_alloc(v21);
  *(_QWORD *)(v9 + 1320) = swift_task_alloc(v21);
  *(_QWORD *)(v9 + 1328) = swift_task_alloc(v21);
  v23 = type metadata accessor for MusicLibrary.DownloadStatus(0, v22);
  *(_QWORD *)(v9 + 1336) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v9 + 1344) = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1352) = swift_task_alloc(v25);
  *(_QWORD *)(v9 + 1360) = swift_task_alloc(v25);
  v26 = type metadata accessor for MusicLibrary.AddStatus(0);
  *(_QWORD *)(v9 + 1368) = v26;
  v27 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v9 + 1376) = v27;
  v28 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1384) = swift_task_alloc(v28);
  *(_QWORD *)(v9 + 1392) = swift_task_alloc(v28);
  v29 = *(_QWORD *)(v10 + class metadata base offset for MusicLibrary.ItemState);
  *(_QWORD *)(v9 + 1400) = v29;
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v9 + 1408) = v30;
  v31 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1416) = swift_task_alloc(v31);
  *(_QWORD *)(v9 + 1424) = swift_task_alloc(v31);
  *(_QWORD *)(v9 + 1432) = swift_task_alloc(v31);
  *(_QWORD *)(v9 + 1440) = swift_task_alloc(v31);
  v32 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 1448) = v32;
  *(_QWORD *)(v9 + 1456) = static MainActor.shared.getter(v33);
  v34 = dispatch thunk of Actor.unownedExecutor.getter(v32, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 1464) = v34;
  *(_QWORD *)(v9 + 1472) = v35;
  return swift_task_switch(sub_CA44D0, v34, v35);
}

uint64_t sub_CA44D0()
{
  NSObject *v0;
  os_log_t v1;
  Class isa;
  Class v3;
  Class v4;
  Class v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  Class v12;
  Class v13;
  Class v14;
  Class v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  void (*v21)(Class, Class, __n128);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  Class v34;
  Class v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  Class v47;
  Class v48;
  Class v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  Class v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char *v66;
  char *v67;
  __n128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  unsigned int v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  void (*v81)(Class, Class, Class);
  Class v82;
  Class v83;
  Class v84;
  Class v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  void (*v90)(Class, Class, __n128);
  Class v91;
  Class v92;
  Class v93;
  os_log_t v94;
  Class v95;
  uint64_t v96;
  __int16 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __n128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  __n128 v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  Class v111;
  __n128 v112;
  char *v113;
  char *v114;
  __n128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  NSObject *v119;
  os_log_type_t v120;
  _BOOL4 v121;
  uint8_t *v122;
  objc_class *v123;
  Class v125;
  Class v126;
  Class v127;
  uint64_t v128;
  Class v129;
  Class v130;
  Class v131;
  Class v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint8_t *v136;
  Class v137;
  Class v138;
  Class v139;
  Class v140;
  NSObject *v141;
  uint64_t (*v142)(Class, Class, Class);
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  _BOOL4 v146;
  Class v147;
  Class v148;
  Class v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  __n128 v155;
  void (*v156)(Class, Class, __n128);
  NSObject *v157;
  os_log_type_t v158;
  uint8_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  Class v166;
  uint64_t v167;
  objc_class *v168;
  objc_class *v169;
  int64x2_t v170;
  int64x2_t v171;
  uint64_t v172;
  objc_class *v173;
  NSObject *v174;
  os_log_type_t v175;
  uint8_t *v176;
  uint64_t v177;
  uint64_t v178;
  Class v179;
  Class v180;
  uint64_t v181;
  _QWORD *v182;
  Class v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  __n128 v188;
  uint64_t (*v189)();
  uint64_t v190;
  objc_class *v191;
  Class v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  _BOOL4 v196;
  void (*v197)(Class, Class, __n128);
  Class v198;
  Class v199;
  Class v200;
  os_log_t v201;
  Class v202;
  uint64_t v203;
  __int16 v204;
  uint64_t v205;
  char *v206;
  char *v207;
  __n128 v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  __n128 v213;
  uint64_t v214;
  char *v215;
  char *v216;
  char *v217;
  Class v218;
  __n128 v219;
  char *v220;
  char *v221;
  __n128 v222;
  char *v223;
  char *v224;
  uint8_t *v225;
  Class v226;
  Class v227;
  Class v228;
  __n128 v229;
  Class v230;
  Class v231;
  Class v232;
  Class v233;
  NSObject *v234;
  Class v235;
  Class v236;
  Class v237;
  __int128 v238;
  uint64_t v239;
  NSObject *v240;
  os_log_type_t v241;
  _BOOL4 v242;
  Class v243;
  _QWORD *p_isa;
  Class v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  __n128 v253;
  void (*v254)(Class, uint64_t, __n128);
  NSObject *v255;
  os_log_type_t v256;
  uint8_t *v257;
  Class v258;
  Class v259;
  uint64_t ObjectType;
  void (*v261)(char *, ValueMetadata *, unint64_t, uint64_t, Class);
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  Class v265;
  uint64_t v266;
  Class v267;
  Class v268;
  __n128 v269;
  unint64_t v270;
  uint64_t v271;
  objc_class *v272;
  Class v273;
  Class v274;
  __n128 v275;
  objc_class *v276;
  Class v277;
  Class v278;
  Class v279;
  uint64_t v280;
  uint64_t v281;
  NSObject *v282;
  os_log_type_t v283;
  uint8_t *v284;
  _QWORD *v285;
  uint64_t v286;
  uint64_t v287;
  int *v288;
  objc_class *v289;
  Class v290;
  Class v291;
  Class v292;
  Class v293;
  __n128 v294;
  void (*v295)(Class, Class, __n128);
  uint64_t v296;
  NSObject *v297;
  os_log_type_t v298;
  Class v299;
  Class v300;
  uint64_t v301;
  uint64_t v302;
  __n128 v303;
  uint64_t v304;
  char *v305;
  NSObject *v306;
  char *v307;
  char *v308;
  uint64_t v309;
  NSObject *v310;
  os_log_type_t v311;
  uint8_t *v312;
  uint64_t v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  int *v317;
  objc_class *v318;
  os_log_t v319;
  uint64_t v320;
  Class v321;
  Class v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  uint64_t v333;
  uint64_t v334;
  NSObject *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char v340;
  uint64_t v341;
  Class v342;
  uint64_t v343;
  Class v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  objc_class *v350;
  uint64_t v351;
  uint64_t WitnessTable;
  uint64_t v353;
  uint64_t v354;
  NSObject *v355;
  os_log_type_t v356;
  uint8_t *v357;
  Class v358;
  Class v359;
  Class v360;
  Class v361;
  Class v362;
  __n128 v363;
  uint64_t v364;
  NSObject *v365;
  os_log_type_t v366;
  _BOOL4 v367;
  Class v368;
  Class v369;
  NSObject *v370;
  Class v371;
  Class v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  char *v377;
  __n128 v378;
  void (*v379)(Class, Class, __n128);
  _QWORD *v380;
  uint64_t v381;
  int *v382;
  _QWORD *v383;
  Class v384;
  __n128 v385;
  uint64_t v386;
  objc_class *v387;
  NSObject *v388;
  os_log_type_t v389;
  uint8_t *v390;
  Class v391;
  Class v392;
  Class v393;
  unint64_t v394;
  NSObject *v395;
  os_log_type_t v396;
  uint8_t *v397;
  os_log_t v398;
  Class v399;
  Class v400;
  Class v401;
  Class v402;
  Class v403;
  Class v404;
  Class v405;
  Class v406;
  Class v407;
  Class v408;
  Class v409;
  Class v410;
  Class v411;
  Class v412;
  Class v413;
  Class v414;
  Class v415;
  Class v416;
  Class v417;
  Class v418;
  Class v419;
  Class v420;
  Class v421;
  Class v422;
  uint64_t v423;
  void (*v424)(Class, Class, Class, __n128);
  Class v425;
  Class v426;
  uint64_t v427;
  Class v428;
  void (*v429)(Class, Class, __n128);
  Class v430;
  Class v431;
  os_log_t v432;
  Class v433;
  Class v434;
  Class v435;
  void (*v436)(Class, Class, Class, __n128);
  int64x2_t *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  Class v441;
  os_log_t log;
  os_log_t logc;
  os_log_t loga;
  uint64_t (*logd)(uint64_t, char);
  uint64_t (*loge)(char);
  NSObject *logf;
  os_log_t logb;
  os_log_t logg;
  uint64_t v450;
  os_log_type_t v451;
  uint64_t (*v452)(uint64_t, uint64_t, uint64_t);
  Class v453;
  uint64_t (*v454)(os_log_t, uint64_t, uint64_t);
  uint64_t v455;
  Class v456;
  uint64_t v457[2];

  v1 = v0;
  if (qword_14F9F08 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  isa = v0[180].isa;
  v3 = v0[176].isa;
  v4 = v0[175].isa;
  v5 = v0[138].isa;
  v6 = type metadata accessor for Logger(0);
  v0[185].isa = (Class)__swift_project_value_buffer(v6, (uint64_t)static Logger.libraryActionableState);
  v7 = *((_QWORD *)v3 + 2);
  v1[186].isa = (Class)v7;
  v8 = ((uint64_t (*)(Class, Class, Class))v7)(isa, v5, v4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  v11 = os_log_type_enabled(v9, v10);
  v12 = v1[180].isa;
  if (v11)
  {
    v13 = v1[179].isa;
    v14 = v1[176].isa;
    v15 = v1[175].isa;
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v457[0] = v17;
    *(_DWORD *)v16 = 136446210;
    ((void (*)(Class, Class, Class))v7)(v13, v12, v15);
    v18 = (char *)String.init<A>(describing:)(v13, v15);
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, v457);
    v20 = swift_bridgeObjectRelease();
    v21 = (void (*)(Class, Class, __n128))*((_QWORD *)v14 + 1);
    v21(v12, v15, v20);
    _os_log_impl(&dword_0, v9, v10, "╭ Performing action for item: %{public}s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    v21 = (void (*)(Class, Class, __n128))*((_QWORD *)v1[176].isa + 1);
    ((void (*)(Class, Class))v21)(v12, v1[175].isa);
  }

  v1[187].isa = (Class)v21;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint64_t)v1[137].isa;
    v26 = WORD1(v1[44].isa);
    v27 = swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v457[0] = v28;
    *(_DWORD *)v27 = 136446210;
    v29 = (char *)MusicLibrary.ActionableState.description.getter(v25, v26);
    *(_QWORD *)(v27 + 4) = sub_BA95EC(v29, v30, v457);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v23, v24, "| Actionable state: %{public}s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }

  v31 = swift_retain_n(v1[139].isa, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  log = v7;
  if (os_log_type_enabled(v32, v33))
  {
    v34 = v1[174].isa;
    v434 = v1[172].isa;
    v35 = v1[171].isa;
    v36 = v1[139].isa;
    v37 = swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v457[0] = v38;
    v39.n128_u64[0] = 136446210;
    *(_DWORD *)v37 = 136446210;
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v39);
    v40 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v41 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v35, v40);
    v43 = v42;
    (*((void (**)(Class, Class))v434 + 1))(v34, v35);
    *(_QWORD *)(v37 + 4) = sub_BA95EC(v41, v43, v457);
    swift_bridgeObjectRelease();
    swift_release_n(v36, 2);
    _os_log_impl(&dword_0, v32, v33, "| Add status: %{public}s", (uint8_t *)v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }
  else
  {
    swift_release_n(v1[139].isa, 2);
  }

  v44 = swift_retain_n(v1[139].isa, 2);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = v1[170].isa;
    v435 = v1[168].isa;
    v48 = v1[167].isa;
    v49 = v1[139].isa;
    v50 = swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v457[0] = v51;
    v52.n128_u64[0] = 136446210;
    *(_DWORD *)v50 = 136446210;
    dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v52);
    v53 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v54 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v48, v53);
    v55 = v1;
    v57 = v56;
    (*((void (**)(Class, Class))v435 + 1))(v47, v48);
    *(_QWORD *)(v50 + 4) = sub_BA95EC(v54, v57, v457);
    v1 = v55;
    swift_bridgeObjectRelease();
    swift_release_n(v49, 2);
    _os_log_impl(&dword_0, v45, v46, "| Download status: %{public}s", (uint8_t *)v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);
  }
  else
  {
    swift_release_n(v1[139].isa, 2);
  }

  v58 = swift_retain_n(v1[147].isa, 4);
  v59 = Logger.logObject.getter(v58);
  v60 = static os_log_type_t.default.getter();
  v61 = os_log_type_enabled(v59, v60);
  v62 = v1[147].isa;
  if (v61)
  {
    v63 = swift_slowAlloc(22, -1);
    v64 = swift_slowAlloc(64, -1);
    v457[0] = v64;
    v65.n128_u64[0] = 136446466;
    *(_DWORD *)v63 = 136446466;
    v66 = (char *)MusicLibrary.name.getter(v65);
    *(_QWORD *)(v63 + 4) = sub_BA95EC(v66, v67, v457);
    swift_bridgeObjectRelease();
    v68 = swift_release_n(v62, 2);
    *(_WORD *)(v63 + 12) = 2082;
    v69 = (char *)MusicLibrary.id.getter(v68);
    *(_QWORD *)(v63 + 14) = sub_BA95EC(v69, v70, v457);
    swift_bridgeObjectRelease();
    swift_release_n(v62, 2);
    _os_log_impl(&dword_0, v59, v60, "| Library: %{public}s (%{public}s)", (uint8_t *)v63, 0x16u);
    swift_arrayDestroy(v64, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v64, -1, -1);
    swift_slowDealloc(v63, -1, -1);
  }
  else
  {
    swift_release_n(v1[147].isa, 4);
  }

  v73 = WORD1(v1[44].isa);
  switch(v73 >> 8)
  {
    case 2u:
      v74 = Logger.logObject.getter(v71);
      v75 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v76 = 0;
        _os_log_impl(&dword_0, v74, v75, "|—● Nothing to Perform: Actionable State is unknown", v76, 2u);
        swift_slowDealloc(v76, -1, -1);
      }

      v77 = sub_CAE960();
      v78 = swift_allocError(&_s15ActionableStateO5ErrorON, v77, 0, 0);
      swift_willThrow(v78);
      goto LABEL_21;
    case 3u:
      v125 = v1[173].isa;
      v126 = v1[172].isa;
      v127 = v1[171].isa;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v72);
      v128 = (*((uint64_t (**)(Class, Class))v126 + 11))(v125, v127);
      if ((_DWORD)v128 == enum case for MusicLibrary.AddStatus.unaddable(_:))
      {
        v129 = v1[173].isa;
        v130 = v1[166].isa;
        v131 = v1[163].isa;
        v132 = v1[162].isa;
        (*((void (**)(Class, Class))v1[172].isa + 12))(v129, v1[171].isa);
        v133 = (*((uint64_t (**)(Class, Class, Class))v131 + 4))(v130, v129, v132);
        v134 = Logger.logObject.getter(v133);
        v135 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v134, v135))
        {
          v136 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v136 = 0;
          _os_log_impl(&dword_0, v134, v135, "|—● Unaddable", v136, 2u);
          swift_slowDealloc(v136, -1, -1);
        }
        v137 = v1[166].isa;
        v138 = v1[165].isa;
        v139 = v1[163].isa;
        v140 = v1[162].isa;

        v141 = v1;
        v142 = (uint64_t (*)(Class, Class, Class))*((_QWORD *)v139 + 2);
        v143 = v142(v138, v137, v140);
        v144 = Logger.logObject.getter(v143);
        v145 = static os_log_type_t.default.getter();
        v146 = os_log_type_enabled(v144, v145);
        v147 = v141[165].isa;
        v148 = v141[163].isa;
        loga = v141;
        v149 = v141[162].isa;
        if (v146)
        {
          v150 = swift_slowAlloc(12, -1);
          v151 = swift_slowAlloc(32, -1);
          v457[0] = v151;
          *(_DWORD *)v150 = 136446210;
          v152 = sub_4DD24(&qword_14FB0F8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
          v153 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v149, v152);
          *(_QWORD *)(v150 + 4) = sub_BA95EC(v153, v154, v457);
          v155 = swift_bridgeObjectRelease();
          v156 = (void (*)(Class, Class, __n128))*((_QWORD *)v148 + 1);
          v156(v147, v149, v155);
          _os_log_impl(&dword_0, v144, v145, "|—| Reason: %{public}s", (uint8_t *)v150, 0xCu);
          swift_arrayDestroy(v151, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v151, -1, -1);
          swift_slowDealloc(v150, -1, -1);
        }
        else
        {
          v156 = (void (*)(Class, Class, __n128))*((_QWORD *)v148 + 1);
          ((void (*)(Class, Class))v156)(v147, v141[162].isa);
        }

        loga[188].isa = (Class)v156;
        v277 = loga[164].isa;
        v278 = loga[163].isa;
        v279 = loga[162].isa;
        v142(v277, loga[166].isa, v279);
        v280 = (*((uint64_t (**)(Class, Class))v278 + 11))(v277, v279);
        if ((_DWORD)v280 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
        {
          v281 = (uint64_t)&loga[84];
          v282 = Logger.logObject.getter(v280);
          v283 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v282, v283))
          {
            v284 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v284 = 0;
            _os_log_impl(&dword_0, v282, v283, "|—| Presenting Explicit Restriction alert", v284, 2u);
            swift_slowDealloc(v284, -1, -1);
          }
          v285 = loga[140].isa;

          v286 = v285[3];
          v287 = v285[4];
          __swift_project_boxed_opaque_existential_1(v285, v286);
          sub_C68E74(0, v281);
          v288 = *(int **)(v287 + 8);
          v452 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v288 + *v288);
          v289 = (objc_class *)swift_task_alloc(v288[1]);
          loga[189].isa = v289;
          *(_QWORD *)v289 = loga;
          *((_QWORD *)v289 + 1) = sub_CA6A54;
          return v452(v281, v286, v287);
        }
        if ((_DWORD)v280 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
        {
          v309 = (uint64_t)&loga[59];
          v310 = Logger.logObject.getter(v280);
          v311 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v310, v311))
          {
            v312 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v312 = 0;
            _os_log_impl(&dword_0, v310, v311, "|—| Presenting Cloud Library Requirement alert", v312, 2u);
            swift_slowDealloc(v312, -1, -1);
          }
          v313 = (uint64_t)loga[142].isa;

          sub_5C238(v313, v309, &qword_14FB060);
          if (loga[66].isa == (Class)((char *)&dword_0 + 1))
          {
            v314 = loga[140].isa;
            sub_56024(v309, &qword_14FB060);
            v315 = v314[3];
            v316 = v314[4];
            __swift_project_boxed_opaque_existential_1(v314, v315);
            sub_C68C80(1, (uint64_t)&loga[77]);
            v317 = *(int **)(v316 + 8);
            v454 = (uint64_t (*)(os_log_t, uint64_t, uint64_t))((char *)v317 + *v317);
            v318 = (objc_class *)swift_task_alloc(v317[1]);
            loga[196].isa = v318;
            *(_QWORD *)v318 = loga;
            *((_QWORD *)v318 + 1) = sub_CA6FDC;
            v319 = loga + 77;
            v320 = v315;
            return v454(v319, v320, v316);
          }
          v384 = loga[181].isa;
          sub_648A4(v309, (uint64_t)&loga[68]);
          loga[190].isa = (Class)static MainActor.shared.getter(v385);
          v386 = dispatch thunk of Actor.unownedExecutor.getter(v384, &protocol witness table for MainActor);
          loga[191].isa = (Class)v386;
          loga[192].isa = v387;
          return swift_task_switch(sub_CA6C88, v386, v387);
        }
        else
        {
          v1 = loga;
          if ((_DWORD)v280 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
          {
            swift_release();
            v355 = Logger.logObject.getter(v354);
            v356 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v355, v356))
            {
              v357 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v357 = 0;
              _os_log_impl(&dword_0, v355, v356, "|—| Presenting upsell", v357, 2u);
              swift_slowDealloc(v357, -1, -1);
            }
            v358 = loga[166].isa;
            v359 = loga[162].isa;

            loga[122].isa = 0;
            *(_OWORD *)&loga[118].isa = 0u;
            *(_OWORD *)&loga[120].isa = 0u;
            LOBYTE(loga[123].isa) = -1;
            _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0((uint64_t)&loga[118]);
            sub_B91340((uint64_t)&loga[118]);
            v353 = ((uint64_t (*)(Class, Class))v156)(v358, v359);
            goto LABEL_91;
          }
          v388 = Logger.logObject.getter(v280);
          v389 = static os_log_type_t.info.getter(v388);
          if (os_log_type_enabled(v388, v389))
          {
            v390 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v390 = 0;
            _os_log_impl(&dword_0, v388, v389, "|—| Unaddable reason is not supported by the UI", v390, 2u);
            swift_slowDealloc(v390, -1, -1);
          }
          v391 = loga[166].isa;
          v392 = loga[164].isa;
          v393 = loga[162].isa;

          v394 = sub_CAE960();
          v78 = swift_allocError(&_s15ActionableStateO5ErrorON, v394, 0, 0);
          swift_willThrow(v78);
          ((void (*)(Class, Class))v156)(v391, v393);
          ((void (*)(Class, Class))v156)(v392, v393);
LABEL_21:
          v1[211].isa = (Class)v78;
          v1[136].isa = (Class)v78;
          swift_errorRetain(v78);
          v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
          v80 = swift_dynamicCast(v79, &v1[136], v79, &_s15ActionableStateO5ErrorON, 0);
          v81 = (void (*)(Class, Class, Class))v1[186].isa;
          v82 = v1[175].isa;
          v83 = v1[139].isa;
          v84 = v1[138].isa;
          if (v80)
          {
            v85 = v1[178].isa;
            swift_errorRelease(v78);
            v81(v85, v84, v82);
            v86 = swift_retain_n(v83, 4);
            v87 = Logger.logObject.getter(v86);
            v88 = static os_log_type_t.error.getter(v87);
            v89 = os_log_type_enabled(v87, v88);
            v90 = (void (*)(Class, Class, __n128))v1[187].isa;
            if (v89)
            {
              v431 = v1[178].isa;
              v436 = (void (*)(Class, Class, Class, __n128))v1[186].isa;
              v421 = v1[179].isa;
              v426 = v1[175].isa;
              v91 = v1[174].isa;
              v92 = v1[171].isa;
              v93 = v1[170].isa;
              v418 = v1[168].isa;
              v412 = v1[172].isa;
              v415 = v1[167].isa;
              logc = (os_log_t)v1[187].isa;
              v94 = v1;
              v95 = v1[139].isa;
              v96 = (uint64_t)v94[137].isa;
              v97 = WORD1(v94[44].isa);
              v98 = swift_slowAlloc(52, -1);
              v450 = swift_slowAlloc(160, -1);
              v457[0] = v450;
              *(_DWORD *)v98 = 136447234;
              v99 = (char *)MusicLibrary.ActionableState.description.getter(v96, v97);
              *(_QWORD *)(v98 + 4) = sub_BA95EC(v99, v100, v457);
              v101 = swift_bridgeObjectRelease();
              *(_WORD *)(v98 + 12) = 2082;
              dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v101);
              v102 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
              v103 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v92, v102);
              v105 = v104;
              (*((void (**)(Class, Class))v412 + 1))(v91, v92);
              *(_QWORD *)(v98 + 14) = sub_BA95EC(v103, v105, v457);
              swift_bridgeObjectRelease();
              v106 = swift_release_n(v95, 2);
              *(_WORD *)(v98 + 22) = 2082;
              dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v106);
              v107 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
              v108 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v415, v107);
              v110 = v109;
              (*((void (**)(Class, Class))v418 + 1))(v93, v415);
              *(_QWORD *)(v98 + 24) = sub_BA95EC(v108, v110, v457);
              swift_bridgeObjectRelease();
              v111 = v95;
              v1 = v94;
              v112 = swift_release_n(v111, 2);
              *(_WORD *)(v98 + 32) = 2082;
              v436(v421, v431, v426, v112);
              v113 = (char *)String.init<A>(describing:)(v421, v426);
              *(_QWORD *)(v98 + 34) = sub_BA95EC(v113, v114, v457);
              v115 = swift_bridgeObjectRelease();
              v116 = ((uint64_t (*)(Class, Class, __n128))logc)(v431, v426, v115);
              *(_WORD *)(v98 + 42) = 2082;
              v117 = (char *)String.init<A>(describing:)(v116, &_s15ActionableStateO5ErrorON);
              *(_QWORD *)(v98 + 44) = sub_BA95EC(v117, v118, v457);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_0, v87, v88, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
                "\n"
                "Error: %{public}s",
                (uint8_t *)v98,
                0x34u);
              swift_arrayDestroy(v450, 5, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v450, -1, -1);
              swift_slowDealloc(v98, -1, -1);
            }
            else
            {
              v267 = v1[178].isa;
              v268 = v1[175].isa;
              v269 = swift_release_n(v1[139].isa, 4);
              v90(v267, v268, v269);
            }

            v270 = sub_CAE960();
            v1[212].isa = (Class)v270;
            v271 = swift_allocError(&_s15ActionableStateO5ErrorON, v270, 0, 0);
            v1[213].isa = (Class)v271;
            v272 = (objc_class *)swift_task_alloc(dword_14FF95C);
            v1[214].isa = v272;
            *(_QWORD *)v272 = v1;
            *((_QWORD *)v272 + 1) = sub_CA7A3C;
            return sub_CA9D34(v271, (uint64_t)v1[137].isa, WORD1(v1[44].isa), (_QWORD *)v1[139].isa, (uint64_t)v1[140].isa);
          }
          else
          {
            v192 = v1[177].isa;
            swift_errorRelease(v1[136].isa);
            v81(v192, v84, v82);
            swift_retain_n(v83, 3);
            swift_errorRetain(v78);
            swift_retain();
            v193 = swift_errorRetain(v78);
            v194 = Logger.logObject.getter(v193);
            v195 = static os_log_type_t.error.getter(v194);
            v196 = os_log_type_enabled(v194, v195);
            v197 = (void (*)(Class, Class, __n128))v1[187].isa;
            if (v196)
            {
              v429 = (void (*)(Class, Class, __n128))v1[187].isa;
              v432 = v1 + 135;
              v419 = v1[177].isa;
              v424 = (void (*)(Class, Class, Class, __n128))v1[186].isa;
              v413 = v1[179].isa;
              v416 = v1[175].isa;
              v198 = v1[174].isa;
              v199 = v1[171].isa;
              v200 = v1[170].isa;
              v410 = v1[168].isa;
              v407 = v1[172].isa;
              v408 = v1[167].isa;
              logf = v194;
              v201 = v1;
              v202 = v1[139].isa;
              v451 = v195;
              v203 = (uint64_t)v201[137].isa;
              v204 = WORD1(v201[44].isa);
              v205 = swift_slowAlloc(52, -1);
              v439 = swift_slowAlloc(160, -1);
              v457[0] = v439;
              *(_DWORD *)v205 = 136447234;
              v206 = (char *)MusicLibrary.ActionableState.description.getter(v203, v204);
              *(_QWORD *)(v205 + 4) = sub_BA95EC(v206, v207, v457);
              v208 = swift_bridgeObjectRelease();
              *(_WORD *)(v205 + 12) = 2082;
              dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v208);
              v209 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
              v210 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v199, v209);
              v212 = v211;
              (*((void (**)(Class, Class))v407 + 1))(v198, v199);
              *(_QWORD *)(v205 + 14) = sub_BA95EC(v210, v212, v457);
              swift_bridgeObjectRelease();
              v213 = swift_release_n(v202, 2);
              *(_WORD *)(v205 + 22) = 2082;
              dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v213);
              v214 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
              v215 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v408, v214);
              v217 = v216;
              (*((void (**)(Class, Class))v410 + 1))(v200, v408);
              *(_QWORD *)(v205 + 24) = sub_BA95EC(v215, v217, v457);
              swift_bridgeObjectRelease();
              v218 = v202;
              v1 = v201;
              v219 = swift_release_n(v218, 2);
              *(_WORD *)(v205 + 32) = 2082;
              v424(v413, v419, v416, v219);
              v220 = (char *)String.init<A>(describing:)(v413, v416);
              *(_QWORD *)(v205 + 34) = sub_BA95EC(v220, v221, v457);
              v222 = swift_bridgeObjectRelease();
              v429(v419, v416, v222);
              *(_WORD *)(v205 + 42) = 2082;
              v201[135].isa = (Class)v78;
              swift_errorRetain(v78);
              v223 = (char *)String.init<A>(describing:)(v432, v79);
              *(_QWORD *)(v205 + 44) = sub_BA95EC(v223, v224, v457);
              swift_bridgeObjectRelease();
              swift_errorRelease(v78);
              swift_errorRelease(v78);
              _os_log_impl(&dword_0, logf, v451, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
                "\n"
                "Error: %{public}s",
                (uint8_t *)v205,
                0x34u);
              swift_arrayDestroy(v439, 5, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v439, -1, -1);
              swift_slowDealloc(v205, -1, -1);

            }
            else
            {
              v273 = v1[177].isa;
              v274 = v1[175].isa;
              v275 = swift_release_n(v1[139].isa, 4);
              v197(v273, v274, v275);
              swift_errorRelease(v78);
              swift_errorRelease(v78);

            }
            v276 = (objc_class *)swift_task_alloc(dword_14FF95C);
            v1[215].isa = v276;
            *(_QWORD *)v276 = v1;
            *((_QWORD *)v276 + 1) = sub_CA7C80;
            return sub_CA9D34(v78, (uint64_t)v1[137].isa, WORD1(v1[44].isa), (_QWORD *)v1[139].isa, (uint64_t)v1[140].isa);
          }
        }
      }
      else
      {
        v255 = Logger.logObject.getter(v128);
        v256 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v255, v256))
        {
          v257 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v257 = 0;
          _os_log_impl(&dword_0, v255, v256, "|—● Adding to library", v257, 2u);
          swift_slowDealloc(v257, -1, -1);
        }
        v258 = v1[143].isa;

        if (v258)
        {
          v259 = v1[144].isa;
          ObjectType = swift_getObjectType();
          BYTE1(v1[44].isa) = 0;
          v261 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, Class))*((_QWORD *)v259 + 1);
          v262 = sub_B9FCDC();
          v261((char *)&v1[44].isa + 1, &type metadata for ActionType, v262, ObjectType, v259);
        }
        sub_5C238((uint64_t)v1[141].isa, (uint64_t)&v1[124], &qword_14FB068);
        v263 = (uint64_t)v1[127].isa;
        if (v263)
        {
          v264 = (uint64_t)v1[161].isa;
          v265 = v1[160].isa;
          v266 = (uint64_t)v1[128].isa;
          __swift_project_boxed_opaque_existential_1(&v1[124].isa, (uint64_t)v1[127].isa);
          swift_storeEnumTagMultiPayload(v264, v265, 7);
          sub_C129EC(v264, 0, v263, v266);
          sub_5C0DC(v264, type metadata accessor for Notice.Variant);
          __swift_destroy_boxed_opaque_existential_1(&v1[124].isa);
        }
        else
        {
          sub_56024((uint64_t)&v1[124], &qword_14FB068);
        }
        v321 = v1[158].isa;
        v322 = v1[157].isa;
        v323 = (uint64_t)v1[156].isa;
        sub_5C238((uint64_t)v1[145].isa, v323, &qword_14FAFF8);
        if ((*((unsigned int (**)(uint64_t, uint64_t, Class))v321 + 6))(v323, 1, v322) == 1)
        {
          sub_56024((uint64_t)v1[156].isa, &qword_14FAFF8);
        }
        else
        {
          v324 = (uint64_t)v1[175].isa;
          v325 = (uint64_t *)v1[159].isa;
          v326 = (uint64_t)v1[154].isa;
          sub_2DE5F8((uint64_t)v1[156].isa, (uint64_t)v325);
          v455 = MusicItem.metricsTargetIdentifier.getter(v324);
          v440 = v327;
          v328 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v328 - 8) + 56))(v326, 1, 1, v328);
          v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB040);
          v330 = swift_allocObject(v329, 80, 7);
          *(_OWORD *)(v330 + 16) = xmmword_105F890;
          *(_QWORD *)(v330 + 32) = MusicItem.metricsContentType.getter(v324);
          *(_QWORD *)(v330 + 40) = v331;
          *(_BYTE *)(v330 + 48) = 0;
          *(_QWORD *)(v330 + 56) = 0;
          *(_QWORD *)(v330 + 64) = 0;
          *(_BYTE *)(v330 + 72) = 1;
          v332 = sub_BC2B0C(v330);
          v334 = v333;
          v335 = v1;
          v337 = v336;
          v339 = v338;
          v340 = BYTE1(v338);
          swift_setDeallocating(v330);
          swift_arrayDestroy(v330 + 32, *(_QWORD *)(v330 + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
          swift_deallocClassInstance(v330, 32, 7);
          sub_BC2F1C(v455, v440, 5, 2, v326, v332, v334, v337, v339, v325);
          v341 = v337;
          v1 = v335;
          sub_79B688(v332, v334, v341, v339, v340);
          swift_bridgeObjectRelease();
          sub_56024(v326, &qword_14FAC20);
          sub_5C0DC((uint64_t)v325, type metadata accessor for Actions.MetricsReportingContext);
        }
        v342 = v1[176].isa;
        v343 = (uint64_t)v1[175].isa;
        v344 = v1[138].isa;
        v345 = sub_CADE3C(v343, v343);
        v346 = swift_allocObject(v345, ((*((unsigned __int8 *)v342 + 80) + (unint64_t)*(unsigned int *)(v345 + 48)) & ~(unint64_t)*((unsigned __int8 *)v342 + 80))+ *((_QWORD *)v342 + 9), *((unsigned __int8 *)v342 + 80) | (unint64_t)*(unsigned __int16 *)(v345 + 52));
        v347 = static Array._adoptStorage(_:count:)(v346, 1);
        ((void (*)(uint64_t, Class, uint64_t))log)(v348, v344, v343);
        v349 = sub_9777F0(v347);
        v1[197].isa = (Class)v349;
        v1[134].isa = (Class)v349;
        v350 = (objc_class *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
        v1[198].isa = v350;
        v351 = type metadata accessor for Array(0);
        WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v351);
        *(_QWORD *)v350 = v1;
        *((_QWORD *)v350 + 1) = sub_CA7038;
        return MusicLibrary.add<A, B>(_:)(&v1[134], v351, v1[175].isa, WitnessTable, v1[146].isa);
      }
    case 4u:
      v437 = (int64x2_t *)&v1[113];
      v157 = Logger.logObject.getter(v71);
      v158 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v157, v158))
      {
        v159 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v159 = 0;
        _os_log_impl(&dword_0, v157, v158, "|—● Triggering download", v159, 2u);
        swift_slowDealloc(v159, -1, -1);
      }
      v160 = (uint64_t)v1[179].isa;
      v161 = (uint64_t)v1[175].isa;
      v162 = (uint64_t)v1[155].isa;
      v163 = (uint64_t)v1[147].isa;
      v422 = v1[148].isa;
      v427 = (uint64_t)v1[146].isa;
      v164 = (uint64_t)v1[145].isa;
      v165 = (uint64_t)v1[140].isa;
      v166 = v1[138].isa;

      ((void (*)(uint64_t, Class, uint64_t))log)(v160, v166, v161);
      sub_55D1C(v165, (uint64_t)&v1[129]);
      sub_5C238(v164, v162, &qword_14FAFF8);
      v167 = *(_QWORD *)((char *)v422 + class metadata base offset for MusicLibrary.ItemState + 8);
      swift_retain();
      Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v160, v163, (__int128 *)&v1[129], v162, v161, v427, v167, (unint64_t (**)())&v1[112]);
      v168 = v1[112].isa;
      v169 = v1[117].isa;
      v1[202].isa = v169;
      v1[45].isa = v168;
      v170 = *v437;
      v171 = *(int64x2_t *)&v1[115].isa;
      *(int64x2_t *)&v1[200].isa = vzip1q_s64(*v437, v171);
      *(int64x2_t *)&v1[46].isa = v170;
      *(int64x2_t *)&v1[48].isa = v171;
      v1[50].isa = v169;
      LOBYTE(v1[51].isa) = 9;
      v1[54].isa = (Class)0x4014000000000000;
      v1[55].isa = (Class)&unk_14FB440;
      v1[56].isa = 0;
      v1[57].isa = (Class)&unk_14FB448;
      v172 = unk_14FF984;
      logd = (uint64_t (*)(uint64_t, char))((char *)&dword_14FF980 + dword_14FF980);
      v1[52].isa = (Class)sub_B9FFF0;
      v1[53].isa = 0;
      v1[58].isa = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      v173 = (objc_class *)swift_task_alloc(v172);
      v1[203].isa = v173;
      *(_QWORD *)v173 = v1;
      *((_QWORD *)v173 + 1) = sub_CA72EC;
      return logd((uint64_t)logd, 1);
    case 5u:
      v174 = Logger.logObject.getter(v71);
      v175 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v174, v175))
      {
        v176 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v176 = 0;
        _os_log_impl(&dword_0, v174, v175, "|—● Is Downloaded: Prompting for delete/remove alert", v176, 2u);
        swift_slowDealloc(v176, -1, -1);
      }
      v177 = (uint64_t)v1[179].isa;
      v178 = (uint64_t)v1[175].isa;
      v179 = v1[158].isa;
      v180 = v1[157].isa;
      v181 = (uint64_t)v1[155].isa;
      v428 = v1[148].isa;
      v438 = (uint64_t)v1[146].isa;
      v182 = v1[140].isa;
      v183 = v1[138].isa;

      v184 = v182[3];
      v423 = v182[4];
      v185 = __swift_project_boxed_opaque_existential_1(v182, v184);
      ((void (*)(uint64_t, Class, uint64_t))log)(v177, v183, v178);
      v186 = *(_QWORD *)(v184 - 8);
      v187 = swift_task_alloc((*(_QWORD *)(v186 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v186 + 16))(v187, v185, v184);
      (*((void (**)(uint64_t, uint64_t, uint64_t, Class))v179 + 7))(v181, 1, 1, v180);
      type metadata accessor for MusicLibrary(0);
      v189 = (uint64_t (*)())static MusicLibrary.shared.getter(v188);
      Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(v177, v187, v189, v181, v178, v184, v438, *(_QWORD *)((char *)v428 + class metadata base offset for MusicLibrary.ItemState + 8), (uint64_t (**)())&v1[27], v423);
      swift_task_dealloc(v187);
      sub_BB0384((uint64_t)&v1[27], (uint64_t)&v1[2]);
      v190 = swift_allocObject(&unk_13B3AF8, 32, 7);
      *(_QWORD *)(v190 + 16) = &unk_14FB350;
      *(_QWORD *)(v190 + 24) = 0;
      BYTE1(v1[19].isa) = 39;
      v1[20].isa = (Class)sub_BAD3F0;
      v1[21].isa = 0;
      v1[22].isa = (Class)0x403E000000000000;
      v1[23].isa = (Class)&unk_14FB368;
      v1[24].isa = (Class)v190;
      v1[25].isa = (Class)&unk_14FB358;
      v1[26].isa = 0;
      sub_BB105C(&v1[27].isa);
      loge = (uint64_t (*)(char))((char *)&dword_14FF970 + dword_14FF970);
      v191 = (objc_class *)swift_task_alloc(unk_14FF974);
      v1[209].isa = v191;
      *(_QWORD *)v191 = v1;
      *((_QWORD *)v191 + 1) = sub_CA79B4;
      return loge(1);
    default:
      v119 = Logger.logObject.getter(v71);
      v120 = static os_log_type_t.default.getter();
      v121 = os_log_type_enabled(v119, v120);
      if ((v73 & 0x100) == 0)
      {
        if (v121)
        {
          v122 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v122 = 0;
          _os_log_impl(&dword_0, v119, v120, "|—● Cancelling download", v122, 2u);
          swift_slowDealloc(v122, -1, -1);
        }

        v123 = (objc_class *)swift_task_alloc(async function pointer to MusicLibrary.cancelDownload<A>(_:)[1]);
        v1[205].isa = v123;
        *(_QWORD *)v123 = v1;
        *((_QWORD *)v123 + 1) = sub_CA755C;
        return MusicLibrary.cancelDownload<A>(_:)(v1[138].isa, v1[175].isa, v1[146].isa);
      }
      if (v121)
      {
        v225 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v225 = 0;
        _os_log_impl(&dword_0, v119, v120, "|—● Download is paused: Checking for reasons…", v225, 2u);
        swift_slowDealloc(v225, -1, -1);
      }
      v226 = v1[169].isa;
      v227 = v1[168].isa;
      v228 = v1[167].isa;

      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v229);
      if ((*((unsigned int (**)(Class, Class))v227 + 11))(v226, v228) != enum case for MusicLibrary.DownloadStatus.paused(_:))
      {
        v290 = v1[169].isa;
        v291 = v1[168].isa;
        v292 = v1[167].isa;
        v293 = v1[139].isa;
        v294 = swift_release();
        v295 = (void (*)(Class, Class, __n128))*((_QWORD *)v291 + 1);
        v295(v290, v292, v294);
        v296 = swift_retain_n(v293, 2);
        v297 = Logger.logObject.getter(v296);
        v298 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v297, v298))
        {
          v299 = v1[170].isa;
          v300 = v1[167].isa;
          v453 = v1[139].isa;
          v301 = swift_slowAlloc(12, -1);
          v302 = swift_slowAlloc(32, -1);
          v457[0] = v302;
          v303.n128_u64[0] = 136446210;
          *(_DWORD *)v301 = 136446210;
          dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v303);
          v304 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
          v305 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v300, v304);
          v306 = v1;
          v308 = v307;
          ((void (*)(Class, Class))v295)(v299, v300);
          *(_QWORD *)(v301 + 4) = sub_BA95EC(v305, v308, v457);
          v1 = v306;
          swift_bridgeObjectRelease();
          swift_release_n(v453, 2);
          _os_log_impl(&dword_0, v297, v298, "|—| No reasons found, download status does not match UI state %{public}s", (uint8_t *)v301, 0xCu);
          swift_arrayDestroy(v302, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v302, -1, -1);
          swift_slowDealloc(v301, -1, -1);
        }
        else
        {
          swift_release_n(v1[139].isa, 2);
        }

        goto LABEL_91;
      }
      v230 = v1[169].isa;
      v231 = v1[153].isa;
      v232 = v1[150].isa;
      v233 = v1[149].isa;
      (*((void (**)(Class, Class))v1[168].isa + 12))(v230, v1[167].isa);
      (*((void (**)(Class, Class, Class))v232 + 4))(v231, v230, v233);
      MusicLibrary.DownloadStatus.DownloadPauseReasons.alert.getter((uint64_t *)&v1[91]);
      sub_5C090((uint64_t)&v1[91], (uint64_t)&v1[105], &qword_1503970);
      if (!v1[110].isa)
      {
        v360 = v1[153].isa;
        v361 = v1[151].isa;
        v362 = v1[149].isa;
        v363 = swift_release();
        v364 = (*((uint64_t (**)(Class, Class, Class, __n128))v232 + 2))(v361, v360, v362, v363);
        v365 = Logger.logObject.getter(v364);
        v366 = static os_log_type_t.error.getter(v365);
        v367 = os_log_type_enabled(v365, v366);
        v368 = v1[153].isa;
        v369 = v1[151].isa;
        v370 = v1;
        v371 = v1[150].isa;
        logb = v370;
        v372 = v370[149].isa;
        if (v367)
        {
          v373 = swift_slowAlloc(12, -1);
          v374 = swift_slowAlloc(32, -1);
          v457[0] = v374;
          *(_DWORD *)v373 = 136446210;
          v375 = sub_4DD24(&qword_14FF978, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
          v376 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v372, v375);
          *(_QWORD *)(v373 + 4) = sub_BA95EC(v376, v377, v457);
          v378 = swift_bridgeObjectRelease();
          v379 = (void (*)(Class, Class, __n128))*((_QWORD *)v371 + 1);
          v379(v369, v372, v378);
          _os_log_impl(&dword_0, v365, v366, "|—| Unhandled alert for reason: %{public}s", (uint8_t *)v373, 0xCu);
          swift_arrayDestroy(v374, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v374, -1, -1);
          swift_slowDealloc(v373, -1, -1);

        }
        else
        {

          v379 = (void (*)(Class, Class, __n128))*((_QWORD *)v371 + 1);
          ((void (*)(Class, Class))v379)(v369, v372);
        }
        v353 = ((uint64_t (*)(Class, Class))v379)(v368, v372);
        v1 = logb;
LABEL_91:
        v395 = Logger.logObject.getter(v353);
        v396 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v395, v396))
        {
          v397 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v397 = 0;
          _os_log_impl(&dword_0, v395, v396, "╰ ✅ Succeeded", v397, 2u);
          swift_slowDealloc(v397, -1, -1);
        }
        v398 = v1;
        v399 = v1[180].isa;
        v400 = v398[179].isa;
        v401 = v398[178].isa;
        v402 = v398[177].isa;
        v403 = v398[174].isa;
        v404 = v398[173].isa;
        v405 = v398[170].isa;
        v406 = v398[169].isa;
        v409 = v398[166].isa;
        v411 = v398[165].isa;
        v414 = v398[164].isa;
        v417 = v398[161].isa;
        v420 = v398[159].isa;
        v425 = v398[156].isa;
        v430 = v398[155].isa;
        v433 = v398[154].isa;
        v441 = v398[153].isa;
        logg = (os_log_t)v398[152].isa;
        v456 = v398[151].isa;

        swift_task_dealloc(v399);
        swift_task_dealloc(v400);
        swift_task_dealloc(v401);
        swift_task_dealloc(v402);
        swift_task_dealloc(v403);
        swift_task_dealloc(v404);
        swift_task_dealloc(v405);
        swift_task_dealloc(v406);
        swift_task_dealloc(v409);
        swift_task_dealloc(v411);
        swift_task_dealloc(v414);
        swift_task_dealloc(v417);
        swift_task_dealloc(v420);
        swift_task_dealloc(v425);
        swift_task_dealloc(v430);
        swift_task_dealloc(v433);
        swift_task_dealloc(v441);
        swift_task_dealloc(logg);
        swift_task_dealloc(v456);
        return ((uint64_t (*)(void))v398[1].isa)();
      }
      v234 = v1 + 98;
      v235 = v1[153].isa;
      v236 = v1[152].isa;
      v237 = v1[149].isa;
      v238 = *(_OWORD *)&v1[107].isa;
      *(_OWORD *)&v1[98].isa = *(_OWORD *)&v1[105].isa;
      *(_OWORD *)&v1[100].isa = v238;
      *(_OWORD *)&v1[102].isa = *(_OWORD *)&v1[109].isa;
      v1[104].isa = v1[111].isa;
      v239 = (*((uint64_t (**)(Class, Class, Class))v232 + 2))(v236, v235, v237);
      v240 = Logger.logObject.getter(v239);
      v241 = static os_log_type_t.default.getter();
      v242 = os_log_type_enabled(v240, v241);
      v243 = v1[152].isa;
      p_isa = &v1->isa;
      v245 = v1[150].isa;
      v246 = p_isa;
      v247 = p_isa[149];
      if (v242)
      {
        v248 = swift_slowAlloc(12, -1);
        v249 = swift_slowAlloc(32, -1);
        v457[0] = v249;
        *(_DWORD *)v248 = 136446210;
        v250 = sub_4DD24(&qword_14FF978, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
        v251 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v247, v250);
        *(_QWORD *)(v248 + 4) = sub_BA95EC(v251, v252, v457);
        v253 = swift_bridgeObjectRelease();
        v254 = (void (*)(Class, uint64_t, __n128))*((_QWORD *)v245 + 1);
        v254(v243, v247, v253);
        _os_log_impl(&dword_0, v240, v241, "|—| Showing alert for reason: %{public}s", (uint8_t *)v248, 0xCu);
        swift_arrayDestroy(v249, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v249, -1, -1);
        swift_slowDealloc(v248, -1, -1);
      }
      else
      {
        v254 = (void (*)(Class, uint64_t, __n128))*((_QWORD *)v245 + 1);
        ((void (*)(Class, _QWORD))v254)(v243, p_isa[149]);
      }

      v246[207] = v254;
      v380 = (_QWORD *)v246[140];
      v381 = v380[3];
      v316 = v380[4];
      __swift_project_boxed_opaque_existential_1(v380, v381);
      v382 = *(int **)(v316 + 8);
      v454 = (uint64_t (*)(os_log_t, uint64_t, uint64_t))((char *)v382 + *v382);
      v383 = (_QWORD *)swift_task_alloc(v382[1]);
      v246[208] = v383;
      *v383 = v246;
      v383[1] = sub_CA7780;
      v319 = v234;
      v320 = v381;
      return v454(v319, v320, v316);
  }
}

uint64_t sub_CA6A54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1512));
  sub_281298(v1 + 84);
  return swift_task_switch(sub_CA6AB0, v1[183], v1[184]);
}

uint64_t sub_CA6AB0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1296);
  swift_release(*(_QWORD *)(v0 + 1456));
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA6C88(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[193] = v2;
  v3 = swift_task_alloc(48);
  v1[194] = v3;
  *(_BYTE *)(v3 + 16) = 1;
  *(_QWORD *)(v3 + 24) = v1 + 68;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[195] = v4;
  *v4 = v1;
  v4[1] = sub_CA6D4C;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 357, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000001103250, sub_BA4D6C, v3, &type metadata for Bool);
}

uint64_t sub_CA6D4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1552);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1560));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_CA6DBC, *(_QWORD *)(v1 + 1528), *(_QWORD *)(v1 + 1536));
}

uint64_t sub_CA6DBC()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_CA6DF8, *(_QWORD *)(v0 + 1464), *(_QWORD *)(v0 + 1472));
}

uint64_t sub_CA6DF8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1296);
  swift_release();
  sub_56060(v0 + 544);
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA6FDC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1568));
  sub_281298(v1 + 77);
  return swift_task_switch(sub_CB027C, v1[183], v1[184]);
}

uint64_t sub_CA7038()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1584);
  *(_QWORD *)(*v1 + 1592) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1472);
    v5 = *(_QWORD *)(v2 + 1464);
    v6 = sub_CA7E98;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 1472);
    v5 = *(_QWORD *)(v2 + 1464);
    v6 = sub_CA70CC;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_CA70CC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 1144);
  v2 = swift_release();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 1152);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 356) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_B9FCDC();
    v5(v0 + 356, &type metadata for ActionType, v6, ObjectType, v3);
  }
  v7 = (*(uint64_t (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1376) + 8))(*(_QWORD *)(v0 + 1384), *(_QWORD *)(v0 + 1368), v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "╰ ✅ Succeeded", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  v11 = *(_QWORD *)(v0 + 1440);
  v12 = *(_QWORD *)(v0 + 1432);
  v13 = *(_QWORD *)(v0 + 1424);
  v14 = *(_QWORD *)(v0 + 1416);
  v15 = *(_QWORD *)(v0 + 1392);
  v16 = *(_QWORD *)(v0 + 1384);
  v17 = *(_QWORD *)(v0 + 1360);
  v18 = *(_QWORD *)(v0 + 1352);
  v20 = *(_QWORD *)(v0 + 1328);
  v21 = *(_QWORD *)(v0 + 1320);
  v22 = *(_QWORD *)(v0 + 1312);
  v23 = *(_QWORD *)(v0 + 1288);
  v24 = *(_QWORD *)(v0 + 1272);
  v25 = *(_QWORD *)(v0 + 1248);
  v26 = *(_QWORD *)(v0 + 1240);
  v27 = *(_QWORD *)(v0 + 1232);
  v28 = *(_QWORD *)(v0 + 1224);
  v29 = *(_QWORD *)(v0 + 1216);
  v30 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA72EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1624);
  *(_QWORD *)(*v1 + 1632) = v0;
  swift_task_dealloc(v3);
  swift_release();
  swift_release();
  swift_release();
  if (v0)
    v4 = sub_CA8634;
  else
    v4 = sub_CA7378;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_CA7378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 1616);
  v2 = *(_QWORD *)(v0 + 1608);
  v3 = *(_QWORD *)(v0 + 1456);
  swift_release(*(_QWORD *)(v0 + 1600));
  swift_release(v2);
  swift_release(v1);
  v4 = swift_release(v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA755C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1640);
  *(_QWORD *)(*v1 + 1648) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_CA8DDC;
  else
    v4 = sub_CA75C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_CA75C0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "╰ ✅ Succeeded", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1440);
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v14 = *(_QWORD *)(v0 + 1328);
  v15 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA7780()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1664));
  return swift_task_switch(sub_CA77D0, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_CA77D0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1656);
  v2 = *(_QWORD *)(v0 + 1224);
  v3 = *(_QWORD *)(v0 + 1192);
  swift_release();
  sub_6A5824(v0 + 728);
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA79B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1672);
  *(_QWORD *)(*v1 + 1680) = v0;
  swift_task_dealloc(v3);
  sub_56024(v2 + 16, &qword_14FB400);
  if (v0)
    v4 = sub_CA9564;
  else
    v4 = sub_CB02A8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_CA7A3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1704);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1712));
  swift_errorRelease(v2);
  return swift_task_switch(sub_CA7A98, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_CA7A98()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "╰ ❌ Failed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1696);

  v25 = swift_allocError(&_s15ActionableStateO5ErrorON, v5, 0, 0);
  swift_willThrow(v25);
  swift_errorRelease(*(_QWORD *)(v0 + 1088));
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v13 = *(_QWORD *)(v0 + 1328);
  v14 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);
  swift_task_dealloc(*(_QWORD *)(v0 + 1440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA7C80()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1720));
  return swift_task_switch(sub_CA7CD0, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_CA7CD0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "╰ ❌ Failed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  swift_willThrow(v5);
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v13 = *(_QWORD *)(v0 + 1328);
  v14 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);
  swift_task_dealloc(*(_QWORD *)(v0 + 1440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CA7E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  __n128 v33;
  char *v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void (*v45)(uint64_t, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  char *v66;
  char *v67;
  __n128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, __n128);
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v102;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1376) + 8))(*(_QWORD *)(v0 + 1384), *(_QWORD *)(v0 + 1368));
  v1 = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v12)
    {
      v95 = *(_QWORD *)(v0 + 1424);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v91 = *(_QWORD *)(v0 + 1432);
      v93 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v89 = *(_QWORD *)(v0 + 1344);
      v85 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v102 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_BA95EC(v21, v22, &v102);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_BA95EC(v25, v27, &v102);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v16, v87);
      *(_QWORD *)(v20 + 24) = sub_BA95EC(v30, v32, &v102);
      swift_release_n(v17, 2);
      v33 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v96(v91, v95, v93, v33);
      v34 = (char *)String.init<A>(describing:)(v91, v93);
      *(_QWORD *)(v20 + 34) = sub_BA95EC(v34, v35, &v102);
      v36 = swift_bridgeObjectRelease();
      v37 = type(v95, v93, v36);
      *(_WORD *)(v20 + 42) = 2082;
      v38 = (char *)String.init<A>(describing:)(v37, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_BA95EC(v38, v39, &v102);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v71 = *(_QWORD *)(v0 + 1424);
      v72 = *(_QWORD *)(v0 + 1400);
      v73 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v71, v72, v73);
    }

    v74 = sub_CAE960();
    *(_QWORD *)(v0 + 1696) = v74;
    v75 = swift_allocError(&_s15ActionableStateO5ErrorON, v74, 0, 0);
    *(_QWORD *)(v0 + 1704) = v75;
    v76 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1712) = v76;
    *v76 = v0;
    v76[1] = sub_CA7A3C;
    return sub_CA9D34(v75, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v40, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v41 = swift_errorRetain(v1);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v44)
    {
      v90 = *(_QWORD *)(v0 + 1416);
      v92 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v86 = *(_QWORD *)(v0 + 1432);
      v88 = *(_QWORD *)(v0 + 1400);
      v46 = *(_QWORD *)(v0 + 1392);
      loga = v42;
      v47 = *(_QWORD *)(v0 + 1368);
      v48 = *(_QWORD *)(v0 + 1360);
      v84 = *(_QWORD *)(v0 + 1344);
      v82 = *(_QWORD *)(v0 + 1376);
      v83 = *(_QWORD *)(v0 + 1336);
      v49 = *(_QWORD *)(v0 + 1112);
      typea = v43;
      v50 = *(_QWORD *)(v0 + 1096);
      v51 = *(_WORD *)(v0 + 354);
      v94 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v52 = swift_slowAlloc(52, -1);
      v97 = swift_slowAlloc(160, -1);
      v102 = v97;
      *(_DWORD *)v52 = 136447234;
      v53 = (char *)MusicLibrary.ActionableState.description.getter(v50, v51);
      *(_QWORD *)(v52 + 4) = sub_BA95EC(v53, v54, &v102);
      v55 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v55);
      v56 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v57 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v47, v56);
      v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v46, v47);
      *(_QWORD *)(v52 + 14) = sub_BA95EC(v57, v59, &v102);
      swift_release_n(v49, 2);
      v60 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v60);
      v61 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v62 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v83, v61);
      v64 = v63;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v48, v83);
      *(_QWORD *)(v52 + 24) = sub_BA95EC(v62, v64, &v102);
      swift_release_n(v49, 2);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 32) = 2082;
      v92(v86, v90, v88, v65);
      v66 = (char *)String.init<A>(describing:)(v86, v88);
      *(_QWORD *)(v52 + 34) = sub_BA95EC(v66, v67, &v102);
      v68 = swift_bridgeObjectRelease();
      v94(v90, v88, v68);
      *(_WORD *)(v52 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v69 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v52 + 44) = sub_BA95EC(v69, v70, &v102);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v52,
        0x34u);
      swift_arrayDestroy(v97, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v78 = *(_QWORD *)(v0 + 1416);
      v79 = *(_QWORD *)(v0 + 1400);
      v80 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v45(v78, v79, v80);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v81 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1720) = v81;
    *v81 = v0;
    v81[1] = sub_CA7C80;
    return sub_CA9D34(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_CA8634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  __n128 v33;
  char *v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void (*v45)(uint64_t, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  char *v66;
  char *v67;
  __n128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, __n128);
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v102;

  swift_release();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 1632);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v12)
    {
      v95 = *(_QWORD *)(v0 + 1424);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v91 = *(_QWORD *)(v0 + 1432);
      v93 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v89 = *(_QWORD *)(v0 + 1344);
      v85 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v102 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_BA95EC(v21, v22, &v102);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_BA95EC(v25, v27, &v102);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v16, v87);
      *(_QWORD *)(v20 + 24) = sub_BA95EC(v30, v32, &v102);
      swift_release_n(v17, 2);
      v33 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v96(v91, v95, v93, v33);
      v34 = (char *)String.init<A>(describing:)(v91, v93);
      *(_QWORD *)(v20 + 34) = sub_BA95EC(v34, v35, &v102);
      v36 = swift_bridgeObjectRelease();
      v37 = type(v95, v93, v36);
      *(_WORD *)(v20 + 42) = 2082;
      v38 = (char *)String.init<A>(describing:)(v37, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_BA95EC(v38, v39, &v102);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v71 = *(_QWORD *)(v0 + 1424);
      v72 = *(_QWORD *)(v0 + 1400);
      v73 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v71, v72, v73);
    }

    v74 = sub_CAE960();
    *(_QWORD *)(v0 + 1696) = v74;
    v75 = swift_allocError(&_s15ActionableStateO5ErrorON, v74, 0, 0);
    *(_QWORD *)(v0 + 1704) = v75;
    v76 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1712) = v76;
    *v76 = v0;
    v76[1] = sub_CA7A3C;
    return sub_CA9D34(v75, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v40, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v41 = swift_errorRetain(v1);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v44)
    {
      v90 = *(_QWORD *)(v0 + 1416);
      v92 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v86 = *(_QWORD *)(v0 + 1432);
      v88 = *(_QWORD *)(v0 + 1400);
      v46 = *(_QWORD *)(v0 + 1392);
      loga = v42;
      v47 = *(_QWORD *)(v0 + 1368);
      v48 = *(_QWORD *)(v0 + 1360);
      v84 = *(_QWORD *)(v0 + 1344);
      v82 = *(_QWORD *)(v0 + 1376);
      v83 = *(_QWORD *)(v0 + 1336);
      v49 = *(_QWORD *)(v0 + 1112);
      typea = v43;
      v50 = *(_QWORD *)(v0 + 1096);
      v51 = *(_WORD *)(v0 + 354);
      v94 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v52 = swift_slowAlloc(52, -1);
      v97 = swift_slowAlloc(160, -1);
      v102 = v97;
      *(_DWORD *)v52 = 136447234;
      v53 = (char *)MusicLibrary.ActionableState.description.getter(v50, v51);
      *(_QWORD *)(v52 + 4) = sub_BA95EC(v53, v54, &v102);
      v55 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v55);
      v56 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v57 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v47, v56);
      v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v46, v47);
      *(_QWORD *)(v52 + 14) = sub_BA95EC(v57, v59, &v102);
      swift_release_n(v49, 2);
      v60 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v60);
      v61 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v62 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v83, v61);
      v64 = v63;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v48, v83);
      *(_QWORD *)(v52 + 24) = sub_BA95EC(v62, v64, &v102);
      swift_release_n(v49, 2);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 32) = 2082;
      v92(v86, v90, v88, v65);
      v66 = (char *)String.init<A>(describing:)(v86, v88);
      *(_QWORD *)(v52 + 34) = sub_BA95EC(v66, v67, &v102);
      v68 = swift_bridgeObjectRelease();
      v94(v90, v88, v68);
      *(_WORD *)(v52 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v69 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v52 + 44) = sub_BA95EC(v69, v70, &v102);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v52,
        0x34u);
      swift_arrayDestroy(v97, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v78 = *(_QWORD *)(v0 + 1416);
      v79 = *(_QWORD *)(v0 + 1400);
      v80 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v45(v78, v79, v80);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v81 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1720) = v81;
    *v81 = v0;
    v81[1] = sub_CA7C80;
    return sub_CA9D34(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_CA8DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  __n128 v33;
  char *v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void (*v45)(uint64_t, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  char *v66;
  char *v67;
  __n128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, __n128);
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v102;

  v1 = *(_QWORD *)(v0 + 1648);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v12)
    {
      v95 = *(_QWORD *)(v0 + 1424);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v91 = *(_QWORD *)(v0 + 1432);
      v93 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v89 = *(_QWORD *)(v0 + 1344);
      v85 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v102 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_BA95EC(v21, v22, &v102);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_BA95EC(v25, v27, &v102);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v16, v87);
      *(_QWORD *)(v20 + 24) = sub_BA95EC(v30, v32, &v102);
      swift_release_n(v17, 2);
      v33 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v96(v91, v95, v93, v33);
      v34 = (char *)String.init<A>(describing:)(v91, v93);
      *(_QWORD *)(v20 + 34) = sub_BA95EC(v34, v35, &v102);
      v36 = swift_bridgeObjectRelease();
      v37 = type(v95, v93, v36);
      *(_WORD *)(v20 + 42) = 2082;
      v38 = (char *)String.init<A>(describing:)(v37, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_BA95EC(v38, v39, &v102);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v71 = *(_QWORD *)(v0 + 1424);
      v72 = *(_QWORD *)(v0 + 1400);
      v73 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v71, v72, v73);
    }

    v74 = sub_CAE960();
    *(_QWORD *)(v0 + 1696) = v74;
    v75 = swift_allocError(&_s15ActionableStateO5ErrorON, v74, 0, 0);
    *(_QWORD *)(v0 + 1704) = v75;
    v76 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1712) = v76;
    *v76 = v0;
    v76[1] = sub_CA7A3C;
    return sub_CA9D34(v75, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v40, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v41 = swift_errorRetain(v1);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v44)
    {
      v90 = *(_QWORD *)(v0 + 1416);
      v92 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v86 = *(_QWORD *)(v0 + 1432);
      v88 = *(_QWORD *)(v0 + 1400);
      v46 = *(_QWORD *)(v0 + 1392);
      loga = v42;
      v47 = *(_QWORD *)(v0 + 1368);
      v48 = *(_QWORD *)(v0 + 1360);
      v84 = *(_QWORD *)(v0 + 1344);
      v82 = *(_QWORD *)(v0 + 1376);
      v83 = *(_QWORD *)(v0 + 1336);
      v49 = *(_QWORD *)(v0 + 1112);
      typea = v43;
      v50 = *(_QWORD *)(v0 + 1096);
      v51 = *(_WORD *)(v0 + 354);
      v94 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v52 = swift_slowAlloc(52, -1);
      v97 = swift_slowAlloc(160, -1);
      v102 = v97;
      *(_DWORD *)v52 = 136447234;
      v53 = (char *)MusicLibrary.ActionableState.description.getter(v50, v51);
      *(_QWORD *)(v52 + 4) = sub_BA95EC(v53, v54, &v102);
      v55 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v55);
      v56 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v57 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v47, v56);
      v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v46, v47);
      *(_QWORD *)(v52 + 14) = sub_BA95EC(v57, v59, &v102);
      swift_release_n(v49, 2);
      v60 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v60);
      v61 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v62 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v83, v61);
      v64 = v63;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v48, v83);
      *(_QWORD *)(v52 + 24) = sub_BA95EC(v62, v64, &v102);
      swift_release_n(v49, 2);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 32) = 2082;
      v92(v86, v90, v88, v65);
      v66 = (char *)String.init<A>(describing:)(v86, v88);
      *(_QWORD *)(v52 + 34) = sub_BA95EC(v66, v67, &v102);
      v68 = swift_bridgeObjectRelease();
      v94(v90, v88, v68);
      *(_WORD *)(v52 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v69 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v52 + 44) = sub_BA95EC(v69, v70, &v102);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v52,
        0x34u);
      swift_arrayDestroy(v97, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v78 = *(_QWORD *)(v0 + 1416);
      v79 = *(_QWORD *)(v0 + 1400);
      v80 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v45(v78, v79, v80);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v81 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1720) = v81;
    *v81 = v0;
    v81[1] = sub_CA7C80;
    return sub_CA9D34(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_CA9564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  __n128 v33;
  char *v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void (*v45)(uint64_t, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  char *v66;
  char *v67;
  __n128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, __n128);
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v102;

  v1 = *(_QWORD *)(v0 + 1680);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v12)
    {
      v95 = *(_QWORD *)(v0 + 1424);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v91 = *(_QWORD *)(v0 + 1432);
      v93 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v89 = *(_QWORD *)(v0 + 1344);
      v85 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v102 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_BA95EC(v21, v22, &v102);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_BA95EC(v25, v27, &v102);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v16, v87);
      *(_QWORD *)(v20 + 24) = sub_BA95EC(v30, v32, &v102);
      swift_release_n(v17, 2);
      v33 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v96(v91, v95, v93, v33);
      v34 = (char *)String.init<A>(describing:)(v91, v93);
      *(_QWORD *)(v20 + 34) = sub_BA95EC(v34, v35, &v102);
      v36 = swift_bridgeObjectRelease();
      v37 = type(v95, v93, v36);
      *(_WORD *)(v20 + 42) = 2082;
      v38 = (char *)String.init<A>(describing:)(v37, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_BA95EC(v38, v39, &v102);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v71 = *(_QWORD *)(v0 + 1424);
      v72 = *(_QWORD *)(v0 + 1400);
      v73 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v71, v72, v73);
    }

    v74 = sub_CAE960();
    *(_QWORD *)(v0 + 1696) = v74;
    v75 = swift_allocError(&_s15ActionableStateO5ErrorON, v74, 0, 0);
    *(_QWORD *)(v0 + 1704) = v75;
    v76 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1712) = v76;
    *v76 = v0;
    v76[1] = sub_CA7A3C;
    return sub_CA9D34(v75, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v40, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v41 = swift_errorRetain(v1);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
    if (v44)
    {
      v90 = *(_QWORD *)(v0 + 1416);
      v92 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v86 = *(_QWORD *)(v0 + 1432);
      v88 = *(_QWORD *)(v0 + 1400);
      v46 = *(_QWORD *)(v0 + 1392);
      loga = v42;
      v47 = *(_QWORD *)(v0 + 1368);
      v48 = *(_QWORD *)(v0 + 1360);
      v84 = *(_QWORD *)(v0 + 1344);
      v82 = *(_QWORD *)(v0 + 1376);
      v83 = *(_QWORD *)(v0 + 1336);
      v49 = *(_QWORD *)(v0 + 1112);
      typea = v43;
      v50 = *(_QWORD *)(v0 + 1096);
      v51 = *(_WORD *)(v0 + 354);
      v94 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v52 = swift_slowAlloc(52, -1);
      v97 = swift_slowAlloc(160, -1);
      v102 = v97;
      *(_DWORD *)v52 = 136447234;
      v53 = (char *)MusicLibrary.ActionableState.description.getter(v50, v51);
      *(_QWORD *)(v52 + 4) = sub_BA95EC(v53, v54, &v102);
      v55 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v55);
      v56 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v57 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v47, v56);
      v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v46, v47);
      *(_QWORD *)(v52 + 14) = sub_BA95EC(v57, v59, &v102);
      swift_release_n(v49, 2);
      v60 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v60);
      v61 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v62 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v83, v61);
      v64 = v63;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v48, v83);
      *(_QWORD *)(v52 + 24) = sub_BA95EC(v62, v64, &v102);
      swift_release_n(v49, 2);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 32) = 2082;
      v92(v86, v90, v88, v65);
      v66 = (char *)String.init<A>(describing:)(v86, v88);
      *(_QWORD *)(v52 + 34) = sub_BA95EC(v66, v67, &v102);
      v68 = swift_bridgeObjectRelease();
      v94(v90, v88, v68);
      *(_WORD *)(v52 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v69 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v52 + 44) = sub_BA95EC(v69, v70, &v102);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v52,
        0x34u);
      swift_arrayDestroy(v97, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v97, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v78 = *(_QWORD *)(v0 + 1416);
      v79 = *(_QWORD *)(v0 + 1400);
      v80 = swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v45(v78, v79, v80);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v81 = (_QWORD *)swift_task_alloc(dword_14FF95C);
    *(_QWORD *)(v0 + 1720) = v81;
    *v81 = v0;
    v81[1] = sub_CA7C80;
    return sub_CA9D34(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t Logger.libraryActionableState.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9F08 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.libraryActionableState);
}

uint64_t sub_CA9D34(uint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v5 + 296) = a4;
  *(_QWORD *)(v5 + 304) = a5;
  *(_WORD *)(v5 + 408) = a3;
  *(_QWORD *)(v5 + 280) = a1;
  *(_QWORD *)(v5 + 288) = a2;
  *(_QWORD *)(v5 + 312) = *a4;
  v6 = type metadata accessor for UUID(0);
  *(_QWORD *)(v5 + 320) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 328) = v7;
  *(_QWORD *)(v5 + 336) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 344) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 352) = v10;
  *(_QWORD *)(v5 + 360) = v11;
  return swift_task_switch(sub_CA9DD8, v10, v11);
}

uint64_t sub_CA9DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_WORD *)(v0 + 408);
  _StringGuts.grow(_:)(91);
  v6._countAndFlagsBits = 0xD000000000000032;
  v6._object = (void *)0x8000000001107410;
  String.append(_:)(v6);
  *(_QWORD *)(v0 + 256) = v4;
  swift_errorRetain(v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v8._countAndFlagsBits = String.init<A>(describing:)(v0 + 256, v7);
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x8000000001107450;
  v9._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v9);
  v10._countAndFlagsBits = MusicLibrary.ActionableState.description.getter(v3, v5);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x53206D6574490A0ALL;
  v11._object = (void *)0xEE00203A65746174;
  String.append(_:)(v11);
  *(_QWORD *)(v0 + 264) = v2;
  v12 = type metadata accessor for MusicLibrary.ItemState(0, *(_QWORD *)(v1 + class metadata base offset for MusicLibrary.ItemState), *(_QWORD *)(v1 + class metadata base offset for MusicLibrary.ItemState + 8));
  swift_retain();
  v13._countAndFlagsBits = String.init<A>(describing:)(v0 + 264, v12);
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 10;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15 = sub_C26648((uint64_t)_swiftEmptyArrayStorage);
  sub_C69FA0(0xD00000000000001DLL, 0x80000000011073F0, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, v15, (uint64_t)_swiftEmptyArrayStorage, 1, v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_5C090(v0 + 72, v0 + 128, &qword_14FE918);
  if (*(_QWORD *)(v0 + 136))
  {
    v16 = (__int128 *)(v0 + 184);
    v17 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 200) = v17;
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 368) = v18;
    *(_QWORD *)(v0 + 376) = v19;
    if (qword_14F9F08 != -1)
      swift_once(&qword_14F9F08, sub_CADD2C);
    v48 = v7;
    v46 = (__int128 *)(v0 + 224);
    v47 = (_OWORD *)(v0 + 240);
    v20 = type metadata accessor for Logger(0);
    v21 = __swift_project_value_buffer(v20, (uint64_t)static Logger.libraryActionableState);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "|—● Presenting Tap-To-Radar alert", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }
    v25 = *(_QWORD *)(v0 + 336);
    v43 = *(_QWORD *)(v0 + 328);
    v44 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD **)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 280);

    v28 = v26[4];
    v45 = v26[3];
    __swift_project_boxed_opaque_existential_1(v26, v45);
    *(_QWORD *)(v0 + 272) = v27;
    swift_errorRetain(v27);
    v29 = String.init<A>(describing:)(v0 + 272, v48);
    v31 = v30;
    *(_QWORD *)(v0 + 384) = v30;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
    v33 = swift_allocObject(v32, 144, 7);
    *(_QWORD *)(v0 + 392) = v33;
    *v47 = *(_OWORD *)(v0 + 200);
    v34 = *v16;
    v35 = *(_OWORD *)(v0 + 200);
    *v46 = *v16;
    *(_OWORD *)(v33 + 16) = xmmword_105F890;
    *(_OWORD *)(v33 + 32) = v34;
    *(_OWORD *)(v33 + 48) = v35;
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v33 + 72) = v18;
    *(_QWORD *)(v33 + 80) = v19;
    sub_1391E0((uint64_t)v46);
    sub_1391E0((uint64_t)v47);
    sub_A9DEC(v18, v19);
    v36 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v37 = UUID.uuidString.getter(v36);
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v25, v44);
    *(_QWORD *)(v33 + 88) = v37;
    *(_QWORD *)(v33 + 96) = v39;
    *(_QWORD *)(v33 + 104) = 19279;
    *(_QWORD *)(v33 + 112) = 0xE200000000000000;
    *(_BYTE *)(v33 + 120) = 2;
    *(_QWORD *)(v33 + 128) = 0;
    *(_QWORD *)(v33 + 136) = 0;
    *(_OWORD *)(v0 + 16) = xmmword_1099330;
    *(_QWORD *)(v0 + 32) = v29;
    *(_QWORD *)(v0 + 40) = v31;
    *(_BYTE *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = v33;
    *(_QWORD *)(v0 + 64) = 0;
    v40 = *(int **)(v28 + 8);
    v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v40 + *v40);
    v41 = (_QWORD *)swift_task_alloc(v40[1]);
    *(_QWORD *)(v0 + 400) = v41;
    *v41 = v0;
    v41[1] = sub_CAA260;
    return v49(v0 + 16, v45, v28);
  }
  else
  {
    swift_release();
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_CAA260()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_CAA2DC, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_CAA2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 368);
  v1 = *(_QWORD *)(v0 + 376);
  swift_release();
  sub_8B134(v0 + 224);
  sub_8B134(v0 + 240);
  sub_5C198(v2, v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *MusicLibrary.ActionableStateController.__allocating_init(item:library:actionsObserver:onStateUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v14;

  v7 = v6;
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v14 = sub_CAE9C8(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 8))(a1);
  return v14;
}

char *MusicLibrary.ActionableStateController.init(item:library:actionsObserver:onStateUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  char *v9;

  v8 = *v6;
  v9 = sub_CAE9C8(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 80) - 8) + 8))(a1);
  return v9;
}

uint64_t sub_CAA428(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE v15[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA38);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA40);
  __chkstk_darwin(v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v15, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v10 = result;
    v11 = type metadata accessor for MusicLibrary.AddStatus(0);
    v12 = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v13 = type metadata accessor for MusicLibrary.DownloadStatus(0, v12);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
    sub_CABA38((uint64_t)v8, (uint64_t)v5);
    swift_release(v10);
    sub_56024((uint64_t)v5, &qword_14FFA38);
    return sub_56024((uint64_t)v8, &qword_14FFA40);
  }
  return result;
}

uint64_t sub_CAA568(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, char *, uint64_t, __n128);
  char *v50;
  uint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  char *v84;
  _BOOL4 v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t result;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  void (*v122)(char *, char *, uint64_t);
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  _QWORD *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char v137[8];
  char v138[8];
  char v139[32];

  v125 = a1;
  v2 = *v1;
  v135 = type metadata accessor for Album(0);
  v127 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v134 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA38);
  __chkstk_darwin(v4);
  v130 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA40);
  __chkstk_darwin(v6);
  v129 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB4D8);
  __chkstk_darwin(v8);
  v119 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v136 = (uint64_t)&v111 - v11;
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE960);
  v128 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v115 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v118 = (char *)&v111 - v14;
  __chkstk_darwin(v15);
  v116 = (char *)&v111 - v16;
  __chkstk_darwin(v17);
  v117 = (char *)&v111 - v18;
  __chkstk_darwin(v19);
  v121 = (char *)&v111 - v20;
  __chkstk_darwin(v21);
  v126 = (char *)&v111 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  __chkstk_darwin(v23);
  v124 = (char *)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v111 - v26;
  v28 = type metadata accessor for Playlist(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v120 = (char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v111 - v32;
  v34 = *(_QWORD *)(v2 + 80);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v36);
  v133 = (char *)&v111 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v123 = (char *)&v111 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v111 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v111 - v44;
  v46 = *(_QWORD *)(v2 + 128);
  v131 = v1;
  v47 = (char *)v1 + v46;
  v48 = swift_beginAccess(v47, v139, 0, 0);
  v49 = *(void (**)(char *, char *, uint64_t, __n128))(v35 + 16);
  v49(v45, v47, v34, v48);
  v50 = v45;
  v51 = v28;
  v52 = v47;
  dispatch thunk of MusicLibrary.ItemState.item.setter(v50);
  ((void (*)(char *, char *, uint64_t))v49)(v42, v47, v34);
  v53 = swift_dynamicCast(v27, v42, v34, v51, 6);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  if ((v53 & 1) == 0)
  {
    v54(v27, 1, 1, v51);
    sub_56024((uint64_t)v27, &qword_14FE970);
    v63 = v134;
    v62 = v135;
    v64 = v133;
    goto LABEL_22;
  }
  v122 = (void (*)(char *, char *, uint64_t))v49;
  v54(v27, 0, 1, v51);
  v55 = *(uint64_t (**)(char *, char *, uint64_t))(v29 + 32);
  v56 = v55(v33, v27, v51);
  v57 = v136;
  Playlist.entries.getter(v56);
  v58 = v128;
  v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
  v60 = v57;
  v61 = v132;
  if (v59(v60, 1, v132) != 1)
  {
    v113 = v29;
    v114 = v33;
    v65 = v34;
    v66 = v61;
    v67 = v126;
    v112 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
    v112(v126, v136, v66);
    v68 = v123;
    v122(v123, v125, v65);
    v69 = (uint64_t)v124;
    v136 = v65;
    if ((swift_dynamicCast(v124, v68, v65, v51, 6) & 1) == 0)
    {
      v54((char *)v69, 1, 1, v51);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v132);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v51);
      sub_56024(v69, &qword_14FE970);
      v63 = v134;
      v62 = v135;
      v64 = v133;
      v34 = v136;
      goto LABEL_21;
    }
    v70 = v67;
    v71 = v69;
    v72 = v58;
    v125 = v52;
    v54((char *)v71, 0, 1, v51);
    v73 = v120;
    v74 = v55(v120, (char *)v71, v51);
    v75 = (uint64_t)v119;
    Playlist.entries.getter(v74);
    v76 = v132;
    if (v59(v75, 1, v132) == 1)
    {
      v77 = *(void (**)(char *, uint64_t))(v113 + 8);
      v77(v73, v51);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v76);
      v77(v114, v51);
      sub_56024(v75, &qword_14FB4D8);
LABEL_20:
      v63 = v134;
      v62 = v135;
      v64 = v133;
      v34 = v136;
      v52 = v125;
      goto LABEL_21;
    }
    v112(v121, v75, v76);
    v78 = sub_5C150((unint64_t *)&qword_14FE990, &qword_14FE960, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v76);
    dispatch thunk of Collection.endIndex.getter(v76, v78);
    v79 = dispatch thunk of Collection.distance(from:to:)(v138, v137, v76, v78);
    v81 = v80;
    v82 = v70;
    v83 = *(void (**)(char *, char *, uint64_t, __n128))(v72 + 16);
    v84 = v117;
    v83(v117, v82, v76, v79);
    if (v81)
    {
      v85 = 0;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v76);
      dispatch thunk of Collection.endIndex.getter(v76, v78);
      dispatch thunk of Collection.distance(from:to:)(v138, v137, v76, v78);
      v85 = v86 > 0;
    }
    v87 = v116;
    v88 = *(void (**)(char *, uint64_t))(v72 + 8);
    v88(v84, v76);
    ((void (*)(char *, char *, uint64_t))v83)(v87, v121, v76);
    v89 = v118;
    ((void (*)(char *, char *, uint64_t))v83)(v118, v126, v76);
    if (v85)
    {
      v88(v89, v76);
      v88(v87, v76);
      v90 = v126;
LABEL_14:
      v91 = type metadata accessor for MusicLibrary.AddStatus(0);
      v92 = (uint64_t)v129;
      v93 = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v129, 1, 1, v91);
      v94 = type metadata accessor for MusicLibrary.DownloadStatus(0, v93);
      v95 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v130, 1, 1, v94);
      sub_CABA38(v92, v95);
      sub_56024(v95, &qword_14FFA38);
      sub_56024(v92, &qword_14FFA40);
      v88(v121, v76);
      v96 = *(void (**)(char *, uint64_t))(v113 + 8);
      v96(v73, v51);
      v88(v90, v76);
      return ((uint64_t (*)(char *, uint64_t))v96)(v114, v51);
    }
    dispatch thunk of Collection.startIndex.getter(v76);
    dispatch thunk of Collection.endIndex.getter(v76, v78);
    v98 = dispatch thunk of Collection.distance(from:to:)(v138, v137, v76, v78);
    v100 = v99;
    v101 = v115;
    v83(v115, v89, v76, v98);
    if (v100 < 1)
    {
      v88(v101, v76);
      v88(v89, v76);
      v88(v87, v76);
      v90 = v126;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v76);
      dispatch thunk of Collection.endIndex.getter(v76, v78);
      v102 = dispatch thunk of Collection.distance(from:to:)(v138, v137, v76, v78);
      v104 = v103;
      ((void (*)(char *, uint64_t, __n128))v88)(v101, v76, v102);
      v88(v89, v76);
      v88(v87, v76);
      v90 = v126;
      if (!v104)
        goto LABEL_14;
    }
    v88(v121, v76);
    v105 = *(void (**)(char *, uint64_t))(v113 + 8);
    v105(v73, v51);
    v88(v90, v76);
    v105(v114, v51);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v51);
  sub_56024(v136, &qword_14FB4D8);
  v63 = v134;
  v62 = v135;
  v64 = v133;
LABEL_21:
  v49 = (void (*)(char *, char *, uint64_t, __n128))v122;
LABEL_22:
  ((void (*)(char *, char *, uint64_t))v49)(v64, v52, v34);
  result = swift_dynamicCast(v63, v64, v34, v62, 6);
  if ((_DWORD)result)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v63, v62);
    v106 = type metadata accessor for MusicLibrary.AddStatus(0);
    v107 = (uint64_t)v129;
    v108 = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v129, 1, 1, v106);
    v109 = type metadata accessor for MusicLibrary.DownloadStatus(0, v108);
    v110 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v130, 1, 1, v109);
    sub_CABA38(v107, v110);
    sub_56024(v110, &qword_14FFA38);
    return sub_56024(v107, &qword_14FFA40);
  }
  return result;
}

uint64_t MusicLibrary.ActionableStateController.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
  v5 = swift_beginAccess(v4, v7, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4, v5);
}

uint64_t MusicLibrary.ActionableStateController.item.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_CAEEAC(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*MusicLibrary.ActionableStateController.item.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 128);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  v11 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16);
  v3[8] = v11;
  v11(v8, v9, v5, v10);
  return sub_CAB10C;
}

void sub_CAB10C(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_CAEEAC((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_CAEEAC((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t MusicLibrary.ActionableStateController.onStateUpdate.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t MusicLibrary.ActionableStateController.onStateUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*MusicLibrary.ActionableStateController.onStateUpdate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144), a1, 33, 0);
  return j__swift_endAccess;
}

void sub_CAB2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  char *v27;
  char *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  _BYTE v44[24];
  uint64_t v45[3];
  _BYTE v46[24];

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + *(_QWORD *)(v10 + 152);
  swift_beginAccess(v11, v46, 0, 0);
  v12 = *(unsigned __int16 *)(v11 + 8);
  switch(v12 >> 8)
  {
    case 2u:
      if ((a2 & 0xFF00) != 0x200)
        goto LABEL_15;
      break;
    case 3u:
      if ((a2 & 0xFF00) != 0x300)
        goto LABEL_15;
      break;
    case 4u:
      if ((a2 & 0xFF00) != 0x400)
        goto LABEL_15;
      break;
    case 5u:
      if ((a2 & 0xFF00) != 0x500)
        goto LABEL_15;
      break;
    default:
      if (BYTE1(a2) - 2 >= 4)
      {
        if ((v12 & 1) != 0)
        {
          if ((a2 & 1) != 0 && (((a2 ^ v12) >> 8) & 1) == 0)
            return;
        }
        else if ((a2 & 1) == 0 && *(double *)v11 == *(double *)&a1 && (((a2 ^ v12) >> 8) & 1) == 0)
        {
          return;
        }
      }
LABEL_15:
      if (qword_14F9F08 != -1)
        swift_once(&qword_14F9F08, sub_CADD2C);
      v13 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v13, (uint64_t)static Logger.libraryActionableState);
      v14 = swift_retain_n(v2, 4);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc(32, -1);
        v42 = swift_slowAlloc(96, -1);
        v45[0] = v42;
        *(_DWORD *)v17 = 136446722;
        v18 = (char *)MusicLibrary.ActionableState.description.getter(a1, a2);
        v41 = a1;
        v20 = v19;
        *(_QWORD *)(v17 + 4) = sub_BA95EC(v18, v19, v45);
        swift_bridgeObjectRelease(v20);
        *(_WORD *)(v17 + 12) = 2082;
        v21 = (char *)MusicLibrary.ActionableState.description.getter(*(_QWORD *)v11, *(_WORD *)(v11 + 8));
        v23 = v22;
        *(_QWORD *)(v17 + 14) = sub_BA95EC(v21, v22, v45);
        swift_release_n(v3, 2);
        swift_bridgeObjectRelease(v23);
        *(_WORD *)(v17 + 22) = 2082;
        v24 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 128);
        v25 = swift_beginAccess(v24, v43, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v24, v6, v25);
        v26 = (char *)String.init<A>(describing:)(v9, v6);
        v28 = v27;
        *(_QWORD *)(v17 + 24) = sub_BA95EC(v26, v27, v45);
        swift_release_n(v3, 2);
        swift_bridgeObjectRelease(v28);
        v29 = v16;
        v30 = v41;
        _os_log_impl(&dword_0, v15, v29, "State updated from: %{public}s to: %{public}s for item: %{public}s)", (uint8_t *)v17, 0x20u);
        v31 = v42;
        swift_arrayDestroy(v42, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v17, -1, -1);

      }
      else
      {

        swift_release_n(v3, 4);
        v30 = a1;
      }
      v32 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
      swift_beginAccess(v32, v45, 0, 0);
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))v32;
      v33 = *(_QWORD *)(v32 + 8);
      v35 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 128);
      v36 = swift_beginAccess(v35, v44, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v35, v6, v36);
      v37 = *(_QWORD *)v11;
      v38 = *(unsigned __int16 *)(v11 + 8);
      v39 = swift_retain(v33);
      v34(v9, v30, a2, v37, v38, v39);
      v40 = swift_release(v33);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v40);
      break;
  }
}

uint64_t MusicLibrary.ActionableStateController.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_beginAccess(v1, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_CAB6C4(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *(_QWORD *)v5;
  *(_QWORD *)v5 = a1;
  v7 = *(unsigned __int16 *)(v5 + 8);
  *(_WORD *)(v5 + 8) = a2;
  sub_CAB2AC(v6, v7);
}

uint64_t MusicLibrary.ActionableStateController.performAction(alertPresenter:noticePresenter:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  v6 = *v4;
  v5[22] = *v4;
  v7 = *(_QWORD *)(v6 + 80);
  v5[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[24] = v8;
  v5[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[26] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[27] = v11;
  v5[28] = v12;
  return swift_task_switch(sub_CAB7C8, v11, v12);
}

uint64_t sub_CAB7C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t *v9;
  uint64_t Strong;
  uint64_t **v11;
  uint64_t v13;

  v1 = v0[24];
  v2 = v0[25];
  v3 = v0[23];
  v4 = v0[21];
  v5 = v0[19];
  v6 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 152);
  swift_beginAccess(v6, v0 + 11, 0, 0);
  v13 = *(_QWORD *)v6;
  v7 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 128);
  LOWORD(v6) = *(_WORD *)(v6 + 8);
  v8 = swift_beginAccess(v7, v0 + 14, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 16))(v2, v7, v3, v8);
  v9 = *(uint64_t **)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 136));
  sub_6087C(v5, (uint64_t)(v0 + 2));
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 24);
  v0[29] = Strong;
  v11 = (uint64_t **)swift_task_alloc(dword_14FF94C);
  v0[30] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_CAB910;
  return MusicLibrary.performAction<A>(for:on:itemState:alertPresenter:noticePresenter:presentationSource:actionsObserver:metricsReportingContext:)(v13, v6, v0[25], v9, v0[17], v0[18], (uint64_t)(v0 + 2), Strong);
}

uint64_t sub_CAB910()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 232);
  v3 = *(_QWORD *)(*v1 + 240);
  v6 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 200);
  v7 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  sub_56024(v2 + 16, &qword_14FB060);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v0)
    v8 = sub_CAB9FC;
  else
    v8 = sub_CAB9C0;
  return swift_task_switch(v8, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

uint64_t sub_CAB9C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CAB9FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_CABA38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(_QWORD, _QWORD, _QWORD);
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  __n128 v96;
  char *v97;
  char *v98;
  char *v99;
  __n128 v100;
  char *v101;
  void (*v102)(char *, char *, uint64_t, __n128);
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  __n128 v120;
  char *v121;
  void (*v122)(char *, uint64_t, __n128);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  uint8_t *v135;
  __int16 v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  _BOOL4 v143;
  uint8_t *v144;
  uint64_t *v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  __n128 v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  NSObject *v165;
  char *v166;
  os_log_type_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  __n128 v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int16 v180;
  NSObject *v181;
  os_log_type_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  id result;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  uint8_t *v202;
  NSObject *v203;
  os_log_type_t v204;
  uint8_t *v205;
  void *v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  uint8_t *v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  NSObject *v219;
  os_log_type_t v220;
  _BOOL4 v221;
  uint8_t *v222;
  uint64_t v223;
  NSObject *v224;
  os_log_type_t v225;
  _BOOL4 v226;
  uint8_t *v227;
  uint8_t *v228;
  uint8_t *v229;
  uint64_t v230;
  uint64_t v231;
  unsigned int v232;
  uint64_t v233;
  uint64_t *v234;
  char *v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  uint64_t v251;
  _QWORD *v252;
  char *v253;
  char *v254;
  uint64_t TupleTypeMetadata2;
  char *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  char *v264;
  uint64_t *v265;
  char v266[8];
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  __int16 v271;
  char v272[8];

  v3 = v2;
  v6 = *v2;
  v251 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v246 = *(_QWORD *)(v251 - 8);
  __chkstk_darwin(v251);
  v247 = (char *)&v230 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v248 = (char *)&v230 - v9;
  __chkstk_darwin(v10);
  v253 = (char *)&v230 - v11;
  __chkstk_darwin(v12);
  v249 = (char *)&v230 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB4D8);
  __chkstk_darwin(v14);
  v235 = (char *)&v230 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = type metadata accessor for Playlist(0);
  v241 = *(_QWORD *)(v245 - 8);
  __chkstk_darwin(v245);
  v240 = (char *)&v230 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v239 = (char *)&v230 - v18;
  v243 = type metadata accessor for Album(0);
  v237 = *(_QWORD *)(v243 - 8);
  __chkstk_darwin(v243);
  v238 = (char *)&v230 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v242 = (char *)&v230 - v21;
  v22 = *(_QWORD *)(v6 + 80);
  v23 = type metadata accessor for MusicLibrary.AddStatus(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v22, v23, 0, 0);
  v244 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v256 = (char *)&v230 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA38);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v230 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = (_QWORD *)type metadata accessor for MusicLibrary.DownloadStatus(0, v26);
  v259 = *(v257 - 1);
  __chkstk_darwin(v257);
  v234 = (uint64_t *)((char *)&v230 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30);
  v32 = (char *)&v230 - v31;
  __chkstk_darwin(v33);
  v262 = (char *)&v230 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA40);
  __chkstk_darwin(v35);
  v252 = (uint64_t *)((char *)&v230 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v38);
  v236 = (char *)&v230 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v254 = (char *)&v230 - v41;
  __chkstk_darwin(v42);
  v264 = (char *)&v230 - v43;
  v258 = v22;
  v260 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v44);
  v250 = (char *)&v230 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = (char *)v3 + *(_QWORD *)(v6 + 152);
  swift_beginAccess(v46, v272, 0, 0);
  v233 = *(_QWORD *)v46;
  v232 = *((unsigned __int16 *)v46 + 4);
  v270 = 0;
  v271 = 512;
  if (qword_14F9F08 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  v47 = type metadata accessor for Logger(0);
  v48 = __swift_project_value_buffer(v47, (uint64_t)static Logger.libraryActionableState);
  v49 = swift_retain_n(v3, 2);
  v263 = v48;
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter(v50);
  v52 = os_log_type_enabled(v50, v51);
  v265 = v3;
  v261 = v23;
  if (v52)
  {
    v53 = swift_slowAlloc(12, -1);
    v231 = swift_slowAlloc(32, -1);
    v269 = v231;
    *(_DWORD *)v53 = 136446210;
    v54 = (char *)v265 + *(_QWORD *)(*v265 + 128);
    v55 = swift_beginAccess(v54, v266, 0, 0);
    v56 = v28;
    v57 = a1;
    v58 = a2;
    v59 = v37;
    v60 = v32;
    v61 = v250;
    v62 = v54;
    v63 = v258;
    (*(void (**)(char *, char *, uint64_t, __n128))(v260 + 16))(v250, v62, v258, v55);
    v64 = v61;
    v32 = v60;
    v37 = v59;
    a2 = v58;
    a1 = v57;
    v28 = v56;
    v65 = (char *)String.init<A>(describing:)(v64, v63);
    v67 = v66;
    *(_QWORD *)(v53 + 4) = sub_BA95EC(v65, v66, &v269);
    swift_release_n(v265, 2);
    swift_bridgeObjectRelease(v67);
    _os_log_impl(&dword_0, v50, v51, "╭ Updating state for item: %{public}s", (uint8_t *)v53, 0xCu);
    v68 = v231;
    swift_arrayDestroy(v231, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    v69 = v53;
    v23 = v261;
    swift_slowDealloc(v69, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2);
  }
  v70 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v252;
  sub_5C238(a1, (uint64_t)v252, &qword_14FFA40);
  if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v37 + 48))(v70, 1, v23) == 1)
  {
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
    sub_56024((uint64_t)v70, &qword_14FFA40);
  }
  else
  {
    (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v37 + 32))(v264, v70, v23);
  }
  sub_5C238(a2, (uint64_t)v28, &qword_14FFA38);
  v71 = v259;
  v72 = v257;
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v259 + 48))(v28, 1, v257) == 1)
  {
    dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter();
    sub_56024((uint64_t)v28, &qword_14FFA38);
  }
  else
  {
    (*(void (**)(char *, char *, _QWORD *))(v71 + 32))(v262, v28, v72);
  }
  v73 = v254;
  v74 = *(uint64_t (**)(char *, char *, uint64_t))(v37 + 16);
  v75 = v74(v254, v264, v23);
  v76 = Logger.logObject.getter(v75);
  v77 = static os_log_type_t.default.getter(v76);
  if (os_log_type_enabled(v76, v77))
  {
    v78 = swift_slowAlloc(12, -1);
    v79 = swift_slowAlloc(32, -1);
    v269 = v79;
    *(_DWORD *)v78 = 136446210;
    v80 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v81 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, v80);
    v83 = v82;
    *(_QWORD *)(v78 + 4) = sub_BA95EC(v81, v82, &v269);
    v84 = swift_bridgeObjectRelease(v83);
    v254 = *(char **)(v37 + 8);
    ((void (*)(char *, uint64_t, __n128))v254)(v73, v23, v84);
    _os_log_impl(&dword_0, v76, v77, "| Add Status: %{public}s", (uint8_t *)v78, 0xCu);
    swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
    v85 = v79;
    v72 = v257;
    swift_slowDealloc(v85, -1, -1);
    swift_slowDealloc(v78, -1, -1);
  }
  else
  {
    v254 = *(char **)(v37 + 8);
    ((void (*)(char *, uint64_t))v254)(v73, v23);
  }

  v86 = v259;
  v252 = *(_QWORD **)(v259 + 16);
  v87 = ((uint64_t (*)(char *, char *, _QWORD *))v252)(v32, v262, v72);
  v88 = Logger.logObject.getter(v87);
  v89 = static os_log_type_t.default.getter(v88);
  if (os_log_type_enabled(v88, v89))
  {
    v90 = swift_slowAlloc(12, -1);
    v91 = swift_slowAlloc(32, -1);
    v269 = v91;
    *(_DWORD *)v90 = 136446210;
    v92 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v93 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v72, v92);
    v95 = v94;
    *(_QWORD *)(v90 + 4) = sub_BA95EC(v93, v94, &v269);
    v96 = swift_bridgeObjectRelease(v95);
    v257 = *(_QWORD **)(v86 + 8);
    ((void (*)(char *, _QWORD *, __n128))v257)(v32, v72, v96);
    _os_log_impl(&dword_0, v88, v89, "| Download Status: %{public}s", (uint8_t *)v90, 0xCu);
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v90, -1, -1);
  }
  else
  {
    v257 = *(_QWORD **)(v86 + 8);
    ((void (*)(char *, _QWORD *))v257)(v32, v72);
  }

  v97 = v256;
  v98 = v253;
  v99 = (char *)v265 + *(_QWORD *)(*v265 + 128);
  v100 = swift_beginAccess(v99, &v269, 0, 0);
  v101 = &v97[*(int *)(TupleTypeMetadata2 + 48)];
  v102 = *(void (**)(char *, char *, uint64_t, __n128))(v260 + 16);
  v103 = v258;
  v102(v97, v99, v258, v100);
  v104 = v261;
  v74(v101, v264, v261);
  v105 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v101, v104);
  if (v105 == enum case for MusicLibrary.AddStatus.addable(_:))
  {
    v270 = 0;
    v271 = 768;
    v106 = (uint64_t (*)(char *, uint64_t))v254;
    ((void (*)(char *, uint64_t))v254)(v101, v104);
    goto LABEL_45;
  }
  if (v105 == enum case for MusicLibrary.AddStatus.unaddable(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v101, v261);
    v107 = v246;
    v108 = v249;
    v109 = v251;
    (*(void (**)(char *, char *, uint64_t))(v246 + 32))(v249, v101, v251);
    v110 = *(uint64_t (**)(char *, char *, uint64_t))(v107 + 16);
    v111 = v110(v98, v108, v109);
    v112 = Logger.logObject.getter(v111);
    v113 = static os_log_type_t.default.getter(v112);
    if (os_log_type_enabled(v112, v113))
    {
      v114 = swift_slowAlloc(12, -1);
      v115 = swift_slowAlloc(32, -1);
      v268 = v115;
      *(_DWORD *)v114 = 136446210;
      v116 = sub_4DD24(&qword_14FB0F8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v117 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v251, v116);
      v119 = v118;
      *(_QWORD *)(v114 + 4) = sub_BA95EC(v117, v118, &v268);
      v120 = swift_bridgeObjectRelease(v119);
      v121 = v98;
      v122 = *(void (**)(char *, uint64_t, __n128))(v107 + 8);
      v122(v121, v251, v120);
      _os_log_impl(&dword_0, v112, v113, "|—● Item is unaddable: %{public}s", (uint8_t *)v114, 0xCu);
      swift_arrayDestroy(v115, 1, (char *)&type metadata for Any + 8);
      v123 = v115;
      v108 = v249;
      swift_slowDealloc(v123, -1, -1);
      v124 = v114;
      v109 = v251;
      swift_slowDealloc(v124, -1, -1);
    }
    else
    {
      v137 = v98;
      v122 = *(void (**)(char *, uint64_t, __n128))(v107 + 8);
      ((void (*)(char *, uint64_t))v122)(v137, v109);
    }

    v138 = v247;
    v139 = v248;
    v110(v248, v108, v109);
    v140 = (*(uint64_t (**)(char *, uint64_t))(v107 + 88))(v139, v109);
    if ((_DWORD)v140 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      || (_DWORD)v140 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      || (_DWORD)v140 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v164 = v110(v138, v108, v109);
      v165 = Logger.logObject.getter(v164);
      v166 = v138;
      v167 = static os_log_type_t.default.getter(v165);
      if (os_log_type_enabled(v165, v167))
      {
        v168 = v109;
        v169 = swift_slowAlloc(12, -1);
        v170 = swift_slowAlloc(32, -1);
        v268 = v170;
        *(_DWORD *)v169 = 136315138;
        v171 = sub_4DD24(&qword_14FB0F8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v172 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v168, v171);
        v174 = v173;
        *(_QWORD *)(v169 + 4) = sub_BA95EC(v172, v173, &v268);
        v175 = swift_bridgeObjectRelease(v174);
        v122(v166, v168, v175);
        swift_arrayDestroy(v170, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v170, -1, -1);
        swift_slowDealloc(v169, -1, -1);

        v176 = v249;
        v177 = v168;
      }
      else
      {

        ((void (*)(char *, uint64_t))v122)(v166, v109);
        v176 = v108;
        v177 = v109;
      }
      ((void (*)(char *, uint64_t))v122)(v176, v177);
      v103 = v258;
      v270 = 0;
      v271 = 768;
    }
    else
    {
      v141 = Logger.logObject.getter(v140);
      v142 = static os_log_type_t.default.getter(v141);
      v143 = os_log_type_enabled(v141, v142);
      v103 = v258;
      if (v143)
      {
        v144 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v144 = 0;
        _os_log_impl(&dword_0, v141, v142, "|—| Reason is not actionable by the user", v144, 2u);
        swift_slowDealloc(v144, -1, -1);
      }

      ((void (*)(char *, uint64_t))v122)(v108, v109);
      v270 = 0;
      v271 = 512;
      ((void (*)(char *, uint64_t))v122)(v248, v109);
    }
    v106 = (uint64_t (*)(char *, uint64_t))v254;
    goto LABEL_45;
  }
  if (v105 != enum case for MusicLibrary.AddStatus.added(_:))
  {
    v145 = v265;
    v146 = swift_retain_n(v265, 4);
    v147 = Logger.logObject.getter(v146);
    v148 = static os_log_type_t.error.getter(v147);
    if (os_log_type_enabled(v147, v148))
    {
      v149 = swift_slowAlloc(22, -1);
      v260 = swift_slowAlloc(64, -1);
      v268 = v260;
      *(_DWORD *)v149 = 136446466;
      v150 = v236;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
      v151 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v152 = v261;
      v153 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v261, v151);
      v155 = v154;
      v156 = v152;
      v106 = (uint64_t (*)(char *, uint64_t))v254;
      ((void (*)(char *, uint64_t))v254)(v150, v156);
      *(_QWORD *)(v149 + 4) = sub_BA95EC(v153, v155, &v268);
      swift_release_n(v265, 2);
      v157 = swift_bridgeObjectRelease(v155);
      *(_WORD *)(v149 + 12) = 2082;
      v158 = v250;
      v159 = v258;
      v102(v250, v99, v258, v157);
      v160 = (char *)String.init<A>(describing:)(v158, v159);
      v162 = v161;
      *(_QWORD *)(v149 + 14) = sub_BA95EC(v160, v161, &v268);
      swift_release_n(v265, 2);
      swift_bridgeObjectRelease(v162);
      _os_log_impl(&dword_0, v147, v148, "| Unhandled add status (%{public}s) for item: %{public}s", (uint8_t *)v149, 0x16u);
      v163 = v260;
      swift_arrayDestroy(v260, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v163, -1, -1);
      swift_slowDealloc(v149, -1, -1);

    }
    else
    {

      swift_release_n(v145, 4);
      v106 = (uint64_t (*)(char *, uint64_t))v254;
    }
    v270 = 0;
    v271 = 512;
    v260 = v244;
    v103 = TupleTypeMetadata2;
    v97 = v256;
    goto LABEL_45;
  }
  v125 = v242;
  v126 = v243;
  v127 = swift_dynamicCast(v242, v97, v103, v243, 0);
  v106 = (uint64_t (*)(char *, uint64_t))v254;
  v128 = v245;
  if (v127)
  {
    v129 = v237;
    v130 = v238;
    (*(void (**)(char *, char *, uint64_t))(v237 + 32))(v238, v125, v126);
    v131 = Album.childrenAddStatus(_:)(v265[2]);
    if (v131 == 1)
    {
      v132 = Logger.logObject.getter(v131);
      v133 = static os_log_type_t.default.getter(v132);
      if (os_log_type_enabled(v132, v133))
      {
        v134 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v134 = 0;
        _os_log_impl(&dword_0, v132, v133, "| Album is already added but has at least 1 addable track", v134, 2u);
        v135 = v134;
        v130 = v238;
        swift_slowDealloc(v135, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v126);
      v270 = 0;
      v136 = 768;
LABEL_56:
      v271 = v136;
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v126);
  }
  v189 = v239;
  v190 = swift_dynamicCast(v239, v97, v103, v128, 0);
  if ((_DWORD)v190)
  {
    v191 = (*(uint64_t (**)(char *, char *, uint64_t))(v241 + 32))(v240, v189, v128);
    v192 = v235;
    Playlist.entries.getter(v191);
    v193 = (uint64_t)v192;
    v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE960);
    v195 = *(_QWORD *)(v194 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194) == 1)
    {
      sub_56024(v193, &qword_14FB4D8);
      v106 = (uint64_t (*)(char *, uint64_t))v254;
    }
    else
    {
      v196 = sub_5C150((unint64_t *)&qword_14FE990, &qword_14FE960, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Collection.startIndex.getter(v194);
      dispatch thunk of Collection.endIndex.getter(v194, v196);
      v197 = v267;
      v198 = v268;
      v199 = (*(uint64_t (**)(uint64_t, uint64_t))(v195 + 8))(v193, v194);
      v106 = (uint64_t (*)(char *, uint64_t))v254;
      if (v198 == v197)
      {
        v200 = Logger.logObject.getter(v199);
        v201 = static os_log_type_t.default.getter(v200);
        if (os_log_type_enabled(v200, v201))
        {
          v202 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v202 = 0;
          _os_log_impl(&dword_0, v200, v201, "| Playlist is already added but does not have any tracks", v202, 2u);
          swift_slowDealloc(v202, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v241 + 8))(v240, v128);
        v270 = 0;
        v136 = 512;
        goto LABEL_56;
      }
    }
    v190 = (*(uint64_t (**)(char *, uint64_t))(v241 + 8))(v240, v128);
  }
  v203 = Logger.logObject.getter(v190);
  v204 = static os_log_type_t.default.getter(v203);
  if (os_log_type_enabled(v203, v204))
  {
    v205 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v205 = 0;
    _os_log_impl(&dword_0, v203, v204, "|—● Item is added", v205, 2u);
    swift_slowDealloc(v205, -1, -1);
  }

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v206 = result;
  v207 = objc_msgSend(result, "canShowCloudDownloadButtons");

  if (!v207)
  {
    v212 = Logger.logObject.getter(v208);
    v213 = static os_log_type_t.default.getter(v212);
    if (os_log_type_enabled(v212, v213))
    {
      v214 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v214 = 0;
      _os_log_impl(&dword_0, v212, v213, "|—| MPCloudController -canShowCloudDownloadButton: NO", v214, 2u);
      swift_slowDealloc(v214, -1, -1);
    }

    goto LABEL_67;
  }
  v209 = v234;
  ((void (*)(uint64_t *, char *, _QWORD *))v252)(v234, v262, v72);
  v210 = v259;
  v211 = (*(uint64_t (**)(uint64_t *, _QWORD *))(v259 + 88))(v209, v72);
  if ((_DWORD)v211 == enum case for MusicLibrary.DownloadStatus.downloading(_:))
  {
    (*(void (**)(uint64_t *, _QWORD *))(v210 + 96))(v209, v72);
    v270 = *v209;
    v271 = 0;
    goto LABEL_45;
  }
  v215 = v211;
  if ((_DWORD)v211 == enum case for MusicLibrary.DownloadStatus.paused(_:))
  {
    (*(void (**)(uint64_t *, _QWORD *))(v259 + 96))(v209, v72);
    v216 = v233;
    if (((v232 >> 8) - 2 < 4) | v232 & 1)
      v216 = 0;
    v270 = v216;
    v271 = ((v232 >> 8) - 2 < 4) | v232 & 1 | 0x100;
    v217 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v217 - 8) + 8))(v209, v217);
    goto LABEL_45;
  }
  if ((_DWORD)v211 == enum case for MusicLibrary.DownloadStatus.notDownloadable(_:))
  {
LABEL_67:
    v270 = 0;
    v271 = 512;
    goto LABEL_45;
  }
  if ((_DWORD)v211 != enum case for MusicLibrary.DownloadStatus.downloadable(_:))
  {
    if ((_DWORD)v211 == enum case for MusicLibrary.DownloadStatus.downloadWaiting(_:))
    {
      v270 = 0;
      v271 = 1;
      goto LABEL_45;
    }
    if ((_DWORD)v211 == enum case for MusicLibrary.DownloadStatus.downloaded(_:))
    {
      v270 = 0;
      v271 = 1280;
      goto LABEL_45;
    }
    v218 = enum case for MusicLibrary.DownloadStatus.cancelled(_:);
    v219 = Logger.logObject.getter(v211);
    v220 = static os_log_type_t.default.getter(v219);
    v221 = os_log_type_enabled(v219, v220);
    if (v215 != v218)
    {
      v106 = (uint64_t (*)(char *, uint64_t))v254;
      if (v221)
      {
        v228 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v228 = 0;
        _os_log_impl(&dword_0, v219, v220, "|—| Unhandled case", v228, 2u);
        v229 = v228;
        v209 = v234;
        swift_slowDealloc(v229, -1, -1);
      }

      v270 = 0;
      v271 = 512;
      ((void (*)(uint64_t *, _QWORD *))v257)(v209, v72);
      goto LABEL_45;
    }
    if (v221)
    {
      v222 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v222 = 0;
      swift_slowDealloc(v222, -1, -1);
    }

    v224 = Logger.logObject.getter(v223);
    v225 = static os_log_type_t.default.getter(v224);
    v226 = os_log_type_enabled(v224, v225);
    v106 = (uint64_t (*)(char *, uint64_t))v254;
    if (v226)
    {
      v227 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v227 = 0;
      _os_log_impl(&dword_0, v224, v225, "|—| 🌚 though we're not sure this is the right thing to do", v227, 2u);
      swift_slowDealloc(v227, -1, -1);
    }

  }
  v270 = 0;
  v271 = 1024;
LABEL_45:
  v178 = (*(uint64_t (**)(char *, uint64_t))(v260 + 8))(v97, v103);
  v179 = v270;
  v180 = v271;
  v181 = Logger.logObject.getter(v178);
  v182 = static os_log_type_t.default.getter(v181);
  if (os_log_type_enabled(v181, v182))
  {
    v183 = swift_slowAlloc(12, -1);
    v184 = swift_slowAlloc(32, -1);
    v268 = v184;
    *(_DWORD *)v183 = 136446210;
    v185 = (char *)MusicLibrary.ActionableState.description.getter(v179, v180);
    v187 = v186;
    *(_QWORD *)(v183 + 4) = sub_BA95EC(v185, v186, &v268);
    swift_bridgeObjectRelease(v187);
    _os_log_impl(&dword_0, v181, v182, "╰ Item state resolved to %{public}s", (uint8_t *)v183, 0xCu);
    swift_arrayDestroy(v184, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v184, -1, -1);
    swift_slowDealloc(v183, -1, -1);
  }

  swift_beginAccess(&v270, &v268, 0, 0);
  sub_CAB6C4(v270, v271);
  ((void (*)(char *, _QWORD *))v257)(v262, v72);
  return (id)v106(v264, v261);
}

double sub_CAD360()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  char v36[24];

  v1 = *(_QWORD **)v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA18);
  v3 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  v33 = v3;
  __chkstk_darwin(v2);
  v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA20);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v0 + v1[21]);
  swift_beginAccess(v8, v36, 1, 0);
  v9 = *v8;
  *v8 = (uint64_t)&_swiftEmptySetSingleton;
  v10 = swift_bridgeObjectRelease(v9);
  v29 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  dispatch thunk of MusicLibrary.ItemState.$addStatus.getter(v10);
  v11 = swift_allocObject(&unk_13B3D40, 24, 7);
  swift_weakInit(v11 + 16);
  v12 = (_QWORD *)swift_allocObject(&unk_13B3D68, 56, 7);
  v13 = v1[10];
  v12[2] = v13;
  v14 = v1[11];
  v12[3] = v14;
  v15 = v1[12];
  v12[4] = v15;
  v16 = v1[13];
  v12[5] = v16;
  v12[6] = v11;
  v17 = sub_5C150(&qword_14FFA28, &qword_14FFA20, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v18 = Publisher<>.sink(receiveValue:)(sub_CAF310, v12, v5, v17);
  v19 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v7, v5, v19);
  swift_beginAccess(v8, v34, 33, 0);
  sub_CBD1CC(&v35, v18);
  swift_endAccess(v34);
  v20 = swift_release(v35);
  v21 = v31;
  dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v20);
  v22 = swift_allocObject(&unk_13B3D40, 24, 7);
  swift_weakInit(v22 + 16);
  v23 = (_QWORD *)swift_allocObject(&unk_13B3D90, 56, 7);
  v23[2] = v13;
  v23[3] = v14;
  v23[4] = v15;
  v23[5] = v16;
  v23[6] = v22;
  v24 = sub_5C150(&qword_14FFA30, &qword_14FFA18, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v25 = v32;
  v26 = Publisher<>.sink(receiveValue:)(sub_CAF31C, v23, v32, v24);
  v27 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v21, v25, v27);
  swift_beginAccess(v8, v34, 33, 0);
  sub_CBD1CC(&v35, v26);
  swift_endAccess(v34);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

uint64_t sub_CAD640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA38);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA40);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.AddStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2 + 16;
  if (qword_14F9F08 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  v15 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v15, (uint64_t)static Logger.libraryActionableState);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16 = v36(v13, a1, v10);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v34 = a1;
    v20 = v19;
    v21 = swift_slowAlloc(32, -1);
    v35 = v6;
    v22 = v21;
    v37[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v23 = sub_4DD24(&qword_14FF960, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v23);
    v26 = v25;
    *(_QWORD *)(v20 + 4) = sub_BA95EC(v24, v25, v37);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v27);
    _os_log_impl(&dword_0, v17, v18, "Add status has updated to %{public}s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v28 = v22;
    v6 = v35;
    swift_slowDealloc(v28, -1, -1);
    v29 = v20;
    a1 = v34;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  swift_beginAccess(v14, v37, 0, 0);
  result = swift_weakLoadStrong(v14);
  if (result)
  {
    v31 = result;
    v36(v9, a1, v10);
    v32 = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    v33 = type metadata accessor for MusicLibrary.DownloadStatus(0, v32);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
    sub_CABA38((uint64_t)v9, (uint64_t)v6);
    swift_release(v31);
    sub_56024((uint64_t)v6, &qword_14FFA38);
    return sub_56024((uint64_t)v9, &qword_14FFA40);
  }
  return result;
}

uint64_t sub_CAD95C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA38);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA40);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicLibrary.DownloadStatus(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2 + 16;
  if (qword_14F9F08 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  v16 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v16, (uint64_t)static Logger.libraryActionableState);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v17 = v36(v14, a1, v11);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v34 = v10;
    v21 = v20;
    v22 = swift_slowAlloc(32, -1);
    v35 = a1;
    v23 = v22;
    v37[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v24 = sub_4DD24(&qword_14FF968, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v11, v24);
    v27 = v26;
    *(_QWORD *)(v21 + 4) = sub_BA95EC(v25, v26, v37);
    v28 = swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v28);
    _os_log_impl(&dword_0, v18, v19, "Download status has updated to %{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v29 = v23;
    a1 = v35;
    swift_slowDealloc(v29, -1, -1);
    v30 = v21;
    v10 = v34;
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  swift_beginAccess(v15, v37, 0, 0);
  result = swift_weakLoadStrong(v15);
  if (result)
  {
    v32 = result;
    v33 = type metadata accessor for MusicLibrary.AddStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
    v36(v6, a1, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    sub_CABA38((uint64_t)v10, (uint64_t)v6);
    swift_release(v32);
    sub_56024((uint64_t)v6, &qword_14FFA38);
    return sub_56024((uint64_t)v10, &qword_14FFA40);
  }
  return result;
}

uint64_t *MusicLibrary.ActionableStateController.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  sub_64880((uint64_t)(v0 + 3));
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

double MusicLibrary.ActionableStateController.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  MusicLibrary.ActionableStateController.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_CADD2C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.libraryActionableState);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.libraryActionableState);
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0xD000000000000018, 0x8000000001107470);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.libraryActionableState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9F08 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.libraryActionableState);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_CADE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType(a2))
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  else
    return type metadata accessor for _ContiguousArrayStorage(0, a2);
}

uint64_t sub_CADE88(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFBD4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_C9B094(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CADF18(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFBF4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_C9B6A0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CADFA8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFC74);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_C9BC48(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE038(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_14FFC54);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_BE3E58;
  return sub_C9C1F0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE0C8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_14FFC34);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_BE3E58;
  return sub_C9CBB0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v8;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v9;
  v10 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v10;
  v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_14FFB34);
  *(_QWORD *)(v4 + 152) = v12;
  *v12 = v4;
  v12[1] = sub_BDD844;
  return sub_C9D5D0(a1, a2, a3, (__int128 *)(v4 + 16));
}

uint64_t sub_CAE1F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFC14);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_C9E004(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE280(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFB94);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_C9E5AC(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE310(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFA5C);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_C9EB54(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v5;
  char v10;
  _QWORD *v11;

  v10 = *a5;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFA74);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_C3150;
  return sub_C9F0FC(a1, a2, a3, a4, v10);
}

uint64_t sub_CAE420(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_14FFB54);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_BDE260;
  return sub_C9FA5C(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE4B0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_14FFB74);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_BE3E58;
  return sub_CA047C(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE540(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFBB4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_CA09BC(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE5D0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFAB4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_CA0F64(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE660(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFAD4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BDEC58;
  return sub_CA150C(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE6F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFAF4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_CA2138(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE780(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFB14);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_BE3E54;
  return sub_CA26E0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_CAE810(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v9 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_14FFA94);
  *(_QWORD *)(v4 + 112) = v11;
  *v11 = v4;
  v11[1] = sub_BDF55C;
  return sub_CA2C88(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t _s8MusicKit0A7LibraryC0A4CoreE15ActionableStateO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  switch(HIBYTE(a2))
  {
    case 2:
      return (a4 & 0xFF00) == 0x200;
    case 3:
      return (a4 & 0xFF00) == 0x300;
    case 4:
      return (a4 & 0xFF00) == 0x400;
    case 5:
      return (a4 & 0xFF00) == 0x500;
    default:
      if (HIBYTE(a4) - 2 < 4)
        return 0;
      if ((a2 & 1) != 0)
      {
        if ((a4 & 1) == 0)
          return 0;
      }
      else if ((a4 & 1) != 0 || *(double *)&a1 != *(double *)&a3)
      {
        return 0;
      }
      return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
  }
}

unint64_t sub_CAE960()
{
  unint64_t result;

  result = qword_14FF950;
  if (!qword_14FF950)
  {
    result = swift_getWitnessTable(&unk_10A0F88, &_s15ActionableStateO5ErrorON);
    atomic_store(result, &qword_14FF950);
  }
  return result;
}

uint64_t sub_CAE9A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

char *sub_CAE9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v7 = v6;
  v69 = a1;
  v13 = *(_QWORD *)v7;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA38);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFA40);
  __chkstk_darwin(v17);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v7 + 4) = 0;
  swift_unknownObjectWeakInit(v7 + 24, 0);
  v20 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 152)];
  *(_QWORD *)v20 = 0;
  *((_WORD *)v20 + 4) = 512;
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 160)] = 0;
  v68 = a3;
  v66 = v16;
  v64 = v7 + 24;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_C5F09C((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v21 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 168)] = v21;
  v22 = *(_QWORD *)(v13 + 80);
  v67 = v13;
  v65 = *(_QWORD *)(v13 + 96);
  v23 = MusicLibrary.state<A>(for:)(v69, v22, v65);
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 136)] = v23;
  v24 = qword_14F9F08;
  swift_retain(v23);
  if (v24 != -1)
    swift_once(&qword_14F9F08, sub_CADD2C);
  v25 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v25, (uint64_t)static Logger.libraryActionableState);
  v26 = swift_retain_n(v23, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(12, -1);
    v63 = a6;
    v61 = a4;
    v30 = v29;
    v31 = swift_slowAlloc(32, -1);
    v62 = a5;
    v32 = a2;
    v33 = v31;
    v70 = v23;
    v71 = v31;
    *(_DWORD *)v30 = 136446210;
    v34 = (char *)String.init<A>(describing:)(&v70, &type metadata for UnsafeRawPointer);
    v36 = v35;
    *(_QWORD *)(v30 + 4) = sub_BA95EC(v34, v35, &v71);
    swift_release_n(v23, 2);
    swift_bridgeObjectRelease(v36);
    _os_log_impl(&dword_0, v27, v28, "Initializing item state: %{public}s", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    v37 = v33;
    a2 = v32;
    a5 = v62;
    swift_slowDealloc(v37, -1, -1);
    v38 = v30;
    a4 = v61;
    a6 = v63;
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_release_n(v23, 2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(&v7[*(_QWORD *)(*(_QWORD *)v7 + 128)], v69, v22);
  *((_QWORD *)v7 + 2) = a2;
  *((_QWORD *)v7 + 4) = a4;
  v39 = v68;
  swift_unknownObjectWeakAssign(v64, v68);
  v40 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 144)];
  *(_QWORD *)v40 = a5;
  *((_QWORD *)v40 + 1) = a6;
  v41 = a6;
  v42 = type metadata accessor for MusicLibrary.AddStatus(0);
  v43 = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v19, 1, 1, v42);
  v44 = type metadata accessor for MusicLibrary.DownloadStatus(0, v43);
  v45 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v66, 1, 1, v44);
  swift_retain(a2);
  swift_retain(v41);
  sub_CABA38((uint64_t)v19, v45);
  sub_56024(v45, &qword_14FFA38);
  sub_56024((uint64_t)v19, &qword_14FFA40);
  v46 = (void *)MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification;
  v47 = (void *)objc_opt_self(MPCloudController);
  v48 = v46;
  v49 = objc_msgSend(v47, "sharedCloudController");
  v50 = swift_allocObject(&unk_13B3D40, 24, 7);
  swift_weakInit(v50 + 16);
  v51 = a2;
  v52 = (_QWORD *)swift_allocObject(&unk_13B3DB8, 56, 7);
  v52[2] = v22;
  v53 = v67;
  v54 = v65;
  v52[3] = *(_QWORD *)(v67 + 88);
  v52[4] = v54;
  v52[5] = *(_QWORD *)(v53 + 104);
  v52[6] = v50;
  v55 = type metadata accessor for NotificationObserver();
  swift_allocObject(v55, 64, 7);
  v56 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v48, (uint64_t)v49, 1, 1, (uint64_t)sub_CAF328, (uint64_t)v52);
  v57 = *(_QWORD *)(*(_QWORD *)v7 + 160);
  v58 = *(_QWORD *)&v7[v57];
  *(_QWORD *)&v7[v57] = v56;
  swift_release(v58);
  sub_CAD360();
  swift_release(v23);
  swift_release(v51);
  swift_unknownObjectRelease(v39);
  swift_release(v41);
  return v7;
}

uint64_t sub_CAEEAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + *(_QWORD *)(v7 + 128);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  v10 = swift_beginAccess(v8, v12, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v8, a1, v3, v10);
  swift_endAccess(v12);
  sub_CAA568(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_CAEF8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int16 v4;
  _BYTE v5[24];

  v3 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 152);
  swift_beginAccess(v3, v5, 0, 0);
  v4 = *(_WORD *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_WORD *)(a2 + 8) = v4;
}

void sub_CAEFE4(uint64_t a1)
{
  sub_CAB6C4(*(_QWORD *)a1, *(_WORD *)(a1 + 8));
}

uint64_t sub_CAF010()
{
  return 32;
}

__n128 sub_CAF01C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t __swift_memcpy10_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s15ActionableStateOwet(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 < 2)
    return 0;
  v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  result = v4 - 3;
  if (v4 <= 3)
    return 0;
  return result;
}

uint64_t _s15ActionableStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 5;
  }
  return result;
}

uint64_t sub_CAF0CC(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 9);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_CAF0E8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicLibrary.ActionableState()
{
  return &type metadata for MusicLibrary.ActionableState;
}

uint64_t sub_CAF120(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_10A0ED0;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for () + 64;
    v4[5] = &unk_10A0EE8;
    v4[6] = &unk_10A0F00;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_initClassMetadata2(a1, 0, 8, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MusicLibrary.ActionableStateController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for MusicLibrary.ActionableStateController);
}

uint64_t _s15ActionableStateO5ErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_CAF224 + 4 * byte_10A0E24[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_CAF244 + 4 * byte_10A0E29[v4]))();
}

_BYTE *sub_CAF224(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_CAF244(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_CAF24C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_CAF254(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_CAF25C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_CAF264(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15ActionableStateO5ErrorOMa()
{
  return &_s15ActionableStateO5ErrorON;
}

unint64_t sub_CAF284()
{
  unint64_t result;

  result = qword_14FFA10;
  if (!qword_14FFA10)
  {
    result = swift_getWitnessTable(&unk_10A0F60, &_s15ActionableStateO5ErrorON);
    atomic_store(result, (unint64_t *)&qword_14FFA10);
  }
  return result;
}

uint64_t sub_CAF2C8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CAF2EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_CAF310(uint64_t a1)
{
  return sub_58B08C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CAD640);
}

uint64_t sub_CAF31C(uint64_t a1)
{
  return sub_58B08C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CAD95C);
}

uint64_t sub_CAF328(uint64_t a1)
{
  return sub_58B08C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CAA428);
}

uint64_t sub_CAF33C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFA4C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFA48 + dword_14FFA48))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAF3C4(uint64_t a1)
{
  uint64_t v1;

  return sub_CA3BB4(a1, v1 + 16, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CAF3E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 233, 7);
}

uint64_t sub_CAF458(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFA64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))((char *)&dword_14FFA60 + dword_14FFA60))(a1, v4, v5, v1 + 32, (char *)(v1 + 232));
}

uint64_t sub_CAF4E4(uint64_t a1)
{
  uint64_t v1;

  return sub_CA3BB4(a1, v1 + 16, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CAF508(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[6];

  v2 = v1[4];
  v6[2] = v1[3];
  v6[3] = v2;
  v3 = v1[6];
  v6[4] = v1[5];
  v6[5] = v3;
  v4 = v1[2];
  v6[0] = v1[1];
  v6[1] = v4;
  return sub_CA3D98(a1, (uint64_t)v6, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CAF548()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_CAF594(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFA84);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFA80 + dword_14FFA80))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAF618(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[6];

  v2 = v1[4];
  v6[2] = v1[3];
  v6[3] = v2;
  v3 = v1[6];
  v6[4] = v1[5];
  v6[5] = v3;
  v4 = v1[2];
  v6[0] = v1[1];
  v6[1] = v4;
  return sub_CA3D98(a1, (uint64_t)v6, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CAF660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFAA4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFAA0 + dword_14FFAA0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAF6E8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[7];

  v2 = v1[6];
  v6[4] = v1[5];
  v6[5] = v2;
  v6[6] = v1[7];
  v3 = v1[2];
  v6[0] = v1[1];
  v6[1] = v3;
  v4 = v1[4];
  v6[2] = v1[3];
  v6[3] = v4;
  return sub_C9AAC0(a1, (uint64_t)v6, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CAF734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFAC4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFAC0 + dword_14FFAC0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAF7B8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[7];

  v2 = v1[6];
  v6[4] = v1[5];
  v6[5] = v2;
  v6[6] = v1[7];
  v3 = v1[2];
  v6[0] = v1[1];
  v6[1] = v3;
  v4 = v1[4];
  v6[2] = v1[3];
  v6[3] = v4;
  return sub_C9AAC0(a1, (uint64_t)v6, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CAF808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFAE4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFAE0 + dword_14FFAE0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAF894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFB04);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFB00 + dword_14FFB00))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAF91C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];
  uint64_t v8;

  v2 = *(_OWORD *)(v1 + 128);
  v7[6] = *(_OWORD *)(v1 + 112);
  v7[7] = v2;
  v8 = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  v7[2] = *(_OWORD *)(v1 + 48);
  v7[3] = v3;
  v4 = *(_OWORD *)(v1 + 96);
  v7[4] = *(_OWORD *)(v1 + 80);
  v7[5] = v4;
  v5 = *(_OWORD *)(v1 + 32);
  v7[0] = *(_OWORD *)(v1 + 16);
  v7[1] = v5;
  return sub_CA39D8(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CAF96C()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_CAF9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFB24);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_14FFB20 + dword_14FFB20))(a1, v4, v5, v1 + 32);
}

uint64_t sub_CAFA5C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];
  uint64_t v8;

  v2 = *(_OWORD *)(v1 + 128);
  v7[6] = *(_OWORD *)(v1 + 112);
  v7[7] = v2;
  v8 = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  v7[2] = *(_OWORD *)(v1 + 48);
  v7[3] = v3;
  v4 = *(_OWORD *)(v1 + 96);
  v7[4] = *(_OWORD *)(v1 + 80);
  v7[5] = v4;
  v5 = *(_OWORD *)(v1 + 32);
  v7[0] = *(_OWORD *)(v1 + 16);
  v7[1] = v5;
  return sub_CA39D8(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CAFAAC()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CAFABC(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_C9AE98(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CAFB04()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CAFB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFB44);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFB40 + dword_14FFB40))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFB94()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CAFBA4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_C9AE98(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CAFBEC()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CAFBFC()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CAFC0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFB64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFB60 + dword_14FFB60))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFC8C()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CAFCA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFB84);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFB80 + dword_14FFB80))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFD30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFBA4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFBA0 + dword_14FFBA0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFDBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFBC4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFBC0 + dword_14FFBC0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFBE4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFBE0 + dword_14FFBE0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFC04);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFC00 + dword_14FFC00))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CAFF58()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_CAFF6C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_C9AC9C(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CAFFB4()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_CAFFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFC24);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFC20 + dword_14FFC20))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CB0048()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_CB005C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_C9AC9C(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CB00A4()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CB00B8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_CA37FC(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_CB0100()
{
  return objectdestroy_182Tm((void (*)(_QWORD, __n128))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CB0114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFC44);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFC40 + dword_14FFC40))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_CB0194()
{
  return objectdestroy_172Tm((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_CB01A8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_CA37FC(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_CB01F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_14FFC64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_14FFC60 + dword_14FFC60))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t Library.ContentFilterOption.id.getter(char a1)
{
  if (!a1)
    return 7105633;
  if (a1 == 1)
    return 0x657469726F766166;
  return 0x64616F6C6E776F64;
}

uint64_t sub_CB0310(char *a1, unsigned __int8 *a2)
{
  return sub_BB77C4(*a1, *a2);
}

unint64_t sub_CB031C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO19ContentFilterOptionO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_CB0348(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0x657469726F766166;
  if (v2 != 1)
    v4 = 0x64616F6C6E776F64;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 7105633;
  if (!v5)
    v3 = 0xE900000000000073;
  *a1 = v6;
  a1[1] = v3;
}

Swift::Int sub_CB03A8()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = 0x657469726F766166;
  if (v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_CB0448(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = 0x657469726F766166;
  if (*v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (*v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (*v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_CB04C4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = 0x657469726F766166;
  if (v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_CB0560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_CB6790();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_CB05BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_CB6790();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void Optional<A>.convertToSet.getter(char a1)
{
  __asm { BR              X10 }
}

void *sub_CB0650()
{
  swift_bridgeObjectRelease(0xE300000000000000);
  return &_swiftEmptySetSingleton;
}

uint64_t Library.Context.musicLibrary.getter()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t Library.Context.musicLibrary.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release(*v1);
  *v1 = a1;
  return result;
}

uint64_t Library.Context.album.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 20), a1, &qword_14FB108);
}

uint64_t Library.Context.album.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 20), &qword_14FB108);
}

double (*Library.Context.album.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.artist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 24), a1, &qword_14FC920);
}

uint64_t Library.Context.artist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 24), &qword_14FC920);
}

double (*Library.Context.artist.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.composer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 28), a1, &qword_14FFC98);
}

uint64_t Library.Context.composer.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 28), &qword_14FFC98);
}

double (*Library.Context.composer.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.genre.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 32), a1, &qword_14FFCA0);
}

uint64_t Library.Context.genre.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 32), &qword_14FFCA0);
}

double (*Library.Context.genre.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 36), a1, &qword_14FE970);
}

uint64_t Library.Context.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 36), &qword_14FE970);
}

double (*Library.Context.playlist.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.tvShow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 40), a1, &qword_14FCA98);
}

uint64_t Library.Context.tvShow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 40), &qword_14FCA98);
}

double (*Library.Context.tvShow.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.tvSeason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C238(v1 + *(int *)(v3 + 44), a1, &qword_14FCA68);
}

uint64_t Library.Context.tvSeason.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 44), &qword_14FCA68);
}

double (*Library.Context.tvSeason.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.useDownloadedContentOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 48));
}

uint64_t Library.Context.useDownloadedContentOnly.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

double (*Library.Context.useDownloadedContentOnly.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.sortOption.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 52));
}

uint64_t Library.Context.sortOption.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

double (*Library.Context.sortOption.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.filterOption.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 56));
}

uint64_t Library.Context.filterOption.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

double (*Library.Context.filterOption.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

void Library.Context.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Library.Context.text.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.playlistVariants.getter()
{
  type metadata accessor for Library.Context(0);
  return swift_bridgeObjectRetain();
}

void Library.Context.playlistVariants.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Library.Context(0) + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*Library.Context.playlistVariants.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.isCompilation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 68));
}

uint64_t Library.Context.isCompilation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

double (*Library.Context.isCompilation.modify())(double)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.init()@<X0>(_QWORD *a1@<X8>)
{
  __n128 v2;
  int *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;

  type metadata accessor for MusicLibrary(0);
  *a1 = static MusicLibrary.shared.getter(v2);
  v3 = (int *)type metadata accessor for Library.Context(0);
  v4 = (char *)a1 + v3[5];
  v5 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a1 + v3[6];
  v7 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)a1 + v3[7];
  v9 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a1 + v3[8];
  v11 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (char *)a1 + v3[9];
  v13 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (char *)a1 + v3[10];
  v15 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (char *)a1 + v3[11];
  v17 = type metadata accessor for TVSeason(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *((_BYTE *)a1 + v3[12]) = 0;
  *((_BYTE *)a1 + v3[13]) = 2;
  *((_BYTE *)a1 + v3[14]) = 3;
  v19 = (_QWORD *)((char *)a1 + v3[15]);
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)((char *)a1 + v3[16]) = _swiftEmptyArrayStorage;
  *((_BYTE *)a1 + v3[17]) = 2;
  return result;
}

uint64_t Library.Context.with<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1;
  v41 = type metadata accessor for TVSeason(0);
  v38 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for TVShow(0);
  v39 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Playlist(0);
  v42 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for Genre(0);
  v45 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Composer(0);
  v48 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Artist(0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Album(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Optional(0, a2);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v35 - v21;
  v55 = a3;
  sub_CB4358(v57, a3);
  v57 = v17;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v23(v22, v56, v16);
  v56 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v22, 1, a2) != 1)
  {
    v36 = v22;
    v37 = v16;
    v23(v19, (uint64_t)v22, v16);
    v24 = v19;
    if (swift_dynamicCast(v15, v19, a2, v12, 0))
    {
      v25 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 20);
      sub_56024(v25, &qword_14FB108);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v25, v15, v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
    }
    else
    {
      v26 = v19;
      v27 = v54;
      if (!swift_dynamicCast(v11, v26, a2, v54, 0))
      {
        v31 = v52;
        v30 = v53;
        if (swift_dynamicCast(v52, v24, a2, v53, 0))
        {
          v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 28);
          sub_56024(v32, &qword_14FFC98);
          v33 = v48;
        }
        else
        {
          v31 = v49;
          v30 = v50;
          if (swift_dynamicCast(v49, v24, a2, v50, 0))
          {
            v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 32);
            sub_56024(v32, &qword_14FFCA0);
            v33 = v45;
          }
          else
          {
            v31 = v46;
            v30 = v47;
            if (swift_dynamicCast(v46, v24, a2, v47, 0))
            {
              v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 36);
              sub_56024(v32, &qword_14FE970);
              v33 = v42;
            }
            else
            {
              v31 = v43;
              v30 = v44;
              if (swift_dynamicCast(v43, v24, a2, v44, 0))
              {
                v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 40);
                sub_56024(v32, &qword_14FCA98);
                v33 = v39;
              }
              else
              {
                v31 = v40;
                v30 = v41;
                if (!swift_dynamicCast(v40, v24, a2, v41, 0))
                  goto LABEL_17;
                v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 44);
                sub_56024(v32, &qword_14FCA68);
                v33 = v38;
              }
            }
          }
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v32, v31, v30);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v32, 0, 1, v30);
        goto LABEL_17;
      }
      v28 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 24);
      sub_56024(v28, &qword_14FC920);
      v29 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v28, v11, v27);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v27);
    }
LABEL_17:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, a2);
    v16 = v37;
    v22 = v36;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v22, v16);
}

uint64_t Library.Context.with(compilation:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_CB4358(v1, a1);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a1 + *(int *)(result + 68)) = 1;
  return result;
}

uint64_t Library.Context.with(sortOption:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_CB4358(v2, a2);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a2 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t Library.Context.with(filterOption:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_CB4358(v2, a2);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a2 + *(int *)(result + 56)) = a1;
  return result;
}

void Library.Context.with(filterText:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;

  sub_CB4358(v3, a3);
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v7 = a1;
  v7[1] = a2;
}

void Library.Context.SortOption.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a2 & 1);
}

BOOL static Library.Context.SortOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

Swift::Int Library.Context.SortOption.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

Swift::Int sub_CB1770()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_CB17C0()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;

  v1 = *v0;
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_CB17FC()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void Library.Context.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  Swift::UInt8 v75;
  int v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::UInt v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  Swift::UInt8 v90;
  int *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v3 = type metadata accessor for TVSeason(0);
  v113 = *(_QWORD *)(v3 - 8);
  v114 = v3;
  __chkstk_darwin(v3);
  v97 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
  __chkstk_darwin(v5);
  v112 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v110 = *(_QWORD *)(v7 - 8);
  v111 = v7;
  __chkstk_darwin(v7);
  v96 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
  __chkstk_darwin(v9);
  v109 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v107 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  __chkstk_darwin(v11);
  v95 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  __chkstk_darwin(v13);
  v106 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Genre(0);
  v104 = *(_QWORD *)(v15 - 8);
  v105 = v15;
  __chkstk_darwin(v15);
  v94 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
  __chkstk_darwin(v17);
  v103 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Composer(0);
  v101 = *(_QWORD *)(v19 - 8);
  v102 = v19;
  __chkstk_darwin(v19);
  v93 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
  __chkstk_darwin(v21);
  v100 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Artist(0);
  v98 = *(_QWORD *)(v23 - 8);
  v99 = v23;
  __chkstk_darwin(v23);
  v92 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
  __chkstk_darwin(v25);
  v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Album(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
  __chkstk_darwin(v32);
  v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *v1;
  v35 = type metadata accessor for MusicLibrary(0);
  v36 = sub_4DD24(&qword_14FFCA8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v35, v36);
  v37 = (int *)type metadata accessor for Library.Context(0);
  sub_5C238((uint64_t)v1 + v37[5], (uint64_t)v34, &qword_14FB108);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v34, v28);
    Hasher._combine(_:)(1u);
    v38 = sub_4DD24(&qword_14FFCB0, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    dispatch thunk of Hashable.hash(into:)(a1, v28, v38);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  v39 = v1;
  sub_5C238((uint64_t)v1 + v37[6], (uint64_t)v27, &qword_14FC920);
  v40 = v98;
  v41 = v99;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48))(v27, 1, v99);
  v43 = v111;
  v45 = v102;
  v44 = (uint64_t)v103;
  v46 = (uint64_t)v100;
  if (v42 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v47 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v91 = v37;
    v48 = v92;
    v47(v92, v27, v41);
    Hasher._combine(_:)(1u);
    v49 = sub_4DD24(&qword_14FFCB8, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(a1, v41, v49);
    v50 = v48;
    v37 = v91;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v50, v41);
  }
  v51 = v105;
  sub_5C238((uint64_t)v39 + v37[7], v46, &qword_14FFC98);
  v52 = v101;
  v53 = v43;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v46, 1, v45) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v54 = v46;
    v55 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v93, v54, v45);
    Hasher._combine(_:)(1u);
    v56 = sub_4DD24(&qword_14FFCC0, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
    dispatch thunk of Hashable.hash(into:)(a1, v45, v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v45);
  }
  sub_5C238((uint64_t)v39 + v37[8], v44, &qword_14FFCA0);
  v57 = v104;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v44, 1, v51) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v58 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v94, v44, v51);
    Hasher._combine(_:)(1u);
    v59 = sub_4DD24(&qword_14FFCC8, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
    dispatch thunk of Hashable.hash(into:)(a1, v51, v59);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v51);
  }
  v60 = v106;
  v61 = v107;
  sub_5C238((uint64_t)v39 + v37[9], v106, &qword_14FE970);
  v62 = v108;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v60, 1, v108) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v63 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v95, v60, v62);
    Hasher._combine(_:)(1u);
    v64 = sub_4DD24(&qword_14FFCD0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    dispatch thunk of Hashable.hash(into:)(a1, v62, v64);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
  }
  v65 = v109;
  v66 = v110;
  sub_5C238((uint64_t)v39 + v37[10], v109, &qword_14FCA98);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v65, 1, v53) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v67 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v96, v65, v53);
    Hasher._combine(_:)(1u);
    v68 = sub_4DD24(&qword_14FFCD8, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    dispatch thunk of Hashable.hash(into:)(a1, v53, v68);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v53);
  }
  v69 = v112;
  sub_5C238((uint64_t)v39 + v37[11], v112, &qword_14FCA68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v69, 1, v114) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v71 = v113;
    v70 = v114;
    v72 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v97, v69, v114);
    Hasher._combine(_:)(1u);
    v73 = sub_4DD24(&qword_14FFCE0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    dispatch thunk of Hashable.hash(into:)(a1, v70, v73);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v70);
  }
  Hasher._combine(_:)(*((_BYTE *)v39 + v37[12]));
  v74 = *((unsigned __int8 *)v39 + v37[13]);
  if (v74 == 2)
  {
    v75 = 0;
  }
  else
  {
    v75 = v74 & 1;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v75);
  v76 = *((unsigned __int8 *)v39 + v37[14]);
  if (v76 == 3)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if (v76)
    {
      if (v76 == 1)
        v77 = 0x657469726F766166;
      else
        v77 = 0x64616F6C6E776F64;
      v78 = 0xE900000000000073;
    }
    else
    {
      v78 = 0xE300000000000000;
      v77 = 7105633;
    }
    String.hash(into:)(a1, v77, v78);
    swift_bridgeObjectRelease();
  }
  v79 = (_QWORD *)((char *)v39 + v37[15]);
  v80 = v79[1];
  if (v80)
  {
    v81 = *v79;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v81, v80);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v82 = *(_QWORD *)((char *)v39 + v37[16]);
  v83 = *(_QWORD *)(v82 + 16);
  Hasher._combine(_:)(v83);
  if (v83)
  {
    v84 = type metadata accessor for Playlist.Variant(0);
    v85 = *(_QWORD *)(v84 - 8);
    v86 = v82 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
    v87 = *(_QWORD *)(v85 + 72);
    v88 = sub_4DD24(&qword_14FFCE8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    swift_bridgeObjectRetain();
    do
    {
      dispatch thunk of Hashable.hash(into:)(a1, v84, v88);
      v86 += v87;
      --v83;
    }
    while (v83);
    swift_bridgeObjectRelease();
  }
  v89 = *((unsigned __int8 *)v39 + v37[17]);
  if (v89 == 2)
  {
    v90 = 0;
  }
  else
  {
    v90 = v89 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v90);
}

Swift::Int Library.Context.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Library.Context.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_CB2340()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Library.Context.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_CB2378()
{
  int *v0;
  _QWORD *v1;
  __n128 v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  v0 = (int *)type metadata accessor for Library.Context(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_14FFC78);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_14FFC78);
  type metadata accessor for MusicLibrary(0);
  *v1 = static MusicLibrary.shared.getter(v2);
  v3 = (char *)v1 + v0[5];
  v4 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)v1 + v0[6];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)v1 + v0[7];
  v8 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (char *)v1 + v0[8];
  v10 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (char *)v1 + v0[9];
  v12 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (char *)v1 + v0[10];
  v14 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (char *)v1 + v0[11];
  v16 = type metadata accessor for TVSeason(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *((_BYTE *)v1 + v0[12]) = 0;
  *((_BYTE *)v1 + v0[13]) = 2;
  *((_BYTE *)v1 + v0[14]) = 3;
  v18 = (_QWORD *)((char *)v1 + v0[15]);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)((char *)v1 + v0[16]) = _swiftEmptyArrayStorage;
  *((_BYTE *)v1 + v0[17]) = 2;
  return result;
}

uint64_t sub_CB2550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9F10 != -1)
    swift_once(&qword_14F9F10, sub_CB2378);
  v2 = type metadata accessor for Library.Context(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_14FFC78);
  return sub_CB4358(v3, a1);
}

uint64_t sub_CB25AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_4DD24(&qword_14FFD08, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

_QWORD *EnvironmentValues.libraryContext.getter@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_CB439C();
  return EnvironmentValues.subscript.getter(a1, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v2);
}

uint64_t EnvironmentValues.libraryContext.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_CB4358(a1, (uint64_t)v4);
  v5 = sub_CB439C();
  EnvironmentValues.subscript.setter(v4, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
  return sub_CB43E0(a1);
}

void (*EnvironmentValues.libraryContext.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Library.Context(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = sub_CB439C();
  v3[4] = v6;
  EnvironmentValues.subscript.getter(v5, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v6);
  return sub_CB2770;
}

void sub_CB2770(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_CB4358((*a1)[3], (*a1)[2]);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_CB4358(v3[2], v3[1]);
    EnvironmentValues.subscript.setter(v6, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
    sub_CB43E0((uint64_t)v7);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v3[4]);
  }
  sub_CB43E0((uint64_t)v4);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t View.libraryContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_10A0FE8);
  View.environment<A>(_:_:)(KeyPath, a1, a2, a3);
  return swift_release(KeyPath);
}

uint64_t sub_CB288C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - v6;
  sub_CB4358(a1, (uint64_t)&v10 - v6);
  sub_CB4358((uint64_t)v7, (uint64_t)v4);
  v8 = sub_CB439C();
  EnvironmentValues.subscript.setter(v4, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v8);
  return sub_CB43E0((uint64_t)v7);
}

uint64_t MusicLibraryRequest.apply(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_retain();
  MusicLibraryRequest.library.setter(v4, a2);
  v5 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for Library.Context(0) + 48));
  return MusicLibraryRequest.includeOnlyDownloadedContent.setter(v5, a2);
}

uint64_t _s9MusicCore7LibraryO7ContextV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(char *, uint64_t);
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t);
  int *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char v110;
  void (*v111)(char *, uint64_t);
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char v125;
  void (*v126)(char *, uint64_t);
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char v139;
  void (*v140)(char *, uint64_t);
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  void (*v156)(char *, uint64_t);
  int *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t result;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char v168;
  void (*v169)(char *, uint64_t);
  int *v170;
  uint64_t v171;
  int v172;
  int v173;
  _BOOL4 v174;
  uint64_t v175;
  int v176;
  int v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  int *v190;
  char v191;
  uint64_t v192;
  int v193;
  int v194;
  _BOOL4 v195;
  int *v196;
  _QWORD *v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;

  v204 = type metadata accessor for TVSeason(0);
  v207 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v199 = (char *)&v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE20);
  __chkstk_darwin(v202);
  v217 = (char *)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
  __chkstk_darwin(v6);
  v200 = (uint64_t)&v196 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v203 = (uint64_t)&v196 - v9;
  __chkstk_darwin(v10);
  v206 = (uint64_t)&v196 - v11;
  v210 = type metadata accessor for TVShow(0);
  v215 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v201 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE28);
  __chkstk_darwin(v209);
  v212 = (uint64_t)&v196 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
  __chkstk_darwin(v14);
  v205 = (uint64_t)&v196 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v213 = (uint64_t)&v196 - v17;
  __chkstk_darwin(v18);
  v214 = (uint64_t)&v196 - v19;
  v219 = type metadata accessor for Playlist(0);
  v223 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v208 = (char *)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE30);
  __chkstk_darwin(v218);
  v227 = (char *)&v196 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
  __chkstk_darwin(v22);
  v211 = (uint64_t)&v196 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v221 = (uint64_t)&v196 - v25;
  __chkstk_darwin(v26);
  v222 = (uint64_t)&v196 - v27;
  v226 = type metadata accessor for Genre(0);
  v230 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v216 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE38);
  __chkstk_darwin(v225);
  v238 = (char *)&v196 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
  __chkstk_darwin(v30);
  v220 = (uint64_t)&v196 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v228 = (uint64_t)&v196 - v33;
  __chkstk_darwin(v34);
  v229 = (uint64_t)&v196 - v35;
  v233 = type metadata accessor for Composer(0);
  v235 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v224 = (char *)&v196 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE40);
  __chkstk_darwin(v232);
  v244 = (char *)&v196 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
  __chkstk_darwin(v38);
  v237 = (char *)&v196 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v234 = (uint64_t)&v196 - v41;
  __chkstk_darwin(v42);
  v243 = (char *)&v196 - v43;
  v242 = type metadata accessor for Artist(0);
  v247 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v231 = (char *)&v196 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE48);
  __chkstk_darwin(v239);
  v241 = (uint64_t)&v196 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
  __chkstk_darwin(v46);
  v248 = (char *)&v196 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v246 = (uint64_t)&v196 - v49;
  __chkstk_darwin(v50);
  v240 = (uint64_t)&v196 - v51;
  v52 = type metadata accessor for Album(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v236 = (char *)&v196 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFE50);
  __chkstk_darwin(v55);
  v57 = (char *)&v196 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
  __chkstk_darwin(v58);
  v245 = (uint64_t)&v196 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v196 - v61;
  __chkstk_darwin(v63);
  v65 = (char *)&v196 - v64;
  type metadata accessor for MusicLibrary(0);
  v66 = a1;
  if ((static MusicLibrary.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v67 = type metadata accessor for Library.Context(0);
  v68 = *(int *)(v67 + 20);
  v197 = v66;
  sub_5C238((uint64_t)v66 + v68, (uint64_t)v65, &qword_14FB108);
  v196 = (int *)v67;
  v69 = *(int *)(v67 + 20);
  v198 = a2;
  sub_5C238((uint64_t)a2 + v69, (uint64_t)v62, &qword_14FB108);
  v70 = (uint64_t)&v57[*(int *)(v55 + 48)];
  sub_5C238((uint64_t)v65, (uint64_t)v57, &qword_14FB108);
  sub_5C238((uint64_t)v62, v70, &qword_14FB108);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v71((uint64_t)v57, 1, v52) == 1)
  {
    sub_56024((uint64_t)v62, &qword_14FB108);
    sub_56024((uint64_t)v65, &qword_14FB108);
    v72 = v71(v70, 1, v52);
    v73 = (uint64_t)v248;
    if (v72 == 1)
    {
      sub_56024((uint64_t)v57, &qword_14FB108);
      goto LABEL_9;
    }
LABEL_7:
    v76 = &qword_14FFE50;
    v77 = (uint64_t)v57;
LABEL_50:
    sub_56024(v77, v76);
    return 0;
  }
  v74 = v245;
  sub_5C238((uint64_t)v57, v245, &qword_14FB108);
  v75 = v71(v70, 1, v52);
  v73 = (uint64_t)v248;
  if (v75 == 1)
  {
    sub_56024((uint64_t)v62, &qword_14FB108);
    sub_56024((uint64_t)v65, &qword_14FB108);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v74, v52);
    goto LABEL_7;
  }
  v78 = v236;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v236, v70, v52);
  v79 = sub_4DD24(&qword_14FFE88, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  v80 = dispatch thunk of static Equatable.== infix(_:_:)(v74, v78, v52, v79);
  v81 = *(void (**)(char *, uint64_t))(v53 + 8);
  v81(v78, v52);
  sub_56024((uint64_t)v62, &qword_14FB108);
  sub_56024((uint64_t)v65, &qword_14FB108);
  v81((char *)v74, v52);
  sub_56024((uint64_t)v57, &qword_14FB108);
  if ((v80 & 1) == 0)
    return 0;
LABEL_9:
  v82 = v196;
  v83 = v240;
  sub_5C238((uint64_t)v197 + v196[6], v240, &qword_14FC920);
  v84 = v246;
  sub_5C238((uint64_t)v198 + v82[6], v246, &qword_14FC920);
  v85 = v241;
  v86 = v241 + *(int *)(v239 + 48);
  sub_5C238(v83, v241, &qword_14FC920);
  sub_5C238(v84, v86, &qword_14FC920);
  v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v247 + 48);
  v88 = v242;
  if (v87(v85, 1, v242) == 1)
  {
    sub_56024(v84, &qword_14FC920);
    sub_56024(v83, &qword_14FC920);
    v89 = v87(v86, 1, v88);
    v90 = (uint64_t)v237;
    v91 = (uint64_t)v238;
    v93 = (uint64_t)v243;
    v92 = (uint64_t)v244;
    if (v89 == 1)
    {
      sub_56024(v85, &qword_14FC920);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  sub_5C238(v85, v73, &qword_14FC920);
  v94 = v87(v86, 1, v88);
  v93 = (uint64_t)v243;
  v92 = (uint64_t)v244;
  if (v94 == 1)
  {
    sub_56024(v246, &qword_14FC920);
    sub_56024(v83, &qword_14FC920);
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v73, v88);
LABEL_14:
    v76 = &qword_14FFE48;
    v77 = v85;
    goto LABEL_50;
  }
  v95 = v247;
  v96 = v83;
  v97 = v73;
  v98 = v231;
  (*(void (**)(char *, uint64_t, uint64_t))(v247 + 32))(v231, v86, v88);
  v99 = sub_4DD24(&qword_14FFE80, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  v100 = dispatch thunk of static Equatable.== infix(_:_:)(v97, v98, v88, v99);
  v101 = *(void (**)(char *, uint64_t))(v95 + 8);
  v101(v98, v88);
  sub_56024(v246, &qword_14FC920);
  sub_56024(v96, &qword_14FC920);
  v101((char *)v97, v88);
  v91 = (uint64_t)v238;
  sub_56024(v85, &qword_14FC920);
  v90 = (uint64_t)v237;
  if ((v100 & 1) == 0)
    return 0;
LABEL_16:
  v102 = v196;
  sub_5C238((uint64_t)v197 + v196[7], v93, &qword_14FFC98);
  v103 = v234;
  sub_5C238((uint64_t)v198 + v102[7], v234, &qword_14FFC98);
  v104 = v92 + *(int *)(v232 + 48);
  sub_5C238(v93, v92, &qword_14FFC98);
  sub_5C238(v103, v104, &qword_14FFC98);
  v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48);
  v106 = v233;
  if (v105(v92, 1, v233) == 1)
  {
    sub_56024(v103, &qword_14FFC98);
    sub_56024(v93, &qword_14FFC98);
    v92 = (uint64_t)v244;
    if (v105(v104, 1, v106) == 1)
    {
      sub_56024(v92, &qword_14FFC98);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  sub_5C238(v92, v90, &qword_14FFC98);
  if (v105(v104, 1, v106) == 1)
  {
    sub_56024(v234, &qword_14FFC98);
    sub_56024(v93, &qword_14FFC98);
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v90, v106);
LABEL_21:
    v76 = &qword_14FFE40;
    v77 = v92;
    goto LABEL_50;
  }
  v107 = v235;
  v108 = v224;
  (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v224, v104, v106);
  v109 = sub_4DD24(&qword_14FFE78, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  v110 = dispatch thunk of static Equatable.== infix(_:_:)(v90, v108, v106, v109);
  v111 = *(void (**)(char *, uint64_t))(v107 + 8);
  v111(v108, v106);
  sub_56024(v234, &qword_14FFC98);
  sub_56024(v93, &qword_14FFC98);
  v111((char *)v90, v106);
  sub_56024(v92, &qword_14FFC98);
  if ((v110 & 1) == 0)
    return 0;
LABEL_23:
  v112 = v196;
  v113 = v229;
  sub_5C238((uint64_t)v197 + v196[8], v229, &qword_14FFCA0);
  v114 = v228;
  sub_5C238((uint64_t)v198 + v112[8], v228, &qword_14FFCA0);
  v115 = v91 + *(int *)(v225 + 48);
  sub_5C238(v113, v91, &qword_14FFCA0);
  sub_5C238(v114, v115, &qword_14FFCA0);
  v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48);
  v117 = v226;
  if (v116(v91, 1, v226) == 1)
  {
    sub_56024(v114, &qword_14FFCA0);
    sub_56024(v113, &qword_14FFCA0);
    v118 = v116(v115, 1, v117);
    v119 = (uint64_t)v227;
    if (v118 == 1)
    {
      sub_56024(v91, &qword_14FFCA0);
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  v120 = v220;
  sub_5C238(v91, v220, &qword_14FFCA0);
  v121 = v116(v115, 1, v117);
  v119 = (uint64_t)v227;
  if (v121 == 1)
  {
    sub_56024(v228, &qword_14FFCA0);
    sub_56024(v229, &qword_14FFCA0);
    (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v120, v117);
LABEL_28:
    v76 = &qword_14FFE38;
    v77 = v91;
    goto LABEL_50;
  }
  v122 = v230;
  v123 = v216;
  (*(void (**)(char *, uint64_t, uint64_t))(v230 + 32))(v216, v115, v117);
  v124 = sub_4DD24(&qword_14FFE70, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
  v125 = dispatch thunk of static Equatable.== infix(_:_:)(v120, v123, v117, v124);
  v126 = *(void (**)(char *, uint64_t))(v122 + 8);
  v126(v123, v117);
  sub_56024(v228, &qword_14FFCA0);
  sub_56024(v229, &qword_14FFCA0);
  v126((char *)v120, v117);
  sub_56024(v91, &qword_14FFCA0);
  if ((v125 & 1) == 0)
    return 0;
LABEL_30:
  v127 = v196;
  v128 = v222;
  sub_5C238((uint64_t)v197 + v196[9], v222, &qword_14FE970);
  v129 = v221;
  sub_5C238((uint64_t)v198 + v127[9], v221, &qword_14FE970);
  v130 = v119 + *(int *)(v218 + 48);
  sub_5C238(v128, v119, &qword_14FE970);
  sub_5C238(v129, v130, &qword_14FE970);
  v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v223 + 48);
  v132 = v219;
  if (v131(v119, 1, v219) == 1)
  {
    sub_56024(v129, &qword_14FE970);
    v119 = (uint64_t)v227;
    sub_56024(v128, &qword_14FE970);
    if (v131(v130, 1, v132) == 1)
    {
      sub_56024(v119, &qword_14FE970);
      v133 = (uint64_t)v217;
      goto LABEL_37;
    }
    goto LABEL_35;
  }
  v134 = v211;
  sub_5C238(v119, v211, &qword_14FE970);
  v135 = v131(v130, 1, v132);
  v133 = (uint64_t)v217;
  if (v135 == 1)
  {
    sub_56024(v221, &qword_14FE970);
    sub_56024(v222, &qword_14FE970);
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v134, v132);
LABEL_35:
    v76 = &qword_14FFE30;
    v77 = v119;
    goto LABEL_50;
  }
  v136 = v223;
  v137 = v208;
  (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v208, v130, v132);
  v138 = sub_4DD24(&qword_14FFE68, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  v139 = dispatch thunk of static Equatable.== infix(_:_:)(v134, v137, v132, v138);
  v140 = *(void (**)(char *, uint64_t))(v136 + 8);
  v140(v137, v132);
  sub_56024(v221, &qword_14FE970);
  sub_56024(v222, &qword_14FE970);
  v140((char *)v134, v132);
  sub_56024(v119, &qword_14FE970);
  if ((v139 & 1) == 0)
    return 0;
LABEL_37:
  v141 = v196;
  v142 = v214;
  sub_5C238((uint64_t)v197 + v196[10], v214, &qword_14FCA98);
  v143 = (uint64_t)v198 + v141[10];
  v144 = v213;
  sub_5C238(v143, v213, &qword_14FCA98);
  v145 = v212;
  v146 = v212 + *(int *)(v209 + 48);
  sub_5C238(v142, v212, &qword_14FCA98);
  sub_5C238(v144, v146, &qword_14FCA98);
  v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
  v148 = v210;
  if (v147(v145, 1, v210) == 1)
  {
    sub_56024(v144, &qword_14FCA98);
    sub_56024(v142, &qword_14FCA98);
    v145 = v212;
    if (v147(v146, 1, v148) == 1)
    {
      sub_56024(v145, &qword_14FCA98);
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  v149 = v205;
  sub_5C238(v145, v205, &qword_14FCA98);
  if (v147(v146, 1, v148) == 1)
  {
    sub_56024(v213, &qword_14FCA98);
    sub_56024(v214, &qword_14FCA98);
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v149, v148);
LABEL_42:
    v76 = &qword_14FFE28;
    v77 = v145;
    goto LABEL_50;
  }
  v150 = v215;
  v151 = v201;
  (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v201, v146, v148);
  v152 = sub_4DD24(&qword_14FFE60, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v153 = v145;
  v154 = v148;
  v155 = dispatch thunk of static Equatable.== infix(_:_:)(v149, v151, v148, v152);
  v156 = *(void (**)(char *, uint64_t))(v150 + 8);
  v156(v151, v154);
  sub_56024(v213, &qword_14FCA98);
  sub_56024(v214, &qword_14FCA98);
  v156((char *)v149, v154);
  sub_56024(v153, &qword_14FCA98);
  if ((v155 & 1) == 0)
    return 0;
LABEL_44:
  v157 = v196;
  v158 = v206;
  sub_5C238((uint64_t)v197 + v196[11], v206, &qword_14FCA68);
  v159 = v203;
  sub_5C238((uint64_t)v198 + v157[11], v203, &qword_14FCA68);
  v160 = v133 + *(int *)(v202 + 48);
  sub_5C238(v158, v133, &qword_14FCA68);
  sub_5C238(v159, v160, &qword_14FCA68);
  v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
  v162 = v204;
  if (v161(v133, 1, v204) == 1)
  {
    sub_56024(v159, &qword_14FCA68);
    sub_56024(v158, &qword_14FCA68);
    if (v161(v160, 1, v162) == 1)
    {
      sub_56024(v133, &qword_14FCA68);
      goto LABEL_54;
    }
    goto LABEL_49;
  }
  v163 = v200;
  sub_5C238(v133, v200, &qword_14FCA68);
  if (v161(v160, 1, v162) == 1)
  {
    sub_56024(v159, &qword_14FCA68);
    sub_56024(v206, &qword_14FCA68);
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v163, v162);
LABEL_49:
    v76 = &qword_14FFE20;
    v77 = v133;
    goto LABEL_50;
  }
  v165 = v207;
  v166 = v199;
  (*(void (**)(char *, uint64_t, uint64_t))(v207 + 32))(v199, v160, v162);
  v167 = sub_4DD24(&qword_14FFE58, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v168 = dispatch thunk of static Equatable.== infix(_:_:)(v163, v166, v162, v167);
  v169 = *(void (**)(char *, uint64_t))(v165 + 8);
  v169(v166, v162);
  sub_56024(v159, &qword_14FCA68);
  sub_56024(v206, &qword_14FCA68);
  v169((char *)v163, v162);
  sub_56024(v133, &qword_14FCA68);
  if ((v168 & 1) == 0)
    return 0;
LABEL_54:
  v170 = v196;
  if (*((unsigned __int8 *)v197 + v196[12]) != *((unsigned __int8 *)v198 + v196[12]))
    return 0;
  v171 = v196[13];
  v172 = *((unsigned __int8 *)v197 + v171);
  v173 = *((unsigned __int8 *)v198 + v171);
  if (v172 == 2)
  {
    if (v173 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v174 = (v172 & 1) == 0;
    if (v173 == 2 || ((v174 ^ v173) & 1) == 0)
      return result;
  }
  v175 = v196[14];
  v176 = *((unsigned __int8 *)v197 + v175);
  v177 = *((unsigned __int8 *)v198 + v175);
  if (v176 == 3)
  {
    if (v177 != 3)
      return 0;
  }
  else
  {
    if (v177 == 3)
      return 0;
    v178 = 0xE900000000000073;
    v179 = 7105633;
    if (v176)
    {
      if (v176 == 1)
        v180 = 0x657469726F766166;
      else
        v180 = 0x64616F6C6E776F64;
      v181 = 0xE900000000000073;
    }
    else
    {
      v181 = 0xE300000000000000;
      v180 = 7105633;
    }
    if (v177)
    {
      if (v177 == 1)
        v179 = 0x657469726F766166;
      else
        v179 = 0x64616F6C6E776F64;
    }
    else
    {
      v178 = 0xE300000000000000;
    }
    if (v180 == v179 && v181 == v178)
    {
      swift_bridgeObjectRelease_n(v181, 2);
      v170 = v196;
    }
    else
    {
      v182 = _stringCompareWithSmolCheck(_:_:expecting:)(v180, v181, v179, v178, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      v170 = v196;
      if ((v182 & 1) == 0)
        return result;
    }
  }
  v183 = v170[15];
  v184 = (_QWORD *)((char *)v197 + v183);
  v185 = *(_QWORD *)((char *)v197 + v183 + 8);
  v186 = (_QWORD *)((char *)v198 + v183);
  v187 = v186[1];
  if (!v185)
  {
    v188 = v198;
    v189 = v197;
    v190 = v196;
    if (!v187)
      goto LABEL_86;
    return 0;
  }
  if (!v187)
    return 0;
  v188 = v198;
  v189 = v197;
  v190 = v196;
  if (*v184 == *v186 && v185 == v187
    || (v191 = _stringCompareWithSmolCheck(_:_:expecting:)(*v184, v185, *v186, v187, 0), result = 0, (v191 & 1) != 0))
  {
LABEL_86:
    if ((sub_C3EC84(*(_QWORD *)((char *)v189 + v190[16]), *(_QWORD *)((char *)v188 + v190[16])) & 1) != 0)
    {
      v192 = v196[17];
      v193 = *((unsigned __int8 *)v197 + v192);
      v194 = *((unsigned __int8 *)v198 + v192);
      if (v193 == 2)
      {
        if (v194 == 2)
          return 1;
      }
      else
      {
        v195 = (v193 & 1) == 0;
        if (v194 != 2 && ((v195 ^ v194) & 1) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t _s9MusicCore7LibraryO19ContentFilterOptionO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6C80, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t type metadata accessor for Library.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_14FFD68;
  if (!qword_14FFD68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Library.Context);
  return result;
}

uint64_t sub_CB4358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_CB439C()
{
  unint64_t result;

  result = qword_14FFCF0;
  if (!qword_14FFCF0)
  {
    result = swift_getWitnessTable("\r61", &_s17LibraryContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_14FFCF0);
  }
  return result;
}

uint64_t sub_CB43E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_CB441C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_CB439C();
  return EnvironmentValues.subscript.getter(a1, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v2);
}

unint64_t sub_CB4460()
{
  unint64_t result;

  result = qword_14FFCF8;
  if (!qword_14FFCF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_14FFCF8);
  }
  return result;
}

unint64_t sub_CB44A8()
{
  unint64_t result;

  result = qword_14FFD00;
  if (!qword_14FFD00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Context.SortOption, &type metadata for Library.Context.SortOption);
    atomic_store(result, (unint64_t *)&qword_14FFD00);
  }
  return result;
}

uint64_t sub_CB44EC()
{
  return sub_4DD24(&qword_14FFD08, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
}

ValueMetadata *type metadata accessor for Library()
{
  return &type metadata for Library;
}

uint64_t storeEnumTagSinglePayload for Library.ContentFilterOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_CB4574 + 4 * byte_10A0FD9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_CB45A8 + 4 * byte_10A0FD4[v4]))();
}

uint64_t sub_CB45A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CB45B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCB45B8);
  return result;
}

uint64_t sub_CB45C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCB45CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_CB45D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CB45D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.ContentFilterOption()
{
  return &type metadata for Library.ContentFilterOption;
}

_QWORD *initializeBufferWithCopyOfBuffer for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Album(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_retain();
    if (v13(v10, 1, v11, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)v7 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Artist(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = a3[7];
    v23 = (char *)v7 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for Composer(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = a3[8];
    v29 = (char *)v7 + v28;
    v30 = (char *)a2 + v28;
    v31 = type metadata accessor for Genre(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = a3[9];
    v35 = (char *)v7 + v34;
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for Playlist(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = a3[10];
    v41 = (char *)v7 + v40;
    v42 = (char *)a2 + v40;
    v43 = type metadata accessor for TVShow(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = a3[11];
    v47 = (char *)v7 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for TVSeason(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = a3[13];
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v7 + v52) = *((_BYTE *)a2 + v52);
    v53 = a3[15];
    *((_BYTE *)v7 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    v54 = (_QWORD *)((char *)v7 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = a3[17];
    *(_QWORD *)((char *)v7 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
    *((_BYTE *)v7 + v57) = *((_BYTE *)a2 + v57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for Library.Context(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (char *)a1 + a2[6];
  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  v10 = (char *)a1 + a2[7];
  v11 = type metadata accessor for Composer(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  v13 = (char *)a1 + a2[8];
  v14 = type metadata accessor for Genre(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v16 = (char *)a1 + a2[9];
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  v19 = (char *)a1 + a2[10];
  v20 = type metadata accessor for TVShow(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  v22 = (char *)a1 + a2[11];
  v23 = type metadata accessor for TVSeason(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[15] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[16]));
}

_QWORD *initializeWithCopy for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  v12 = swift_retain();
  if (v11(v8, 1, v9, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for Artist(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for Composer(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Genre(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for Playlist(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = a3[10];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = type metadata accessor for TVShow(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = a3[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for TVSeason(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  v51 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Composer(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_19:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_24:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_25:
  v42 = a3[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Playlist(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_30:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
LABEL_31:
  v51 = a3[10];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for TVShow(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_36:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_37:
  v60 = a3[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_42;
  }
  if (v67)
  {
LABEL_42:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_43:
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v69 = a3[15];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  return a1;
}

_QWORD *initializeWithTake for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for Composer(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Genre(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Playlist(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = a3[10];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for TVShow(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[11];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for TVSeason(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v48 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  v49 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v49) = *(_OWORD *)((char *)a2 + v49);
  v50 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  return a1;
}

_QWORD *assignWithTake for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_13:
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Composer(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_19:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_24:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
LABEL_25:
  v42 = a3[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Playlist(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_30:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v43, v44, v45);
LABEL_31:
  v51 = a3[10];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for TVShow(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_36:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_37:
  v60 = a3[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v61, v62, v63);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_42;
  }
  if (v67)
  {
LABEL_42:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_43:
  v69 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v69) = *((_BYTE *)a2 + v69);
  v70 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (_QWORD *)((char *)a2 + v70);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Library.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CB6158);
}

uint64_t sub_CB6158(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[8];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              v10 = v15;
              v11 = a3[9];
            }
            else
            {
              v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
              {
                v10 = v16;
                v11 = a3[10];
              }
              else
              {
                v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a3[11];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Library.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CB62D4);
}

char *sub_CB62D4(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB108);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC920);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFC98);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFCA0);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[8];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE970);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v15;
              v11 = a4[9];
            }
            else
            {
              v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA98);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == a3)
              {
                v10 = v16;
                v11 = a4[10];
              }
              else
              {
                v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA68);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a4[11];
              }
            }
          }
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_CB6440(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[14];

  v16[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_E835C(319, &qword_14FFD78, (uint64_t (*)(uint64_t))&type metadata accessor for Album);
  if (v3 <= 0x3F)
  {
    v16[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_E835C(319, &qword_14FFD80, (uint64_t (*)(uint64_t))&type metadata accessor for Artist);
    if (v5 <= 0x3F)
    {
      v16[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_E835C(319, &qword_14FFD88, (uint64_t (*)(uint64_t))&type metadata accessor for Composer);
      if (v7 <= 0x3F)
      {
        v16[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_E835C(319, &qword_14FFD90, (uint64_t (*)(uint64_t))&type metadata accessor for Genre);
        if (v9 <= 0x3F)
        {
          v16[4] = *(_QWORD *)(v8 - 8) + 64;
          sub_E835C(319, &qword_14FFD98, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist);
          if (v11 <= 0x3F)
          {
            v16[5] = *(_QWORD *)(v10 - 8) + 64;
            sub_E835C(319, &qword_14FFDA0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow);
            if (v13 <= 0x3F)
            {
              v16[6] = *(_QWORD *)(v12 - 8) + 64;
              sub_E835C(319, (unint64_t *)&unk_14FFDA8, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason);
              if (v15 <= 0x3F)
              {
                v16[7] = *(_QWORD *)(v14 - 8) + 64;
                v16[8] = &unk_10A1210;
                v16[9] = &unk_10A1228;
                v16[10] = &unk_10A1240;
                v16[11] = &unk_10A1258;
                v16[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
                v16[13] = &unk_10A1228;
                swift_initStructMetadata(a1, 256, 14, v16, a1 + 16);
              }
            }
          }
        }
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for Library.Context.SortOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_CB6654 + 4 * byte_10A0FE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_CB6688 + 4 * byte_10A0FDE[v4]))();
}

uint64_t sub_CB6688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CB6690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCB6698);
  return result;
}

uint64_t sub_CB66A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCB66ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_CB66B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CB66B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Context.SortOption()
{
  return &type metadata for Library.Context.SortOption;
}

uint64_t sub_CB66D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FFE08);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_CB6734();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_CB6734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FFE10;
  if (!qword_14FFE10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FFE08);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_14FFE10);
  }
  return result;
}

ValueMetadata *_s17LibraryContextKeyVMa()
{
  return &_s17LibraryContextKeyVN;
}

unint64_t sub_CB6790()
{
  unint64_t result;

  result = qword_14FFE18;
  if (!qword_14FFE18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_14FFE18);
  }
  return result;
}

void sub_CB67D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t i;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (char *)_swiftEmptyArrayStorage;
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v12 = *v11;
    v13 = (void *)v11[1];
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v12;
    v14._object = v13;
    v15 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4E40, v14);
    swift_bridgeObjectRelease();
    if (v15 <= 0xC)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_BCD418(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v19 = v8;
      v20 = *((_QWORD *)v8 + 2);
      v21 = v19;
      v22 = *((_QWORD *)v19 + 3);
      if (v20 >= v22 >> 1)
        v21 = sub_BCD418((char *)(v22 > 1), v20 + 1, 1, v21);
      *((_QWORD *)v21 + 2) = v20 + 1;
      v23 = &v21[v20];
      v8 = v21;
      v23[32] = v15;
      if (v5)
        goto LABEL_4;
    }
    else if (v5)
    {
      goto LABEL_4;
    }
LABEL_7:
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v6)
      goto LABEL_29;
    v17 = *(_QWORD *)(v2 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v6)
        goto LABEL_29;
      v17 = *(_QWORD *)(v2 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v6)
          goto LABEL_29;
        v17 = *(_QWORD *)(v2 + 8 * v7);
        if (!v17)
        {
          v7 = v16 + 3;
          if (v16 + 3 >= v6)
            goto LABEL_29;
          v17 = *(_QWORD *)(v2 + 8 * v7);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v6)
  {
LABEL_29:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v2 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v6)
      goto LABEL_29;
    v17 = *(_QWORD *)(v2 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_CB69F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  char v17;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v17 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v12);
    sub_CBB958((uint64_t)&v17, a2);
    if (v2)
      goto LABEL_24;
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_17:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_5;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v9)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v5 + 8 * v16);
  v10 += 4;
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v9)
      goto LABEL_24;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v14)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

Swift::Int sub_CB6B60(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    Hasher.init(_seed:)(v21);
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == (_DWORD)v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == (_DWORD)v16)
      goto LABEL_7;
  }
}

uint64_t sub_CB6D40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[10];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v16 = (unint64_t)(v3 + 63) >> 6;
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      goto LABEL_21;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_20;
      v8 = 2;
      if ((unint64_t)(v3 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_20;
      v8 = 3;
      if ((unint64_t)(v3 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
      {
LABEL_20:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_21:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17);
        v11 = Library.Menu.Identifier.rawValue.getter(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 4;
      if (v16 > 4)
      {
        v7 = *(_QWORD *)(a1 + 88);
        if (v7)
        {
          v8 = 4;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0xCB71E8);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_20;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_CB7250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[9];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v16 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_23;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_22;
      v8 = 2;
      if (v16 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_22;
      v8 = 3;
      if (v16 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_22;
      v8 = 4;
      if (v16 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_22:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_23:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17);
        v11 = ApplicationCapabilities.Service.rawValue.getter(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 5;
      if (v16 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0xCB7774);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_22;
        }
      }
    }
  }
  return 1;
}

BOOL Library.Menu.selectionState(for:)(unsigned __int8 a1)
{
  uint64_t v1;

  return (sub_C52748(a1, *(_QWORD *)(v1 + 40)) & 1) == 0;
}

uint64_t Library.Menu.setSelectionState(_:for:)(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unsigned __int8 v4;

  v2 = a1 & 1;
  if ((a1 & 1) != 0)
    sub_C7A238(a2);
  else
    sub_CBD494(&v4, a2);
  return v2;
}

void Library.Menu.move(_:to:)(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  int64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_C7D4B4(a1, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  if ((v9 & 1) != 0)
  {
    v18 = v3[2];
    v19 = v3[3];
    v10 = v3[4];
    v20 = v3[5];
    v21 = sub_CC3594();
    swift_allocError(&_s4MenuV9MoveErrorVN, v21, 0, 0);
    *(_QWORD *)v22 = v18;
LABEL_14:
    *(_QWORD *)(v22 + 8) = v19;
    *(_QWORD *)(v22 + 16) = v10;
    *(_QWORD *)(v22 + 24) = v20;
    *(_BYTE *)(v22 + 32) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = swift_bridgeObjectRetain();
    swift_willThrow(v25);
    return;
  }
  v10 = v3[4];
  swift_bridgeObjectRetain();
  v26 = sub_C7D4B4(a1, v10);
  v12 = v11;
  swift_bridgeObjectRelease(v10);
  if ((v12 & 1) != 0)
  {
    v23 = v3[2];
    v19 = v3[3];
LABEL_13:
    v20 = v3[5];
    v24 = sub_CC3594();
    swift_allocError(&_s4MenuV9MoveErrorVN, v24, 0, 0);
    *(_QWORD *)v22 = v23;
    goto LABEL_14;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(v6 + 16) <= a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  a1 = *(unsigned __int8 *)(v6 + a2 + 32);
  swift_bridgeObjectRetain();
  v13 = sub_C7D4B4(a1, v10);
  v15 = v14;
  swift_bridgeObjectRelease(v10);
  if ((v15 & 1) != 0)
  {
    v23 = v3[2];
    v19 = v3[3];
    LOBYTE(a1) = a1 | 0x80;
    goto LABEL_13;
  }
  v16 = sub_C85850(v7);
  if (*(_QWORD *)(*v3 + 16) < a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_BCEA38((char *)a2, a2, v16);
  v17 = sub_C85850(v26);
  if (*(_QWORD *)(v3[4] + 16) >= v13)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      sub_BCEA38((char *)v13, v13, v17);
      return;
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
}

Swift::Void __swiftcall Library.Menu.persist()()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = (_QWORD *)v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSUserDefaults.libraryMenuRevision.setter(v1, v2, v3, v4);
}

uint64_t NSUserDefaults.libraryMenuRevision.setter(uint64_t a1, unint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v8 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = JSONEncoder.init()();
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v10 = sub_CC35D8();
  v11 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v17, &type metadata for Library.Menu.Revision, v10);
  v13 = v12;
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  swift_release(v9);
  v20 = &type metadata for Data;
  v17 = v11;
  v18 = v13;
  v16[0] = 0x4D7972617262694CLL;
  v16[1] = 0xEB00000000756E65;
  sub_50CB4(v11, v13);
  v14 = sub_B9DEC0();
  NSUserDefaults.subscript.setter((uint64_t)&v17, (uint64_t)v16, (uint64_t)&type metadata for String, v14);
  return sub_50C60(v11, v13);
}

char *Library.Menu.Request.label.unsafeMutableAddressor()
{
  return static Library.Menu.Request.label;
}

uint64_t static Library.Menu.Request.label.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(static Library.Menu.Request.label, v2, 0, 0);
  v0 = *(_QWORD *)static Library.Menu.Request.label;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Library.Menu.Request.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(static Library.Menu.Request.label, v6, 1, 0);
  v4 = *(_QWORD *)&static Library.Menu.Request.label[8];
  *(_QWORD *)static Library.Menu.Request.label = a1;
  *(_QWORD *)&static Library.Menu.Request.label[8] = a2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*static Library.Menu.Request.label.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static Library.Menu.Request.label, a1, 33, 0);
  return j__swift_endAccess;
}

id Library.Menu.Request.init()@<X0>(uint64_t a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = &_swiftEmptySetSingleton;
    *(_WORD *)(a1 + 40) = 257;
    *(_BYTE *)(a1 + 42) = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static Library.Menu.Request.with(_:)@<X0>(uint64_t (*a1)(id *)@<X0>, uint64_t a2@<X8>)
{
  id result;
  char v5;
  void *v6;
  char v7;
  char v8;
  char v9;
  __int128 v10;
  id v11;
  char v12;
  __int128 v13;
  void *v14;
  __int16 v15;
  char v16;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    v11 = result;
    v12 = 0;
    v13 = 0uLL;
    v14 = &_swiftEmptySetSingleton;
    v15 = 257;
    v16 = 1;
    result = (id)a1(&v11);
    v5 = v12;
    v6 = v14;
    v7 = v15;
    v8 = HIBYTE(v15);
    v9 = v16;
    v10 = v13;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 32) = v6;
    *(_BYTE *)(a2 + 40) = v7;
    *(_BYTE *)(a2 + 41) = v8;
    *(_BYTE *)(a2 + 42) = v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Library.Menu.Request.MediaLibrarySource.__derived_enum_equals(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return sub_CC460C(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_CB7FC4(uint64_t a1, uint64_t a2)
{
  return sub_CC460C(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

void *Library.Menu.Request.librarySource.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)v0;
  sub_94F08(*(void **)v0, *(_BYTE *)(v0 + 8));
  return v1;
}

void Library.Menu.Request.librarySource.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_94EAC(*(void **)v2, *(_BYTE *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = a2 & 1;
}

uint64_t Library.Menu.Request.filteringOptions.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t Library.Menu.Request.excludedIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t Library.Menu.Request.filtersToSelectedIdentifiers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t Library.Menu.Request.filtersToSelectedIdentifiers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = result;
  return result;
}

double (*Library.Menu.Request.filtersToSelectedIdentifiers.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Menu.Request.sortedByUserOrderedIdentifiers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t Library.Menu.Request.sortedByUserOrderedIdentifiers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 42) = result;
  return result;
}

double (*Library.Menu.Request.sortedByUserOrderedIdentifiers.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double Library.Menu.Request.perform(_:_:)@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>, double a4@<D0>)
{
  void **v4;
  void **v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char v22;
  char v23;
  void *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t *v48;
  double result;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  _QWORD *v60;
  _QWORD aBlock[5];
  uint64_t v62;

  v5 = v4;
  v52 = a1;
  v53 = a2;
  v7 = type metadata accessor for DispatchQoS.QoSClass(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  LOBYTE(v12) = *((_BYTE *)v5 + 8);
  v58 = v7;
  v59 = a3;
  v56 = v10;
  v57 = v8;
  v54 = v15;
  v55 = v13;
  if ((v12 & 1) != 0)
  {
    v16 = swift_retain(v14);
    v17 = (id)MusicLibrary.mediaLibrary.getter(v16);
    sub_94EAC(v14, 1);
  }
  else
  {
    v17 = v14;
  }
  v18 = v5[2];
  v19 = swift_allocObject(&unk_13B48D0, 17, 7);
  v21 = v5[3];
  v20 = v5[4];
  *(_BYTE *)(v19 + 16) = v21 != 0;
  v22 = *((_BYTE *)v5 + 40);
  v23 = *((_BYTE *)v5 + 41);
  v24 = (void *)objc_opt_self(NSUserDefaults);
  v51 = v21;
  swift_bridgeObjectRetain();
  v25 = objc_msgSend(v24, "standardUserDefaults");
  v26 = (_QWORD *)swift_allocObject(&unk_13B48F8, 48, 7);
  v27 = NSUserDefaults.libraryMenuRevision.getter();
  v26[2] = v27;
  v26[3] = v29;
  v26[4] = v28;
  v26[5] = v30;
  if ((*((_BYTE *)v5 + 42) & 1) != 0)
    v31 = v28;
  else
    v31 = v27;
  swift_bridgeObjectRetain();
  v32 = swift_allocObject(&unk_13B4920, 104, 7);
  *(_QWORD *)(v32 + 16) = v26;
  *(_QWORD *)(v32 + 24) = v25;
  *(_QWORD *)(v32 + 32) = v21;
  *(_QWORD *)(v32 + 40) = v31;
  *(_QWORD *)(v32 + 48) = v17;
  *(_QWORD *)(v32 + 56) = v18;
  *(_QWORD *)(v32 + 64) = v20;
  *(_BYTE *)(v32 + 72) = v23;
  *(_BYTE *)(v32 + 73) = v22;
  v33 = v52;
  v34 = v53;
  *(_QWORD *)(v32 + 80) = v19;
  *(_QWORD *)(v32 + 88) = v33;
  *(_QWORD *)(v32 + 96) = v34;
  aBlock[4] = sub_CC478C;
  v62 = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_301;
  v35 = _Block_copy(aBlock);
  v60 = _swiftEmptyArrayStorage;
  v36 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v52 = v51;
  swift_retain(v26);
  v37 = v25;
  v38 = v17;
  swift_retain(v19);
  swift_retain(v34);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v40 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
  v41 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v60, v39, v40, v54, v36);
  v42 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v42, *(unsigned int *)(v42 + 48), *(unsigned __int16 *)(v42 + 52));
  v43 = DispatchWorkItem.init(flags:block:)(v41, v35);
  swift_release(v62);
  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v45 = v56;
  v44 = v57;
  v46 = v58;
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for DispatchQoS.QoSClass.userInteractive(_:), v58);
  v47 = (void *)static OS_dispatch_queue.global(qos:)(v45);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  OS_dispatch_queue.async(execute:)(v43);

  v48 = v59;
  v59[3] = v42;
  v48[4] = (uint64_t)&protocol witness table for DispatchWorkItem;

  *v48 = v43;
  swift_release(v19);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t NSUserDefaults.libraryMenuRevision.getter()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[5];

  sub_CBC21C();
  v14 = 0x4D7972617262694CLL;
  v15 = 0xEB00000000756E65;
  v0 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&v14, (uint64_t)&type metadata for String, v0, (uint64_t)v16);
  if (v16[3])
  {
    if ((swift_dynamicCast(&v14, v16, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
    {
      v1 = v14;
      v2 = v15;
      v3 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
      v4 = JSONDecoder.init()();
      v5 = sub_CC47EC();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for Library.Menu.Revision, v1, v2, &type metadata for Library.Menu.Revision, v5);
      sub_50C60(v1, v2);
      swift_release(v4);
      return v16[0];
    }
  }
  else
  {
    sub_C261DC((uint64_t)v16);
  }
  if (qword_14F9F20 != -1)
    swift_once(&qword_14F9F20, sub_CBC814);
  v6 = type metadata accessor for Logger(0);
  v7 = __swift_project_value_buffer(v6, (uint64_t)static Logger.libraryMenu);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "No edits found — Returning stock menu revision", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  if (qword_14F9F18 != -1)
    swift_once(&qword_14F9F18, sub_CBC1EC);
  v11 = qword_14FFEA0;
  v12 = *(_QWORD *)algn_14FFEA8;
  swift_bridgeObjectRetain_n(qword_14FFEA0, 2);
  swift_bridgeObjectRetain_n(v12, 2);
  return v11;
}

void sub_CB888C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  id v41;
  _BYTE v45[24];
  uint64_t v46;

  v8 = (uint64_t)(a1 + 2);
  if (qword_14F9F18 != -1)
    goto LABEL_69;
  while (1)
  {
    v10 = qword_14FFEA0;
    v9 = *(_QWORD *)algn_14FFEA8;
    swift_beginAccess(v8, &v46, 33, 0);
    v11 = a1[3];
    if ((sub_C3ECA0(a1[2], v10) & 1) != 0 && (sub_CB6D40(v11, v9) & 1) != 0)
    {
      swift_endAccess(&v46);
    }
    else
    {
      sub_CBA97C(v10, v9);
      swift_endAccess(&v46);
      swift_beginAccess(v8, v45, 0, 0);
      v12 = a1[2];
      v13 = a1[3];
      v8 = a1[4];
      v14 = (_QWORD *)a1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSUserDefaults.libraryMenuRevision.setter(v12, v13, v8, v14);
    }
    if (a3)
      break;
    v28 = *(_QWORD *)(a4 + 16);
    if (!v28)
    {
      v30 = 0;
      goto LABEL_65;
    }
    v29 = 0;
    v30 = 0;
    v31 = v28 - 1;
    while (2)
    {
      switch(*(_BYTE *)(a4 + 32 + v29))
      {
        case 0:
          v30 |= 0x41uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 1:
          v30 |= 0xC0uLL;
          goto LABEL_13;
        case 2:
          v30 |= 2uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 3:
          v30 |= 1uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 4:
          v30 |= 0x80uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 5:
          v30 |= 0x400uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 6:
          v30 |= 0x20uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 7:
          v30 |= 0x10uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 8:
          v30 |= 4uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 9:
          v30 |= 8uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 0xA:
          v30 |= 0x300uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        default:
LABEL_13:
          if (v31 == v29)
            goto LABEL_65;
LABEL_14:
          if (!__OFADD__(++v29, 1))
            continue;
          __break(1u);
          break;
      }
      break;
    }
LABEL_69:
    swift_once(&qword_14F9F18, sub_CBC1EC);
  }
  v15 = (void *)objc_opt_self(NSBundle);
  v16 = a3;
  v17 = objc_msgSend(v15, "mainBundle");
  v18 = NSBundle.exportedTypeDeclarations.getter();

  if (v18)
  {
    v19 = objc_msgSend(v16, "typeIdentifiers");
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String);

    v21 = *(_QWORD *)(v20 + 16);
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
    if (v21)
    {
      v23 = objc_msgSend(v16, "typeIdentifiers", v22);
      v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String);

      swift_bridgeObjectRetain();
      v25 = sub_C76B20(v24, v18);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease_n(v18, 2);
      sub_C766BC((uint64_t)v25);
      v27 = v26;
      swift_bridgeObjectRelease(v25);
LABEL_39:
      v41 = v16;
      v32 = *((_QWORD *)v27 + 2);
      v30 = 0;
      if (!v32)
      {
LABEL_60:
        if (objc_msgSend(v41, "selectionMode", swift_bridgeObjectRelease(v27).n128_f64[0]) == (char *)&dword_0 + 2)
        {

        }
        else
        {
          v37 = (char *)objc_msgSend(v41, "selectionMode");

          if (v37 != (_BYTE *)&dword_0 + 3)
            goto LABEL_65;
        }
        v30 &= 0xFFFFFFFFFFFFFC5FLL;
LABEL_65:
        objc_msgSend(a5, "filterAvailableContentGroups:withOptions:", v30, a6);
        if (qword_14F9D68 != -1)
          swift_once(&qword_14F9D68, sub_C3FD38);
        v38 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_10A1848);
        v40 = swift_getKeyPath(&unk_10A1870);
        static Published.subscript.getter(&v46, v38, KeyPath, v40);
        swift_release(KeyPath);
        swift_release(v40);
        __asm { BR              X10 }
      }
      v33 = v27 + 40;
      while (1)
      {
        v34 = *(v33 - 1);
        v35 = *v33;
        if (v34 == 0xD000000000000014 && v35 == 0x80000000010CDDA0
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000000010CDDA0, *(v33 - 1), *v33, 0) & 1) != 0)
        {
          v36 = 1247;
        }
        else if (v34 == 0xD00000000000001BLL && v35 == 0x8000000001106790
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000001106790, v34, v35, 0) & 1) != 0)
        {
          v36 = 32;
        }
        else if (v34 == 0xD00000000000001ALL && v35 == 0x8000000001107490
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x8000000001107490, v34, v35, 0) & 1) != 0)
        {
          v36 = 256;
        }
        else
        {
          if ((v34 != 0xD000000000000015 || v35 != 0x80000000010CDD40)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000000010CDD40, v34, v35, 0) & 1) == 0)
          {
            goto LABEL_46;
          }
          v36 = 512;
        }
        v30 |= v36;
LABEL_46:
        v33 += 2;
        if (!--v32)
          goto LABEL_60;
      }
    }
    if (objc_msgSend(v16, "mediaTypes", swift_bridgeObjectRelease(v18).n128_f64[0]))
    {
      v27 = sub_C71688((__int16)objc_msgSend(v16, "mediaTypes"));
      goto LABEL_39;
    }
  }
  v27 = (char *)_swiftEmptyArrayStorage;
  goto LABEL_39;
}

uint64_t Logger.libraryMenu.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9F20 != -1)
    swift_once(&qword_14F9F20, sub_CBC814);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.libraryMenu);
}

uint64_t Library.Menu.Identifier.contentGroups.getter(unsigned __int8 a1)
{
  if (a1 > 0xAu)
    return 0;
  else
    return qword_10A1AB0[(char)a1];
}

double sub_CB96F0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double v7;
  double result;

  v6 = swift_allocObject(&unk_13B4EE8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)&v7 = swift_retain().n128_u64[0];
  Library.Menu.Request.perform(_:_:)(sub_CC76DC, v6, a3, v7);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_CB9760(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 11) = *(__int128 *)((char *)a1 + 27);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 11) = *(__int128 *)((char *)a2 + 27);
  return _s9MusicCore7LibraryO4MenuV7RequestV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t Library.Menu.Identifier.symbolName(for:)(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_CB97E8 + 4 * byte_10A12D0[a2]))(0x732E657261757173, 0xEC0000006B636174);
}

uint64_t sub_CB97E8()
{
  return 0x6B636F6C63;
}

uint64_t sub_CB97FC@<X0>(char a1@<W8>)
{
  if (a1 == 2)
    return 0x6F6E2E636973756DLL;
  else
    return 0x672E657261757173;
}

uint64_t sub_CB9850()
{
  return 0x696D2E636973756DLL;
}

uint64_t sub_CB986C()
{
  return 0x6F6E2E636973756DLL;
}

uint64_t sub_CB98B4()
{
  return 0x73726174697567;
}

unint64_t sub_CB98CC()
{
  return 0xD00000000000001ALL;
}

void sub_CB98E4()
{
  JUMPOUT(0xCB98F8);
}

uint64_t sub_CB9904()
{
  return 30324;
}

unint64_t sub_CB9910()
{
  return 0xD000000000000011;
}

unint64_t sub_CB992C()
{
  unint64_t v0;

  v0 = sub_C17354();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v0) & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000016;
}

void Library.Menu.Identifier.name(for:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __asm { BR              X10 }
}

uint64_t sub_CB9A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (v5 != 2 && (v5 & 1) != 0)
  {
    v7 = 0x80000000010D5720;
    v6 = 0xD000000000000013;
  }
  else
  {
    v6 = 0x796C746E65636552;
    v7 = 0xEE00646564644120;
  }
  String.LocalizationValue.init(stringLiteral:)(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v8 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v9 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v8, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v9;
}

uint64_t Library.Menu.Identifier.description.getter(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v1 = Library.Menu.Identifier.rawValue.getter(a1);
  v3 = v2;
  v8[2] = v1;
  v8[3] = v2;
  v8[0] = 46;
  v8[1] = 0xE100000000000000;
  v4 = sub_B9DEC0();
  v5 = StringProtocol.components<A>(separatedBy:)(v8, &type metadata for String, &type metadata for String, v4, v4);
  swift_bridgeObjectRelease(v3);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v1 = *(_QWORD *)(v5 + 16 * v6 + 16);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease(v5);
  return v1;
}

uint64_t Library.Menu.Identifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_CB9DE4 + 4 * byte_10A12EA[a1]))(0xD000000000000029, 0x80000000010C2760);
}

uint64_t sub_CB9DE4()
{
  uint64_t v0;

  return v0 + 4;
}

_UNKNOWN **static Library.Menu.Identifier.allCases.getter()
{
  return &off_13A6CE8;
}

uint64_t sub_CB9EC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = Library.Menu.Identifier.rawValue.getter(*a1);
  v5 = v4;
  v6 = Library.Menu.Identifier.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_CB9F4C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = Library.Menu.Identifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_CB9FAC(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = Library.Menu.Identifier.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_CB9FEC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = Library.Menu.Identifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_CBA048@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO4MenuV10IdentifierO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_CBA074@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = Library.Menu.Identifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_CBA09C(_QWORD *a1@<X8>)
{
  *a1 = &off_13A6CE8;
}

uint64_t sub_CBA0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_CC7674();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_CBA108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_CC7674();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_CBA154()
{
  unsigned __int8 *v0;

  return Library.Menu.Identifier.description.getter(*v0);
}

char *Library.Menu.Revision.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  char *result;
  uint64_t v3;

  result = sub_CC5DF4(a1);
  if (v1)
    return (char *)v3;
  return result;
}

uint64_t Library.Menu.Revision.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;

  v24 = a3;
  v25 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFEC8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_CC6318();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV10CodingKeysON, &_s4MenuV8RevisionV10CodingKeysON, v15, v14, v13);
  v26[0] = a4;
  v27 = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFED8);
  v17 = sub_1F6F44(&qword_14FFEE0, &qword_14FFED8, (void (*)(void))sub_CC635C, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, v16, v17);
  if (!v5)
  {
    v18 = a2;
    v19 = v24;
    v26[0] = v25;
    v27 = 0;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFEF0);
    v21 = sub_1F6F44(&qword_14FFEF8, &qword_14FFEF0, (void (*)(void))sub_CC635C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, v20, v21);
    v26[0] = v18;
    v26[1] = v19;
    v27 = 2;
    v22 = sub_CC63A0();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, &_s4MenuV8RevisionV7VersionVN, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_CBA36C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFF70);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_CC72D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV7VersionV10CodingKeysON, &_s4MenuV8RevisionV7VersionV10CodingKeysON, v13, v11, v12);
  v21 = a2;
  v20 = 0;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFED8);
  v15 = sub_1F6F44(&qword_14FFEE0, &qword_14FFED8, (void (*)(void))sub_CC635C, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, v14, v15);
  if (!v3)
  {
    v21 = a3;
    v20 = 1;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFEF0);
    v17 = sub_1F6F44(&qword_14FFEF8, &qword_14FFEF0, (void (*)(void))sub_CC635C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_CBA50C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_BB78C4(*a1, *a2);
}

Swift::Int sub_CBA518()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_CBA5B0(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (*v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_CBA624()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_CBA6B8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_CC7288(*a1);
  *a2 = result;
  return result;
}

void sub_CBA6E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE300000000000000;
  v5 = 7105633;
  if (v2 != 1)
  {
    v5 = 0x6E6F6973726576;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64657463656C6573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_CBA73C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7105633;
  if (*v0 != 1)
    v1 = 0x6E6F6973726576;
  if (*v0)
    return v1;
  else
    return 0x64657463656C6573;
}

unint64_t sub_CBA790@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_CC7288(a1);
  *a2 = result;
  return result;
}

uint64_t sub_CBA7B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_CC6318();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_CBA7DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_CC6318();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_CBA804()
{
  _BYTE *v0;

  if (*v0)
    return 0x64657463656C6573;
  else
    return 0x696669746E656469;
}

uint64_t sub_CBA848@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_CC7314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_CBA86C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_CC72D0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_CBA894(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_CC72D0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_CBA8BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_CC741C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_CBA8E4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_CBA36C(a1, *v1, v1[1]);
}

uint64_t sub_CBA8FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_C3ECA0(*a1, *a2) & 1) != 0)
    return sub_CB6D40(v2, v3);
  else
    return 0;
}

uint64_t MPCPlaybackEngine.Configuration.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MPCPlaybackEngine.Configuration.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t Library.Menu.Revision.selected.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_CBA97C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  v5 = (_QWORD *)*v2;
  v6 = v2[1];
  v7 = qword_14F9F20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once(&qword_14F9F20, sub_CBC814);
  v8 = type metadata accessor for Logger(0);
  v63 = __swift_project_value_buffer(v8, (uint64_t)static Logger.libraryMenu);
  v9 = Logger.logObject.getter(v63);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "╭ ⏩ Begin Migration", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v62 = v2;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v68 = v16;
    *(_DWORD *)v15 = 136315138;
    v66 = v5;
    v67 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = (char *)String.init<A>(describing:)(&v66, &_s4MenuV8RevisionV7VersionVN);
    v18 = a2;
    v20 = v19;
    *(_QWORD *)(v15 + 4) = sub_BA95EC(v17, v19, &v68);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease_n(v5, 2);
    v21 = v20;
    a2 = v18;
    swift_bridgeObjectRelease(v21);
    _os_log_impl(&dword_0, v13, v14, "╞< %s", (uint8_t *)v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    v22 = v15;
    v3 = v62;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  swift_bridgeObjectRetain_n(a1, 2);
  v23 = swift_bridgeObjectRetain_n(a2, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v68 = v27;
    *(_DWORD *)v26 = 136315138;
    v66 = (_QWORD *)a1;
    v67 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = (char *)String.init<A>(describing:)(&v66, &_s4MenuV8RevisionV7VersionVN);
    v29 = a2;
    v31 = v30;
    *(_QWORD *)(v26 + 4) = sub_BA95EC(v28, v30, &v68);
    swift_bridgeObjectRelease_n(v29, 2);
    swift_bridgeObjectRelease_n(a1, 2);
    v32 = v31;
    a2 = v29;
    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v24, v25, "╞> %s", (uint8_t *)v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  v33 = v3[2];
  v34 = swift_bridgeObjectRetain();
  v35 = sub_C7B024(v34);
  swift_bridgeObjectRelease(v33);
  v36 = swift_bridgeObjectRetain();
  v37 = sub_C7B024(v36);
  swift_bridgeObjectRelease(a1);
  if (*(_QWORD *)(v37 + 16) <= *(_QWORD *)(v35 + 16) >> 3)
  {
    v66 = (_QWORD *)v35;
    swift_bridgeObjectRetain();
    sub_CC361C(v37);
    v38 = v66;
  }
  else
  {
    swift_bridgeObjectRetain();
    v38 = sub_CC377C(v37, v35);
  }
  if (*(_QWORD *)(v35 + 16) <= *(_QWORD *)(v37 + 16) >> 3)
  {
    v66 = (_QWORD *)v37;
    sub_CC361C(v35);
    v39 = v66;
  }
  else
  {
    v39 = sub_CC377C(v35, v37);
  }
  v68 = v33;
  v40 = *(_QWORD *)(v33 + 16);
  v41 = *(_QWORD *)(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v35);
  if (v40 != v41)
  {
    v42 = *(_QWORD *)(v33 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v42; ++i)
      {
        v44 = *(_BYTE *)(v33 + i + 32);
        LOBYTE(v66) = v44;
        sub_CBB3A4((unsigned __int8 *)&v66, &v68);
      }
      swift_bridgeObjectRelease(v33);
    }
  }
  sub_CB69F0((uint64_t)v38, &v68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_CC53DC((uint64_t)v39, a1, &v68);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  v45 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(&v68, &v66, 0, 0);
  v46 = v68;
  if (v45 == *(_QWORD *)(v68 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v33);
    v62[2] = v46;
    v47 = v62[3];
    if (v38[2] <= *(_QWORD *)(v47 + 16) >> 3)
    {
      v65 = (void *)v62[3];
      swift_bridgeObjectRetain();
      sub_CC361C((uint64_t)v38);
      swift_bridgeObjectRelease(v38);
      v48 = v65;
    }
    else
    {
      swift_bridgeObjectRetain();
      v48 = sub_CC377C((uint64_t)v38, v47);
      swift_bridgeObjectRelease(v38);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = a2;
    v60 = sub_CC56F4((uint64_t)v39, a1, a2);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(a1);
    v61 = sub_CBC04C(v60, (uint64_t)v48);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v47);
    v62[3] = v61;
    v56 = v62;
    v57 = a1;
    v58 = v59;
  }
  else
  {
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v38);
    v49 = a2;
    v50 = *v62;
    v51 = v62[1];
    v52 = v62[3];
    v53 = sub_CC78C0();
    swift_allocError(&_s4MenuV8RevisionV16MigrationFailureON, v53, 0, 0);
    *v54 = v50;
    v54[1] = v51;
    v54[2] = v33;
    v54[3] = v52;
    v54[4] = a1;
    v54[5] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55 = swift_bridgeObjectRetain();
    swift_willThrow(v55);
    swift_bridgeObjectRelease(v68);
    v56 = v62;
    v57 = a1;
    v58 = v49;
  }
  sub_CBB040(v56, v57, v58);
}

void sub_CBB040(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  v7 = a1[2];
  v6 = a1[3];
  v8 = qword_14F9F20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once(&qword_14F9F20, sub_CBC814);
  v9 = type metadata accessor for Logger(0);
  v10 = __swift_project_value_buffer(v9, (uint64_t)static Logger.libraryMenu);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "╞ ✅ Migration ended with", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = swift_bridgeObjectRetain();
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v33 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = swift_bridgeObjectRetain();
    v20 = (char *)Array.description.getter(v19, &type metadata for Library.Menu.Identifier);
    v22 = v21;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v17 + 4) = sub_BA95EC(v20, v22, &v33);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl(&dword_0, v15, v16, "╞  - Ordered: %{public}s)", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  v23 = swift_bridgeObjectRetain();
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v33 = v27;
    *(_DWORD *)v26 = 136446210;
    v28 = sub_C7B094();
    v29 = swift_bridgeObjectRetain();
    v30 = (char *)Set.description.getter(v29, &type metadata for Library.Menu.Identifier, v28);
    v32 = v31;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v26 + 4) = sub_BA95EC(v30, v32, &v33);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v24, v25, "╞  - Selected: %{public}s)", (uint8_t *)v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v6, 2);
  }
}

void sub_CBB3A4(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[32];

  v3 = *a1;
  swift_beginAccess(a2, v12, 0, 0);
  swift_beginAccess(a2, v11, 0, 0);
  swift_beginAccess(a2, v10, 0, 0);
  swift_beginAccess(a2, v9, 1, 0);
  v4 = *a2;
  swift_bridgeObjectRetain();
  sub_C7D4B4(v3, v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  if ((v6 & 1) == 0)
  {
    v7 = *a2;
    v8 = *(_QWORD *)(*a2 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      if (v8 <= *(_QWORD *)(v7 + 16))
        __asm { BR              X9 }
      __break(1u);
      JUMPOUT(0xCBB8ECLL);
    }
  }
}

uint64_t sub_CBB958(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _BYTE v5[24];
  uint64_t *v6;

  swift_beginAccess(a2, v5, 33, 0);
  v6 = a2;
  v3 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  sub_BCEB48(0, 0);
  return swift_endAccess(v5);
}

uint64_t sub_CBC04C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unsigned __int8 v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_CBD494(&v14, *(_BYTE *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_CBC1A4@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;
  char *v5;
  char *v6;
  char *v7;

  result = sub_CC5DF4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_CBC1D0(_QWORD *a1)
{
  uint64_t *v1;

  return Library.Menu.Revision.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

void *sub_CBC1EC()
{
  void *result;

  result = sub_C5F590((uint64_t)&off_13A6D18);
  qword_14FFEA0 = (uint64_t)&off_13A6CE8;
  *(_QWORD *)algn_14FFEA8 = result;
  return result;
}

void sub_CBC21C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;

  LOBYTE(v26[0]) = 0;
  v1 = sub_CC787C();
  v2 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&_s9LegacyKeyON, v1, v2, (uint64_t)&v27);
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_8;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  if ((swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return;
  v4 = v26[0];
  LOBYTE(v26[0]) = 1;
  NSUserDefaults.subscript.getter((uint64_t)&_s9LegacyKeyON, v1, v2, (uint64_t)&v27);
  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_7:
    swift_bridgeObjectRelease(v4);
LABEL_8:
    sub_C261DC((uint64_t)&v27);
    return;
  }
  if ((swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v4);
    return;
  }
  v5 = v26[0];
  v26[0] = 0x4D7972617262694CLL;
  v26[1] = 0xEB00000000756E65;
  NSUserDefaults.subscript.getter((uint64_t)v26, (uint64_t)&type metadata for String, v2, (uint64_t)&v27);
  if (*((_QWORD *)&v28 + 1))
  {
    swift_bridgeObjectRelease(v5);
    goto LABEL_7;
  }
  sub_C261DC((uint64_t)&v27);
  if (qword_14F9F18 != -1)
    swift_once(&qword_14F9F18, sub_CBC1EC);
  sub_CC5918(v4, v5, qword_14FFEA0, *(uint64_t *)algn_14FFEA8);
  if (v0)
  {
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v4);
    if (qword_14F9F20 != -1)
      swift_once(&qword_14F9F20, sub_CBC814);
    v10 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v10, (uint64_t)static Logger.libraryMenu);
    swift_errorRetain(v0);
    v11 = swift_errorRetain(v0);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v15 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v14 = 138412290;
      *(_QWORD *)&v27 = v0;
      swift_errorRetain(v0);
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      String.init<A>(describing:)(&v27, v16);
      v18 = v17;
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
      *(_QWORD *)(v14 + 4) = v19;
      *v15 = v19;
      swift_errorRelease(v0);
      swift_errorRelease(v0);
      _os_log_impl(&dword_0, v12, v13, "Unable to migrate legacy library menu: %@", (uint8_t *)v14, 0xCu);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
      swift_arrayDestroy(v15, 1, v20);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

      swift_errorRelease(v0);
    }
    else
    {
      swift_errorRelease(v0);
      swift_errorRelease(v0);
      swift_errorRelease(v0);

    }
  }
  else
  {
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v24 = v5;
    v25 = v9;
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v4);
    NSUserDefaults.libraryMenuRevision.setter(v21, v22, v23, v25);
    v27 = 0u;
    v28 = 0u;
    LOBYTE(v26[0]) = 0;
    NSUserDefaults.subscript.setter((uint64_t)&v27, (uint64_t)v26, (uint64_t)&_s9LegacyKeyON, v1, v2);
    v27 = 0u;
    v28 = 0u;
    LOBYTE(v26[0]) = 1;
    NSUserDefaults.subscript.setter((uint64_t)&v27, (uint64_t)v26, (uint64_t)&_s9LegacyKeyON, v1, v2);
  }
}

void (*NSUserDefaults.libraryMenuRevision.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  *v3 = NSUserDefaults.libraryMenuRevision.getter();
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v6;
  return sub_CBC648;
}

void sub_CBC648(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = (_QWORD *)(*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSUserDefaults.libraryMenuRevision.setter(v4, v3, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSUserDefaults.libraryMenuRevision.setter(**a1, v3, v5, v6);
  }
  free(v2);
}

uint64_t sub_CBC6F8(char *a1, char *a2)
{
  return sub_BB7458(*a1, *a2);
}

Swift::Int sub_CBC704()
{
  char *v0;

  return sub_C4A240(*v0);
}

uint64_t sub_CBC70C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  if (*v1)
    v3 = 0x8000000001102FA0;
  else
    v3 = 0x8000000001102F80;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_CBC76C(uint64_t a1)
{
  char *v1;

  return sub_C4AA88(a1, *v1);
}

uint64_t sub_CBC774@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6DA8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_CBC7D0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  v3 = 0x8000000001102F80;
  if (*v1)
    v3 = 0x8000000001102FA0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_CBC814()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.libraryMenu);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.libraryMenu);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x4D7972617262694CLL, 0xEB00000000756E65);
}

uint64_t static Logger.libraryMenu.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9F20 != -1)
    swift_once(&qword_14F9F20, sub_CBC814);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.libraryMenu);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_CBC900(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[9];

  v4 = *v2;
  Hasher.init(_seed:)(v14);
  v5 = ApplicationCapabilities.Service.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_CC010C(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_CBCD48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24(&qword_14FED28, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_4DD24(&qword_14FED30, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_CC05B4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_CBCFA4(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  uint64_t v31;
  void *v33;
  id v34;
  _QWORD v35[9];

  v3 = v2;
  v6 = *v2;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v9 = v8;
  Hasher.init(_seed:)(v35);
  swift_bridgeObjectRetain();
  String.hash(into:)(v35, v7, v9);
  v10 = Hasher._finalize()();
  swift_bridgeObjectRelease(v9);
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v35[0] = *v3;
    *v3 = 0x8000000000000000;
    v30 = a2;
    sub_CC07B8((uint64_t)v30, v12, isUniquelyReferenced_nonNull_native);
    v31 = *v3;
    *v3 = v35[0];
    swift_bridgeObjectRelease(v31);
    *a1 = v30;
    return 1;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12));
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v13 == v16 && v15 == v17)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
    {
      v21 = ~v11;
      do
      {
        v12 = (v12 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_15;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12));
        v15 = v23;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
        if (v22 == v24 && v15 == v25)
          goto LABEL_16;
        v27 = v25;
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v15, v24, v25, 0);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v27);
      }
      while ((v28 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease(v6);
  v33 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v12);
  *a1 = v33;
  v34 = v33;
  return 0;
}

uint64_t sub_CBD1CC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v32 = a2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8);
    swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v30 = v9;
      v10 = type metadata accessor for AnyCancellable(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v31;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_CBDC40(v7, result + 1);
    v31 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v28 = v25 + 1;
      swift_retain(a2);
      sub_CBE908(v28);
      v26 = v31;
    }
    else
    {
      v26 = v24;
      swift_retain(a2);
    }
    sub_CBF8C4(a2, v26);
    v29 = *v3;
    *v3 = v26;
    swift_bridgeObjectRelease(v29);
    *a1 = a2;
    return 1;
  }
  v12 = *(_QWORD *)(v6 + 40);
  v13 = type metadata accessor for AnyCancellable(0);
  v14 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_bridgeObjectRetain();
  v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
  v16 = -1 << *(_BYTE *)(v6 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v21 = v32;
    v31 = *v2;
    *v2 = 0x8000000000000000;
    swift_retain(v21);
    sub_CC09E4(v22, v17, isUniquelyReferenced_nonNull_native);
    v23 = *v2;
    *v2 = v31;
    swift_bridgeObjectRelease(v23);
    *a1 = v21;
    return 1;
  }
  v18 = ~v16;
  v19 = sub_4DD24(&qword_14FED20, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  while (1)
  {
    v31 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v17);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v31, &v32, v13, v19) & 1) != 0)
      break;
    v17 = (v17 + 1) & v18;
    if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      goto LABEL_11;
  }
  swift_release(a2);
  swift_bridgeObjectRelease(v6);
  v27 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v17);
  *a1 = v27;
  swift_retain(v27);
  return 0;
}

uint64_t sub_CBD494(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[10];

  v4 = *v2;
  Hasher.init(_seed:)(v14);
  v5 = Library.Menu.Identifier.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_CC0B8C(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_CBD870(unsigned __int8 *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14);
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_CC0FDC(a2, v8, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_CBD98C(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_CC1138(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_CBDA84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v23[9];

  v7 = *v3;
  Hasher.init(_seed:)(v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v23, a2, a3);
  swift_bridgeObjectRelease();
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v23[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_CC1258(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_CBDC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FED10);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v25 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for AnyCancellable(0);
      do
      {
        v23 = v7;
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        if (*(_QWORD *)(v25 + 24) <= v18)
        {
          sub_CBE908(v18 + 1);
          v4 = v25;
        }
        v9 = v24;
        v23 = v24;
        v10 = *(_QWORD *)(v4 + 40);
        v11 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
        result = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v8, v11);
        v13 = v4 + 56;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v16 == v20;
            if (v16 == v20)
              v16 = 0;
            v19 |= v21;
            v22 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v22 == -1);
          v17 = __clz(__rbit64(~v22)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_CBDE60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFB0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0xCBE260);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v17);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_CBE28C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for AudioVariant(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1500008);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v40 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v38 = v2;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain(v7);
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v20 >= v39)
      goto LABEL_35;
    v21 = v40[v20];
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v39)
        goto LABEL_35;
      v21 = v40[v16];
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(_QWORD *)(v7 + 48);
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v41 + 32);
    v26(v6, v24 + v25 * v19, v4, v15);
    v27 = *(_QWORD *)(v9 + 40);
    v28 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    ((void (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v23;
  }
  v22 = v20 + 3;
  if (v22 < v39)
  {
    v21 = v40[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v16 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        ++v22;
        if (v21)
          goto LABEL_25;
      }
    }
    v16 = v22;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v7);
  v2 = v38;
  v37 = 1 << *(_BYTE *)(v7 + 32);
  if (v37 > 63)
    bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v40 = -1 << v37;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release(v7);
  *v2 = v9;
}

void sub_CBE5F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFA8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v32 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v32)
          goto LABEL_36;
        v16 = v33[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_36;
          v16 = v33[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_36;
            v16 = v33[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_36:
                swift_release(v3);
                v2 = v31;
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v32)
                    goto LABEL_36;
                  v16 = v33[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;
      Hasher.init(_seed:)(v34);
      String.hash(into:)(v34, v19, v21);
      v22 = Hasher._finalize()();
      swift_bridgeObjectRelease(v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_CBE908(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FED10);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v31 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v31)
          goto LABEL_36;
        v16 = v32[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_36;
          v16 = v32[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_36;
            v16 = v32[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release(v3);
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v31)
                    goto LABEL_36;
                  v16 = v32[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = *(_QWORD *)(v6 + 40);
      v20 = type metadata accessor for AnyCancellable(0);
      v21 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_CBEC18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FED00);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v16 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v15 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v15 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v15 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0xCBF07CLL);
              }
              if (v11 >= v15)
                break;
              v10 = v16[v11];
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v17);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v14 = 1 << *(_BYTE *)(v3 + 32);
  if (v14 > 63)
    bzero(v16, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v14;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_CBF0B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FECE8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v31);
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_CBF358(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFC8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_CBF5D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFA0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release();
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34);
      swift_bridgeObjectRetain();
      String.hash(into:)(v34, v21, v22);
      swift_bridgeObjectRelease();
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

unint64_t sub_CBF8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = type metadata accessor for AnyCancellable(0);
  v6 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  result = _HashTable.nextHole(atOrAfter:)(v7 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_CBF990(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v40 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1500008);
  result = static _SetStorage.allocate(capacity:)(a3);
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v40;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v39)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v38[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v39)
          goto LABEL_37;
        v21 = v38[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v39)
            goto LABEL_37;
          v21 = v38[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v39)
              goto LABEL_37;
            v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v39)
                  goto LABEL_37;
                v21 = v38[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    v26 = *(_QWORD *)(v12 + 40);
    v27 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v8, v27);
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      v17 = v40;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      v17 = v40;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v31 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_CBFC90(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v17[10];

  v4 = a4;
  if (!a3)
  {
    v7 = &_swiftEmptySetSingleton;
    goto LABEL_23;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FED00);
    v7 = (void *)static _SetStorage.allocate(capacity:)(a3);
    v15 = a2;
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      goto LABEL_22;
    }
    if (v15 > 1)
    {
      v10 = a1[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (v15 > 2)
      {
        v10 = a1[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (v15 > 3)
        {
          v10 = a1[3];
          if (!v10)
          {
            v12 = 4;
            if (v15 > 4)
            {
              v10 = a1[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0xCC00D8);
                }
                if (v11 >= v15)
                  break;
                v10 = a1[v11];
                ++v12;
                if (v10)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
          v13 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v9);
          Hasher.init(_seed:)(v17);
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    swift_release(v4);
    return v7;
  }
  return (void *)v4;
}

void sub_CC010C(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_CBDE60(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14FFFB0);
        goto LABEL_10;
      }
      sub_CC1CC4(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19);
    v10 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0xCC0540);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

uint64_t sub_CC05B4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_CBE28C(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_CC1400();
      goto LABEL_12;
    }
    sub_CC20BC(v13);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_4DD24(&qword_14FED30, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_CC07B8(uint64_t a1, unint64_t a2, char a3)
{
  Swift::Int v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD v34[9];

  v4 = (uint64_t *)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_CBE5F8(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_CC1624();
LABEL_22:
      v30 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * a2) = a1;
      v31 = *(_QWORD *)(v30 + 16);
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (!v32)
      {
        *(_QWORD *)(v30 + 16) = v33;
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_CC23E4(v9);
  }
  v10 = *(_QWORD *)v3;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v13 = v12;
  Hasher.init(_seed:)(v34);
  String.hash(into:)(v34, v11, v13);
  v3 = Hasher._finalize()();
  swift_bridgeObjectRelease(v13);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v3 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
  v3 = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v15 == v17 && v3 == v18)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_26;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v3, v17, v18, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) == 0)
  {
    v22 = ~v14;
    do
    {
      a2 = (a2 + 1) & v22;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
      v3 = v24;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v23 == v25 && v3 == v26)
        goto LABEL_25;
      v28 = v26;
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v3, v25, v26, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v28);
    }
    while ((v29 & 1) == 0);
  }
LABEL_26:
  _s3__C4NameVMa_0(0);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_CC09E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_CBE908(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_CC17CC();
      goto LABEL_12;
    }
    sub_CC26C0(v9);
  }
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v4 = type metadata accessor for AnyCancellable(0);
  v12 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v4, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = sub_4DD24(&qword_14FED20, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v22, v4, v16) & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_CC0B8C(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[10];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_CBEC18(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_7EAFC(&qword_14FED00);
        goto LABEL_10;
      }
      sub_CC29A4(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19);
    v10 = Library.Menu.Identifier.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0xCC0F58);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

void sub_CC0FDC(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v5 = a1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_CBF0B0(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_7EAFC(&qword_14FECE8);
      goto LABEL_14;
    }
    sub_CC2E04(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v18);
  Hasher._combine(_:)(v5);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MPCPlaybackEngine.Option);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_CC1138(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_CBF358(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_CC1980();
      goto LABEL_14;
    }
    sub_CC307C(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_CC1258(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_CBF5D8(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_CC1B14();
      goto LABEL_22;
    }
    sub_CC32DC(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29);
  swift_bridgeObjectRetain();
  String.hash(into:)(v29, a1, a2);
  swift_bridgeObjectRelease();
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_CC1400()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1500008);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release(v6);
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_CC1624()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFA8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_CC17CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FED10);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    swift_retain(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_CC1974()
{
  sub_7EAFC(&qword_14FED00);
}

void sub_CC1980()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFC8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_CC1B14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFA0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_CC1CC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFB0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0xCC2090);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v15);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
LABEL_26:
  *v2 = v5;
}

void sub_CC20BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;

  v2 = v1;
  v4 = type metadata accessor for AudioVariant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1500008);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release(v8);
LABEL_37:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v36 = v2;
  v37 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  v16 = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_35;
      v22 = *(_QWORD *)(v37 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v38)
          goto LABEL_35;
        v22 = *(_QWORD *)(v37 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v24 * v20, v4, v16);
    v25 = *(_QWORD *)(v10 + 40);
    v26 = sub_4DD24(&qword_14FED28, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    v27 = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v18 * v24, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v38)
  {
LABEL_35:
    swift_release_n(v8, 2);
    v2 = v36;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_CC23E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFA8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = v2;
  v32 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v33 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v33)
      goto LABEL_36;
    v16 = *(_QWORD *)(v32 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v33)
        goto LABEL_36;
      v16 = *(_QWORD *)(v32 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v33)
          goto LABEL_36;
        v16 = *(_QWORD *)(v32 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v14);
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;
    Hasher.init(_seed:)(v34);
    v22 = v18;
    String.hash(into:)(v34, v19, v21);
    v23 = Hasher._finalize()();
    swift_bridgeObjectRelease(v21);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v32 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v33)
      goto LABEL_36;
    v16 = *(_QWORD *)(v32 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_CC26C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FED10);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v30 = v2;
  v31 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v32 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v32)
      goto LABEL_36;
    v16 = *(_QWORD *)(v31 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_36;
      v16 = *(_QWORD *)(v31 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_36;
        v16 = *(_QWORD *)(v31 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    v19 = *(_QWORD *)(v6 + 40);
    v20 = type metadata accessor for AnyCancellable(0);
    v21 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    swift_retain(v18);
    v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v31 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v32)
      goto LABEL_36;
    v16 = *(_QWORD *)(v31 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_CC29A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FED00);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v14 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v14 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v14 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v14 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0xCC2DD0);
              }
              if (v11 >= v14)
                break;
              v10 = *(_QWORD *)(v3 + 56 + 8 * v11);
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v15);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
LABEL_26:
  *v2 = v5;
}

void sub_CC2E04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FECE8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30);
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_CC307C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFC8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_CC32DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFA0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain_n(v22, 2);
    String.hash(into:)(v33, v21, v22);
    swift_bridgeObjectRelease();
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

unint64_t sub_CC3594()
{
  unint64_t result;

  result = qword_14FFEB0;
  if (!qword_14FFEB0)
  {
    result = swift_getWitnessTable(&unk_10A1808, &_s4MenuV9MoveErrorVN);
    atomic_store(result, (unint64_t *)&qword_14FFEB0);
  }
  return result;
}

unint64_t sub_CC35D8()
{
  unint64_t result;

  result = qword_14FFEB8;
  if (!qword_14FFEB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Revision, &type metadata for Library.Menu.Revision);
    atomic_store(result, (unint64_t *)&qword_14FFEB8);
  }
  return result;
}

void sub_CC361C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_C7A238(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_CC377C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v14;
  _QWORD v15[9];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = (_QWORD *)(a1 + 56);
    v5 = -1 << *(_BYTE *)(a1 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a1 + 56);
    v14 = (unint64_t)(63 - v5) >> 6;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      goto LABEL_22;
    }
    if (v14 > 1)
    {
      v9 = v4[1];
      v10 = 1;
      if (v9)
        goto LABEL_21;
      v10 = 2;
      if (v14 > 2)
      {
        v9 = v4[2];
        if (v9)
          goto LABEL_21;
        v10 = 3;
        if (v14 > 3)
        {
          v9 = v4[3];
          if (v9)
            goto LABEL_21;
          v10 = 4;
          if (v14 > 4)
          {
            v9 = v4[4];
            if (!v9)
            {
              v11 = 5;
              if (v14 > 5)
              {
                v9 = v4[5];
                if (v9)
                {
                  v10 = 5;
                  goto LABEL_21;
                }
                while (1)
                {
                  v10 = v11 + 1;
                  if (__OFADD__(v11, 1))
                    __break(1u);
                  if (v10 >= v14)
                    break;
                  v9 = v4[v10];
                  ++v11;
                  if (v9)
                    goto LABEL_21;
                }
              }
              goto LABEL_25;
            }
LABEL_21:
            v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_22:
            v12 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v8);
            Hasher.init(_seed:)(v15);
            __asm { BR              X8 }
          }
        }
      }
    }
LABEL_25:
    sub_55D68(a1);
    return (void *)v2;
  }
  swift_release(a2);
  return &_swiftEmptySetSingleton;
}

void *sub_CC3FD0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v20;
  _QWORD v22[12];

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v22[11] = a3 + 56;
  v20 = v6 - 1;
  v8 = a5[3];
  v7 = a5[4];
  if (v7)
  {
    v9 = (v7 - 1) & v7;
    v10 = __clz(__rbit64(v7)) | (v8 << 6);
    goto LABEL_13;
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0xCC456CLL);
  }
  v12 = (unint64_t)(a5[2] + 64) >> 6;
  if (v11 >= v12)
  {
    v11 = a5[3];
  }
  else
  {
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
    {
LABEL_12:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v11 << 6);
      v8 = v11;
LABEL_13:
      v16 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v10);
      a5[3] = v8;
      a5[4] = v9;
      Hasher.init(_seed:)(v22);
      __asm { BR              X8 }
    }
    v15 = v8 + 2;
    if (v8 + 2 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
      {
LABEL_8:
        v11 = v15;
        goto LABEL_12;
      }
      if (v8 + 3 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v11 = v8 + 3;
          goto LABEL_12;
        }
        v15 = v8 + 4;
        if (v8 + 4 >= v12)
        {
          v11 = v8 + 3;
          goto LABEL_23;
        }
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (v14)
          goto LABEL_8;
        v11 = v8 + 5;
        if (v8 + 5 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v11);
          if (!v14)
          {
            v11 = v12 - 1;
            v17 = v8 + 6;
            do
            {
              if (v12 == v17)
                goto LABEL_23;
              v14 = *(_QWORD *)(v13 + 8 * v17++);
            }
            while (!v14);
            v11 = v17 - 1;
          }
          goto LABEL_12;
        }
      }
      v11 = v15;
    }
  }
LABEL_23:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain(a3);
  return sub_CBFC90(a1, a2, v20, a3);
}

uint64_t sub_CC460C(void *a1, char a2, void *a3, char a4)
{
  char v7;
  char v8;
  char v9;

  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
    {
      sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
      sub_94F08(a1, 0);
      sub_94F08(a3, 0);
      v7 = static NSObject.== infix(_:_:)(a1, a3);
      goto LABEL_6;
    }
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_7;
  type metadata accessor for MusicLibrary(0);
  sub_94F08(a1, 1);
  sub_94F08(a3, 1);
  v7 = static MusicLibrary.== infix(_:_:)(a1, a3);
LABEL_6:
  v8 = v7;
  v9 = a2 & 1;
  sub_94EAC(a3, v9);
  sub_94EAC(a1, v9);
  return v8 & 1;
}

uint64_t sub_CC46E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_CC46F4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_CC4730()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_CC478C()
{
  uint64_t v0;

  sub_CB888C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t block_copy_helper_297(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_297(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_CC47EC()
{
  unint64_t result;

  result = qword_14FFEC0;
  if (!qword_14FFEC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Revision, &type metadata for Library.Menu.Revision);
    atomic_store(result, (unint64_t *)&qword_14FFEC0);
  }
  return result;
}

uint64_t _s9MusicCore7LibraryO4MenuV7RequestV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  char v14;
  uint64_t v16[2];
  uint64_t v17[2];
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  sub_CC780C((uint64_t *)a1, (uint64_t)v17);
  sub_CC780C((uint64_t *)a2, (uint64_t)v16);
  sub_CC780C(v17, (uint64_t)&v18);
  v4 = v18;
  if ((v19 & 1) != 0)
  {
    sub_CC780C(v16, (uint64_t)&v20);
    if ((v21 & 1) == 0)
      goto LABEL_16;
    v5 = v20;
    type metadata accessor for MusicLibrary(0);
    sub_CC7824((uint64_t)v17);
    sub_CC7824((uint64_t)v16);
    v6 = static MusicLibrary.== infix(_:_:)(v4, v5);
  }
  else
  {
    sub_CC780C(v16, (uint64_t)&v20);
    if ((v21 & 1) != 0)
      goto LABEL_16;
    v7 = v20;
    sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
    sub_CC7824((uint64_t)v17);
    sub_CC7824((uint64_t)v16);
    v6 = static NSObject.== infix(_:_:)(v4, v7);
  }
  v8 = v6;
  sub_CC7850((uint64_t)v16);
  sub_CC7850((uint64_t)v17);
  if ((v8 & 1) == 0 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    goto LABEL_16;
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a2 + 24);
  if (v9)
  {
    if (!v10)
      goto LABEL_16;
    sub_4E684(0, &qword_14FFFE8, MPMediaPickerConfiguration_ptr);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      goto LABEL_16;
  }
  else if (v10)
  {
    goto LABEL_16;
  }
  if ((sub_CB6D40(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
    && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) == 0)
  {
    v14 = ((*(_BYTE *)(a1 + 42) & 1) == 0) ^ *(_BYTE *)(a2 + 42);
    return v14 & 1;
  }
LABEL_16:
  v14 = 0;
  return v14 & 1;
}

char *sub_CC49FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, unsigned __int8 a11)
{
  uint64_t v11;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v24[24];
  _BYTE v25[24];
  int v26;
  int v27;

  v26 = a3;
  v27 = a5;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess(a4, v25, 0, 0);
    swift_beginAccess(a6, v24, 0, 0);
    v16 = 0;
    v17 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      v18 = *(unsigned __int8 *)(a1 + v16 + 32);
      if ((sub_C52748(*(_BYTE *)(a1 + v16 + 32), a2) & 1) == 0)
      {
        if ((v26 & 1) != 0)
        {
          v19 = *(_QWORD *)(a4 + 24);
          swift_bridgeObjectRetain();
          v20 = sub_C52748(v18, v19);
          swift_bridgeObjectRelease(v19);
          if ((v27 & 1) != 0)
          {
            if ((v20 & 1) != 0)
              goto LABEL_11;
            goto LABEL_4;
          }
        }
        else if ((v27 & 1) != 0)
        {
LABEL_11:
          __asm { BR              X9 }
        }
        if (((_DWORD)v18 != 5) | a10 & a11 & 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = sub_BCD418(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
          v22 = *((_QWORD *)v17 + 2);
          v21 = *((_QWORD *)v17 + 3);
          if (v22 >= v21 >> 1)
            v17 = sub_BCD418((char *)(v21 > 1), v22 + 1, 1, v17);
          *((_QWORD *)v17 + 2) = v22 + 1;
          v17[v22 + 32] = v18;
        }
      }
LABEL_4:
      if (v11 == ++v16)
      {
        swift_bridgeObjectRelease(a1);
        return v17;
      }
    }
  }
  return (char *)_swiftEmptyArrayStorage;
}

unint64_t _s9MusicCore7LibraryO4MenuV10IdentifierO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4E40, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

void sub_CC4EFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  int64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[24];

  v4 = a3 >> 1;
  if (a3 >> 1 != a2)
  {
    swift_beginAccess(a4, v13, 0, 0);
    v8 = v4;
    while (!__OFSUB__(v8--, 1))
    {
      if (v8 < a2 || v8 >= v4)
        goto LABEL_10;
      v10 = *a4;
      v11 = *(unsigned __int8 *)(a1 + v8);
      swift_bridgeObjectRetain();
      v12 = sub_C36AA4(v11, v10);
      swift_bridgeObjectRelease(v10);
      if ((v12 & 1) != 0 || v8 == a2)
        return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_CC4FDC(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  _BYTE v10[24];

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 - 1 <= result)
    return 13;
  v4 = result;
  if ((result & 0x8000000000000000) == 0)
  {
    if (v3 != result)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess(a3, v10, 0, 0);
      while (1)
      {
        v5 = *(unsigned __int8 *)(a2 + v4 + 32);
        v8 = *a3;
        swift_bridgeObjectRetain();
        v9 = sub_C36AA4(v5, v8);
        swift_bridgeObjectRelease(v8);
        if ((v9 & 1) != 0)
          break;
        if (v3 == ++v4)
        {
          v5 = 13;
          break;
        }
      }
      swift_bridgeObjectRelease(a2);
      return v5;
    }
    return 13;
  }
  __break(1u);
  return result;
}

void sub_CC50B0(unsigned __int8 *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t *v17;
  char *v18;
  int64_t v19;
  int v20;
  _BYTE *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[24];
  _BYTE v42[24];
  _BYTE v43[24];

  v6 = *a1;
  swift_bridgeObjectRetain();
  v7 = sub_C7D4B4(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0)
    goto LABEL_48;
  if (v7 < 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (*(_QWORD *)(a2 + 16) < (unint64_t)v7)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v10 = a2 + 32;
  swift_bridgeObjectRetain();
  sub_CC4EFC(a2 + 32, 0, (2 * v7) | 1, a3);
  if ((v12 & 1) != 0)
  {
    v10 = 13;
    goto LABEL_11;
  }
  if (v11 < 0 || v11 >= v7)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!v3)
    v10 = *(unsigned __int8 *)(v10 + v11);
LABEL_11:
  swift_bridgeObjectRelease(a2);
  v13 = sub_CC4FDC(v7, a2, a3);
  v14 = v13;
  if (v10 == 13)
  {
    v15 = v13;
    v16 = v43;
    v17 = a3;
    if (v15 == 13)
    {
      swift_beginAccess(a3, v43, 1, 0);
      v18 = 0;
      v19 = 0;
LABEL_37:
      sub_BCEA38(v18, v19, v6);
      return;
    }
    goto LABEL_20;
  }
  v20 = v13;
  v21 = v43;
  v22 = a3;
  if (v20 != 13)
    goto LABEL_24;
  swift_beginAccess(a3, v43, 0, 0);
  v23 = *a3;
  swift_bridgeObjectRetain();
  v24 = sub_C7D4B4(v10, v23);
  v26 = v25;
  swift_bridgeObjectRelease(v23);
  if ((v26 & 1) != 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v27 = __OFADD__(v24, 1);
  v14 = v24 + 1;
  if (v27)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_beginAccess(a3, v42, 1, 0);
  if (*(_QWORD *)(*a3 + 16) < v14)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
LABEL_36:
    v18 = (char *)v14;
    v19 = v14;
    goto LABEL_37;
  }
  __break(1u);
LABEL_20:
  swift_beginAccess(v17, v16, 0, 0);
  v28 = *a3;
  swift_bridgeObjectRetain();
  v14 = sub_C7D4B4(v14, v28);
  v10 = v29;
  swift_bridgeObjectRelease(v28);
  if ((v10 & 1) != 0)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  swift_beginAccess(a3, v42, 1, 0);
  if (*(_QWORD *)(*a3 + 16) < v14)
    goto LABEL_42;
  if ((v14 & 0x8000000000000000) == 0)
    goto LABEL_36;
  __break(1u);
LABEL_24:
  swift_beginAccess(v22, v21, 0, 0);
  v30 = *a3;
  swift_bridgeObjectRetain();
  v31 = sub_C7D4B4(v10, v30);
  v33 = v32;
  swift_bridgeObjectRelease(v30);
  if ((v33 & 1) != 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  swift_beginAccess(a3, v42, 0, 0);
  v34 = *a3;
  swift_bridgeObjectRetain();
  v35 = sub_C7D4B4(v14, v34);
  v37 = v36;
  swift_bridgeObjectRelease(v34);
  if ((v37 & 1) == 0)
  {
    if (v35 <= v31)
      v38 = v31;
    else
      v38 = v35;
    if (v35 >= v31)
      v39 = v31;
    else
      v39 = v35;
    v27 = __OFSUB__(v38, v39);
    v40 = v38 - v39;
    if (!v27)
    {
      v14 = v39 + v40 / 2;
      if (!__OFADD__(v39, v40 / 2))
      {
        swift_beginAccess(a3, v41, 1, 0);
        if (*(_QWORD *)(*a3 + 16) >= v14)
        {
          if ((v14 & 0x8000000000000000) == 0)
            goto LABEL_36;
          goto LABEL_47;
        }
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    goto LABEL_43;
  }
LABEL_52:
  __break(1u);
}

void sub_CC53DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unsigned __int8 v19;

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v14);
    sub_CC50B0(&v19, a2, a3);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_17:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  v18 = v12 + 4;
  if (v12 + 4 >= v11)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v16 = *(_QWORD *)(v7 + 8 * v18);
  v12 += 4;
  if (v16)
    goto LABEL_17;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_24;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v16)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_CC555C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v6 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_24;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_24;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    result = sub_C52748(*(_BYTE *)(*(_QWORD *)(a3 + 48) + v15), a4);
    if ((result & 1) != 0)
    {
      *(unint64_t *)((char *)v6 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        return (uint64_t)sub_CBFC90(v6, a2, v7, a3);
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_24;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_CC56F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;

  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  swift_bridgeObjectRetain_n(a2, 2);
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a3, 2);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v10, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_CC555C((uint64_t)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a3);
    swift_release(a1);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
    if (v3)
      swift_willThrow(v13);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v10, -1);
    bzero(v14, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_CC555C((uint64_t)v14, v9, a1, a3);
    swift_release(a1);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
    swift_slowDealloc(v14, -1, -1);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
  }
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  return v12;
}

void sub_CC5918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void **v7;
  char *v8;
  uint64_t v9;
  void *v10;
  Swift::String v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void **v16;
  char *v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v28;
  char v29[24];
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v7 = (void **)(swift_bridgeObjectRetain() + 40);
    v8 = (char *)_swiftEmptyArrayStorage;
    do
    {
      v9 = (uint64_t)*(v7 - 1);
      v10 = *v7;
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = v9;
      v11._object = v10;
      v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4E40, v11);
      swift_bridgeObjectRelease(v10);
      if (v12 <= 0xC)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_BCD418(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v14 = *((_QWORD *)v8 + 2);
        v13 = *((_QWORD *)v8 + 3);
        if (v14 >= v13 >> 1)
          v8 = sub_BCD418((char *)(v13 > 1), v14 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v14 + 1;
        v8[v14 + 32] = v12;
      }
      v7 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(a1);
    v15 = *(_QWORD *)(a2 + 16);
    if (v15)
      goto LABEL_11;
LABEL_21:
    v17 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  v8 = (char *)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a2 + 16);
  if (!v15)
    goto LABEL_21;
LABEL_11:
  swift_bridgeObjectRetain();
  v16 = (void **)(a2 + 40);
  v17 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v18 = (uint64_t)*(v16 - 1);
    v19 = *v16;
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = v18;
    v20._object = v19;
    v21 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4E40, v20);
    swift_bridgeObjectRelease(v19);
    if (v21 <= 0xC)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = sub_BCD418(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v23 = *((_QWORD *)v17 + 2);
      v22 = *((_QWORD *)v17 + 3);
      if (v23 >= v22 >> 1)
        v17 = sub_BCD418((char *)(v22 > 1), v23 + 1, 1, v17);
      *((_QWORD *)v17 + 2) = v23 + 1;
      v17[v23 + 32] = v21;
    }
    v16 += 2;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease(a2);
LABEL_22:
  v24 = sub_C7B024((uint64_t)v17);
  swift_bridgeObjectRelease(v17);
  v30 = v8;
  v31 = v24;
  v32 = v8;
  v33 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_CBA97C(a3, a4);
  if (v28)
  {
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    swift_beginAccess(&v30, v29, 0, 0);
    v25 = v32;
    if (*((_QWORD *)v32 + 2))
    {
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
    }
  }
}

char *sub_CC5DF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFD0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_CC6318();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV10CodingKeysON, &_s4MenuV8RevisionV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
    v47 = 1;
    v11 = sub_CC7770(&qword_14FFFD8, &qword_14FB868, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, &v47, v3, v10, v11);
    v40 = v11;
    v41 = v10;
    v42 = v4;
    v43 = a1;
    v44 = v6;
    v45 = v3;
    v13 = v46;
    v14 = *(_QWORD *)(v46 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (void **)(v13 + 40);
      v16 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v18 = (uint64_t)*(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        v19._countAndFlagsBits = v18;
        v19._object = v17;
        v20 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4E40, v19);
        swift_bridgeObjectRelease();
        if (v20 <= 0xC)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = sub_BCD418(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
          v22 = *((_QWORD *)v16 + 2);
          v21 = *((_QWORD *)v16 + 3);
          if (v22 >= v21 >> 1)
            v16 = sub_BCD418((char *)(v21 > 1), v22 + 1, 1, v16);
          *((_QWORD *)v16 + 2) = v22 + 1;
          v16[v22 + 32] = v20;
        }
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FD968);
    v47 = 0;
    v24 = sub_CC7770(&qword_14FDA68, &qword_14FD968, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    swift_bridgeObjectRetain();
    v25 = v44;
    v26 = v45;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v23, &v47, v45, v23, v24);
    sub_CB67D8(v46);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = sub_C7B024(v28);
    swift_bridgeObjectRelease();
    v47 = 2;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v41, &v47, v26, v41, v40);
    v30 = v46;
    v31 = *(_QWORD *)(v46 + 16);
    if (v31)
    {
      v41 = v29;
      swift_bridgeObjectRetain();
      v40 = v30;
      v32 = (void **)(v30 + 40);
      v6 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v33 = (uint64_t)*(v32 - 1);
        v34 = *v32;
        swift_bridgeObjectRetain();
        v35._countAndFlagsBits = v33;
        v35._object = v34;
        v36 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A4E40, v35);
        swift_bridgeObjectRelease();
        if (v36 <= 0xC)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = sub_BCD418(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
          v38 = *((_QWORD *)v6 + 2);
          v37 = *((_QWORD *)v6 + 3);
          if (v38 >= v37 >> 1)
            v6 = sub_BCD418((char *)(v37 > 1), v38 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v38 + 1;
          v6[v38 + 32] = v36;
        }
        v32 += 2;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      v25 = v44;
      v26 = v45;
    }
    else
    {
      v6 = (char *)_swiftEmptyArrayStorage;
    }
    v39 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v25, v26, v39);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_CC6318()
{
  unint64_t result;

  result = qword_14FFED0;
  if (!qword_14FFED0)
  {
    result = swift_getWitnessTable(&unk_10A17B8, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_14FFED0);
  }
  return result;
}

unint64_t sub_CC635C()
{
  unint64_t result;

  result = qword_14FFEE8;
  if (!qword_14FFEE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_14FFEE8);
  }
  return result;
}

unint64_t sub_CC63A0()
{
  unint64_t result;

  result = qword_14FFF00;
  if (!qword_14FFF00)
  {
    result = swift_getWitnessTable(&unk_10A1790, &_s4MenuV8RevisionV7VersionVN);
    atomic_store(result, (unint64_t *)&qword_14FFF00);
  }
  return result;
}

unint64_t sub_CC63E8()
{
  unint64_t result;

  result = qword_14FFF08;
  if (!qword_14FFF08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.SelectionState, &type metadata for Library.Menu.SelectionState);
    atomic_store(result, (unint64_t *)&qword_14FFF08);
  }
  return result;
}

unint64_t sub_CC642C(uint64_t a1)
{
  unint64_t result;

  result = sub_CC6450();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_CC6450()
{
  unint64_t result;

  result = qword_14FFF40;
  if (!qword_14FFF40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Request, &type metadata for Library.Menu.Request);
    atomic_store(result, (unint64_t *)&qword_14FFF40);
  }
  return result;
}

unint64_t sub_CC6498()
{
  unint64_t result;

  result = qword_14FFF48;
  if (!qword_14FFF48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_14FFF48);
  }
  return result;
}

uint64_t sub_CC64DC()
{
  return sub_5C150(&qword_14FFF50, &qword_14FFED8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t _s4MenuVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

_QWORD *_s4MenuVwcp(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a2[1];
  v6 = (void *)a1[1];
  a1[1] = (uint64_t)v5;
  v7 = v5;

  v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = a2[5];
  v12 = a1[5];
  a1[5] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v12);
  return a1;
}

_QWORD *_s4MenuVwta(_QWORD *a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu()
{
  return &type metadata for Library.Menu;
}

ValueMetadata *type metadata accessor for Library.Menu.SelectionState()
{
  return &type metadata for Library.Menu.SelectionState;
}

double _s4MenuV7RequestVwxx(uint64_t a1)
{
  double result;

  sub_94EAC(*(void **)a1, *(_BYTE *)(a1 + 8));

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t _s4MenuV7RequestVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_94F08(*(void **)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v7 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4MenuV7RequestVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_94F08(*(void **)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_94EAC(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  return a1;
}

__n128 __swift_memcpy43_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s4MenuV7RequestVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_94EAC(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  return a1;
}

uint64_t _s4MenuV7RequestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 43))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4MenuV7RequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 43) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 43) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Request()
{
  return &type metadata for Library.Menu.Request;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_94F08(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s4MenuV7RequestV18MediaLibrarySourceOwxx(uint64_t a1)
{
  sub_94EAC(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_94F08(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_94EAC(v5, v6);
  return a1;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_94EAC(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu.Request.MediaLibrarySource()
{
  return &type metadata for Library.Menu.Request.MediaLibrarySource;
}

uint64_t _s4MenuV10IdentifierOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s4MenuV10IdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_CC6B50 + 4 * byte_10A1339[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_CC6B84 + 4 * byte_10A1334[v4]))();
}

uint64_t sub_CC6B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC6B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCC6B94);
  return result;
}

uint64_t sub_CC6BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCC6BA8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_CC6BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC6BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Identifier()
{
  return &type metadata for Library.Menu.Identifier;
}

uint64_t _s4MenuV10IdentifierO8LocationOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_CC6C20 + 4 * byte_10A133E[v4]))();
  }
}

uint64_t _s4MenuV10IdentifierO8LocationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_CC6CD8 + 4 * byte_10A1348[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_CC6D0C + 4 * byte_10A1343[v5]))();
}

uint64_t sub_CC6D0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC6D14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCC6D1CLL);
  return result;
}

uint64_t sub_CC6D28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCC6D30);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_CC6D34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC6D3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Identifier.Location()
{
  return &type metadata for Library.Menu.Identifier.Location;
}

_QWORD *_s4MenuV8RevisionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

_QWORD *_s4MenuV8RevisionVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu.Revision()
{
  return &type metadata for Library.Menu.Revision;
}

ValueMetadata *_s4MenuV8RevisionV7VersionVMa()
{
  return &_s4MenuV8RevisionV7VersionVN;
}

uint64_t _s4MenuV8RevisionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_CC6EFC + 4 * byte_10A1352[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_CC6F30 + 4 * byte_10A134D[v4]))();
}

uint64_t sub_CC6F30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC6F38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCC6F40);
  return result;
}

uint64_t sub_CC6F4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCC6F54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_CC6F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC6F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4MenuV8RevisionV10CodingKeysOMa()
{
  return &_s4MenuV8RevisionV10CodingKeysON;
}

uint64_t _s4MenuV8RevisionVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t _s4MenuV9MoveErrorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV9MoveErrorVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s4MenuV9MoveErrorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s4MenuV9MoveErrorVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4MenuV9MoveErrorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4MenuV9MoveErrorVMa()
{
  return &_s4MenuV9MoveErrorVN;
}

unint64_t sub_CC71B4()
{
  unint64_t result;

  result = qword_14FFF58;
  if (!qword_14FFF58)
  {
    result = swift_getWitnessTable(&unk_10A1718, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_14FFF58);
  }
  return result;
}

unint64_t sub_CC71FC()
{
  unint64_t result;

  result = qword_14FFF60;
  if (!qword_14FFF60)
  {
    result = swift_getWitnessTable(")<1", &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_14FFF60);
  }
  return result;
}

unint64_t sub_CC7244()
{
  unint64_t result;

  result = qword_14FFF68;
  if (!qword_14FFF68)
  {
    result = swift_getWitnessTable(&unk_10A1678, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_14FFF68);
  }
  return result;
}

unint64_t sub_CC7288(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6D40, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_CC72D0()
{
  unint64_t result;

  result = qword_14FFF78;
  if (!qword_14FFF78)
  {
    result = swift_getWitnessTable(&unk_10A1A58, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_14FFF78);
  }
  return result;
}

uint64_t sub_CC7314(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    v5 = 0xEB00000000737265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEB00000000737265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x64657463656C6573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64657463656C6573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_CC741C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFF80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_CC72D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV7VersionV10CodingKeysON, &_s4MenuV8RevisionV7VersionV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFED8);
    HIBYTE(v15) = 0;
    v11 = sub_1F6F44(&qword_14FFF88, &qword_14FFED8, (void (*)(void))sub_CC7630, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFEF0);
    HIBYTE(v15) = 1;
    v14 = sub_1F6F44(&qword_14FFF98, &qword_14FFEF0, (void (*)(void))sub_CC7630, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_CC7630()
{
  unint64_t result;

  result = qword_14FFF90;
  if (!qword_14FFF90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_14FFF90);
  }
  return result;
}

unint64_t sub_CC7674()
{
  unint64_t result;

  result = qword_14FFFB8;
  if (!qword_14FFFB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_14FFFB8);
  }
  return result;
}

uint64_t sub_CC76B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CC76DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_BYTE *, uint64_t, uint64_t);
  _BYTE v8[56];

  v6 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
  sub_CC7728(a1, (uint64_t)v8);
  return v6(v8, a2, a3);
}

uint64_t sub_CC7728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FFFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_CC7770(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_CC77C8()
{
  unint64_t result;

  result = qword_14FFFE0;
  if (!qword_14FFFE0)
  {
    result = swift_getWitnessTable(&unk_10A1768, &_s4MenuV8RevisionV7VersionVN);
    atomic_store(result, (unint64_t *)&qword_14FFFE0);
  }
  return result;
}

uint64_t sub_CC780C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t sub_CC7824(uint64_t a1)
{
  sub_94F08(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_CC7850(uint64_t a1)
{
  sub_94EAC(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

unint64_t sub_CC787C()
{
  unint64_t result;

  result = qword_14FFFF0;
  if (!qword_14FFFF0)
  {
    result = swift_getWitnessTable(&unk_10A1A20, &_s9LegacyKeyON);
    atomic_store(result, (unint64_t *)&qword_14FFFF0);
  }
  return result;
}

unint64_t sub_CC78C0()
{
  unint64_t result;

  result = qword_14FFFF8;
  if (!qword_14FFFF8)
  {
    result = swift_getWitnessTable(&unk_10A19E0, &_s4MenuV8RevisionV16MigrationFailureON);
    atomic_store(result, (unint64_t *)&qword_14FFFF8);
  }
  return result;
}

uint64_t sub_CC790C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_CC7938()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CC795C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_CC7988()
{
  uint64_t v0;

  return sub_D34764(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t _s4MenuV8RevisionV16MigrationFailureOwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *_s4MenuV8RevisionV16MigrationFailureOwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionV16MigrationFailureOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a2[5];
  v10 = a1[5];
  a1[5] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  return a1;
}

_QWORD *_s4MenuV8RevisionV16MigrationFailureOwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *_s4MenuV8RevisionV16MigrationFailureOMa()
{
  return &_s4MenuV8RevisionV16MigrationFailureON;
}

ValueMetadata *_s9LegacyKeyOMa()
{
  return &_s9LegacyKeyON;
}

uint64_t _s4MenuV14SelectionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_CC7BE0 + 4 * byte_10A135C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_CC7C14 + 4 * byte_10A1357[v4]))();
}

uint64_t sub_CC7C14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC7C1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCC7C24);
  return result;
}

uint64_t sub_CC7C30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCC7C38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_CC7C3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC7C44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4MenuV8RevisionV7VersionV10CodingKeysOMa()
{
  return &_s4MenuV8RevisionV7VersionV10CodingKeysON;
}

uint64_t _s4MenuV9MoveErrorV7FailureOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xF)
    goto LABEL_17;
  if (a2 + 241 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 241) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 241;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 241;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 241;
  }
LABEL_17:
  v6 = ((*a1 >> 3) & 0xE | (*a1 >> 7)) ^ 0xF;
  if (v6 >= 0xE)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s4MenuV9MoveErrorV7FailureOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 241 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 241) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE)
    return ((uint64_t (*)(void))((char *)&loc_CC7D4C + 4 * byte_10A1366[v4]))();
  *a1 = a2 - 15;
  return ((uint64_t (*)(void))((char *)sub_CC7D80 + 4 * byte_10A1361[v4]))();
}

uint64_t sub_CC7D80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC7D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCC7D90);
  return result;
}

uint64_t sub_CC7DA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCC7DB0);
  *(_BYTE *)result = 16 * (((-a2 >> 1) & 7) - 8 * a2);
  return result;
}

uint64_t sub_CC7DB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC7DBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CC7DC8(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_CC7DD4(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_CC7DE4(_BYTE *result, char a2)
{
  *result = *result & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *_s4MenuV9MoveErrorV7FailureOMa()
{
  return &_s4MenuV9MoveErrorV7FailureON;
}

unint64_t sub_CC7E0C()
{
  unint64_t result;

  result = qword_1500010;
  if (!qword_1500010)
  {
    result = swift_getWitnessTable(&unk_10A1950, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1500010);
  }
  return result;
}

unint64_t sub_CC7E54()
{
  unint64_t result;

  result = qword_1500018;
  if (!qword_1500018)
  {
    result = swift_getWitnessTable(&unk_10A19B8, &_s9LegacyKeyON);
    atomic_store(result, (unint64_t *)&qword_1500018);
  }
  return result;
}

unint64_t sub_CC7E9C()
{
  unint64_t result;

  result = qword_1500020;
  if (!qword_1500020)
  {
    result = swift_getWitnessTable(&unk_10A18C0, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1500020);
  }
  return result;
}

unint64_t sub_CC7EE4()
{
  unint64_t result;

  result = qword_1500028;
  if (!qword_1500028)
  {
    result = swift_getWitnessTable(&unk_10A18E8, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1500028);
  }
  return result;
}

void sub_CC7F2C()
{
  qword_1582210 = (uint64_t)&off_13A6DF8;
}

uint64_t SortOptions.SortType.localizedTitle.getter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_CC7FAC(a1);
  v1 = v6;
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v5);
  return v3;
}

void sub_CC7FAC(char a1)
{
  __asm { BR              X10 }
}

void sub_CC7FD8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = &type metadata for PlaylistOrderSort;
  *(_QWORD *)(v0 + 32) = &off_13B5948;
  *(_BYTE *)v0 = 1;
}

id SortOptions.SortType.image.getter(char a1)
{
  id v1;
  id v2;
  NSString v3;
  id v4;
  NSString v5;

  v1 = 0;
  if (((1 << a1) & 0x1FC) == 0)
  {
    if (((1 << a1) & 0xC01) != 0)
    {
      v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v3 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

      if (v4)
        goto LABEL_6;
    }
    else
    {
      v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v5 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v4)
      {
LABEL_6:
        v1 = objc_msgSend(v4, "imageWithConfiguration:", v2);

        return v1;
      }
    }

    return 0;
  }
  return v1;
}

uint64_t SortOptions.SortType.sortDescriptors(for:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_CC7FAC(a2);
  v3 = v8;
  v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v7);
  return v5;
}

uint64_t SortOptions.SortType.reversed.getter(char a1)
{
  return byte_10A2032[a1];
}

uint64_t SortOptions.SortType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_CC837C + 4 * byte_10A1B1D[a1]))(0xD000000000000018, 0x80000000010C4A30);
}

uint64_t sub_CC837C()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_CC848C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = SortOptions.SortType.rawValue.getter(*a1);
  v5 = v4;
  v6 = SortOptions.SortType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_CC8514()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.SortType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_CC8574(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = SortOptions.SortType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_CC85B4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.SortType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_CC8610@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_CC863C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = SortOptions.SortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void SortOptions.ContentType.localizedTitle.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_CC8724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0x695620636973754DLL, 0xEC000000736F6564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v5 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

_QWORD *SortOptions.ContentType.availableSortTypes(withSelectedType:)()
{
  uint64_t v0;

  if (qword_14F9F28 != -1)
    swift_once(&qword_14F9F28, sub_CC7F2C);
  v0 = qword_1582210;
  if (*(_QWORD *)(qword_1582210 + 16))
  {
    swift_bridgeObjectRetain_n(qword_1582210, 2);
    __asm { BR              X8 }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t SortOptions.ContentType.defaultSortType.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_CC8E4C + 4 * byte_10A1B55[a1 >> 6]))(8);
}

uint64_t sub_CC8E4C@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 6;
}

uint64_t sub_CC8E68@<X0>(char a1@<W8>)
{
  return 0x206u >> (8 * (a1 + 64));
}

uint64_t sub_CC8E80(unsigned __int8 a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::String v8;
  Swift::Int v10;
  _QWORD v11[9];

  v2 = 0x676E6F5374726F73;
  v3 = a1 >> 6;
  if (a1 != 192 || v3 != 3)
  {
    Hasher.init(_seed:)(v11);
    v4 = SortOptions.ContentType.identifier.getter(a1);
    v6 = v5;
    String.hash(into:)(v11, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()();
    Hasher.init(_seed:)(v11);
    String.hash(into:)(v11, 0x73676E6F73, 0xE500000000000000);
    if (v7 != Hasher._finalize()())
    {
      v2 = 0x75626C4174726F53;
      if (v3 != 1)
      {
        Hasher.init(_seed:)(v11);
        String.hash(into:)(v11, v4, v6);
        swift_bridgeObjectRelease(v6);
        v10 = Hasher._finalize()();
        Hasher.init(_seed:)(v11);
        String.hash(into:)(v11, 0x736D75626C61, 0xE600000000000000);
        if (v10 == Hasher._finalize()())
          return v2;
        goto LABEL_6;
      }
      if ((a1 & 0x3F) != 0)
      {
LABEL_6:
        v11[0] = v4;
        v11[1] = v6;
        swift_bridgeObjectRetain();
        v8._countAndFlagsBits = 0x6570795474726F53;
        v8._object = (void *)0xE800000000000000;
        String.append(_:)(v8);
        swift_bridgeObjectRelease(v6);
        return v11[0];
      }
    }
  }
  return v2;
}

uint64_t SortOptions.ContentType.identifier.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_CC904C + 4 * byte_10A1B59[a1 >> 6]))();
}

uint64_t sub_CC904C@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0x646956636973756DLL;
}

uint64_t sub_CC9094@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_CC90C0 + 4 * byte_10A1B5D[a1 & 0x3F]))(0x736D75626C61, 0xE600000000000000);
}

uint64_t sub_CC90C0()
{
  return 0x6C41747369747261;
}

uint64_t sub_CC90E0@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0x7473696C79616C70;
}

uint64_t sub_CC9124@<X0>(int a1@<W8>)
{
  uint64_t v1;

  v1 = 0x736569766F6DLL;
  if (a1 != 193)
    v1 = 0x7473696C79616C70;
  if (a1 == 192)
    return 0x73676E6F73;
  else
    return v1;
}

unint64_t sub_CC9180()
{
  return 0xD000000000000016;
}

uint64_t sub_CC91A0()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_CC91C4()
{
  return 0x626C4165726E6567;
}

Swift::String __swiftcall SortOptions.ContentType.storageKey(using:)(Swift::String_optional using)
{
  unsigned __int8 v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String result;
  uint64_t v12;
  void *v13;

  if (using.value._object)
  {
    object = using.value._object;
    countAndFlagsBits = using.value._countAndFlagsBits;
    v4 = sub_CC8E80(v1);
    v6 = v5;
    v12 = v4;
    v13 = v5;
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 45;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = countAndFlagsBits;
    v8._object = object;
    String.append(_:)(v8);
    swift_bridgeObjectRelease(v13);
    v9 = v12;
    v10 = v13;
  }
  else
  {
    v9 = sub_CC8E80(v1);
  }
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

void SortOptions.ContentType.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_CC92AC@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;

  if ((a2 & 1) != 0)
    v2 = 0xD000000000000011;
  else
    v2 = 0x646956636973756DLL;
  if ((a2 & 1) != 0)
    v3 = 0x8000000001105AB0;
  else
    v3 = 0xEB00000000736F65;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

void sub_CC93F4()
{
  JUMPOUT(0xCC93DCLL);
}

void sub_CC9414()
{
  JUMPOUT(0xCC93DCLL);
}

void sub_CC9438()
{
  JUMPOUT(0xCC93DCLL);
}

Swift::Int SortOptions.ContentType.hashValue.getter(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  v2 = SortOptions.ContentType.identifier.getter(a1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_CC94BC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.ContentType.identifier.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_CC951C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = SortOptions.ContentType.identifier.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_CC955C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.ContentType.identifier.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_CC95B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s9MusicCore11SortOptionsV11ContentTypeO2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t static SortOptions.ViewType.Albums.preferredItemSortDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060E10;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v3 = v2;
  v4 = objc_allocWithZone((Class)NSSortDescriptor);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "initWithKey:ascending:", v5, 1, swift_bridgeObjectRelease(v3).n128_f64[0]);

  *(_QWORD *)(v1 + 32) = v6;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v8 = v7;
  v9 = objc_allocWithZone((Class)NSSortDescriptor);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithKey:ascending:", v10, 1, swift_bridgeObjectRelease(v8).n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v11;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v13 = v12;
  v14 = objc_allocWithZone((Class)NSSortDescriptor);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "initWithKey:ascending:", v15, 1, swift_bridgeObjectRelease(v13).n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v16;
  specialized Array._endMutation()(v17);
  return v1;
}

uint64_t sub_CC9748(unsigned __int8 a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t result;

  if (a1 == 194)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1060220;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEntryPosition);
    v5 = objc_allocWithZone((Class)NSSortDescriptor);
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "initWithKey:ascending:", v6, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v4 + 32) = v7;
    specialized Array._endMutation()(v8);
    return v4;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, 336, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_CC9870(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x7473696C79616C50, 0xEE00726564724F20);
}

void *sub_CC9894()
{
  return sub_C5FAA4((uint64_t)&off_13A6EC8);
}

uint64_t sub_CC98A0(unsigned __int8 a1)
{
  char *v1;

  return sub_CC9748(a1, *v1);
}

uint64_t sub_CC98A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F8A0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105F890;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v3 + 56) = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8 = (void *)objc_opt_self(MPModelSortDescriptor);
  v9 = objc_msgSend(v8, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v9;
  v10 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1060460;
  *(_QWORD *)(v10 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v10 + 40) = v11;
  *(_QWORD *)(v10 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(v10 + 56) = v12;
  *(_QWORD *)(v10 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v10 + 72) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v8, "sortDescriptorWithKeyPath:ascending:", v14, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  qword_1582218 = v1;
  return result;
}

uint64_t sub_CC9A64(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x656C746954, 0xE500000000000000);
}

void *sub_CC9A78()
{
  return sub_C5FAA4((uint64_t)&off_13A6FC0);
}

uint64_t sub_CC9A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1061D90;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1060460;
  v4 = MPModelRelationshipSongAlbum;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_105F890;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v11 + 56) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v14, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v15;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v16 = objc_allocWithZone((Class)NSSortDescriptor);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "initWithKey:ascending:", v17, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v18;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v19 = objc_allocWithZone((Class)NSSortDescriptor);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "initWithKey:ascending:", v20, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 56) = v21;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v22 = objc_allocWithZone((Class)NSSortDescriptor);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "initWithKey:ascending:", v23, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 64) = v24;
  result = specialized Array._endMutation()(v25);
  qword_1582220 = v1;
  return result;
}

uint64_t sub_CC9D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F8A0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_105F890;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 56) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(MPModelSortDescriptor), "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  v8 = objc_allocWithZone((Class)NSSortDescriptor);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithKey:ascending:", v9, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v10;
  result = specialized Array._endMutation()(v11);
  qword_1582228 = v1;
  return result;
}

uint64_t sub_CC9ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060E10;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1060460;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1060460;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v11 + 56) = v13;
  *(_QWORD *)(v11 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v11 + 72) = v14;
  v15 = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v15, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v16;
  v17 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_105F890;
  *(_QWORD *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  *(_QWORD *)(v17 + 56) = v19;
  v20 = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v20, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v21;
  result = specialized Array._endMutation()(v22);
  qword_1582230 = v1;
  return result;
}

uint64_t sub_CCA11C(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x747369747241, 0xE600000000000000);
}

void *sub_CCA130()
{
  return sub_C5FAA4((uint64_t)&off_13A6E78);
}

uint64_t sub_CCA140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F8A0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1060460;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_105F890;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  *(_QWORD *)(v11 + 56) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v14, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  qword_1582238 = v1;
  return result;
}

uint64_t sub_CCA2FC(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x6D75626C41, 0xE500000000000000);
}

void *sub_CCA310()
{
  return sub_C5FAA4((uint64_t)&off_13A6F98);
}

uint64_t sub_CCA320()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t result;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1061D90;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongLibraryAddedDate);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 0, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 32) = v4;
  v5 = MPModelPropertySongDiscNumber;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v6 = objc_allocWithZone((Class)NSSortDescriptor);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v8;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = objc_allocWithZone((Class)NSSortDescriptor);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithKey:ascending:", v10, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v11;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v12 = objc_allocWithZone((Class)NSSortDescriptor);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithKey:ascending:", v13, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 56) = v14;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v15 = objc_allocWithZone((Class)NSSortDescriptor);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 64) = v17;
  result = specialized Array._endMutation()(v18);
  qword_1582240 = v1;
  return result;
}

uint64_t sub_CCA568(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x796C746E65636552, 0xEE00646564644120);
}

void *sub_CCA58C()
{
  return sub_C5FAA4((uint64_t)&off_13A6EF0);
}

uint64_t sub_CCA59C(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x796C746E65636552, 0xEF646579616C5020);
}

void *sub_CCA5C0()
{
  return sub_C5FAA4((uint64_t)&off_13A6F20);
}

uint64_t sub_CCA5CC(char a1)
{
  return sub_CCBC80(a1, &MPModelPropertyPlaylistLastDevicePlaybackDate, 516);
}

uint64_t sub_CCA5EC(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 0x7473696C79616C50, 0xED00006570795420);
}

void *sub_CCA610()
{
  return sub_C5FAA4((uint64_t)&off_13A6EA0);
}

_QWORD *sub_CCA61C(char a1)
{
  _QWORD *result;

  if ((a1 & 0xC0) == 0x80)
    return _swiftEmptyArrayStorage;
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, 538, 0);
  __break(1u);
  return result;
}

void *sub_CCA690()
{
  return sub_C5FAA4((uint64_t)&off_13A6F48);
}

uint64_t sub_CCA69C(char a1)
{
  return sub_CCBC80(a1, &MPModelPropertyPlaylistLastModifiedDateComponents, 560);
}

uint64_t sub_CCA6BC(unsigned __int8 a1, char a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t result;

  v3 = a1 >> 6;
  if (!(a1 >> 6))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v5 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_105F8A0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongYear);
    v11 = objc_allocWithZone((Class)NSSortDescriptor);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "initWithKey:ascending:", v12, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v13;
    v9 = &MPModelPropertySongTitle;
    goto LABEL_8;
  }
  if (v3 == 1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_105F8A0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumYear);
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = &MPModelPropertyAlbumTitle;
LABEL_8:
    static String._unconditionallyBridgeFromObjectiveC(_:)(*v9);
    v18 = objc_allocWithZone((Class)NSSortDescriptor);
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v18, "initWithKey:ascending:", v19, 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 40) = v20;
    specialized Array._endMutation()(v21);
    return v5;
  }
  if (v3 == 3 && a1 == 193)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v5 = swift_allocObject(v14, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_105F8A0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieReleaseDate);
    v15 = objc_allocWithZone((Class)NSSortDescriptor);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v17;
    v9 = &MPModelPropertyMovieTitle;
    goto LABEL_8;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, 598, 0);
  __break(1u);
  return result;
}

uint64_t sub_CCA990(uint64_t a1, uint64_t a2)
{
  return sub_BE8A8C(a1, a2, 1918985561, 0xE400000000000000);
}

void *sub_CCA9A0()
{
  return sub_C5FAA4((uint64_t)&off_13A6F70);
}

uint64_t sub_CCA9AC(unsigned __int8 a1)
{
  char *v1;

  return sub_CCA6BC(a1, *v1);
}

uint64_t sub_CCA9B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x20657361656C6552, 0xEC00000065746144);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_CCAB24(unsigned __int8 a1)
{
  char *v1;

  return sub_CCB890(a1, *v1);
}

unint64_t NSUserDefaults.sortType(for:keyDomain:)(unsigned __int8 a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t countAndFlagsBits;
  void *object;
  void *v13;
  unint64_t v14;
  unint64_t result;
  Swift::String v16;
  _BYTE v17[24];
  uint64_t v18;

  if (a3)
  {
    v6 = sub_CC8E80(a1);
    v8 = v7;
    v16._countAndFlagsBits = v6;
    v16._object = v7;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = 45;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = a2;
    v10._object = a3;
    String.append(_:)(v10);
    swift_bridgeObjectRelease(v16._object);
    countAndFlagsBits = v16._countAndFlagsBits;
    object = v16._object;
  }
  else
  {
    countAndFlagsBits = sub_CC8E80(a1);
    object = v13;
  }
  v16._countAndFlagsBits = countAndFlagsBits;
  v16._object = object;
  v14 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)&v16, (uint64_t)&type metadata for String, v14, (uint64_t)v17);
  swift_bridgeObjectRelease(object);
  if (!v18)
  {
    sub_C261DC((uint64_t)v17);
    goto LABEL_9;
  }
  if ((swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0
    || (result = _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(v16), result == 13))
  {
LABEL_9:
    __asm { BR              X10 }
  }
  return result;
}

void NSUserDefaults.setSortType(_:for:keyDomain:)(unsigned __int8 a1, unsigned __int8 a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  __CFNotificationCenter *v32;
  __CFString *v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  if (a4)
  {
    v8 = sub_CC8E80(a2);
    v10 = v9;
    v35 = v8;
    v36 = v9;
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = 45;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = a3;
    v12._object = a4;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v36);
    v13 = v35;
    v14 = v36;
  }
  else
  {
    v13 = sub_CC8E80(a2);
    v14 = v15;
  }
  if ((a2 & 0xC0) == 0x40)
  {
    v16 = (a2 & 0x3F) == 0;
    if (a4)
      goto LABEL_12;
  }
  else
  {
    Hasher.init(_seed:)(&v35);
    v17 = SortOptions.ContentType.identifier.getter(a2);
    v19 = v18;
    String.hash(into:)(&v35, v17, v18);
    swift_bridgeObjectRelease(v19);
    v20 = Hasher._finalize()();
    Hasher.init(_seed:)(&v35);
    String.hash(into:)(&v35, 0x736D75626C61, 0xE600000000000000);
    v16 = v20 == Hasher._finalize()();
    if (a4)
    {
LABEL_12:
      v26 = SortOptions.SortType.rawValue.getter(a1);
      v27 = v29;
      v28 = 0;
      goto LABEL_14;
    }
  }
  if (!v16)
    goto LABEL_12;
  v21 = NSUserDefaults.sortType(for:keyDomain:)(a2, a3, 0);
  v22 = SortOptions.SortType.rawValue.getter(v21);
  v24 = v23;
  v26 = SortOptions.SortType.rawValue.getter(a1);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
  {
    swift_bridgeObjectRelease_n(v24, 2);
    v28 = 0;
  }
  else
  {
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v27);
    v28 = v30 ^ 1;
  }
LABEL_14:
  v37 = &type metadata for String;
  v35 = v26;
  v36 = v27;
  v34[0] = v13;
  v34[1] = v14;
  v31 = sub_B9DEC0();
  NSUserDefaults.subscript.setter((uint64_t)&v35, (uint64_t)v34, (uint64_t)&type metadata for String, v31);
  if ((v28 & 1) != 0)
  {
    v32 = CFNotificationCenterGetDarwinNotifyCenter();
    v33 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterPostNotification(v32, v33, 0, 0, 1u);

  }
}

id MPModelPlaylist.canBeSorted.getter()
{
  void *v0;
  id result;

  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyAlbumLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyMovieLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertySongLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVEpisodeLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVSeasonLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  result = objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyArtistLibraryAdded);
  if ((_DWORD)result)
    return objc_msgSend(v0, "isLibraryAdded");
  return result;
}

uint64_t MPModelPlaylist.sortStorageKeyDomain.getter()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[2];
  _QWORD v14[4];

  v1 = objc_msgSend(v0, "identifiers");
  v2 = objc_msgSend(v1, "universalStore");

  if (!v2)
    goto LABEL_8;
  v4 = objc_msgSend(v2, "globalPlaylistID");
  v3 = swift_unknownObjectRelease(v2).n128_u64[0];
  if (!v4)
    goto LABEL_8;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    v3 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_8:
    v11 = objc_msgSend(v0, "identifiers", *(double *)&v3);
    v10 = MPIdentifierSet.bestLibraryIdentifier.getter();

    return v10;
  }
  v14[2] = v5;
  v14[3] = v7;
  v14[0] = 46;
  v14[1] = 0xE100000000000000;
  v13[0] = 45;
  v13[1] = 0xE100000000000000;
  v9 = sub_B9DEC0();
  v10 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v14, v13, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v9, v9, v9);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MPModelPlaylist.preferredTracklistSortDescriptors.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if ((MPModelPlaylist.canBeSorted.getter() & 1) == 0)
    return 0;
  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = objc_msgSend(v0, "sortStorageKeyDomain");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v8 = NSUserDefaults.sortType(for:keyDomain:)(0xC2u, v4, v6);

  swift_bridgeObjectRelease();
  sub_CC7FAC(v8);
  v9 = v13;
  v10 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(194, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(v12);
  return v7;
}

uint64_t sub_CCB330()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.sortOptions);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.sortOptions);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x6974704F74726F53, 0xEB00000000736E6FLL);
}

uint64_t Logger.sortOptions.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14F9F60 != -1)
    swift_once(&qword_14F9F60, sub_CCB330);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.sortOptions);
}

uint64_t static Logger.sortOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14F9F60 != -1)
    swift_once(&qword_14F9F60, sub_CCB330);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.sortOptions);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t _s9MusicCore11SortOptionsV11ContentTypeO2eeoiySbAE_AEtFZ_0(int a1, int a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  int v4;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[9];

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 6;
  if (a1 >> 6)
  {
    if (v4 == 1)
    {
      if ((a2 & 0xC0) == 0x40)
        return ((a2 ^ a1) & 0x3F) == 0;
    }
    else if (v4 == 3 && a1 == 192 && a2 == 192)
    {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return ((a2 ^ a1) & 1) == 0;
  }
  Hasher.init(_seed:)(v12);
  v7 = SortOptions.ContentType.identifier.getter(v3);
  String.hash(into:)(v12, v7, v8);
  swift_bridgeObjectRelease();
  v9 = Hasher._finalize()();
  Hasher.init(_seed:)(v12);
  v10 = SortOptions.ContentType.identifier.getter(v2);
  String.hash(into:)(v12, v10, v11);
  swift_bridgeObjectRelease();
  return v9 == Hasher._finalize()();
}

uint64_t sub_CCB580()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000001107570);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v10 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_CCB6EC(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = a1 >> 6;
  if (!(a1 >> 6))
    goto LABEL_8;
  if (v1 == 1)
  {
    if (qword_14F9F40 != -1)
      swift_once(&qword_14F9F40, sub_CC9D60);
    v2 = qword_1582228;
LABEL_11:
    swift_bridgeObjectRetain();
    return v2;
  }
  if (v1 != 3)
    goto LABEL_22;
  if (a1 == 192)
  {
LABEL_8:
    if (qword_14F9F38 != -1)
      swift_once(&qword_14F9F38, sub_CC9A88);
    v2 = qword_1582220;
    goto LABEL_11;
  }
  if (a1 == 194)
  {
    if (qword_14F9F48 != -1)
      swift_once(&qword_14F9F48, sub_CC9ECC);
    v2 = qword_1582230;
    if (!((unint64_t)qword_1582230 >> 62))
    {
      v4 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      sub_CCC930();
      return v2;
    }
    if (qword_1582230 < 0)
      v5 = qword_1582230;
    else
      v5 = qword_1582230 & 0xFFFFFFFFFFFFFF8;
    v6 = sub_CCC930();
    swift_bridgeObjectRetain();
    v7 = _bridgeCocoaArray<A>(_:)(v5, v6);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
LABEL_22:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, 423, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_CCB890(unsigned __int8 a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  id v18;
  uint64_t v19;
  uint64_t result;

  if (a1 == 194)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v4 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v4 + 16) = xmmword_105F8A0;
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
    v6 = swift_allocObject(v5, 80, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1060460;
    v7 = MPModelRelationshipPlaylistEntrySong;
    *(_QWORD *)(v6 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
    *(_QWORD *)(v6 + 40) = v8;
    *(_QWORD *)(v6 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
    *(_QWORD *)(v6 + 56) = v9;
    *(_QWORD *)(v6 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumReleaseDateComponents);
    *(_QWORD *)(v6 + 72) = v10;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v12 = (void *)objc_opt_self(MPModelSortDescriptor);
    v13 = objc_msgSend(v12, "sortDescriptorWithKeyPath:ascending:", isa, a2 & 1);

    *(_QWORD *)(v4 + 32) = v13;
    v14 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_105F890;
    *(_QWORD *)(v14 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    *(_QWORD *)(v14 + 40) = v15;
    *(_QWORD *)(v14 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
    *(_QWORD *)(v14 + 56) = v16;
    v17 = Array._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v12, "sortDescriptorWithKeyPath:ascending:", v17, 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v4 + 40) = v18;
    specialized Array._endMutation()(v19);
    return v4;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, 622, 0);
    __break(1u);
  }
  return result;
}

void sub_CCBAA0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_CCBAD0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060220;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumLibraryAddedDate);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 0, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 32) = v4;
  specialized Array._endMutation()(v5);
  return v1;
}

uint64_t sub_CCBC80(char a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t result;

  if ((a1 & 0xC0) == 0x80)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v5 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v5 + 16) = xmmword_1060220;
    static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 0, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v8;
    specialized Array._endMutation()(v9);
    return v5;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, a3, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_CCBD94(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (a1 == 194)
  {
    if (qword_14F9F50 != -1)
      swift_once(&qword_14F9F50, sub_CCA140);
    v1 = qword_1582238;
    if ((unint64_t)qword_1582238 >> 62)
    {
      if (qword_1582238 < 0)
        v4 = qword_1582238;
      else
        v4 = qword_1582238 & 0xFFFFFFFFFFFFFF8;
      v5 = sub_CCC930();
      swift_bridgeObjectRetain();
      v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
      swift_bridgeObjectRelease();
      return v6;
    }
    else
    {
      v2 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
      sub_CCC930();
      return v1;
    }
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000001107540, "MusicCore/SortOptions.swift", 27, 2, 449, 0);
    __break(1u);
  }
  return result;
}

_QWORD *sub_CCBEA8(unsigned __int8 a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = a1 >> 6;
  if (v1 < 2)
    return _swiftEmptyArrayStorage;
  if (v1 == 2)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v3 = swift_allocObject(v2, 40, 7);
    *(_OWORD *)(v3 + 16) = xmmword_1060220;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
    v4 = objc_allocWithZone((Class)NSSortDescriptor);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "initWithKey:ascending:", v5, 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v3 + 32) = v6;
    specialized Array._endMutation()(v7);
    return (_QWORD *)v3;
  }
  if ((a1 & 0xFE) == 0xC0)
    return _swiftEmptyArrayStorage;
  if (qword_14F9F30 != -1)
    swift_once(&qword_14F9F30, sub_CC98A8);
  v3 = qword_1582218;
  if (!((unint64_t)qword_1582218 >> 62))
  {
    v9 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    sub_CCC930();
    return (_QWORD *)v3;
  }
  if (qword_1582218 < 0)
    v10 = qword_1582218;
  else
    v10 = qword_1582218 & 0xFFFFFFFFFFFFFF8;
  v11 = sub_CCC930();
  swift_bridgeObjectRetain();
  v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
  swift_bridgeObjectRelease();
  return (_QWORD *)v12;
}

unint64_t _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13A6FF0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

unint64_t sub_CCC07C()
{
  unint64_t result;

  result = qword_1500030;
  if (!qword_1500030)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.SortType, &type metadata for SortOptions.SortType);
    atomic_store(result, (unint64_t *)&qword_1500030);
  }
  return result;
}

unint64_t sub_CCC0C4()
{
  unint64_t result;

  result = qword_1500038;
  if (!qword_1500038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ContentType, &type metadata for SortOptions.ContentType);
    atomic_store(result, (unint64_t *)&qword_1500038);
  }
  return result;
}

unint64_t sub_CCC10C()
{
  unint64_t result;

  result = qword_1500040;
  if (!qword_1500040)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Albums, &type metadata for SortOptions.ViewType.Albums);
    atomic_store(result, (unint64_t *)&qword_1500040);
  }
  return result;
}

unint64_t sub_CCC154()
{
  unint64_t result;

  result = qword_1500048;
  if (!qword_1500048)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.MusicVideos, &type metadata for SortOptions.ViewType.MusicVideos);
    atomic_store(result, (unint64_t *)&qword_1500048);
  }
  return result;
}

unint64_t sub_CCC19C()
{
  unint64_t result;

  result = qword_1500050;
  if (!qword_1500050)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Playlists, &type metadata for SortOptions.ViewType.Playlists);
    atomic_store(result, (unint64_t *)&qword_1500050);
  }
  return result;
}

unint64_t sub_CCC1E4()
{
  unint64_t result;

  result = qword_1500058;
  if (!qword_1500058)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Detail, &type metadata for SortOptions.ViewType.Detail);
    atomic_store(result, (unint64_t *)&qword_1500058);
  }
  return result;
}

ValueMetadata *type metadata accessor for SortOptions()
{
  return &type metadata for SortOptions;
}

uint64_t storeEnumTagSinglePayload for SortOptions.SortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_CCC284 + 4 * byte_10A1B78[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_CCC2B8 + 4 * byte_10A1B73[v4]))();
}

uint64_t sub_CCC2B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC2C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCCC2C8);
  return result;
}

uint64_t sub_CCC2D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCCC2DCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_CCC2E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC2E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.SortType()
{
  return &type metadata for SortOptions.SortType;
}

uint64_t getEnumTagSinglePayload for SortOptions.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1D)
    goto LABEL_17;
  if (a2 + 227 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 227) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 227;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 227;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 227;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 227 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 227) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1C)
    return ((uint64_t (*)(void))((char *)&loc_CCC3F0 + 4 * byte_10A1B82[v4]))();
  *a1 = a2 - 29;
  return ((uint64_t (*)(void))((char *)sub_CCC424 + 4 * byte_10A1B7D[v4]))();
}

uint64_t sub_CCC424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC42C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCCC434);
  return result;
}

uint64_t sub_CCC44C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCCC454);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_CCC458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC46C(unsigned __int8 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 6;
  v3 = (v1 & 7) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_BYTE *sub_CCC488(_BYTE *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 5) & 7 | 0xC0;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ContentType()
{
  return &type metadata for SortOptions.ContentType;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType()
{
  return &type metadata for SortOptions.ViewType;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ViewType.Albums(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_CCC524 + 4 * byte_10A1B8C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_CCC558 + 4 * byte_10A1B87[v4]))();
}

uint64_t sub_CCC558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCCC568);
  return result;
}

uint64_t sub_CCC574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCCC57CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_CCC580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Albums()
{
  return &type metadata for SortOptions.ViewType.Albums;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.MusicVideos()
{
  return &type metadata for SortOptions.ViewType.MusicVideos;
}

uint64_t _s9MusicCore11SortOptionsV8ViewTypeV11MusicVideosOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_CCC604 + 4 * byte_10A1B96[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_CCC638 + 4 * byte_10A1B91[v4]))();
}

uint64_t sub_CCC638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCCC648);
  return result;
}

uint64_t sub_CCC654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCCC65CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_CCC660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Playlists()
{
  return &type metadata for SortOptions.ViewType.Playlists;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ViewType.Detail(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_CCC6C4 + 4 * byte_10A1B9B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_CCC6E4 + 4 * byte_10A1BA0[v4]))();
}

_BYTE *sub_CCC6C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_CCC6E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_CCC6EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_CCC6F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_CCC6FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_CCC704(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Detail()
{
  return &type metadata for SortOptions.ViewType.Detail;
}

ValueMetadata *type metadata accessor for TitleSort()
{
  return &type metadata for TitleSort;
}

ValueMetadata *type metadata accessor for ArtistSort()
{
  return &type metadata for ArtistSort;
}

ValueMetadata *type metadata accessor for AlbumSort()
{
  return &type metadata for AlbumSort;
}

ValueMetadata *type metadata accessor for PlaylistOrderSort()
{
  return &type metadata for PlaylistOrderSort;
}

ValueMetadata *type metadata accessor for PlaylistTypeSort()
{
  return &type metadata for PlaylistTypeSort;
}

ValueMetadata *type metadata accessor for RecentlyAddedSort()
{
  return &type metadata for RecentlyAddedSort;
}

ValueMetadata *type metadata accessor for RecentlyPlayedSort()
{
  return &type metadata for RecentlyPlayedSort;
}

ValueMetadata *type metadata accessor for RecentlyUpdatedSort()
{
  return &type metadata for RecentlyUpdatedSort;
}

uint64_t _s9MusicCore17PlaylistOrderSortVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_CCC7F4 + 4 * byte_10A1BAA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_CCC828 + 4 * byte_10A1BA5[v4]))();
}

uint64_t sub_CCC828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCCC838);
  return result;
}

uint64_t sub_CCC844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCCC84CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_CCC850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CCC858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YearSort()
{
  return &type metadata for YearSort;
}

uint64_t initializeBufferWithCopyOfBuffer for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t assignWithTake for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for ReleaseDateSort()
{
  return &type metadata for ReleaseDateSort;
}

unint64_t sub_CCC930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FE280;
  if (!qword_14FE280)
  {
    v1 = objc_opt_self(NSSortDescriptor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14FE280);
  }
  return result;
}

id MPModelPlaylist.preferredArtworkCatalog.getter()
{
  void *v0;
  unint64_t v1;
  id result;
  id v3;

  if (!objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistType))
    goto LABEL_8;
  v1 = (unint64_t)objc_msgSend(v0, "type");
  if (v1 > 8)
    goto LABEL_8;
  if (((1 << v1) & 0x173) != 0)
  {
    result = MPModelPlaylist.coverArtworkCatalog.getter();
    if (!result)
    {
      result = objc_msgSend(v0, "artworkCatalog");
      if (!result)
      {
        if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistTracksTiledArtwork))
        {
          v3 = objc_msgSend(v0, "tracksTiledArtworkCatalogWithRows:columns:", 2, 2);
          return v3;
        }
        return 0;
      }
    }
    return result;
  }
  if (v1 == 3)
    return 0;
  if (v1 != 7
    || !objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistEditorialArtwork)
    || (result = objc_msgSend(v0, "editorialArtworkCatalog")) == 0)
  {
LABEL_8:
    v3 = objc_msgSend(v0, "artworkCatalog");
    return v3;
  }
  return result;
}

uint64_t static MPModelPlaylist.artworkPlaceholderSystemImageName(for:)(uint64_t a1, char a2)
{
  uint64_t result;
  unint64_t v4;

  result = 0x6F6E2E636973756DLL;
  if ((a2 & 1) == 0)
  {
    v4 = a1 - 1;
    if (v4 <= 2)
      return *(_QWORD *)&aGearshapgenius[8 * v4];
  }
  return result;
}

uint64_t MPModelPlaylist.artworkPlaceholderImage.getter()
{
  void *v0;
  uint64_t v1;
  char *v2;

  v1 = 0x6F6E2E636973756DLL;
  if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistType))
  {
    v2 = (char *)objc_msgSend(v0, "type");
    if ((unint64_t)(v2 - 1) <= 2)
      return *(_QWORD *)&aGearshapgenius[8 * (_QWORD)(v2 - 1)];
  }
  return v1;
}

char *ModelObjectBackedStoreItemMetadata.__allocating_init(modelObject:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ModelObjectBackedStoreItemMetadata.init(modelObject:)(a1);
}

char *ModelObjectBackedStoreItemMetadata.init(modelObject:)(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t ObjectType;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26[24];
  objc_super v27;

  v3 = OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  objc_opt_self(MPModelGenericObject);
  v5 = swift_dynamicCastObjCClass(a1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v1;
    v8 = objc_msgSend(v6, "anyObject");
    goto LABEL_5;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v9 = (void *)swift_dynamicCastObjCClass(a1);
  v10 = v1;
  if (v9)
  {
    v8 = objc_msgSend(v9, "innerObject");
LABEL_5:
    v11 = v8;
    if (v11)
      goto LABEL_7;
  }
  v11 = a1;
LABEL_7:
  ObjectType = swift_getObjectType();
  v13 = objc_msgSend(v11, "identifiers");
  v14 = sub_C27FD8(ObjectType, 2, 0, v13);
  v16 = v15;

  if (v16)
  {

    v27.receiver = v1;
    v27.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
    v17 = (char *)objc_msgSendSuper2(&v27, "init");
    v18 = (void **)&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v26, 1, 0);
    v19 = *v18;
    *v18 = a1;

    v20 = (uint64_t *)&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID], &v25, 1, 0);
    v21 = v20[1];
    *v20 = v14;
    v20[1] = v16;
    swift_bridgeObjectRelease(v21);
  }
  else
  {

    v22 = *((_QWORD *)v4 + 1);
    swift_bridgeObjectRelease(v22);
    v23 = type metadata accessor for ModelObjectBackedStoreItemMetadata();
    swift_deallocPartialClassInstance(v1, v23, 32, 7);
    return 0;
  }
  return v17;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(downloadAssetDictionary:)(uint64_t a1)
{
  return sub_CCD590(a1, (SEL *)&selRef_initWithDownloadAssetDictionary_);
}

id ModelObjectBackedStoreItemMetadata.init(downloadAssetDictionary:)(uint64_t a1)
{
  return sub_CCD61C(a1, (SEL *)&selRef_initWithDownloadAssetDictionary_);
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:)(uint64_t a1)
{
  return sub_CCD590(a1, (SEL *)&selRef_initWithStorePlatformDictionary_);
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:)(uint64_t a1)
{
  return sub_CCD61C(a1, (SEL *)&selRef_initWithStorePlatformDictionary_);
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:parentStoreItemMetadata:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, "initWithStorePlatformDictionary:parentStoreItemMetadata:", isa, a2);

  return v7;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:parentStoreItemMetadata:)(uint64_t a1, void *a2)
{
  char *v2;
  char *v4;
  Class isa;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v6 = objc_msgSendSuper2(&v8, "initWithStorePlatformDictionary:parentStoreItemMetadata:", isa, a2);

  return v6;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:expirationDate:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  NSDictionary v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;

  v3 = v2;
  v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  }
  v10 = objc_msgSend(objc_allocWithZone(v3), "initWithStorePlatformDictionary:expirationDate:", v6.super.isa, isa);

  return v10;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:expirationDate:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  NSDictionary v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  objc_class *v13;
  id v14;
  objc_super v16;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v8 = &v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_C4DCB4(a2, (uint64_t)v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  v13 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v16.receiver = v3;
  v16.super_class = v13;
  v14 = objc_msgSendSuper2(&v16, "initWithStorePlatformDictionary:expirationDate:", v9.super.isa, isa);

  sub_56024(a2, &qword_14FDE40);
  return v14;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:parentStoreItemMetadata:expirationDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  NSDictionary v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v4 = v3;
  v8.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a3, 1, v9) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
  }
  v12 = objc_msgSend(objc_allocWithZone(v4), "initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:", v8.super.isa, a2, isa);

  return v12;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:parentStoreItemMetadata:expirationDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;

  v4 = sub_CD54D0(a1, (uint64_t)a2, a3);

  return v4;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storeMusicAPIDictionary:)(uint64_t a1)
{
  return sub_CCD590(a1, (SEL *)&selRef_initWithStoreMusicAPIDictionary_);
}

id sub_CCD590(uint64_t a1, SEL *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, *a2, isa);

  return v7;
}

id ModelObjectBackedStoreItemMetadata.init(storeMusicAPIDictionary:)(uint64_t a1)
{
  return sub_CCD61C(a1, (SEL *)&selRef_initWithStoreMusicAPIDictionary_);
}

id sub_CCD61C(uint64_t a1, SEL *a2)
{
  char *v2;
  char *v4;
  Class isa;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v6 = objc_msgSendSuper2(&v8, *a2, isa);

  return v6;
}

id sub_CCD6C4(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  char *v6;
  Class isa;
  id v8;
  objc_super v10;

  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  *(_QWORD *)&a1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v6 = &a1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v8 = objc_msgSendSuper2(&v10, *a4, isa);

  return v8;
}

void ModelObjectBackedStoreItemMetadata.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v1 = &v0[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCore/ModelObjectBackedStoreItemMetadata.swift", 50, 2, 49, 0);
  __break(1u);
}

void *ModelObjectBackedStoreItemMetadata.modelObject.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ModelObjectBackedStoreItemMetadata.modelObject.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*ModelObjectBackedStoreItemMetadata.modelObject.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ModelObjectBackedStoreItemMetadata.modelObjectStoreID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ModelObjectBackedStoreItemMetadata.modelObjectStoreID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*ModelObjectBackedStoreItemMetadata.modelObjectStoreID.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID, a1, 33, 0);
  return j_j__swift_endAccess;
}

char *ModelObjectBackedStoreItemMetadata.appending(_:)(uint64_t a1)
{
  char *v1;
  char *v3;
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  char v15[24];
  char v16[24];
  char v17[24];
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v3 = (char *)objc_msgSendSuper2(&v18, "metadataByAppendingMetadata:", a1);
  v4 = (void **)&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v17, 0, 0);
  v5 = *v4;
  v6 = (void **)&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v16, 1, 0);
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

  v9 = &v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  swift_beginAccess(v9, v15, 0, 0);
  v11 = *(_QWORD *)v9;
  v10 = *((_QWORD *)v9 + 1);
  v12 = &v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID], &v14, 1, 0);
  *(_QWORD *)v12 = v11;
  *((_QWORD *)v12 + 1) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

void ModelObjectBackedStoreItemMetadata.artistName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5A90, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B5AB8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5658;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_62604;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_302;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 64, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CCDD04(uint64_t a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _BYTE v26[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v26, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "artist");
      v9 = v8;
      if (v8)
        goto LABEL_7;
      goto LABEL_9;
    }
    objc_opt_self(MPModelSong);
    v10 = swift_dynamicCastObjCClass(v4);
    if (v10)
    {
      v11 = (void *)v10;
      v7 = v4;
      v8 = objc_msgSend(v11, "artist");
      v9 = v8;
      if (v8)
      {
LABEL_7:
        v12 = objc_msgSend(v8, "name");

        if (v12)
        {
          v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v14 = v13;

LABEL_12:
          v15 = a2[1];
          *a2 = v9;
          a2[1] = v14;
LABEL_13:
          swift_bridgeObjectRelease(v15);
          return;
        }

        v9 = 0;
LABEL_11:
        v14 = 0;
        goto LABEL_12;
      }
LABEL_9:

      goto LABEL_11;
    }
    objc_opt_self(MPModelTVEpisode);
    v16 = swift_dynamicCastObjCClass(v4);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = v4;
      v19 = objc_msgSend(v17, "show");
      if (v19)
        goto LABEL_17;
      v25 = objc_msgSend(v17, "season");
      v22 = v25;
      if (!v25)
      {

        goto LABEL_25;
      }
      v19 = objc_msgSend(v25, "show");

      if (v19)
      {
LABEL_17:
        v20 = objc_msgSend(v19, "title");
        if (v20)
        {
          v21 = v20;
          v22 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
          v24 = v23;

LABEL_26:
          v15 = a2[1];
          *a2 = v22;
          a2[1] = v24;
          goto LABEL_13;
        }

      }
      v22 = 0;
LABEL_25:
      v24 = 0;
      goto LABEL_26;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.artistStoreID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  __n128 v8;
  char isEscapingClosureAtFileLocation;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t ObjectType;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD aBlock[6];
  void *v25;

  v25 = 0;
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_13B5B08, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v25;
  v5 = swift_allocObject(&unk_13B5B30, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_CD5688;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_AF944;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_13_11;
  v6 = _Block_copy(aBlock);
  v7 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 84, 49, 1, v8);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v10 = v25;
    if (!v25)
      goto LABEL_11;
    objc_opt_self(MPModelGenericObject);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v10;
      v14 = objc_msgSend(v12, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v15 = (void *)swift_dynamicCastObjCClass(v10);
      v16 = v10;
      if (!v15)
      {
LABEL_8:
        v17 = v10;
LABEL_9:
        ObjectType = swift_getObjectType();
        v19 = objc_msgSend(v17, "identifiers");
        v20 = sub_C27FD8(ObjectType, 2, 0, v19);
        v22 = v21;

        if (v22)
        {
          *(_QWORD *)(a1 + 24) = &type metadata for String;
          *(_QWORD *)a1 = v20;
          *(_QWORD *)(a1 + 8) = v22;
LABEL_12:
          v23 = v25;
          swift_release();

          return;
        }
LABEL_11:
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        goto LABEL_12;
      }
      v14 = objc_msgSend(v15, "innerObject");
    }
    v17 = v14;
    if (v17)
      goto LABEL_9;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_CCE1D4(uint64_t a1, void **a2)
{
  void **v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v14, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5 || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      v6 = objc_msgSend(v5, "artist");
LABEL_5:
      v7 = *a2;
      *a2 = v6;

      return;
    }
    objc_opt_self(MPModelTVEpisode);
    v8 = swift_dynamicCastObjCClass(v4);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v4;
      v11 = objc_msgSend(v9, "show");
      if (v11)
      {
        v6 = v11;

      }
      else
      {
        v12 = objc_msgSend(v9, "season");
        if (v12)
        {
          v13 = v12;
          v6 = objc_msgSend(v12, "show");

        }
        else
        {

          v6 = 0;
        }
      }
      goto LABEL_5;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.audioTraits.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _QWORD *v9;

  v9 = _swiftEmptyArrayStorage;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5B80, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B5BA8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD56A0;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_23_10;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 104, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CCE4D4(uint64_t a1, char **a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v65, 0, 0);
  v4 = *v3;
  if (!v4)
    return;
  objc_opt_self(MPModelAlbum);
  v5 = swift_dynamicCastObjCClass(v4);
  if (v5)
    goto LABEL_3;
  objc_opt_self(MPModelPlaylist);
  v28 = swift_dynamicCastObjCClass(v4);
  if (!v28)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (!v5)
      return;
LABEL_3:
    v6 = (void *)v5;
    v7 = v4;
    if ((objc_msgSend(v6, "traits") & 0x10) != 0)
    {
      v8 = *a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_BCC9AC(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        *a2 = v8;
      }
      v10 = *((_QWORD *)v8 + 2);
      v11 = *((_QWORD *)v8 + 3);
      v12 = v10 + 1;
      if (v10 >= v11 >> 1)
      {
        v62 = v10 + 1;
        v50 = v8;
        v51 = *((_QWORD *)v8 + 2);
        v52 = sub_BCC9AC((char *)(v11 > 1), v10 + 1, 1, v50);
        v10 = v51;
        v12 = v62;
        v8 = v52;
        *a2 = v52;
      }
      *((_QWORD *)v8 + 2) = v12;
      v13 = &v8[16 * v10];
      *((_QWORD *)v13 + 4) = 0x736F6D7461;
      *((_QWORD *)v13 + 5) = 0xE500000000000000;
    }
    if ((objc_msgSend(v6, "traits", v62) & 4) != 0)
    {
      v14 = *a2;
      v15 = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_BCC9AC(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
        *a2 = v14;
      }
      v16 = *((_QWORD *)v14 + 2);
      v17 = *((_QWORD *)v14 + 3);
      v18 = v16 + 1;
      if (v16 >= v17 >> 1)
      {
        v63 = v16 + 1;
        v53 = v14;
        v54 = *((_QWORD *)v14 + 2);
        v55 = sub_BCC9AC((char *)(v17 > 1), v16 + 1, 1, v53);
        v16 = v54;
        v18 = v63;
        v14 = v55;
        *a2 = v55;
      }
      *((_QWORD *)v14 + 2) = v18;
      v19 = &v14[16 * v16];
      *((_QWORD *)v19 + 4) = 0x6C2D7365722D6968;
      *((_QWORD *)v19 + 5) = 0xEF7373656C73736FLL;
    }
    if ((objc_msgSend(v6, "traits", v63) & 2) == 0)
      goto LABEL_29;
    v20 = *a2;
    v21 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v20;
    if ((v21 & 1) == 0)
    {
      v20 = sub_BCC9AC(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
      *a2 = v20;
    }
    v22 = *((_QWORD *)v20 + 2);
    v23 = *((_QWORD *)v20 + 3);
    v24 = v22 + 1;
    if (v22 >= v23 >> 1)
    {
      v62 = v22 + 1;
      v56 = v20;
      v57 = *((_QWORD *)v20 + 2);
      v58 = sub_BCC9AC((char *)(v23 > 1), v22 + 1, 1, v56);
      v22 = v57;
      v24 = v62;
      v20 = v58;
      *a2 = v58;
    }
    *((_QWORD *)v20 + 2) = v24;
    v25 = &v20[16 * v22];
    v26 = 0x7373656C73736F6CLL;
    v27 = 0xE800000000000000;
    goto LABEL_28;
  }
  v6 = (void *)v28;
  v29 = v4;
  if ((objc_msgSend(v6, "traits") & 0x10) != 0)
  {
    v30 = *a2;
    v31 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v30;
    if ((v31 & 1) == 0)
    {
      v30 = sub_BCC9AC(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
      *a2 = v30;
    }
    v32 = *((_QWORD *)v30 + 2);
    v33 = *((_QWORD *)v30 + 3);
    v34 = v32 + 1;
    if (v32 >= v33 >> 1)
    {
      v62 = v32 + 1;
      v59 = v30;
      v60 = *((_QWORD *)v30 + 2);
      v61 = sub_BCC9AC((char *)(v33 > 1), v32 + 1, 1, v59);
      v32 = v60;
      v34 = v62;
      v30 = v61;
      *a2 = v61;
    }
    *((_QWORD *)v30 + 2) = v34;
    v25 = &v30[16 * v32];
    v26 = 0x736F6D7461;
    v27 = 0xE500000000000000;
LABEL_28:
    *((_QWORD *)v25 + 4) = v26;
    *((_QWORD *)v25 + 5) = v27;
  }
LABEL_29:
  if ((objc_msgSend(v6, "traits", v62) & 8) != 0)
  {
    v35 = *a2;
    v36 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v35;
    if ((v36 & 1) == 0)
    {
      v35 = sub_BCC9AC(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
      *a2 = v35;
    }
    v37 = *((_QWORD *)v35 + 2);
    v38 = *((_QWORD *)v35 + 3);
    v39 = v37 + 1;
    if (v37 >= v38 >> 1)
    {
      v64 = v37 + 1;
      v47 = v35;
      v48 = *((_QWORD *)v35 + 2);
      v49 = sub_BCC9AC((char *)(v38 > 1), v37 + 1, 1, v47);
      v37 = v48;
      v39 = v64;
      v35 = v49;
      *a2 = v49;
    }
    *((_QWORD *)v35 + 2) = v39;
    v40 = &v35[16 * v37];
    *((_QWORD *)v40 + 4) = 0x6C616974617073;
    *((_QWORD *)v40 + 5) = 0xE700000000000000;
  }
  if ((objc_msgSend(v6, "traits", v64) & 0x20) != 0)
  {
    v41 = *a2;
    v42 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v41;
    if ((v42 & 1) == 0)
    {
      v41 = sub_BCC9AC(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      *a2 = v41;
    }
    v44 = *((_QWORD *)v41 + 2);
    v43 = *((_QWORD *)v41 + 3);
    v45 = v44 + 1;
    if (v44 >= v43 >> 1)
    {
      v41 = sub_BCC9AC((char *)(v43 > 1), v45, 1, v41);
      *a2 = v41;
      v45 = v44 + 1;
    }
    *((_QWORD *)v41 + 2) = v45;
    v46 = &v41[16 * v44];
    *((_QWORD *)v46 + 4) = 0x646E756F72727573;
    *((_QWORD *)v46 + 5) = 0xE800000000000000;
  }

}

void ModelObjectBackedStoreItemMetadata.isBeats1.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5BF8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B5C20, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD56B8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_33_8;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 166, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.collectionName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5C70, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B5C98, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD56F0;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_43_6;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 181, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.collectionStoreID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  __n128 v8;
  char isEscapingClosureAtFileLocation;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t ObjectType;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD aBlock[6];
  void *v25;

  v25 = 0;
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_13B5CE8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v25;
  v5 = swift_allocObject(&unk_13B5D10, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_CD5728;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_AF944;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_53_4;
  v6 = _Block_copy(aBlock);
  v7 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 196, 49, 1, v8);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v10 = v25;
    if (!v25)
      goto LABEL_11;
    objc_opt_self(MPModelGenericObject);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v10;
      v14 = objc_msgSend(v12, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v15 = (void *)swift_dynamicCastObjCClass(v10);
      v16 = v10;
      if (!v15)
      {
LABEL_8:
        v17 = v10;
LABEL_9:
        ObjectType = swift_getObjectType();
        v19 = objc_msgSend(v17, "identifiers");
        v20 = sub_C27FD8(ObjectType, 2, 0, v19);
        v22 = v21;

        if (v22)
        {
          *(_QWORD *)(a1 + 24) = &type metadata for String;
          *(_QWORD *)a1 = v20;
          *(_QWORD *)(a1 + 8) = v22;
LABEL_12:
          v23 = v25;
          swift_release();

          return;
        }
LABEL_11:
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        goto LABEL_12;
      }
      v14 = objc_msgSend(v15, "innerObject");
    }
    v17 = v14;
    if (v17)
      goto LABEL_9;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_CCEEC8(uint64_t a1, void **a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  char **v6;
  id v7;
  void *v8;
  _BYTE v9[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v9, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = &selRef_album;
    }
    else
    {
      objc_opt_self(MPModelTVEpisode);
      v5 = (void *)swift_dynamicCastObjCClass(v4);
      if (!v5)
        return;
      v6 = &selRef_season;
    }
    v7 = objc_msgSend(v5, *v6);
    v8 = *a2;
    *a2 = v7;

  }
}

void ModelObjectBackedStoreItemMetadata.isCompilation.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5D60, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B5D88, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5740;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_63_8;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 214, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.composerName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5DD8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B5E00, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5778;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_73_3;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 229, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CCF244(uint64_t a1, uint64_t *a2, SEL *a3, SEL *a4)
{
  void **v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18[24];

  v7 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v18, 0, 0);
  v8 = *v7;
  if (v8)
  {
    objc_opt_self(MPModelSong);
    v9 = swift_dynamicCastObjCClass(v8);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = v8;
      v12 = objc_msgSend(v10, *a3);
      v13 = v12;
      if (v12)
      {
        v14 = objc_msgSend(v12, *a4);

        if (v14)
        {
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v13 = v16;

        }
        else
        {

          v15 = 0;
          v13 = 0;
        }
      }
      else
      {

        v15 = 0;
      }
      v17 = a2[1];
      *a2 = v15;
      a2[1] = (uint64_t)v13;
      swift_bridgeObjectRelease(v17);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.copyrightText.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5E50, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B5E78, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD57B0;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_83_0;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 244, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.curatorName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5EC8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B5EF0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD57F4;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_93_3;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 261, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CCF604(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v19, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelPlaylist);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "curator");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "name");
        if (v10)
        {
          v11 = v10;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

        }
        else
        {
          v15 = objc_msgSend(v9, "shortName");
          if (v15)
          {
            v16 = v15;
            v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
            v14 = v17;

          }
          else
          {

            v12 = 0;
            v14 = 0;
          }
        }
        v18 = a2[1];
        *a2 = v12;
        a2[1] = v14;
        swift_bridgeObjectRelease(v18);
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.descriptionText.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5F40, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B5F68, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD580C;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_103_0;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 278, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CCF8A8(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v20, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelMovie);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "descriptionText");
      if (!v8)
        goto LABEL_13;
    }
    else
    {
      objc_opt_self(MPModelPlaylist);
      v9 = swift_dynamicCastObjCClass(v4);
      if (v9)
      {
        v10 = (void *)v9;
        v7 = v4;
        v8 = objc_msgSend(v10, "descriptionText");
        if (!v8)
          goto LABEL_13;
      }
      else
      {
        objc_opt_self(MPModelTVEpisode);
        v11 = swift_dynamicCastObjCClass(v4);
        if (v11)
        {
          v12 = (void *)v11;
          v7 = v4;
          v8 = objc_msgSend(v12, "descriptionText");
          if (!v8)
          {
LABEL_13:

            v14 = 0;
            v16 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          objc_opt_self(MPModelTVSeason);
          v17 = swift_dynamicCastObjCClass(v4);
          if (!v17)
            return;
          v18 = (void *)v17;
          v7 = v4;
          v8 = objc_msgSend(v18, "descriptionText");
          if (!v8)
            goto LABEL_13;
        }
      }
    }
    v13 = v8;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v16 = v15;

LABEL_14:
    v19 = a2[1];
    *a2 = v14;
    a2[1] = v16;
    swift_bridgeObjectRelease(v19);
  }
}

void ModelObjectBackedStoreItemMetadata.discCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B5FB8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B5FE0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5824;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_113_0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 299, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.discNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6030, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6058, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD585C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_123_1;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 314, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.duration.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B60A8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B60D0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5894;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_133_2;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 329, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CCFEBC(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelMovie);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5
      || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0)
      || (objc_opt_self(MPModelTVEpisode), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      objc_msgSend(v5, "duration");
      *a2 = v6;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.editorNotes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6120, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B6148, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD58AC;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_143_1;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 348, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD00C0(uint64_t a1, uint64_t *a2, SEL *a3)
{
  void **v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22[24];

  v5 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v22, 0, 0);
  v6 = *v5;
  if (v6)
  {
    objc_opt_self(MPModelAlbum);
    v7 = swift_dynamicCastObjCClass(v6);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = v6;
      v10 = objc_msgSend(v8, *a3);
      if (!v10)
        goto LABEL_13;
    }
    else
    {
      objc_opt_self(MPModelCurator);
      v11 = swift_dynamicCastObjCClass(v6);
      if (v11)
      {
        v12 = (void *)v11;
        v9 = v6;
        v10 = objc_msgSend(v12, *a3);
        if (!v10)
          goto LABEL_13;
      }
      else
      {
        objc_opt_self(MPModelPlaylist);
        v13 = swift_dynamicCastObjCClass(v6);
        if (v13)
        {
          v14 = (void *)v13;
          v9 = v6;
          v10 = objc_msgSend(v14, *a3);
          if (!v10)
          {
LABEL_13:

            v16 = 0;
            v18 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          objc_opt_self(MPModelRadioStation);
          v19 = swift_dynamicCastObjCClass(v6);
          if (!v19)
            return;
          v20 = (void *)v19;
          v9 = v6;
          v10 = objc_msgSend(v20, *a3);
          if (!v10)
            goto LABEL_13;
        }
      }
    }
    v15 = v10;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v18 = v17;

LABEL_14:
    v21 = a2[1];
    *a2 = v16;
    a2[1] = v18;
    swift_bridgeObjectRelease(v21);
  }
}

void ModelObjectBackedStoreItemMetadata.shortEditorNotes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6198, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B61C0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD58DC;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_153_1;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 369, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.episodeCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6210, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6238, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD590C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_163_1;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 392, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.explicitRating.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6288, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B62B0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5944;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_173_0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 407, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD0698(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelMovie);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5 || (objc_opt_self(MPModelTVEpisode), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
      *a2 = objc_msgSend(v5, "explicitRating");
  }
}

void ModelObjectBackedStoreItemMetadata.genreNames.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD aBlock[6];
  id v18;

  v18 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6300, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v18;
  v3 = swift_allocObject(&unk_13B6328, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD595C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_183_3;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 424, 49, 1, v6);
  *(_QWORD *)&v8 = swift_release().n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v18)
    {
      v9 = objc_msgSend(v18, "name", v8);
      v10 = v9;
      if (v9)
      {
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBE8);
        v15 = swift_allocObject(v14, 64, 7);
        *(_OWORD *)(v15 + 16) = xmmword_105B360;
        *(_QWORD *)(v15 + 56) = &type metadata for String;
        *(_QWORD *)(v15 + 32) = v11;
        *(_QWORD *)(v15 + 40) = v13;
      }
    }
    v16 = v18;
    swift_release();

  }
}

void sub_CD0948(uint64_t a1, void **a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  _BYTE v8[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v8, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5
      || (objc_opt_self(MPModelArtist), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0)
      || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      v6 = objc_msgSend(v5, "genre");
      v7 = *a2;
      *a2 = v6;

    }
  }
}

void ModelObjectBackedStoreItemMetadata.handle.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6378, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B63A0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5974;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_193_1;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 447, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.hasArtistBiography.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B63F0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6418, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD59AC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_203_2;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 462, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.hasLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6468, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6490, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD59E4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_213_0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 477, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD0E44(uint64_t a1, unsigned __int8 *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "lyrics");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "hasStoreLyrics");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.hasTimeSyncedLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B64E0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6508, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD59FC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_223_0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 494, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD1084(uint64_t a1, unsigned __int8 *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "lyrics");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "hasTimeSyncedLyrics");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.hasSocialPosts.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6558, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6580, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5A14;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_233;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 508, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD12B8(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelArtist);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5 || (objc_opt_self(MPModelCurator), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
      *a2 = objc_msgSend(v5, "hasSocialPosts");
  }
}

void ModelObjectBackedStoreItemMetadata.isExplicitContent.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B65D0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B65F8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5A2C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_243_0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 525, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD14C0(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  char **v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (!v5)
    {
      objc_opt_self(MPModelRadioStation);
      v5 = (void *)swift_dynamicCastObjCClass(v4);
      if (!v5)
      {
        objc_opt_self(MPModelSong);
        v5 = (void *)swift_dynamicCastObjCClass(v4);
        if (v5)
        {
          v6 = &selRef_isExplicitSong;
          goto LABEL_5;
        }
        objc_opt_self(MPModelTVSeason);
        v5 = (void *)swift_dynamicCastObjCClass(v4);
        if (!v5)
          return;
      }
    }
    v6 = &selRef_hasExplicitContent;
LABEL_5:
    *a2 = objc_msgSend(v5, *v6);
  }
}

void ModelObjectBackedStoreItemMetadata.isMasteredForiTunes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6648, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6670, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5A44;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_253;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 546, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD1714(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5 || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
      *a2 = objc_msgSend(v5, "traits") & 1;
  }
}

void ModelObjectBackedStoreItemMetadata.isPreorder.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B66C0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B66E8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5A5C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_263;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 563, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.isPrivatePerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6738, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6760, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5A94;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_273_1;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 578, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.isVerifiedPerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B67B0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B67D8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5ACC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_283;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 593, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.isOnboardedPerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6828, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6850, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5B04;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_293;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 608, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD1D7C(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSocialPerson);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5)
      *a2 = objc_msgSend(v5, "hasLightweightProfile") ^ 1;
  }
}

void ModelObjectBackedStoreItemMetadata.itemKind.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B68A0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B68C8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5B1C;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_303;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 623, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD1F4C(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  char v29[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v29, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindAlbum;
LABEL_6:
      *a2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v5);
      a2[1] = v6;
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    }
    objc_opt_self(MPModelArtist);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindArtist;
      goto LABEL_6;
    }
    objc_opt_self(MPModelCurator);
    v7 = swift_dynamicCastObjCClass(v4);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = v4;
      v10 = objc_msgSend(v8, "curatorKind");
      switch((unint64_t)v10)
      {
        case 0uLL:

          return;
        case 1uLL:
          v11 = &MPStoreItemMetadataItemKindiTunesBrand;
          goto LABEL_20;
        case 2uLL:
          v11 = &MPStoreItemMetadataItemKindBrand;
          goto LABEL_20;
        case 3uLL:
          v11 = &MPStoreItemMetadataItemKindActivity;
          goto LABEL_20;
        case 4uLL:
          v11 = &MPStoreItemMetadataItemKindEditorial;
LABEL_20:
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v11);
          v14 = v13;

          goto LABEL_21;
        default:
          v27 = 0;
          v28 = 0xE000000000000000;
          v21 = v10;
          _StringGuts.grow(_:)(24);
          v22._countAndFlagsBits = 0xD000000000000013;
          v22._object = (void *)0x80000000010C7B40;
          String.append(_:)(v22);
          v23._object = (void *)0x80000000011078D0;
          v23._countAndFlagsBits = 0xD000000000000012;
          String.append(_:)(v23);
          v24._countAndFlagsBits = 32;
          v24._object = (void *)0xE100000000000000;
          String.append(_:)(v24);
          v26 = v21;
          type metadata accessor for MPModelCuratorKind(0);
          _print_unlocked<A, B>(_:_:)(&v26, &v27, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v27, v28, "MusicCore/ModelObjectBackedStoreItemMetadata.swift", 50, 2, 644, 0);
          __break(1u);
          return;
      }
    }
    objc_opt_self(MPModelMovie);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindMovie;
      goto LABEL_6;
    }
    objc_opt_self(MPModelPlaylist);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindPlaylist;
      goto LABEL_6;
    }
    objc_opt_self(MPModelSocialPerson);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindSocialProfile;
      goto LABEL_6;
    }
    objc_opt_self(MPModelRadioStation);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindRadioStation;
      goto LABEL_6;
    }
    objc_opt_self(MPModelSong);
    v15 = swift_dynamicCastObjCClass(v4);
    if (v15)
    {
      v16 = (void *)v15;
      v9 = v4;
      v17 = objc_msgSend(v16, "isArtistUploadedContent");
      v18 = objc_msgSend(v16, "hasVideo");
      if (v17)
      {
        if (v18)
          v19 = &MPStoreItemMetadataItemKindUploadedVideo;
        else
          v19 = &MPStoreItemMetadataItemKindUploadedAudio;
      }
      else if (v18)
      {
        v19 = &MPStoreItemMetadataItemKindMusicVideo;
      }
      else
      {
        v19 = &MPStoreItemMetadataItemKindSong;
      }
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v19);
      v14 = v20;
LABEL_21:

      *a2 = v12;
      a2[1] = v14;
      goto LABEL_7;
    }
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVEpisode;
      goto LABEL_6;
    }
    objc_opt_self(MPModelTVSeason);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVSeason;
      goto LABEL_6;
    }
    objc_opt_self(MPModelTVShow);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVShow;
      goto LABEL_6;
    }
    objc_opt_self(MPModelRecordLabel);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindRecordLabel;
      goto LABEL_6;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.lastModifiedDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __n128 v12;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_13B6918, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_13B6940, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_CD5B34;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_AF944;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_313;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 688, 49, 1, v12);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_5C090((uint64_t)v5, a1, &qword_14FDE40);
    swift_release();
  }
}

void sub_CD2540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void **v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v31 = a2;
  v30 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500098);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DateComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - v17;
  v19 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v19, v32, 0, 0);
  v20 = *v19;
  if (v20)
  {
    objc_opt_self(MPModelPlaylist);
    v21 = swift_dynamicCastObjCClass(v20);
    if (v21)
    {
      v22 = (void *)v21;
      v23 = v20;
      v24 = objc_msgSend(v22, "lastModifiedDateComponents");
      if (v24)
      {
        v26 = v24;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

        v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v27(v11, v15, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v27(v18, v11, v12);
          v28 = objc_msgSend((id)objc_opt_self(MPStoreItemMetadata), "storeServerCalendar");
          static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

          Calendar.date(from:)(v18);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v30);
          (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
          sub_5C1F4((uint64_t)v8, v31, &qword_14FDE40);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }

      sub_56024((uint64_t)v11, &qword_1500098);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.movementCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6990, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B69B8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5B4C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_323;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 699, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.movementName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6A08, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B6A30, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5B84;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_333;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 714, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.movementNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6A80, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6AA8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5BBC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_343;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 729, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.name.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6AF8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B6B20, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5BF4;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_353;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 744, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD2D8C(uint64_t a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _BYTE v37[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v37, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "title");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelArtist);
    v9 = swift_dynamicCastObjCClass(v4);
    if (v9)
    {
      v10 = (void *)v9;
      v7 = v4;
      v8 = objc_msgSend(v10, "name");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelCurator);
    v11 = swift_dynamicCastObjCClass(v4);
    if (v11)
    {
      v12 = (void *)v11;
      v7 = v4;
      v8 = objc_msgSend(v12, "name");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelMovie);
    v13 = swift_dynamicCastObjCClass(v4);
    if (v13)
    {
      v14 = (void *)v13;
      v7 = v4;
      v8 = objc_msgSend(v14, "title");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelPlaylist);
    v15 = swift_dynamicCastObjCClass(v4);
    if (v15)
    {
      v16 = (void *)v15;
      v7 = v4;
      v8 = objc_msgSend(v16, "name");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelSocialPerson);
    v17 = swift_dynamicCastObjCClass(v4);
    if (v17)
    {
      v18 = (void *)v17;
      v7 = v4;
      v8 = objc_msgSend(v18, "name");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelRadioStation);
    v19 = swift_dynamicCastObjCClass(v4);
    if (v19)
    {
      v20 = (void *)v19;
      v7 = v4;
      v8 = objc_msgSend(v20, "name");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelSong);
    v21 = swift_dynamicCastObjCClass(v4);
    if (v21)
    {
      v22 = (void *)v21;
      v7 = v4;
      v8 = objc_msgSend(v22, "title");
      if (!v8)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelTVEpisode);
    v23 = swift_dynamicCastObjCClass(v4);
    if (v23)
    {
      v24 = (void *)v23;
      v7 = v4;
      v8 = objc_msgSend(v24, "title");
      if (v8)
      {
LABEL_28:
        v25 = v8;
        v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v28 = v27;

LABEL_40:
        v36 = a2[1];
        *a2 = v26;
        a2[1] = v28;
        swift_bridgeObjectRelease(v36);
        return;
      }
    }
    else
    {
      objc_opt_self(MPModelTVSeason);
      v29 = swift_dynamicCastObjCClass(v4);
      if (!v29)
      {
        objc_opt_self(MPModelTVShow);
        v34 = swift_dynamicCastObjCClass(v4);
        if (!v34)
          return;
        v35 = (void *)v34;
        v7 = v4;
        v8 = objc_msgSend(v35, "title");
        if (!v8)
          goto LABEL_38;
        goto LABEL_28;
      }
      v30 = (void *)v29;
      v7 = v4;
      v31 = objc_msgSend(v30, "show");
      v26 = v31;
      if (!v31)
      {

LABEL_39:
        v28 = 0;
        goto LABEL_40;
      }
      v32 = objc_msgSend(v31, "title");

      if (v32)
      {
        v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v28 = v33;

        goto LABEL_40;
      }

    }
LABEL_38:

    v26 = 0;
    goto LABEL_39;
  }
}

void ModelObjectBackedStoreItemMetadata.nameRaw.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6B70, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B6B98, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5C0C;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_363;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 779, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_CD3300(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(_QWORD), uint64_t (*a6)(void))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  a4();

  v14 = a5(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
  {
    v16 = (void *)a6();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  return v16;
}

void ModelObjectBackedStoreItemMetadata.releaseDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __n128 v12;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_13B6BE8, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_13B6C10, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_CD5C44;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_AF944;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_373_0;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 794, 49, 1, v12);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_5C090((uint64_t)v5, a1, &qword_14FDE40);
    swift_release();
  }
}

void sub_CD3584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void **v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  double v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  double v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  double v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  double v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76[24];

  v75 = a2;
  v3 = type metadata accessor for DateComponents(0);
  v74 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v73 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500098);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v71 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v17);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v71 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v71 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v71 - v27;
  v29 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v29, v76, 0, 0);
  v30 = *v29;
  if (v30)
  {
    v72 = v3;
    objc_opt_self(MPModelAlbum);
    v31 = swift_dynamicCastObjCClass(v30);
    if (v31)
    {
      v32 = (void *)v31;
      v33 = v30;
      v34 = objc_msgSend(v32, "releaseDateComponents");
      if (v34)
      {
        v36 = v34;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

        v37 = 0;
      }
      else
      {
        v37 = 1;
      }
      v45 = v72;
      v46 = v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v13, v37, 1, v72);
      sub_5C090((uint64_t)v13, (uint64_t)v16, &qword_1500098);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v16, 1, v45))
      {

        sub_56024((uint64_t)v16, &qword_1500098);
        v47 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v28, 1, 1, v47);
      }
      else
      {
        v48 = v73;
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v73, v16, v45);
        v49 = sub_56024((uint64_t)v16, &qword_1500098);
        DateComponents.date.getter(v49);

        (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
      }
    }
    else
    {
      objc_opt_self(MPModelPlaylist);
      v38 = swift_dynamicCastObjCClass(v30);
      if (v38)
      {
        v39 = (void *)v38;
        v40 = v30;
        v41 = objc_msgSend(v39, "releaseDateComponents");
        if (v41)
        {
          v43 = v41;
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);

          v44 = 0;
        }
        else
        {
          v44 = 1;
        }
        v57 = v72;
        v58 = v74;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v7, v44, 1, v72);
        sub_5C090((uint64_t)v7, (uint64_t)v10, &qword_1500098);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v10, 1, v57))
        {

          sub_56024((uint64_t)v10, &qword_1500098);
          v59 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v25, 1, 1, v59);
        }
        else
        {
          v60 = v73;
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v73, v10, v57);
          v61 = sub_56024((uint64_t)v10, &qword_1500098);
          DateComponents.date.getter(v61);

          (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
        }
        v28 = v25;
      }
      else
      {
        objc_opt_self(MPModelTVEpisode);
        v50 = swift_dynamicCastObjCClass(v30);
        if (v50)
        {
          v51 = (void *)v50;
          v52 = v30;
          v53 = objc_msgSend(v51, "releaseDate");
          if (v53)
          {
            v55 = v53;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v53, v54);

            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v22, 0, 1, v56);
          }
          else
          {

            v69 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v22, 1, 1, v69);
          }
          v28 = v22;
        }
        else
        {
          objc_opt_self(MPModelMovie);
          v62 = swift_dynamicCastObjCClass(v30);
          if (!v62)
            return;
          v63 = (void *)v62;
          v64 = v30;
          v65 = objc_msgSend(v63, "releaseDate");
          if (v65)
          {
            v67 = v65;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v65, v66);

            v68 = type metadata accessor for Date(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v19, 0, 1, v68);
          }
          else
          {

            v70 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v19, 1, 1, v70);
          }
          v28 = v19;
        }
      }
    }
    sub_5C1F4((uint64_t)v28, v75, &qword_14FDE40);
  }
}

id sub_CD3B4C(void *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr))
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[3];
  uint64_t v14;

  v4 = a1;
  a3(v13);

  v5 = v14;
  if (!v14)
    return 0;
  v6 = __swift_project_boxed_opaque_existential_1(v13, v14);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v10, v8);
  v11 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return v11;
}

void ModelObjectBackedStoreItemMetadata.socialProfileID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  __n128 v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[6];
  _OWORD v11[2];

  memset(v11, 0, sizeof(v11));
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_13B6C60, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v11;
  v5 = swift_allocObject(&unk_13B6C88, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_CD5C5C;
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = sub_AF944;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_3A1A94;
  v10[3] = &block_descriptor_383_0;
  v6 = _Block_copy(v10);
  v7 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 814, 49, 1, v8);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_5C090((uint64_t)v11, a1, &qword_14FF2A0);
    swift_release();
  }
}

void sub_CD3D84(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  __int128 v10;
  __int128 v11;
  _BYTE v12[24];

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v12, 0, 0);
  v5 = *v4;
  if (v5)
  {
    objc_opt_self(MPModelSocialPerson);
    if (swift_dynamicCastObjCClass(v5))
    {
      v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
      swift_beginAccess(v6, v9, 0, 0);
      v7 = v6[1];
      if (v7)
      {
        v8 = *v6;
        *((_QWORD *)&v11 + 1) = &type metadata for String;
        *(_QWORD *)&v10 = v8;
        *((_QWORD *)&v10 + 1) = v7;
      }
      else
      {
        v10 = 0u;
        v11 = 0u;
      }
      swift_bridgeObjectRetain();
      sub_5C1F4((uint64_t)&v10, a2, &qword_14FF2A0);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.seasonNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6CD8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6D00, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5C74;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_393;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 829, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD3FCC(uint64_t a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelTVEpisode);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "season");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "number");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.shortName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6D50, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B6D78, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5C8C;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_403;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 846, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD41EC(uint64_t a1, uint64_t *a2, _QWORD *a3, SEL *a4, _QWORD *a5, SEL *a6)
{
  void **v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[24];

  v11 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v29, 0, 0);
  v12 = *v11;
  if (v12)
  {
    objc_opt_self(*a3);
    v13 = swift_dynamicCastObjCClass(v12);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = v12;
      v16 = objc_msgSend(v14, *a4);
      if (v16)
      {
        v17 = v16;
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        v20 = v19;

      }
      else
      {

        v18 = 0;
        v20 = 0;
      }
      v28 = a2[1];
      *a2 = v18;
    }
    else
    {
      objc_opt_self(*a5);
      v21 = swift_dynamicCastObjCClass(v12);
      if (!v21)
        return;
      v22 = (void *)v21;
      v23 = v12;
      v24 = objc_msgSend(v22, *a6);
      if (v24)
      {
        v25 = v24;
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v20 = v27;

      }
      else
      {

        v26 = 0;
        v20 = 0;
      }
      v28 = a2[1];
      *a2 = v26;
    }
    a2[1] = v20;
    swift_bridgeObjectRelease(v28);
  }
}

void ModelObjectBackedStoreItemMetadata.shortURL.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __n128 v12;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_13B6DC8, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_13B6DF0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_CD5CD4;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_AF944;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_413_1;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 863, 49, 1, v12);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_5C090((uint64_t)v5, a1, &qword_14FAC20);
    swift_release();
  }
}

void ModelObjectBackedStoreItemMetadata.showComposer.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6E40, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6E68, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5D04;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_423;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 878, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD4684(uint64_t a1, _BYTE *a2, _QWORD *a3, SEL *a4)
{
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  _BYTE v10[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v10, 0, 0);
  v8 = *v7;
  if (v8)
  {
    objc_opt_self(*a3);
    v9 = (void *)swift_dynamicCastObjCClass(v8);
    if (v9)
      *a2 = objc_msgSend(v9, *a4);
  }
}

uint64_t ModelObjectBackedStoreItemMetadata.storeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v3, v7, 0, 0);
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    *(_QWORD *)(a1 + 24) = &type metadata for String;
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_bridgeObjectRetain();
}

void ModelObjectBackedStoreItemMetadata.isStoreRedownloadable.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6EB8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6EE0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5D3C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_433;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 897, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD4964(uint64_t a1, _BYTE *a2)
{
  void **v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  char v12;
  _BYTE v13[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v13, 0, 0);
  v4 = *v3;
  if (v4)
  {
    ObjectType = swift_getObjectType();
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
    if (v6)
      v7 = v6;
    else
      v7 = 0;
    if (v6)
      v8 = v4;
    else
      v8 = 0;
    if (v8)
    {
      v9 = swift_getObjectType();
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
      v11 = v4;
      v12 = v10(v9, v7);

      *a2 = v12 & 1;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.trackCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6F30, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6F58, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5D54;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_443;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 907, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD4B98(uint64_t a1, _QWORD *a2, _QWORD *a3, SEL *a4)
{
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  _BYTE v10[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v10, 0, 0);
  v8 = *v7;
  if (v8)
  {
    objc_opt_self(*a3);
    v9 = (void *)swift_dynamicCastObjCClass(v8);
    if (v9)
      *a2 = objc_msgSend(v9, *a4);
  }
}

void ModelObjectBackedStoreItemMetadata.trackNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v9;

  v9 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B6FA8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v9;
  v3 = swift_allocObject(&unk_13B6FD0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5D8C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_AF944;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_453;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 922, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD4D8C(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  char **v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = &selRef_trackNumber;
    }
    else
    {
      objc_opt_self(MPModelTVEpisode);
      v5 = (void *)swift_dynamicCastObjCClass(v4);
      if (!v5)
        return;
      v6 = &selRef_episodeNumber;
    }
    *a2 = objc_msgSend(v5, *v6);
  }
}

void ModelObjectBackedStoreItemMetadata.url.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __n128 v12;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_13B7020, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_13B7048, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_CD5DA4;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_AF944;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_463;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 939, 49, 1, v12);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_5C090((uint64_t)v5, a1, &qword_14FAC20);
    swift_release();
  }
}

void sub_CD5004(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v9, v19, 0, 0);
  v10 = *v9;
  if (v10)
  {
    objc_opt_self(MPModelPlaylist);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v10;
      v14 = objc_msgSend(v12, *a3);
      if (v14)
      {
        v15 = v14;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

        v16 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
      }
      else
      {

        v17 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
      }
      sub_5C1F4((uint64_t)v8, a2, &qword_14FAC20);
    }
  }
}

id sub_CD5168(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void ModelObjectBackedStoreItemMetadata.workName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  __n128 v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[6];
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_13B7098, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v9;
  v3 = swift_allocObject(&unk_13B70C0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_CD5DD4;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_AF944;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_473;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 954, 49, 1, v6);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_CD5318(uint64_t a1, uint64_t *a2, _QWORD *a3, SEL *a4)
{
  void **v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v7 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v18, 0, 0);
  v8 = *v7;
  if (v8)
  {
    objc_opt_self(*a3);
    v9 = swift_dynamicCastObjCClass(v8);
    if (v9)
    {
      v10 = (void *)v9;
      v11 = v8;
      v12 = objc_msgSend(v10, *a4);
      if (v12)
      {
        v13 = v12;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

      }
      else
      {

        v14 = 0;
        v16 = 0;
      }
      v17 = a2[1];
      *a2 = v14;
      a2[1] = v16;
      swift_bridgeObjectRelease(v17);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.ModelObjectBackedStoreItemMetadata", 44, "init()", 6, 0);
  __break(1u);
}

id ModelObjectBackedStoreItemMetadata.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ModelObjectBackedStoreItemMetadata()
{
  return objc_opt_self(_TtC9MusicCore34ModelObjectBackedStoreItemMetadata);
}

id sub_CD54D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSDictionary v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  objc_class *v15;
  id v16;
  objc_super v18;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v10 = &v4[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_C4DCB4(a3, (uint64_t)v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  v15 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v18.receiver = v4;
  v18.super_class = v15;
  v16 = objc_msgSendSuper2(&v18, "initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:", v11.super.isa, a2, isa);

  sub_56024(a3, &qword_14FDE40);
  return v16;
}

uint64_t sub_CD5634()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5658()
{
  uint64_t v0;

  sub_CCDD04(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_CD5660()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_298(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_CD5688()
{
  uint64_t v0;

  sub_CCE1D4(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_CD5690()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD56A0()
{
  uint64_t v0;

  sub_CCE4D4(*(_QWORD *)(v0 + 16), *(char ***)(v0 + 24));
}

uint64_t sub_CD56A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD56B8()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelRadioStation_ptr, (SEL *)&selRef_isBeats1);
}

uint64_t sub_CD56E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD56F0()
{
  uint64_t v0;

  sub_CCF244(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_album, (SEL *)&selRef_title);
}

uint64_t sub_CD5718()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5728()
{
  uint64_t v0;

  sub_CCEEC8(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_CD5730()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5740()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_isCompilation);
}

uint64_t sub_CD5768()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5778()
{
  uint64_t v0;

  sub_CCF244(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_composer, (SEL *)&selRef_name);
}

uint64_t sub_CD57A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD57B0()
{
  uint64_t v0;

  sub_CD41EC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_copyrightText, MPModelSong_ptr, (SEL *)&selRef_copyrightText);
}

uint64_t sub_CD57E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD57F4()
{
  uint64_t v0;

  sub_CCF604(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_CD57FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD580C()
{
  uint64_t v0;

  sub_CCF8A8(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_CD5814()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5824()
{
  uint64_t v0;

  sub_CD4B98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_discCount);
}

uint64_t sub_CD584C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD585C()
{
  uint64_t v0;

  sub_CD4B98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_discNumber);
}

uint64_t sub_CD5884()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5894()
{
  uint64_t v0;

  sub_CCFEBC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_CD589C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD58AC()
{
  uint64_t v0;

  sub_CD00C0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_editorNotes);
}

uint64_t sub_CD58CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD58DC()
{
  uint64_t v0;

  sub_CD00C0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_shortEditorNotes);
}

uint64_t sub_CD58FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD590C()
{
  uint64_t v0;

  sub_CD4B98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelTVShow_ptr, (SEL *)&selRef_episodesCount);
}

uint64_t sub_CD5934()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5944()
{
  uint64_t v0;

  sub_CD0698(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_CD594C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD595C()
{
  uint64_t v0;

  sub_CD0948(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_CD5964()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5974()
{
  uint64_t v0;

  sub_CD5318(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_handle);
}

uint64_t sub_CD599C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD59AC()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelArtist_ptr, (SEL *)&selRef_hasBiography);
}

uint64_t sub_CD59D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD59E4()
{
  uint64_t v0;

  sub_CD0E44(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_CD59EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD59FC()
{
  uint64_t v0;

  sub_CD1084(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_CD5A04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5A14()
{
  uint64_t v0;

  sub_CD12B8(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_CD5A1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5A2C()
{
  uint64_t v0;

  sub_CD14C0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_CD5A34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5A44()
{
  uint64_t v0;

  sub_CD1714(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_CD5A4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5A5C()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_isPreorder);
}

uint64_t sub_CD5A84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5A94()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_isPrivate);
}

uint64_t sub_CD5ABC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5ACC()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_isVerified);
}

uint64_t sub_CD5AF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5B04()
{
  uint64_t v0;

  sub_CD1D7C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_CD5B0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5B1C()
{
  uint64_t v0;

  sub_CD1F4C(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_CD5B24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5B34()
{
  uint64_t v0;

  sub_CD2540(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_CD5B3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5B4C()
{
  uint64_t v0;

  sub_CD4B98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovementCount);
}

uint64_t sub_CD5B74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5B84()
{
  uint64_t v0;

  sub_CD5318(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovement);
}

uint64_t sub_CD5BAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5BBC()
{
  uint64_t v0;

  sub_CD4B98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovementNumber);
}

uint64_t sub_CD5BE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5BF4()
{
  uint64_t v0;

  sub_CD2D8C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_CD5BFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5C0C()
{
  uint64_t v0;

  sub_CD5318(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_uncensoredName);
}

uint64_t sub_CD5C34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5C44()
{
  uint64_t v0;

  sub_CD3584(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_CD5C4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5C5C()
{
  uint64_t v0;

  sub_CD3D84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_CD5C64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5C74()
{
  uint64_t v0;

  sub_CD3FCC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_CD5C7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5C8C()
{
  uint64_t v0;

  sub_CD41EC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelCurator_ptr, (SEL *)&selRef_shortName, MPModelTVShow_ptr, (SEL *)&selRef_shortTitle);
}

uint64_t sub_CD5CC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5CD4()
{
  uint64_t v0;

  sub_CD5004(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_shareShortURL);
}

uint64_t sub_CD5CF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5D04()
{
  uint64_t v0;

  sub_CD4684(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_shouldShowComposer);
}

uint64_t sub_CD5D2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5D3C()
{
  uint64_t v0;

  sub_CD4964(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_CD5D44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5D54()
{
  uint64_t v0;

  sub_CD4B98(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_trackCount);
}

uint64_t sub_CD5D7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5D8C()
{
  uint64_t v0;

  sub_CD4D8C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_CD5D94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5DA4()
{
  uint64_t v0;

  sub_CD5004(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_shareURL);
}

uint64_t sub_CD5DC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CD5DD4()
{
  uint64_t v0;

  sub_CD5318(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalWork);
}

uint64_t sub_CD5DFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t MotionMode.allowsMotion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  int v9;
  uint64_t result;
  id v11;
  id v12;
  unint64_t v13;
  Swift::String v14;
  void *object;
  unint64_t v16;
  unint64_t v17;

  v1 = type metadata accessor for MotionMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v16 - v6;
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v8((char *)&v16 - v6, v0, v1);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v9 == enum case for MotionMode.off(_:))
    return 0;
  if (v9 == enum case for MotionMode.wifiOnly(_:))
  {
    v11 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v12 = objc_msgSend(v11, "networkType");

    return ICEnvironmentNetworkTypeIsWiFi(v12);
  }
  else if (v9 == enum case for MotionMode.on(_:))
  {
    return 1;
  }
  else
  {
    v8(v5, v0, v1);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v17);
    v16 = 0xD00000000000001ELL;
    v17 = 0x8000000001107910;
    v13 = sub_CD6224();
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v13);
    object = v14._object;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "MusicCore/MotionMode.swift", 26, 2, 18, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_CD6224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15000A0;
  if (!qword_15000A0)
  {
    v1 = type metadata accessor for MotionMode(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MotionMode, v1);
    atomic_store(result, (unint64_t *)&qword_15000A0);
  }
  return result;
}

uint64_t sub_CD626C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (**v27)(uint64_t *);
  _QWORD v29[3];
  double v30;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000B0);
  __chkstk_darwin(v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Edge.Set.top.getter(v11);
  *(double *)&v29[1] = a4;
  v29[2] = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000B8);
  v14 = State.wrappedValue.getter(&v30, v13);
  v15 = EdgeInsets.init(_all:)(v14, v30 * -0.5);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v10, a1, v22);
  v23 = &v10[*(int *)(v8 + 36)];
  *v23 = v12;
  *((double *)v23 + 1) = v15;
  *((_QWORD *)v23 + 2) = v17;
  *((_QWORD *)v23 + 3) = v19;
  *((_QWORD *)v23 + 4) = v21;
  v23[40] = 0;
  v24 = sub_CD6790();
  v25 = swift_allocObject(&unk_13B7190, 32, 7);
  *(double *)(v25 + 16) = a4;
  *(_QWORD *)(v25 + 24) = a2;
  sub_CD6ABC((uint64_t)v10, a3);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000C8);
  *(_QWORD *)(a3 + *(int *)(v26 + 52)) = v24;
  v27 = (void (**)(uint64_t *))(a3 + *(int *)(v26 + 56));
  *v27 = sub_CD6AB0;
  v27[1] = (void (*)(uint64_t *))v25;
  swift_retain();
  return sub_56024((uint64_t)v10, &qword_15000B0);
}

void sub_CD6400(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  v5 = *a1;
  v6 = static Animation.easeInOut(duration:)(0.25);
  *(double *)&v7[2] = a3;
  v7[3] = a2;
  v7[4] = v5;
  withAnimation<A>(_:_:)(v6, sub_CD6B04, v7, (char *)&type metadata for () + 8);
  swift_release();
}

uint64_t sub_CD647C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_CD626C(a1, *(_QWORD *)(v2 + 8), a2, *(double *)v2);
}

uint64_t View.keyboardReactive()(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __chkstk_darwin(a1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v7 = 0;
  State.init(wrappedValue:)(&v8, &v7, &type metadata for CGFloat);
  return ModifiedContent.init(content:modifier:)(v3, &v8, a1, &type metadata for KeyboardObserverModifier);
}

uint64_t sub_CD653C(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for KeyboardObserverModifier);
  sub_CD6590();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_CD6590()
{
  unint64_t result;

  result = qword_15000A8;
  if (!qword_15000A8)
  {
    result = swift_getWitnessTable(&unk_10A20DC, &type metadata for KeyboardObserverModifier);
    atomic_store(result, (unint64_t *)&qword_15000A8);
  }
  return result;
}

_QWORD *assignWithCopy for KeyboardObserverModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a1[1];
  v4 = a2[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

_QWORD *assignWithTake for KeyboardObserverModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a1[1];
  a1[1] = a2[1];
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardObserverModifier()
{
  return &type metadata for KeyboardObserverModifier;
}

uint64_t sub_CD665C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_120B0BC, 1);
}

void sub_CD666C(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  *a2 = sub_CD6694(a1);
}

CGFloat sub_CD6694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD v8[2];
  CGRect v9;
  __int128 v10;
  __int128 v11;

  v1 = Notification.userInfo.getter(a1);
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_10:
    sub_56024((uint64_t)&v10, &qword_14FF2A0);
    return 0.0;
  }
  v2 = v1;
  v8[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v8[1] = v3;
  AnyHashable.init<A>(_:)(v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_21BFA0((uint64_t)&v9), (v5 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_55E40((uint64_t)&v9);
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_10;
  _s3__C6CGRectVMa_0(0);
  if ((swift_dynamicCast(&v9, &v10, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    return CGRectGetHeight(v9);
  return 0.0;
}

uint64_t sub_CD6790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000D0);
  v1 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  v36 = v1;
  __chkstk_darwin(v0);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000D8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  v14 = (void *)objc_opt_self(NSNotificationCenter);
  v15 = objc_msgSend(v14, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillShowNotification, 0);

  v16 = sub_CD6B5C();
  Publisher.map<A>(_:)(sub_CD666C, 0, v3, &type metadata for CGFloat, v16);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  v18 = objc_msgSend(v14, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillHideNotification, 0);

  Publisher.map<A>(_:)(sub_49680, 0, v3, &type metadata for CGFloat, v16);
  v17(v6, v3);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000E8);
  v20 = *(_QWORD *)(v8 + 72);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v19, v22 + 2 * v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_105F890;
  v24 = v23 + v22;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 16);
  v25(v24, v13, v7);
  v25(v24 + v20, v10, v7);
  v26 = sub_5C150(&qword_15000F0, &qword_15000D8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v27 = v34;
  Publishers.MergeMany.init(_:)(v23, v7, v26);
  v28 = sub_5C150(&qword_15000F8, &qword_15000D0, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
  v29 = v35;
  v30 = Publisher.eraseToAnyPublisher()(v35, v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v29);
  v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v10, v7);
  v31(v13, v7);
  return v30;
}

uint64_t sub_CD6A8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_CD6AB0(uint64_t *a1)
{
  uint64_t v1;

  sub_CD6400(a1, *(_QWORD *)(v1 + 24), *(double *)(v1 + 16));
}

uint64_t sub_CD6ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_CD6B04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];

  v1 = v0[2];
  v2 = v0[3];
  v5[0] = v0[4];
  v5[1] = v1;
  v5[2] = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15000B8);
  return State.wrappedValue.setter(v5, v3);
}

unint64_t sub_CD6B5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15000E0;
  if (!qword_15000E0)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_15000E0);
  }
  return result;
}

uint64_t sub_CD6BA4()
{
  return sub_5C150(qword_1500100, &qword_15000C8, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

uint64_t sub_CD6BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  Published.init(initialValue:)(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t property wrapper backing initializer of OptionalObservableObject.output(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = type metadata accessor for Optional(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v9 - v6, a1, v3, v5);
  sub_CD6BD0((uint64_t)v7, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t OptionalObservableObject.output.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A2130);
  v4 = swift_getKeyPath(&unk_10A2168);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_CD6D8C@<X0>(_QWORD *a1@<X8>)
{
  return OptionalObservableObject.output.getter(a1);
}

uint64_t sub_CD6DAC(uint64_t a1)
{
  return sub_CD74A8(a1);
}

uint64_t sub_CD6DCC()
{
  return 8;
}

_QWORD *sub_CD6DD8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t OptionalObservableObject.output.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  sub_CD74A8(a1);
  v4 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*OptionalObservableObject.output.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A2130);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A2168);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_72DB98;
}

uint64_t OptionalObservableObject.$output.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v1 = *v0;
  swift_beginAccess((char *)v0 + *(_QWORD *)(*v0 + 88), v5, 33, 0);
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(v1 + 80));
  v3 = type metadata accessor for Published(0, v2);
  Published.projectedValue.getter(v3);
  return swift_endAccess(v5);
}

uint64_t OptionalObservableObject.$output.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  sub_CD7584(a1);
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(v3 + 80));
  v5 = type metadata accessor for Published.Publisher(0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

void (*OptionalObservableObject.$output.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v5 = type metadata accessor for Published.Publisher(0, v4);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  OptionalObservableObject.$output.getter();
  return sub_CD7020;
}

void sub_CD7020(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_CD7584((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_CD7584(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OptionalObservableObject.__allocating_init(publisher:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  OptionalObservableObject.init(publisher:)(a1);
  return v3;
}

uint64_t *OptionalObservableObject.init(publisher:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = type metadata accessor for Optional(255, v5);
  v7 = type metadata accessor for Published(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v27 - v13;
  v15 = (uint64_t)v2 + *(_QWORD *)(v4 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v5 - 8) + 56))((char *)&v27 - v13, 1, 1, v5, v12);
  property wrapper backing initializer of OptionalObservableObject.output((uint64_t)v14, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15, v10, v7);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = 0;
  v16 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  if (!*(_QWORD *)(a1 + 24))
  {
    v20 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v16 = *(_OWORD *)a1;
    *(_OWORD *)(v16 + 16) = v20;
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(a1 + 32);
LABEL_8:
    v21 = *(_OWORD *)(a1 + 16);
    v27 = *(_OWORD *)a1;
    v28 = v21;
    v29 = *(_QWORD *)(a1 + 32);
    v17 = *((_QWORD *)&v21 + 1);
    if (!*((_QWORD *)&v21 + 1))
      goto LABEL_4;
LABEL_9:
    v22 = v29;
    __swift_project_boxed_opaque_existential_1(&v27, v17);
    v23 = swift_retain(v2);
    v19 = Publisher.sink(receiveCompletion:receiveValue:)(UIScreen.Dimensions.size.getter, 0, sub_CD764C, v2, v17, v22, v23);
    swift_release(v2);
    if (*(_QWORD *)(a1 + 24))
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    goto LABEL_11;
  }
  sub_55D1C(a1, v16);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_8;
  sub_55D1C(a1, (uint64_t)&v27);
  v17 = *((_QWORD *)&v28 + 1);
  if (*((_QWORD *)&v28 + 1))
    goto LABEL_9;
LABEL_4:
  v18 = *(_QWORD *)(a1 + 24);
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    v19 = 0;
    v18 = 0;
    if (*((_QWORD *)&v28 + 1))
    {
LABEL_11:
      __swift_destroy_boxed_opaque_existential_1(&v27);
      v18 = v19;
    }
  }
  v24 = *(_QWORD *)(*v2 + 104);
  v25 = *(uint64_t *)((char *)v2 + v24);
  *(uint64_t *)((char *)v2 + v24) = v18;
  swift_release(v25);
  return v2;
}

uint64_t sub_CD7308(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v11 - v7, a1, v3, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v3);
  sub_CD74A8((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t OptionalObservableObject.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v0 + 80));
  v3 = type metadata accessor for Published(0, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  if (v4[3])
    __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  return v0;
}

double OptionalObservableObject.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  OptionalObservableObject.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_CD7468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for OptionalObservableObject(0, *(_QWORD *)(a1 + 80), a2, a3);
  result = ObservableObject<>.objectWillChange.getter(v5);
  *a4 = result;
  return result;
}

uint64_t sub_CD74A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v11[4];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v11 - v6;
  v11[2] = v3;
  KeyPath = swift_getKeyPath(&unk_10A2130);
  v11[0] = v3;
  v9 = swift_getKeyPath(&unk_10A2168);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain(v1);
  return static Published.subscript.setter(v7, v1, KeyPath, v9);
}

uint64_t sub_CD7584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = type metadata accessor for Published.Publisher(0, v3);
  __chkstk_darwin(v4);
  v6 = &v11[-v5 - 8];
  (*(void (**)(_BYTE *, uint64_t))(v7 + 16))(&v11[-v5 - 8], a1);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), v11, 33, 0);
  v8 = type metadata accessor for Published(0, v3);
  Published.projectedValue.setter(v6, v8);
  return swift_endAccess(v11);
}

uint64_t sub_CD764C(uint64_t a1)
{
  uint64_t v1;

  return sub_CD7308(a1, v1);
}

uint64_t sub_CD7654(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v2 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 80));
  result = type metadata accessor for Published(319, v2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "(";
    v5[2] = &unk_10A2208;
    result = swift_initClassMetadata2(a1, 0, 3, v5, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for OptionalObservableObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalObservableObject);
}

uint64_t PrivacyAcknowledgementObserver.__allocating_init(dispatchOnMainThread:handler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 56, 7);
  PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(a1, a2, a3);
  return v7;
}

uint64_t PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;

  v5 = (void *)ICPrivacyIdentifierMusic;
  *(_QWORD *)(v3 + 16) = ICPrivacyIdentifierMusic;
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  v6 = (void *)objc_opt_self(ICPrivacyInfo);
  v7 = v5;
  v8 = objc_msgSend(v6, "sharedPrivacyInfo", swift_retain(a3).n128_f64[0]);
  v9 = swift_allocObject(&unk_13B7300, 24, 7);
  swift_weakInit(v9 + 16);
  v16[4] = sub_CD79BC;
  v17 = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_CD79C4;
  v16[3] = &block_descriptor_303;
  v10 = _Block_copy(v16);
  v11 = v17;
  v12 = v7;
  v13 = objc_msgSend(v8, "beginObservingPrivacyAcknowledgementForIdentifier:handler:", v12, v10, swift_release(v11).n128_f64[0]);
  swift_release(a3);
  _Block_release(v10);

  v14 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v13;
  swift_unknownObjectRelease(v14);
  return v3;
}

uint64_t sub_CD7894()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_CD78B8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    if (*(_BYTE *)(Strong + 32) == 1)
    {
      sub_BF3848();
      v8 = swift_allocObject(&unk_13B7300, 24, 7);
      swift_weakInit(v8 + 16);
      v9 = swift_allocObject(&unk_13B7350, 25, 7);
      *(_QWORD *)(v9 + 16) = v8;
      *(_BYTE *)(v9 + 24) = a2 & 1;
      swift_retain(v8);
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_CD7C2C, v9);
      swift_release(v7);
      swift_release(v8);
      v10 = v9;
    }
    else
    {
      (*(void (**)(_QWORD))(Strong + 40))(a2 & 1);
      v10 = v7;
    }
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

double sub_CD79BC(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_CD78B8(a1, a2, v2);
}

void sub_CD79C4(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t block_copy_helper_299(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_299(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t PrivacyAcknowledgementObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self(ICPrivacyInfo);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "sharedPrivacyInfo");
    objc_msgSend(v3, "endObservingPrivacyAcknowledgementForIdentifier:withToken:", *(_QWORD *)(v0 + 16), v1);
    swift_unknownObjectRelease(v1);

  }
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t PrivacyAcknowledgementObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self(ICPrivacyInfo);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "sharedPrivacyInfo");
    objc_msgSend(v3, "endObservingPrivacyAcknowledgementForIdentifier:withToken:", *(_QWORD *)(v0 + 16), v1);
    swift_unknownObjectRelease(v1);

  }
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for PrivacyAcknowledgementObserver()
{
  return objc_opt_self(_TtC9MusicCore30PrivacyAcknowledgementObserver);
}

uint64_t sub_CD7B90(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v7 = *(void (**)(_QWORD))(result + 40);
    v6 = *(_QWORD *)(result + 48);
    swift_retain(v6);
    v7(a2 & 1);
    swift_release(v5);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_CD7C08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_CD7C2C()
{
  uint64_t v0;

  return sub_CD7B90(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_CD7C38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500438);
  __chkstk_darwin(v61);
  v60 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v59 = (char *)v50 - v5;
  __chkstk_darwin(v6);
  v58 = (char *)v50 - v7;
  __chkstk_darwin(v8);
  v57 = (char *)v50 - v9;
  __chkstk_darwin(v10);
  v56 = (char *)v50 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
    return (uint64_t)v13;
  v50[1] = v1;
  v65 = _swiftEmptyArrayStorage;
  sub_C058BC(0, v12, 0);
  result = sub_23F2A0(a1);
  v16 = result;
  v17 = 0;
  v18 = a1 + 64;
  v19 = *(_BYTE *)(a1 + 32);
  v51 = a1 + 80;
  v52 = v12;
  v54 = a1 + 64;
  v55 = a1;
  v53 = v15;
  v20 = v61;
  v21 = (uint64_t)v58;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << v19)
  {
    v24 = (unint64_t)v16 >> 6;
    if ((*(_QWORD *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
      goto LABEL_26;
    v62 = v17;
    v63 = 1 << v16;
    v25 = (uint64_t)v56;
    v26 = (uint64_t)&v56[*(int *)(v20 + 48)];
    v27 = *(_QWORD *)(a1 + 48);
    v28 = type metadata accessor for UUID(0);
    v64 = *(_QWORD *)(v28 - 8);
    v29 = v27 + *(_QWORD *)(v64 + 72) * v16;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
    v30(v25, v29, v28);
    v31 = *(_QWORD *)(a1 + 56);
    v32 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    sub_CD8878(v31 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v16, v26);
    v33 = (uint64_t)v57;
    v30((uint64_t)v57, v25, v28);
    sub_CD8878(v26, v33 + *(int *)(v20 + 48));
    sub_5C090(v33, v21, &qword_1500438);
    sub_56024(v25, &qword_1500438);
    v34 = *(int *)(v20 + 48);
    v35 = v59;
    v36 = (uint64_t)&v59[v34];
    v37 = v21 + v34;
    v30((uint64_t)v59, v21, v28);
    sub_CD8878(v37, v36);
    v38 = (uint64_t)v60;
    v39 = &v60[*(int *)(v20 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v35, v28);
    sub_C28630(v36, (uint64_t)v39);
    v41 = *(_QWORD *)v39;
    v40 = *((_QWORD *)v39 + 1);
    swift_bridgeObjectRetain();
    sub_56024(v38, &qword_1500438);
    sub_56024(v21, &qword_1500438);
    v13 = v65;
    result = swift_isUniquelyReferenced_nonNull_native(v65);
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_C058BC(0, v13[2] + 1, 1);
      v13 = v65;
    }
    v43 = v13[2];
    v42 = v13[3];
    if (v43 >= v42 >> 1)
    {
      result = (uint64_t)sub_C058BC((char *)(v42 > 1), v43 + 1, 1);
      v13 = v65;
    }
    v13[2] = v43 + 1;
    v44 = &v13[2 * v43];
    v44[4] = v41;
    v44[5] = v40;
    a1 = v55;
    v19 = *(_BYTE *)(v55 + 32);
    v22 = 1 << v19;
    if (v16 >= 1 << v19)
      goto LABEL_27;
    v18 = v54;
    v45 = *(_QWORD *)(v54 + 8 * v24);
    if ((v45 & v63) == 0)
      goto LABEL_28;
    LODWORD(v15) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v46 = v45 & (-2 << (v16 & 0x3F));
    if (v46)
    {
      v22 = __clz(__rbit64(v46)) | v16 & 0xFFFFFFFFFFFFFFC0;
      v23 = v52;
    }
    else
    {
      v47 = v24 + 1;
      v48 = (v22 + 63) >> 6;
      v23 = v52;
      if (v24 + 1 < v48)
      {
        v49 = *(_QWORD *)(v54 + 8 * v47);
        if (v49)
        {
LABEL_22:
          v22 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v24)
          {
            v49 = *(_QWORD *)(v51 + 8 * v24++);
            if (v49)
            {
              v47 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v17 = v62 + 1;
    v16 = v22;
    if (v62 + 1 == v23)
      return (uint64_t)v13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_CD8058(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500268);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_56024(a1, &qword_1500268);
    sub_D0A67C(a2, (uint64_t)v8);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_56024((uint64_t)v8, &qword_1500268);
  }
  else
  {
    sub_C28630(a1, (uint64_t)v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_C27798((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_CD81D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500448);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_56024(a1, &qword_1500448);
    sub_D0A904(a2, (uint64_t)v8);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_56024((uint64_t)v8, &qword_1500448);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_C27CE0((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t PushNotificationObserver.register(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500268);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[14] = v9;
  v6[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_CD83EC, v5, 0);
}

uint64_t sub_CD83EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  Class isa;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 88);
  if (*(_QWORD *)(v1 + 120))
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_OWORD *)(v0 + 64);
    *(_QWORD *)v7 = *(_QWORD *)(v0 + 56);
    *(_OWORD *)(v7 + 8) = v8;
    *(_QWORD *)(v7 + 24) = v6;
    v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    v10 = v7 + *(int *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v10, v5);
    sub_CD8878(v7, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    swift_beginAccess(v1 + 112, v0 + 16, 33, 0);
    sub_CD8058(v4, v3);
    swift_endAccess(v0 + 16);
    v11 = *(void **)(v1 + 120);
    if (v11)
    {
      v12 = *(_QWORD **)(v0 + 88);
      v14 = v12[16];
      v13 = v12[17];
      v15 = v11;
      swift_bridgeObjectRetain();
      v16 = v15;
      sub_79B6B4(v11, v14, v13);
      if (v12[19])
      {
        v17 = swift_bridgeObjectRetain();
        sub_CD7C38(v17);
        swift_bridgeObjectRelease();
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v16, "_setEnabledTopics:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v21 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = (_QWORD *)swift_task_alloc(dword_1500274);
    *(_QWORD *)(v0 + 128) = v18;
    *v18 = v0;
    v18[1] = sub_CD8610;
    return sub_CD9244();
  }
}

uint64_t sub_CD8610()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_CD8668, v1, 0);
}

uint64_t sub_CD8668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)v7 = *(_QWORD *)(v0 + 56);
  *(_OWORD *)(v7 + 8) = v8;
  *(_QWORD *)(v7 + 24) = v5;
  v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v10 = v7 + *(int *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v10, v4);
  sub_CD8878(v7, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
  swift_beginAccess(v6 + 112, v0 + 16, 33, 0);
  sub_CD8058(v3, v2);
  swift_endAccess(v0 + 16);
  v11 = *(void **)(v6 + 120);
  if (v11)
  {
    v12 = *(_QWORD **)(v0 + 88);
    v14 = v12[16];
    v13 = v12[17];
    v15 = v11;
    swift_bridgeObjectRetain();
    v16 = v15;
    sub_79B6B4(v11, v14, v13);
    if (v12[19])
    {
      v17 = swift_bridgeObjectRetain();
      sub_CD7C38(v17);
      swift_bridgeObjectRelease();
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "_setEnabledTopics:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  v19 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PushNotificationObserver.RegisteredHandler(uint64_t a1)
{
  uint64_t result;

  result = qword_1500370;
  if (!qword_1500370)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PushNotificationObserver.RegisteredHandler);
  return result;
}

uint64_t sub_CD8878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void PushNotificationObserver.unregister(registeredHandler:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  void *v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500268);
  __chkstk_darwin(v4);
  v6 = v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v11 + 24), v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  swift_beginAccess(v2 + 14, v25, 33, 0);
  sub_CD8058((uint64_t)v6, (uint64_t)v10);
  *(_QWORD *)&v12 = swift_endAccess(v25).n128_u64[0];
  v14 = (void **)(v2 + 15);
  v13 = (void *)v2[15];
  if (v13)
  {
    v16 = v2[16];
    v15 = v2[17];
    v17 = v13;
    swift_bridgeObjectRetain();
    v18 = v17;
    sub_79B6B4(v13, v16, v15);
    if (v2[19])
    {
      v19 = swift_bridgeObjectRetain();
      sub_CD7C38(v19);
      swift_bridgeObjectRelease();
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "_setEnabledTopics:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  if (!*(_QWORD *)(v2[14] + 16))
  {
    v21 = *v14;
    if (*v14)
    {
      objc_msgSend(v21, "setDelegate:", 0, v12);
      v21 = *v14;
      if (*v14)
      {
        objc_msgSend(v21, "shutdown");
        v21 = *v14;
      }
    }
    v22 = v2[16];
    v23 = v2[17];
    *v14 = 0;
    v2[16] = 0;
    v2[17] = 0;
    sub_79B6B4(v21, v22, v23);
  }
}

void PushNotificationObserver.connection(_:didReceiveMessageForTopic:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject(&unk_13B7378, 64, 7);
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v4;
    v12[5] = a2;
    v12[6] = a3;
    v12[7] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_C51ED8((uint64_t)v10, (uint64_t)&unk_1500288, (uint64_t)v12);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_CD8C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_CD8C50, 0, 0);
}

uint64_t sub_CD8C50()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32))
    return swift_task_switch(sub_CD8C70, *(_QWORD *)(v0 + 16), 0);
  __break(1u);
  return result;
}

uint64_t sub_CD8C70()
{
  uint64_t v0;

  sub_CD8E0C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_CD8E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];

  v41 = a3;
  v6 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500430);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  swift_beginAccess(v3 + 112, v44, 0, 0);
  v15 = *(_QWORD *)(v3 + 112);
  v16 = *(_QWORD *)(v15 + 64);
  v39 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  v36 = v20 - 1;
  swift_bridgeObjectRetain();
  v21 = 0;
  v40 = v20;
  v37 = v15 + 104;
  v38 = v20 - 5;
  v42 = a2;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_8;
    }
    v29 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v29 >= v40)
    {
      v31 = v21;
    }
    else
    {
      v30 = *(_QWORD *)(v39 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v21 + 1;
      if ((uint64_t)(v21 + 2) < v40)
      {
        v30 = *(_QWORD *)(v39 + 8 * (v21 + 2));
        if (v30)
        {
          v29 = v21 + 2;
          goto LABEL_12;
        }
        v31 = v21 + 2;
        if ((uint64_t)(v21 + 3) < v40)
        {
          v30 = *(_QWORD *)(v39 + 8 * (v21 + 3));
          if (v30)
          {
            v29 = v21 + 3;
LABEL_12:
            v19 = (v30 - 1) & v30;
            v24 = __clz(__rbit64(v30)) + (v29 << 6);
            v21 = v29;
LABEL_8:
            v25 = *(_QWORD *)(v15 + 48);
            v26 = type metadata accessor for UUID(0);
            (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, v26);
            v27 = *(_QWORD *)(v15 + 56) + *(_QWORD *)(v43 + 72) * v24;
            v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500438);
            sub_CD8878(v27, (uint64_t)&v11[*(int *)(v28 + 48)]);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
            a2 = v42;
            goto LABEL_15;
          }
          v29 = v21 + 4;
          v31 = v21 + 3;
          if ((uint64_t)(v21 + 4) < v40)
          {
            v30 = *(_QWORD *)(v39 + 8 * v29);
            if (v30)
              goto LABEL_12;
            while (v38 != v21)
            {
              v30 = *(_QWORD *)(v37 + 8 * v21++);
              if (v30)
              {
                v29 = v21 + 4;
                goto LABEL_12;
              }
            }
            v31 = v36;
          }
        }
      }
    }
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500438);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
    v19 = 0;
    v21 = v31;
LABEL_15:
    sub_5C090((uint64_t)v11, (uint64_t)v14, &qword_1500430);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500438);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v14, 1, v33) == 1)
    {
      swift_release();
      return;
    }
    sub_C28630((uint64_t)&v14[*(int *)(v33 + 48)], (uint64_t)v8);
    v34 = *((_QWORD *)v8 + 1);
    if (*(_QWORD *)v8 == a1 && v34 == a2
      || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v8, v34, a1, a2, 0) & 1) != 0)
    {
      (*((void (**)(uint64_t, uint64_t, uint64_t))v8 + 2))(a1, a2, v41);
    }
    sub_CDA578((uint64_t)v8);
    v22 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v14, v22);
  }
  __break(1u);
}

void *sub_CD91C0(id a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v7 = (void *)v3[15];
  if (v7)
  {
    objc_msgSend(v7, "setDelegate:", 0);
    v8 = (void *)v3[15];
    if (v8)
      objc_msgSend(v8, "shutdown");
  }
  if (a1)
    objc_msgSend(a1, "setDelegate:", v3);
  v9 = (void *)v3[15];
  v10 = v3[16];
  v11 = v3[17];
  v3[15] = a1;
  v3[16] = a2;
  v3[17] = a3;
  return sub_79B6B4(v9, v10, v11);
}

uint64_t sub_CD9244()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v1 + 32) = v0;
  v2 = sub_CDA66C();
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 40) = v3;
  *v3 = v1;
  v3[1] = sub_CD92E0;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, v0, v2, 0xD000000000000017, 0x8000000001107A30, sub_CD95DC, 0, &type metadata for PushNotificationObserver.PushConfiguration);
}

uint64_t sub_CD92E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_CD9334, v1, 0);
}

uint64_t sub_CD9334()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v1 = *(_QWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 152);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 144);
    v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v4 = v3 & 0xFFFFFFFFFFFFLL;
    if (v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(APSConnectionOverrideNamedDelegatePort);
      sub_BF3848();
      v5 = swift_bridgeObjectRetain_n(v2, 2);
      v13 = (void *)static OS_dispatch_queue.main.getter(v5, v6, v7, v8, v9, v10, v11, v12);
      v14 = objc_allocWithZone((Class)APSConnection);
      v15 = String._bridgeToObjectiveC()();
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v14, "initWithEnvironmentName:namedDelegatePort:queue:", v15, v16, v13, swift_bridgeObjectRelease().n128_f64[0]);
      swift_bridgeObjectRelease();

      if (v17)
        goto LABEL_10;
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    v3 = 0;
    v2 = 0;
  }
  else
  {
    v17 = 0;
    v3 = 0;
  }
LABEL_10:
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(void **)(v18 + 120);
  if (!v19)
  {
    if (!v17)
      goto LABEL_25;
    swift_bridgeObjectRetain();
LABEL_19:
    if (!v2)
      goto LABEL_25;
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v18 + 128);
  v20 = *(_QWORD *)(v18 + 136);
  sub_CDA6B0(*(void **)(v18 + 120));
  swift_bridgeObjectRetain();
  sub_79B6B4(v19, v21, v20);
  if (!v17)
  {
    if (!v20)
      goto LABEL_25;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_19;
  if (!v2)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v21 == v3 && v20 == v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    sub_79B6B4(v17, v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, v3, v2, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_25;
LABEL_23:
  sub_CD91C0(v17, v3, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CD9564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1500284);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_C3150;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch(sub_CD8C50, 0, 0);
}

uint64_t sub_CD95DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  void *v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500468);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - v7;
  if (qword_14F9E30 != -1)
    swift_once(&qword_14F9E30, sub_C4F36C);
  v9 = static BagProvider.shared;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  v10(v5, (uint64_t)v8, v2);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_13B7530, v12 + v4, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v8, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FE2B0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_B9DEA8);
  v14 = v26;
  if (v26)
  {
    sub_CD9868(v26);

  }
  else
  {
    v15 = type metadata accessor for BagProvider.Observer();
    v16 = swift_allocObject(v15, 40, 7);
    v17 = swift_weakInit(v16 + 16);
    *(_QWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 32) = 0;
    swift_weakAssign(v17, v9);
    v18 = swift_allocObject(&unk_13B7558, 24, 7);
    swift_weakInit(v18 + 16);
    v19 = (_QWORD *)swift_allocObject(&unk_13B7580, 48, 7);
    v19[2] = sub_CDA740;
    v19[3] = v13;
    v19[4] = v18;
    v19[5] = v16;
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v16 + 24) = sub_C481C4;
    *(_QWORD *)(v16 + 32) = v19;
    swift_retain();
    swift_retain();
    v22 = sub_5C198(v20, v21);
    __chkstk_darwin(v22);
    *(&v25 - 2) = v9;
    *(&v25 - 1) = v16;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_C481D0);
    sub_C4F74C(0);
    swift_release();
  }
  v23 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v23);
}

uint64_t sub_CD9868(void *a1)
{
  NSString v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyPushNotifications);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(a1, "dictionaryForBagKey:", v2, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v3)
  {
    v16 = 0;
    v17 = 0;
    goto LABEL_14;
  }
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v14 = 0x6D6E6F7269766E65;
  v15 = 0xEB00000000746E65;
  AnyHashable.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_21BFA0((uint64_t)&v16), (v6 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_55E40((uint64_t)&v16);
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_56024((uint64_t)&v18, &qword_14FF2A0);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v14, &v18, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_13:
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(APSEnvironmentProduction);
    v17 = v11;
    goto LABEL_14;
  }
  v8 = v14;
  v7 = v15;
  v9 = (void *)objc_opt_self(APSConnection);
  v10 = String._bridgeToObjectiveC()();
  LODWORD(v9) = objc_msgSend(v9, "isValidEnvironment:", v10);

  if (!(_DWORD)v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = v8;
  v17 = v7;
LABEL_14:
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500468);
  return CheckedContinuation.resume(returning:)(&v16, v12);
}

id PushNotificationObserver.__allocating_init()()
{
  objc_class *v0;
  uint64_t v1;
  double v2;
  objc_super v4;

  v1 = swift_allocObject(v0, 160, 15);
  swift_defaultActor_initialize(v1);
  swift_retain(v1);
  *(_QWORD *)(v1 + 112) = sub_C26AF4((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_QWORD *)(v1 + 152) = 0;
  *(_QWORD *)&v2 = swift_release(v1).n128_u64[0];
  v4.receiver = (id)v1;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, "init", v2);
}

id PushNotificationObserver.init()()
{
  uint64_t v0;
  objc_super v2;

  swift_defaultActor_initialize(v0);
  swift_retain();
  *(_QWORD *)(v0 + 112) = sub_C26AF4((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_QWORD *)(v0 + 152) = 0;
  swift_release();
  v2.receiver = (id)v0;
  v2.super_class = (Class)type metadata accessor for PushNotificationObserver();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for PushNotificationObserver()
{
  return objc_opt_self(_TtC9MusicCore24PushNotificationObserver);
}

uint64_t PushNotificationObserver.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_79B6B4(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t PushNotificationObserver.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_79B6B4(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t SequentialVocalCommandsFilter.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = type metadata accessor for UUID(0);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PushNotificationObserver.RegisteredHandler(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for PushNotificationObserver.RegisteredHandler(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CD9F70);
}

uint64_t sub_CD9F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CD9FF8);
}

uint64_t sub_CD9FF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_CDA06C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10A2348;
  v4[1] = (char *)&value witness table for () + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_CDA0EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_CDA19C + 4 * byte_10A22B0[(v7 - 1)]))();
}

void sub_CDA1EC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_4;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &dword_0 + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for PushNotificationObserver.UncheckedSendableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PushNotificationObserver.UncheckedSendableWrapper);
}

uint64_t getEnumTagSinglePayload for PushNotificationObserver.PushConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PushNotificationObserver.PushConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushNotificationObserver.PushConfiguration()
{
  return &type metadata for PushNotificationObserver.PushConfiguration;
}

uint64_t destroy for PushNotificationObserver.Connection(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9MusicCore24PushNotificationObserverC10ConnectionVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushNotificationObserver.Connection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for PushNotificationObserver.Connection(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PushNotificationObserver.Connection()
{
  return &type metadata for PushNotificationObserver.Connection;
}

uint64_t sub_CDA578(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm_26()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_CDA5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1500284);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_50F8C;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch(sub_CD8C50, 0, 0);
}

unint64_t sub_CDA66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1500458;
  if (!qword_1500458)
  {
    v1 = type metadata accessor for PushNotificationObserver();
    result = swift_getWitnessTable(&protocol conformance descriptor for PushNotificationObserver, v1);
    atomic_store(result, (unint64_t *)&qword_1500458);
  }
  return result;
}

void *sub_CDA6B0(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_CDA6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500468);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CDA740(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1500468);
  return sub_CD9868(a1);
}

uint64_t sub_CDA780()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CDA7A4()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void *MPCPlaybackEngine.Configuration.fallbackPlaybackIntent.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = a4;
  return a4;
}

uint64_t sub_CDA800(uint64_t a1, uint64_t a2)
{
  return _sSo17MPCPlaybackEngineC9MusicCoreE13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
}

_UNKNOWN **static MPCPlaybackEngine.Option.allCases.getter()
{
  return &off_13A7198;
}

void sub_CDA828(_QWORD *a1@<X8>)
{
  *a1 = &off_13A71C0;
}

id MPCPlaybackEngine.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  NSString v7;
  id v8;
  id v9;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithPlayerID:", v7);

  v9 = v8;
  sub_CDD648(a3, (uint64_t)a4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t MPCPlaybackEngine.configuration.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = v0;
  v2 = objc_msgSend(v1, "playerID");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  sub_CDD564(v1);
  v4 = objc_msgSend(v1, "fallbackPlaybackIntent");

  return v3;
}

void MPCPlaybackEngine.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_CDD648(a3, (uint64_t)a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void (*MPCPlaybackEngine.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1;
  v5 = objc_msgSend(v4, "playerID");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = sub_CDD564(v4);
  v10 = objc_msgSend(v4, "fallbackPlaybackIntent");

  *v3 = v6;
  v3[1] = v8;
  v3[2] = v9;
  v3[3] = v10;
  return sub_CDAA74;
}

void sub_CDAA74(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = v3;
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    sub_CDD648(v5, (uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v3 = (void *)v2[3];
  }
  else
  {
    sub_CDD648(*(_QWORD *)(*(_QWORD *)a1 + 16), (uint64_t)v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v2);
}

void sub_CDAB10()
{
  Swift::Int v0;
  id v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v0 = sub_C5DE50((uint64_t)&off_13A50D8);
  v1 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setLabel:", v2);

  v3 = (void *)objc_opt_self(MPModelSong);
  v4 = v1;
  v5 = objc_msgSend(v3, "kindWithVariants:", 3);
  objc_msgSend(v4, "setItemKind:", v5);

  v6 = objc_msgSend(v4, "playbackIntentWithStartItemIdentifiers:", 0);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v8, "setShuffleMode:", 1);

  }
  static MPCPlaybackEngine.Configuration.systemMusic = 0x636973754DLL;
  *(_QWORD *)algn_1582268 = 0xE500000000000000;
  qword_1582270 = v0;
  unk_1582278 = v7;
}

uint64_t *MPCPlaybackEngine.Configuration.systemMusic.unsafeMutableAddressor()
{
  if (qword_14F9F68 != -1)
    swift_once(&qword_14F9F68, sub_CDAB10);
  return &static MPCPlaybackEngine.Configuration.systemMusic;
}

uint64_t static MPCPlaybackEngine.Configuration.systemMusic.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (qword_14F9F68 != -1)
    swift_once(&qword_14F9F68, sub_CDAB10);
  v0 = static MPCPlaybackEngine.Configuration.systemMusic;
  v1 = (void *)unk_1582278;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = v1;
  return v0;
}

void *MPCPlayerRequestTracklistRange.nowPlayingItem.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.nowPlayingItem;
}

void *MPCPlayerRequestTracklistRange.nextPlayingItem.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.nextPlayingItem;
}

void *MPCPlayerRequestTracklistRange.upNextPlayingItems.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.upNextPlayingItems;
}

uint64_t static MPCPlayerRequestTracklistRange.upNextPlayingItems.getter()
{
  return 0;
}

BOOL static MPCPlayerRequestTracklistRange.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_CDAD50(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void MPCPlayerRequestTracklistRange.hash(into:)(int a1, Swift::UInt a2, Swift::UInt a3)
{
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
}

Swift::Int MPCPlayerRequestTracklistRange.hashValue.getter(Swift::UInt a1, Swift::UInt a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_CDADF4()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_CDAE4C()
{
  Swift::UInt *v0;
  Swift::UInt v1;

  v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_CDAE84()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_CDAED8()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  Class isa;
  Class v8;
  id v9;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v0, &v10);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)objc_opt_self(MPPropertySet);
  *(_QWORD *)(inited + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v3, "emptyPropertySet");
  v5 = sub_C26530(inited);
  v6 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v8 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v9 = objc_msgSend(v6, "initWithProperties:relationships:", isa, v8);

  static MPCPlayerResponse.playStateSectionProperties = (uint64_t)v9;
}

uint64_t *MPCPlayerResponse.playStateSectionProperties.unsafeMutableAddressor()
{
  if (qword_14F9F70 != -1)
    swift_once(&qword_14F9F70, sub_CDAED8);
  return &static MPCPlayerResponse.playStateSectionProperties;
}

id static MPCPlayerResponse.playStateSectionProperties.getter()
{
  if (qword_14F9F70 != -1)
    swift_once(&qword_14F9F70, sub_CDAED8);
  return (id)static MPCPlayerResponse.playStateSectionProperties;
}

id sub_CDB0B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500470);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v23 - v7;
  v9 = objc_msgSend(v1, "tracklist", v6);
  v10 = objc_msgSend(v9, "playingItem");

  if (!v10)
    return 0;
  v11 = objc_msgSend(v10, "metadataObject");

  if (v11)
  {
    v12 = objc_msgSend(v1, "tracklist");
    v13 = objc_msgSend(v12, "playingItemIndexPath");

    if (v13)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v13);

      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 0, 1, v14);
    }
    else
    {
      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    }
    sub_CDDCD4((uint64_t)v4, (uint64_t)v8);
    type metadata accessor for IndexPath(0);
    v16 = *(_QWORD *)(v14 - 8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v14);
    if ((_DWORD)v17 != 1)
    {
      v19 = IndexPath.section.getter(v17);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v14);
      v20 = objc_msgSend(v1, "tracklist");
      v21 = objc_msgSend(v20, "items");

      v22 = objc_msgSend(v21, "sectionAtIndex:", v19);
      v15 = objc_msgSend(v22, "metadataObject");

      objc_msgSend(v1, "state");
      return v15;
    }

    sub_CDD720((uint64_t)v8);
    return 0;
  }
  return 0;
}

uint64_t MPCPlayerResponse.playState(for:in:)(void *a1, void *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unsigned __int8 v20;

  v4 = sub_CDB0B0();
  if (!v5)
    return 0;
  v7 = v4;
  v8 = v5;
  v9 = v6;
  v10 = objc_msgSend(v5, "identifiers");
  v11 = objc_msgSend(a1, "identifiers");
  v12 = objc_msgSend(v10, "intersectsSet:", v11);

  if (!v12)
    goto LABEL_9;
  if (v7)
  {
    if (!a2)
    {

      return 0;
    }
    v13 = a2;
    v14 = v7;
    v15 = v13;
    v7 = v14;
    if (objc_msgSend(v7, "type") != (char *)&dword_0 + 2
      || (v16 = objc_msgSend(v7, "album")) == 0)
    {

      goto LABEL_14;
    }
    v17 = v16;
    v18 = objc_msgSend(v16, "identifiers");
    v19 = objc_msgSend(v15, "identifiers");
    v20 = objc_msgSend(v18, "intersectsSet:", v19);

    if ((v20 & 1) != 0)
    {

      return v9;
    }
LABEL_9:

LABEL_14:
    return 0;
  }

  if (a2)
    return 0;
  return v9;
}

{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  unsigned __int8 v19;

  v4 = sub_CDB0B0();
  if (v5)
  {
    v7 = v4;
    v8 = v5;
    v9 = v6;
    v10 = objc_msgSend(v5, "innermostModelObject");
    v11 = objc_msgSend(v10, "identifiers");

    v12 = objc_msgSend(v8, "identifiers");
    v13 = objc_msgSend(v11, "unionSet:", v12);

    v14 = objc_msgSend(a1, "identifiers");
    LODWORD(v12) = objc_msgSend(v13, "intersectsSet:", v14);

    if ((_DWORD)v12)
    {
      if (!v7)
      {
        v9 = 0;
        v7 = v8;
        goto LABEL_12;
      }
      v7 = v7;
      if (objc_msgSend(v7, "type") != &dword_4
        || (v15 = objc_msgSend(v7, "playlist")) == 0)
      {

        goto LABEL_11;
      }
      v16 = v15;
      v17 = objc_msgSend(v15, "identifiers");
      v18 = objc_msgSend(a2, "identifiers");
      v19 = objc_msgSend(v17, "intersectsSet:", v18);

      if ((v19 & 1) != 0)
      {

        v7 = v8;
LABEL_12:

        return v9;
      }
    }

LABEL_11:
    v9 = 0;
    goto LABEL_12;
  }
  return 0;
}

uint64_t MPCPlayerResponseItem.isLiveContent.getter()
{
  void *v0;
  unsigned __int8 v2;

  objc_msgSend(v0, "duration");
  return v2;
}

id MPCPlayerResponseTracklist.playingItemSupportsTimeSyncedLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE *v12;
  id result;
  void *v14;
  id v15;
  void *v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  char *v24;
  _BYTE v25[64];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500470);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v9);
  v12 = &v25[-v11];
  result = objc_msgSend(v1, "playingItem", v10);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, "duration");
    if (v25[56] == 1)
    {
LABEL_3:

      return 0;
    }
    v15 = objc_msgSend(v1, "playingItemIndexPath");
    if (v15)
    {
      v16 = v15;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v15);

      v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
      v17(v4, v8, v5);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v17(v12, v4, v5);
        v18 = objc_msgSend(v1, "items");
        v19 = objc_msgSend(v18, "sectionAtIndex:", IndexPath.section.getter(v18));

        v20 = objc_msgSend(v19, "metadataObject");
        if (v20)
        {
          v21 = objc_msgSend(v20, "innermostModelObject");
          objc_opt_self(MPModelRadioStation);
          v22 = (void *)swift_dynamicCastObjCClass(v21);
          if (v22)
          {
            v23 = v22;
            if (objc_msgSend(v22, "type") == &dword_4)
            {
              (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v12, v5);

              goto LABEL_3;
            }
            v24 = (char *)objc_msgSend(v23, "subtype");

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v12, v5);
            if (v24 == (_BYTE *)&dword_0 + 1)
              return 0;
          }
          else
          {

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v12, v5);
          }
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v12, v5);

        }
        return &dword_0 + 1;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    sub_CDD720((uint64_t)v4);
    return &dword_0 + 1;
  }
  return result;
}

void MPCPlayerResponseTracklist.currentPlayEvent.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;
  char v29;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500470);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&aBlock[-1] - v11;
  v13 = objc_msgSend(v1, "playingItemIndexPath", v10);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_8;
  }
  v14 = v13;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v13);

  v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v15(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_8:
    sub_CDD720((uint64_t)v4);
    return;
  }
  v15(v12, v4, v5);
  v16 = objc_msgSend(v1, "items");
  v17 = objc_msgSend(v16, "sectionAtIndex:", IndexPath.section.getter(v16));

  v18 = objc_msgSend(v17, "metadataObject");
  if (v18)
  {
    v29 = 0;
    v19 = objc_msgSend(v18, "identifiers");
    __chkstk_darwin(v19);
    *(&v26 - 2) = (uint64_t)v18;
    *(&v26 - 1) = (uint64_t)&v29;
    v20 = objc_allocWithZone((Class)MPModelPlayEvent);
    v21 = swift_allocObject(&unk_13B75C0, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_CDD760;
    *(_QWORD *)(v21 + 24) = &v26 - 4;
    aBlock[4] = sub_129E54;
    v28 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E9F0;
    aBlock[3] = &block_descriptor_304;
    v22 = _Block_copy(aBlock);
    v23 = objc_msgSend(v20, "initWithIdentifiers:block:", v19, v22, swift_retain(v21).n128_f64[0]);

    _Block_release(v22);
    v24 = swift_release(v28);
    LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v21, "", 0, 0, 0, 1, v24);

    v25 = swift_release(v21);
    if ((v19 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v12, v5, v25);
      if (v29 == 1)

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
}

void sub_CDBD64(void *a1, void *a2, _BYTE *a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v6 = objc_opt_self(MPModelPlayEvent);
  v7 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v6, 0, 0, 0);
  v19 = a1;
  v8 = objc_msgSend(a2, "anyObject");
  v9 = v19;
  if (v8)
  {
    objc_opt_self(MPModelAlbum);
    v10 = swift_dynamicCastObjCClass(v8);
    if (v10)
    {
      v11 = v10;
      v12 = v8;
      objc_msgSend(v7, "setAlbum:", v11);
LABEL_10:

      return;
    }
    objc_opt_self(MPModelPlaylist);
    v13 = swift_dynamicCastObjCClass(v8);
    if (v13)
    {
      v14 = v13;
      v12 = v8;
      objc_msgSend(v7, "setPlaylist:", v14);
      goto LABEL_10;
    }
    objc_opt_self(MPModelArtist);
    v15 = swift_dynamicCastObjCClass(v8);
    if (v15)
    {
      v16 = v15;
      v12 = v8;
      objc_msgSend(v7, "setArtist:", v16);
      goto LABEL_10;
    }
    objc_opt_self(MPModelRadioStation);
    v17 = swift_dynamicCastObjCClass(v8);
    if (v17)
    {
      v18 = v17;
      v12 = v8;
      objc_msgSend(v7, "setRadioStation:", v18);
      goto LABEL_10;
    }

    v9 = v19;
  }

  *a3 = 1;
}

id MPCVocalsControlCommand.isTrulyActive.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, "isActive");
  if ((_DWORD)result)
    return (id)(objc_msgSend(v0, "isDisabled") ^ 1);
  return result;
}

uint64_t MPCPlayerResponse.VideoContext.__allocating_init(playerResponse:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __objc2_prot *v10;

  if (!a1)
    return 0;
  v2 = objc_msgSend(a1, "videoOutput");
  v3 = (uint64_t)v2;
  if (v2)
  {
    v10 = &OBJC_PROTOCOL___MPCVideoOutput_0;
    v4 = swift_dynamicCastObjCProtocolConditional(v2, 1, &v10);
    if (v4)
    {
      v5 = (void *)v4;
      ObjectType = swift_getObjectType();
      v7 = sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
      if (!swift_dynamicCastMetatype(ObjectType, v7))
        v5 = 0;
      if (v5)
      {
        v8 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
        v3 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
        MPCPlayerResponse.VideoContext.init(output:)(v5);
        goto LABEL_8;
      }
    }
    swift_unknownObjectRelease(v3);

    return 0;
  }
LABEL_8:

  return v3;
}

uint64_t MPCPlayerResponse.VideoContext.__allocating_init(output:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  MPCPlayerResponse.VideoContext.init(output:)(a1);
  return v3;
}

uint64_t MPCPlayerResponse.VideoContext.init(output:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[112];
  _QWORD v26[4];
  _BYTE v27[24];

  v2 = v1;
  v3 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output) = a1;
  v4 = a1;
  objc_msgSend(v4, "videoBounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_beginAccess(v2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, v27, 33, 0);
  v26[0] = v6;
  v26[1] = v8;
  v26[2] = v10;
  v26[3] = v12;
  _s3__C6CGRectVMa_0(0);
  Published.init(initialValue:)(v26, v13);
  swift_endAccess(v27);
  v14 = objc_msgSend(v4, "isReadyForDisplay");
  swift_beginAccess(v2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, v26, 33, 0);
  v27[0] = v14;
  Published.init(initialValue:)(v27, &type metadata for Bool);
  swift_endAccess(v26);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE300);
  inited = swift_initStackObject(v15, v25);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  KeyPath = swift_getKeyPath(&unk_10A2408);
  *(_QWORD *)(inited + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_15004A0);
  *(_QWORD *)(inited + 64) = &protocol witness table for KeyValueObservationTrigger<A, B>;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = KeyPath;
  v18 = swift_getKeyPath(&unk_10A2438);
  *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_15004A8);
  *(_QWORD *)(inited + 104) = &protocol witness table for KeyValueObservationTrigger<A, B>;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = v18;
  v19 = swift_allocObject(&unk_13B7610, 24, 7);
  swift_weakInit(v19 + 16);
  v20 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v20, 48, 7);
  v21 = v4;
  v22 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 0, (uint64_t)sub_CDD86C, v19);
  v23 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v22;
  swift_release(v23);
  return v2;
}

uint64_t property wrapper backing initializer of MPCPlayerResponse.VideoContext.videoBounds(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD v6[4];

  *(double *)v6 = a1;
  *(double *)&v6[1] = a2;
  *(double *)&v6[2] = a3;
  *(double *)&v6[3] = a4;
  _s3__C6CGRectVMa_0(0);
  return Published.init(initialValue:)(v6, v4);
}

uint64_t MPCPlayerResponse.VideoContext.videoBounds.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[4];

  KeyPath = swift_getKeyPath(&unk_10A2460);
  v10 = swift_getKeyPath(&unk_10A2488);
  *(double *)v12 = a1;
  *(double *)&v12[1] = a2;
  *(double *)&v12[2] = a3;
  *(double *)&v12[3] = a4;
  swift_retain(v4);
  return static Published.subscript.setter(v12, v4, KeyPath, v10);
}

uint64_t MPCPlayerResponse.VideoContext.isReadyForDisplay.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_10A24A8);
  v4 = swift_getKeyPath(&unk_10A24D0);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void sub_CDC39C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  unsigned int v13;
  uint64_t KeyPath;
  uint64_t v15;
  double Width;
  uint64_t v17;
  uint64_t v18;
  double Height;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CGRect v28;
  _BYTE v29[24];
  _BYTE v30[24];
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (id *)(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output), "videoBounds", swift_beginAccess(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v29, 0, 0).n128_f64[0]);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = objc_msgSend(*v4, "isReadyForDisplay");
    KeyPath = swift_getKeyPath(&unk_10A2460);
    v15 = swift_getKeyPath(&unk_10A2488);
    static Published.subscript.getter(&v28, v3, KeyPath, v15);
    swift_release(v15);
    swift_release(KeyPath);
    v31.origin.x = v6;
    v31.origin.y = v8;
    v31.size.width = v10;
    v31.size.height = v12;
    if (!CGRectEqualToRect(v31, v28))
    {
      v32.origin.x = v6;
      v32.origin.y = v8;
      v32.size.width = v10;
      v32.size.height = v12;
      Width = CGRectGetWidth(v32);
      v17 = swift_getKeyPath(&unk_10A2460);
      v18 = swift_getKeyPath(&unk_10A2488);
      static Published.subscript.getter(&v28, v3, v17, v18);
      swift_release(v18);
      swift_release(v17);
      if (vabdd_f64(Width, CGRectGetWidth(v28)) > 1.0)
      {
        v33.origin.x = v6;
        v33.origin.y = v8;
        v33.size.width = v10;
        v33.size.height = v12;
        Height = CGRectGetHeight(v33);
        v20 = swift_getKeyPath(&unk_10A2460);
        v21 = swift_getKeyPath(&unk_10A2488);
        static Published.subscript.getter(&v28, v3, v20, v21);
        swift_release(v21);
        swift_release(v20);
        if (vabdd_f64(Height, CGRectGetHeight(v28)) > 1.0)
        {
          v22 = swift_getKeyPath(&unk_10A2460);
          v23 = swift_getKeyPath(&unk_10A2488);
          v28.origin.x = v6;
          v28.origin.y = v8;
          v28.size.width = v10;
          v28.size.height = v12;
          swift_retain(v3);
          static Published.subscript.setter(&v28, v3, v22, v23);
        }
      }
    }
    v24 = swift_getKeyPath(&unk_10A24A8);
    v25 = swift_getKeyPath(&unk_10A24D0);
    static Published.subscript.getter(&v28, v3, v24, v25);
    swift_release(v25);
    swift_release(v24);
    if (v13 == LOBYTE(v28.origin.x))
    {
      swift_release(v3);
    }
    else
    {
      v26 = swift_getKeyPath(&unk_10A24A8);
      v27 = swift_getKeyPath(&unk_10A24D0);
      LOBYTE(v28.origin.x) = v13;
      static Published.subscript.setter(&v28, v3, v26, v27);
    }
  }
}

uint64_t MPCPlayerResponse.VideoContext.isReadyForDisplay.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A24A8);
  v2 = swift_getKeyPath(&unk_10A24D0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_CDC6EC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A24A8);
  v5 = swift_getKeyPath(&unk_10A24D0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_CDC768(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A24A8);
  v5 = swift_getKeyPath(&unk_10A24D0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void (*MPCPlayerResponse.VideoContext.isReadyForDisplay.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A24A8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A24D0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, &qword_15004B0);
}

uint64_t MPCPlayerResponse.VideoContext.$isReadyForDisplay.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_15004B8, &OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, &qword_15004B0);
}

void (*MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

double MPCPlayerResponse.VideoContext.videoBounds.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_10A2460);
  v2 = swift_getKeyPath(&unk_10A2488);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_CDC9C4@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  _OWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A2460);
  v5 = swift_getKeyPath(&unk_10A2488);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)v8;
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_CDCA40(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A2460);
  v6 = swift_getKeyPath(&unk_10A2488);
  v9 = v8;
  v10 = v2;
  v11 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v9, v4, KeyPath, v6);
}

void (*MPCPlayerResponse.VideoContext.videoBounds.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A2460);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A2488);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t MPCPlayerResponse.VideoContext.$videoBounds.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, &qword_15004C0);
}

uint64_t sub_CDCB54(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t MPCPlayerResponse.VideoContext.$videoBounds.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_15004C8, &OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, &qword_15004C0);
}

uint64_t sub_CDCBD4(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v17[24];

  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  swift_beginAccess(v4 + *a3, v17, 33, 0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter(v12, v13);
  v14 = swift_endAccess(v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 8))(a1, v8, v14);
}

void (*MPCPlayerResponse.VideoContext.$videoBounds.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004C8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004C0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

void sub_CDCD74(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id MPCPlayerResponse.VideoContext.output.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v3, 0, 0);
  return *v1;
}

void MPCPlayerResponse.VideoContext.output.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MPCPlayerResponse.VideoContext.output.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t MPCPlayerResponse.VideoContext.description.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v5;
  uint64_t v7;
  _QWORD v8[3];
  unint64_t v9;
  unint64_t v10;

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000026;
  v10 = 0x8000000001107A50;
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v8, 0, 0);
  v2 = *v1;
  ObjectType = swift_getObjectType();
  v7 = v2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
  v5._countAndFlagsBits = sub_BC0494((uint64_t)&v7, ObjectType, WitnessTable);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MPCPlayerResponse.VideoContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return v0;
}

double MPCPlayerResponse.VideoContext.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

unint64_t sub_CDD160()
{
  return MPCPlayerResponse.VideoContext.description.getter();
}

uint64_t sub_CDD180(uint64_t *a1, uint64_t *a2)
{
  return _sSo17MPCPlayerResponseC9MusicCoreE12VideoContextC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t MPCPlayerResponse.videoContext.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __objc2_prot *v10;

  v1 = v0;
  v2 = objc_msgSend(v1, "videoOutput");
  v3 = (uint64_t)v2;
  if (v2)
  {
    v10 = &OBJC_PROTOCOL___MPCVideoOutput_0;
    v4 = swift_dynamicCastObjCProtocolConditional(v2, 1, &v10);
    if (!v4)
      goto LABEL_8;
    v5 = (void *)v4;
    ObjectType = swift_getObjectType();
    v7 = sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
    if (!swift_dynamicCastMetatype(ObjectType, v7))
      v5 = 0;
    if (!v5)
    {
LABEL_8:
      swift_unknownObjectRelease(v3);

      return 0;
    }
    v8 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
    v3 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    MPCPlayerResponse.VideoContext.init(output:)(v5);
  }

  return v3;
}

uint64_t _sSo17MPCPlaybackEngineC9MusicCoreE13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, Swift::Int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  char v12;
  uint64_t result;
  id v14;
  id v15;
  char v16;

  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
  {
    if ((sub_CB6B60(a3, a7) & 1) != 0)
    {
      if (a4)
      {
        if (a8)
        {
          sub_4E684(0, (unint64_t *)&unk_1500660, MPCPlaybackIntent_ptr);
          v14 = a8;
          v15 = a4;
          v16 = static NSObject.== infix(_:_:)(v15, v14);

          if ((v16 & 1) != 0)
            return 1;
        }
      }
      else if (!a8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _sSo17MPCPlayerResponseC9MusicCoreE12VideoContextC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGRect v24;
  _BYTE v25[24];
  _BYTE v26[24];
  CGRect v27;

  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  v4 = (void **)(a1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(a1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v26, 0, 0);
  v5 = *v4;
  v6 = (void **)(a2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(a2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v25, 0, 0);
  v7 = *v6;
  v8 = v5;
  v9 = v7;
  v10 = static NSObject.== infix(_:_:)(v8, v9);

  if ((v10 & 1) == 0)
    return 0;
  KeyPath = swift_getKeyPath(&unk_10A2460);
  v12 = swift_getKeyPath(&unk_10A2488);
  static Published.subscript.getter(&v24, a1, KeyPath, v12);
  swift_release();
  swift_release();
  x = v24.origin.x;
  y = v24.origin.y;
  width = v24.size.width;
  height = v24.size.height;
  v17 = swift_getKeyPath(&unk_10A2460);
  v18 = swift_getKeyPath(&unk_10A2488);
  static Published.subscript.getter(&v24, a2, v17, v18);
  swift_release();
  swift_release();
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  result = CGRectEqualToRect(v27, v24);
  if (!(_DWORD)result)
    return result;
  v20 = swift_getKeyPath(&unk_10A24A8);
  v21 = swift_getKeyPath(&unk_10A24D0);
  static Published.subscript.getter(&v24, a1, v20, v21);
  swift_release();
  swift_release();
  if (LOBYTE(v24.origin.x) != 1)
    return 0;
  v22 = swift_getKeyPath(&unk_10A24A8);
  v23 = swift_getKeyPath(&unk_10A24D0);
  static Published.subscript.getter(&v24, a2, v22, v23);
  swift_release();
  swift_release();
  return LOBYTE(v24.origin.x);
}

void *sub_CDD564(void *a1)
{
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  void *v8;

  v8 = &_swiftEmptySetSingleton;
  if (objc_msgSend(a1, "isSystemMusicApplication"))
    sub_CBD870(&v3, 0);
  if (objc_msgSend(a1, "isAudioAnalyzerEnabled"))
    sub_CBD870(&v4, 1u);
  if (objc_msgSend(a1, "isPictureInPictureSupported"))
    sub_CBD870(&v5, 2u);
  if (objc_msgSend(a1, "isVideoSupported"))
    sub_CBD870(&v6, 3u);
  if (objc_msgSend(a1, "isStateRestorationSupported"))
    sub_CBD870(&v7, 4u);
  return v8;
}

id sub_CDD648(uint64_t a1, uint64_t a2)
{
  void *v2;

  objc_msgSend(v2, "setSystemMusicApplication:", sub_A33084(0, a1));
  objc_msgSend(v2, "setAudioAnalyzerEnabled:", sub_A33084(1u, a1));
  objc_msgSend(v2, "setPictureInPictureSupported:", sub_A33084(2u, a1));
  objc_msgSend(v2, "setVideoSupported:", sub_A33084(3u, a1));
  objc_msgSend(v2, "setStateRestorationSupported:", sub_A33084(4u, a1));
  return objc_msgSend(v2, "setFallbackPlaybackIntent:", a2);
}

uint64_t sub_CDD720(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500470);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_CDD760(void *a1)
{
  uint64_t v1;

  sub_CDBD64(a1, *(void **)(v1 + 16), *(_BYTE **)(v1 + 24));
}

uint64_t sub_CDD768()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_300(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for MPCPlayerResponse.VideoContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1500518;
  if (!qword_1500518)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MPCPlayerResponse.VideoContext);
  return result;
}

const char *keypath_get_selector_isReadyForDisplay()
{
  return "isReadyForDisplay";
}

id sub_CDD7D8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isReadyForDisplay");
  *a2 = (_BYTE)result;
  return result;
}

const char *keypath_get_selector_videoBounds()
{
  return "videoBounds";
}

id sub_CDD814@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*a1, "videoBounds");
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_CDD848()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_CDD86C()
{
  uint64_t v0;

  sub_CDC39C(v0);
}

unint64_t sub_CDD888()
{
  unint64_t result;

  result = qword_15004D0;
  if (!qword_15004D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPCPlaybackEngine.Option, &type metadata for MPCPlaybackEngine.Option);
    atomic_store(result, (unint64_t *)&qword_15004D0);
  }
  return result;
}

unint64_t sub_CDD8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15004D8;
  if (!qword_15004D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_15004E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_15004D8);
  }
  return result;
}

unint64_t sub_CDD920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15004E8;
  if (!qword_15004E8)
  {
    type metadata accessor for MPCPlayerRequestTracklistRange(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MPCPlayerRequestTracklistRange, v1);
    atomic_store(result, (unint64_t *)&qword_15004E8);
  }
  return result;
}

void _s13ConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));

}

_QWORD *_s13ConfigurationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *_s13ConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a1[3];
  v7 = (void *)a2[3];
  a1[3] = v7;
  v8 = v7;

  return a1;
}

_QWORD *_s13ConfigurationVwta(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for MPCPlaybackEngine.Configuration()
{
  return &type metadata for MPCPlaybackEngine.Configuration;
}

uint64_t _s6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_CDDB08 + 4 * byte_10A23B5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_CDDB3C + 4 * asc_10A23B0[v4]))();
}

uint64_t sub_CDDB3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CDDB44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCDDB4CLL);
  return result;
}

uint64_t sub_CDDB58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCDDB60);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_CDDB64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CDDB6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPCPlaybackEngine.Option()
{
  return &type metadata for MPCPlaybackEngine.Option;
}

uint64_t sub_CDDB88()
{
  return type metadata accessor for MPCPlayerResponse.VideoContext(0);
}

void sub_CDDB90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_CDDC2C();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_CDDC80(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = &unk_10A26C8;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_CDDC2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1500528)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1500528);
  }
}

void sub_CDDC80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1500530)
  {
    _s3__C6CGRectVMa_0(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1500530);
  }
}

uint64_t sub_CDDCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Player.SnapshotController.windowScene.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t Player.SnapshotController.__allocating_init(windowScene:player:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 81, 7);
  Player.SnapshotController.init(windowScene:player:)(a1, a2);
  return v5;
}

uint64_t Player.SnapshotController.init(windowScene:player:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString *v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v35[72];
  _BYTE v36[72];
  _BYTE v37[112];
  _BYTE v38[32];

  v3 = v2;
  v6 = v2 + 16;
  v7 = swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 80) = 1;
  swift_beginAccess(v7, v38, 1, 0);
  swift_unknownObjectWeakAssign(v6, a1);
  *(_QWORD *)(v3 + 24) = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v9 = swift_allocObject(v8, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_1060E10;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE300);
  inited = swift_initStackObject(v10, v37);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  v12 = UIScreen.Dimensions.size.getter(COERCE_DOUBLE(2));
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v14;
  UIScreen.Dimensions.size.getter(v12);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v16;
  v17 = swift_allocObject(&unk_13B77B8, 24, 7);
  swift_weakInit(v17 + 16);
  v18 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v18, 48, 7);
  swift_retain(a2);
  v19 = UISceneDidEnterBackgroundNotification;
  v20 = UISceneWillEnterForegroundNotification;
  *(_QWORD *)(v9 + 32) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_CDE14C, v17);
  v21 = swift_initStackObject(v10, v36);
  *(_OWORD *)(v21 + 16) = xmmword_105B360;
  UIScreen.Dimensions.size.getter(COERCE_DOUBLE(1));
  *(_QWORD *)(v21 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v21 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v23;
  v24 = swift_allocObject(&unk_13B77B8, 24, 7);
  swift_weakInit(v24 + 16);
  swift_allocObject(v18, 48, 7);
  v25 = UIScreenBrightnessDidChangeNotification;
  *(_QWORD *)(v9 + 40) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v21, 1, (uint64_t)sub_CDE738, v24);
  v26 = swift_initStackObject(v10, v35);
  *(_OWORD *)(v26 + 16) = xmmword_105B360;
  UIScreen.Dimensions.size.getter(COERCE_DOUBLE(1));
  *(_QWORD *)(v26 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v26 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 40) = v28;
  v29 = swift_allocObject(&unk_13B77B8, 24, 7);
  swift_weakInit(v29 + 16);
  swift_allocObject(v18, 48, 7);
  v30 = UIApplicationProtectedDataDidBecomeAvailable;
  v31 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v26, 1, (uint64_t)sub_CDEDA4, v29);
  *(_QWORD *)(v9 + 48) = v31;
  specialized Array._endMutation()(v31);

  swift_release(a2);
  v32 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = v9;
  swift_bridgeObjectRelease(v32);
  return v3;
}

uint64_t sub_CDE0D4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_CDE0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_CDE154();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

double sub_CDE14C()
{
  uint64_t v0;

  return sub_CDE0F8(v0);
}

double sub_CDE154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *Strong;
  void *v18;
  char *v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  int v62;
  os_log_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71[3];
  char v72[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  __chkstk_darwin(v2);
  v69 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500748);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500750);
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500758);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0 + 16;
  swift_beginAccess(v16, v72, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
  if (Strong
    && (v18 = Strong,
        v19 = (char *)objc_msgSend(Strong, "activationState"),
        v18,
        v19 == (_BYTE *)&dword_0 + 2))
  {
    if (*(_QWORD *)(v1 + 40))
      return result;
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v64 = v14;
    v21 = type metadata accessor for Logger(0);
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_15822C0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      v63 = v23;
      v26 = v25;
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_0, v63, v24, "[📸👁️] App is backgrounded: Observing for now playing changes", v25, 2u);
      v27 = v26;
      v23 = v63;
      swift_slowDealloc(v27, -1, -1);
    }

    v28 = *(_QWORD *)(v1 + 24);
    KeyPath = swift_getKeyPath(&unk_10A2748);
    v30 = swift_getKeyPath(&unk_10A2770);
    static Published.subscript.getter(v71, v28, KeyPath, v30);
    swift_release(KeyPath);
    swift_release(v30);
    v31 = *(void **)(v1 + 48);
    *(id *)(v1 + 48) = v71[0];

    swift_beginAccess(v28 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v71, 33, 0);
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
    Published.projectedValue.getter(v32);
    swift_endAccess(v71);
    v33 = sub_5C150((unint64_t *)&qword_1500760, &qword_1500FE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.dropFirst(_:)(1, v4, v33);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v34 = sub_5C150(&qword_1500768, &qword_1500748, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v35 = sub_CDF710();
    v36 = v64;
    Publisher<>.removeDuplicates()(v8, v34, v35);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v37 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    v71[0] = (id)static OS_dispatch_queue.main.getter(v37, v38, v39, v40, v41, v42, v43, v44, v63, v64, v65, v66, v67, v68, v69);
    v45 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v46 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v69, 1, 1, v45);
    v47 = sub_5C150(&qword_1500788, &qword_1500750, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v48 = sub_950D0((unint64_t *)&qword_1500F60, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v49 = v66;
    v50 = v67;
    Publisher.receive<A>(on:options:)(v71, v46, v66, v37, v47, v48);
    sub_56024(v46, (uint64_t *)&unk_15039E0);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v49);
    v51 = swift_allocObject(&unk_13B77B8, 24, 7);
    swift_weakInit(v51 + 16);
    v52 = sub_5C150(&qword_1500790, &qword_1500758, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v53 = v70;
    v54 = Publisher<>.sink(receiveValue:)(sub_CDF794, v51, v70, v52);
    v55 = swift_release(v51);
    (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v50, v53, v55);
    v56 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 40) = v54;
  }
  else
  {
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v57 = type metadata accessor for Logger(0);
    v58 = __swift_project_value_buffer(v57, (uint64_t)qword_15822C0);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter(v59);
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "[📸👁️] App is foregrounded: Stopping now playing changes observation", v61, 2u);
      swift_slowDealloc(v61, -1, -1);
    }

    v62 = *(unsigned __int8 *)(v1 + 64);
    *(_BYTE *)(v1 + 64) = 0;
    if (v62 == 1)
    {
      *(_QWORD *)(v1 + 72) = 0;
      *(_BYTE *)(v1 + 80) = 1;
    }
    v56 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 40) = 0;
  }
  *(_QWORD *)&result = swift_release(v56).n128_u64[0];
  return result;
}

