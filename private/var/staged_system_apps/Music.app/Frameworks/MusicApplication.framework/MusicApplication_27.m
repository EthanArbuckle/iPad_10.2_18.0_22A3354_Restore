uint64_t sub_E531D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_E5324C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = "(";
  sub_1D1B7C(319, (unint64_t *)&unk_150A5F8, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PlaceholderStyleModifier(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    swift_retain();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v17 = *((_QWORD *)v9 + 3);
        if (v17)
        {
          v18 = *((_QWORD *)v9 + 4);
          *((_QWORD *)v8 + 3) = v17;
          *((_QWORD *)v8 + 4) = v18;
          (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v8, v9);
        }
        else
        {
          v19 = v9[1];
          *v8 = *v9;
          v8[1] = v19;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        }
        v20 = (_OWORD *)((char *)v8 + 40);
        v21 = (_OWORD *)((char *)v9 + 40);
        v22 = *((_QWORD *)v9 + 8);
        if (v22)
        {
          v23 = *((_QWORD *)v9 + 9);
          *((_QWORD *)v8 + 8) = v22;
          *((_QWORD *)v8 + 9) = v23;
          (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
        }
        else
        {
          v24 = *(_OWORD *)((char *)v9 + 56);
          *v20 = *v21;
          *(_OWORD *)((char *)v8 + 56) = v24;
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        }
        v25 = *(int *)(v11 + 24);
        v26 = (char *)v8 + v25;
        v27 = (char *)v9 + v25;
        v28 = type metadata accessor for BlendMode(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v14 = v8;
      v15 = v10;
      v16 = 1;
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      swift_retain();
      v14 = v8;
      v15 = v10;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

void destroy for PlaceholderStyleModifier(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        __swift_destroy_boxed_opaque_existential_1(v4);
      if (v4[8])
        __swift_destroy_boxed_opaque_existential_1(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
}

_QWORD *initializeWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_OWORD *)((char *)a1 + v5);
  v7 = (_OWORD *)((char *)a2 + v5);
  swift_retain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v12 = 1;
    }
    else
    {
      v13 = *((_QWORD *)v7 + 3);
      if (v13)
      {
        v14 = *((_QWORD *)v7 + 4);
        *((_QWORD *)v6 + 3) = v13;
        *((_QWORD *)v6 + 4) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v6, v7);
      }
      else
      {
        v15 = v7[1];
        *v6 = *v7;
        v6[1] = v15;
        *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
      }
      v16 = (_OWORD *)((char *)v6 + 40);
      v17 = (_OWORD *)((char *)v7 + 40);
      v18 = *((_QWORD *)v7 + 8);
      if (v18)
      {
        v19 = *((_QWORD *)v7 + 9);
        *((_QWORD *)v6 + 8) = v18;
        *((_QWORD *)v6 + 9) = v19;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
      }
      else
      {
        v20 = *(_OWORD *)((char *)v7 + 56);
        *v16 = *v17;
        *(_OWORD *)((char *)v6 + 56) = v20;
        *((_QWORD *)v6 + 9) = *((_QWORD *)v7 + 9);
      }
      v21 = *(int *)(v9 + 24);
      v22 = (char *)v6 + v21;
      v23 = (char *)v7 + v21;
      v24 = type metadata accessor for BlendMode(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v12 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  else
  {
    *(_QWORD *)v6 = *(_QWORD *)v7;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v12);
  return a1;
}

_QWORD *assignWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (__int128 *)((char *)a2 + v7);
    sub_56024((uint64_t)a1 + v7, &qword_1506548);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        v14 = 1;
      }
      else
      {
        v15 = *((_QWORD *)v9 + 3);
        if (v15)
        {
          *((_QWORD *)v8 + 3) = v15;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v15 - 8))(v8, v9);
        }
        else
        {
          v16 = *v9;
          v17 = v9[1];
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          *v8 = v16;
          v8[1] = v17;
        }
        v18 = (_OWORD *)((char *)v8 + 40);
        v19 = (__int128 *)((char *)v9 + 40);
        v20 = *((_QWORD *)v9 + 8);
        if (v20)
        {
          *((_QWORD *)v8 + 8) = v20;
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v20 - 8))(v18, v19);
        }
        else
        {
          v21 = *v19;
          v22 = *(__int128 *)((char *)v9 + 56);
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
          *v18 = v21;
          *(_OWORD *)((char *)v8 + 56) = v22;
        }
        v23 = *(int *)(v11 + 24);
        v24 = (char *)v8 + v23;
        v25 = (char *)v9 + v23;
        v26 = type metadata accessor for BlendMode(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v14 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
    }
    else
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v14);
  }
  return a1;
}

_OWORD *initializeWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = v6[1];
      *v5 = *v6;
      v5[1] = v11;
      *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
      *(_OWORD *)((char *)v5 + 40) = *(_OWORD *)((char *)v6 + 40);
      *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
      *((_QWORD *)v5 + 9) = *((_QWORD *)v6 + 9);
      v12 = *(int *)(v8 + 24);
      v13 = (char *)v5 + v12;
      v14 = (char *)v6 + v12;
      v15 = type metadata accessor for BlendMode(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    sub_56024((uint64_t)a1 + v6, &qword_1506548);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = v8[1];
        *v7 = *v8;
        v7[1] = v13;
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
        v14 = *(int *)(v10 + 24);
        v15 = (char *)v7 + v14;
        v16 = (char *)v8 + v14;
        v17 = type metadata accessor for BlendMode(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E53DD0);
}

uint64_t sub_E53DD0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E53E5C);
}

char *sub_E53E5C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_E53ED4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  sub_E529C8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_E53F4C()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BED0);
  v1[1] = sub_E4B3D8();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
}

unint64_t sub_E53F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A6C0;
  if (!qword_150A6C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A098);
    sub_E54020();
    sub_5C150(&qword_150A6D8, &qword_150A0B8, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A6C0);
  }
  return result;
}

unint64_t sub_E54020()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150A6C8;
  if (!qword_150A6C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A090);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A0A0);
    v2[1] = sub_E4D284();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_5C150(&qword_150A6D0, &qword_150A0B0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A6C8);
  }
  return result;
}

unint64_t sub_E540D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A6E0;
  if (!qword_150A6E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A0D8);
    sub_E54158();
    sub_5C150(&qword_150A708, &qword_150A0D0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A6E0);
  }
  return result;
}

unint64_t sub_E54158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A6E8;
  if (!qword_150A6E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A6F0);
    sub_5C150(&qword_150A6F8, &qword_150A700, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A6E8);
  }
  return result;
}

unint64_t sub_E541E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A710;
  if (!qword_150A710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A230);
    sub_5C150(&qword_150A718, &qword_150A240, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_150A720, &qword_150A238, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A710);
  }
  return result;
}

uint64_t sub_E5427C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for PlaceholderStyleModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_4DD24(&qword_150A728, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t _s11PlaceholderO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_E54348 + 4 * byte_10AF7CC[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_E5437C + 4 * byte_10AF7C7[v4]))();
}

uint64_t sub_E5437C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E54384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE5438CLL);
  return result;
}

uint64_t sub_E54398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE543A0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_E543A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E543AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11PlaceholderO10CodingKeysOMa()
{
  return &_s11PlaceholderO10CodingKeysON;
}

ValueMetadata *_s11PlaceholderO15MusicCodingKeysOMa()
{
  return &_s11PlaceholderO15MusicCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20NowPlayingCodingKeysOMa()
{
  return &_s11PlaceholderO20NowPlayingCodingKeysON;
}

ValueMetadata *_s11PlaceholderO21NewPlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO21NewPlaylistCodingKeysON;
}

uint64_t _s11PlaceholderO18PlaylistCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_E54438 + 4 * byte_10AF7D1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_E54458 + 4 * byte_10AF7D6[v4]))();
}

_BYTE *sub_E54438(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_E54458(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_E54460(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_E54468(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_E54470(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_E54478(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11PlaceholderO18PlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO18PlaylistCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MusicVideoCodingKeysOMa()
{
  return &_s11PlaceholderO20MusicVideoCodingKeysON;
}

ValueMetadata *_s11PlaceholderO12TvCodingKeysOMa()
{
  return &_s11PlaceholderO12TvCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MicrophoneCodingKeysOMa()
{
  return &_s11PlaceholderO20MicrophoneCodingKeysON;
}

ValueMetadata *_s11PlaceholderO16PersonCodingKeysOMa()
{
  return &_s11PlaceholderO16PersonCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15RadioCodingKeysOMa()
{
  return &_s11PlaceholderO15RadioCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15GenreCodingKeysOMa()
{
  return &_s11PlaceholderO15GenreCodingKeysON;
}

ValueMetadata *_s11PlaceholderO18ComposerCodingKeysOMa()
{
  return &_s11PlaceholderO18ComposerCodingKeysON;
}

ValueMetadata *_s19PlaceholderStyleKeyVMa()
{
  return &_s19PlaceholderStyleKeyVN;
}

unint64_t sub_E54518()
{
  unint64_t result;

  result = qword_150A730;
  if (!qword_150A730)
  {
    result = swift_getWitnessTable(&unk_10AFFB4, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A730);
  }
  return result;
}

unint64_t sub_E54560()
{
  unint64_t result;

  result = qword_150A738;
  if (!qword_150A738)
  {
    result = swift_getWitnessTable(&unk_10B015C, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A738);
  }
  return result;
}

unint64_t sub_E545A8()
{
  unint64_t result;

  result = qword_150A740;
  if (!qword_150A740)
  {
    result = swift_getWitnessTable(&unk_10B007C, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A740);
  }
  return result;
}

unint64_t sub_E545F0()
{
  unint64_t result;

  result = qword_150A748;
  if (!qword_150A748)
  {
    result = swift_getWitnessTable(&unk_10B00A4, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A748);
  }
  return result;
}

unint64_t sub_E54638()
{
  unint64_t result;

  result = qword_150A750;
  if (!qword_150A750)
  {
    result = swift_getWitnessTable(&unk_10B002C, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A750);
  }
  return result;
}

unint64_t sub_E54680()
{
  unint64_t result;

  result = qword_150A758;
  if (!qword_150A758)
  {
    result = swift_getWitnessTable(&unk_10B0054, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A758);
  }
  return result;
}

unint64_t sub_E546C8()
{
  unint64_t result;

  result = qword_150A760;
  if (!qword_150A760)
  {
    result = swift_getWitnessTable(&unk_10AFFDC, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A760);
  }
  return result;
}

unint64_t sub_E54710()
{
  unint64_t result;

  result = qword_150A768;
  if (!qword_150A768)
  {
    result = swift_getWitnessTable(&unk_10B0004, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A768);
  }
  return result;
}

unint64_t sub_E54758()
{
  unint64_t result;

  result = qword_150A770;
  if (!qword_150A770)
  {
    result = swift_getWitnessTable(&unk_10AFF24, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A770);
  }
  return result;
}

unint64_t sub_E547A0()
{
  unint64_t result;

  result = qword_150A778;
  if (!qword_150A778)
  {
    result = swift_getWitnessTable(&unk_10AFF4C, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A778);
  }
  return result;
}

unint64_t sub_E547E8()
{
  unint64_t result;

  result = qword_150A780;
  if (!qword_150A780)
  {
    result = swift_getWitnessTable(&unk_10AFED4, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A780);
  }
  return result;
}

unint64_t sub_E54830()
{
  unint64_t result;

  result = qword_150A788;
  if (!qword_150A788)
  {
    result = swift_getWitnessTable(&unk_10AFEFC, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A788);
  }
  return result;
}

unint64_t sub_E54878()
{
  unint64_t result;

  result = qword_150A790;
  if (!qword_150A790)
  {
    result = swift_getWitnessTable(&unk_10AFE84, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A790);
  }
  return result;
}

unint64_t sub_E548C0()
{
  unint64_t result;

  result = qword_150A798;
  if (!qword_150A798)
  {
    result = swift_getWitnessTable(&unk_10AFEAC, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A798);
  }
  return result;
}

unint64_t sub_E54908()
{
  unint64_t result;

  result = qword_150A7A0;
  if (!qword_150A7A0)
  {
    result = swift_getWitnessTable(&unk_10AFE34, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7A0);
  }
  return result;
}

unint64_t sub_E54950()
{
  unint64_t result;

  result = qword_150A7A8;
  if (!qword_150A7A8)
  {
    result = swift_getWitnessTable(&unk_10AFE5C, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7A8);
  }
  return result;
}

unint64_t sub_E54998()
{
  unint64_t result;

  result = qword_150A7B0;
  if (!qword_150A7B0)
  {
    result = swift_getWitnessTable(&unk_10AFDE4, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7B0);
  }
  return result;
}

unint64_t sub_E549E0()
{
  unint64_t result;

  result = qword_150A7B8;
  if (!qword_150A7B8)
  {
    result = swift_getWitnessTable(&unk_10AFE0C, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7B8);
  }
  return result;
}

unint64_t sub_E54A28()
{
  unint64_t result;

  result = qword_150A7C0;
  if (!qword_150A7C0)
  {
    result = swift_getWitnessTable(&unk_10AFD94, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7C0);
  }
  return result;
}

unint64_t sub_E54A70()
{
  unint64_t result;

  result = qword_150A7C8;
  if (!qword_150A7C8)
  {
    result = swift_getWitnessTable(&unk_10AFDBC, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7C8);
  }
  return result;
}

unint64_t sub_E54AB8()
{
  unint64_t result;

  result = qword_150A7D0;
  if (!qword_150A7D0)
  {
    result = swift_getWitnessTable(&unk_10AFD44, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7D0);
  }
  return result;
}

unint64_t sub_E54B00()
{
  unint64_t result;

  result = qword_150A7D8;
  if (!qword_150A7D8)
  {
    result = swift_getWitnessTable(&unk_10AFD6C, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7D8);
  }
  return result;
}

unint64_t sub_E54B48()
{
  unint64_t result;

  result = qword_150A7E0;
  if (!qword_150A7E0)
  {
    result = swift_getWitnessTable(&unk_10AFCF4, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7E0);
  }
  return result;
}

unint64_t sub_E54B90()
{
  unint64_t result;

  result = qword_150A7E8;
  if (!qword_150A7E8)
  {
    result = swift_getWitnessTable(&unk_10AFD1C, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7E8);
  }
  return result;
}

unint64_t sub_E54BD8()
{
  unint64_t result;

  result = qword_150A7F0;
  if (!qword_150A7F0)
  {
    result = swift_getWitnessTable(&unk_10B00CC, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7F0);
  }
  return result;
}

unint64_t sub_E54C20()
{
  unint64_t result;

  result = qword_150A7F8;
  if (!qword_150A7F8)
  {
    result = swift_getWitnessTable(&unk_10B00F4, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A7F8);
  }
  return result;
}

uint64_t sub_E54C64(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  if (a1 == 0x636973756DLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636973756DLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL)
  {
    v7 = 0xEA0000000000676ELL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6979616C50776F6ELL, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6C79616C5077656ELL && a2 == 0xEB00000000747369)
  {
    v8 = 0xEB00000000747369;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C79616C5077656ELL, 0xEB00000000747369, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7473696C79616C70 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C70, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x646956636973756DLL && a2 == 0xEA00000000006F65)
  {
    v10 = 0xEA00000000006F65;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646956636973756DLL, 0xEA00000000006F65, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    v11 = 0xE200000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(30324, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x6F68706F7263696DLL && a2 == 0xEA0000000000656ELL)
  {
    v12 = 0xEA0000000000656ELL;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F68706F7263696DLL, 0xEA0000000000656ELL, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000)
  {
    v13 = 0xE600000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F73726570, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x6F69646172 && a2 == 0xE500000000000000)
  {
    v14 = 0xE500000000000000;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69646172, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0x65726E6567 && a2 == 0xE500000000000000)
  {
    v15 = 0xE500000000000000;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65726E6567, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0x7265736F706D6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 10;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265736F706D6F63, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v16 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

double sub_E550CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  double result;

  if ((a4 & 1) != 0)
    return sub_E550D8(a1, a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_E550D8(uint64_t a1, uint64_t a2)
{
  double result;

  if (a2)
  {
    swift_release(a2);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_E55108(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    swift_retain(result);
    return swift_retain(a2);
  }
  return result;
}

double sub_E55134(uint64_t a1, uint64_t a2, char a3)
{
  double result;

  if ((a3 & 1) == 0)
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

unint64_t sub_E55148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A820;
  if (!qword_150A820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A818);
    sub_E551CC();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A820);
  }
  return result;
}

unint64_t sub_E551CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A828;
  if (!qword_150A828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A830);
    sub_5C150(&qword_150A838, &qword_150A840, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A828);
  }
  return result;
}

uint64_t sub_E55250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for ArtworkMotionView(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = (v4 + v5 + v8) & ~v8;
  v29 = *(_QWORD *)(v7 + 64);
  v9 = v0 + v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v28(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v30 = v0;
  v13 = v0 + v31;
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v31, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = v13 + v6[5];
  v17 = type metadata accessor for Artwork(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  v19 = v13 + v6[6];
  v20 = type metadata accessor for Artwork.CropStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v22 = v13 + v6[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v22, 1, v1) && !v28(v22, 10, v10))
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  v25 = v13 + v6[9];
  v26 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  return swift_deallocObject(v30, v31 + v29, v3 | v8 | 7);
}

uint64_t sub_E554C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_E459CC(v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_E55538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 42, v2 | 7);
}

uint64_t sub_E55600@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  return sub_E448F4((uint64_t *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t TextBadge.init(immersive:)(char a1)
{
  if ((a1 & 1) != 0)
    return 4;
  else
    return 2;
}

uint64_t TextBadge.view.getter(char a1)
{
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[5];

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  v10[3] = type metadata accessor for TintShapeStyle(0);
  v10[4] = &protocol witness table for TintShapeStyle;
  __swift_allocate_boxed_opaque_existential_1Tm(v10);
  TintShapeStyle.init()();
  v9 = v5;
  TextBadge.view(favoriteBadgeConfiguration:)(&v9, a1);
  v7 = v6;
  sub_E57BF4(&v9);
  return v7;
}

void TextBadge.view(favoriteBadgeConfiguration:)(_QWORD *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Swift::String v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;

  if (a2 != 2)
  {
    if (a2 == 3)
    {
      sub_55D1C((uint64_t)(a1 + 1), (uint64_t)v79);
      v32 = v80;
      v76 = v81;
      v75 = __swift_project_boxed_opaque_existential_1(v79, v80);
      v33 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v35 = *v33;
      v34 = v33[1];
      swift_bridgeObjectRetain();
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v36);

      if (v37)
      {
        v38 = objc_msgSend(v37, "imageWithConfiguration:", *a1);

        v39 = objc_msgSend(v38, "imageWithRenderingMode:", 2);
        v40 = Image.init(uiImage:)(v39);
        v41 = Text.init(_:)(v40);
        v43 = v42;
        v45 = v44;
        v47 = v46 & 1;
        v48 = static Text.+ infix(_:_:)(v35, v34, 0, _swiftEmptyArrayStorage, v41, v42, v47, v44);
        v50 = v49;
        v52 = v51;
        v54 = v53 & 1;
        sub_AF8E8(v41, v43, v47);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v45);
        v55 = Text.foregroundStyle<A>(_:)(v75, v48, v50, v54, v52, v32, v76);
        v57 = v56;
        v59 = v58;
        LOBYTE(v47) = v60 & 1;
        sub_AF8E8(v48, v50, v54);
        swift_bridgeObjectRelease(v52);
        v61 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
        v62 = *v61;
        v63 = v61[1];
        swift_bridgeObjectRetain();
        Text.accessibilityLabel(_:)(v62, v63, v55, v57, v47, v59);
        swift_bridgeObjectRelease(v63);
        sub_AF8E8(v55, v57, v47);
        swift_bridgeObjectRelease(v59);
        __swift_destroy_boxed_opaque_existential_1(v79);
      }
      else
      {
        __break(1u);
      }
    }
    else if (a2 == 4)
    {
      v2 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v3 = *v2;
      v4 = v2[1];
      swift_bridgeObjectRetain();
      v5 = Image.init(_internalSystemName:)(0x6461622E3130336ELL, 0xEF79616C702E6567);
      v6 = Text.init(_:)(v5);
      v8 = v7;
      v10 = v9;
      v12 = v11 & 1;
      v13 = static Text.+ infix(_:_:)(v3, v4, 0, _swiftEmptyArrayStorage, v6, v7, v12, v9);
      v15 = v14;
      v17 = v16;
      v19 = v18 & 1;
      sub_AF8E8(v6, v8, v12);
      swift_bridgeObjectRelease(v4);
      v20 = swift_bridgeObjectRelease(v10);
      LODWORD(v79[0]) = static HierarchicalShapeStyle.secondary.getter(v20);
      v21 = Text.foregroundStyle<A>(_:)(v79, v13, v15, v19, v17, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      v23 = v22;
      v25 = v24;
      v27 = v26 & 1;
      sub_AF8E8(v13, v15, v19);
      swift_bridgeObjectRelease(v17);
      v28 = AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor();
      v29 = *v28;
      v30 = v28[1];
      swift_bridgeObjectRetain();
      Text.accessibilityLabel(_:)(v29, v30, v21, v23, v27, v25);
      swift_bridgeObjectRelease(v30);
      sub_AF8E8(v21, v23, v27);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v64 = a2 & 1;
      v65 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v67 = *v65;
      v66 = v65[1];
      v77 = v67;
      v78 = v66;
      swift_bridgeObjectRetain();
      v68 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess(v68 + 32, v79, 0, 0);
      v69 = *(_QWORD *)(v68 + 32);
      v70 = *(void **)(v68 + 40);
      swift_bridgeObjectRetain();
      v71._countAndFlagsBits = v69;
      v71._object = v70;
      String.append(_:)(v71);
      v72 = swift_bridgeObjectRelease(v70);
      v73 = v77;
      v74 = v78;
      LODWORD(v77) = static HierarchicalShapeStyle.secondary.getter(v72);
      Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v77, v64, v73, v78, 0, (uint64_t)_swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      swift_bridgeObjectRelease(v74);
    }
  }
}

uint64_t static FavoriteBadgeConfiguration.default.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  double v3;
  double v4;
  id v5;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  a1[4] = type metadata accessor for TintShapeStyle(0);
  a1[5] = &protocol witness table for TintShapeStyle;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a1 + 1);
  result = TintShapeStyle.init()(boxed_opaque_existential_1Tm);
  *a1 = v5;
  return result;
}

uint64_t sub_E55CE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E55D0C + 4 * byte_10B05B0[*v0]))(0x7974706D65, 0xE500000000000000);
}

uint64_t sub_E55D0C()
{
  return 0x746963696C707865;
}

uint64_t sub_E55D24()
{
  return 0x657469726F766166;
}

uint64_t sub_E55D3C()
{
  return 0x76697372656D6D69;
}

uint64_t sub_E55D58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E57D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E55D7C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57C28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E55DA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57C28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E55DCC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57D38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E55DF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57D38();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E55E1C()
{
  return 0x626179616C507369;
}

uint64_t sub_E55E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    result = swift_bridgeObjectRelease(0xEA0000000000656CLL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x626179616C507369, 0xEA0000000000656CLL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_E55ED8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57CF4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E55F00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57CF4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E55F28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57CB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E55F50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57CB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E55F78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57C6C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E55FA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E57C6C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextBadge.encode(to:)(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A8A8);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin();
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A8B0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A8B8);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A8C0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A8C8);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin();
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_E57C28();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v18, v16, v17);
  switch(v3)
  {
    case 2:
      v41 = 0;
      v22 = sub_E57D38();
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.EmptyCodingKeys, &v41, v40, &type metadata for TextBadge.EmptyCodingKeys, v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 3:
      v43 = 2;
      v23 = sub_E57CB0();
      v24 = v31;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.FavoriteCodingKeys, &v43, v40, &type metadata for TextBadge.FavoriteCodingKeys, v23);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 4:
      v44 = 3;
      v19 = sub_E57C6C();
      v20 = v36;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ImmersiveCodingKeys, &v44, v40, &type metadata for TextBadge.ImmersiveCodingKeys, v19);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
  }
  v42 = 1;
  v26 = sub_E57CF4();
  v27 = v40;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ExplicitCodingKeys, &v42, v40, &type metadata for TextBadge.ExplicitCodingKeys, v26);
  v28 = v34;
  KeyedEncodingContainer.encode(_:forKey:)(v3 & 1, v29, v34);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v27);
}

char *TextBadge.init(from:)(_QWORD *a1)
{
  return sub_E57F38(a1);
}

char *sub_E56324@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_E57F38(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_E5634C(_QWORD *a1)
{
  unsigned __int8 *v1;

  return TextBadge.encode(to:)(a1, *v1);
}

uint64_t GenericMusicItem.favoriteBadge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  __chkstk_darwin();
  v58 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Artist(0);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin();
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  __chkstk_darwin();
  v64 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  __chkstk_darwin();
  v61 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v11 - 8);
  v69 = v11;
  __chkstk_darwin();
  v67 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A8F8);
  __chkstk_darwin();
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Album(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for GenericMusicItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin();
  v57 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin();
  v24 = (char *)&v56 - v23;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v56 = v1;
  v26 = v1;
  v27 = v25;
  ((void (*)(char *, uint64_t, uint64_t, double))v25)((char *)&v56 - v23, v26, v19, v22);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v24, v19);
  if (v28 != enum case for GenericMusicItem.album(_:))
  {
    if (v28 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
      v32 = v24;
      v33 = v70;
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v32, v70);
      Artist.favoriteStatus.getter(v34);
      v35 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 0, 1, v35);
      v31 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
      return v31;
    }
    if (v28 == enum case for GenericMusicItem.composer(_:)
      || v28 == enum case for GenericMusicItem.creditArtist(_:)
      || v28 == enum case for GenericMusicItem.curator(_:)
      || v28 == enum case for GenericMusicItem.editorialItem(_:)
      || v28 == enum case for GenericMusicItem.genre(_:)
      || v28 == enum case for GenericMusicItem.musicMovie(_:))
    {
      goto LABEL_11;
    }
    if (v28 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
      v37 = v67;
      v38 = v68;
      v39 = v69;
      v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v68 + 32))(v67, v24, v69);
      MusicVideo.favoriteStatus.getter(v40);
    }
    else
    {
      if (v28 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v28 != enum case for GenericMusicItem.radioShow(_:)
          && v28 != enum case for GenericMusicItem.recordLabel(_:)
          && v28 != enum case for GenericMusicItem.socialProfile(_:))
        {
          if (v28 == enum case for GenericMusicItem.song(_:))
          {
            (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
            v37 = v61;
            v38 = v62;
            v39 = v63;
            v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v61, v24, v63);
            Song.favoriteStatus.getter(v43);
            goto LABEL_18;
          }
          if (v28 != enum case for GenericMusicItem.station(_:)
            && v28 != enum case for GenericMusicItem.tvEpisode(_:)
            && v28 != enum case for GenericMusicItem.tvSeason(_:)
            && v28 != enum case for GenericMusicItem.tvShow(_:)
            && v28 != enum case for GenericMusicItem.uploadedAudio(_:)
            && v28 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v28 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
              swift_bridgeObjectRelease();
            }
            else
            {
              v44 = Logger.badging.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v44, v60);
              v45 = v27(v57, v56, v19);
              v46 = Logger.logObject.getter(v45);
              v47 = static os_log_type_t.fault.getter(v46);
              if (os_log_type_enabled(v46, v47))
              {
                v48 = swift_slowAlloc(22, -1);
                v70 = swift_slowAlloc(64, -1);
                v71 = v70;
                *(_DWORD *)v48 = 136315394;
                *(_QWORD *)(v48 + 4) = sub_DCF730((char *)0xD000000000000010, (char *)0x800000000110C330, &v71);
                *(_WORD *)(v48 + 12) = 2080;
                v49 = sub_4DD24((unint64_t *)&qword_15070F8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                v50 = v57;
                v51 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v19, v49);
                *(_QWORD *)(v48 + 14) = sub_DCF730(v51, v52, &v71);
                v53 = swift_bridgeObjectRelease();
                v54 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
                v54(v50, v19, v53);
                _os_log_impl(&dword_0, v46, v47, "Unhandled case for favorite badge with item: %s, %s", (uint8_t *)v48, 0x16u);
                v55 = v70;
                swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v55, -1, -1);
                swift_slowDealloc(v48, -1, -1);
              }
              else
              {
                v54 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
                ((void (*)(char *, uint64_t))v54)(v57, v19);
              }

              (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
              ((void (*)(char *, uint64_t))v54)(v24, v19);
            }
            return 2;
          }
        }
LABEL_11:
        (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
        return 2;
      }
      (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
      v37 = v64;
      v38 = v65;
      v39 = v66;
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 32))(v64, v24, v66);
      Playlist.favoriteStatus.getter(v41);
    }
LABEL_18:
    v42 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v14, 0, 1, v42);
    v31 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    return v31;
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v24, v19);
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v24, v15);
  Album.favoriteStatus.getter(v29);
  v30 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v14, 0, 1, v30);
  v31 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v31;
}

uint64_t GenericMusicItem.explicitBadge(_:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, double);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  __n128 v77;
  void (*v78)(char *, uint64_t, __n128);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  int v114;
  uint64_t v115;

  v2 = v1;
  v114 = a1;
  v87 = type metadata accessor for Logger(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin();
  v85 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVSeason(0);
  v95 = *(_QWORD *)(v4 - 8);
  v96 = v4;
  __chkstk_darwin();
  v94 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v111 = *(_QWORD *)(v6 - 8);
  v112 = v6;
  __chkstk_darwin();
  v110 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for TVShow(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v91 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A900);
  __chkstk_darwin();
  v113 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TVEpisode(0);
  v98 = *(_QWORD *)(v10 - 8);
  v99 = v10;
  __chkstk_darwin();
  v97 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for UploadedVideo(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin();
  v82 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for UploadedAudio(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin();
  v88 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Playlist(0);
  v107 = *(_QWORD *)(v14 - 8);
  v108 = v14;
  __chkstk_darwin();
  v106 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Station(0);
  v101 = *(_QWORD *)(v16 - 8);
  v102 = v16;
  __chkstk_darwin();
  v100 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Song(0);
  v104 = *(_QWORD *)(v18 - 8);
  v105 = v18;
  __chkstk_darwin();
  v103 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for MusicVideo(0);
  v20 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin();
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A908);
  __chkstk_darwin();
  v24 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Album(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin();
  v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(type metadata accessor for GenericMusicItem(0) - 8);
  __chkstk_darwin();
  v81 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin();
  v33 = (char *)&v79 - v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t, double))(v29 + 16);
  v80 = v2;
  v35 = v2;
  v37 = v36;
  v34((char *)&v79 - v32, v35, v36, v31);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v33, v37);
  if (v38 != enum case for GenericMusicItem.album(_:))
  {
    v41 = v114;
    if (v38 == enum case for GenericMusicItem.artist(_:)
      || v38 == enum case for GenericMusicItem.composer(_:)
      || v38 == enum case for GenericMusicItem.creditArtist(_:)
      || v38 == enum case for GenericMusicItem.curator(_:)
      || v38 == enum case for GenericMusicItem.editorialItem(_:)
      || v38 == enum case for GenericMusicItem.genre(_:))
    {
      goto LABEL_9;
    }
    if (v38 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
      v43 = v110;
      v44 = v111;
      v45 = v112;
      v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v111 + 32))(v110, v33, v112);
      v47 = (uint64_t)v113;
      MusicMovie.contentRating.getter(v46);
LABEL_14:
      v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(v47, v41 & 1);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
      return v40;
    }
    v48 = v114;
    if (v38 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
      v49 = v109;
      v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v22, v33, v109);
      MusicVideo.contentRating.getter(v50);
      v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v24, v48 & 1);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v49);
      return v40;
    }
    v51 = (uint64_t)v24;
    if (v38 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
      v52 = v106;
      v53 = v107;
      v54 = v108;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v107 + 32))(v106, v33, v108);
      Playlist.contentRating.getter(v55);
    }
    else
    {
      if (v38 == enum case for GenericMusicItem.radioShow(_:)
        || v38 == enum case for GenericMusicItem.recordLabel(_:)
        || v38 == enum case for GenericMusicItem.socialProfile(_:))
      {
LABEL_9:
        (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v37);
        return 2;
      }
      if (v38 != enum case for GenericMusicItem.song(_:))
      {
        v57 = v37;
        if (v38 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
          v58 = v100;
          v59 = v101;
          v60 = v102;
          v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v101 + 32))(v100, v33, v102);
          Station.contentRating.getter(v61);
        }
        else
        {
          if (v38 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
            v43 = v97;
            v44 = v98;
            v45 = v99;
            v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(v97, v33, v99);
            v47 = (uint64_t)v113;
            TVEpisode.contentRating.getter(v62);
            goto LABEL_14;
          }
          if (v38 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
            v44 = v95;
            v45 = v96;
            v43 = v94;
            v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v95 + 32))(v94, v33, v96);
            v47 = (uint64_t)v113;
            TVSeason.contentRating.getter(v63);
            goto LABEL_14;
          }
          if (v38 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
            v44 = v92;
            v43 = v91;
            v45 = v93;
            v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 32))(v91, v33, v93);
            v47 = (uint64_t)v113;
            TVShow.contentRating.getter(v64);
            goto LABEL_14;
          }
          if (v38 == enum case for GenericMusicItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
            v59 = v89;
            v58 = v88;
            v60 = v90;
            v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v89 + 32))(v88, v33, v90);
            UploadedAudio.contentRating.getter(v65);
          }
          else
          {
            if (v38 != enum case for GenericMusicItem.uploadedVideo(_:))
            {
              if (v38 == enum case for GenericMusicItem.other(_:))
              {
                (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
                swift_bridgeObjectRelease();
              }
              else
              {
                v67 = Logger.badging.unsafeMutableAddressor();
                (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v67, v87);
                v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v81, v80, v37);
                v69 = Logger.logObject.getter(v68);
                v70 = static os_log_type_t.info.getter(v69);
                if (os_log_type_enabled(v69, v70))
                {
                  v71 = swift_slowAlloc(22, -1);
                  v72 = swift_slowAlloc(64, -1);
                  v115 = v72;
                  *(_DWORD *)v71 = 136315394;
                  *(_QWORD *)(v71 + 4) = sub_DCF730((char *)0xD000000000000010, (char *)0x800000000110C330, &v115);
                  *(_WORD *)(v71 + 12) = 2080;
                  v73 = sub_4DD24((unint64_t *)&qword_15070F8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                  v74 = v81;
                  v75 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v57, v73);
                  *(_QWORD *)(v71 + 14) = sub_DCF730(v75, v76, &v115);
                  v77 = swift_bridgeObjectRelease();
                  v78 = *(void (**)(char *, uint64_t, __n128))(v29 + 8);
                  v78(v74, v57, v77);
                  _os_log_impl(&dword_0, v69, v70, "Unhandled case for explicit badge with item: %s, %s", (uint8_t *)v71, 0x16u);
                  swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v72, -1, -1);
                  swift_slowDealloc(v71, -1, -1);
                }
                else
                {
                  v78 = *(void (**)(char *, uint64_t, __n128))(v29 + 8);
                  ((void (*)(char *, uint64_t))v78)(v81, v37);
                }

                (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
                ((void (*)(char *, uint64_t))v78)(v33, v57);
              }
              return 2;
            }
            (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
            v59 = v83;
            v58 = v82;
            v60 = v84;
            v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))(v82, v33, v84);
            UploadedVideo.contentRating.getter(v66);
          }
        }
        v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v24, v41 & 1);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
        return v40;
      }
      (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
      v52 = v103;
      v53 = v104;
      v54 = v105;
      v56.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v104 + 32))(v103, v33, v105);
      Song.contentRating.getter(v56);
    }
    v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(v51, v48 & 1);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
    return v40;
  }
  (*(void (**)(char *, uint64_t))(v29 + 96))(v33, v37);
  v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v33, v25);
  Album.contentRating.getter(v39);
  v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v24, v114 & 1);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  return v40;
}

uint64_t FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return sub_8B15C(a2, (uint64_t)(a3 + 1));
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for ContentRating(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A998);
  __chkstk_darwin();
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A908);
  __chkstk_darwin();
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin();
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))((char *)&v22 - v14, enum case for ContentRating.explicit(_:), v4, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  v16 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_5C238(a1, (uint64_t)v10, &qword_150A908);
  sub_5C238((uint64_t)v15, v16, &qword_150A908);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v10, 1, v4) == 1)
  {
    sub_56024(a1, &qword_150A908);
    sub_56024((uint64_t)v15, &qword_150A908);
    if (v17(v16, 1, v4) == 1)
    {
      sub_56024((uint64_t)v10, &qword_150A908);
      return a2 & 1;
    }
    goto LABEL_6;
  }
  sub_5C238((uint64_t)v10, (uint64_t)v12, &qword_150A908);
  if (v17(v16, 1, v4) == 1)
  {
    sub_56024(a1, &qword_150A908);
    sub_56024((uint64_t)v15, &qword_150A908);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_6:
    sub_56024((uint64_t)v10, &qword_150A998);
    return 2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
  v18 = sub_4DD24(&qword_150A9A0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v7, v4, v18);
  sub_56024(a1, &qword_150A908);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  sub_56024((uint64_t)v15, &qword_150A908);
  v20(v12, v4);
  sub_56024((uint64_t)v10, &qword_150A908);
  if ((v19 & 1) != 0)
    return a2 & 1;
  return 2;
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(uint64_t a1, char a2)
{
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150A900);
  v4 = __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for VideoContentRating(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v6, &qword_150A900);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_56024(a1, &qword_150A900);
    sub_56024((uint64_t)v6, &qword_150A900);
    return 2;
  }
  else
  {
    v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v13 = VideoContentRating.isExplicit.getter(v12);
    sub_56024(a1, &qword_150A900);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    result = 2;
    if (v13 != 2)
    {
      if ((v13 & 1) != 0)
        return a2 & 1;
      else
        return 2;
    }
  }
  return result;
}

uint64_t _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150A8F8);
  __chkstk_darwin();
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v11 - v4;
  sub_5C238(a1, (uint64_t)&v11 - v4, &qword_150A8F8);
  v6 = type metadata accessor for MusicFavoriteStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1
    || (sub_5C238((uint64_t)v5, (uint64_t)v3, &qword_150A8F8),
        v8 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v3, v6),
        v8 == enum case for MusicFavoriteStatus.neutral(_:)))
  {
LABEL_7:
    v9 = 2;
    goto LABEL_8;
  }
  if (v8 != enum case for MusicFavoriteStatus.favorited(_:))
  {
    if (v8 != enum case for MusicFavoriteStatus.disliked(_:))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    goto LABEL_7;
  }
  v9 = 3;
LABEL_8:
  sub_56024(a1, &qword_150A8F8);
  sub_56024((uint64_t)v5, &qword_150A8F8);
  return v9;
}

id *sub_E57BF4(id *a1)
{
  _QWORD *v2;

  v2 = a1 + 1;

  __swift_destroy_boxed_opaque_existential_1(v2);
  return a1;
}

unint64_t sub_E57C28()
{
  unint64_t result;

  result = qword_150A8D0;
  if (!qword_150A8D0)
  {
    result = swift_getWitnessTable(&unk_10B0A84, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A8D0);
  }
  return result;
}

unint64_t sub_E57C6C()
{
  unint64_t result;

  result = qword_150A8D8;
  if (!qword_150A8D8)
  {
    result = swift_getWitnessTable(&unk_10B0A34, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A8D8);
  }
  return result;
}

unint64_t sub_E57CB0()
{
  unint64_t result;

  result = qword_150A8E0;
  if (!qword_150A8E0)
  {
    result = swift_getWitnessTable(&unk_10B09E4, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A8E0);
  }
  return result;
}

unint64_t sub_E57CF4()
{
  unint64_t result;

  result = qword_150A8E8;
  if (!qword_150A8E8)
  {
    result = swift_getWitnessTable(&unk_10B0994, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A8E8);
  }
  return result;
}

unint64_t sub_E57D38()
{
  unint64_t result;

  result = qword_150A8F0;
  if (!qword_150A8F0)
  {
    result = swift_getWitnessTable(&unk_10B0944, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A8F0);
  }
  return result;
}

uint64_t sub_E57D7C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7974706D65, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x746963696C707865 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657469726F766166, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x76697372656D6D69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x76697372656D6D69, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

char *sub_E57F38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD v32[10];
  _QWORD *v33;
  uint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A970);
  v3 = *(_QWORD *)(v2 - 8);
  v32[5] = v2;
  v32[6] = v3;
  __chkstk_darwin();
  v32[9] = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A978);
  v6 = *(_QWORD *)(v5 - 8);
  v32[3] = v5;
  v32[4] = v6;
  __chkstk_darwin();
  v32[8] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A980);
  v9 = *(_QWORD *)(v8 - 8);
  v32[1] = v8;
  v32[2] = v9;
  __chkstk_darwin();
  v32[7] = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A988);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A990);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_E57C28();
  v20 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v19, v18, v17);
  if (!v20)
  {
    v32[0] = v12;
    v34 = v11;
    v21 = v14;
    v22 = KeyedDecodingContainer.allKeys.getter(v13);
    v23 = v13;
    v24 = v16;
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v16 = (char *)type metadata accessor for DecodingError(0);
    swift_allocError(v16, &protocol witness table for DecodingError, 0, 0);
    v25 = v23;
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_150A218);
    *v27 = &type metadata for TextBadge;
    v28 = KeyedDecodingContainer.codingPath.getter(v25);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x800000000110DDA0, 0);
    v29 = (*(uint64_t (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v16 - 1) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow(v29);
    v30 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v24, v25, v30);
  }
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v16;
}

uint64_t getEnumTagSinglePayload for TextBadge(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_E58474 + 4 * byte_10B05B8[v4]))();
}

uint64_t storeEnumTagSinglePayload for TextBadge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_E58520 + 4 * byte_10B05C2[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_E58554 + 4 * byte_10B05BD[v5]))();
}

uint64_t sub_E58554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E5855C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE58564);
  return result;
}

uint64_t sub_E58570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE58578);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_E5857C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E58584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge()
{
  return &type metadata for TextBadge;
}

uint64_t destroy for FavoriteBadgeConfiguration(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for FavoriteBadgeConfiguration(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

uint64_t assignWithTake for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FavoriteBadgeConfiguration()
{
  return &type metadata for FavoriteBadgeConfiguration;
}

uint64_t storeEnumTagSinglePayload for TextBadge.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_E58730 + 4 * byte_10B05CC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_E58764 + 4 * byte_10B05C7[v4]))();
}

uint64_t sub_E58764(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E5876C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE58774);
  return result;
}

uint64_t sub_E58780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE58788);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_E5878C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E58794(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.CodingKeys()
{
  return &type metadata for TextBadge.CodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.EmptyCodingKeys()
{
  return &type metadata for TextBadge.EmptyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TextBadge.ExplicitCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_E58800 + 4 * byte_10B05D1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_E58820 + 4 * byte_10B05D6[v4]))();
}

_BYTE *sub_E58800(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_E58820(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_E58828(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_E58830(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_E58838(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_E58840(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.ExplicitCodingKeys()
{
  return &type metadata for TextBadge.ExplicitCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.FavoriteCodingKeys()
{
  return &type metadata for TextBadge.FavoriteCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.ImmersiveCodingKeys()
{
  return &type metadata for TextBadge.ImmersiveCodingKeys;
}

unint64_t sub_E58880()
{
  unint64_t result;

  result = qword_150A910;
  if (!qword_150A910)
  {
    result = swift_getWitnessTable(&unk_10B0814, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A910);
  }
  return result;
}

unint64_t sub_E588C8()
{
  unint64_t result;

  result = qword_150A918;
  if (!qword_150A918)
  {
    result = swift_getWitnessTable(&unk_10B091C, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A918);
  }
  return result;
}

unint64_t sub_E58910()
{
  unint64_t result;

  result = qword_150A920;
  if (!qword_150A920)
  {
    result = swift_getWitnessTable(&unk_10B083C, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A920);
  }
  return result;
}

unint64_t sub_E58958()
{
  unint64_t result;

  result = qword_150A928;
  if (!qword_150A928)
  {
    result = swift_getWitnessTable(&unk_10B0864, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A928);
  }
  return result;
}

unint64_t sub_E589A0()
{
  unint64_t result;

  result = qword_150A930;
  if (!qword_150A930)
  {
    result = swift_getWitnessTable(&unk_10B0784, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A930);
  }
  return result;
}

unint64_t sub_E589E8()
{
  unint64_t result;

  result = qword_150A938;
  if (!qword_150A938)
  {
    result = swift_getWitnessTable(&unk_10B07AC, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A938);
  }
  return result;
}

unint64_t sub_E58A30()
{
  unint64_t result;

  result = qword_150A940;
  if (!qword_150A940)
  {
    result = swift_getWitnessTable(&unk_10B0734, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A940);
  }
  return result;
}

unint64_t sub_E58A78()
{
  unint64_t result;

  result = qword_150A948;
  if (!qword_150A948)
  {
    result = swift_getWitnessTable(&unk_10B075C, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A948);
  }
  return result;
}

unint64_t sub_E58AC0()
{
  unint64_t result;

  result = qword_150A950;
  if (!qword_150A950)
  {
    result = swift_getWitnessTable(&unk_10B06E4, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A950);
  }
  return result;
}

unint64_t sub_E58B08()
{
  unint64_t result;

  result = qword_150A958;
  if (!qword_150A958)
  {
    result = swift_getWitnessTable(&unk_10B070C, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A958);
  }
  return result;
}

unint64_t sub_E58B50()
{
  unint64_t result;

  result = qword_150A960;
  if (!qword_150A960)
  {
    result = swift_getWitnessTable(&unk_10B088C, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A960);
  }
  return result;
}

unint64_t sub_E58B98()
{
  unint64_t result;

  result = qword_150A968;
  if (!qword_150A968)
  {
    result = swift_getWitnessTable(&unk_10B08B4, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_150A968);
  }
  return result;
}

void sub_E58BDC()
{
  qword_150A9A8 = 0x403E000000000000;
}

void sub_E58BEC()
{
  qword_150A9B0 = 0x4018000000000000;
}

void sub_E58BFC()
{
  qword_150A9B8 = 0x402A000000000000;
}

void sub_E58C0C()
{
  id v0;
  char *v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = (char *)objc_msgSend(v0, "userInterfaceIdiom");

  byte_150A9C0 = v1 == (_BYTE *)&dword_4 + 2;
}

uint64_t sub_E58C6C()
{
  double v0;
  double v1;
  uint64_t result;

  if (qword_1506258 != -1)
    result = swift_once(&qword_1506258, sub_E58C0C);
  v0 = 20.0;
  if (byte_150A9C0)
    v1 = 20.0;
  else
    v1 = 0.0;
  *(_QWORD *)&xmmword_150A9C8 = 0x4034000000000000;
  *((double *)&xmmword_150A9C8 + 1) = v1;
  if (byte_150A9C0)
    v0 = 0.0;
  qword_150A9D8 = 0;
  qword_150A9E0 = *(_QWORD *)&v0;
  return result;
}

void sub_E58CDC(__n128 a1)
{
  uint64_t v1;

  if (qword_1506258 != -1)
    swift_once(&qword_1506258, sub_E58C0C);
  if (byte_150A9C0 == 1)
  {
    v1 = static Font.headline.getter(a1);
  }
  else
  {
    static Font.caption.getter(a1);
    v1 = Font.bold()();
    swift_release();
  }
  qword_150A9E8 = v1;
}

void sub_E58D58()
{
  qword_150A9F0 = 0x4018000000000000;
}

uint64_t sub_E58D68()
{
  double v0;
  uint64_t result;

  if (qword_1506258 != -1)
    result = swift_once(&qword_1506258, sub_E58C0C);
  v0 = 44.0;
  if (!byte_150A9C0)
    v0 = 24.0;
  qword_150A9F8 = *(_QWORD *)&v0;
  unk_150AA00 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E58DC8(uint64_t a1, double a2)
{
  uint64_t result;
  uint64_t v3;

  if (qword_1506258 != -1)
    a1 = swift_once(&qword_1506258, sub_E58C0C);
  if (byte_150A9C0 == 1)
    result = static Alignment.topLeading.getter(a1);
  else
    result = static Alignment.topTrailing.getter(a2);
  qword_150AA08 = result;
  unk_150AA10 = v3;
  return result;
}

uint64_t Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char v33;
  double v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  double v42;
  unsigned int v43;
  __n128 v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  unsigned __int8 v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  double v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  uint64_t OpaqueTypeConformance2;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  double v73;
  uint64_t v74;
  char v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v86[2];
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107[16];
  uint64_t v108;
  _QWORD v109[4];

  v105 = a2;
  v3 = type metadata accessor for ScrollBounceBehavior(0);
  v103 = *(_QWORD *)(v3 - 8);
  v104 = v3;
  __chkstk_darwin();
  v102 = (char *)v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for ScrollIndicatorVisibility(0);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin();
  v91 = (char *)v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (double *)((char *)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA18);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA20);
  __chkstk_darwin();
  v14 = (char *)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA28);
  __chkstk_darwin();
  v16 = (char *)v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA30);
  v90 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin();
  v89 = (char *)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA38);
  v96 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin();
  v93 = (char *)v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA40);
  __chkstk_darwin();
  v99 = (char *)v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA48);
  __chkstk_darwin();
  v21 = (char *)v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA50);
  v22 = __chkstk_darwin();
  v101 = (uint64_t)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = a1;
  v24 = static Axis.Set.vertical.getter(v22);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA58);
  v26 = sub_E59714();
  v27 = ScrollView.init(_:showsIndicators:content:)(v24, 1, sub_E5970C, v107, v25, v26);
  LOBYTE(v24) = static Edge.Set.all.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v14[*(int *)(v12 + 36)] = v24;
  v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29 = v86[1];
  v28(v11, v8);
  v30 = *(_QWORD *)v29;
  v31 = *(unsigned __int8 *)(v29 + 8);
  LODWORD(v12) = *(unsigned __int8 *)(v29 + 9);
  sub_E59798(*(_QWORD *)v29, v31, *(_BYTE *)(v29 + 9));
  v32 = COERCE_DOUBLE(sub_E42A04(v30, v31 | ((_DWORD)v12 << 8)));
  LOBYTE(v11) = v33;
  sub_E55134(v30, v31, v12);
  if ((v11 & 1) != 0 || v32 <= 0.0)
  {
    if (qword_1506250 != -1)
      swift_once(&qword_1506250, sub_E58BFC);
    v34 = *(double *)&qword_150A9B8;
  }
  else
  {
    if (qword_1506248 != -1)
      swift_once(&qword_1506248, sub_E58BEC);
    v34 = v32 - *(double *)&qword_150A9B0;
  }
  v35 = v89;
  v36 = (char *)v7 + *(int *)(v87 + 20);
  v37 = enum case for RoundedCornerStyle.continuous(_:);
  v38 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  *v7 = v34;
  v7[1] = v34;
  v39 = (uint64_t)&v16[*(int *)(v106 + 36)];
  sub_5BDB8((uint64_t)v7, v39, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CBE0) + 36)) = 256;
  sub_5C238((uint64_t)v14, (uint64_t)v16, &qword_150AA20);
  sub_5C0DC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v40 = sub_56024((uint64_t)v14, &qword_150AA20);
  v41 = v91;
  v42 = static ScrollIndicatorVisibility.never.getter(v40);
  v43 = static Axis.Set.vertical.getter(v42);
  v45 = static Axis.Set.horizontal.getter(v44);
  v46 = Axis.Set.init(rawValue:)(0);
  v47 = Axis.Set.init(rawValue:)(v46);
  if (Axis.Set.init(rawValue:)(v47 & v43) != v43)
    v46 = Axis.Set.init(rawValue:)(v46 | v43);
  v48 = Axis.Set.init(rawValue:)(v46);
  v49 = Axis.Set.init(rawValue:)(v48 & v45);
  v50 = v102;
  if (v49 != v45)
    v46 = Axis.Set.init(rawValue:)(v46 | v45);
  v51 = sub_E597A4();
  View.scrollIndicators(_:axes:)(v41, v46, v106, v51);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v41, v97);
  v52 = sub_56024((uint64_t)v16, &qword_150AA28);
  v53 = static ScrollBounceBehavior.basedOnSize.getter(v52);
  v54 = static Axis.Set.vertical.getter(v53);
  v55 = Axis.Set.init(rawValue:)(0);
  v56 = Axis.Set.init(rawValue:)(v55);
  if (Axis.Set.init(rawValue:)(v56 & v54) != v54)
    v55 = Axis.Set.init(rawValue:)(v55 | v54);
  v109[0] = v106;
  v109[1] = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v109, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v58 = v93;
  v59 = v55;
  v60 = v94;
  View.scrollBounceBehavior(_:axes:)(v50, v59, v94, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v50, v104);
  v61 = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v35, v60);
  v62 = static SafeAreaRegions.all.getter(v61);
  v63 = static Edge.Set.all.getter(v62);
  v64 = v96;
  v65 = v98;
  v66 = (uint64_t)v99;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v99, v58, v98);
  v67 = v66 + *(int *)(v88 + 36);
  *(_QWORD *)v67 = v62;
  *(_BYTE *)(v67 + 8) = v63;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v65);
  if (qword_1506280 != -1)
    swift_once(&qword_1506280, sub_E58DC8);
  v68 = qword_150AA08;
  v69 = unk_150AA10;
  v70 = (uint64_t)&v21[*(int *)(v92 + 36)];
  sub_E598C4(v29, v70);
  v71 = (uint64_t *)(v70 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150AAA0) + 36));
  *v71 = v68;
  v71[1] = v69;
  v72 = sub_5C090(v66, (uint64_t)v21, &qword_150AA40);
  if (qword_1506248 != -1)
    v72 = swift_once(&qword_1506248, sub_E58BEC);
  v73 = *(double *)&qword_150A9B0;
  v74 = static Edge.Set.all.getter(v72);
  v75 = v74;
  v76 = EdgeInsets.init(_all:)(v74, v73);
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v83 = v101;
  sub_5C238((uint64_t)v21, v101, &qword_150AA48);
  v84 = v83 + *(int *)(v100 + 36);
  *(_BYTE *)v84 = v75;
  *(double *)(v84 + 8) = v76;
  *(_QWORD *)(v84 + 16) = v78;
  *(_QWORD *)(v84 + 24) = v80;
  *(_QWORD *)(v84 + 32) = v82;
  *(_BYTE *)(v84 + 40) = 0;
  sub_56024((uint64_t)v21, &qword_150AA48);
  return sub_5C090(v83, v105, &qword_150AA50);
}

uint64_t sub_E5963C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = a1;
  if (qword_1506240 != -1)
    a1 = swift_once(&qword_1506240, sub_E58BDC);
  v4 = *(double *)&qword_150A9A8;
  v5 = static Edge.Set.all.getter(a1);
  v6 = v5;
  v7 = EdgeInsets.init(_all:)(v5, v4);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a2, v2, v14);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_150AA58);
  v16 = a2 + *(int *)(result + 36);
  *(_BYTE *)v16 = v6;
  *(double *)(v16 + 8) = v7;
  *(_QWORD *)(v16 + 16) = v9;
  *(_QWORD *)(v16 + 24) = v11;
  *(_QWORD *)(v16 + 32) = v13;
  *(_BYTE *)(v16 + 40) = 0;
  return result;
}

uint64_t sub_E5970C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E5963C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E59714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AA60;
  if (!qword_150AA60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA58);
    sub_5C150(&qword_150AA68, &qword_150AA70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AA60);
  }
  return result;
}

uint64_t sub_E59798(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

unint64_t sub_E597A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AA78;
  if (!qword_150AA78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA28);
    sub_E59828();
    sub_5C150((unint64_t *)&unk_150CC30, (uint64_t *)&unk_150CBE0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AA78);
  }
  return result;
}

unint64_t sub_E59828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AA80;
  if (!qword_150AA80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA20);
    sub_5C150(&qword_150AA88, &qword_150AA18, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    sub_5C150(&qword_150AA90, &qword_150AA98, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AA80);
  }
  return result;
}

uint64_t sub_E598C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  double v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;

  v48 = a1;
  v56 = a2;
  v2 = type metadata accessor for PlainButtonStyle(0);
  v54 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v55 = v2;
  v3 = __chkstk_darwin();
  v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContentShapeKinds(0, v3);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  __chkstk_darwin();
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(type metadata accessor for Card.DisplayStyle(0) - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150ABF8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC00);
  __chkstk_darwin();
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC08);
  v51 = *(_QWORD *)(v18 - 8);
  v52 = v18;
  __chkstk_darwin();
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v48, (uint64_t)v10, type metadata accessor for Card.DisplayStyle);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_13CA6F8, v22 + v9, v21 | 7);
  sub_E5B2BC((uint64_t)v10, v23 + v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC10);
  v25 = sub_E5BD48();
  v27 = Button.init(action:label:)(sub_E5BD1C, v23, sub_E59D50, 0, v24, v25, v26);
  static ContentShapeKinds.interaction.getter(v27);
  if (qword_1506278 != -1)
    swift_once(&qword_1506278, sub_E58D68);
  v28 = (*(double *)&qword_150A9F8 + -44.0) * 0.5;
  v29 = &v17[*(int *)(v15 + 36)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC88);
  v32 = v49;
  v31 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(&v29[*(int *)(v30 + 40)], v7, v50);
  *(double *)v29 = v28;
  v29[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v11);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v31);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v34 = v53;
  PlainButtonStyle.init()(v33);
  v35 = sub_E5BF9C();
  v36 = sub_4DD24((unint64_t *)&qword_150ACA8, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v37 = v55;
  View.buttonStyle<A>(_:)(v34, v15, v55, v35, v36);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v37);
  v38 = sub_56024((uint64_t)v17, &qword_150AC00);
  if (qword_1506260 != -1)
    v38 = swift_once(&qword_1506260, sub_E58C6C);
  v55 = xmmword_150A9C8;
  v39 = qword_150A9D8;
  v40 = qword_150A9E0;
  v41 = static Edge.Set.all.getter(v38);
  v43 = v51;
  v42 = v52;
  v44 = v56;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v56, v20, v52);
  v45 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150ACB0) + 36);
  *(_BYTE *)v45 = v41;
  *(_OWORD *)(v45 + 8) = v55;
  *(_QWORD *)(v45 + 24) = v39;
  *(_QWORD *)(v45 + 32) = v40;
  *(_BYTE *)(v45 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v42);
}

uint64_t sub_E59CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Card.DisplayStyle(0);
  sub_E429D0((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_E59D50@<X0>(uint64_t a1@<X8>)
{
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _BYTE v66[24];
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  __int128 v79;

  v50 = a1;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC80);
  v1 = __chkstk_darwin();
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Material(0, v1);
  v53 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v52 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC28);
  __chkstk_darwin();
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AC10);
  __chkstk_darwin();
  v46 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v49 = static Color.secondary.getter(v8);
  KeyPath = swift_getKeyPath(&unk_10B0BD0);
  if (qword_1506268 != -1)
    swift_once(&qword_1506268, sub_E58CDC);
  v10 = qword_150A9E8;
  v44 = swift_getKeyPath(&unk_10B0C00);
  v11 = qword_1506270;
  swift_retain();
  if (v11 != -1)
    v12 = swift_once(&qword_1506270, sub_E58D58);
  v13 = *(double *)&qword_150A9F0;
  v14 = static Edge.Set.all.getter(v12);
  v15 = v14;
  v17 = EdgeInsets.init(_all:)(v14, v13);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  if (qword_1506278 != -1)
    v16 = swift_once(&qword_1506278, sub_E58D68);
  v24 = qword_150A9F8;
  v25 = unk_150AA00;
  v26 = static Alignment.center.getter(v16);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v67, v24, 0, 0, 1, 0, 1, v25, 0, 0, 1, 0, 1, v26, v27);
  *(_QWORD *)&v55 = v54;
  *((_QWORD *)&v55 + 1) = KeyPath;
  *(_QWORD *)&v56 = v49;
  *((_QWORD *)&v56 + 1) = v44;
  *(_QWORD *)&v57 = v10;
  BYTE8(v57) = v15;
  *(double *)&v58 = v17;
  *((_QWORD *)&v58 + 1) = v19;
  *(_QWORD *)&v59 = v21;
  *((_QWORD *)&v59 + 1) = v23;
  LOBYTE(v60) = 0;
  *((_QWORD *)&v60 + 1) = v67;
  LOBYTE(v61) = v68;
  *((_QWORD *)&v61 + 1) = v69;
  LOBYTE(v62) = v70;
  *((_QWORD *)&v62 + 1) = v71;
  LOBYTE(v63) = v72;
  *((_QWORD *)&v63 + 1) = v73;
  LOBYTE(v64) = v74;
  *((_QWORD *)&v64 + 1) = v75;
  LOBYTE(v65) = v76;
  *((_QWORD *)&v65 + 1) = v77;
  v66[0] = v78;
  *(_OWORD *)&v66[8] = v79;
  v28 = v52;
  v29 = static Material.thin.getter(v77);
  v30 = static Edge.Set.all.getter(v29);
  v43 = KeyPath;
  v31 = v53;
  v32 = (uint64_t)v3;
  v33 = v3;
  v34 = v47;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v33, v28, v47);
  *(_BYTE *)(v32 + *(int *)(v51 + 36)) = v30;
  sub_5C238(v32, (uint64_t)&v6[*(int *)(v45 + 36)], &qword_150AC80);
  v35 = *(_OWORD *)v66;
  *((_OWORD *)v6 + 10) = v65;
  *((_OWORD *)v6 + 11) = v35;
  *((_QWORD *)v6 + 24) = *(_QWORD *)&v66[16];
  v36 = v62;
  *((_OWORD *)v6 + 6) = v61;
  *((_OWORD *)v6 + 7) = v36;
  v37 = v64;
  *((_OWORD *)v6 + 8) = v63;
  *((_OWORD *)v6 + 9) = v37;
  v38 = v58;
  *((_OWORD *)v6 + 2) = v57;
  *((_OWORD *)v6 + 3) = v38;
  v39 = v60;
  *((_OWORD *)v6 + 4) = v59;
  *((_OWORD *)v6 + 5) = v39;
  v40 = v56;
  *(_OWORD *)v6 = v55;
  *((_OWORD *)v6 + 1) = v40;
  sub_E5C048((uint64_t *)&v55);
  sub_56024(v32, &qword_150AC80);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v34);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v41 = v46;
  sub_5C238((uint64_t)v6, v46, &qword_150AC28);
  *(_WORD *)(v41 + *(int *)(v48 + 36)) = 256;
  sub_56024((uint64_t)v6, &qword_150AC28);
  return sub_5C090(v41, v50, &qword_150AC10);
}

uint64_t Card.ViewController.__allocating_init(content:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  sub_E5AC34(a1);
  v6 = v5;
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v2 + 10) - 8) + 8))(a1);
  return v6;
}

uint64_t Card.ViewController.init(content:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_isaMask & *v1;
  sub_E5AC34(a1);
  v5 = v4;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_E5A2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    Card.ViewController.preferredContentSize(forWidth:)(0, 1);
    v7 = v6;

    return v7;
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
    v8 = UISheetPresentationControllerDetent.resolvedValue(in:)(a1);

  }
  return v8;
}

void sub_E5A398(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0();
}

Swift::Void __swiftcall Card.ViewController.viewDidLoad()()
{
  _QWORD *v0;
  uint64_t ObjectType;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  ObjectType = swift_getObjectType();
  v3 = (objc_class *)type metadata accessor for Card.ViewController(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v0)), *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v0)), v2);
  v8.receiver = v0;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "viewDidLoad");
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  objc_msgSend(v0, "setPreferredContentSize:");
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085E0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_105B360;
  *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v6 = swift_allocObject(&unk_13CA580, 24, 7);
  *(_QWORD *)(v6 + 16) = ObjectType;
  v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v5, sub_E5B210, v6, ObjectType);
  swift_unknownObjectRelease(v7);
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_E5A4C4(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLoad()();

}

id Card.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  objc_super v11;

  v7 = swift_isaMask & *v3;
  Card.ViewController.preferredContentSize(forWidth:)(*(uint64_t *)&a2, 0);
  objc_msgSend(v3, "setPreferredContentSize:");
  v9 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v8);
  v11.receiver = v3;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_E5A590(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  Card.ViewController.viewWillTransition(to:with:)(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

Swift::Void __swiftcall Card.ViewController.viewDidLayoutSubviews()()
{
  uint64_t v0;
  _QWORD *v1;
  objc_class *v2;
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  uint64_t v13;
  double v14;
  double v15;
  CGFloat v16;
  double Height;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double MaxY;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  objc_super v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v2 = (objc_class *)type metadata accessor for Card.ViewController(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v1)), *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v1)), v0);
  v52.receiver = v1;
  v52.super_class = v2;
  objc_msgSendSuper2(&v52, "viewDidLayoutSubviews");
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v53.origin.x = v6;
  v53.origin.y = v8;
  v53.size.width = v10;
  v53.size.height = v12;
  *(double *)&v13 = CGRectGetWidth(v53);
  Card.ViewController.preferredContentSize(forWidth:)(v13, 0);
  v15 = v14;
  v54.size.height = v16;
  v54.origin.x = 0.0;
  v54.origin.y = 0.0;
  v54.size.width = v15;
  Height = CGRectGetHeight(v54);
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = v18;
  objc_msgSend(v18, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v55.origin.x = v21;
  v55.origin.y = v23;
  v55.size.width = v25;
  v55.size.height = v27;
  v28 = CGRectGetHeight(v55);
  if (v28 < Height)
    Height = v28;
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_11;
  v30 = v29;
  objc_msgSend(v29, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v56.origin.x = v32;
  v56.origin.y = v34;
  v56.size.width = v36;
  v56.size.height = v38;
  MaxY = CGRectGetMaxY(v56);
  v57.origin.x = 0.0;
  v57.origin.y = 0.0;
  v57.size.width = v15;
  v57.size.height = Height;
  v40 = CGRectGetHeight(v57);
  v41 = objc_msgSend(*(id *)((char *)v1 + qword_150AB40), "view");
  if (!v41)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v42 = v41;
  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    v45 = CGRect.centeringAlong(axes:in:)(1, 0.0, MaxY - v40, v15, Height);
    v47 = v46;
    v49 = v48;
    v51 = v50;

    objc_msgSend(v42, "setFrame:", v45, v47, v49, v51);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_E5A850(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLayoutSubviews()();

}

uint64_t sub_E5A884()
{
  return 1;
}

void Card.ViewController.preferredContentSize(forWidth:)(uint64_t a1, char a2)
{
  char *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  double v22;
  id v23;
  CGRect v24;

  if ((a2 & 1) == 0)
  {
LABEL_8:
    v16 = objc_msgSend(v2, "presentingViewController");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "traitCollection");

      if (v18)
        goto LABEL_12;
    }
    v19 = objc_msgSend(v2, "presentationController");
    v20 = v19;
    if (v19)
    {
      v18 = objc_msgSend(v19, "traitCollection");

      if (v18)
      {
LABEL_12:
        v20 = v18;
        v21 = (char *)objc_msgSend(v20, "horizontalSizeClass");

        v22 = 414.0;
        if (*(double *)&a1 <= 414.0)
          v22 = *(double *)&a1;
        if (v21 == (_BYTE *)&dword_0 + 2)
          *(double *)&a1 = v22;
        goto LABEL_16;
      }
      v20 = 0;
    }
LABEL_16:
    v23 = *(id *)&v2[qword_150AB40];
    dispatch thunk of UIHostingController.sizeThatFits(in:)(*(double *)&a1, INFINITY);

    return;
  }
  v4 = objc_msgSend(v2, "presentationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "containerView");

    if (v6)
    {
LABEL_7:
      objc_msgSend(v6, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v24.origin.x = v9;
      v24.origin.y = v11;
      v24.size.width = v13;
      v24.size.height = v15;
      *(double *)&a1 = CGRectGetWidth(v24);
      goto LABEL_8;
    }
  }
  v7 = objc_msgSend(v2, "view");
  if (v7)
  {
    v6 = v7;
    goto LABEL_7;
  }
  __break(1u);
}

void Card.ViewController.init(nibName:bundle:)()
{
  sub_E5B248();
}

void sub_E5AA80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_E5B248();
}

id Card.ViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Card.ViewController(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), *(_QWORD *)((char *)&stru_20.maxprot + (swift_isaMask & *v4)), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_E5AB08(uint64_t a1)
{

}

uint64_t View.cardDisplayStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin();
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v12 - v7;
  *(_QWORD *)v6 = swift_getKeyPath(&unk_10B0AD8);
  *((_WORD *)v6 + 4) = 0;
  v9 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_10B0B08);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  sub_E5B2BC((uint64_t)v6, (uint64_t)v8);
  View.modifier<A>(_:)(v8, a1, v4, a2);
  return sub_5C0DC((uint64_t)v8, type metadata accessor for Card.DisplayStyle);
}

void sub_E5AC34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  objc_class *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class isa;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  objc_super v65;
  uint64_t v66;
  uint64_t v67;

  v61 = swift_isaMask & *v1;
  v3 = v61;
  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v59 - v8;
  v10 = *(_QWORD *)(v3 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - v13;
  v15 = type metadata accessor for ModifiedContent(0, v10, v4);
  v63 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v62 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v59 - v19;
  *(_QWORD *)((char *)v1 + qword_150AB38) = 0x4079E00000000000;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a1, v10, v18);
  *(_QWORD *)v6 = swift_getKeyPath(&unk_10B0AD8);
  *((_WORD *)v6 + 4) = 0;
  v21 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_10B0B08);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  sub_E5B2BC((uint64_t)v6, (uint64_t)v9);
  v23 = v1;
  v24 = v10;
  ModifiedContent.init(content:modifier:)(v14, v9, v10, v4);
  v25 = *(_QWORD *)(v61 + 88);
  v26 = sub_4DD24(&qword_150ABE8, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  v66 = v25;
  v67 = v26;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  type metadata accessor for UIHostingController(0, v15, WitnessTable);
  v28 = v62;
  v29 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v60 = v20;
  v61 = v15;
  v29(v62, v20, v15);
  v30 = (void *)UIHostingController.__allocating_init(rootView:)(v28);
  v31 = qword_150AB40;
  *(_QWORD *)((char *)v23 + qword_150AB40) = v30;
  v32 = v30;
  UIHostingController.safeAreaRegions.setter(0);

  v33 = objc_msgSend(*(id *)((char *)v23 + v31), "view");
  if (!v33)
  {

    __break(1u);
LABEL_9:

    __break(1u);
    goto LABEL_10;
  }
  v34 = v33;
  v35 = (void *)objc_opt_self(UIColor);
  v36 = objc_msgSend(v35, "clearColor");
  objc_msgSend(v34, "setBackgroundColor:", v36);

  v37 = v24;
  v39 = (objc_class *)type metadata accessor for Card.ViewController(0, v24, v25, v38);
  v65.receiver = v23;
  v65.super_class = v39;
  v23 = objc_msgSendSuper2(&v65, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v23, "setModalPresentationStyle:", 2);
  v40 = objc_msgSend(v23, "sheetPresentationController");
  if (v40)
  {
    v41 = v40;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
    v43 = swift_allocObject(v42, 40, 7);
    *(_OWORD *)(v43 + 16) = xmmword_1060220;
    sub_E5BBD4();
    v44 = swift_allocObject(&unk_13CA6A8, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16, v23);
    v45 = (_QWORD *)swift_allocObject(&unk_13CA6D0, 40, 7);
    v45[2] = v37;
    v45[3] = v25;
    v45[4] = v44;
    v46 = swift_retain(v44);
    v47 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(0, sub_E5BC58, v45, v46);
    swift_release(v44);
    swift_release(v45);
    *(_QWORD *)(v43 + 32) = v47;
    v64 = v43;
    specialized Array._endMutation()(v48);
    v49 = v64;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v41, "setDetents:", isa, swift_bridgeObjectRelease(v49).n128_f64[0]);

    objc_msgSend(v41, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
  }
  v51 = objc_msgSend(v23, "view");
  if (!v51)
    goto LABEL_9;
  v52 = v51;
  v53 = objc_msgSend(v35, "clearColor");
  objc_msgSend(v52, "setBackgroundColor:", v53);

  v54 = qword_150AB40;
  objc_msgSend(v23, "addChildViewController:", *(_QWORD *)((char *)v23 + qword_150AB40));
  v55 = objc_msgSend(v23, "view");
  if (!v55)
  {
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  v56 = v55;
  v57 = objc_msgSend(*(id *)((char *)v23 + v54), "view");
  if (v57)
  {
    v58 = v57;
    objc_msgSend(v56, "addSubview:", v57);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v61);
    return;
  }
LABEL_11:

  __break(1u);
}

void _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0()
{
  char *v0;

  *(_QWORD *)&v0[qword_150AB38] = 0x4079E00000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/Card.swift", 22, 2, 123, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.ViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Card.ViewController);
}

uint64_t sub_E5B200()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_E5B214(void *a1)
{
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  return objc_msgSend(a1, "setPreferredContentSize:");
}

void sub_E5B248()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.DisplayStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_150AB00;
  if (!qword_150AB00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Card.DisplayStyle);
  return result;
}

uint64_t sub_E5B2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_E5B300(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Card.DisplayStyle.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Card()
{
  return &type metadata for Card;
}

unint64_t initializeBufferWithCopyOfBuffer for Card.DisplayStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 9);
    v9 = *(_BYTE *)(a2 + 8);
    sub_E59798(*(_QWORD *)a2, v9, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 9) = v8;
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      *v11 = *v12;
      swift_retain();
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

double destroy for Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_E55134(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_E59798(*(_QWORD *)a2, v8, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    *v10 = *v11;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t assignWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_E59798(*(_QWORD *)a2, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v6;
  v11 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  sub_E55134(v9, v11, v10);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 20);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_56024(a1 + v12, &qword_150CE90);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t initializeWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v10 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v7;
  sub_E55134(v8, v10, v9);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_56024(a1 + v11, &qword_150CE90);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E5B81C);
}

uint64_t sub_E5B81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E5B8A0);
}

uint64_t sub_E5B8A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 9) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_E5B914(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\n";
  sub_E282B4(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_E5B988(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_E5B9D8()
{
  return sub_184F98(&qword_150ABC8, &qword_150AA50, (void (*)(void))sub_E5BA0C);
}

unint64_t sub_E5BA0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150ABD0;
  if (!qword_150ABD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA48);
    sub_E5BA90();
    sub_5C150(&qword_150ABE0, &qword_150AAA0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150ABD0);
  }
  return result;
}

unint64_t sub_E5BA90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_150ABD8;
  if (!qword_150ABD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA40);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA30);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AA28);
    v5 = sub_E597A4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150ABD8);
  }
  return result;
}

uint64_t sub_E5BB54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for Card.DisplayStyle(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_4DD24(&qword_150ABE8, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_E5BBD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150ABF0;
  if (!qword_150ABF0)
  {
    v1 = objc_opt_self(UISheetPresentationControllerDetent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_150ABF0);
  }
  return result;
}

uint64_t sub_E5BC10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E5BC34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_E5BC58(uint64_t a1)
{
  uint64_t v1;

  return sub_E5A2D8(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_E5BC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Card.DisplayStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_E55134(*(_QWORD *)(v0 + v4), *(unsigned __int8 *)(v0 + v4 + 8), *(_BYTE *)(v0 + v4 + 9));
  v6 = v0 + v4 + *(int *)(v1 + 20);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E5BD1C()
{
  type metadata accessor for Card.DisplayStyle(0);
  return sub_E59CB8();
}

unint64_t sub_E5BD48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AC18;
  if (!qword_150AC18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AC10);
    sub_E5BDCC();
    sub_5C150((unint64_t *)&unk_150C560, &qword_150CF60, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AC18);
  }
  return result;
}

unint64_t sub_E5BDCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AC20;
  if (!qword_150AC20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AC28);
    sub_184F98(&qword_150AC30, &qword_150AC38, (void (*)(void))sub_E5BE70);
    sub_5C150(&qword_150AC78, &qword_150AC80, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AC20);
  }
  return result;
}

uint64_t sub_E5BE70()
{
  return sub_184F98(&qword_150AC40, &qword_150AC48, (void (*)(void))sub_E5BE94);
}

unint64_t sub_E5BE94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AC50;
  if (!qword_150AC50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AC58);
    sub_E5BF18();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AC50);
  }
  return result;
}

unint64_t sub_E5BF18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AC60;
  if (!qword_150AC60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AC68);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AC60);
  }
  return result;
}

unint64_t sub_E5BF9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AC90;
  if (!qword_150AC90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AC00);
    sub_5C150(&qword_150AC98, &qword_150ABF8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_5C150(&qword_150ACA0, &qword_150AC88, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AC90);
  }
  return result;
}

uint64_t *sub_E5C048(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  swift_retain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

double CarouselView.init(items:selectedIndex:selectedItem:animatesProgrammaticSelection:itemSize:horizontalSpacing:carouselToPageIndicatorSpacing:content:didSelect:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19)
{
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  double result;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a7;
  v54 = a8;
  v50 = a6;
  v48 = a4;
  v49 = a5;
  v47 = a3;
  v51 = a14;
  v52 = a15;
  v46 = a17;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150ACC0);
  __chkstk_darwin(v26);
  v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[1] = 0;
  a9[2] = 0;
  a9[3] = 0;
  *(_QWORD *)v55 = a16;
  *(_OWORD *)&v55[8] = v46;
  v56 = a18;
  v57 = a19;
  v29 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v55);
  v30 = (char *)a9 + v29[16];
  v31 = type metadata accessor for Binding(0, a16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = v29[17];
  *((_BYTE *)a9 + v32) = 1;
  v33 = (_QWORD *)((char *)a9 + v29[22]);
  *v33 = 0;
  v33[1] = 0;
  v34 = v29[23];
  v58 = 0;
  State.init(wrappedValue:)(v55, &v58, &type metadata for Int);
  *(_OWORD *)((char *)a9 + v34) = *(_OWORD *)v55;
  v35 = (_QWORD *)((char *)a9 + v29[24]);
  v36 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v28, 1, 1, v36);
  property wrapper backing initializer of CarouselView.scrollViewProxy((uint64_t)v28, v35);
  v37 = (_QWORD *)((char *)a9 + v29[26]);
  *v37 = swift_getKeyPath(&unk_10B0C70);
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  swift_storeEnumTagMultiPayload(v37, v38, 0);
  *a9 = a1;
  v39 = (double *)((char *)a9 + v29[18]);
  *v39 = a10;
  v39[1] = a11;
  sub_E550D8(a9[1], a9[2]);
  v40 = v47;
  a9[1] = a2;
  a9[2] = v40;
  a9[3] = v48;
  v41 = type metadata accessor for Optional(0, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v30, v49, v41);
  *((_BYTE *)a9 + v32) = v50;
  *(double *)((char *)a9 + v29[20]) = a12;
  *(double *)((char *)a9 + v29[21]) = a13;
  v42 = (_QWORD *)((char *)a9 + v29[19]);
  v43 = v54;
  *v42 = v53;
  v42[1] = v43;
  sub_5C198(*v33, v33[1]);
  v44 = v52;
  *v33 = v51;
  v33[1] = v44;
  result = *v39 + a12;
  *(double *)((char *)a9 + v29[25]) = result;
  return result;
}

uint64_t type metadata accessor for CarouselView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CarouselView);
}

uint64_t property wrapper backing initializer of CarouselView.currentIndex(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Int);
  return v3;
}

uint64_t property wrapper backing initializer of CarouselView.scrollViewProxy@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150ACC0);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v6, &qword_150ACC0);
  State.init(wrappedValue:)(a2, v6, v4);
  return sub_56024(a1, &qword_150ACC0);
}

uint64_t CarouselView.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  double v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t TupleTypeMetadata2;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  double v65;
  uint64_t v66;
  char *v67;
  double v68;
  void (*v69)(char *, char *, uint64_t);
  void (*v70)(char *, uint64_t);
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t OpaqueTypeConformance2;
  uint64_t v101;
  void *v102;
  unint64_t v103;
  void *v104;
  uint64_t v105;

  v79 = a2;
  v3 = (void *)a1[2];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v3, 0, 0);
  v4 = type metadata accessor for Array(255);
  v76 = a1[3];
  v5 = a1[6];
  v6 = a1;
  v73 = a1;
  v77 = v5;
  v101 = v76;
  v102 = &type metadata for Int;
  v103 = v5;
  v104 = &protocol witness table for Int;
  v8 = type metadata accessor for IDView(255, &v101, v7);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v8);
  v101 = v8;
  v102 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v101, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v75 = v4;
  v74 = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  v72 = v6[5];
  v101 = v4;
  v102 = v3;
  v11 = v3;
  v103 = OpaqueTypeMetadata2;
  v104 = (void *)v74;
  v105 = v72;
  v12 = type metadata accessor for ForEach(255, &v101);
  v101 = v8;
  v102 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v14 = type metadata accessor for LazyHStack(255, v12, v13);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC8);
  v16 = type metadata accessor for ModifiedContent(255, v14, v15);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _PaddingLayout);
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD0);
  v19 = type metadata accessor for ModifiedContent(255, v17, v18);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for _AppearanceActionModifier);
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
  v98 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v14);
  v99 = sub_5C150(&qword_150ACE0, &qword_150ACC8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v96 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v97 = &protocol witness table for _PaddingLayout;
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v95 = sub_5C150(&qword_150ACE8, &qword_150ACD0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v93 = &protocol witness table for _AppearanceActionModifier;
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v23 = sub_E6220C();
  v101 = v20;
  v102 = (void *)v21;
  v103 = v22;
  v104 = (void *)v23;
  v24 = swift_getOpaqueTypeMetadata2(255, &v101, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v25 = type metadata accessor for Optional(255, v3);
  v101 = v20;
  v102 = (void *)v21;
  v103 = v22;
  v104 = (void *)v23;
  v26 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v27 = v72;
  v91 = *(_QWORD *)(v72 + 8);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v25);
  v101 = v24;
  v102 = (void *)v25;
  v103 = v26;
  v104 = (void *)v28;
  v29 = swift_getOpaqueTypeMetadata2(255, &v101, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v101 = v24;
  v102 = (void *)v25;
  v103 = v26;
  v104 = (void *)v28;
  v30 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v31 = type metadata accessor for PagingScrollView(255, v29, v30);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACF8);
  v33 = type metadata accessor for ModifiedContent(255, v31, v32);
  v89 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v31);
  v90 = sub_5C150(&qword_150AD00, &qword_150ACF8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v33);
  v101 = v33;
  v102 = (void *)v34;
  v35 = swift_getOpaqueTypeMetadata2(255, &v101, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v101 = v33;
  v102 = (void *)v34;
  v36 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v101 = v35;
  v102 = (void *)v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v101, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v101 = v35;
  v102 = (void *)v36;
  v38 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v101 = v37;
  v102 = (void *)v38;
  v39 = swift_getOpaqueTypeMetadata2(255, &v101, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v101 = v37;
  v102 = (void *)v38;
  v40 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v41 = type metadata accessor for GeometryReader(255, v39, v40);
  v42 = type metadata accessor for ModifiedContent(255, v41, &type metadata for _FrameLayout);
  v87 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v41);
  v88 = &protocol witness table for _FrameLayout;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
  v44 = type metadata accessor for ScrollViewReader(255, v42, v43);
  v45 = type metadata accessor for ModifiedContent(255, v44, &type metadata for _FrameLayout);
  v46 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD08);
  v101 = v75;
  v102 = v11;
  v103 = v46;
  v104 = (void *)v74;
  v105 = v72;
  v47 = type metadata accessor for ForEach(255, &v101);
  v48 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD10);
  v49 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD18);
  v51 = type metadata accessor for AutomaticHoverEffect(255, v50);
  v52 = sub_E62268();
  v53 = sub_4DD24(qword_150AD98, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v101 = v49;
  v102 = (void *)v51;
  v103 = v52;
  v104 = (void *)v53;
  v54 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v101 = v48;
  v102 = (void *)v54;
  v86 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v47);
  v56 = type metadata accessor for HStack(255, v47, v55);
  v57 = type metadata accessor for ModifiedContent(255, v56, &type metadata for _FrameLayout);
  v58 = type metadata accessor for Optional(255, v57);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v45, v58, 0, 0);
  v60 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v60);
  v61 = type metadata accessor for VStack(0, v60);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v64 = (char *)&v72 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __chkstk_darwin();
  v67 = (char *)&v72 - v66;
  v80 = v11;
  v81 = v76;
  v82 = v73[4];
  v83 = v27;
  v84 = v77;
  v85 = v78;
  static HorizontalAlignment.center.getter(v65);
  VStack.init(alignment:spacing:content:)(v68);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v61);
  v69 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v69(v67, v64, v61);
  v70 = *(void (**)(char *, uint64_t))(v62 + 8);
  v70(v64, v61);
  v69(v79, v67, v61);
  return ((uint64_t (*)(char *, uint64_t))v70)(v67, v61);
}

double sub_E5CBA0@<D0>(_QWORD *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, _QWORD *, uint64_t, double);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  _QWORD *v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  char *v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  __n128 v127;
  double result;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t WitnessTable;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[6];
  uint64_t *v160;
  char *v161;
  unint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  __int128 v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  __int128 v187;
  uint64_t v188;
  char *v189;
  unint64_t v190;
  void *v191;
  uint64_t v192;
  char v193;
  __int128 v194;
  uint64_t v195;

  v146 = a4;
  v147 = a6;
  v148 = a1;
  v145 = a7;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v137 = type metadata accessor for Array(255);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD08);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v137);
  v188 = v137;
  v189 = a2;
  v11 = (uint64_t)a2;
  v190 = v10;
  v191 = (void *)WitnessTable;
  v192 = (uint64_t)a5;
  v150 = a5;
  v12 = type metadata accessor for ForEach(255, &v188);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD10);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD18);
  v16 = type metadata accessor for AutomaticHoverEffect(255, v15);
  v17 = sub_E62268();
  v18 = sub_4DD24(qword_150AD98, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v188 = v14;
  v189 = (char *)v16;
  v190 = v17;
  v191 = (void *)v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v188 = v13;
  v189 = (char *)OpaqueTypeConformance2;
  v195 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v134 = v12;
  v129 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v133 = *(_QWORD *)(type metadata accessor for HStack(0, v12, v129) - 8);
  __chkstk_darwin();
  v130 = (char *)&v129 - v20;
  v143 = v21;
  v139 = *(_QWORD *)(type metadata accessor for ModifiedContent(0, v21, &type metadata for _FrameLayout) - 8);
  __chkstk_darwin();
  v131 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v132 = (char *)&v129 - v23;
  v149 = v24;
  v144 = type metadata accessor for Optional(0, v24);
  v140 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin();
  v142 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v141 = (char *)&v129 - v26;
  v27 = v11;
  v151 = (char *)v11;
  v188 = v11;
  v189 = a3;
  v28 = (uint64_t)a3;
  v29 = v146;
  v30 = v147;
  v190 = v146;
  v191 = a5;
  v192 = v147;
  v31 = type metadata accessor for CarouselView(0, (uint64_t)&v188);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  v34 = __chkstk_darwin();
  v36 = (char *)&v129 - v35;
  v37 = *(void (**)(char *, _QWORD *, uint64_t, double))(v32 + 16);
  v138 = v31;
  v37(v36, v148, v31, v34);
  v38 = *(unsigned __int8 *)(v32 + 80);
  v39 = (v38 + 56) & ~v38;
  v40 = (_QWORD *)swift_allocObject(&unk_13CA888, v39 + v33, v38 | 7);
  v40[2] = v27;
  v40[3] = v28;
  v41 = v150;
  v40[4] = v29;
  v40[5] = v41;
  v42 = v30;
  v40[6] = v30;
  v43 = v40;
  v44 = (*(double (**)(char *, char *, uint64_t))(v32 + 32))((char *)v40 + v39, v36, v31);
  v135 = v28;
  v188 = v28;
  v189 = (char *)&type metadata for Int;
  v190 = v42;
  v191 = &protocol witness table for Int;
  v45 = type metadata accessor for IDView(255, &v188, v44);
  v46 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v45);
  v188 = v45;
  v189 = (char *)v46;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v188 = v137;
  v189 = v151;
  v190 = OpaqueTypeMetadata2;
  v191 = (void *)WitnessTable;
  v192 = (uint64_t)v41;
  v48 = type metadata accessor for ForEach(255, &v188);
  v188 = v45;
  v189 = (char *)v46;
  v180 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v49 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v48);
  v50 = type metadata accessor for LazyHStack(255, v48, v49);
  v51 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC8);
  v52 = type metadata accessor for ModifiedContent(255, v50, v51);
  v53 = type metadata accessor for ModifiedContent(255, v52, &type metadata for _PaddingLayout);
  v54 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD0);
  v55 = type metadata accessor for ModifiedContent(255, v53, v54);
  v56 = type metadata accessor for ModifiedContent(255, v55, &type metadata for _AppearanceActionModifier);
  v57 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
  v58 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v50);
  v59 = sub_5C150(&qword_150ACE0, &qword_150ACC8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v178 = v58;
  v179 = v59;
  v176 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v52);
  v177 = &protocol witness table for _PaddingLayout;
  v60 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v53);
  v61 = sub_5C150(&qword_150ACE8, &qword_150ACD0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v174 = v60;
  v175 = v61;
  v172 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v55);
  v173 = &protocol witness table for _AppearanceActionModifier;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v56);
  v63 = sub_E6220C();
  v188 = v56;
  v189 = (char *)v57;
  v190 = v62;
  v191 = (void *)v63;
  v64 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v65 = type metadata accessor for Optional(255, v151);
  v188 = v56;
  v189 = (char *)v57;
  v190 = v62;
  v191 = (void *)v63;
  v66 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v171 = v150[1];
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v65);
  v188 = v64;
  v189 = (char *)v65;
  v190 = v66;
  v191 = (void *)v67;
  v68 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v188 = v64;
  v189 = (char *)v65;
  v190 = v66;
  v191 = (void *)v67;
  v69 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v70 = type metadata accessor for PagingScrollView(255, v68, v69);
  v71 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACF8);
  v72 = type metadata accessor for ModifiedContent(255, v70, v71);
  v73 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v70);
  v74 = sub_5C150(&qword_150AD00, &qword_150ACF8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v169 = v73;
  v170 = v74;
  v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v72);
  v188 = v72;
  v189 = (char *)v75;
  v76 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v188 = v72;
  v189 = (char *)v75;
  v77 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v188 = v76;
  v189 = (char *)v77;
  v78 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v188 = v76;
  v189 = (char *)v77;
  v79 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v188 = v78;
  v189 = (char *)v79;
  v80 = swift_getOpaqueTypeMetadata2(255, &v188, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v188 = v78;
  v189 = (char *)v79;
  v81 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v82 = type metadata accessor for GeometryReader(255, v80, v81);
  v83 = type metadata accessor for ModifiedContent(0, v82, &type metadata for _FrameLayout);
  v167 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v82);
  v168 = &protocol witness table for _FrameLayout;
  v84 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v83);
  v188 = ScrollViewReader.init(content:)(sub_E65348, v43, v83, v84);
  v189 = v85;
  v86 = v148;
  v87 = *(_QWORD *)((char *)v148 + *(int *)(v138 + 72) + 8);
  v88 = static Alignment.center.getter(v188);
  v90 = v89;
  v91 = type metadata accessor for ScrollViewReader(0, v83, v84);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v91);
  v93 = v87;
  v94 = v86;
  v95 = v90;
  v96 = (uint64_t)v151;
  View.frame(width:height:alignment:)(0, 1, v93, 0, v88, v95, v91, v92);
  swift_release();
  v160 = (uint64_t *)v181;
  v161 = v182;
  v162 = v183;
  v163 = v184;
  v164 = v185;
  v165 = v186;
  v166 = v187;
  v97 = type metadata accessor for ModifiedContent(0, v91, &type metadata for _FrameLayout);
  v159[4] = v92;
  v159[5] = &protocol witness table for _FrameLayout;
  v138 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v97);
  (*(void (**)(uint64_t *, uint64_t **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(&v188, &v160, v97);
  swift_release();
  if (Array.count.getter(*v94) < 2)
  {
    v120 = v142;
    v121 = v149;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56))(v142, 1, 1, v149);
    v112 = v143;
    v159[2] = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v143);
    v159[3] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v121);
  }
  else
  {
    v98 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v99 = (char *)objc_msgSend(v98, "userInterfaceIdiom");

    if (v99 == (_BYTE *)&dword_4 + 2)
      v100 = 0x4024000000000000;
    else
      v100 = 0x4020000000000000;
    v101 = __chkstk_darwin();
    v102 = v135;
    *(&v129 - 6) = v96;
    *(&v129 - 5) = v102;
    v103 = (uint64_t)v150;
    *(&v129 - 4) = v146;
    *(&v129 - 3) = v103;
    *(&v129 - 2) = v147;
    *(&v129 - 1) = (uint64_t)v94;
    v104 = static VerticalAlignment.center.getter(v101);
    v105 = v130;
    HStack.init(alignment:spacing:content:)(v104, v100, 0, sub_E653DC, &v129 - 8, v134, v129);
    sub_E653E8();
    v107 = v106;
    v109 = static Alignment.center.getter(v108);
    v111 = v110;
    v112 = v143;
    v113 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v143);
    v114 = v131;
    View.frame(width:height:alignment:)(0, 1, v107, 0, v109, v111, v112, v113);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v105, v112);
    v152 = v113;
    v153 = &protocol witness table for _FrameLayout;
    v115 = v149;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v149);
    v116 = v139;
    v117 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
    v118 = v132;
    v117(v132, v114, v115);
    v119 = *(void (**)(char *, uint64_t))(v116 + 8);
    v119(v114, v115);
    v120 = v142;
    v117(v142, v118, v115);
    v119(v118, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v120, 0, 1, v115);
  }
  v122 = v140;
  v123 = v141;
  v124 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  v125 = v144;
  v124(v141, v120, v144);
  v126 = *(void (**)(char *, uint64_t))(v122 + 8);
  v126(v120, v125);
  v181 = v188;
  v182 = v189;
  v183 = v190;
  v184 = (char)v191;
  v185 = v192;
  v186 = v193;
  v187 = v194;
  v160 = &v181;
  v124(v120, v123, v125);
  v161 = v120;
  swift_retain();
  v159[0] = v97;
  v159[1] = v125;
  v157 = v138;
  v155 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v112);
  v156 = &protocol witness table for _FrameLayout;
  v154 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v149);
  v158 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v125);
  sub_2B7F28((uint64_t *)&v160, 2uLL, (uint64_t)v159);
  v126(v123, v125);
  v127 = swift_release();
  ((void (*)(char *, uint64_t, __n128))v126)(v120, v125, v127);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_E5D7A4@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, _QWORD *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t *, uint64_t *, uint64_t);
  double result;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void *v95;
  _QWORD *v96;
  uint64_t v97;
  void *v98;
  _QWORD v99[3];
  char v100;
  _QWORD *v101;
  char v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t OpaqueTypeConformance2;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char v119;
  _QWORD *v120;
  char v121;
  __int128 v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  void *v126;
  _QWORD *v127;
  char v128;
  __int128 v129;

  v88 = (uint64_t)a7;
  v89 = a5;
  v95 = (void *)a3;
  v96 = a6;
  v93 = a8;
  v94 = (uint64_t)a4;
  v92 = a2;
  v90 = a1;
  v14 = type metadata accessor for ScrollViewProxy(0);
  v15 = *(_QWORD *)(v14 - 8);
  v87 = v14;
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin();
  v86 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = a3;
  v124 = a4;
  v125 = a5;
  v126 = a6;
  v127 = a7;
  v17 = type metadata accessor for CarouselView(0, (uint64_t)&v123);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin();
  v22 = (char *)&v86 - v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16);
  v91 = v17;
  v23(v22, a2, v17, v20);
  v24 = v86;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v86, v90, v14);
  v25 = *(unsigned __int8 *)(v18 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = *(unsigned __int8 *)(v15 + 80);
  v28 = (v19 + v27 + v26) & ~v27;
  v29 = (char *)swift_allocObject(&unk_13CA928, v28 + v16, v25 | v27 | 7);
  v30 = v94;
  v31 = v95;
  *((_QWORD *)v29 + 2) = v95;
  *((_QWORD *)v29 + 3) = v30;
  v32 = v88;
  v33 = v96;
  *((_QWORD *)v29 + 4) = v89;
  *((_QWORD *)v29 + 5) = v33;
  *((_QWORD *)v29 + 6) = v32;
  v34 = &v29[v26];
  v35 = v29;
  v90 = v29;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v34, v22, v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v35[v28], v24, v87);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v31, 0, 0);
  v36 = type metadata accessor for Array(255);
  v123 = v94;
  v124 = &type metadata for Int;
  v125 = v32;
  v126 = &protocol witness table for Int;
  v38 = type metadata accessor for IDView(255, &v123, v37);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v38);
  v123 = v38;
  v124 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for [A], v36);
  v123 = v36;
  v124 = v31;
  v125 = OpaqueTypeMetadata2;
  v126 = (void *)v41;
  v127 = v96;
  v42 = type metadata accessor for ForEach(255, &v123);
  v123 = v38;
  v124 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v42);
  v44 = type metadata accessor for LazyHStack(255, v42, v43);
  v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC8);
  v46 = type metadata accessor for ModifiedContent(255, v44, v45);
  v47 = type metadata accessor for ModifiedContent(255, v46, &type metadata for _PaddingLayout);
  v48 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD0);
  v49 = type metadata accessor for ModifiedContent(255, v47, v48);
  v50 = type metadata accessor for ModifiedContent(255, v49, &type metadata for _AppearanceActionModifier);
  v51 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
  v52 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v44);
  v53 = sub_5C150(&qword_150ACE0, &qword_150ACC8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v113 = v52;
  v114 = v53;
  v111 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v46);
  v112 = &protocol witness table for _PaddingLayout;
  v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v55 = sub_5C150(&qword_150ACE8, &qword_150ACD0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v109 = v54;
  v110 = v55;
  v107 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v108 = &protocol witness table for _AppearanceActionModifier;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v50);
  v57 = sub_E6220C();
  v123 = v50;
  v124 = (void *)v51;
  v125 = v56;
  v126 = (void *)v57;
  v58 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v59 = type metadata accessor for Optional(255, v95);
  v123 = v50;
  v124 = (void *)v51;
  v125 = v56;
  v126 = (void *)v57;
  v60 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v106 = v96[1];
  v61 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v59);
  v123 = v58;
  v124 = (void *)v59;
  v125 = v60;
  v126 = (void *)v61;
  v62 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v123 = v58;
  v124 = (void *)v59;
  v125 = v60;
  v126 = (void *)v61;
  v63 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v64 = type metadata accessor for PagingScrollView(255, v62, v63);
  v65 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACF8);
  v66 = type metadata accessor for ModifiedContent(255, v64, v65);
  v67 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v64);
  v68 = sub_5C150(&qword_150AD00, &qword_150ACF8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v104 = v67;
  v105 = v68;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v66);
  v123 = v66;
  v124 = (void *)v69;
  v70 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v123 = v66;
  v124 = (void *)v69;
  v71 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v123 = v70;
  v124 = (void *)v71;
  v72 = swift_getOpaqueTypeMetadata2(255, &v123, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v123 = v70;
  v124 = (void *)v71;
  v73 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v123 = v72;
  v124 = (void *)v73;
  v74 = swift_getOpaqueTypeMetadata2(0, &v123, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v123 = v72;
  v124 = (void *)v73;
  v75 = swift_getOpaqueTypeConformance2(&v123, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v123 = GeometryReader.init(content:)(sub_E65534, v90, v74, v75);
  v124 = v76;
  v77 = *(_QWORD *)(v92 + *(int *)(v91 + 72) + 8);
  v78 = static Alignment.center.getter(v123);
  v80 = v79;
  v81 = type metadata accessor for GeometryReader(0, v74, v75);
  v82 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v81);
  View.frame(width:height:alignment:)(0, 1, v77, 0, v78, v80, v81, v82);
  swift_release();
  v99[0] = v116;
  v99[1] = v117;
  v99[2] = v118;
  v100 = v119;
  v101 = v120;
  v102 = v121;
  v103 = v122;
  v83 = type metadata accessor for ModifiedContent(0, v81, &type metadata for _FrameLayout);
  v97 = v82;
  v98 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v83);
  v84 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
  v84(&v123, v99, v83);
  swift_release();
  v116 = v123;
  v117 = v124;
  v118 = v125;
  v119 = (char)v126;
  v120 = v127;
  v121 = v128;
  v122 = v129;
  v84(v93, &v116, v83);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E5DED4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  double v72;
  char *v73;
  char *v74;
  uint64_t v75;
  double v76;
  unsigned int v77;
  __n128 v78;
  unsigned int v79;
  uint64_t v80;
  int v81;
  int v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _BOOL8 v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  char v129[8];
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  _QWORD *v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t OpaqueTypeConformance2;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  void *v153;
  _QWORD *v154;

  v118 = a8;
  v121 = a6;
  v119 = (void *)a5;
  v122 = a3;
  v127 = a2;
  v117 = a1;
  v125 = a9;
  v124 = type metadata accessor for ScrollIndicatorVisibility(0);
  v123 = *(_QWORD *)(v124 - 8);
  v13 = __chkstk_darwin();
  v126 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrollPagingBehavior(0, v13);
  __chkstk_darwin();
  v120 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a4, 0, 0);
  v16 = type metadata accessor for Array(255);
  v150 = a5;
  v151 = &type metadata for Int;
  v152 = a8;
  v153 = &protocol witness table for Int;
  v18 = type metadata accessor for IDView(255, &v150, v17);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v18);
  v150 = v18;
  v151 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v150, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v16);
  v150 = v16;
  v151 = a4;
  v128 = (uint64_t)a4;
  v152 = OpaqueTypeMetadata2;
  v153 = (void *)v21;
  v154 = a7;
  v22 = a7;
  v23 = type metadata accessor for ForEach(255, &v150);
  v150 = v18;
  v151 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v23);
  v25 = type metadata accessor for LazyHStack(255, v23, v24);
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC8);
  v27 = type metadata accessor for ModifiedContent(255, v25, v26);
  v28 = type metadata accessor for ModifiedContent(255, v27, &type metadata for _PaddingLayout);
  v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD0);
  v30 = type metadata accessor for ModifiedContent(255, v28, v29);
  v31 = type metadata accessor for ModifiedContent(255, v30, &type metadata for _AppearanceActionModifier);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
  v33 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v25);
  v34 = sub_5C150(&qword_150ACE0, &qword_150ACC8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v147 = v33;
  v148 = v34;
  v145 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  v146 = &protocol witness table for _PaddingLayout;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v36 = sub_5C150(&qword_150ACE8, &qword_150ACD0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v143 = v35;
  v144 = v36;
  v141 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v142 = &protocol witness table for _AppearanceActionModifier;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  v38 = sub_E6220C();
  v150 = v31;
  v151 = (void *)v32;
  v152 = v37;
  v153 = (void *)v38;
  v39 = swift_getOpaqueTypeMetadata2(255, &v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v40 = type metadata accessor for Optional(255, a4);
  v150 = v31;
  v151 = (void *)v32;
  v152 = v37;
  v153 = (void *)v38;
  v41 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v42 = v22;
  v140 = v22[1];
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v40);
  v150 = v39;
  v151 = (void *)v40;
  v152 = v41;
  v153 = (void *)v43;
  v44 = swift_getOpaqueTypeMetadata2(255, &v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v101 = v44;
  v150 = v39;
  v151 = (void *)v40;
  v152 = v41;
  v153 = (void *)v43;
  v100 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v45 = type metadata accessor for PagingScrollView(0, v44, v100);
  v102 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin();
  v47 = (char *)&v97 - v46;
  v48 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACF8);
  v49 = type metadata accessor for ModifiedContent(0, v45, v48);
  v115 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v98 = (char *)&v97 - v50;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v45);
  v99 = v51;
  v52 = sub_5C150(&qword_150AD00, &qword_150ACF8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v138 = v51;
  v139 = v52;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v150 = v49;
  v151 = (void *)v53;
  v54 = swift_getOpaqueTypeMetadata2(0, &v150, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v113 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v112 = (char *)&v97 - v55;
  v116 = v49;
  v150 = v49;
  v151 = (void *)v53;
  v109 = v53;
  v56 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v150 = v54;
  v151 = (void *)v56;
  v57 = swift_getOpaqueTypeMetadata2(0, &v150, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v110 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v108 = (char *)&v97 - v58;
  v114 = v54;
  v150 = v54;
  v151 = (void *)v56;
  v107 = v56;
  v59 = swift_getOpaqueTypeConformance2(&v150, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v111 = v57;
  v150 = v57;
  v151 = (void *)v59;
  v104 = v59;
  v60 = swift_getOpaqueTypeMetadata2(0, &v150, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v106 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v103 = (char *)&v97 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __chkstk_darwin();
  v105 = (char *)&v97 - v63;
  v64 = GeometryProxy.size.getter(v62);
  v65 = v128;
  v66 = v119;
  v150 = v128;
  v151 = v119;
  v67 = v121;
  v152 = v121;
  v153 = v42;
  v68 = v42;
  v69 = v118;
  v154 = (_QWORD *)v118;
  v70 = type metadata accessor for CarouselView(0, (uint64_t)&v150);
  v71 = v127;
  v72 = (v64 - *(double *)((char *)v127 + *(int *)(v70 + 72))) * 0.5;
  v73 = v120;
  static ScrollPagingBehavior.childPaging.getter();
  v130 = v65;
  v131 = v66;
  v74 = v98;
  v132 = v67;
  v133 = v68;
  v134 = v69;
  v135 = v71;
  v136 = v72;
  v137 = v122;
  PagingScrollView.init(behavior:axis:content:)(v73, 0, sub_E655F4, v129, v101, v100);
  v150 = 0x6C6C6F726373;
  v151 = (void *)0xE600000000000000;
  View.coordinateSpace<A>(name:)(&v150, v45, &type metadata for String, v99, &protocol witness table for String);
  v75 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v47, v45);
  v76 = static ScrollIndicatorVisibility.hidden.getter(v75);
  v77 = static Axis.Set.vertical.getter(v76);
  v79 = static Axis.Set.horizontal.getter(v78);
  v80 = Axis.Set.init(rawValue:)(0);
  v81 = Axis.Set.init(rawValue:)(v80);
  if (Axis.Set.init(rawValue:)(v81 & v77) != v77)
    v80 = Axis.Set.init(rawValue:)(v80 | v77);
  v82 = Axis.Set.init(rawValue:)(v80);
  if (Axis.Set.init(rawValue:)(v82 & v79) != v79)
    v80 = Axis.Set.init(rawValue:)(v80 | v79);
  v83 = v112;
  v84 = v126;
  v85 = v80;
  v86 = v116;
  View.scrollIndicators(_:axes:)(v126, v85, v116, v109);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v84, v124);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v86);
  v87 = v108;
  v88 = v114;
  View.scrollClipDisabled(_:)(1, v114, v107);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v83, v88);
  v89 = Array.count.getter(*v127) < 2;
  v90 = v103;
  v91 = v111;
  View.scrollDisabled(_:)(v89, v111, v104);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v87, v91);
  v92 = v106;
  v93 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  v94 = v105;
  v93(v105, v90, v60);
  v95 = *(void (**)(char *, uint64_t))(v92 + 8);
  v95(v90, v60);
  v93(v125, v94, v60);
  return ((uint64_t (*)(char *, uint64_t))v95)(v94, v60);
}

uint64_t sub_E5E88C@<X0>(_QWORD *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, double (*a3)@<D0>(uint64_t a1@<X8>)@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, double a9@<D0>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double (*v21)@<D0>(uint64_t@<X8>);
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  __n128 v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  _QWORD *v101;
  char *v102;
  char *v103;
  __n128 v104;
  uint64_t v105;
  char *v106;
  __n128 v107;
  __n128 v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  double (*v112)@<D0>(uint64_t@<X8>);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double (*v116)@<D0>(uint64_t@<X8>);
  void *v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  __n128 v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  void *v134;
  _QWORD *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  __n128 v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  _QWORD *v188;
  void (*v189)(char *, char *, uint64_t);
  uint64_t v190;
  _QWORD *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  double (*v199)@<D0>(uint64_t@<X8>);
  _QWORD *v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  char v204[8];
  double (*v205)@<D0>(uint64_t@<X8>);
  void *v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  _QWORD *v210;
  _QWORD v211[11];
  double (*v212)@<D0>(uint64_t@<X8>);
  void *v213;
  uint64_t v214;
  void *v215;
  _QWORD *v216;

  v203 = a5;
  v189 = a2;
  v198 = a1;
  v187 = a8;
  v184 = type metadata accessor for Binding(255, a3);
  v183 = type metadata accessor for Optional(0, v184);
  v181 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin();
  v182 = (char *)&v148 - v15;
  v16 = type metadata accessor for Optional(0, a3);
  v185 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v188 = (uint64_t *)((char *)&v148 - v17);
  v179 = type metadata accessor for ScrollViewProxy(0);
  v178 = *(_QWORD *)(v179 - 8);
  v180 = *(_QWORD *)(v178 + 64);
  __chkstk_darwin();
  v177 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = a3;
  v213 = a4;
  v202 = a4;
  v214 = a5;
  v215 = a6;
  v216 = (_QWORD *)a7;
  v201 = a7;
  v197 = type metadata accessor for CarouselView(0, (uint64_t)&v212);
  v191 = *(_QWORD **)(v197 - 8);
  v196 = v191[8];
  __chkstk_darwin();
  v165 = (char *)&v148 - v19;
  type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v195 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3;
  v199 = a3;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a3, 0, 0);
  v22 = type metadata accessor for Array(255);
  v212 = (double (*)@<D0>(uint64_t@<X8>))a4;
  v213 = &type metadata for Int;
  v214 = a7;
  v215 = &protocol witness table for Int;
  v24 = type metadata accessor for IDView(255, &v212, v23);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v24);
  v212 = (double (*)@<D0>(uint64_t@<X8>))v24;
  v213 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v212, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  v212 = (double (*)@<D0>(uint64_t@<X8>))v22;
  v213 = v21;
  v214 = OpaqueTypeMetadata2;
  v215 = (void *)v27;
  v216 = a6;
  v28 = type metadata accessor for ForEach(255, &v212);
  v212 = (double (*)@<D0>(uint64_t@<X8>))v24;
  v213 = (void *)WitnessTable;
  v211[10] = swift_getOpaqueTypeConformance2(&v212, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v154 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v28);
  v29 = type metadata accessor for LazyHStack(0, v28, v154);
  v190 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  v155 = (char *)&v148 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC8);
  v149 = v29;
  v32 = type metadata accessor for ModifiedContent(0, v29, v31);
  v160 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v156 = (char *)&v148 - v33;
  v151 = v32;
  v34 = type metadata accessor for ModifiedContent(0, v32, &type metadata for _PaddingLayout);
  v161 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v157 = (char *)&v148 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD0);
  v153 = v34;
  v37 = type metadata accessor for ModifiedContent(0, v34, v36);
  v163 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin();
  v192 = (char *)&v148 - v38;
  v159 = v37;
  v39 = type metadata accessor for ModifiedContent(0, v37, &type metadata for _AppearanceActionModifier);
  v173 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin();
  v193 = (char *)&v148 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
  v42 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v29);
  v43 = sub_5C150(&qword_150ACE0, &qword_150ACC8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v211[8] = v42;
  v211[9] = v43;
  v150 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v32);
  v211[6] = v150;
  v211[7] = &protocol witness table for _PaddingLayout;
  v44 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  v152 = v44;
  v45 = sub_5C150(&qword_150ACE8, &qword_150ACD0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v211[4] = v44;
  v211[5] = v45;
  v158 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v37);
  v211[2] = v158;
  v211[3] = &protocol witness table for _AppearanceActionModifier;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v39);
  v47 = sub_E6220C();
  v212 = (double (*)@<D0>(uint64_t@<X8>))v39;
  v213 = (void *)v41;
  v214 = v46;
  v215 = (void *)v47;
  v48 = swift_getOpaqueTypeMetadata2(0, &v212, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v175 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin();
  v194 = (char *)&v148 - v49;
  v174 = v39;
  v212 = (double (*)@<D0>(uint64_t@<X8>))v39;
  v213 = (void *)v41;
  v170 = v41;
  v164 = v46;
  v214 = v46;
  v215 = (void *)v47;
  v162 = v47;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v212, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v200 = a6;
  v211[1] = a6[1];
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v16);
  v176 = v48;
  v212 = (double (*)@<D0>(uint64_t@<X8>))v48;
  v213 = (void *)v16;
  v186 = v16;
  v168 = OpaqueTypeConformance2;
  v214 = OpaqueTypeConformance2;
  v215 = (void *)v51;
  v166 = v51;
  v172 = swift_getOpaqueTypeMetadata2(0, &v212, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin();
  v167 = (char *)&v148 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __chkstk_darwin();
  v169 = (char *)&v148 - v54;
  v55 = static VerticalAlignment.center.getter(v53);
  v56 = v197;
  v57 = *(_QWORD *)((char *)v198 + *(int *)(v197 + 80));
  v205 = v199;
  v206 = v202;
  v207 = v203;
  v208 = a6;
  v209 = v201;
  v210 = v198;
  v58 = v195;
  v59 = v154;
  sub_E5FFFC();
  v60 = v155;
  v61 = LazyHStack.init(alignment:spacing:pinnedViews:content:)(v55, v57, 0, v58, sub_E6560C, v204, v28, v59);
  v212 = sub_E60060;
  v213 = 0;
  v62 = static Alignment.center.getter(v61);
  v64 = v63;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE70);
  v66 = sub_5C150(&qword_150AE78, &qword_150AE70, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v67 = v156;
  v68 = v56;
  v69 = v64;
  v70 = v149;
  View.background<A>(_:alignment:)(&v212, v62, v69, v149, v65, v42, v66);
  v71 = v165;
  v72 = (*(uint64_t (**)(char *, uint64_t))(v190 + 8))(v60, v70);
  v73 = static Edge.Set.horizontal.getter(v72);
  v74 = v157;
  v75 = v151;
  View.padding(_:_:)(v73, *(_QWORD *)&a9, 0, v151, v150);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v67, v75);
  v76 = v191;
  v77 = (_QWORD *)v191[2];
  v78 = v68;
  ((void (*)(char *, _QWORD *, uint64_t))v77)(v71, v198, v68);
  v79 = *((unsigned __int8 *)v76 + 80);
  v190 = ((v79 + 56) & ~v79) + v196;
  v80 = (v79 + 56) & ~v79;
  v195 = (char *)v80;
  v196 = v79 | 7;
  v81 = (_QWORD *)swift_allocObject(&unk_13CA950, v190, v79 | 7);
  v82 = v202;
  v81[2] = v199;
  v81[3] = v82;
  v83 = v200;
  v81[4] = v203;
  v81[5] = v83;
  v84 = v201;
  v81[6] = v201;
  v85 = (char *)v81 + v80;
  v86 = (void (*)(char *, char *, uint64_t))v76[4];
  v86(v85, v71, v68);
  v87 = sub_E656A8();
  v88 = sub_E656EC();
  v89 = v153;
  View.onPreferenceChange<A>(_:perform:)(&type metadata for ScrollViewOffsetKey, sub_E6561C, v81, v153, &type metadata for ScrollViewOffsetKey, v152, v87, v88);
  v90 = swift_release();
  v91 = v74;
  v92 = v84;
  (*(void (**)(char *, uint64_t, __n128))(v161 + 8))(v91, v89, v90);
  v93 = v198;
  v191 = v77;
  ((void (*)(char *, _QWORD *, uint64_t))v77)(v71, v198, v78);
  v94 = v178;
  v95 = v177;
  v96 = v179;
  (*(void (**)(char *, _QWORD, uint64_t))(v178 + 16))(v177, v189, v179);
  v97 = *(unsigned __int8 *)(v94 + 80);
  v98 = (v190 + v97) & ~v97;
  v99 = swift_allocObject(&unk_13CA978, v98 + v180, v196 | v97);
  v100 = v202;
  *(_QWORD *)(v99 + 16) = v199;
  *(_QWORD *)(v99 + 24) = v100;
  v101 = v200;
  *(_QWORD *)(v99 + 32) = v203;
  *(_QWORD *)(v99 + 40) = v101;
  v102 = &v195[v99];
  *(_QWORD *)(v99 + 48) = v92;
  v103 = v71;
  v189 = v86;
  v86(v102, v71, v197);
  v104.n128_f64[0] = (*(double (**)(uint64_t, char *, uint64_t))(v94 + 32))(v99 + v98, v95, v96);
  v105 = v159;
  v106 = v192;
  View.onAppear(perform:)(sub_E65968, v99, v159, v158, v104);
  v107 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v163 + 8))(v106, v105, v107);
  v109 = (void *)v93[2];
  if (v109)
  {
    v110 = v93[3];
    v212 = (double (*)@<D0>(uint64_t@<X8>))v93[1];
    v213 = v109;
    v214 = v110;
    swift_retain();
    swift_retain();
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE58);
    Binding.wrappedValue.getter(v211, v111);
    swift_release();
    v108 = swift_release();
    v112 = (double (*)@<D0>(uint64_t@<X8>))v211[0];
  }
  else
  {
    v112 = 0;
  }
  v212 = v112;
  LOBYTE(v213) = v109 == 0;
  v113 = v197;
  ((void (*)(char *, _QWORD *, uint64_t, __n128))v191)(v71, v93, v197, v108);
  v114 = v190;
  v115 = swift_allocObject(&unk_13CA9A0, v190, v196);
  v116 = v199;
  v117 = v202;
  *(_QWORD *)(v115 + 16) = v199;
  *(_QWORD *)(v115 + 24) = v117;
  v118 = v200;
  *(_QWORD *)(v115 + 32) = v203;
  *(_QWORD *)(v115 + 40) = v118;
  v119 = &v195[v115];
  *(_QWORD *)(v115 + 48) = v201;
  v189(v119, v103, v113);
  v120 = v174;
  v121 = v193;
  View.onChange<A>(of:initial:_:)(&v212, 0, sub_E65A14, v115, v174, v170, v164, v162);
  v122 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v173 + 8))(v121, v120, v122);
  v123 = (char *)v93 + *(int *)(v113 + 64);
  v124 = v181;
  v125 = v113;
  v126 = v182;
  v127 = v183;
  (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v182, v123, v183);
  v128 = v103;
  v129 = v184;
  v130 = *(_QWORD *)(v184 - 8);
  v131 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v126, 1, v184) != 1)
  {
    Binding.wrappedValue.getter(v188, v129);
    v131 = 0;
    v124 = v130;
    v127 = v129;
  }
  (*(void (**)(char *, uint64_t))(v124 + 8))(v126, v127);
  v132 = v188;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, double (*)@<D0>(uint64_t@<X8>)))(*((_QWORD *)v116 - 1)
                                                                                               + 56))(v188, v131, 1, v116);
  ((void (*)(char *, _QWORD *, uint64_t))v191)(v128, v198, v125);
  v133 = swift_allocObject(&unk_13CA9C8, v114, v196);
  v134 = v202;
  *(_QWORD *)(v133 + 16) = v116;
  *(_QWORD *)(v133 + 24) = v134;
  v135 = v200;
  *(_QWORD *)(v133 + 32) = v203;
  *(_QWORD *)(v133 + 40) = v135;
  v136 = &v195[v133];
  *(_QWORD *)(v133 + 48) = v201;
  v189(v136, v128, v125);
  v137 = v167;
  v138 = v176;
  v139 = v186;
  v140 = v194;
  View.onChange<A>(of:initial:_:)(v132, 0, sub_E65AAC, v133, v176, v186, v168, v166);
  v141 = swift_release();
  (*(void (**)(_QWORD *, uint64_t, __n128))(v185 + 8))(v132, v139, v141);
  (*(void (**)(char *, uint64_t))(v175 + 8))(v140, v138);
  v142 = v171;
  v143 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
  v144 = v169;
  v145 = v172;
  v143(v169, v137, v172);
  v146 = *(void (**)(char *, uint64_t))(v142 + 8);
  v146(v137, v145);
  v143(v187, v144, v145);
  return ((uint64_t (*)(char *, uint64_t))v146)(v144, v145);
}

uint64_t sub_E5F760@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t OpaqueTypeConformance2;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t WitnessTable;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;

  v52 = a4;
  v66 = a7;
  *(_QWORD *)&v80 = a2;
  *((_QWORD *)&v80 + 1) = a3;
  v51 = a3;
  v81 = a4;
  v82 = a5;
  v83 = a6;
  v57 = type metadata accessor for CarouselView(0, (uint64_t)&v80);
  v56 = *(_QWORD *)(v57 - 8);
  v59 = *(_QWORD *)(v56 + 64);
  __chkstk_darwin();
  v54 = (char *)&v49 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v63 = v14;
  *(_QWORD *)&v80 = a3;
  *((_QWORD *)&v80 + 1) = &type metadata for Int;
  v81 = a6;
  v82 = &protocol witness table for Int;
  v15 = a6;
  v17 = type metadata accessor for IDView(255, &v80, v16);
  v60 = v17;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v17);
  *(_QWORD *)&v80 = v17;
  *((_QWORD *)&v80 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v80, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v62 = OpaqueTypeMetadata2;
  v61 = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v80 = v14;
  *((_QWORD *)&v80 + 1) = a2;
  v81 = OpaqueTypeMetadata2;
  v82 = (void *)v61;
  v83 = (uint64_t)a5;
  v64 = type metadata accessor for ForEach(0, &v80);
  v65 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v53 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v55 = (char *)&v49 - v20;
  *(_QWORD *)&v78 = *a1;
  v21 = v78;
  v22 = type metadata accessor for Array(0);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  RandomAccessCollection<>.indices.getter(&v80, v22, v23, &protocol witness table for Int);
  v73 = v80;
  v77 = v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE38);
  v25 = sub_E6549C();
  v75 = &protocol witness table for Int;
  v76 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v24);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  zip<A, B>(_:_:)(&v78, &v73, &v77, v24, v22, v26, v27);
  v73 = v78;
  v74 = v79;
  *(_QWORD *)&v80 = v24;
  *((_QWORD *)&v80 + 1) = v22;
  v81 = v26;
  v82 = (void *)v27;
  v28 = type metadata accessor for Zip2Sequence(0, &v80);
  v29 = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v28);
  *(_QWORD *)&v78 = Array.init<A>(_:)(&v73, TupleTypeMetadata2, v28, v29);
  v30 = v51;
  v67 = a2;
  v68 = v51;
  v31 = v52;
  v69 = v52;
  v70 = a5;
  v32 = a5;
  v71 = v15;
  KeyPath = swift_getKeyPath(&unk_10B0E10);
  v33 = v56;
  v34 = v54;
  v35 = a1;
  v36 = v57;
  (*(void (**)(char *, _QWORD *, uint64_t))(v56 + 16))(v54, v35, v57);
  v37 = *(unsigned __int8 *)(v33 + 80);
  v38 = (v37 + 56) & ~v37;
  v39 = (char *)swift_allocObject(&unk_13CA9F0, v38 + v59, v37 | 7);
  *((_QWORD *)v39 + 2) = a2;
  *((_QWORD *)v39 + 3) = v30;
  *((_QWORD *)v39 + 4) = v31;
  *((_QWORD *)v39 + 5) = v32;
  *((_QWORD *)v39 + 6) = v15;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v39[v38], v34, v36);
  v40 = (_QWORD *)swift_allocObject(&unk_13CAA18, 72, 7);
  v40[2] = a2;
  v40[3] = v30;
  v40[4] = v31;
  v40[5] = v32;
  v40[6] = v15;
  v40[7] = sub_E65D34;
  v40[8] = v39;
  *(_QWORD *)&v80 = v60;
  *((_QWORD *)&v80 + 1) = WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v80, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v42 = v53;
  ForEach<>.init(_:id:content:)(&v78, KeyPath, sub_E65E0C, v40, v63, v62, v61, v32, OpaqueTypeConformance2);
  v72 = OpaqueTypeConformance2;
  v43 = v64;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v64);
  v44 = v65;
  v45 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v46 = v55;
  v45(v55, v42, v43);
  v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v47(v42, v43);
  v45(v66, v46, v43);
  return ((uint64_t (*)(char *, uint64_t))v47)(v46, v43);
}

uint64_t sub_E5FC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v22;
  char *v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  void *v34;
  __n128 v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t WitnessTable;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;

  v54 = a6;
  v55 = a7;
  v53 = a4;
  v58 = a1;
  v59 = a4;
  v56 = a9;
  v60 = a5;
  v61 = a6;
  v62 = a7;
  v63 = a8;
  v45 = a8;
  v13 = type metadata accessor for CarouselView(0, (uint64_t)&v59);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v14;
  __chkstk_darwin();
  v57 = (char *)&v43 - v15;
  v47 = *((_QWORD *)a5 - 1);
  v16 = __chkstk_darwin();
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = (uint64_t)a5;
  v60 = &type metadata for Int;
  v61 = a8;
  v62 = &protocol witness table for Int;
  v19 = type metadata accessor for IDView(0, &v59, v16);
  v52 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin();
  v44 = (char *)&v43 - v20;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v19);
  v59 = v19;
  v60 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v59, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v49 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin();
  v46 = (char *)&v43 - v25;
  (*(void (**)(uint64_t, double))(a3 + *(int *)(v13 + 76)))(a2, v24);
  v59 = v58;
  v26 = v45;
  View.id<A>(_:)(&v59, a5, &type metadata for Int, v45, &protocol witness table for Int);
  (*(void (**)(char *, void *))(v47 + 8))(v18, a5);
  v27 = v50;
  v28 = a3;
  v29 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v57, v28, v13);
  v30 = *(unsigned __int8 *)(v27 + 80);
  v31 = (v30 + 56) & ~v30;
  v32 = (v51 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject(&unk_13CAA40, v32 + 8, v30 | 7);
  *((_QWORD *)v33 + 2) = v53;
  *((_QWORD *)v33 + 3) = a5;
  v34 = v55;
  *((_QWORD *)v33 + 4) = v54;
  *((_QWORD *)v33 + 5) = v34;
  *((_QWORD *)v33 + 6) = v26;
  v35.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v27 + 32))(&v33[v31], v57, v29);
  *(_QWORD *)&v33[v32] = v58;
  v36 = v44;
  View.onTapGesture(count:perform:)(1, sub_E654F8, v33, v19, WitnessTable, v35);
  v37 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v36, v19, v37);
  v38 = v49;
  v39 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v40 = v46;
  v39(v46, v23, OpaqueTypeMetadata2);
  v41 = *(void (**)(char *, uint64_t))(v38 + 8);
  v41(v23, OpaqueTypeMetadata2);
  v39(v56, v40, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v41)(v40, OpaqueTypeMetadata2);
}

double sub_E5FF64(uint64_t a1, char a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  __int128 v8;
  double result;
  _OWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = 0;
  if ((a2 & 1) != 0)
    v7 = static Animation.default.getter(a4);
  __chkstk_darwin();
  v8 = *(_OWORD *)(a3 + 32);
  v10[1] = *(_OWORD *)(a3 + 16);
  v10[2] = v8;
  v11 = *(_QWORD *)(a3 + 48);
  v12 = v4;
  v13 = a1;
  withAnimation<A>(_:_:)(v7, sub_E654FC, v10, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E5FFFC()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews(0);
  v3 = 0;
  v1 = sub_4DD24(&qword_1509070, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  return dispatch thunk of OptionSet.init(rawValue:)(&v3, v0, v1);
}

double sub_E60060@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double result;
  _QWORD v10[2];

  v2 = type metadata accessor for NamedCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Color.clear.getter(v4);
  v10[0] = 0x6C6C6F726373;
  v10[1] = 0xE600000000000000;
  static CoordinateSpaceProtocol<>.named<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  v8 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for NamedCoordinateSpace);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  result = -v8;
  *(_QWORD *)a1 = v7;
  *(double *)(a1 + 8) = -v8;
  return result;
}

uint64_t sub_E60144(double *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t result;
  double v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[5];

  v28 = a7;
  v13 = type metadata accessor for LayoutDirection(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v29[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v29[-1] - v17;
  v19 = *a1;
  v29[0] = a3;
  v29[1] = a4;
  v29[2] = a5;
  v29[3] = a6;
  v29[4] = v28;
  result = type metadata accessor for CarouselView(0, (uint64_t)v29);
  v21 = ceil(v19 / *(double *)((char *)a2 + *(int *)(result + 100)));
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = result;
  v23 = (uint64_t)v21;
  sub_E42BB0((uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for LayoutDirection.rightToLeft(_:), v13);
  v24 = static LayoutDirection.== infix(_:_:)(v18, v16);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v16, v13);
  v25(v18, v13);
  if ((v24 & 1) == 0)
    return sub_E60308(v23, v22);
  result = Array.count.getter(*a2);
  v26 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_11;
  v27 = __OFSUB__(v26, v23);
  v23 = v26 - v23;
  if (!v27)
    return sub_E60308(v23, v22);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_E60308(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (**v22)(uint64_t, char *);
  void (*v23)(uint64_t, char *);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *);
  uint64_t v40;
  __int128 *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v46 = type metadata accessor for Binding(255, v6);
  v7 = type metadata accessor for Optional(0, v46);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin();
  v45 = (char *)&v37 - v8;
  v9 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  *(_QWORD *)&v47 = *v2;
  v12 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v12);
  result = Collection.isEmpty.getter(v12, WitnessTable);
  if ((result & 1) != 0)
    return result;
  result = Array.count.getter(v11);
  v15 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v15 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v15 >= (a1 & ~(a1 >> 63)))
    v16 = a1 & ~(a1 >> 63);
  else
    v16 = result - 1;
  v17 = (__int128 *)((char *)v2 + *(int *)(a2 + 92));
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v41 = v17;
  *(_QWORD *)&v47 = v19;
  *((_QWORD *)&v47 + 1) = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
  result = (uint64_t)State.wrappedValue.getter(&v49, v20);
  if (v16 != v49)
  {
    *(_QWORD *)&v47 = v19;
    *((_QWORD *)&v47 + 1) = v18;
    v49 = v16;
    State.wrappedValue.setter(&v49, v20);
    v22 = (void (**)(uint64_t, char *))((char *)v2 + *(int *)(a2 + 88));
    v23 = *v22;
    v24 = v42;
    if (*v22)
    {
      v25 = (uint64_t)v22[1];
      v39 = v23;
      v40 = v25;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49, v20);
      v38 = v49;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49, v20);
      Array.subscript.getter(v49, v11, v6);
      v39(v38, v24);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v6);
    }
    v40 = v20;
    v26 = v2[2];
    if (v26)
    {
      v27 = v2[3];
      v28 = v2[1];
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      swift_retain();
      swift_retain();
      State.wrappedValue.getter(&v49, v40);
      *(_QWORD *)&v47 = v28;
      *((_QWORD *)&v47 + 1) = v26;
      v48 = v27;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE58);
      Binding.wrappedValue.setter(&v49, v29);
      swift_release();
      v21 = swift_release();
    }
    v30 = (char *)v2 + *(int *)(a2 + 64);
    v32 = v43;
    v31 = v44;
    v33 = v45;
    (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v45, v30, v44, v21);
    v34 = v46;
    v35 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v46) != 1)
    {
      v36 = *v3;
      v47 = *v41;
      State.wrappedValue.getter(&v49, v40);
      Array.subscript.getter(v49, v36, v6);
      Binding.wrappedValue.setter(v24, v34);
      v32 = v35;
      v31 = v34;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  }
  return result;
}

double sub_E60604(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  double v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  double result;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t WitnessTable;
  uint64_t v59;
  uint64_t v60;
  double v61;
  __n128 v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v81 = a2;
  v78 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v77 = (char **)((char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Binding(0, v14);
  v82 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v75 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v79 = (char *)&v71 - v17;
  v80 = a3;
  v84 = a3;
  v85 = a4;
  v86 = a5;
  v87 = a6;
  v76 = a6;
  v88 = a7;
  v18 = type metadata accessor for CarouselView(0, (uint64_t)&v84);
  v73 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v71 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v72 = (char *)&v71 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150AE90);
  v22 = type metadata accessor for Optional(255, v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v21, v22, 0, 0);
  v74 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  v25 = (uint64_t *)((char *)&v71 - v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150ACC0);
  __chkstk_darwin();
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v71 - v28;
  v30 = type metadata accessor for ScrollViewProxy(0);
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v81, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  sub_5C238((uint64_t)v29, (uint64_t)v27, &qword_150ACC0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE30);
  State.wrappedValue.setter(v27, v32);
  sub_56024((uint64_t)v29, &qword_150ACC0);
  v34 = a1[1];
  v33 = a1[2];
  v35 = a1[3];
  v81 = v18;
  v36 = *(int *)(v18 + 64);
  v37 = a1;
  v38 = (char *)v25 + *(int *)(TupleTypeMetadata2 + 48);
  *v25 = v34;
  v25[1] = v33;
  v25[2] = v35;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v38, (char *)a1 + v36, v22);
  if (v33)
  {
    v39 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v38, 1, v15) == 1)
    {
      v84 = v34;
      v85 = v33;
      v86 = v35;
      sub_E55108(v34, v33);
      swift_retain();
      swift_retain();
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE58);
      Binding.wrappedValue.getter(&v83, v40);
      v41 = v83;
      v42 = v72;
      v43 = v73;
      v44 = *(void (**)(char *, uint64_t *, uint64_t))(v73 + 16);
      v45 = v81;
      v44(v72, a1, v81);
      if (v41 < 0)
      {
        v68 = *(void (**)(char *, uint64_t))(v43 + 8);
        v68(v42, v45);
        v69 = v71;
        v44(v71, a1, v45);
        v68(v69, v45);
      }
      else
      {
        v46 = Array.count.getter(*(_QWORD *)v42);
        v47 = v42;
        v48 = v46;
        v49 = *(void (**)(char *, uint64_t))(v43 + 8);
        v49(v47, v45);
        if (v41 >= v48)
        {
          v70 = v71;
          v44(v71, a1, v45);
          if (!v41)
            Array.count.getter(*v70);
          v49((char *)v70, v45);
        }
        else
        {
          sub_E5FF64(v41, 1, v45, v50);
        }
      }
      swift_release();
      swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v79, v38, v15);
      v83 = *a1;
      sub_E55108(v34, v33);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v55 = v77;
      Binding.wrappedValue.getter(v77, v15);
      v56 = v80;
      v57 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v57);
      Collection<>.firstIndex(of:)(&v84, v55, v57, WitnessTable, *(_QWORD *)(v76 + 8));
      (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v55, v56);
      swift_bridgeObjectRelease();
      if (v85 != 1)
      {
        v59 = v84;
        v84 = v34;
        v85 = v33;
        v86 = v35;
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE58);
        Binding.wrappedValue.getter(&v83, v60);
        if (v59 == v83)
          sub_E5FF64(v59, 1, v81, v61);
      }
      swift_release();
      v62 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v82 + 8))(v79, v15, v62);
    }
  }
  else
  {
    v51 = v74;
    v52 = v75;
    v53 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v38, 1, v15) == 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(v51 + 8))(v25, TupleTypeMetadata2);
      return result;
    }
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v38, v15);
    v83 = *v37;
    swift_bridgeObjectRetain();
    v63 = v77;
    Binding.wrappedValue.getter(v77, v15);
    v64 = v80;
    v65 = type metadata accessor for Array(0);
    v66 = swift_getWitnessTable(&protocol conformance descriptor for [A], v65);
    Collection<>.firstIndex(of:)(&v84, v63, v65, v66, *(_QWORD *)(v76 + 8));
    (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v63, v64);
    v67 = swift_bridgeObjectRelease();
    if (v85 != 1)
      v67.n128_f64[0] = sub_E5FF64(v84, 1, v81, v67.n128_f64[0]);
    (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v52, v15, v67);
  }
  return sub_E550D8(*v25, v25[1]);
}

double sub_E60C5C(double result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((*(_BYTE *)(a3 + 8) & 1) == 0)
  {
    v10 = *(_QWORD *)a3;
    *(_QWORD *)&v14 = a5;
    *((_QWORD *)&v14 + 1) = a6;
    v15 = a7;
    v16 = a8;
    v17 = a9;
    v11 = type metadata accessor for CarouselView(0, (uint64_t)&v14);
    v14 = *(_OWORD *)(a4 + *(int *)(v11 + 92));
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
    State.wrappedValue.getter(&v13, v12);
    if (v10 != v13)
      return sub_E5FF64(v10, *(_BYTE *)(a4 + *(int *)(v11 + 68)), v11, result);
  }
  return result;
}

uint64_t sub_E60CF8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = a6;
  v29 = a8;
  v13 = type metadata accessor for Optional(0, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v28 - v15;
  v17 = *(_QWORD *)(a4 - 8);
  v18 = __chkstk_darwin();
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v16, a2, v13, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, a4);
  v34 = *a3;
  v22 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  Collection<>.firstIndex(of:)(&v30, v20, v22, WitnessTable, *(_QWORD *)(a7 + 8));
  if (BYTE8(v30) != 1)
  {
    v24 = v30;
    *(_QWORD *)&v30 = a4;
    *((_QWORD *)&v30 + 1) = a5;
    v31 = v28;
    v32 = a7;
    v33 = v29;
    v25 = type metadata accessor for CarouselView(0, (uint64_t)&v30);
    v30 = *(_OWORD *)((char *)a3 + *(int *)(v25 + 92));
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
    State.wrappedValue.getter(&v34, v26);
    if (v24 != v34)
      sub_E5FF64(v24, *((_BYTE *)a3 + *(int *)(v25 + 68)), v25, v27);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, a4);
}

uint64_t sub_E60ED8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t WitnessTable;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  void *v78;
  unint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v60 = a6;
  v59 = a4;
  v57 = a3;
  v69 = a7;
  *(_QWORD *)&v83 = a2;
  *((_QWORD *)&v83 + 1) = a3;
  v84 = a4;
  v85 = a5;
  v86 = a6;
  v61 = type metadata accessor for CarouselView(0, (uint64_t)&v83);
  v10 = *(_QWORD *)(v61 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v58 = (char *)&KeyPath - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v67 = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD08);
  v66 = v15;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v83 = v14;
  *((_QWORD *)&v83 + 1) = a2;
  v84 = v15;
  v85 = WitnessTable;
  v86 = a5;
  v62 = type metadata accessor for ForEach(0, &v83);
  v68 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin();
  v63 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&KeyPath - v17;
  v19 = a1;
  *(_QWORD *)&v81 = *a1;
  v18 = v81;
  v20 = type metadata accessor for Array(0);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  RandomAccessCollection<>.indices.getter(&v83, v20, v21, &protocol witness table for Int);
  v76 = v83;
  v80 = v18;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE38);
  v23 = sub_E6549C();
  v78 = &protocol witness table for Int;
  v79 = v23;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v22);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  zip<A, B>(_:_:)(&v81, &v76, &v80, v22, v20, v24, v25);
  v76 = v81;
  v77 = v82;
  *(_QWORD *)&v83 = v22;
  *((_QWORD *)&v83 + 1) = v20;
  v84 = v24;
  v85 = v25;
  v26 = type metadata accessor for Zip2Sequence(0, &v83);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v26);
  *(_QWORD *)&v81 = Array.init<A>(_:)(&v76, TupleTypeMetadata2, v26, v27);
  v28 = v57;
  v70 = a2;
  v71 = v57;
  v29 = v59;
  v72 = v59;
  v73 = a5;
  v30 = a5;
  v31 = v60;
  v74 = v60;
  KeyPath = swift_getKeyPath(&unk_10B0E10);
  v32 = v10;
  v33 = *(void (**)(char *, _QWORD *, uint64_t))(v10 + 16);
  v34 = v58;
  v35 = v61;
  v33(v58, v19, v61);
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = v32;
  v38 = (v36 + 56) & ~v36;
  v39 = (char *)swift_allocObject(&unk_13CA8B0, v38 + v11, v36 | 7);
  *((_QWORD *)v39 + 2) = a2;
  *((_QWORD *)v39 + 3) = v28;
  *((_QWORD *)v39 + 4) = v29;
  *((_QWORD *)v39 + 5) = v30;
  *((_QWORD *)v39 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v39[v38], v34, v35);
  v40 = (_QWORD *)swift_allocObject(&unk_13CA8D8, 72, 7);
  v40[2] = a2;
  v40[3] = v28;
  v40[4] = v29;
  v40[5] = v30;
  v40[6] = v31;
  v40[7] = sub_E654E4;
  v40[8] = v39;
  v41 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD10);
  v42 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD18);
  v44 = type metadata accessor for AutomaticHoverEffect(255, v43);
  v45 = sub_E62268();
  v46 = sub_4DD24(qword_150AD98, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  *(_QWORD *)&v83 = v42;
  *((_QWORD *)&v83 + 1) = v44;
  v84 = v45;
  v85 = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  *(_QWORD *)&v83 = v41;
  *((_QWORD *)&v83 + 1) = OpaqueTypeConformance2;
  v48 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v49 = v63;
  ForEach<>.init(_:id:content:)(&v81, KeyPath, sub_E654F0, v40, v67, v66, WitnessTable, v30, v48);
  v75 = v48;
  v50 = v62;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v62);
  v51 = v68;
  v52 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v53 = v64;
  v52(v64, v49, v50);
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v49, v50);
  v52(v69, v53, v50);
  return ((uint64_t (*)(char *, uint64_t))v54)(v53, v50);
}

uint64_t sub_E613B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  char *v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[4];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v74 = a8;
  v84 = a3;
  v85 = a4;
  v86 = a5;
  v87 = a6;
  v88 = a7;
  v78 = type metadata accessor for CarouselView(0, (uint64_t)&v84);
  v73 = *(_QWORD *)(v78 - 8);
  v67 = *(_QWORD *)(v73 + 64);
  v15 = __chkstk_darwin();
  v70 = (char *)&v55 - v16;
  v69 = type metadata accessor for AutomaticHoverEffect(0, v15);
  v59 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v58 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150AD30);
  __chkstk_darwin();
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AD18);
  __chkstk_darwin();
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AD10);
  v65 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin();
  v64 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AD08);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin();
  v60 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = a2;
  v76 = a4;
  v71 = a6;
  v72 = a7;
  sub_E61930(a2, a1, a3, a4, a5, a6, a7, (uint64_t)v19);
  v24 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v75 = a3;
  v77 = a5;
  v24(v83, a3, a5);
  sub_5C090((uint64_t)v83, (uint64_t)&v84, &qword_150AE48);
  if (v84)
  {
    v25 = v85;
    v26 = v86;
    v28 = v87;
    v27 = v88;
    v89 = v84;
    swift_retain();
    sub_E3B534(&v89);
    v90 = v25;
    sub_E3B534(&v90);
    swift_release();
    v91 = v28;
    sub_E3B534(&v91);
    v92 = v27;
    sub_E3B534(&v92);
  }
  else
  {
    v26 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  }
  v29 = v68;
  v79 = *(_OWORD *)(v68 + *(int *)(v78 + 92));
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
  State.wrappedValue.getter(&v82, v30);
  v57 = a1;
  v31 = v82 == a1;
  sub_5C238((uint64_t)v19, (uint64_t)v21, &qword_150AD30);
  v32 = v63;
  v33 = &v21[*(int *)(v63 + 36)];
  *(_QWORD *)v33 = v26;
  v33[8] = v31;
  v34 = sub_56024((uint64_t)v19, &qword_150AD30);
  v35 = v58;
  static CustomHoverEffect<>.automatic.getter(v34);
  v36 = sub_E62268();
  v56 = v36;
  v37 = sub_4DD24(qword_150AD98, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v38 = v64;
  v39 = v69;
  View.hoverEffect<A>(_:isEnabled:)(v35, 1, v32, v69, v36, v37);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v35, v39);
  sub_56024((uint64_t)v21, &qword_150AD18);
  v40 = v73;
  v41 = v70;
  v42 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v70, v29, v78);
  v43 = *(unsigned __int8 *)(v40 + 80);
  v44 = (v43 + 56) & ~v43;
  v45 = (v67 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  v46 = (char *)swift_allocObject(&unk_13CA900, v45 + 8, v43 | 7);
  v47 = v76;
  *((_QWORD *)v46 + 2) = v75;
  *((_QWORD *)v46 + 3) = v47;
  v48 = v71;
  *((_QWORD *)v46 + 4) = v77;
  *((_QWORD *)v46 + 5) = v48;
  *((_QWORD *)v46 + 6) = v72;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v46[v44], v41, v42);
  *(_QWORD *)&v46[v45] = v57;
  *(_QWORD *)&v79 = v32;
  *((_QWORD *)&v79 + 1) = v39;
  v80 = v56;
  v81 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v50 = v60;
  v51 = v66;
  View.onTapGesture(count:perform:)(1, sub_E654F8, v46, v66, OpaqueTypeConformance2, v52);
  v53 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v38, v51, v53);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v61 + 32))(v74, v50, v62);
}

uint64_t sub_E61930@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  char *v22;
  void (*v23)(_QWORD *__return_ptr, uint64_t, uint64_t, double);
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[5];
  uint64_t v92;

  v75 = a7;
  v74 = a6;
  *((_QWORD *)&v73 + 1) = a4;
  v77 = a2;
  v76 = a1;
  v80 = a8;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE60);
  __chkstk_darwin();
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE68);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin();
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AD50);
  __chkstk_darwin();
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin();
  v22 = (char *)&v66 - v21;
  v23 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, double))(a5 + 8);
  *(_QWORD *)&v73 = a3;
  v23(v85, a3, a5, v20);
  sub_5C090((uint64_t)v85, (uint64_t)v91, &qword_150AE48);
  v24 = v91[0];
  if (v91[0])
  {
    v25 = v91[1];
    v69 = v91[2];
    v67 = v91[3];
    v72 = v91[4];
    KeyPath = swift_getKeyPath(&unk_10B0E60);
    *(_QWORD *)&v86 = v24;
    *((_QWORD *)&v86 + 1) = KeyPath;
    v87 = v25;
    v68 = v25;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.large(_:), v12);
    swift_retain();
    swift_retain();
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BD00);
    v66 = v22;
    v28 = v27;
    v29 = sub_E62468();
    View.dynamicTypeSize(_:)(v15, v28, v29);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    swift_release();
    swift_release();
    v86 = v73;
    v87 = a5;
    v88 = v74;
    v89 = v75;
    v30 = type metadata accessor for CarouselView(0, (uint64_t)&v86);
    v86 = *(_OWORD *)(v76 + *(int *)(v30 + 92));
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
    State.wrappedValue.getter(&v81, v31);
    v32 = v67;
    if ((_QWORD)v81 == v77)
      v33 = v67;
    else
      v33 = v72;
    swift_retain();
    v34 = swift_getKeyPath(&unk_10B0E30);
    v35 = v70;
    v36 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v19, v17, v71);
    v37 = v78;
    v38 = (uint64_t *)&v19[*(int *)(v78 + 36)];
    *v38 = v34;
    v38[1] = v33;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
    v39 = (uint64_t)v19;
    v40 = (uint64_t)v66;
    sub_5C090(v39, (uint64_t)v66, &qword_150AD50);
    sub_5C238(v40, (uint64_t)v11, &qword_150AD50);
    swift_storeEnumTagMultiPayload(v11, v79, 0);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AD68);
    v42 = sub_E623BC();
    v43 = sub_E624EC();
    _ConditionalContent<>.init(storage:)(v11, v37, v41, v42, v43);
    swift_release();
    swift_release();
    v92 = v69;
    sub_E3B534(&v92);
    *(_QWORD *)&v81 = v32;
    sub_E3B534(&v81);
    *(_QWORD *)&v86 = v72;
    sub_E3B534(&v86);
    return sub_56024(v40, &qword_150AD50);
  }
  else
  {
    v45 = sub_E653E8();
    sub_E653E8();
    v47 = v46;
    v49 = static Alignment.center.getter(v48);
    _FrameLayout.init(width:height:alignment:)(&v86, *(_QWORD *)&v45, 0, v47, 0, v49, v50);
    v51 = v86;
    v52 = BYTE8(v86);
    v53 = v87;
    v54 = v88;
    v55 = v89;
    v56 = v90;
    static Color.primary.getter(v57);
    v81 = v73;
    v82 = a5;
    v83 = v74;
    v84 = v75;
    v58 = type metadata accessor for CarouselView(0, (uint64_t)&v81);
    v81 = *(_OWORD *)(v76 + *(int *)(v58 + 92));
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
    State.wrappedValue.getter(&v92, v59);
    v60 = 0.25;
    if (v92 == v77)
      v60 = 1.0;
    v61 = Color.opacity(_:)(v60);
    swift_release();
    v62 = swift_getKeyPath(&unk_10B0E30);
    *(_QWORD *)v11 = v51;
    v11[8] = v52;
    *((_QWORD *)v11 + 2) = v53;
    v11[24] = v54;
    *((_QWORD *)v11 + 4) = v55;
    *((_QWORD *)v11 + 5) = v56;
    *((_QWORD *)v11 + 6) = v62;
    *((_QWORD *)v11 + 7) = v61;
    swift_storeEnumTagMultiPayload(v11, v79, 1);
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AD68);
    v64 = sub_E623BC();
    v65 = sub_E624EC();
    return _ConditionalContent<>.init(storage:)(v11, v78, v63, v64, v65);
  }
}

uint64_t sub_E61EF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  BOOL v32;
  double v33;
  double v34;
  double *v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v44 = a6;
  v45 = a7;
  v46 = a2;
  v11 = type metadata accessor for ScrollViewProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  v48 = v12;
  __chkstk_darwin();
  v43[0] = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150ACC0);
  __chkstk_darwin();
  v15 = (_QWORD *)((char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v21 = (char *)v43 - v20;
  v43[1] = a3;
  *(_QWORD *)&v49 = a3;
  *((_QWORD *)&v49 + 1) = a4;
  v50 = a5;
  v51 = v44;
  v52 = v45;
  v22 = (int *)type metadata accessor for CarouselView(0, (uint64_t)&v49);
  sub_E60308(v46, (uint64_t)v22);
  v49 = *(_OWORD *)((char *)a1 + v22[23]);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE50);
  State.wrappedValue.getter(&v53, v23);
  v24 = v53;
  sub_E42BB0((uint64_t)v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for LayoutDirection.rightToLeft(_:), v16);
  LOBYTE(a4) = static LayoutDirection.== infix(_:_:)(v21, v19);
  v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26 = v19;
  v27 = v47;
  v25(v26, v16);
  v28 = v21;
  v29 = v48;
  v25(v28, v16);
  if ((a4 & 1) == 0)
    goto LABEL_4;
  result = Array.count.getter(*a1);
  v31 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  v32 = __OFSUB__(v31, v24);
  v24 = v31 - v24;
  if (v32)
  {
LABEL_8:
    __break(1u);
    return result;
  }
LABEL_4:
  v33 = *(double *)((char *)a1 + v22[25]);
  v34 = Int.seconds.getter(v24);
  v35 = (double *)((char *)a1 + v22[18]);
  v36 = *v35;
  v37 = v35[1];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE30);
  State.wrappedValue.getter(v15, v38);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v15, 1, v27))
    return sub_56024((uint64_t)v15, &qword_150ACC0);
  v39 = v43[0];
  (*(void (**)(_QWORD, _QWORD *, uint64_t))(v29 + 16))(v43[0], v15, v27);
  v40 = sub_56024((uint64_t)v15, &qword_150ACC0);
  v41 = static UnitPoint.leading.getter(v40);
  ScrollViewProxy.scrollTo(rect:anchor:)(*(_QWORD *)&v41, v42, 0, v33 * v34, 0.0, v36, v37);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v39, v27);
}

uint64_t sub_E621E8()
{
  return EnvironmentValues.layoutDirection.getter();
}

unint64_t sub_E6220C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150ACF0;
  if (!qword_150ACF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_150ACF0);
  }
  return result;
}

unint64_t sub_E62268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AD20;
  if (!qword_150AD20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD18);
    sub_E622EC();
    sub_5C150(&qword_150AD88, &qword_150AD90, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD20);
  }
  return result;
}

unint64_t sub_E622EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AD28;
  if (!qword_150AD28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD30);
    sub_E62350();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD28);
  }
  return result;
}

unint64_t sub_E62350()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AD38;
  if (!qword_150AD38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD40);
    sub_E623BC();
    sub_E624EC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD38);
  }
  return result;
}

unint64_t sub_E623BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150AD48;
  if (!qword_150AD48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD50);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BD00);
    v2[1] = sub_E62468();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD48);
  }
  return result;
}

unint64_t sub_E62468()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AD58;
  if (!qword_150AD58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BD00);
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD58);
  }
  return result;
}

unint64_t sub_E624EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AD60;
  if (!qword_150AD60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD68);
    sub_E62570();
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD60);
  }
  return result;
}

unint64_t sub_E62570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150AD70;
  if (!qword_150AD70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD78);
    sub_E625DC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150AD70);
  }
  return result;
}

unint64_t sub_E625DC()
{
  unint64_t result;

  result = qword_150AD80;
  if (!qword_150AD80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_150AD80);
  }
  return result;
}

uint64_t sub_E62620()
{
  return sub_2CCD30((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_E5CBA0);
}

uint64_t sub_E6262C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 32);
  v5[0] = *(_OWORD *)(a2 + 16);
  v5[1] = v3;
  v6 = v2;
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of CarouselView.body>>, 1);
}

ValueMetadata *type metadata accessor for PageIndicator()
{
  return &type metadata for PageIndicator;
}

void sub_E6267C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[13];

  v9[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v9[1] = &unk_10B0D38;
  v2 = type metadata accessor for Binding(255, *(_QWORD *)(a1 + 16));
  v3 = type metadata accessor for Optional(319, v2);
  if (v4 <= 0x3F)
  {
    v9[2] = *(_QWORD *)(v3 - 8) + 64;
    v9[3] = &unk_10B0D50;
    v9[4] = &unk_10B0D68;
    v9[5] = (char *)&value witness table for () + 64;
    v9[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[8] = &unk_10B0D80;
    v9[9] = &unk_10B0D80;
    sub_E64BAC(319);
    if (v6 <= 0x3F)
    {
      v9[10] = *(_QWORD *)(v5 - 8) + 64;
      v9[11] = (char *)&value witness table for Builtin.Int64 + 64;
      sub_E64C04(319);
      if (v8 <= 0x3F)
      {
        v9[12] = *(_QWORD *)(v7 - 8) + 64;
        swift_initStructMetadata(a1, 0, 13, v9, a1 + 56);
      }
    }
  }
}

uint64_t *sub_E62780(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  size_t v77;
  unint64_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v84 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v84 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v85 = *(_DWORD *)(v5 + 84);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(_DWORD *)(v10 + 84);
  v13 = v12 & 0xF8;
  v86 = v10;
  v88 = v9;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18 & 0xF8;
  v20 = v19 | 7;
  if (*(_QWORD *)(v17 + 64) <= 8uLL)
    v21 = 8;
  else
    v21 = *(_QWORD *)(v17 + 64);
  v22 = v13 | v20 | v6;
  v23 = (v12 | v18 | v6) & 0x100000;
  v24 = *a2;
  *a1 = *a2;
  v25 = v22 == 7 && v23 == 0;
  if (!v25
    || (v26 = v6 | 7,
        v27 = ((v6 + 16) & ~(unint64_t)v6) + v8,
        v21
      + ((v19
        + 15
        + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8
        + ((v13
          + 23
          + ((((((((((((v27 + ((v6 + 32) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13 & 0xFFFFFFFFFFFFFFF8)) & ~v20)
      + 1 > 0x18))
  {
    v34 = v24 + ((v22 + 16) & ~v22);
    swift_retain(v24);
    return (uint64_t *)v34;
  }
  v74 = v13 + 23;
  v75 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  v76 = v19 | 7;
  v77 = v15 + 7;
  v78 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v79 = v19 + 15;
  v80 = v15;
  v81 = v17;
  v82 = v21;
  v83 = a1;
  v73 = v16;
  v28 = ~v26;
  v29 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)(v30 + 8);
  swift_bridgeObjectRetain();
  if (v31 < 0xFFFFFFFF)
  {
    v35 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    *(_OWORD *)v29 = v35;
  }
  else
  {
    v32 = *(_QWORD *)v30;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v33 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 8) = v33;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    swift_retain(v32);
    swift_retain(v33);
  }
  v36 = v86;
  v37 = ~v7;
  v38 = (_QWORD *)((v29 + v26 + 24) & v28);
  v39 = (uint64_t *)((v30 + v26 + 24) & v28);
  v40 = (uint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v85 & 0x80000000) == 0)
  {
    v41 = *v40;
    if ((unint64_t)*v40 >= 0xFFFFFFFF)
      LODWORD(v41) = -1;
    if ((_DWORD)v41 != -1)
      goto LABEL_21;
LABEL_23:
    v42 = *v39;
    *v38 = *v39;
    v43 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    v44 = *v40;
    *v43 = *v40;
    v87 = ((unint64_t)v43 + v7 + 8) & v37;
    v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain(v42);
    swift_retain(v44);
    v45(v87, ((unint64_t)v40 + v7 + 8) & v37, v84);
    goto LABEL_24;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)v40 + v7 + 8) & v37))
    goto LABEL_23;
LABEL_21:
  memcpy(v38, v39, v27);
LABEL_24:
  *((_BYTE *)v38 + v27) = *((_BYTE *)v39 + v27);
  v46 = ((unint64_t)v38 + v27) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)v39 + v27) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
  v48 = (_QWORD *)((v46 + 31) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)((v47 + 31) & 0xFFFFFFFFFFFFFFF8);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFF8);
  v52 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFF8);
  *v52 = *v51;
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
  *v54 = *v53;
  v55 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v56 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v57 = *v56;
  swift_retain(v50);
  if (v57 < 0xFFFFFFFF)
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
  }
  else
  {
    v58 = v56[1];
    *(_QWORD *)v55 = v57;
    *(_QWORD *)(v55 + 8) = v58;
    swift_retain(v58);
  }
  v59 = ~v76;
  v60 = (_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v61[1];
  v60[1] = v62;
  v63 = (char *)(((unint64_t)v60 + v74) & v75);
  v64 = (char *)(((unint64_t)v61 + v74) & v75);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_retain(v62);
  if (v65(v64, 1, v88))
  {
    memcpy(v63, v64, v80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v63, v64, v88);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v63, 0, 1, v88);
  }
  v66 = *(_QWORD *)((unint64_t)&v64[v77] & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)((unint64_t)&v63[v77] & 0xFFFFFFFFFFFFF8) = v66;
  *(_QWORD *)&v63[v78] = *(_QWORD *)&v64[v78];
  v67 = (_QWORD *)((unint64_t)&v63[v78 + v79] & v59);
  v68 = (uint64_t *)((unint64_t)&v64[v78 + v79] & v59);
  v69 = *((unsigned __int8 *)v68 + v82);
  swift_retain(v66);
  if (v69 >= 2)
  {
    if (v82 <= 3)
      v70 = v82;
    else
      v70 = 4;
    __asm { BR              X11 }
  }
  if (v69 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v81 + 16))(v67, v68, v73);
    *((_BYTE *)v67 + v82) = 1;
  }
  else
  {
    v71 = *v68;
    *v67 = *v68;
    *((_BYTE *)v67 + v82) = 0;
    swift_retain(v71);
  }
  return v83;
}

double sub_E62C88(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  __n128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  double result;

  v3 = (unint64_t)a1 + 15;
  swift_bridgeObjectRelease(*a1);
  v5 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
  {
    swift_release(*v5);
    v4 = swift_release(v5[1]);
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(((unint64_t)v5 + (v8 | 7) + 24) & ~(v8 | 7));
  v10 = ~v8;
  v11 = (v8 + 16) & ~v8;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v7 + 84) & 0x80000000) != 0)
  {
    v15 = v11 + v12;
    if (!(*(unsigned int (**)(unint64_t, __n128))(v7 + 48))(((unint64_t)v13 + v8 + 8) & v10, v4))
    {
LABEL_7:
      swift_release(*v9);
      v16 = swift_release(*v13);
      (*(void (**)(unint64_t, uint64_t, __n128))(v7 + 8))(((unint64_t)v13 + v8 + 8) & v10, v6, v16);
    }
  }
  else
  {
    v14 = *v13;
    if (*v13 >= 0xFFFFFFFFuLL)
      LODWORD(v14) = -1;
    v15 = v11 + v12;
    if ((_DWORD)v14 == -1)
      goto LABEL_7;
  }
  v17 = ((((unint64_t)v9 + v15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v17 + 8));
  v18 = (_QWORD *)((((((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 >= 0xFFFFFFFFuLL)
    swift_release(v18[1]);
  v19 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v19 + 8));
  v20 = type metadata accessor for ScrollViewProxy(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v23 = (v19 + v22 + 16) & ~v22;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  if (*(_DWORD *)(v21 + 84))
    v24 = *(_QWORD *)(v21 + 64);
  else
    v24 = *(_QWORD *)(v21 + 64) + 1;
  swift_release(*(_QWORD *)(((v23 | 7) + v24) & 0xFFFFFFFFFFFFF8));
  v25 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  v27 = (_QWORD *)((v23 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8) + v26 + 16) & ~v26);
  v28 = *(_QWORD *)(v25 + 64);
  if (v28 <= 8)
    v28 = 8;
  v29 = *((unsigned __int8 *)v27 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X14 }
  }
  if (v29 == 1)
    (*(void (**)(void))(v25 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v27).n128_u64[0];
  return result;
}

_QWORD *sub_E62F38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int (*v53)(unint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v6 + 8);
  swift_bridgeObjectRetain();
  if (v7 < 0xFFFFFFFF)
  {
    v10 = *(_OWORD *)v6;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    *(_OWORD *)v5 = v10;
  }
  else
  {
    v8 = *(_QWORD *)v6;
    *(_QWORD *)v5 = *(_QWORD *)v6;
    v9 = *(_QWORD *)(v6 + 8);
    *(_QWORD *)(v5 + 8) = v9;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    swift_retain(v8);
    swift_retain(v9);
  }
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (_QWORD *)((v5 + (v13 | 7) + 24) & ~(v13 | 7));
  v15 = (uint64_t *)((v6 + (v13 | 7) + 24) & ~(v13 | 7));
  v16 = ~v13;
  v17 = (v13 + 16) & ~v13;
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v12 + 84) & 0x80000000) != 0)
  {
    v21 = v17 + v18;
    if ((*(unsigned int (**)(unint64_t))(v12 + 48))(((unint64_t)v19 + v13 + 8) & v16))
    {
LABEL_8:
      memcpy(v14, v15, v21);
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    v21 = v17 + v18;
    if ((_DWORD)v20 != -1)
      goto LABEL_8;
  }
  v22 = *v15;
  *v14 = *v15;
  v23 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v19;
  *v23 = *v19;
  v25 = v13 + 8;
  v26 = ((unint64_t)v23 + v13 + 8) & v16;
  v27 = ((unint64_t)v19 + v25) & v16;
  v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
  swift_retain(v22);
  swift_retain(v24);
  v28(v26, v27, v11);
LABEL_11:
  *((_BYTE *)v14 + v21) = *((_BYTE *)v15 + v21);
  v29 = ((unint64_t)v14 + v21) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v15 + v21) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v29 + 8) = *(_OWORD *)(v30 + 8);
  v31 = (_QWORD *)((v29 + 31) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)((v30 + 31) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFF8);
  *v35 = *v34;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  *v37 = *v36;
  v38 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (unint64_t *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = *v39;
  swift_retain(v33);
  if (v40 < 0xFFFFFFFF)
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  else
  {
    v41 = v39[1];
    *(_QWORD *)v38 = v40;
    *(_QWORD *)(v38 + 8) = v41;
    swift_retain(v41);
  }
  v42 = (_QWORD *)((v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = v43[1];
  v42[1] = v44;
  v45 = type metadata accessor for ScrollViewProxy(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_DWORD *)(v46 + 80) & 0xF8;
  v48 = v47 + 23;
  v49 = (unint64_t)v42 + v47 + 23;
  v50 = ~v47 & 0xFFFFFFFFFFFFFFF8;
  v51 = v49 & v50;
  v52 = ((unint64_t)v43 + v48) & v50;
  v53 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v46 + 48);
  swift_retain(v44);
  if (v53(v52, 1, v45))
  {
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
    if (v54)
      v56 = *(_QWORD *)(v46 + 64);
    else
      v56 = v55 + 1;
    memcpy((void *)v51, (const void *)v52, v56);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v46 + 16))(v51, v52, v45);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v45);
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
  }
  if (v54)
    v57 = v55;
  else
    v57 = v55 + 1;
  v58 = (uint64_t *)(((v52 | 7) + v57) & 0xFFFFFFFFFFFFF8);
  v59 = *v58;
  *(_QWORD *)(((v51 | 7) + v57) & 0xFFFFFFFFFFFFF8) = *v58;
  v60 = ((v57 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v61 = (_QWORD *)(v60 + v51);
  v62 = (char *)(v60 + v52);
  *v61 = *(_QWORD *)(v60 + v52);
  v63 = type metadata accessor for LayoutDirection(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xF8;
  v66 = v65 + 15;
  v67 = (unint64_t)v61 + v65 + 15;
  v68 = ~v65 & 0xFFFFFFFFFFFFFFF8;
  v69 = (_QWORD *)(v67 & v68);
  v70 = (uint64_t *)((unint64_t)&v62[v66] & v68);
  if (*(_QWORD *)(v64 + 64) <= 8uLL)
    v71 = 8;
  else
    v71 = *(_QWORD *)(v64 + 64);
  v72 = *((unsigned __int8 *)v70 + v71);
  swift_retain(v59);
  if (v72 >= 2)
  {
    if (v71 <= 3)
      v73 = v71;
    else
      v73 = 4;
    __asm { BR              X11 }
  }
  if (v72 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v64 + 16))(v69, v70, v63);
    v74 = 1;
  }
  else
  {
    v75 = *v70;
    *v69 = *v70;
    swift_retain(v75);
    v74 = 0;
  }
  *((_BYTE *)v69 + v71) = v74;
  return a1;
}

_QWORD *sub_E63354(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t (*v72)(unint64_t, uint64_t, uint64_t);
  int v73;
  size_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  __n128 v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  int v101;
  size_t v102;
  _QWORD *v103;
  uint64_t v104;

  v4 = a1;
  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v7[1] < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      v15 = *v8;
      *v7 = *v8;
      v16 = v8[1];
      v7[1] = v16;
      v7[2] = v8[2];
      swift_retain(v15);
      swift_retain(v16);
      goto LABEL_8;
    }
  }
  else
  {
    v10 = *v7;
    if (v9 >= 0xFFFFFFFF)
    {
      v11 = *v8;
      *v7 = *v8;
      swift_retain(v11);
      swift_release(v10);
      v12 = v8[1];
      v13 = v7[1];
      v7[1] = v12;
      swift_retain(v12);
      v14 = swift_release(v13);
      v7[2] = v8[2];
      goto LABEL_8;
    }
    swift_release(*v7);
    swift_release(v7[1]);
  }
  v14 = *(__n128 *)v8;
  v7[2] = v8[2];
  *(__n128 *)v7 = v14;
LABEL_8:
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (_QWORD *)(((unint64_t)v7 + (v19 | 7) + 24) & ~(v19 | 7));
  v21 = (uint64_t *)(((unint64_t)v8 + (v19 | 7) + 24) & ~(v19 | 7));
  v22 = *(unsigned int *)(v18 + 84);
  v23 = *(_QWORD *)(v18 + 64);
  v24 = ((v19 + 16) & ~v19) + v23;
  v25 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v104 = ~v19;
  if ((v22 & 0x80000000) == 0)
  {
    v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = *v26;
    if ((unint64_t)*v26 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    if (*v25 > 0xFFFFFFFEuLL)
      goto LABEL_12;
LABEL_15:
    if (v28)
      goto LABEL_16;
    v32 = *v21;
    *v20 = *v21;
    v33 = *v26;
    *v25 = *v26;
    v34 = ((unint64_t)v25 + v19 + 8) & v104;
    v35 = ((unint64_t)v26 + v19 + 8) & v104;
    v36 = v24;
    v37 = v17;
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    swift_retain(v32);
    swift_retain(v33);
    v39 = v37;
    v24 = v36;
    v38(v34, v35, v39);
    goto LABEL_19;
  }
  v102 = ((v19 + 16) & ~v19) + v23;
  v103 = v4;
  v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v101 = v31(((unint64_t)v25 + v19 + 8) & ~v19, v22, v17, v14);
  v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = v102;
  v28 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v31)(((unint64_t)v26 + v19 + 8) & ~v19, v22, v17);
  v4 = v103;
  if (v101)
    goto LABEL_15;
LABEL_12:
  v29 = *v20;
  if (v28)
  {
    swift_release(*v20);
    v30 = swift_release(*v25);
    (*(void (**)(unint64_t, uint64_t, __n128))(v18 + 8))(((unint64_t)v25 + v19 + 8) & v104, v17, v30);
LABEL_16:
    memcpy(v20, v21, v24);
    goto LABEL_19;
  }
  v40 = *v21;
  *v20 = *v21;
  swift_retain(v40);
  swift_release(v29);
  v41 = *v26;
  v42 = *v25;
  *v25 = *v26;
  swift_retain(v41);
  v43 = swift_release(v42);
  (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v18 + 24))(((unint64_t)v25 + v19 + 8) & v104, ((unint64_t)v26 + v19 + 8) & v104, v17, v43);
LABEL_19:
  *((_BYTE *)v20 + v24) = *((_BYTE *)v21 + v24);
  v44 = ((unint64_t)v20 + v24) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v21 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
  v46 = (_QWORD *)((v44 + 31) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)((v45 + 31) & 0xFFFFFFFFFFFFFFF8);
  v48 = v47[1];
  v49 = v46[1];
  *v46 = *v47;
  v46[1] = v48;
  swift_retain(v48);
  swift_release(v49);
  v50 = (_QWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  v55 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v56 = *v55;
  if (*v54 < 0xFFFFFFFFuLL)
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v59 = v55[1];
      *v54 = v56;
      v54[1] = v59;
      swift_retain(v59);
      goto LABEL_26;
    }
  }
  else
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v57 = v55[1];
      v58 = v54[1];
      *v54 = v56;
      v54[1] = v57;
      swift_retain(v57);
      swift_release(v58);
      goto LABEL_26;
    }
    swift_release(v54[1]);
  }
  *(_OWORD *)v54 = *(_OWORD *)v55;
LABEL_26:
  v60 = (_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v60[1];
  v63 = v61[1];
  v60[1] = v63;
  swift_retain(v63);
  swift_release(v62);
  v64 = type metadata accessor for ScrollViewProxy(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(_DWORD *)(v65 + 80) & 0xF8;
  v67 = v66 + 23;
  v68 = (unint64_t)v60 + v66 + 23;
  v69 = ~v66 & 0xFFFFFFFFFFFFFFF8;
  v70 = v68 & v69;
  v71 = ((unint64_t)v61 + v67) & v69;
  v72 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v65 + 48);
  LODWORD(v60) = v72(v68 & v69, 1, v64);
  v73 = v72(v71, 1, v64);
  if ((_DWORD)v60)
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 16))(v70, v71, v64);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v70, 0, 1, v64);
      goto LABEL_35;
    }
  }
  else
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 24))(v70, v71, v64);
      goto LABEL_35;
    }
    (*(void (**)(unint64_t, uint64_t))(v65 + 8))(v70, v64);
  }
  if (*(_DWORD *)(v65 + 84))
    v74 = *(_QWORD *)(v65 + 64);
  else
    v74 = *(_QWORD *)(v65 + 64) + 1;
  memcpy((void *)v70, (const void *)v71, v74);
LABEL_35:
  if (*(_DWORD *)(v65 + 84))
    v75 = *(_QWORD *)(v65 + 64);
  else
    v75 = *(_QWORD *)(v65 + 64) + 1;
  v76 = (uint64_t *)(((v70 | 7) + v75) & 0xFFFFFFFFFFFFFFF8);
  v77 = (uint64_t *)(((v71 | 7) + v75) & 0xFFFFFFFFFFFFF8);
  v78 = *v77;
  v79 = *v76;
  *v76 = *v77;
  swift_retain(v78);
  swift_release(v79);
  v80 = ((v75 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v81 = (char *)(v80 + v70);
  v82 = (char *)(v80 + v71);
  *(_QWORD *)(v80 + v70) = *(_QWORD *)(v80 + v71);
  v83 = type metadata accessor for LayoutDirection(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(_DWORD *)(v84 + 80) & 0xF8;
  v86 = v85 + 15;
  v87 = &v81[v85 + 15];
  v88 = ~v85 & 0xFFFFFFFFFFFFFFF8;
  v89 = (_QWORD *)((unint64_t)v87 & v88);
  v90 = &v82[v86];
  v91 = (uint64_t *)((unint64_t)v90 & v88);
  if (((unint64_t)v87 & v88) != ((unint64_t)v90 & v88))
  {
    v92 = v83;
    if (*(_QWORD *)(v84 + 64) <= 8uLL)
      v93 = 8;
    else
      v93 = *(_QWORD *)(v84 + 64);
    v94 = *((unsigned __int8 *)v89 + v93);
    if (v94 >= 2)
    {
      if (v93 <= 3)
        v95 = v93;
      else
        v95 = 4;
      __asm { BR              X12 }
    }
    if (v94 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v84 + 8))(v89, v83);
    else
      v96 = swift_release(*v89);
    v97 = *((unsigned __int8 *)v91 + v93);
    if (v97 >= 2)
    {
      if (v93 <= 3)
        v98 = v93;
      else
        v98 = 4;
      __asm { BR              X12 }
    }
    if (v97 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v84 + 16))(v89, v91, v92, v96);
      *((_BYTE *)v89 + v93) = 1;
    }
    else
    {
      v99 = *v91;
      *v89 = *v91;
      *((_BYTE *)v89 + v93) = 0;
      swift_retain(v99);
    }
  }
  return v4;
}

_QWORD *sub_E63A2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  size_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  size_t v41;
  size_t v42;
  size_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v5 + 16);
  *(_OWORD *)v4 = v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (_QWORD *)((v4 + (v9 | 7) + 24) & ~(v9 | 7));
  v11 = (_QWORD *)((v5 + (v9 | 7) + 24) & ~(v9 | 7));
  v12 = ~v9;
  v13 = (v9 + 16) & ~v9;
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) != 0)
  {
    v17 = v13 + v14;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & v12))
    {
LABEL_5:
      memcpy(v10, v11, v17);
      goto LABEL_8;
    }
  }
  else
  {
    v16 = *v15;
    if ((unint64_t)*v15 >= 0xFFFFFFFF)
      LODWORD(v16) = -1;
    v17 = v13 + v14;
    if ((_DWORD)v16 != -1)
      goto LABEL_5;
  }
  *v10 = *v11;
  v18 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v18 + v9 + 8) & v12, ((unint64_t)v15 + v9 + 8) & v12, v7);
LABEL_8:
  *((_BYTE *)v10 + v17) = *((_BYTE *)v11 + v17);
  v19 = ((unint64_t)v10 + v17) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  v21 = (_OWORD *)((v19 + 31) & 0xFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v20 + 31) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v28 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  else
  {
    v29 = *(_QWORD *)(v28 + 8);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
  }
  v30 = (_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = type metadata accessor for ScrollViewProxy(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  v35 = v34 + 23;
  v36 = (unint64_t)v30 + v34 + 23;
  v37 = ~v34 & 0xFFFFFFFFFFFFFFF8;
  v38 = v36 & v37;
  v39 = ((unint64_t)v31 + v35) & v37;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v32))
  {
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
    if (v40)
      v42 = v41;
    else
      v42 = v41 + 1;
    memcpy((void *)v38, (const void *)v39, v42);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 32))(v38, v39, v32);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v32);
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
  }
  if (v40)
    v43 = v41;
  else
    v43 = v41 + 1;
  *(_QWORD *)(((v38 | 7) + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v39 | 7) + v43) & 0xFFFFFFFFFFFFF8);
  v44 = ((v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v45 = (_QWORD *)(v44 + v38);
  v46 = (_QWORD *)(v44 + v39);
  *v45 = *v46;
  v47 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v48 = *(_DWORD *)(v47 + 80) & 0xF8;
  v49 = v48 + 15;
  v50 = (unint64_t)v45 + v48 + 15;
  v51 = ~v48 & 0xFFFFFFFFFFFFFFF8;
  v52 = (_QWORD *)(v50 & v51);
  v53 = (_QWORD *)(((unint64_t)v46 + v49) & v51);
  if (*(_QWORD *)(v47 + 64) <= 8uLL)
    v54 = 8;
  else
    v54 = *(_QWORD *)(v47 + 64);
  v55 = *((unsigned __int8 *)v53 + v54);
  if (v55 >= 2)
  {
    if (v54 <= 3)
      v56 = v54;
    else
      v56 = 4;
    __asm { BR              X13 }
  }
  if (v55 == 1)
  {
    (*(void (**)(_QWORD *))(v47 + 32))(v52);
    v57 = 1;
  }
  else
  {
    v57 = 0;
    *v52 = *v53;
  }
  *((_BYTE *)v52 + v54) = v57;
  return a1;
}

_QWORD *sub_E63DC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t (*v57)(unint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  size_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  _QWORD *v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  __n128 v80;
  unsigned int v81;
  uint64_t v82;
  char v83;
  int v85;
  size_t v86;
  uint64_t v87;
  _QWORD *v88;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  v88 = a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = (__n128 *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (unint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if (v7->n128_u64[1] >= 0xFFFFFFFF)
  {
    v9 = v7->n128_u64[0];
    if (v8[1] >= 0xFFFFFFFF)
    {
      v7->n128_u64[0] = *v8;
      swift_release(v9);
      v10 = v7->n128_i64[1];
      v7->n128_u64[1] = v8[1];
      v11 = swift_release(v10);
      v7[1].n128_u64[0] = v8[2];
      goto LABEL_6;
    }
    swift_release(v9);
    swift_release(v7->n128_u64[1]);
  }
  v11 = *(__n128 *)v8;
  v7[1].n128_u64[0] = v8[2];
  *v7 = v11;
LABEL_6:
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (_QWORD *)(((unint64_t)&v7[1].n128_u64[1] + (v14 | 7)) & ~(v14 | 7));
  v16 = (_QWORD *)(((unint64_t)v8 + (v14 | 7) + 24) & ~(v14 | 7));
  v17 = *(unsigned int *)(v13 + 84);
  v18 = ~v14;
  v19 = *(_QWORD *)(v13 + 64);
  v20 = ((v14 + 16) & ~v14) + v19;
  v21 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v87 = ~v14;
  if ((v17 & 0x80000000) == 0)
  {
    v22 = v12;
    v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    if ((unint64_t)*v23 >= 0xFFFFFFFF)
      LODWORD(v24) = -1;
    v25 = v24 + 1;
    if (*v21 > 0xFFFFFFFEuLL)
      goto LABEL_10;
LABEL_13:
    if (v25)
      goto LABEL_14;
    *v15 = *v16;
    *v21 = *v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
    goto LABEL_17;
  }
  v86 = ((v14 + 16) & ~v14) + v19;
  v28 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v13 + 48);
  v85 = v28(((unint64_t)v21 + v14 + 8) & v18, v17, v12, v11);
  v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = v17;
  v22 = v12;
  v25 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v28)(((unint64_t)v23 + v14 + 8) & v18, v29, v12);
  v20 = v86;
  if (v85)
    goto LABEL_13;
LABEL_10:
  v26 = *v15;
  if (v25)
  {
    swift_release(*v15);
    v27 = swift_release(*v21);
    (*(void (**)(unint64_t, uint64_t, __n128))(v13 + 8))(((unint64_t)v21 + v14 + 8) & v87, v22, v27);
LABEL_14:
    memcpy(v15, v16, v20);
    goto LABEL_17;
  }
  *v15 = *v16;
  swift_release(v26);
  v30 = *v21;
  *v21 = *v23;
  swift_release(v30);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
LABEL_17:
  *((_BYTE *)v15 + v20) = *((_BYTE *)v16 + v20);
  v31 = ((unint64_t)v15 + v20) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v16 + v20) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  v33 = (v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v32 + 31) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_OWORD *)v34;
  v34 += 23;
  *(_OWORD *)v33 = v36;
  swift_release(v35);
  v37 = (_QWORD *)((v33 + 23) & 0xFFFFFFFFFFFFF8);
  *v37 = *(_QWORD *)(v34 & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((v34 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (unint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  if (*v40 < 0xFFFFFFFFuLL)
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v45 = v41[1];
      *v40 = v42;
      v40[1] = v45;
      goto LABEL_24;
    }
  }
  else
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v43 = v41[1];
      v44 = v40[1];
      *v40 = v42;
      v40[1] = v43;
      swift_release(v44);
      goto LABEL_24;
    }
    swift_release(v40[1]);
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_24:
  v46 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = v46[1];
  v46[1] = v47[1];
  swift_release(v48);
  v49 = type metadata accessor for ScrollViewProxy(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(_DWORD *)(v50 + 80) & 0xF8;
  v52 = v51 + 23;
  v53 = (unint64_t)v46 + v51 + 23;
  v54 = ~v51 & 0xFFFFFFFFFFFFFFF8;
  v55 = v53 & v54;
  v56 = ((unint64_t)v47 + v52) & v54;
  v57 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v50 + 48);
  v58 = v57(v53 & v54, 1, v49);
  v59 = v57(v56, 1, v49);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 32))(v55, v56, v49);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v49);
      goto LABEL_33;
    }
  }
  else
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 40))(v55, v56, v49);
      goto LABEL_33;
    }
    (*(void (**)(unint64_t, uint64_t))(v50 + 8))(v55, v49);
  }
  if (*(_DWORD *)(v50 + 84))
    v60 = *(_QWORD *)(v50 + 64);
  else
    v60 = *(_QWORD *)(v50 + 64) + 1;
  memcpy((void *)v55, (const void *)v56, v60);
LABEL_33:
  if (*(_DWORD *)(v50 + 84))
    v61 = *(_QWORD *)(v50 + 64);
  else
    v61 = *(_QWORD *)(v50 + 64) + 1;
  v62 = (uint64_t *)(((v55 | 7) + v61) & 0xFFFFFFFFFFFFFFF8);
  v63 = *v62;
  *v62 = *(_QWORD *)(((v56 | 7) + v61) & 0xFFFFFFFFFFFFF8);
  swift_release(v63);
  v64 = ((v61 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v65 = (char *)(v64 + v55);
  v66 = (char *)(v64 + v56);
  *(_QWORD *)(v64 + v55) = *(_QWORD *)(v64 + v56);
  v67 = type metadata accessor for LayoutDirection(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(_DWORD *)(v68 + 80) & 0xF8;
  v70 = v69 + 15;
  v71 = &v65[v69 + 15];
  v72 = ~v69 & 0xFFFFFFFFFFFFFFF8;
  v73 = (_QWORD *)((unint64_t)v71 & v72);
  v74 = &v66[v70];
  v75 = (_QWORD *)((unint64_t)v74 & v72);
  if (((unint64_t)v71 & v72) != ((unint64_t)v74 & v72))
  {
    v76 = v67;
    if (*(_QWORD *)(v68 + 64) <= 8uLL)
      v77 = 8;
    else
      v77 = *(_QWORD *)(v68 + 64);
    v78 = *((unsigned __int8 *)v73 + v77);
    if (v78 >= 2)
    {
      if (v77 <= 3)
        v79 = v77;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v68 + 8))(v73, v67);
    else
      v80 = swift_release(*v73);
    v81 = *((unsigned __int8 *)v75 + v77);
    if (v81 >= 2)
    {
      if (v77 <= 3)
        v82 = v77;
      else
        v82 = 4;
      __asm { BR              X12 }
    }
    if (v81 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v68 + 32))(v73, v75, v76, v80);
      v83 = 1;
    }
    else
    {
      v83 = 0;
      *v73 = *v75;
    }
    *((_BYTE *)v73 + v77) = v83;
  }
  return v88;
}

uint64_t sub_E643E0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;

  v37 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = v7 - 1;
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  if (v8 <= v12)
    v13 = v12;
  else
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  if ((_DWORD)v11)
    v17 = 7;
  else
    v17 = 8;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = v18 | 7;
  v20 = ((v18 + 16) & ~v18) + *(_QWORD *)(v5 + 64);
  v21 = *(_DWORD *)(v10 + 80) & 0xF8;
  v22 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 + 23;
  if (a2 <= v14)
    goto LABEL_40;
  v24 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v25 = v16
      + ((((v17 + *(_QWORD *)(v10 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + v24
        + ((v23
          + ((((((((((((v20 + ((v18 + 32) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v22)
        + 16) & ~v24)
      + 1;
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v29 = ((a2 - v14 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v29))
    {
      v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 > 0xFF)
    {
      v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(_WORD *)((char *)a1 + v25))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 < 2)
    {
LABEL_40:
      if ((v13 & 0x80000000) != 0)
      {
        v33 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v19 + 24) & ~v19;
        if (v8 == v14)
        {
          v34 = (uint64_t *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v6 & 0x80000000) != 0)
          {
            v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)v34 + v18 + 8) & ~v18, v6, v37);
          }
          else
          {
            v35 = *v34;
            if ((unint64_t)*v34 >= 0xFFFFFFFF)
              LODWORD(v35) = -1;
            v36 = v35 + 1;
          }
        }
        else
        {
          v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v23+ ((((((((((((v33 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v22, v11, v9);
        }
        if (v36 >= 2)
          return v36 - 1;
        else
          return 0;
      }
      else
      {
        v32 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v32) = -1;
        return (v32 + 1);
      }
    }
  }
  v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((_BYTE *)a1 + v25))
    goto LABEL_40;
LABEL_31:
  v30 = (v27 - 1) << v26;
  if (v25 > 3)
    v30 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v31 = v25;
    else
      v31 = 4;
    __asm { BR              X11 }
  }
  return v14 + v30 + 1;
}

void sub_E64700(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  unsigned int v22;
  int v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = 0;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v19;
  v20 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v18 = *(_DWORD *)(v8 + 80) & 0xF8;
  v17 = *(unsigned __int8 *)(v5 + 80);
  v21 = v16
      + ((((v19 + 7) & 0xFFFFFFFFFFFFFFF8)
        + v20
        + ((v18
          + 23
          + ((((((((((((((v17 + 16) & ~v17) + *(_QWORD *)(v5 + 64) + ((v17 + 32) & ~(v17 | 7))) & 0xFFFFFFFFFFFFFFF8)
                    + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18 & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v20)
      + 1;
  if (a3 > v13)
  {
    if (v21 <= 3)
    {
      v22 = ((a3 - v13 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v22))
      {
        v14 = &dword_4;
      }
      else if (v22 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v22 > 1;
      }
    }
    else
    {
      v14 = &dword_0 + 1;
    }
  }
  if (v13 < a2)
  {
    v23 = ~v13 + a2;
    if (v21 < 4)
    {
      if ((_DWORD)v21)
      {
        v24 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if ((_DWORD)v21 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if ((_DWORD)v21 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_E64AD0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_E64AD8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_E64B5C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_E64B6C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_E64B74()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_E64BAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_150AE20)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC0);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_150AE20);
  }
}

void sub_E64C04(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_150AE28)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_150AE28);
  }
}

uint64_t sub_E64C58(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata2;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;

  v1 = (void *)*a1;
  v2 = a1[1];
  v4 = a1[3];
  v3 = a1[4];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, *a1, 0, 0);
  v5 = type metadata accessor for Array(255);
  v63 = v2;
  v64 = &type metadata for Int;
  v65 = v3;
  v66 = &protocol witness table for Int;
  v7 = type metadata accessor for IDView(255, &v63, v6);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v7);
  v63 = v7;
  v64 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v61 = v5;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  v63 = v5;
  v64 = v1;
  v65 = OpaqueTypeMetadata2;
  v66 = (void *)v62;
  v67 = v4;
  v10 = v4;
  v11 = type metadata accessor for ForEach(255, &v63);
  v63 = v7;
  v64 = (void *)WitnessTable;
  swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v11);
  v13 = type metadata accessor for LazyHStack(255, v11, v12);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACC8);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD0);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _AppearanceActionModifier);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACD8);
  swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v13);
  sub_5C150(&qword_150ACE0, &qword_150ACC8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  sub_5C150(&qword_150ACE8, &qword_150ACD0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v22 = sub_E6220C();
  v63 = v19;
  v64 = (void *)v20;
  v65 = v21;
  v66 = (void *)v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v24 = type metadata accessor for Optional(255, v1);
  v63 = v19;
  v64 = (void *)v20;
  v65 = v21;
  v66 = (void *)v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v24);
  v63 = v23;
  v64 = (void *)v24;
  v65 = OpaqueTypeConformance2;
  v66 = (void *)v26;
  v27 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v63 = v23;
  v64 = (void *)v24;
  v65 = OpaqueTypeConformance2;
  v66 = (void *)v26;
  v28 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v29 = type metadata accessor for PagingScrollView(255, v27, v28);
  v30 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150ACF8);
  v31 = type metadata accessor for ModifiedContent(255, v29, v30);
  swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v29);
  sub_5C150(&qword_150AD00, &qword_150ACF8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  v63 = v31;
  v64 = (void *)v32;
  v33 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v63 = v31;
  v64 = (void *)v32;
  v34 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v63 = v33;
  v64 = (void *)v34;
  v35 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v63 = v33;
  v64 = (void *)v34;
  v36 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v63 = v35;
  v64 = (void *)v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v63 = v35;
  v64 = (void *)v36;
  v38 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v39 = type metadata accessor for GeometryReader(255, v37, v38);
  v40 = type metadata accessor for ModifiedContent(255, v39, &type metadata for _FrameLayout);
  swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v39);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v40);
  v42 = type metadata accessor for ScrollViewReader(255, v40, v41);
  v43 = type metadata accessor for ModifiedContent(255, v42, &type metadata for _FrameLayout);
  v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD08);
  v63 = v61;
  v64 = v1;
  v65 = v44;
  v66 = (void *)v62;
  v67 = v10;
  v45 = type metadata accessor for ForEach(255, &v63);
  v46 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD10);
  v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AD18);
  v49 = type metadata accessor for AutomaticHoverEffect(255, v48);
  v50 = sub_E62268();
  v51 = sub_4DD24(qword_150AD98, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v63 = v47;
  v64 = (void *)v49;
  v65 = v50;
  v66 = (void *)v51;
  v52 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v63 = v46;
  v64 = (void *)v52;
  swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v45);
  v54 = type metadata accessor for HStack(255, v45, v53);
  v55 = type metadata accessor for ModifiedContent(255, v54, &type metadata for _FrameLayout);
  v56 = type metadata accessor for Optional(255, v55);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v43, v56, 0, 0);
  v58 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v58);
  v59 = type metadata accessor for VStack(255, v58);
  return swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v59);
}

ValueMetadata *type metadata accessor for ScrollViewOffsetKey()
{
  return &type metadata for ScrollViewOffsetKey;
}

void sub_E652A0()
{
  qword_150ACB8 = 0;
}

double sub_E652AC@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_1506288 != -1)
    swift_once(&qword_1506288, sub_E652A0);
  result = *(double *)&qword_150ACB8;
  *a1 = qword_150ACB8;
  return result;
}

double sub_E652FC(double *a1, void (*a2)(double *__return_ptr))
{
  double result;
  double v4;

  a2(&v4);
  result = v4 + *a1;
  *a1 = result;
  return result;
}

double sub_E65348@<D0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = (void *)v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = (_QWORD *)v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_E5D7A4(a1, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_E653DC()
{
  return sub_2CCD30((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_E60ED8);
}

double sub_E653E8()
{
  void *v0;
  id v1;
  char *v2;
  uint64_t v3;
  id v4;

  v0 = (void *)objc_opt_self(UITraitCollection);
  v1 = objc_msgSend(v0, "currentTraitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_4 + 2)
    v3 = 10;
  else
    v3 = 8;
  v4 = objc_msgSend(v0, "currentTraitCollection");
  objc_msgSend(v4, "userInterfaceIdiom");

  return (double)v3;
}

unint64_t sub_E6549C()
{
  unint64_t result;

  result = qword_150AE40;
  if (!qword_150AE40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_150AE40);
  }
  return result;
}

uint64_t sub_E654E4(uint64_t a1, uint64_t a2)
{
  return sub_E65D40(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_E613B8);
}

uint64_t sub_E654FC()
{
  uint64_t v0;

  return sub_E61EF8(*(_QWORD **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_E65534@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = v2[6];
  v15[0] = v2[2];
  v5 = (void *)v15[0];
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  v15[4] = v9;
  v10 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v15) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_E5DED4(a1, (_QWORD *)((char *)v2 + v11), (uint64_t)v2 + ((v11 + v12 + v13) & ~v13), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_E655F4@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_E5E88C(*(_QWORD **)(v1 + 56), *(void (**)(char *, char *, uint64_t))(v1 + 72), *(double (**)@<D0>(uint64_t@<X8>))(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 48), a1, *(double *)(v1 + 64));
}

uint64_t sub_E6560C()
{
  return sub_2CCD30((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_E5F760);
}

uint64_t sub_E6561C(double *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v10[0] = v1[2];
  v3 = v10[0];
  v10[1] = v4;
  v10[2] = v5;
  v10[3] = v6;
  v10[4] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v10) - 8) + 80);
  return sub_E60144(a1, (_QWORD *)((char *)v1 + ((v8 + 56) & ~v8)), v3, v4, v5, v6, v7);
}

unint64_t sub_E656A8()
{
  unint64_t result;

  result = qword_150AE80;
  if (!qword_150AE80)
  {
    result = swift_getWitnessTable("ݜ1", &type metadata for ScrollViewOffsetKey);
    atomic_store(result, (unint64_t *)&qword_150AE80);
  }
  return result;
}

unint64_t sub_E656EC()
{
  unint64_t result;

  result = qword_150AE88;
  if (!qword_150AE88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_150AE88);
  }
  return result;
}

uint64_t objectdestroy_21Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v24 = *(_OWORD *)(v0 + 16);
  v25[0] = v24;
  v25[1] = v2;
  v26 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v25);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v23 = *(_QWORD *)(v4 + 64);
  v6 = type metadata accessor for ScrollViewProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v22 = *(_QWORD *)(v7 + 64);
  v9 = v0 + ((v5 + 56) & ~v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v9 + 16))
  {
    swift_release();
    swift_release();
  }
  v10 = v9 + v3[16];
  v11 = type metadata accessor for Binding(0, v24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_release();
    v12 = swift_release();
    (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v24 - 8) + 8))(v10 + *(int *)(v11 + 32), v24, v12);
  }
  swift_release();
  if (*(_QWORD *)(v9 + v3[22]))
    swift_release();
  v13 = swift_release();
  v14 = v9 + v3[24];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v14, 1, v6, v13))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150AE30);
  swift_release();
  v15 = v9 + v3[26];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    v18 = swift_release();
  }
  v19 = (((v5 + 56) & ~v5) + v23 + v8) & ~v8;
  v20 = v19 + v22;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v19, v6, v18);
  return swift_deallocObject(v0, v20, v5 | v8 | 7);
}

double sub_E65968()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v11[0] = v0[2];
  v1 = v11[0];
  v11[1] = v2;
  v11[2] = v3;
  v11[3] = v4;
  v11[4] = v5;
  v6 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v11) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_E60604((_QWORD *)((char *)v0 + v7), (uint64_t)v0 + ((v7 + v8 + v9) & ~v9), v1, v2, v3, v4, v5);
}

double sub_E65A14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _QWORD v13[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v13[0] = v2[2];
  v5 = v13[0];
  v13[1] = v6;
  v13[2] = v7;
  v13[3] = v8;
  v13[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v13) - 8) + 80);
  return sub_E60C5C(v11, a1, a2, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9);
}

uint64_t sub_E65AAC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_E60CF8(a1, a2, (_QWORD *)((char *)v2 + ((v10 + 56) & ~v10)), v5, v6, v7, v8, v9);
}

uint64_t objectdestroyTm_35()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  _OWORD v20[2];
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v19 = *(_OWORD *)(v0 + 16);
  v20[0] = v19;
  v20[1] = v2;
  v21 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v20);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = v0 + v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v6 + 16))
  {
    swift_release();
    swift_release();
  }
  v9 = v8 + v3[16];
  v10 = type metadata accessor for Binding(0, v19);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_release();
    v11 = swift_release();
    (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v19 - 8) + 8))(v9 + *(int *)(v10 + 32), v19, v11);
  }
  swift_release();
  if (*(_QWORD *)(v8 + v3[22]))
    swift_release();
  swift_release();
  v12 = v8 + v3[24];
  v13 = type metadata accessor for ScrollViewProxy(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150AE30);
  swift_release();
  v15 = v8 + v3[26];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v6 + v7, v5 | 7);
}

uint64_t sub_E65D34(uint64_t a1, uint64_t a2)
{
  return sub_E65D40(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_E5FC40);
}

uint64_t sub_E65D40(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[5];

  v7 = *((_QWORD *)v3 + 3);
  v8 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  v10 = *((_QWORD *)v3 + 6);
  v14[0] = *((_QWORD *)v3 + 2);
  v6 = v14[0];
  v14[1] = v7;
  v14[2] = v8;
  v14[3] = v9;
  v14[4] = v10;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v14) - 8) + 80);
  return a3(a1, a2, &v3[(v11 + 56) & ~v11], v6, v7, v8, v9, v10);
}

uint64_t sub_E65DE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_E65E10(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 56);
  v4 = *(_QWORD *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, *(_QWORD *)(v1 + 16), 0, 0);
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t objectdestroy_10Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  _OWORD v20[2];
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v19 = *(_OWORD *)(v0 + 16);
  v20[0] = v19;
  v20[1] = v2;
  v21 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v20);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = v0 + v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v6 + 16))
  {
    swift_release();
    swift_release();
  }
  v9 = v8 + v3[16];
  v10 = type metadata accessor for Binding(0, v19);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_release();
    v11 = swift_release();
    (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v19 - 8) + 8))(v9 + *(int *)(v10 + 32), v19, v11);
  }
  swift_release();
  if (*(_QWORD *)(v8 + v3[22]))
    swift_release();
  swift_release();
  v12 = v8 + v3[24];
  v13 = type metadata accessor for ScrollViewProxy(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150AE30);
  swift_release();
  v15 = v8 + v3[26];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, ((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v5 | 7);
}

double sub_E66078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v11 = v0[2];
  v1 = v11;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v6 = type metadata accessor for CarouselView(0, (uint64_t)&v11);
  v7 = *(_QWORD *)((char *)v0
                 + ((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v8 = type metadata accessor for CarouselView(0, (uint64_t)&v11);
  return sub_E5FF64(v7, 1, v8, v9);
}

char *CircularProgressView.__allocating_init(size:)(double a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return CircularProgressView.init(size:)(a1, a2);
}

void CircularProgressView.setState(_:animated:)(uint64_t a1, int a2, char a3, double a4)
{
  _BYTE *v4;
  double v6;
  __int16 v7;
  char *v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  double v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSNumber v31;
  uint64_t v32;
  Class isa;

  v6 = *(double *)&a1;
  LOBYTE(v7) = a2;
  v8 = &v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  if ((a2 & 0x10000) != 0)
  {
    if ((v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) != 0)
      return;
    *(double *)v8 = *(double *)&a1;
    *((_WORD *)v8 + 4) = a2;
    v8[10] = 1;
    if ((a3 & 1) != 0)
    {
      v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      goto LABEL_12;
    }
LABEL_11:
    v16 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v16, "begin");
    objc_msgSend(v16, "setDisableActions:", 1);
    v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
    if ((v8[10] & 1) == 0)
    {
      v6 = *(double *)v8;
      v7 = *((_WORD *)v8 + 4);
      if ((v7 & 0x100) == 0)
        goto LABEL_5;
      goto LABEL_21;
    }
LABEL_12:
    objc_msgSend(v9, "setLineDashPattern:", 0);
    v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
    if (!v17)
      goto LABEL_33;
    v18 = swift_allocObject(&unk_13CAAF0, 24, 7);
    *(_QWORD *)(v18 + 16) = v4;
    v19 = v4;
    swift_retain(v17);
    sub_E67D64((uint64_t)sub_E6730C, v18, 0.0);
    swift_release(v17);
    goto LABEL_31;
  }
  if ((v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) != 0)
  {
LABEL_3:
    *(double *)v8 = *(double *)&a1;
    *((_WORD *)v8 + 4) = a2;
    v8[10] = 0;
    if ((a3 & 1) != 0)
    {
      v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      if ((a2 & 0x100) == 0)
      {
LABEL_5:
        objc_msgSend(v9, "setLineDashPattern:", 0);
        LODWORD(v10) = 1.0;
        objc_msgSend(v9, "setOpacity:", v10);
        if ((v7 & 1) == 0)
        {
          v11 = v6;
          v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
          if (v12)
          {
            v13 = swift_allocObject(&unk_13CAB40, 24, 7);
            *(_QWORD *)(v13 + 16) = v4;
            swift_retain(v12);
            v14 = v4;
            sub_E67D64((uint64_t)sub_E6881C, v13, v11);
            swift_release(v12);
            v15 = v13;
LABEL_32:
            swift_release(v15);
            goto LABEL_33;
          }
          objc_msgSend(v9, "setStrokeEnd:", v11);
LABEL_33:
          if ((a3 & 1) == 0)
            objc_msgSend((id)objc_opt_self(CATransaction), "commit");
          return;
        }
        v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator;
        v18 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
        if (!v18)
        {
          v23 = type metadata accessor for CircularProgressView.SpinAnimator();
          v18 = swift_allocObject(v23, 41, 7);
          *(_BYTE *)(v18 + 40) = 0;
          *(_QWORD *)(v18 + 16) = 0xD000000000000010;
          *(_QWORD *)(v18 + 24) = 0x800000000110DEC0;
          *(_QWORD *)(v18 + 32) = v9;
          v24 = v9;
        }
        *(_QWORD *)&v4[v22] = v18;
        if (!v18)
          goto LABEL_33;
        swift_retain(v18);
        sub_E67A20();
LABEL_31:
        v15 = v18;
        goto LABEL_32;
      }
LABEL_21:
      if (*(_QWORD *)&v6 | v7)
      {
        LODWORD(a4) = 0;
        objc_msgSend(v9, "setOpacity:", a4);
        goto LABEL_33;
      }
      v25 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
      if (v25)
      {
        v26 = swift_allocObject(&unk_13CAB18, 32, 7);
        *(_QWORD *)(v26 + 16) = v4;
        *(_QWORD *)(v26 + 24) = v9;
        v27 = v4;
        v28 = v9;
        swift_retain(v25);
        sub_E67D64((uint64_t)sub_E68294, v26, 1.0);
        swift_release(v25);
        v15 = v26;
        goto LABEL_32;
      }
      objc_msgSend(v9, "setStrokeEnd:", 1.0);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_1060220;
      sub_4E684(0, &qword_1507268, NSNumber_ptr);
      v31.super.super.isa = NSNumber.init(integerLiteral:)(4).super.super.isa;
      *(NSNumber *)(v30 + 32) = v31;
      specialized Array._endMutation()(v31.super.super.isa);
      v32 = v30;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "setLineDashPattern:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

      goto LABEL_33;
    }
    goto LABEL_11;
  }
  v20 = *(double *)v8;
  v21 = *((_WORD *)v8 + 4);
  if ((a2 & 0x100) != 0)
  {
    if (a1 | a2)
    {
      if ((*((_WORD *)v8 + 4) & 0x100) == 0 || !(*(_QWORD *)&v20 | *((_WORD *)v8 + 4)))
        goto LABEL_3;
    }
    else if ((*((_WORD *)v8 + 4) & 0x100) == 0 || *(_QWORD *)&v20 | *((_WORD *)v8 + 4))
    {
      goto LABEL_3;
    }
  }
  else
  {
    if ((*((_WORD *)v8 + 4) & 0x100) != 0)
      goto LABEL_3;
    if ((a2 & 1) != 0)
    {
      if ((v21 & 1) != 0)
        return;
      goto LABEL_3;
    }
    if ((v21 & 1) != 0)
      goto LABEL_3;
    HIDWORD(a4) = HIDWORD(a1);
    if (*(double *)&a1 != v20)
      goto LABEL_3;
  }
}

uint64_t static CircularProgressView.State.__derived_enum_equals(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  _BOOL4 v5;
  _BOOL4 v6;

  if ((a2 & 0x100) != 0)
  {
    v5 = (a3 | a4) == 0;
    if ((a4 & 0x100) != 0)
    {
      v6 = (a3 | a4) != 0;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (a1 | a2)
      return v6;
    else
      return v5;
  }
  else
  {
    if ((a4 & 0x100) == 0)
    {
      if ((a2 & 1) != 0)
      {
        if ((a4 & 1) != 0)
          return 1;
      }
      else if ((a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3)
      {
        return 1;
      }
    }
    return 0;
  }
}

BOOL sub_E66634(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;

  v2 = *(double *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(double *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 9) == 1)
  {
    if (*(_QWORD *)&v2 | v3)
    {
      if (*(_BYTE *)(a2 + 9))
        return (*(_QWORD *)&v4 | v5) != 0;
    }
    else if (*(_BYTE *)(a2 + 9))
    {
      return (*(_QWORD *)&v4 | v5) == 0;
    }
    return 0;
  }
  if ((*(_BYTE *)(a2 + 9) & 1) != 0)
    return 0;
  if ((v3 & 1) != 0)
    return (v5 & 1) != 0;
  return (v5 & 1) == 0 && v2 == v4;
}

char *CircularProgressView.init(size:)(double a1, double a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  double *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  objc_super v30;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(_QWORD *)v6 = 0;
  *((_WORD *)v6 + 4) = 0;
  v6[10] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  v7 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  v8 = objc_allocWithZone((Class)CAShapeLayer);
  v9 = v2;
  *(_QWORD *)&v2[v7] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v11 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  *v11 = a1;
  v11[1] = a2;

  v30.receiver = v9;
  v30.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, a1, a2);
  v13 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  v14 = *(void **)&v12[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v15 = (void *)objc_opt_self(UIColor);
  v16 = v12;
  v17 = v14;
  v18 = objc_msgSend(v15, "clearColor");
  v19 = objc_msgSend(v18, "CGColor");

  objc_msgSend(v17, "setFillColor:", v19);
  v20 = *(void **)&v12[v13];
  objc_msgSend(v20, "setLineWidth:", 2.5);
  v21 = objc_msgSend(v16, "layer");
  objc_msgSend(v21, "addSublayer:", v20);

  v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  v23 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  objc_msgSend(v23, "setLineCap:", kCALineCapRound);
  objc_msgSend(v23, "setStrokeEnd:", 0.0);
  v24 = v23;
  v25 = objc_msgSend(v15, "clearColor");
  v26 = objc_msgSend(v25, "CGColor");

  objc_msgSend(v24, "setFillColor:", v26);
  v27 = *(void **)&v16[v22];
  objc_msgSend(v27, "setLineWidth:", 2.5);
  objc_msgSend(v27, "setLineDashPhase:", 6.0);
  v28 = objc_msgSend(v16, "layer");
  objc_msgSend(v28, "addSublayer:", v27);

  sub_E669A0();
  return v16;
}

void sub_E669A0()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v3 = objc_msgSend(v2, "CGColor");

  objc_msgSend(v1, "setStrokeColor:", v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  v5 = objc_msgSend(v0, "tintColor");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "CGColor");

    objc_msgSend(v4, "setStrokeColor:", v7);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CircularProgressView.tintColorDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  sub_E669A0();
}

Swift::Void __swiftcall CircularProgressView.layoutSubviews()()
{
  char *v0;
  double x;
  double y;
  double width;
  double height;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  CGFloat v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double *v22;
  id v23;
  _BYTE v24[24];
  objc_super v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v25.receiver = v0;
  v25.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v25, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  x = v26.origin.x;
  y = v26.origin.y;
  width = v26.size.width;
  height = v26.size.height;
  v5 = CGRectGetWidth(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  v6 = CGRectGetHeight(v27);
  if (v6 >= v5)
    v6 = v5;
  v7 = (v6 + -2.5) * 0.5;
  v8 = CGRect.center.getter(x, y, width, height);
  v10 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v8, v9, v7, -1.57079633, 4.71238898);
  v11 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v12 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v11, "setPath:", v12);

  v13 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  v14 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v13, "setPath:", v14);

  objc_msgSend(v13, "setBounds:", x, y, width, height);
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  v15 = CGRectGetWidth(v28) * 0.5;
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  objc_msgSend(v13, "setPosition:", v15, CGRectGetHeight(v29) * 0.5);
  v16 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  v17 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v17)
  {
    objc_msgSend(v17, "setFrame:", x, y, width, height);
    v18 = *(void **)&v0[v16];
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v19, "frame");
      v20 = CGRectGetWidth(v30);
      objc_msgSend(v19, "frame");
      v21 = CGRectGetHeight(v31);
      if (v21 < v20)
        v20 = v21;
      v22 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale];
      swift_beginAccess(v22, v24, 0, 0);
      v23 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", v20 * *v22);
      objc_msgSend(v19, "setPreferredSymbolConfiguration:", v23);

      v10 = v23;
    }
  }

}

double CircularProgressView.sizeThatFits(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize, v3, 0, 0);
  return *(double *)v1;
}

void CircularProgressView.preferredSize.setter(double a1, double a2)
{
  char *v2;
  double *v5;
  double v6;
  double v7;
  _BYTE v9[24];

  v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize], v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  if (v6 != a1 || v7 != a2)
    objc_msgSend(v2, "invalidateIntrinsicContentSize");
}

void (*CircularProgressView.preferredSize.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  _OWORD *v5;

  v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  *((_QWORD *)v3 + 5) = v1;
  *((_QWORD *)v3 + 6) = v4;
  v5 = (_OWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *(_OWORD *)(v3 + 24) = *v5;
  return sub_E66FFC;
}

void sub_E66FFC(id **a1)
{
  id *v1;
  double v2;
  double *v3;
  double v4;
  double v5;
  double v6;

  v1 = *a1;
  v2 = *((double *)*a1 + 3);
  v3 = (double *)((char *)(*a1)[6] + (_QWORD)(*a1)[5]);
  v4 = *((double *)*a1 + 4);
  v5 = *v3;
  v6 = v3[1];
  *v3 = v2;
  v3[1] = v4;
  if (v2 != v5 || v4 != v6)
    objc_msgSend(v1[5], "invalidateIntrinsicContentSize");
  free(v1);
}

uint64_t CircularProgressView.state.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
}

void CircularProgressView.state.setter(uint64_t a1, int a2, double a3)
{
  CircularProgressView.setState(_:animated:)(a1, a2 & 0x1FFFF, 0, a3);
}

void (*CircularProgressView.state.modify(uint64_t a1))(uint64_t a1, double a2)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
  return sub_E670C8;
}

void sub_E670C8(uint64_t a1, double a2)
{
  CircularProgressView.setState(_:animated:)(*(_QWORD *)a1, *(unsigned __int16 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 10) << 16), 0, a2);
}

double sub_E67108(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  NSNumber v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;
  double result;
  double v14;
  __int16 v15;

  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v5)
    v6 = v5 == a1;
  else
    v6 = 0;
  if (v6)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release(a1);
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1060220;
  sub_4E684(0, &qword_1507268, NSNumber_ptr);
  v9.super.super.isa = NSNumber.init(integerLiteral:)(4).super.super.isa;
  *(NSNumber *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9.super.super.isa);
  v10 = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "setLineDashPattern:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  result = 0.0;
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    v14 = *(double *)v12;
    v15 = *(_WORD *)(v12 + 8);
    if ((v15 & 0x100) != 0)
    {
      if (!(*(_QWORD *)&v14 | v15))
        return 1.0;
    }
    else
    {
      result = v14;
      if ((v15 & 1) != 0)
        return 0.6;
    }
  }
  return result;
}

double sub_E67250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  double result;
  double v7;
  __int16 v8;

  v3 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v3)
    v4 = v3 == a1;
  else
    v4 = 0;
  if (v4)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release(a1);
  }
  v5 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  result = 0.0;
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    v7 = *(double *)v5;
    v8 = *(_WORD *)(v5 + 8);
    if ((v8 & 0x100) != 0)
    {
      if (!(*(_QWORD *)&v7 | v8))
        return 1.0;
    }
    else
    {
      result = v7;
      if ((v8 & 1) != 0)
        return 0.6;
    }
  }
  return result;
}

uint64_t sub_E672E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_E6730C(uint64_t a1)
{
  uint64_t v1;

  return sub_E67250(a1, *(_QWORD *)(v1 + 16));
}

void sub_E67324()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  double Width;
  double Height;
  double *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];
  CGRect v20;
  CGRect v21;

  v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v19, 0, 0);
  v2 = *v1;
  if (v2)
  {
    v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v4)
    {
      v5 = v2;
      v6 = v4;
    }
    else
    {
      v8 = objc_allocWithZone((Class)UIImageView);
      v9 = v2;
      v6 = objc_msgSend(v8, "init");
    }
    v10 = v4;
    objc_msgSend(v6, "setImage:", v2);
    v11 = *(void **)(v0 + v3);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v12, "frame");
      Width = CGRectGetWidth(v20);
      objc_msgSend(v12, "frame");
      Height = CGRectGetHeight(v21);
      if (Height < Width)
        Width = Height;
      v15 = (double *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
      swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, &v18, 0, 0);
      v16 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", Width * *v15);
      objc_msgSend(v12, "setPreferredSymbolConfiguration:", v16);

      v17 = *(void **)(v0 + v3);
    }
    else
    {
      v17 = 0;
    }
    *(_QWORD *)(v0 + v3) = v6;
    v7 = v6;
    sub_E67604(v17);

  }
  else
  {
    v7 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView) = 0;
    sub_E67604(v7);
  }

}

void *CircularProgressView.image.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void CircularProgressView.image.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_E67324();
}

void (*CircularProgressView.image.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, a1, 33, 0);
  return sub_E675D4;
}

void sub_E675D4(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_E67324();
}

void sub_E67604(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  id v13;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v5)
  {
    if (!a1)
    {
LABEL_10:
      v13 = v5;
      objc_msgSend(v13, "setContentMode:", 4);
      objc_msgSend(v2, "addSubview:", v13);

      return;
    }
    sub_4E684(0, (unint64_t *)&unk_150B088, UIImageView_ptr);
    v6 = v5;
    v3 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v8 = v3;
  v9 = objc_msgSend(v8, "superview");
  if (v9)
  {
    v10 = v9;
    sub_4E684(0, (unint64_t *)&qword_150B080, UIView_ptr);
    v11 = v2;
    v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

    if ((v10 & 1) != 0)
      objc_msgSend(v8, "removeFromSuperview");
  }

  v5 = *(void **)&v2[v4];
  if (v5)
    goto LABEL_10;
}

double CircularProgressView.imageScale.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, v3, 0, 0);
  return *(double *)v1;
}

void CircularProgressView.imageScale.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  void *v5;
  id v6;
  double Width;
  double Height;
  id v9;
  _BYTE v10[24];
  CGRect v11;
  CGRect v12;

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, v10, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v6, "frame");
      Width = CGRectGetWidth(v11);
      objc_msgSend(v6, "frame");
      Height = CGRectGetHeight(v12);
      if (Height >= Width)
        Height = Width;
      v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *v3 * Height);
      objc_msgSend(v6, "setPreferredSymbolConfiguration:", v9);

    }
  }
}

void (*CircularProgressView.imageScale.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_E67924;
}

void sub_E67924(uint64_t a1, char a2)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  double Width;
  double Height;
  id v13;
  CGRect v14;
  CGRect v15;

  v2 = *(_QWORD **)a1;
  v3 = *(double *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    CircularProgressView.imageScale.setter(v3);
  }
  else
  {
    v5 = v2[4];
    v4 = v2[5];
    v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      v7 = v2[4];
      v8 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
      if (v8)
      {
        v9 = v2[5];
        v10 = v8;
        objc_msgSend(v10, "frame");
        Width = CGRectGetWidth(v14);
        objc_msgSend(v10, "frame");
        Height = CGRectGetHeight(v15);
        if (Height >= Width)
          Height = Width;
        v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *(double *)(v7 + v9) * Height);
        objc_msgSend(v10, "setPreferredSymbolConfiguration:", v13);

      }
    }
  }
  free(v2);
}

void sub_E67A20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  Swift::String v5;
  NSString v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  Class isa;
  Class v13;
  double v14;
  CFTimeInterval v15;
  id v16;
  long double v17;
  NSString v18;
  uint64_t v19;
  _OWORD v20[2];
  _QWORD v21[4];

  *(_BYTE *)(v0 + 40) = 0;
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeAnimationForKey:", v4);

  v21[0] = v3;
  v21[1] = v2;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0x676E69646E65;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeAnimationForKey:", v6, swift_bridgeObjectRelease(v2).n128_f64[0]);

  objc_msgSend(v1, "setStrokeEnd:", 0.6);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v7);

  v9 = objc_msgSend(v1, "presentationLayer");
  if (!v9)
    v9 = v1;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "valueForKeyPath:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v20, v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_DD47FC((uint64_t)v20, (uint64_t)v21);
  if (v21[3])
    swift_dynamicCast(&v19, v21, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  else
    sub_DD4844((uint64_t)v21);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setFromValue:", isa);

  if (qword_1506290 != -1)
    swift_once(&qword_1506290, sub_E6841C);
  v13 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setToValue:", v13);

  objc_msgSend(v8, "setRemovedOnCompletion:", 1);
  objc_msgSend(v8, "setFillMode:", kCAFillModeBoth);
  objc_msgSend(v8, "setDuration:", 1.0);
  LODWORD(v14) = 2139095040;
  objc_msgSend(v8, "setRepeatCount:", v14);
  v15 = CACurrentMediaTime();
  v16 = v8;
  objc_msgSend(v16, "duration");
  objc_msgSend(v16, "setBeginTime:", (double)(v15 - fmod(v15, v17)));

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addAnimation:forKey:", v16, v18);

}

void sub_E67D64(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  double v11;
  NSString v12;
  void *v13;
  id v14;
  double v15;
  Class isa;
  Class v17;
  NSString v18;
  id v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  Class v27;
  objc_class *v28;
  char *v29;
  char *v30;
  id v31;
  char *v32;
  uint64_t v33;
  void (**v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  Swift::String v41;
  uint64_t v42;
  NSString v43;
  uint64_t v45;
  objc_super v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  if ((*(_BYTE *)(v3 + 40) & 1) == 0)
  {
    v4 = v3;
    *(_BYTE *)(v3 + 40) = 1;
    v7 = *(void **)(v3 + 32);
    v8 = objc_msgSend(v7, "presentationLayer");
    if (!v8)
      v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "valueForKeyPath:", v9);

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)(v47, v10);
      swift_unknownObjectRelease(v10);
    }
    else
    {
      memset(v47, 0, sizeof(v47));
    }
    sub_DD47FC((uint64_t)v47, (uint64_t)&v48);
    if (v50)
      swift_dynamicCast(&v45, &v48, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
    else
      sub_DD4844((uint64_t)&v48);
    v11 = fmin(a3, 0.1);
    v12 = String._bridgeToObjectiveC()();
    v13 = (void *)objc_opt_self(CABasicAnimation);
    v14 = objc_msgSend(v13, "animationWithKeyPath:", v12);

    if (qword_1506290 != -1)
      swift_once(&qword_1506290, sub_E6841C);
    v15 = *(double *)&qword_150AEA0 - (6.28318531 - (1.0 - (0.6 - v11)) * 6.28318531);
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v14, "setFromValue:", isa);

    v17 = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v14, "setToValue:", v17);

    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v13, "animationWithKeyPath:", v18);

    v20 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v19, "setToValue:", v20);

    v21 = objc_msgSend(objc_allocWithZone((Class)CAAnimationGroup), "init");
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
    v23 = swift_allocObject(v22, 48, 7);
    *(_OWORD *)(v23 + 16) = xmmword_105F8A0;
    *(_QWORD *)(v23 + 32) = v14;
    *(_QWORD *)(v23 + 40) = v19;
    v48 = v23;
    specialized Array._endMutation()(v23);
    v24 = v48;
    sub_4E684(0, &qword_150B098, CAAnimation_ptr);
    v25 = v14;
    v26 = v19;
    v27 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "setAnimations:", v27, swift_bridgeObjectRelease(v24).n128_f64[0]);

    objc_msgSend(v21, "setDuration:", v15 * (1.0 / *(double *)&qword_150AEA0));
    objc_msgSend(v21, "setFillMode:", kCAFillModeForwards);
    objc_msgSend(v21, "setRemovedOnCompletion:", 0);
    v28 = (objc_class *)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
    v29 = (char *)objc_allocWithZone(v28);
    v30 = &v29[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    v46.receiver = v29;
    v46.super_class = v28;
    v31 = v21;
    v32 = (char *)objc_msgSendSuper2(&v46, "init");
    objc_msgSend(v31, "setDelegate:", v32);

    v33 = swift_allocObject(&unk_13CABF8, 64, 7);
    *(_QWORD *)(v33 + 16) = v32;
    *(_QWORD *)(v33 + 24) = v4;
    *(double *)(v33 + 32) = v11;
    *(_QWORD *)(v33 + 40) = a1;
    *(_QWORD *)(v33 + 48) = a2;
    *(double *)(v33 + 56) = a3;
    v34 = (void (**)(uint64_t))&v32[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    v35 = *(_QWORD *)&v32[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    v36 = *(_QWORD *)&v32[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop
                        + 8];
    *v34 = sub_E68808;
    v34[1] = (void (*)(uint64_t))v33;
    v37 = v32;
    swift_retain(v4);
    swift_retain(a2);
    sub_5C198(v35, v36);
    v38 = *(_QWORD *)(v4 + 16);
    v39 = *(_QWORD *)(v4 + 24);
    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "removeAnimationForKey:", v40);

    v48 = v38;
    v49 = v39;
    swift_bridgeObjectRetain();
    v41._countAndFlagsBits = 0x676E69646E65;
    v41._object = (void *)0xE600000000000000;
    String.append(_:)(v41);
    v42 = v49;
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "addAnimation:forKey:", v31, v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

  }
}

uint64_t sub_E68268()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_E68294(uint64_t a1)
{
  uint64_t v1;

  return sub_E67108(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator()
{
  return objc_opt_self(_TtCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator);
}

void sub_E682BC(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v10;
  void *v11;
  Swift::String v12;
  NSString v13;
  double v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_BYTE *)(a5 + 40) == 1)
  {
    v10 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v10, "begin");
    objc_msgSend(v10, "setDisableActions:", 1);
    v11 = *(void **)(a5 + 32);
    v16 = *(_QWORD *)(a5 + 16);
    v17 = *(_QWORD *)(a5 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x676E69646E65;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v11, "removeAnimationForKey:", v13, v16);

    objc_msgSend(v11, "setStrokeStart:", 0.0);
    objc_msgSend(v11, "setStrokeEnd:", a1);
    objc_msgSend(v10, "commit");
    v14 = COERCE_DOUBLE(a6(a5));
    if ((v15 & 1) != 0)
      v14 = a2;
    objc_msgSend(v11, "setStrokeEnd:", v14);
  }
}

void sub_E6841C()
{
  qword_150AEA0 = 0x401921FB54442D18;
}

id sub_E684F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_E68540()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 41, 7);
}

void CircularProgressView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.CircularProgressView", 32, "init(frame:)", 12, 0);
  __break(1u);
}

void _s11MusicCoreUI20CircularProgressViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(_QWORD *)v1 = 0;
  *((_WORD *)v1 + 4) = 0;
  v1[10] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/CircularProgressView.swift", 38, 2, 45, 0);
  __break(1u);
}

uint64_t type metadata accessor for CircularProgressView()
{
  return objc_opt_self(_TtC11MusicCoreUI20CircularProgressView);
}

uint64_t __swift_memcpy10_8_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.State()
{
  return &type metadata for CircularProgressView.State;
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator.Delegate()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate);
}

uint64_t sub_E687D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_E68808(uint64_t a1)
{
  uint64_t v1;

  sub_E682BC(*(double *)(v1 + 32), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 40));
}

void sub_E68824(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  v3 = (_QWORD *)sub_DDD92C(isUniquelyReferenced_nonNull_native, v13, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  swift_arrayInitWithCopy((char *)v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v8);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v10 = v3[2];
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    v3[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_E68928(uint64_t a1)
{
  sub_E68994(a1, (unint64_t *)_s5GlyphCMa, &qword_150BDE0, &qword_150BDD8, (uint64_t *)sub_45BCC8);
}

void sub_E6894C(uint64_t a1)
{
  sub_E68994(a1, (unint64_t *)_s8SyllableCMa, &qword_150BDF0, &qword_150BDE8, (uint64_t *)sub_45BCC8);
}

void sub_E68970(uint64_t a1)
{
  sub_E68994(a1, (unint64_t *)_s4WordCMa, &qword_150BE00, &qword_150BDF8, (uint64_t *)sub_45BD1C);
}

void sub_E68994(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v24 = *v5;
  else
    v24 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease();
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((char *)&dword_18 + (v12 & 0xFFFFFFFFFFFFFF8)) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v26 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v26;
LABEL_15:
    sub_E815D0(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v18 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v25 = v12;
    else
      v25 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
  }
  if (v18 < 1)
    goto LABEL_19;
  v19 = *(_QWORD *)((char *)&dword_10 + (*v5 & 0xFFFFFFFFFFFFFF8));
  v20 = __OFADD__(v19, v18);
  v21 = v19 + v18;
  if (!v20)
  {
    *(_QWORD *)((char *)&dword_10 + (*v5 & 0xFFFFFFFFFFFFFF8)) = v21;
LABEL_19:
    swift_bridgeObjectRelease();
    specialized Array._endMutation()(v22);
    return;
  }
  __break(1u);
}

void sub_E68BA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = (_QWORD *)sub_DDE5FC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  v9 = (v3[3] >> 1) - v8;
  v10 = type metadata accessor for Playlist.Collaborator(0);
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy((char *)v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t Collaboration.Management.Model.__allocating_init(manager:playlist:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = sub_E81AB8(a1, a2);
  swift_release();
  return v5;
}

uint64_t Collaboration.Management.Model.init(manager:playlist:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_E81AB8(a1, a2);
  swift_release(a1);
  return v3;
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.pendingCollaborators(uint64_t a1)
{
  return sub_CFAB5C(a1, &qword_150B160);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.transientCollaborators(uint64_t a1)
{
  return sub_CFAB5C(a1, &qword_150B168);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.playlist(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  Published.init(initialValue:)(v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_E68DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t KeyPath;
  uint64_t v7;
  char v8;
  _BYTE v9[24];
  _QWORD v10[15];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    static ApplicationCapabilities.shared.getter((uint64_t)v10);
    sub_A9008(v10);
    v5 = BYTE1(v10[0]);
    KeyPath = swift_getKeyPath(&unk_10B17D8);
    v7 = swift_getKeyPath(&unk_10B1800);
    v8 = v5;
    return static Published.subscript.setter(&v8, v4, KeyPath, v7);
  }
  return result;
}

uint64_t sub_E68E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5[5] = a4;
  v5[6] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C418);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C420);
  v5[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[9] = v8;
  v5[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C428);
  v5[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[12] = v10;
  v5[13] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C430);
  v5[14] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[15] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v13);
  v5[17] = swift_task_alloc(v13);
  return swift_task_switch(sub_E68F6C, 0, 0);
}

uint64_t sub_E68F6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[14];
  v4 = v0[15];
  v5 = type metadata accessor for Playlist(0);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = sub_4DD24(&qword_150C438, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  MusicLibrarySectionedRequest.init()(v5, v6, &protocol witness table for Playlist, v7);
  KeyPath = swift_getKeyPath(&unk_10B1A48);
  v0[2] = Playlist.id.getter(KeyPath);
  v0[3] = v9;
  MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)(KeyPath, v0 + 2, v3, &protocol witness table for Playlist, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  v10 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v2, v1, v3, v10);
  v11 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_E690B0, v13, v14);
}

uint64_t sub_E690B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[14];
  swift_release();
  v4 = sub_5C150((unint64_t *)&unk_150C440, &qword_150C430, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v0[19] = MusicAutoupdatableRequest.autoupdatingResponse.getter(v3, v4);
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[20] = v5;
  v5(v1, v3);
  return swift_task_switch(sub_E6913C, 0, 0);
}

uint64_t sub_E6913C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = *(_QWORD *)(v0 + 152);
  v3 = swift_release();
  v4 = *(_QWORD *)(v1 + v2);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 56);
    v33 = *(_QWORD *)(v0 + 96);
    swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v11);
    swift_release();
    v12 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
    *(_QWORD *)(v0 + 32) = static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
    v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
    v21 = sub_5C150(&qword_150C450, &qword_150C420, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v22 = sub_E889CC();
    Publisher.receive<A>(on:options:)(v0 + 32, v10, v9, v12, v21, v22);
    sub_56024(v10, &qword_150C418);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v23 = swift_allocObject(&unk_13CB338, 24, 7);
    swift_weakInit(v23 + 16);
    v24 = sub_5C150(&qword_150C460, &qword_150C428, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v4 = Publisher<>.sink(receiveValue:)(sub_E88A24, v23, v6, v24);
    v25 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v33 + 8))(v5, v6, v25);
  }
  v27 = *(_QWORD *)(v0 + 128);
  v26 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 48);
  v30 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, __n128))(v0 + 160))(v26, *(_QWORD *)(v0 + 112), v3);
  *(_QWORD *)(v31
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = v4;
  swift_release();
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_E69364(void (*a1)(char *), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t Strong;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t KeyPath;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *);
  void (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  _BOOL4 v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint8_t *v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  char *v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t, uint64_t);
  uint64_t v187;
  NSObject *v188;
  os_log_type_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  BOOL v203;
  void (*v204)(char *, uint64_t);
  void (*v205)(uint64_t *, _QWORD);
  uint64_t v206;
  uint64_t v207;
  void (*v208)(char *);
  uint64_t v209;
  char *v210;
  uint64_t (*v211)(uint64_t, char *, uint64_t);
  uint64_t v212;
  uint64_t v213;
  char *v214;
  unint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t *, _QWORD);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  __n128 v227;
  _QWORD *v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  char *v233;
  void (*v234)(char *, uint64_t, __n128);
  char *v235;
  char *v236;
  uint64_t v237;
  NSObject *v238;
  os_log_type_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  char *v246;
  __n128 v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  unsigned int (*v251)(char *, uint64_t, uint64_t);
  uint64_t v252;
  _QWORD *v253;
  char *v254;
  uint64_t v255;
  char *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  void (*v280)(char *, uint64_t);
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  _QWORD *v285;
  void (*v286)(char *);
  char *v287;
  _QWORD *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304[8];
  char v305[8];
  _QWORD *v306;
  char *v307;
  uint64_t v308;
  char v309[8];
  char v310[8];
  char v311[8];
  char v312[8];
  char v313[8];

  v286 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
  __chkstk_darwin();
  v282 = (uint64_t)&v248 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v300 = type metadata accessor for Playlist.Collaborator(0);
  v277 = *(_QWORD *)(v300 - 8);
  __chkstk_darwin();
  v290 = (char *)&v248 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v289 = (char *)&v248 - v5;
  __chkstk_darwin();
  v296 = (uint64_t)&v248 - v6;
  __chkstk_darwin();
  v276 = (char *)&v248 - v7;
  v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C468);
  v271 = *(_QWORD *)(v293 - 8);
  __chkstk_darwin();
  v292 = (char *)&v248 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C470);
  __chkstk_darwin();
  v269 = (char *)&v248 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v291 = (char *)&v248 - v10;
  v259 = type metadata accessor for Date(0);
  v258 = *(_QWORD *)(v259 - 8);
  __chkstk_darwin();
  v254 = (char *)&v248 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C478);
  __chkstk_darwin();
  v261 = (uint64_t)&v248 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = type metadata accessor for Playlist(0);
  v266 = *(_QWORD *)(v267 - 8);
  __chkstk_darwin();
  v264 = (char *)&v248 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v265 = (char *)&v248 - v14;
  __chkstk_darwin();
  v257 = (uint64_t *)((char *)&v248 - v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA8);
  __chkstk_darwin();
  v255 = (uint64_t)&v248 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v263 = (uint64_t)&v248 - v17;
  __chkstk_darwin();
  v262 = (uint64_t)&v248 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDC0);
  __chkstk_darwin();
  v275 = (char *)&v248 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = type metadata accessor for Playlist.Collaborator.Status(0);
  v288 = *(_QWORD **)(v283 - 8);
  __chkstk_darwin();
  v273 = (char *)&v248 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v274 = (char *)&v248 - v21;
  v294 = type metadata accessor for Playlist.Collaboration(0);
  v297 = *(_QWORD *)(v294 - 8);
  __chkstk_darwin();
  v278 = (char *)&v248 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C480);
  v301 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin();
  v295 = (char *)&v248 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = type metadata accessor for Logger(0);
  v24 = *(_QWORD *)(v298 - 8);
  __chkstk_darwin();
  v284 = (char *)&v248 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v268 = (char *)&v248 - v26;
  __chkstk_darwin();
  v272 = (char *)&v248 - v27;
  __chkstk_darwin();
  v29 = (char *)&v248 - v28;
  v280 = (void (*)(char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_150BDA0);
  __chkstk_darwin();
  v256 = (char *)&v248 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v281 = (uint64_t)&v248 - v31;
  __chkstk_darwin();
  v279 = (uint64_t)&v248 - v32;
  __chkstk_darwin();
  v285 = (uint64_t *)((char *)&v248 - v33);
  __chkstk_darwin();
  v35 = (uint64_t *)((char *)&v248 - v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C488);
  __chkstk_darwin();
  v37 = (char *)&v248 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C490);
  __chkstk_darwin();
  v287 = (char *)&v248 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v41 = (char *)&v248 - v40;
  __chkstk_darwin();
  v43 = (char *)&v248 - v42;
  __chkstk_darwin();
  v45 = (char *)&v248 - v44;
  __chkstk_darwin();
  v303 = (uint64_t)&v248 - v46;
  a2 += 16;
  swift_beginAccess(a2, v313, 0, 0);
  v299 = a2;
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v48 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse);
    swift_retain();
    swift_release();
    if (v48)
    {
      v50 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v49);
      swift_release();
      if ((v50 & 1) != 0)
      {
        v253 = v35;
        sub_5C238((uint64_t)v286, (uint64_t)v37, &qword_150C488);
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C498);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v37, 1, v51) == 1)
        {
          sub_56024((uint64_t)v37, &qword_150C488);
          v53 = v301;
          v54 = v303;
          v55 = v302;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v301 + 56))(v303, 1, 1, v302);
        }
        else
        {
          v56 = MusicLibrarySectionedResponse.sections.getter(v51);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v51);
          v53 = v301;
          v54 = v303;
          v57 = v302;
          if (*(_QWORD *)(v56 + 16))
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v301 + 16))(v303, v56 + ((*(unsigned __int8 *)(v301 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v301 + 80)), v302);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v57);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v301 + 56))(v303, 1, 1, v302);
          }
          v55 = v57;
          swift_bridgeObjectRelease();
        }
        sub_5C238(v54, (uint64_t)v45, &qword_150C490);
        v251 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
        if (v251(v45, 1, v55) == 1)
        {
          sub_56024((uint64_t)v45, &qword_150C490);
          v58 = v253;
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v297 + 56))(v253, 1, 1, v294);
        }
        else
        {
          KeyPath = swift_getKeyPath(&unk_10B1A70);
          v60 = v29;
          v61 = v24;
          v62 = v253;
          MusicLibrarySection.subscript.getter(v253, KeyPath, v55);
          v58 = v62;
          v24 = v61;
          v29 = v60;
          v63 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v301 + 8))(v45, v302, v63);
        }
        v64 = v298;
        v250 = v29;
        v65 = Logger.collaboration.unsafeMutableAddressor();
        v66 = *(void (**)(char *))(v24 + 16);
        v252 = v65;
        v66(v29);
        sub_5C238(v54, (uint64_t)v43, &qword_150C490);
        v67 = (void (*)(_QWORD, _QWORD, _QWORD))v285;
        v68 = sub_5C238((uint64_t)v58, (uint64_t)v285, &qword_150BDA0);
        v69 = Logger.logObject.getter(v68);
        v70 = static os_log_type_t.default.getter();
        v71 = os_log_type_enabled(v69, v70);
        v286 = v66;
        if (v71)
        {
          v72 = swift_slowAlloc(22, -1);
          v249 = swift_slowAlloc(64, -1);
          v308 = v249;
          *(_DWORD *)v72 = 136446466;
          sub_5C238((uint64_t)v43, (uint64_t)v41, &qword_150C490);
          v73 = (char *)String.init<A>(describing:)(v41, v38);
          *(_QWORD *)(v72 + 4) = sub_DCF730(v73, v74, &v308);
          swift_bridgeObjectRelease();
          sub_56024((uint64_t)v43, &qword_150C490);
          *(_WORD *)(v72 + 12) = 2082;
          v75 = v279;
          sub_5C238((uint64_t)v67, v279, &qword_150BDA0);
          v76 = (char *)String.init<A>(describing:)(v75, v280);
          *(_QWORD *)(v72 + 14) = sub_DCF730(v76, v77, &v308);
          swift_bridgeObjectRelease();
          v64 = v298;
          sub_56024((uint64_t)v67, &qword_150BDA0);
          _os_log_impl(&dword_0, v69, v70, "    [Management] Did update collaborative playlist with:\n        playlist=%{public}s\")\n        collaboration=%{public}s", (uint8_t *)v72, 0x16u);
          v78 = v249;
          swift_arrayDestroy(v249, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v78, -1, -1);
          v79 = v72;
          v66 = v286;
          swift_slowDealloc(v79, -1, -1);
        }
        else
        {
          sub_56024((uint64_t)v43, &qword_150C490);
          sub_56024((uint64_t)v67, &qword_150BDA0);
        }

        v80 = *(void (**)(char *, uint64_t))(v24 + 8);
        v80(v250, v64);
        v81 = v295;
        v82 = v288;
        v83 = v287;
        sub_5C238(v303, (uint64_t)v287, &qword_150C490);
        v84 = v302;
        v85 = v251(v83, 1, v302);
        v86 = v297;
        v87 = v301;
        if (v85 == 1)
        {
          sub_56024((uint64_t)v83, &qword_150C490);
LABEL_26:
          v102 = v284;
          v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v66)(v284, v252, v64);
          v104 = Logger.logObject.getter(v103);
          v105 = static os_log_type_t.default.getter();
          v106 = os_log_type_enabled(v104, v105);
          v107 = v303;
          if (v106)
          {
            v108 = v80;
            v109 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v109 = 0;
            _os_log_impl(&dword_0, v104, v105, "[Management] Dismissing management sheet", v109, 2u);
            v110 = v109;
            v80 = v108;
            swift_slowDealloc(v110, -1, -1);
          }

          v80(v102, v64);
          v111 = v299;
          swift_beginAccess(v299, &v308, 0, 0);
          v112 = swift_weakLoadStrong(v111);
          if (v112)
          {
            v113 = v112;
            v114 = swift_getKeyPath(&unk_10B0FB0);
            v115 = swift_getKeyPath(&unk_10B0FD8);
            v312[0] = 1;
            static Published.subscript.setter(v312, v113, v114, v115);
          }
          sub_56024((uint64_t)v253, &qword_150BDA0);
          v116 = v107;
LABEL_31:
          sub_56024(v116, &qword_150C490);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v301 + 32))(v81, v83, v84);
        v88 = v281;
        sub_5C238((uint64_t)v253, v281, &qword_150BDA0);
        v89 = v294;
        v288 = *(_QWORD **)(v86 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v288)(v88, 1, v294) == 1)
        {
          (*(void (**)(char *, uint64_t))(v87 + 8))(v81, v84);
          sub_56024(v88, &qword_150BDA0);
LABEL_25:
          v66 = v286;
          goto LABEL_26;
        }
        v280 = v80;
        v90 = v278;
        v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 32))(v278, v88, v89);
        v92 = (uint64_t)v275;
        Playlist.Collaboration.collaboratorStatus.getter(v91);
        v93 = v89;
        v94 = v283;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82[6])(v92, 1, v283) == 1)
        {
          (*(void (**)(char *, uint64_t))(v86 + 8))(v90, v93);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v295, v302);
          sub_56024(v92, &qword_150BDC0);
LABEL_24:
          v80 = v280;
          goto LABEL_25;
        }
        v95 = v274;
        ((void (*)(char *, uint64_t, uint64_t))v82[4])(v274, v92, v94);
        v96 = v273;
        ((void (*)(char *, _QWORD, uint64_t))v82[13])(v273, enum case for Playlist.Collaborator.Status.notJoined(_:), v94);
        v97 = sub_4DD24(&qword_150BDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
        v98 = dispatch thunk of static Equatable.== infix(_:_:)(v95, v96, v283, v97);
        v99 = v283;
        v100 = v98;
        v101 = (void (*)(char *, uint64_t))v82[1];
        v101(v96, v283);
        if ((v100 & 1) != 0)
        {
          v101(v95, v99);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v278, v294);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v295, v302);
          goto LABEL_24;
        }
        v117 = v299;
        swift_beginAccess(v299, v312, 0, 0);
        v118 = swift_weakLoadStrong(v117);
        v119 = (uint64_t)v291;
        if (!v118
          || (v120 = v118,
              v121 = swift_getKeyPath(&unk_10B1868),
              swift_getKeyPath(&unk_10B1890),
              static Published.subscript.getter(&v308, v120, v121),
              swift_release(),
              swift_release(),
              swift_release(),
              v308 != 1))
        {
LABEL_49:
          v147 = v299;
          swift_beginAccess(v299, v311, 0, 0);
          v148 = swift_weakLoadStrong(v147);
          if (v148)
          {
            v149 = v148;
            v150 = v265;
            MusicLibrarySection.item.getter(v302);
            v151 = swift_getKeyPath(&unk_10B1628);
            v152 = swift_getKeyPath(&unk_10B1650);
            v153 = v266;
            v154 = v264;
            v155 = v267;
            (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v264, v150, v267);
            swift_retain();
            static Published.subscript.setter(v154, v149, v151, v152);
            (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v155);
            swift_release();
          }
          v156 = v299;
          swift_beginAccess(v299, v310, 0, 0);
          v157 = swift_weakLoadStrong(v156);
          v159 = v293;
          if (v157)
          {
            v160 = v157;
            v161 = Playlist.Collaboration.isOpenInvitation.getter();
            v162 = swift_getKeyPath(&unk_10B1820);
            v163 = swift_getKeyPath(&unk_10B1848);
            LOBYTE(v308) = v161 & 1;
            static Published.subscript.setter(&v308, v160, v162, v163);
          }
          v164 = v292;
          MusicLibrarySection.items.getter(v302, v158);
          v165 = v271;
          v166 = (uint64_t)v269;
          v285 = *(_QWORD **)(v271 + 16);
          ((void (*)(char *, char *, uint64_t))v285)(v269, v164, v159);
          v167 = sub_5C150(&qword_150C4A0, &qword_150C468, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
          dispatch thunk of Collection.startIndex.getter(v159);
          v284 = *(char **)(v165 + 8);
          ((void (*)(char *, uint64_t))v284)(v164, v159);
          v168 = v270;
          *(_QWORD *)(v166 + *(int *)(v270 + 36)) = v308;
          sub_5C090(v166, v119, &qword_150C470);
          v169 = (uint64_t *)(v119 + *(int *)(v168 + 36));
          swift_beginAccess(v299, v309, 0, 0);
          v170 = *v169;
          dispatch thunk of Collection.endIndex.getter(v159, v167);
          if (v170 == v308)
          {
            v288 = _swiftEmptyArrayStorage;
            v287 = (char *)_swiftEmptyArrayStorage;
          }
          else
          {
            v287 = (char *)_swiftEmptyArrayStorage;
            v288 = _swiftEmptyArrayStorage;
            v198 = v277;
            v199 = v276;
            do
            {
              v204 = v101;
              v205 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v308, v169, v159, v167);
              v206 = v119;
              v207 = v159;
              v208 = *(void (**)(char *))(v198 + 16);
              v209 = v300;
              v208(v199);
              v205(&v308, 0);
              v210 = v292;
              ((void (*)(char *, uint64_t, uint64_t))v285)(v292, v206, v207);
              dispatch thunk of Collection.formIndex(after:)(v169, v207, v167);
              ((void (*)(char *, uint64_t))v284)(v210, v207);
              v211 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v198 + 32);
              v212 = v296;
              v213 = v211(v296, v199, v209);
              if ((Playlist.Collaborator.isPending.getter(v213) & 1) != 0)
              {
                ((void (*)(char *, uint64_t, uint64_t))v208)(v289, v212, v209);
                if ((swift_isUniquelyReferenced_nonNull_native(v288) & 1) == 0)
                  v288 = (_QWORD *)sub_DDE5FC(0, v288[2] + 1, 1, v288);
                v101 = v204;
                v228 = v288;
                v230 = v288[2];
                v229 = v288[3];
                if (v230 >= v229 >> 1)
                  v228 = (_QWORD *)sub_DDE5FC(v229 > 1, v230 + 1, 1, v288);
                v228[2] = v230 + 1;
                v231 = (*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
                v288 = v228;
                v232 = v300;
                v211((uint64_t)v228 + v231 + *(_QWORD *)(v198 + 72) * v230, v289, v300);
                (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v212, v232);
              }
              else
              {
                ((void (*)(char *, uint64_t, uint64_t))v208)(v290, v212, v209);
                v214 = v287;
                if ((swift_isUniquelyReferenced_nonNull_native(v287) & 1) == 0)
                  v214 = (char *)sub_DDE5FC(0, *((_QWORD *)v214 + 2) + 1, 1, v214);
                v216 = *((_QWORD *)v214 + 2);
                v215 = *((_QWORD *)v214 + 3);
                if (v216 >= v215 >> 1)
                  v214 = (char *)sub_DDE5FC(v215 > 1, v216 + 1, 1, v214);
                *((_QWORD *)v214 + 2) = v216 + 1;
                v217 = (*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
                v287 = v214;
                v211((uint64_t)&v214[v217 + *(_QWORD *)(v198 + 72) * v216], v290, v209);
                v218 = swift_weakLoadStrong(v299);
                if (v218)
                {
                  v219 = v218;
                  v220 = swift_getKeyPath(&unk_10B16A0);
                  v221 = swift_getKeyPath(&unk_10B16C8);
                  v222 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(&v308, v219, v220, v221);
                  v223 = v282;
                  v224 = v296;
                  sub_E80F10(v296, v282);
                  v225 = v223;
                  v198 = v277;
                  sub_56024(v225, &qword_1508780);
                  v222(&v308, 0);
                  swift_release();
                  swift_release();
                  v226 = v224;
                  v199 = v276;
                  v227 = swift_release();
                  (*(void (**)(uint64_t, uint64_t, __n128))(v198 + 8))(v226, v300, v227);
                }
                else
                {
                  (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v296, v209);
                  v200 = v282;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56))(v282, 1, 1, v209);
                  sub_56024(v200, &qword_1508780);
                }
                v101 = v204;
              }
              v201 = *v169;
              v202 = v291;
              v159 = v293;
              dispatch thunk of Collection.endIndex.getter(v293, v167);
              v203 = v201 == v308;
              v119 = (uint64_t)v202;
            }
            while (!v203);
          }
          sub_56024(v119, &qword_150C470);
          v171 = v299;
          swift_beginAccess(v299, &v308, 0, 0);
          v172 = swift_weakLoadStrong(v171);
          v173 = v287;
          if (v172)
          {
            v174 = v172;
            v175 = swift_getKeyPath(&unk_10B1790);
            v176 = swift_getKeyPath(&unk_10B17B8);
            v307 = v173;
            swift_bridgeObjectRetain();
            static Published.subscript.setter((char **)&v307, v174, v175, v176);
          }
          v177 = v299;
          swift_beginAccess(v299, (char **)&v307, 0, 0);
          v178 = swift_weakLoadStrong(v177);
          v179 = v252;
          v180 = v288;
          if (v178)
          {
            v181 = v178;
            v182 = swift_getKeyPath(&unk_10B1748);
            v183 = swift_getKeyPath(&unk_10B1770);
            v306 = v180;
            swift_bridgeObjectRetain();
            static Published.subscript.setter(&v306, v181, v182, v183);
          }
          v184 = v272;
          v185 = v298;
          v186 = (void (*)(char *, uint64_t, uint64_t))v286;
          ((void (*)(char *, uint64_t, uint64_t))v286)(v272, v179, v298);
          v187 = swift_bridgeObjectRetain();
          v188 = Logger.logObject.getter(v187);
          v189 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v188, v189))
          {
            v190 = swift_slowAlloc(12, -1);
            v191 = swift_slowAlloc(32, -1);
            v306 = (_QWORD *)v191;
            *(_DWORD *)v190 = 136315138;
            v192 = swift_bridgeObjectRetain();
            v193 = Array.description.getter(v192, v300);
            v195 = v194;
            swift_bridgeObjectRelease();
            v196 = (char *)v193;
            v179 = v252;
            *(_QWORD *)(v190 + 4) = sub_DCF730(v196, v195, (uint64_t *)&v306);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v180, 2);
            _os_log_impl(&dword_0, v188, v189, "[Management] pendingCollaborators=%s", (uint8_t *)v190, 0xCu);
            swift_arrayDestroy(v191, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v191, -1, -1);
            v197 = v190;
            v186 = (void (*)(char *, uint64_t, uint64_t))v286;
            swift_slowDealloc(v197, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v180, 2);
          }

          v233 = v184;
          v234 = (void (*)(char *, uint64_t, __n128))v280;
          v280(v233, v185);
          v235 = v268;
          v186(v268, v179, v185);
          v236 = v287;
          v237 = swift_bridgeObjectRetain();
          v238 = Logger.logObject.getter(v237);
          v239 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v238, v239))
          {
            v240 = swift_slowAlloc(12, -1);
            v241 = v185;
            v242 = swift_slowAlloc(32, -1);
            v306 = (_QWORD *)v242;
            *(_DWORD *)v240 = 136315138;
            v243 = swift_bridgeObjectRetain();
            v244 = (char *)Array.description.getter(v243, v300);
            v246 = v245;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v240 + 4) = sub_DCF730(v244, v246, (uint64_t *)&v306);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v236, 2);
            _os_log_impl(&dword_0, v238, v239, "[Management] activeCollaborators=%s", (uint8_t *)v240, 0xCu);
            swift_arrayDestroy(v242, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v242, -1, -1);
            swift_slowDealloc(v240, -1, -1);

            v280(v235, v241);
          }
          else
          {

            v247 = swift_bridgeObjectRelease_n(v236, 2);
            v234(v235, v185, v247);
          }
          v101(v274, v283);
          (*(void (**)(char *, uint64_t))(v297 + 8))(v278, v294);
          (*(void (**)(char *, uint64_t))(v301 + 8))(v295, v302);
          sub_56024((uint64_t)v253, &qword_150BDA0);
          v116 = v303;
          goto LABEL_31;
        }
        v122 = v299;
        swift_beginAccess(v299, v305, 0, 0);
        v123 = swift_weakLoadStrong(v122);
        v124 = v262;
        if (v123)
        {
          v125 = v123;
          v126 = swift_getKeyPath(&unk_10B1628);
          swift_getKeyPath(&unk_10B1650);
          v127 = v257;
          static Published.subscript.getter(v257, v125, v126);
          swift_release();
          swift_release();
          *(_QWORD *)&v128 = swift_release().n128_u64[0];
          v129 = (uint64_t)v256;
          Playlist.collaboration.getter(v128);
          (*(void (**)(_QWORD *, uint64_t))(v266 + 8))(v127, v267);
          v130 = v294;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v288)(v129, 1, v294) != 1)
          {
            ((void (*)(void))Playlist.Collaboration.invitationExpirationDate.getter)();
            v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v129, v130);
            v132 = v259;
            v131 = v258;
LABEL_40:
            v134 = v263;
            Playlist.Collaboration.invitationExpirationDate.getter(v133);
            v135 = v261;
            v136 = v261 + *(int *)(v260 + 48);
            sub_5C238(v124, v261, &qword_150BDA8);
            sub_5C238(v134, v136, &qword_150BDA8);
            v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48);
            if (v137(v135, 1, v132) == 1)
            {
              sub_56024(v134, &qword_150BDA8);
              sub_56024(v124, &qword_150BDA8);
              if (v137(v136, 1, v132) == 1)
              {
                sub_56024(v135, &qword_150BDA8);
                goto LABEL_49;
              }
            }
            else
            {
              v138 = v255;
              sub_5C238(v135, v255, &qword_150BDA8);
              if (v137(v136, 1, v132) != 1)
              {
                v139 = v254;
                (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v254, v136, v132);
                v140 = sub_4DD24(&qword_150C4A8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
                LODWORD(v288) = dispatch thunk of static Equatable.== infix(_:_:)(v138, v139, v132, v140);
                v141 = *(void (**)(char *, uint64_t))(v131 + 8);
                v141(v139, v132);
                sub_56024(v263, &qword_150BDA8);
                sub_56024(v262, &qword_150BDA8);
                v141((char *)v138, v132);
                sub_56024(v135, &qword_150BDA8);
                if ((v288 & 1) != 0)
                  goto LABEL_49;
LABEL_47:
                v142 = v299;
                swift_beginAccess(v299, v304, 0, 0);
                v143 = swift_weakLoadStrong(v142);
                if (v143)
                {
                  v144 = v143;
                  v145 = swift_getKeyPath(&unk_10B1868);
                  v146 = swift_getKeyPath(&unk_10B1890);
                  LOBYTE(v308) = 0;
                  static Published.subscript.setter(&v308, v144, v145, v146);
                }
                goto LABEL_49;
              }
              sub_56024(v263, &qword_150BDA8);
              sub_56024(v124, &qword_150BDA8);
              (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v138, v132);
            }
            sub_56024(v135, &qword_150C478);
            goto LABEL_47;
          }
          sub_56024(v129, &qword_150BDA0);
        }
        v131 = v258;
        v132 = v259;
        v133 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v258 + 56))(v124, 1, 1, v259);
        goto LABEL_40;
      }
    }
  }
}

uint64_t sub_E6B1A0()
{
  return sub_1EB958((uint64_t)&unk_10B1748, (uint64_t)&unk_10B1770);
}

uint64_t sub_E6B1B4()
{
  return sub_1EB958((uint64_t)&unk_10B1790, (uint64_t)&unk_10B17B8);
}

uint64_t sub_E6B1C8()
{
  return sub_1EB958((uint64_t)&unk_10B16A0, (uint64_t)&unk_10B16C8);
}

double sub_E6B1DC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10B1628);
  v4 = swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_E6B240()
{
  return sub_1EB9D4((uint64_t)&unk_10B1820, (uint64_t)&unk_10B1848);
}

uint64_t sub_E6B254()
{
  return sub_1EB9D4((uint64_t)&unk_10B1868, (uint64_t)&unk_10B1890);
}

uint64_t sub_E6B268()
{
  return sub_1EB9D4((uint64_t)&unk_10B0FB0, (uint64_t)&unk_10B0FD8);
}

uint64_t sub_E6B27C()
{
  return sub_1EB9D4((uint64_t)&unk_10B17D8, (uint64_t)&unk_10B1800);
}

double sub_E6B290@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B1628);
  v5 = swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_E6B2F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v16 - v9, a1, v4);
  v12 = *a2;
  KeyPath = swift_getKeyPath(&unk_10B1628);
  v14 = swift_getKeyPath(&unk_10B1650);
  v11(v8, (uint64_t)v10, v4);
  swift_retain(v12);
  static Published.subscript.setter(v8, v12, KeyPath, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_E6B3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = type metadata accessor for Playlist.Collaborator.Status(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v30 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BDB8);
  __chkstk_darwin();
  v34 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA0);
  __chkstk_darwin();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDC0);
  __chkstk_darwin();
  v31 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v29 - v11;
  __chkstk_darwin();
  v14 = (char *)&v29 - v13;
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v7, v32, KeyPath);
  swift_release();
  *(_QWORD *)&v16 = swift_release().n128_u64[0];
  Playlist.collaboration.getter(v16);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  v17 = type metadata accessor for Playlist.Collaboration(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_56024((uint64_t)v9, &qword_150BDA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v14, 1, 1, v0);
  }
  else
  {
    Playlist.Collaboration.collaboratorStatus.getter();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaborator.Status.pending(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v19 = v34;
  v20 = v34 + *(int *)(v33 + 48);
  v21 = &qword_150BDC0;
  sub_5C238((uint64_t)v14, v34, &qword_150BDC0);
  sub_5C238((uint64_t)v12, v20, &qword_150BDC0);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v22(v19, 1, v0) == 1)
  {
    sub_56024((uint64_t)v12, &qword_150BDC0);
    sub_56024((uint64_t)v14, &qword_150BDC0);
    if (v22(v20, 1, v0) == 1)
    {
      v23 = -1;
    }
    else
    {
      v21 = &qword_150BDB8;
      v23 = 0;
    }
  }
  else
  {
    v24 = v31;
    sub_5C238(v19, v31, &qword_150BDC0);
    if (v22(v20, 1, v0) == 1)
    {
      sub_56024((uint64_t)v12, &qword_150BDC0);
      sub_56024((uint64_t)v14, &qword_150BDC0);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v24, v0);
      v23 = 0;
      v21 = &qword_150BDB8;
    }
    else
    {
      v25 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v30, v20, v0);
      v26 = sub_4DD24(&qword_150BDC8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v25, v0, v26);
      v27 = *(void (**)(char *, uint64_t))(v1 + 8);
      v27(v25, v0);
      v21 = &qword_150BDC0;
      sub_56024((uint64_t)v12, &qword_150BDC0);
      sub_56024((uint64_t)v14, &qword_150BDC0);
      v27((char *)v24, v0);
    }
  }
  sub_56024(v19, v21);
  return v23 & 1;
}

uint64_t sub_E6B840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10B1820);
  swift_getKeyPath(&unk_10B1848);
  static Published.subscript.getter(&v11, v0, KeyPath);
  swift_release();
  swift_release();
  if (v11 == 1 && (sub_E6BEA0() & 1) == 0)
    return 1;
  v6 = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v4, v0, v6);
  swift_release();
  swift_release();
  v8 = Playlist.isOwner.getter(v7);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if (v8 == 2)
    return 0;
  else
    return v8 & 1;
}

uint64_t sub_E6B980()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_10B17D8);
  swift_getKeyPath(&unk_10B1800);
  static Published.subscript.getter(&v8, v0, KeyPath);
  swift_release();
  swift_release();
  if (v8 == 1)
  {
    v2 = swift_getKeyPath(&unk_10B1748);
    swift_getKeyPath(&unk_10B1770);
    static Published.subscript.getter(&v8, v0, v2);
    swift_release();
    swift_release();
    v3 = v8;
    v4 = swift_getKeyPath(&unk_10B1790);
    swift_getKeyPath(&unk_10B17B8);
    static Published.subscript.getter(&v8, v0, v4);
    swift_release();
    swift_release();
    v5 = v8;
    v8 = v3;
    sub_E68BA4(v5);
  }
  else
  {
    v6 = swift_getKeyPath(&unk_10B1790);
    swift_getKeyPath(&unk_10B17B8);
    static Published.subscript.getter(&v8, v0, v6);
    swift_release();
    swift_release();
  }
  return v8;
}

uint64_t sub_E6BAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v25 - v8;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10B1748);
  swift_getKeyPath(&unk_10B1770);
  static Published.subscript.getter(&v26, v1, KeyPath);
  swift_release();
  swift_release();
  v13 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  v14 = swift_getKeyPath(&unk_10B1790);
  swift_getKeyPath(&unk_10B17B8);
  static Published.subscript.getter(&v26, v1, v14);
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  if (v15 == 1)
  {
    if (!v13)
      return 0;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
    v26 = v13;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v17 = 0xD000000000000012;
    v18 = 0x800000000110E680;
  }
  else if (v13)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2);
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    v26 = v15;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v20._countAndFlagsBits = 0x2064656E696F6A20;
    v20._object = (void *)0xAC00000020A280E2;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
    v26 = v13;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v17 = 0x676E69646E657020;
    v18 = 0xE800000000000000;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    v26 = v15;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v18 = 0x800000000110E660;
    v17 = 0xD000000000000011;
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v17);
  String.LocalizationValue.init(stringInterpolation:)(v11);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v23 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v21 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v23, v3, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  return v21;
}

uint64_t sub_E6BEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __n128 v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD v22[2];

  v0 = type metadata accessor for Playlist(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (_QWORD *)((char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA0);
  __chkstk_darwin();
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA8);
  __chkstk_darwin();
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v22[0] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v22 - v11;
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v3, v22[1], KeyPath);
  swift_release();
  *(_QWORD *)&v14 = swift_release().n128_u64[0];
  Playlist.collaboration.getter(v14);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v15 = type metadata accessor for Playlist.Collaboration(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    sub_56024((uint64_t)v5, &qword_150BDA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  else
  {
    Playlist.Collaboration.invitationExpirationDate.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v18.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      v19 = v22[0];
      Date.init()(v18);
      v17 = static Date.> infix(_:_:)(v19, v12);
      v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v20(v19, v8);
      v20((uint64_t)v12, v8);
      return v17 & 1;
    }
  }
  sub_56024((uint64_t)v7, &qword_150BDA8);
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_E6C138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  double v26;
  void (*v27)(_QWORD *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  __n128 v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  Swift::String v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  char *v72;
  Swift::String v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD v100[2];

  v1 = v0;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v83 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar(0);
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  __chkstk_darwin();
  v91 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DateComponents(0);
  v95 = *(_QWORD *)(v5 - 8);
  v96 = v5;
  __chkstk_darwin();
  v94 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v86 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v88 = *(_QWORD *)(v8 - 8);
  v89 = v8;
  __chkstk_darwin();
  v85 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v87 = (char *)&v81 - v10;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v82 = (uint64_t *)((char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v84 = (uint64_t *)((char *)&v81 - v14);
  __chkstk_darwin();
  v16 = (uint64_t *)((char *)&v81 - v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA0);
  __chkstk_darwin();
  v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA8);
  __chkstk_darwin();
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v90 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v99 = (char *)&v81 - v24;
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  v98 = v1;
  static Published.subscript.getter(v16, v1, KeyPath);
  swift_release();
  *(_QWORD *)&v26 = swift_release().n128_u64[0];
  Playlist.collaboration.getter(v26);
  v27 = *(void (**)(_QWORD *, uint64_t))(v12 + 8);
  v97 = v11;
  v27(v16, v11);
  v28 = type metadata accessor for Playlist.Collaboration(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v18, 1, v28) == 1)
  {
    sub_56024((uint64_t)v18, &qword_150BDA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_56024((uint64_t)v20, &qword_150BDA8);
    return 0;
  }
  Playlist.Collaboration.invitationExpirationDate.getter();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    goto LABEL_4;
  v32 = v21;
  v33 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v99, v20, v21);
  v34 = v98;
  v35 = sub_E6BEA0();
  if ((v35 & 1) == 0)
    goto LABEL_9;
  v36 = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  v37 = v84;
  static Published.subscript.getter(v84, v34, v36);
  swift_release();
  swift_release();
  LOBYTE(v36) = Playlist.isOwner.getter(v38);
  v35 = ((uint64_t (*)(_QWORD *, uint64_t))v27)(v37, v97);
  if ((v36 & 1) != 0)
  {
    v66 = v87;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000069, 0x800000000110E5F0);
    v68 = v88;
    v67 = v89;
    v69 = v85;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v66, v89);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v70 = qword_1583020;
    v71 = (id)qword_1583020;
    v72 = v86;
    static Locale.current.getter(v71);
    v30 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, v70, v72, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v99, v32);
  }
  else
  {
LABEL_9:
    v39 = v91;
    static Calendar.autoupdatingCurrent.getter(v35);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BDB0);
    v41 = type metadata accessor for Calendar.Component(0);
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(unsigned __int8 *)(v42 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(v40, v44 + *(_QWORD *)(v42 + 72), v43 | 7);
    *(_OWORD *)(v45 + 16) = xmmword_105B360;
    v46 = v45 + v44;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v42 + 104))(v46, enum case for Calendar.Component.day(_:), v41);
    v47 = sub_DD1AC8(v45);
    swift_setDeallocating(v45);
    swift_arrayDestroy(v46, 1, v41);
    v48 = swift_deallocClassInstance(v45, 32, 7);
    v49 = v90;
    Date.init()(v48);
    v50 = v94;
    v51 = v99;
    Calendar.dateComponents(_:from:to:)(v47, v49, v99);
    v52 = v21;
    v53 = swift_bridgeObjectRelease();
    v54 = *(void (**)(char *, uint64_t, __n128))(v33 + 8);
    v54(v49, v21, v53);
    v55 = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v39, v93);
    v56 = DateComponents.day.getter(v55);
    if ((v57 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v96);
      ((void (*)(char *, uint64_t))v54)(v51, v21);
      return 0;
    }
    v58 = v56;
    v59 = swift_getKeyPath(&unk_10B1628);
    swift_getKeyPath(&unk_10B1650);
    v60 = v82;
    static Published.subscript.getter(v82, v98, v59);
    swift_release();
    swift_release();
    LOBYTE(v59) = Playlist.isOwner.getter(v61);
    v27(v60, v97);
    if ((v59 & 1) != 0)
    {
      v62 = v83;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(124, 1);
      v73._object = (void *)0x800000000110E560;
      v73._countAndFlagsBits = 0xD000000000000010;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v73);
      v100[0] = v58;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v100, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v64 = 0xD00000000000006CLL;
      v65 = 0x800000000110E580;
    }
    else
    {
      v62 = v83;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
      v63._object = (void *)0x800000000110E560;
      v63._countAndFlagsBits = 0xD000000000000010;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v63);
      v100[0] = v58;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v100, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v64 = 0x2E29732879616420;
      v65 = 0xE800000000000000;
    }
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v64);
    v74 = v87;
    String.LocalizationValue.init(stringInterpolation:)(v62);
    v76 = v88;
    v75 = v89;
    v77 = v85;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v74, v89);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v78 = qword_1583020;
    v79 = (id)qword_1583020;
    v80 = v86;
    static Locale.current.getter(v79);
    v30 = String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v78, v80, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v96);
    ((void (*)(char *, uint64_t))v54)(v51, v52);
  }
  return v30;
}

uint64_t sub_E6C9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA0);
  __chkstk_darwin();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_E6BEA0() & 1) != 0)
  {
    v9 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_10B1628);
    swift_getKeyPath(&unk_10B1650);
    static Published.subscript.getter(v6, v1, KeyPath);
    swift_release();
    *(_QWORD *)&v12 = swift_release().n128_u64[0];
    Playlist.collaboration.getter(v12);
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    v13 = type metadata accessor for Playlist.Collaboration(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      sub_56024((uint64_t)v8, &qword_150BDA0);
      v15 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    }
  }
}

void sub_E6CB94(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];

  __swift_instantiateConcreteTypeFromMangledName(&qword_150B1D8);
  __chkstk_darwin();
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v6 = &v10[-v5];
  v7 = v1
     + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, v11, 0, 0);
  sub_5C238(v7, (uint64_t)v6, &qword_150B1D8);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_56024((uint64_t)v6, &qword_150B1D8);
    sub_E6CD18(v1, a1);
    sub_5C238((uint64_t)a1, (uint64_t)v4, (uint64_t *)&unk_150CEE0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
    swift_beginAccess(v7, v10, 33, 0);
    sub_5C1F4((uint64_t)v4, v7, &qword_150B1D8);
    swift_endAccess(v10);
  }
  else
  {
    sub_5C090((uint64_t)v6, (uint64_t)a1, (uint64_t *)&unk_150CEE0);
  }
}

uint64_t sub_E6CD18@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;

  v28 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin();
  v27 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v26 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v25 - v13;
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v9, a1, KeyPath);
  swift_release();
  swift_release();
  _s8MusicKit8PlaylistV0A11ApplicationE12storyArtworkAA0F0VSgvg_0();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_56024((uint64_t)v5, (uint64_t *)&unk_150CB40);
    v16 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v28, 1, 1, v16);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v14, v5, v10);
    v19 = v26;
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v26, v14, v10);
    v21 = (uint64_t)v27;
    static Artwork.CropStyle.boundedBox.getter(v20);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v22 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
    v23 = v28;
    v18(v28, v19, v10);
    v24 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_5C090(v21, (uint64_t)&v23[*(int *)(v24 + 20)], &qword_15070F0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
}

uint64_t sub_E6CFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  v6 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_E6D038, 0, 0);
}

uint64_t sub_E6D038()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = *(_QWORD **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_14FEA34);
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_E6D0FC;
  return Collaboration.Manager.updateShareOption(_:for:)(*(_BYTE *)(v0 + 80), *(_QWORD *)(v0 + 48));
}

uint64_t sub_E6D0FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 48);
  v7 = v2 + 32;
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v7 + 8);
  if (v0)
  {
    swift_release();
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = sub_E8924C;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_release();
    v8 = sub_E6D1B0;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_E6D1B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 72) != 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_E6D1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  double result;
  _QWORD v21[4];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_13CAFA0, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain();
  if (v8 == 1)
  {
    sub_56024((uint64_t)v3, &qword_15085D0);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v14);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v17;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v18 = swift_allocObject(&unk_13CAFC8, 32, 7);
  *(_QWORD *)(v18 + 16) = &unk_150BD90;
  *(_QWORD *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v10;
    v21[3] = v11;
  }
  else
  {
    v19 = 0;
  }
  swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_1508848, v18);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E6D3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for Playlist(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[5] = swift_task_alloc(v7);
  v4[6] = swift_task_alloc(v7);
  return swift_task_switch(sub_E6D438, 0, 0);
}

uint64_t sub_E6D438()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = (_QWORD *)v0[5];
  v2 = v0[2];
  v0[7] = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_14FEA0C);
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_E6D4F8;
  return Collaboration.Manager.end(_:)(v0[6], v0[5]);
}

uint64_t sub_E6D4F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  void (*v11)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    v4 = sub_E6D5EC;
  }
  else
  {
    v6 = v2[5];
    v5 = v2[6];
    v9 = v2 + 3;
    v7 = v2[3];
    v8 = v9[1];
    v10 = swift_release();
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
    v11(v6, v7, v10);
    ((void (*)(uint64_t, uint64_t))v11)(v5, v7);
    v4 = sub_E6D5B4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_E6D5B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E6D5EC()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v0[10] = *(_QWORD *)(v0[2] + 16);
  v1 = type metadata accessor for MainActor(0);
  v2 = swift_retain();
  v0[11] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_E6D668, v3, v4);
}

uint64_t sub_E6D668()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_E6D6B8, 0, 0);
}

uint64_t sub_E6D6B8()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E6D6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for Playlist(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v4[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[7] = v8;
  v4[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_E6D780, 0, 0);
}

uint64_t sub_E6D780()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = (_QWORD *)v0[5];
  v2 = v0[2];
  v0[9] = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_14FEA2C);
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_E6D844;
  return Collaboration.Manager.resetInvitationURL(_:)(v0[8], v0[5]);
}

uint64_t sub_E6D844()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    v4 = sub_E6D94C;
  }
  else
  {
    v6 = v2[7];
    v5 = v2[8];
    v8 = v2[5];
    v7 = v2[6];
    v11 = v2 + 3;
    v9 = v2[3];
    v10 = v11[1];
    v12 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v8, v9, v12);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v4 = sub_E6D910;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_E6D910()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E6D94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  KeyPath = swift_getKeyPath(&unk_10B1868);
  v3 = swift_getKeyPath(&unk_10B1890);
  *(_BYTE *)(v0 + 112) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 112, v1, KeyPath, v3);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for MainActor(0);
  v5 = swift_retain();
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_E6DA14, v6, v7);
}

uint64_t sub_E6DA14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_E6DA64, 0, 0);
}

uint64_t sub_E6DA64()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E6DAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t result;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
  __chkstk_darwin();
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v20 - v11;
  sub_5C238(a1, (uint64_t)v6, &qword_1508780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_56024((uint64_t)v6, &qword_1508780);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x73736F7020746F4ELL, 0xEC000000656C6269, "MusicCoreUI/CollaborationUI.swift", 33, 2, 211, 0);
    __break(1u);
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v12, v6, v7);
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 40) & ~v15;
    v17 = (char *)swift_allocObject(&unk_13CAF78, v16 + v9, v15 | 7);
    *((_QWORD *)v17 + 2) = 0;
    *((_QWORD *)v17 + 3) = 0;
    *((_QWORD *)v17 + 4) = v1;
    v13(&v17[v16], v10, v7);
    swift_retain();
    sub_E08E7C((uint64_t)v4, (uint64_t)&unk_150BD80, (uint64_t)v17);
    v18 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v18);
  }
  return result;
}

uint64_t sub_E6DCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for Playlist(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[6] = swift_task_alloc(v8);
  v5[7] = swift_task_alloc(v8);
  return swift_task_switch(sub_E6DD6C, 0, 0);
}

uint64_t sub_E6DD6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = (_QWORD *)v0[6];
  v2 = v0[2];
  v0[8] = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_14FEA24);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_E6DE30;
  return Collaboration.Manager.remove(collaborator:in:)(v0[7], v0[3], v0[6]);
}

uint64_t sub_E6DE30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  void (*v11)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[5] + 8))(v2[6], v2[4]);
    swift_release();
    v4 = sub_E6DF24;
  }
  else
  {
    v6 = v2[6];
    v5 = v2[7];
    v9 = v2 + 4;
    v7 = v2[4];
    v8 = v9[1];
    v10 = swift_release();
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
    v11(v6, v7, v10);
    ((void (*)(uint64_t, uint64_t))v11)(v5, v7);
    v4 = sub_E6DEEC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_E6DEEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E6DF24()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v0[11] = *(_QWORD *)(v0[2] + 16);
  v1 = type metadata accessor for MainActor(0);
  v2 = swift_retain();
  v0[12] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_E6DFA0, v3, v4);
}

uint64_t sub_E6DFA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_E6DFF0, 0, 0);
}

uint64_t sub_E6DFF0()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_E6E030(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  uint64_t KeyPath;
  uint64_t v16;
  void (*v17)(_BYTE *, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _BYTE v27[32];

  v3 = v2;
  v24 = a1;
  v26 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v23 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  v14(v10, a1, v7, v11);
  KeyPath = swift_getKeyPath(&unk_10B16A0);
  v16 = swift_getKeyPath(&unk_10B16C8);
  v17 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v27, v3, KeyPath, v16);
  sub_E7F8E8((uint64_t)v13, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v17(v27, 0);
  swift_release();
  swift_release();
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  ((void (*)(char *, uint64_t, uint64_t))v14)(v13, v24, v7);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 41) & ~v19;
  v21 = swift_allocObject(&unk_13CAF28, v20 + v9, v19 | 7);
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 32) = v25;
  *(_BYTE *)(v21 + 40) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, v13, v7);
  swift_retain();
  sub_E08E7C((uint64_t)v6, (uint64_t)&unk_150BD48, v21);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E6E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a6;
  v7 = type metadata accessor for Playlist.Collaborator(0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 40) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  *(_QWORD *)(v6 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v6 + 72) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 80) = v12;
  *(_QWORD *)(v6 + 88) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_E6E2F0, 0, 0);
}

uint64_t sub_E6E2F0()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  _QWORD *v5;

  v1 = *(_QWORD **)(v0 + 88);
  v2 = *(_BYTE *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v3 + 16);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  swift_retain();
  static Published.subscript.getter(v1, v3, KeyPath);
  swift_release();
  swift_release();
  v5 = (_QWORD *)swift_task_alloc(dword_14FEA14);
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_E6E3BC;
  return Collaboration.Manager.moderate(_:collaborator:in:)(v2 & 1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 88));
}

uint64_t sub_E6E3BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 72);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  if (v0)
    return swift_task_switch(sub_E6E47C, 0, 0);
  v8 = *(_QWORD *)(v6 + 56);
  v9 = *(_QWORD *)(v6 + 64);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_E6E47C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[7];
  v1 = v0[8];
  v4 = v0[5];
  v3 = v0[6];
  v5 = v0[3];
  v6 = v0[4];
  v7 = v0[2];
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v6);
  v9 = type metadata accessor for MainActor(0);
  v10 = swift_retain();
  v11 = static MainActor.shared.getter(v10);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_13CAF50, v13 + v3, v12 | 7);
  *((_QWORD *)v14 + 2) = v11;
  *((_QWORD *)v14 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v14 + 4) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v14[v13], v2, v6);
  sub_E08FE4(v1, (uint64_t)&unk_150BD58, (uint64_t)v14);
  swift_release();
  v0[15] = *(_QWORD *)(v7 + 16);
  v15 = swift_retain();
  v0[16] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_E6E5CC, v16, v17);
}

uint64_t sub_E6E5CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_E6E61C, 0, 0);
}

uint64_t sub_E6E61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E6E668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_E6E6D8, v8, v9);
}

uint64_t sub_E6E6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_10B16A0);
  v5 = swift_getKeyPath(&unk_10B16C8);
  v6 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 16, v2, KeyPath, v5);
  sub_E80F10(v1, v3);
  v6(v0 + 16, 0);
  swift_release();
  v7 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t Collaboration.Management.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B178);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators, v2);
  v4 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B190);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity, v9);
  sub_56024(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, &qword_150B1D8);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

double Collaboration.Management.Model.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  Collaboration.Management.Model.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_E6E924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Collaboration.Management.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t Collaboration.Management.View.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v4 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath(&unk_10B0F20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  *v7 = swift_getKeyPath(&unk_10B0F50);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (uint64_t *)((char *)a2 + v4[7]);
  *v9 = swift_getKeyPath(&unk_10B0F80);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = v4[8];
  v25 = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B200);
  State.init(wrappedValue:)(&v26, &v25, v12);
  *(_OWORD *)((char *)a2 + v11) = v26;
  v13 = (char *)a2 + v4[9];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v14 = *((_QWORD *)&v26 + 1);
  *v13 = v26;
  *((_QWORD *)v13 + 1) = v14;
  v15 = (char *)a2 + v4[10];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v16 = *((_QWORD *)&v26 + 1);
  *v15 = v26;
  *((_QWORD *)v15 + 1) = v16;
  v17 = (char *)a2 + v4[11];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v18 = *((_QWORD *)&v26 + 1);
  *v17 = v26;
  *((_QWORD *)v17 + 1) = v18;
  v19 = (char *)a2 + v4[12];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v20 = *((_QWORD *)&v26 + 1);
  *v19 = v26;
  *((_QWORD *)v19 + 1) = v20;
  v21 = type metadata accessor for Collaboration.Management.Model(0);
  v22 = sub_4DD24(&qword_150B208, type metadata accessor for Collaboration.Management.Model, (uint64_t)&protocol conformance descriptor for Collaboration.Management.Model);
  result = ObservedObject.init(wrappedValue:)(a1, v21, v22);
  *a2 = result;
  a2[1] = v24;
  return result;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.shareSheet(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B200);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.viewModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Collaboration.Management.Model(0);
  v3 = sub_4DD24(&qword_150B208, type metadata accessor for Collaboration.Management.Model, (uint64_t)&protocol conformance descriptor for Collaboration.Management.Model);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v2 = v1;
  v28 = a1;
  v26 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v3 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B210);
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B218);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150B220);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150B228);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150B230);
  v10 = type metadata accessor for InsetGroupedListStyle(255);
  v11 = sub_E8222C();
  v31 = v9;
  v32 = v10;
  v33 = v11;
  v34 = &protocol witness table for InsetGroupedListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v31, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150B260);
  v14 = sub_5C150(&qword_150CF80, (uint64_t *)&unk_150B260, (uint64_t)&protocol conformance descriptor for Button<A>);
  v31 = v13;
  v32 = v14;
  v15 = swift_getOpaqueTypeConformance2(&v31, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v31 = v7;
  v32 = v8;
  v33 = OpaqueTypeConformance2;
  v34 = (void *)v15;
  v16 = swift_getOpaqueTypeConformance2(&v31, &opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>, 1);
  NavigationStack.init<>(root:)(sub_E82224, v29, v25, v16);
  v17 = *(_QWORD *)(v2 + 8);
  KeyPath = swift_getKeyPath(&unk_10B0FB0);
  swift_getKeyPath(&unk_10B0FD8);
  static Published.subscript.getter(&v31, v17, KeyPath);
  swift_release();
  swift_release();
  sub_5BDB8(v2, (uint64_t)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v19 = *(unsigned __int8 *)(v26 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_13CAC30, v20 + v3, v19 | 7);
  sub_5C04C((uint64_t)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for Collaboration.Management.View);
  v22 = sub_5C150(&qword_150B270, &qword_150B210, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.onChange<A>(of:initial:_:)(&v31, 0, sub_E82314, v21, v4, &type metadata for Bool, v22, &protocol witness table for Bool);
  v23 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v27 + 8))(v6, v4, v23);
}

uint64_t sub_E6EEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  __n128 v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t OpaqueTypeConformance2;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77[16];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;

  v75 = a2;
  v66 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v68 = v3;
  v70 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v62 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for String.LocalizationValue(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v76 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v59 = (char *)&v57 - v6;
  v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v67 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v65 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B228);
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  __chkstk_darwin();
  v71 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InsetGroupedListStyle(0);
  v58 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B248);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B230);
  __chkstk_darwin();
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B220);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = a1;
  v78 = a1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BF78);
  v23 = sub_5C150(&qword_150BF80, &qword_150BF78, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_E87614, v77, v22, v23);
  KeyPath = swift_getKeyPath(&unk_10B1958);
  if (qword_15062B0 != -1)
    swift_once(&qword_15062B0, sub_E7793C);
  v25 = qword_150B0B8;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v16, v13);
  v26 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *v26 = KeyPath;
  v26[1] = v25;
  v27 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  InsetGroupedListStyle.init()(v27);
  v28 = sub_E8222C();
  View.listStyle<A>(_:)(v12, v17, v10, v28, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v10);
  sub_56024((uint64_t)v19, &qword_150B230);
  v29 = v59;
  String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v30 = v60;
  v31 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v76, v29, v61);
  v32 = v21;
  v33 = v29;
  v34 = v17;
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v35 = qword_1583020;
  v36 = (id)qword_1583020;
  v37 = v62;
  static Locale.current.getter(v36);
  v38 = String.init(localized:table:bundle:locale:comment:)(v76, 0, 0, v35, v37, 0, 0, 256);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v31);
  v79 = v38;
  v80 = v40;
  v41 = v70;
  sub_5BDB8(v69, v70, type metadata accessor for Collaboration.Management.View);
  v42 = *(unsigned __int8 *)(v66 + 80);
  v43 = (v42 + 16) & ~v42;
  v44 = swift_allocObject(&unk_13CB068, v43 + v68, v42 | 7);
  sub_5C04C(v41, v44 + v43, type metadata accessor for Collaboration.Management.View);
  v45 = sub_DD0BF8();
  v46 = v65;
  v47.n128_f64[0] = Button<>.init<A>(_:action:)(&v79, sub_E87824, v44, &type metadata for String, v45);
  v48 = static Font.Weight.semibold.getter(v47);
  v49 = sub_5C150(&qword_150CF80, (uint64_t *)&unk_150B260, (uint64_t)&protocol conformance descriptor for Button<A>);
  v51 = v71;
  v50 = v72;
  View.fontWeight(_:)(*(_QWORD *)&v48, 0, v72, v49);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v50);
  v79 = v34;
  v80 = v10;
  v81 = v28;
  v82 = &protocol witness table for InsetGroupedListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v79 = v50;
  v80 = v49;
  v53 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v54 = v74;
  v55 = v64;
  View.navigationBarItems<A>(trailing:)(v51, v64, v74, OpaqueTypeConformance2, v53);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v32, v55);
}

uint64_t sub_E6F4E0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (**v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  unint64_t v39;
  void (**v40)(char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(void (**)(char *, uint64_t), char *, uint64_t);
  void (**v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, void (**)(char *, uint64_t), uint64_t);
  void (**v129)(char *, uint64_t);
  void (**v130)(char *, uint64_t);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(_QWORD, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (**v163)(char *, uint64_t);
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176[8];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  _QWORD v182[2];
  char v183;
  uint64_t v184;

  v171 = a2;
  v166 = type metadata accessor for Playlist(0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin();
  v164 = (uint64_t *)((char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BF88);
  __chkstk_darwin();
  v170 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v169 = (char *)&v138 - v5;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BF90);
  v143 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v144 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v141 = (char *)&v138 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BF98);
  __chkstk_darwin();
  v142 = (uint64_t)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v149 = (uint64_t)&v138 - v9;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v150 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for String.LocalizationValue(0);
  v155 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin();
  v161 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v160 = (char *)&v138 - v12;
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFA0);
  v153 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v140 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v139 = (char *)&v138 - v14;
  __chkstk_darwin();
  v151 = (char *)&v138 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
  __chkstk_darwin();
  v146 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Playlist.Collaborator(0);
  v152 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin();
  v147 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BFA8);
  __chkstk_darwin();
  v168 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin();
  v174 = (uint64_t)&v138 - v20;
  v175 = type metadata accessor for Prominence(0, v19);
  v163 = *(void (***)(char *, uint64_t))(v175 - 8);
  __chkstk_darwin();
  v22 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFB0);
  __chkstk_darwin();
  v24 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFB8);
  v159 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin();
  v26 = (char *)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFC0);
  v172 = *(_QWORD *)(v27 - 8);
  v173 = v27;
  __chkstk_darwin();
  v167 = (char *)&v138 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v30 = (char *)&v138 - v29;
  __chkstk_darwin();
  v32 = (void (**)(char *, uint64_t))((char *)&v138 - v31);
  v177 = a1;
  sub_E72DC0(a1, (uint64_t)v24);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFC8);
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFD0);
  v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFD8);
  v35 = sub_E87840();
  v36 = sub_3D38D0(&qword_150C008, &qword_150BFD8, (void (*)(void))sub_E878DC);
  v178 = v33;
  v179 = v34;
  v180 = v35;
  v181 = v36;
  v37 = a1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
  v39 = sub_E87980();
  Section<>.init(header:content:)(v24, sub_E87838, v176, v157, v156, OpaqueTypeConformance2, v39);
  v40 = v163;
  v41 = v175;
  ((void (*)(char *, _QWORD, uint64_t))v163[13])(v22, enum case for Prominence.increased(_:), v175);
  v42 = sub_E879FC();
  v43 = v158;
  View.headerProminence(_:)(v22, v158, v42);
  v40[1](v22, v41);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v26, v43);
  v44 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v172 + 32);
  v163 = v32;
  v45 = v32;
  v46 = v174;
  v44(v45, v30, v173);
  v175 = v37;
  v47 = *(_QWORD *)(v37 + 8);
  if ((sub_E6B3FC() & 1) == 0)
    goto LABEL_7;
  KeyPath = swift_getKeyPath(&unk_10B1748);
  swift_getKeyPath(&unk_10B1770);
  static Published.subscript.getter(&v178, v47, KeyPath);
  swift_release();
  v49 = swift_release();
  if (*(_QWORD *)(v178 + 16))
  {
    v50 = v152;
    v51 = (uint64_t)v146;
    v52 = v154;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v152 + 16))(v146, v178 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80)), v154, v49);
    v53 = 0;
    v54 = v155;
  }
  else
  {
    v53 = 1;
    v54 = v155;
    v52 = v154;
    v50 = v152;
    v51 = (uint64_t)v146;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, v53, 1, v52);
  v55 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v50 + 48))(v51, 1, v52, v55) == 1)
  {
    sub_56024(v51, &qword_1508780);
    v46 = v174;
LABEL_7:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C060);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v46, 1, 1, v56);
    v57 = (uint64_t)v168;
    v58 = (uint64_t)v169;
    goto LABEL_14;
  }
  v59 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v147, v51, v52);
  __chkstk_darwin();
  v136 = (uint64_t)v59;
  v137 = v175;
  v60 = v160;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000000110E6A0);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v161, v60, v162);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v61 = qword_1583020;
  v62 = (id)qword_1583020;
  v63 = v150;
  static Locale.current.getter(v62);
  v64 = String.init(localized:table:bundle:locale:comment:)(v161, 0, 0, v61, v63, 0, 0, 256);
  v66 = v65;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v160, v162);
  v178 = v64;
  v179 = v66;
  v67 = sub_DD0BF8();
  v178 = Text.init<A>(_:)(&v178, &type metadata for String, v67);
  v179 = v68;
  LOBYTE(v180) = v69 & 1;
  v181 = v70;
  v71 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v72 = sub_4DD24(&qword_150C0A8, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10B15D8);
  v73 = v139;
  Section<>.init(header:content:)(&v178, sub_E87B78, &v138 - 4, &type metadata for Text, v71, &protocol witness table for Text, v72);
  (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v151, v73, v148);
  v74 = *(_QWORD *)(v175 + 8);
  v75 = swift_getKeyPath(&unk_10B17D8);
  swift_getKeyPath(&unk_10B1800);
  static Published.subscript.getter(&v178, v74, v75);
  swift_release();
  swift_release();
  if (v178 == 1)
  {
    __chkstk_darwin();
    v136 = v175;
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0D0);
    v77 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C0D8);
    v78 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C0E0);
    v79 = type metadata accessor for BorderlessButtonStyle(255);
    v80 = sub_5C150(&qword_150C0E8, &qword_150C0E0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v81 = sub_4DD24(&qword_150C0F0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v178 = v78;
    v179 = v79;
    v180 = v80;
    v181 = v81;
    v82 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v178 = v77;
    v179 = v82;
    v83 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    v84 = v149;
    Section<>.init(content:)(sub_E87C14, &v138 - 4, v76, v83);
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0B0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 0, 1, v85);
  }
  else
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0B0);
    v84 = v149;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v149, 1, 1, v86);
  }
  v57 = (uint64_t)v168;
  __chkstk_darwin();
  v136 = v175;
  sub_E76BC0(v175, (uint64_t)&v178);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0B8);
  v88 = sub_E87B98();
  v89 = v141;
  Section<>.init(header:content:)(&v178, sub_E87B90, &v138 - 4, &type metadata for Text, v87, &protocol witness table for Text, v88);
  v90 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
  v91 = v140;
  v92 = v148;
  v90(v140, v151, v148);
  v93 = v142;
  sub_5C238(v84, v142, &qword_150BF98);
  v94 = v143;
  v95 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  v96 = v144;
  v97 = v145;
  v95(v144, v89, v145);
  v90((char *)v57, v91, v92);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0C8);
  sub_5C238(v93, v57 + *(int *)(v98 + 48), &qword_150BF98);
  v95((char *)(v57 + *(int *)(v98 + 64)), v96, v97);
  v99 = *(void (**)(char *, uint64_t))(v94 + 8);
  v99(v89, v97);
  sub_56024(v149, &qword_150BF98);
  v100 = *(void (**)(char *, uint64_t))(v153 + 8);
  v100(v151, v92);
  v99(v96, v97);
  sub_56024(v93, &qword_150BF98);
  v100(v91, v92);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C060);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v57, 0, 1, v101);
  v46 = v174;
  sub_5C090(v57, v174, &qword_150BFA8);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v147, v154);
  v58 = (uint64_t)v169;
LABEL_14:
  v102 = *(_QWORD *)(v175 + 8);
  v103 = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  v104 = v164;
  static Published.subscript.getter(v164, v102, v103);
  swift_release();
  swift_release();
  LOBYTE(v102) = Playlist.isOwner.getter(v105);
  (*(void (**)(_QWORD *, uint64_t))(v165 + 8))(v104, v166);
  if ((v102 & 1) != 0
    && (v106 = *(_QWORD *)(v175 + 8),
        v107 = swift_getKeyPath(&unk_10B17D8),
        swift_getKeyPath(&unk_10B1800),
        static Published.subscript.getter(&v178, v106, v107),
        swift_release(),
        swift_release(),
        v178 == 1))
  {
    __chkstk_darwin();
    v136 = v175;
    v108 = v160;
    String.LocalizationValue.init(stringLiteral:)(0x704F206572616853, 0xED0000736E6F6974);
    v109 = v155;
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v161, v108, v162);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v110 = qword_1583020;
    v111 = (id)qword_1583020;
    v112 = v150;
    static Locale.current.getter(v111);
    v113 = String.init(localized:table:bundle:locale:comment:)(v161, 0, 0, v110, v112, 0, 0, 256);
    v115 = v114;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v160, v162);
    v178 = v113;
    v179 = v115;
    v116 = sub_DD0BF8();
    v182[0] = Text.init<A>(_:)(&v178, &type metadata for String, v116);
    v182[1] = v117;
    v183 = v118 & 1;
    v184 = v119;
    sub_E771B4(v175, (uint64_t)&v178);
    v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C078);
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C080);
    v122 = sub_5C150(&qword_150C088, &qword_150C078, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v123 = sub_E87AE8();
    Section<>.init(header:footer:content:)(v182, &v178, sub_E87AE0, &v138 - 4, &type metadata for Text, v120, v121, &protocol witness table for Text, v122, v123);
    v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C068);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v58, 0, 1, v124);
  }
  else
  {
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C068);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v58, 1, 1, v125);
  }
  v126 = v172;
  v127 = v173;
  v128 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v172 + 16);
  v129 = v167;
  v130 = v163;
  v128(v167, v163, v173);
  sub_5C238(v46, v57, &qword_150BFA8);
  v131 = v170;
  sub_5C238(v58, v170, &qword_150BF88);
  v132 = v171;
  v128((char *)v171, (void (**)(char *, uint64_t))v129, v127);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C070);
  sub_5C238(v57, v132 + *(int *)(v133 + 48), &qword_150BFA8);
  sub_5C238(v131, v132 + *(int *)(v133 + 64), &qword_150BF88);
  sub_56024(v58, &qword_150BF88);
  sub_56024(v174, &qword_150BFA8);
  v134 = *(void (**)(_QWORD, uint64_t))(v126 + 8);
  v134(v130, v127);
  sub_56024(v131, &qword_150BF88);
  sub_56024(v57, &qword_150BFA8);
  return ((uint64_t (*)(_QWORD, uint64_t))v134)(v129, v127);
}

uint64_t sub_E7062C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150BFC8);
  __chkstk_darwin();
  v88 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v81 = v5;
  v83 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0B8);
  v85 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin();
  v86 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin();
  v84 = (char *)&v74 - v8;
  v9 = type metadata accessor for AccessibilityChildBehavior(0, v7);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  __chkstk_darwin();
  v76 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C2C8);
  __chkstk_darwin();
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C2D0);
  __chkstk_darwin();
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C2D8);
  __chkstk_darwin();
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C2E0);
  __chkstk_darwin();
  v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C2E8);
  v89 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin();
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v79 = (char *)&v74 - v24;
  v90 = a1;
  if ((sub_E6B3FC() & 1) != 0)
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C050);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a2, 1, 1, v26);
  }
  else
  {
    v75 = a2;
    *(_QWORD *)v12 = static VerticalAlignment.center.getter(v25);
    *((_QWORD *)v12 + 1) = 0x4028000000000000;
    v12[16] = 0;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C2F0);
    v29 = sub_E70D24(v90, (uint64_t)&v12[*(int *)(v28 + 44)]);
    v30 = static Edge.Set.horizontal.getter(v29);
    v31 = v30;
    v32 = EdgeInsets.init(_all:)(v30, 20.0);
    v34 = v33;
    v36 = v35;
    v38 = v37;
    sub_5C238((uint64_t)v12, (uint64_t)v15, &qword_150C2C8);
    v39 = &v15[*(int *)(v13 + 36)];
    *v39 = v31;
    *((double *)v39 + 1) = v32;
    *((_QWORD *)v39 + 2) = v34;
    *((_QWORD *)v39 + 3) = v36;
    *((_QWORD *)v39 + 4) = v38;
    v39[40] = 0;
    sub_56024((uint64_t)v12, &qword_150C2C8);
    if (qword_1506020 != -1)
      swift_once(&qword_1506020, sub_DD0094);
    v74 = static EdgeInsets.zero;
    v40 = qword_1583258;
    v41 = unk_1583260;
    sub_5C238((uint64_t)v15, (uint64_t)v18, &qword_150C2D0);
    v42 = &v18[*(int *)(v16 + 36)];
    *(_OWORD *)v42 = v74;
    *((_QWORD *)v42 + 2) = v40;
    *((_QWORD *)v42 + 3) = v41;
    v42[32] = 0;
    v43 = sub_56024((uint64_t)v15, &qword_150C2D0);
    v44 = static HorizontalAlignment.listRowSeparatorLeading.getter(v43);
    sub_5C238((uint64_t)v18, (uint64_t)v21, &qword_150C2D8);
    v45 = (uint64_t *)&v21[*(int *)(v19 + 36)];
    *v45 = v44;
    v45[1] = (uint64_t)sub_41EF40;
    v45[2] = 0;
    v46 = sub_56024((uint64_t)v18, &qword_150C2D8);
    v47 = v76;
    static AccessibilityChildBehavior.combine.getter(v46);
    v48 = sub_E871DC(&qword_150C2F8, &qword_150C2E0, (void (*)(void))sub_E88378, (void (*)(void))sub_E88480);
    View.accessibilityElement(children:)(v47, v19, v48);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v78);
    sub_56024((uint64_t)v21, &qword_150C2E0);
    v49 = v89;
    v50 = v79;
    v51 = v82;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v79, v23, v82);
    v52 = v90;
    v91 = sub_E6B980();
    v53 = v83;
    sub_5BDB8(v52, v83, type metadata accessor for Collaboration.Management.View);
    v54 = *(unsigned __int8 *)(v80 + 80);
    v55 = (v54 + 16) & ~v54;
    v56 = swift_allocObject(&unk_13CB2C0, v55 + v81, v54 | 7);
    sub_5C04C(v53, v56 + v55, type metadata accessor for Collaboration.Management.View);
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B160);
    v58 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
    v59 = sub_5C150(&qword_150C118, &qword_150B160, (uint64_t)&protocol conformance descriptor for [A]);
    v60 = sub_4DD24(&qword_150C0A8, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10B15D8);
    v61 = sub_4DD24(&qword_150C120, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v62 = v84;
    ForEach<>.init(_:content:)(&v91, sub_E87D58, v56, v57, &type metadata for MusicItemID, v58, v59, v60, v61);
    v63 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v64 = v50;
    v63(v23, v50, v51);
    v66 = v85;
    v65 = v86;
    v67 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
    v68 = v87;
    v67(v86, v62, v87);
    v69 = (uint64_t)v88;
    v63(v88, v23, v51);
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C320);
    v67((char *)(v69 + *(int *)(v70 + 48)), v65, v68);
    v71 = *(void (**)(char *, uint64_t))(v66 + 8);
    v71(v62, v68);
    v72 = *(void (**)(char *, uint64_t))(v89 + 8);
    v72(v64, v51);
    v71(v65, v68);
    v72(v23, v51);
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C050);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v69, 0, 1, v73);
    return sub_5C090(v69, v75, &qword_150BFC8);
  }
}

uint64_t sub_E70D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  __n128 v106;
  double v107;
  unint64_t v108;
  char *v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _OWORD *v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t OpaqueTypeConformance2;
  char *v162;
  uint64_t v163;
  __n128 v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unsigned __int8 v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  uint64_t v257;

  v237 = a2;
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCE8);
  __chkstk_darwin();
  v4 = (char *)&v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v6 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Management.View(0);
  v197 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v198 = v8;
  v199 = (uint64_t)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v202 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin();
  v200 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C328);
  __chkstk_darwin();
  v203 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C330);
  v207 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin();
  v206 = (char *)&v184 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C338);
  __chkstk_darwin();
  v211 = (char *)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C340);
  __chkstk_darwin();
  v212 = (uint64_t)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C348);
  __chkstk_darwin();
  v235 = (char *)&v184 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C350);
  __chkstk_darwin();
  v214 = (uint64_t)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C358);
  __chkstk_darwin();
  v215 = (char *)&v184 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C360);
  v218 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin();
  v217 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C368);
  v223 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin();
  v222 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v220 = (char *)&v184 - v19;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v193 = (char *)&v184 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for String.LocalizationValue(0);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin();
  v192 = (char *)&v184 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v194 = (char *)&v184 - v22;
  v191 = type metadata accessor for Playlist(0);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin();
  v189 = (uint64_t *)((char *)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C370);
  __chkstk_darwin();
  v236 = (uint64_t *)((char *)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v239 = (uint64_t)&v184 - v25;
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C378);
  __chkstk_darwin();
  v231 = (uint64_t *)((char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C380);
  __chkstk_darwin();
  v230 = (char *)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C388);
  __chkstk_darwin();
  v29 = (char *)&v184 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C390);
  v233 = *(_QWORD *)(v234 - 8);
  __chkstk_darwin();
  v232 = (uint64_t)&v184 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DynamicTypeSize(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin();
  v34 = (char *)&v184 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v36 = (char *)&v184 - v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C398);
  __chkstk_darwin();
  v238 = (uint64_t)&v184 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v240 = (uint64_t)&v184 - v38;
  sub_E42DEC((uint64_t)v36);
  if (qword_1506308 != -1)
    swift_once(&qword_1506308, sub_E77D20);
  v39 = __swift_project_value_buffer(v31, (uint64_t)qword_150B110);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v39, v31);
  v40 = sub_4DD24((unint64_t *)&qword_150BC10, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v41 = dispatch thunk of static Comparable.< infix(_:_:)(v34, v36, v31, v40);
  v42 = *(void (**)(char *, uint64_t))(v32 + 8);
  v42(v34, v31);
  v42(v36, v31);
  v226 = (uint64_t *)v4;
  v225 = v7;
  v221 = v6;
  if ((v41 & 1) != 0)
  {
    v43 = 1;
    v44 = v240;
    v45 = (uint64_t)v235;
    v46 = v234;
  }
  else
  {
    v187 = Image.init(systemName:)(0x322E6E6F73726570, 0xED00006C6C69662ELL);
    if (qword_15062A8 != -1)
      swift_once(&qword_15062A8, sub_E778C0);
    v188 = a1;
    v47 = qword_150B0B0;
    KeyPath = swift_getKeyPath(&unk_10B1718);
    v49 = qword_15062F8;
    swift_retain();
    if (v49 != -1)
      v50 = swift_once(&qword_15062F8, sub_E77C2C);
    v51 = qword_150B100;
    v52 = static Alignment.center.getter(v50);
    _FrameLayout.init(width:height:alignment:)(&v252, v51, 0, v51, 0, v52, v53);
    v186 = v252;
    v185 = v253;
    v184 = v254;
    v54 = v255;
    v55 = v256;
    v56 = v257;
    v57 = (uint64_t)v230;
    static SymbolRenderingMode.hierarchical.getter(v58);
    v59 = type metadata accessor for SymbolRenderingMode(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v57, 0, 1, v59);
    v60 = swift_getKeyPath(&unk_10B1A18);
    v61 = v231;
    sub_5C238(v57, (uint64_t)v231 + *(int *)(v229 + 28), &qword_150C380);
    *v61 = v60;
    sub_5C238((uint64_t)v61, (uint64_t)&v29[*(int *)(v228 + 36)], &qword_150C378);
    *(_QWORD *)v29 = v187;
    *((_QWORD *)v29 + 1) = KeyPath;
    v62 = v186;
    *((_QWORD *)v29 + 2) = v47;
    *((_QWORD *)v29 + 3) = v62;
    v29[32] = v185;
    *((_QWORD *)v29 + 5) = v184;
    v29[48] = v54;
    *((_QWORD *)v29 + 7) = v55;
    *((_QWORD *)v29 + 8) = v56;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_56024((uint64_t)v61, &qword_150C378);
    sub_56024(v57, &qword_150C380);
    swift_release();
    swift_release();
    swift_release();
    if (qword_1506300 != -1)
      swift_once(&qword_1506300, sub_E77C8C);
    v63 = qword_150B108;
    v64 = swift_getKeyPath(&unk_10B16E8);
    v65 = v232;
    sub_5C238((uint64_t)v29, v232, &qword_150C388);
    v46 = v234;
    v66 = (uint64_t *)(v65 + *(int *)(v234 + 36));
    *v66 = v64;
    v66[1] = v63;
    swift_retain();
    sub_56024((uint64_t)v29, &qword_150C388);
    v44 = v240;
    sub_5C090(v65, v240, &qword_150C390);
    v43 = 0;
    a1 = v188;
    v45 = (uint64_t)v235;
  }
  v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v233 + 56))(v44, v43, 1, v46);
  v68 = static HorizontalAlignment.leading.getter(v67);
  sub_E72334(a1, (uint64_t)&v247);
  v229 = *((_QWORD *)&v247 + 1);
  v230 = (char *)v247;
  LODWORD(v228) = v248;
  v231 = (uint64_t *)*((_QWORD *)&v248 + 1);
  v234 = *((_QWORD *)&v249 + 1);
  v235 = (char *)v249;
  v233 = v250;
  v232 = v251;
  v69 = *(_QWORD *)(a1 + 8);
  v70 = swift_getKeyPath(&unk_10B17D8);
  swift_getKeyPath(&unk_10B1800);
  static Published.subscript.getter(&v247, v69, v70);
  swift_release();
  swift_release();
  if (v247 == 1)
  {
    v188 = v68;
    v71 = *(_QWORD *)(a1 + 8);
    v72 = swift_getKeyPath(&unk_10B1628);
    swift_getKeyPath(&unk_10B1650);
    v73 = v189;
    static Published.subscript.getter(v189, v71, v72);
    swift_release();
    swift_release();
    LOBYTE(v71) = Playlist.isOwner.getter(v74);
    (*(void (**)(_QWORD *, uint64_t))(v190 + 8))(v73, v191);
    v75 = v194;
    if ((v71 & 1) != 0)
    {
      v76 = 1886352467;
      v77 = 0xE400000000000000;
    }
    else
    {
      v76 = 0x657661654CLL;
      v77 = 0xE500000000000000;
    }
    String.LocalizationValue.init(stringLiteral:)(v76, v77);
    v82 = v195;
    v83 = v192;
    v84 = v196;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v75, v196);
    v85 = (uint64_t)v215;
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v86 = qword_1583020;
    v87 = (id)qword_1583020;
    v88 = v193;
    static Locale.current.getter(v87);
    v89 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v86, v88, 0, 0, 256);
    v91 = v90;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v75, v84);
    v196 = v89;
    *(_QWORD *)&v247 = v89;
    *((_QWORD *)&v247 + 1) = v91;
    v92 = v199;
    sub_5BDB8(a1, v199, type metadata accessor for Collaboration.Management.View);
    v93 = *(unsigned __int8 *)(v197 + 80);
    v94 = (v93 + 16) & ~v93;
    v95 = swift_allocObject(&unk_13CB2E8, v94 + v198, v93 | 7);
    sub_5C04C(v92, v95 + v94, type metadata accessor for Collaboration.Management.View);
    v96 = sub_DD0BF8();
    v215 = v91;
    swift_bridgeObjectRetain();
    v97 = v200;
    Button<>.init<A>(_:action:)(&v247, sub_E88540, v95, &type metadata for String, v96);
    v99 = static Font.subheadline.getter(v98);
    v100 = swift_getKeyPath(&unk_10B1718);
    v101 = v202;
    v102 = (uint64_t)v203;
    v103 = v205;
    (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v203, v97, v205);
    v104 = v204;
    v105 = (uint64_t *)(v102 + *(int *)(v204 + 36));
    *v105 = v100;
    v105[1] = v99;
    v106.n128_f64[0] = (*(double (**)(char *, uint64_t))(v101 + 8))(v97, v103);
    v107 = static Font.Weight.semibold.getter(v106);
    v108 = sub_E88554();
    v109 = v206;
    View.fontWeight(_:)(*(_QWORD *)&v107, 0, v104, v108);
    sub_56024(v102, &qword_150C328);
    v111 = static Color.white.getter(v110);
    v112 = swift_getKeyPath(&unk_10B16E8);
    v113 = v207;
    v114 = (uint64_t)v211;
    v115 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v211, v109, v208);
    v116 = (uint64_t *)(v114 + *(int *)(v201 + 36));
    *v116 = v112;
    v116[1] = v111;
    v117 = (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v109, v115);
    if (qword_15062E8 != -1)
      v117 = swift_once(&qword_15062E8, sub_E77B68);
    v118 = qword_150B0F0;
    v119 = static Alignment.center.getter(v117);
    _FrameLayout.init(width:height:alignment:)(&v247, 0, 1, v118, 0, v119, v120);
    v121 = v212;
    sub_5C238(v114, v212, &qword_150C338);
    v122 = (_OWORD *)(v121 + *(int *)(v209 + 36));
    v123 = v248;
    *v122 = v247;
    v122[1] = v123;
    v122[2] = v249;
    v124 = sub_56024(v114, &qword_150C338);
    v125 = static Edge.Set.horizontal.getter(v124);
    LOBYTE(v118) = v125;
    v126 = EdgeInsets.init(_all:)(v125, 14.0);
    v128 = v127;
    v130 = v129;
    v132 = v131;
    sub_5C238(v121, v45, &qword_150C340);
    v133 = v45 + *(int *)(v210 + 36);
    *(_BYTE *)v133 = v118;
    *(double *)(v133 + 8) = v126;
    *(_QWORD *)(v133 + 16) = v128;
    *(_QWORD *)(v133 + 24) = v130;
    *(_QWORD *)(v133 + 32) = v132;
    *(_BYTE *)(v133 + 40) = 0;
    sub_56024(v121, &qword_150C340);
    v134 = (uint64_t)v226;
    v135 = v225;
    v136 = (uint64_t)v221;
    if (qword_1506030 != -1)
      swift_once(&qword_1506030, sub_DD39E4);
    v137 = Color.init(_:)((id)static UIColor.MusicTint.normal);
    v138 = static Edge.Set.all.getter(v137);
    v139 = v45;
    v140 = v45;
    v141 = v214;
    sub_5C238(v139, v214, &qword_150C348);
    v142 = v141 + *(int *)(v213 + 36);
    *(_QWORD *)v142 = v137;
    *(_BYTE *)(v142 + 8) = v138;
    sub_56024(v140, &qword_150C348);
    v143 = enum case for RoundedCornerStyle.continuous(_:);
    v144 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 104))(v136, v143, v144);
    v145 = v216;
    v146 = v85 + *(int *)(v216 + 36);
    sub_5BDB8(v136, v146, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    *(_WORD *)(v146 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C3B8) + 36)) = 256;
    sub_5C238(v141, v85, &qword_150C350);
    sub_5C0DC(v136, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    sub_56024(v141, &qword_150C350);
    v147 = v145;
    if (qword_1506310 != -1)
      swift_once(&qword_1506310, sub_E77D78);
    v148 = v227;
    v149 = __swift_project_value_buffer(v227, (uint64_t)qword_150B128);
    sub_5C238(v149, v134, &qword_150BCE8);
    v150 = sub_E885F0();
    v151 = sub_5C150(&qword_150BD20, &qword_150BCE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v152 = v217;
    View.dynamicTypeSize<A>(_:)(v134, v147, v148, v150, v151);
    sub_56024(v134, &qword_150BCE8);
    sub_56024(v85, &qword_150C358);
    v153 = a1 + *(int *)(v135 + 44);
    v154 = *(_BYTE *)v153;
    v155 = *(_QWORD *)(v153 + 8);
    v245 = v154;
    v246 = v155;
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
    State.projectedValue.getter(&v241, v156);
    v226 = &v184;
    v157 = v241;
    v158 = v242;
    v159 = v243;
    __chkstk_darwin();
    v160 = v196;
    *(&v184 - 4) = a1;
    *(&v184 - 3) = v160;
    *(&v184 - 2) = (uint64_t)v215;
    v241 = v147;
    v242 = v148;
    v243 = v150;
    v244 = v151;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v241, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v162 = v222;
    v163 = v219;
    View.alert(isPresented:content:)(v157, v158, v159, sub_E887E8, &v184 - 6, v219, OpaqueTypeConformance2);
    swift_bridgeObjectRelease();
    swift_release();
    v164 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v218 + 8))(v152, v163, v164);
    v165 = v223;
    v166 = v220;
    v167 = v224;
    (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v220, v162, v224);
    v168 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
    v168(v162, v166, v167);
    v81 = (uint64_t)v236;
    *v236 = 0;
    *(_BYTE *)(v81 + 8) = 1;
    v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C400);
    v168((char *)(v81 + *(int *)(v169 + 48)), v162, v167);
    v170 = *(void (**)(char *, uint64_t))(v165 + 8);
    v170(v166, v167);
    v170(v162, v167);
    v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C3A0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v81, 0, 1, v171);
    v79 = v239;
    sub_5C090(v81, v239, &qword_150C370);
    v80 = v240;
    v68 = v188;
  }
  else
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C3A0);
    v79 = v239;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v239, 1, 1, v78);
    v80 = v44;
    v81 = (uint64_t)v236;
  }
  v172 = v238;
  sub_5C238(v80, v238, &qword_150C398);
  sub_5C238(v79, v81, &qword_150C370);
  v173 = v237;
  sub_5C238(v172, v237, &qword_150C398);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C3A8);
  v175 = v173 + *(int *)(v174 + 48);
  *(_QWORD *)v175 = v68;
  *(_QWORD *)(v175 + 8) = 0;
  *(_BYTE *)(v175 + 16) = 1;
  v176 = (uint64_t)v230;
  v177 = v229;
  *(_QWORD *)(v175 + 24) = v230;
  *(_QWORD *)(v175 + 32) = v177;
  v178 = v228;
  *(_BYTE *)(v175 + 40) = v228;
  v179 = (uint64_t)v235;
  *(_QWORD *)(v175 + 48) = v231;
  *(_QWORD *)(v175 + 56) = v179;
  v180 = v234;
  v181 = v233;
  *(_QWORD *)(v175 + 64) = v234;
  *(_QWORD *)(v175 + 72) = v181;
  v182 = v232;
  *(_QWORD *)(v175 + 80) = v232;
  sub_5C238(v81, v173 + *(int *)(v174 + 64), &qword_150C370);
  sub_AF8D8(v176, v177, v178);
  swift_bridgeObjectRetain();
  sub_184E34(v179, v180, v181, v182);
  sub_56024(v239, &qword_150C370);
  sub_56024(v240, &qword_150C398);
  sub_56024(v81, &qword_150C370);
  sub_AF8E8(v176, v177, v178);
  swift_bridgeObjectRelease();
  sub_184E64(v179, v180, v181, v182);
  return sub_56024(v238, &qword_150C398);
}

double sub_E72334@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  double result;
  _BYTE v69[12];
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v73 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = &v69[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v69[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v69[-v9];
  String.LocalizationValue.init(stringLiteral:)(0x726F62616C6C6F43, 0xED00006E6F697461);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v10, v5);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v11 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v12 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v11, v4, 0, 0, 256);
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, v5);
  v74 = v12;
  v75 = v14;
  v15 = sub_DD0BF8();
  v35 = Text.init<A>(_:)(&v74, &type metadata for String, v15);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v74) = static HierarchicalShapeStyle.primary.getter(v22);
  v23 = Text.foregroundStyle<A>(_:)(&v74, v35, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  sub_AF8E8(v35, v17, v21);
  v30 = swift_bridgeObjectRelease();
  v31 = static Font.callout.getter(v30);
  v32 = Text.font(_:)(v31, v23, v25, v29, v27);
  v72 = v33;
  LODWORD(v35) = v34;
  v37 = v36;
  swift_release();
  sub_AF8E8(v23, v25, v29);
  swift_bridgeObjectRelease();
  v38 = sub_E6BAE0();
  if (v39)
  {
    v74 = v38;
    v75 = v39;
    v40 = Text.init<A>(_:)(&v74, &type metadata for String, v15);
    v42 = v41;
    v44 = v43;
    v46 = v45 & 1;
    LODWORD(v74) = static HierarchicalShapeStyle.secondary.getter(v47);
    v48 = Text.foregroundStyle<A>(_:)(&v74, v40, v42, v46, v44, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v70 = v35;
    v35 = v49;
    v73 = v37;
    v51 = v50;
    v71 = v32;
    v53 = v52 & 1;
    sub_AF8E8(v40, v42, v46);
    v54 = swift_bridgeObjectRelease();
    v55 = static Font.caption.getter(v54);
    v56 = Text.font(_:)(v55, v48, v35, v53, v51);
    v58 = v57;
    v60 = v59;
    v62 = v61;
    swift_release();
    v63 = v60 & 1;
    v64 = v35;
    LOBYTE(v35) = v70;
    v65 = v53;
    v32 = v71;
    sub_AF8E8(v48, v64, v65);
    v37 = v73;
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = 0;
    v58 = 0;
    v63 = 0;
    v62 = 0;
  }
  v66 = v35 & 1;
  v67 = v72;
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v67;
  *(_BYTE *)(a2 + 16) = v66;
  *(_QWORD *)(a2 + 24) = v37;
  *(_QWORD *)(a2 + 32) = v56;
  *(_QWORD *)(a2 + 40) = v58;
  *(_QWORD *)(a2 + 48) = v63;
  *(_QWORD *)(a2 + 56) = v62;
  sub_AF8D8(v32, v67, v66);
  swift_bridgeObjectRetain();
  sub_184E34(v56, v58, v63, v62);
  sub_184E64(v56, v58, v63, v62);
  sub_AF8E8(v32, v67, v66);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_E7270C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 44));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "[Management] Stop/Leave button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_E72854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  char *v64;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v72 = a2;
  v73 = a3;
  v80 = a4;
  v74 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v5 = __chkstk_darwin();
  v75 = v6;
  v77 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v5);
  __chkstk_darwin();
  v79 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v78 = (char *)&v66 - v8;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v71 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v66 - v14;
  v16 = type metadata accessor for Playlist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (uint64_t *)((char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = a1;
  v20 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v19, v20, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v20) = Playlist.isOwner.getter(v22);
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x800000000110E920);
    v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v23(v13, v15, v10);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v33 = qword_1583020;
    v34 = (id)qword_1583020;
    v26 = v71;
    static Locale.current.getter(v34);
    v27 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v33, v26, 0, 0, 256);
    v29 = v35;
    v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v15, v10);
    v32 = 0xD00000000000005ELL;
    v31 = 0x800000000110E940;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x800000000110E880);
    v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v23(v13, v15, v10);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v24 = qword_1583020;
    v25 = (id)qword_1583020;
    v26 = v71;
    static Locale.current.getter(v25);
    v27 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v24, v26, 0, 0, 256);
    v29 = v28;
    v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v15, v10);
    v31 = 0x800000000110E8A0;
    v32 = 0x1000000000000079;
  }
  String.LocalizationValue.init(stringLiteral:)(v32, v31);
  v23(v13, v15, v10);
  v36 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v37 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v36, v26, 0, 0, 256);
  v39 = v38;
  v30(v15, v10);
  v81 = v27;
  v82 = v29;
  v40 = sub_DD0BF8();
  v41 = Text.init<A>(_:)(&v81, &type metadata for String, v40);
  v70 = v42;
  v71 = (char *)v41;
  v68 = v43;
  v69 = v44;
  v81 = v37;
  v82 = v39;
  v45 = Text.init<A>(_:)(&v81, &type metadata for String, v40);
  v66 = v46;
  v67 = v45;
  v48 = v47;
  v50 = v49 & 1;
  v81 = v72;
  v82 = v73;
  swift_bridgeObjectRetain();
  v51 = Text.init<A>(_:)(&v81, &type metadata for String, v40);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  v58 = v77;
  sub_5BDB8(v76, v77, type metadata accessor for Collaboration.Management.View);
  v59 = *(unsigned __int8 *)(v74 + 80);
  v60 = (v59 + 16) & ~v59;
  v61 = swift_allocObject(&unk_13CB310, v60 + v75, v59 | 7);
  sub_5C04C(v58, v61 + v60, type metadata accessor for Collaboration.Management.View);
  v62 = v78;
  static Alert.Button.destructive(_:action:)(v51, v53, v57, v55, sub_E87D50, v61);
  sub_AF8E8(v51, v53, v57);
  swift_release();
  v63 = swift_bridgeObjectRelease();
  v64 = v79;
  static Alert.Button.cancel(_:)(UIScreen.Dimensions.size.getter, 0, v63);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v71, v70, v68 & 1, v69, v67, v48, v50, v66, v62, v64);
}

uint64_t sub_E72DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD v31[2];
  unsigned __int8 v32;

  v28 = a2;
  v3 = type metadata accessor for Collaboration.Management.View(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BFF0);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFD0);
  v9 = __chkstk_darwin();
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v9);
  *((_QWORD *)v7 + 1) = 0x4028000000000000;
  v7[16] = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150C140);
  sub_E73034(a1, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_5C238((uint64_t)v7, (uint64_t)v11, (uint64_t *)&unk_150BFF0);
  v13 = &v11[*(int *)(v8 + 36)];
  v13[32] = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  sub_56024((uint64_t)v7, (uint64_t *)&unk_150BFF0);
  v14 = a1 + *(int *)(v3 + 40);
  v15 = *(_BYTE *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v29 = v15;
  v30 = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(v31, v17);
  v19 = v31[0];
  v18 = v31[1];
  v20 = v32;
  sub_5BDB8(a1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_13CB180, v22 + v5, v21 | 7);
  sub_5C04C((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for Collaboration.Management.View);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BFD8);
  v25 = sub_E87840();
  v26 = sub_3D38D0(&qword_150C008, &qword_150BFD8, (void (*)(void))sub_E878DC);
  View.fullScreenCover<A>(isPresented:onDismiss:content:)(v19, v18, v20, 0, 0, sub_E8802C, v23, v8, v24, v25, v26);
  swift_release();
  swift_release();
  swift_release();
  return sub_56024((uint64_t)v11, &qword_150BFD0);
}

uint64_t sub_E73034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  double v96;
  _QWORD *v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  double v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD v215[2];
  _OWORD v216[3];
  uint64_t v217;
  char v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  __int16 v222;

  v211 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150CF90);
  __chkstk_darwin();
  v185 = (uint64_t)&v177 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C160);
  __chkstk_darwin();
  v188 = (uint64_t)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C168);
  __chkstk_darwin();
  v186 = (uint64_t)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C170);
  __chkstk_darwin();
  v187 = (uint64_t)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C178);
  __chkstk_darwin();
  v190 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C180);
  __chkstk_darwin();
  v191 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C188);
  __chkstk_darwin();
  v195 = (uint64_t)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C190);
  __chkstk_darwin();
  v197 = (uint64_t)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v196 = (uint64_t)&v177 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C198);
  __chkstk_darwin();
  v178 = (uint64_t *)((char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1A0);
  __chkstk_darwin();
  v180 = (uint64_t)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1A8);
  __chkstk_darwin();
  v194 = (uint64_t)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v192 = (uint64_t)&v177 - v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150C1B0);
  __chkstk_darwin();
  v210 = (char *)&v177 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v209 = (char *)&v177 - v17;
  v208 = type metadata accessor for Playlist(0);
  v207 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin();
  v206 = (uint64_t *)((char *)&v177 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v199 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin();
  v20 = (char *)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v24 = (char *)&v177 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v201 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin();
  v26 = (char *)&v177 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEF0);
  __chkstk_darwin();
  v28 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1C0);
  __chkstk_darwin();
  v30 = (char *)&v177 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1C8);
  __chkstk_darwin();
  v32 = (char *)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1D0);
  __chkstk_darwin();
  v214 = (uint64_t)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v212 = (uint64_t)&v177 - v34;
  v213 = a1;
  sub_E6CB94(v24);
  v35 = enum case for Playlist.Variant.regular(_:);
  v36 = type metadata accessor for Playlist.Variant(0);
  v37 = *(_QWORD *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v22, v35, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v22, 0, 1, v36);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v22, 0, 10, v38);
  v217 = 0;
  v218 = 1;
  v219 = 0;
  v220 = 1;
  v221 = 0;
  v222 = 513;
  v39 = v198;
  v40 = v199;
  (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v20, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v199);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v24, (uint64_t)v22, (uint64_t)&v217, (uint64_t)v20, (uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  sub_5C0DC((uint64_t)v22, type metadata accessor for ArtworkImage.Placeholder);
  v41 = sub_56024((uint64_t)v24, (uint64_t *)&unk_150CEE0);
  if (qword_15062F0 != -1)
    v41 = swift_once(&qword_15062F0, sub_E77BC8);
  v42 = qword_150B0F8;
  v43 = static Alignment.center.getter(v41);
  _FrameLayout.init(width:height:alignment:)(v216, v42, 0, v42, 0, v43, v44);
  v45 = v201;
  v46 = v203;
  (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v28, v26, v203);
  v47 = &v28[*(int *)(v200 + 36)];
  v48 = v216[1];
  *(_OWORD *)v47 = v216[0];
  *((_OWORD *)v47 + 1) = v48;
  *((_OWORD *)v47 + 2) = v216[2];
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v46);
  if (qword_1506190 != -1)
    swift_once(&qword_1506190, sub_E1B454);
  v49 = static Corner.small;
  v50 = unk_1583D90;
  v51 = byte_1583D98;
  sub_5C238((uint64_t)v28, (uint64_t)v30, (uint64_t *)&unk_150CEF0);
  v52 = &v30[*(int *)(v202 + 36)];
  *(_QWORD *)v52 = v49;
  *((_QWORD *)v52 + 1) = v50;
  v52[16] = v51;
  sub_56024((uint64_t)v28, (uint64_t *)&unk_150CEF0);
  if (qword_15061B0 != -1)
    swift_once(&qword_15061B0, sub_E1B804);
  v53 = static Border.artwork;
  v54 = qword_1583DF0;
  v55 = byte_1583DF8;
  v56 = static Corner.small;
  v57 = unk_1583D90;
  v58 = byte_1583D98;
  sub_5C238((uint64_t)v30, (uint64_t)v32, &qword_150C1C0);
  v59 = &v32[*(int *)(v204 + 36)];
  *(_QWORD *)v59 = v53;
  *((_QWORD *)v59 + 1) = v54;
  v59[16] = v55;
  *((_QWORD *)v59 + 3) = v56;
  *((_QWORD *)v59 + 4) = v57;
  v59[40] = v58;
  swift_retain();
  v60 = sub_56024((uint64_t)v30, &qword_150C1C0);
  static Color.black.getter(v60);
  v61 = Color.opacity(_:)(0.15);
  swift_release();
  v62 = v214;
  sub_5C238((uint64_t)v32, v214, &qword_150C1C8);
  v63 = v62 + *(int *)(v205 + 36);
  *(_QWORD *)v63 = v61;
  *(_OWORD *)(v63 + 8) = xmmword_106D250;
  *(_QWORD *)(v63 + 24) = 0x4000000000000000;
  sub_56024((uint64_t)v32, &qword_150C1C8);
  sub_5C090(v62, v212, &qword_150C1D0);
  v64 = *(_QWORD *)(v213 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  v66 = v206;
  static Published.subscript.getter(v206, v64, KeyPath);
  swift_release();
  swift_release();
  v67 = _s8MusicKit8PlaylistV0A11ApplicationE10storyTitleSSSgvg_0();
  v69 = v68;
  (*(void (**)(_QWORD *, uint64_t))(v207 + 8))(v66, v208);
  v215[0] = v67;
  v215[1] = v69;
  v70 = sub_DD0BF8();
  v71 = Text.init<A>(_:)(v215, &type metadata for String, v70);
  v73 = v72;
  v75 = v74;
  v77 = v76 & 1;
  LODWORD(v215[0]) = static HierarchicalShapeStyle.primary.getter(v78);
  v79 = Text.foregroundStyle<A>(_:)(v215, v71, v73, v77, v75, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v81 = v80;
  v83 = v82;
  v85 = v84;
  sub_AF8E8(v71, v73, v77);
  swift_bridgeObjectRelease();
  if (qword_15062A0 != -1)
    swift_once(&qword_15062A0, sub_E778A4);
  swift_retain();
  v86 = v83 & 1;
  v88 = Text.font(_:)(v87, v79, v81, v86, v85);
  v90 = v89;
  v92 = v91;
  v94 = v93;
  swift_release();
  sub_AF8E8(v79, v81, v86);
  v95 = swift_bridgeObjectRelease();
  v96 = static Font.Weight.semibold.getter(v95);
  v207 = Text.fontWeight(_:)(*(_QWORD *)&v96, 0, v88, v90, v92 & 1, v94);
  v206 = v97;
  v99 = v98;
  v208 = v100;
  sub_AF8E8(v88, v90, v92 & 1);
  swift_bridgeObjectRelease();
  v101 = v213;
  if ((sub_E6B840() & 1) != 0)
  {
    LODWORD(v205) = v99;
    v102 = static VerticalAlignment.bottom.getter();
    v103 = (uint64_t)v178;
    *v178 = v102;
    *(_QWORD *)(v103 + 8) = 0x4020000000000000;
    *(_BYTE *)(v103 + 16) = 0;
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1E8);
    sub_E74278(v101, (char *)(v103 + *(int *)(v104 + 44)));
    v105 = v180;
    sub_5C238(v103, v180, &qword_150C198);
    *(_WORD *)(v105 + *(int *)(v177 + 36)) = 256;
    v106 = sub_56024(v103, &qword_150C198);
    v107 = static Edge.Set.top.getter(v106);
    v108 = v107;
    v109 = (uint64_t)v210;
    v110 = (uint64_t)v209;
    if (qword_15062D8 != -1)
      v107 = swift_once(&qword_15062D8, sub_E77AB8);
    v111 = EdgeInsets.init(_all:)(v107, *(double *)&qword_150B0E0);
    v113 = v112;
    v115 = v114;
    v117 = v116;
    v118 = v194;
    sub_5C238(v105, v194, &qword_150C1A0);
    v119 = v118 + *(int *)(v179 + 36);
    *(_BYTE *)v119 = v108;
    *(double *)(v119 + 8) = v111;
    *(_QWORD *)(v119 + 16) = v113;
    *(_QWORD *)(v119 + 24) = v115;
    *(_QWORD *)(v119 + 32) = v117;
    *(_BYTE *)(v119 + 40) = 0;
    sub_56024(v105, &qword_150C1A0);
    v120 = v192;
    sub_5C090(v118, v192, &qword_150C1A8);
    v121 = v185;
    sub_E75028(v101, v185);
    v123 = static Alignment.leading.getter(v122);
    v124 = v188;
    sub_E98DF8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v188, 0.0, 1, 0.0, 1, v123, v125);
    sub_56024(v121, &qword_150CF90);
    v126 = swift_getKeyPath(&unk_10B18B0);
    v127 = v186;
    sub_5C238(v124, v186, &qword_150C160);
    v128 = v127 + *(int *)(v182 + 36);
    *(_QWORD *)v128 = v126;
    *(_QWORD *)(v128 + 8) = 0;
    *(_BYTE *)(v128 + 16) = 1;
    sub_56024(v124, &qword_150C160);
    v129 = v187;
    sub_5C238(v127, v187, &qword_150C168);
    *(_WORD *)(v129 + *(int *)(v181 + 36)) = 256;
    sub_56024(v127, &qword_150C168);
    LODWORD(v126) = static HierarchicalShapeStyle.secondary.getter(v130);
    v131 = v190;
    sub_5C238(v129, v190, &qword_150C170);
    *(_DWORD *)(v131 + *(int *)(v183 + 36)) = v126;
    v132 = sub_56024(v129, &qword_150C170);
    v133 = static Font.footnote.getter(v132);
    v134 = swift_getKeyPath(&unk_10B1718);
    v135 = v191;
    sub_5C238(v131, v191, &qword_150C178);
    v136 = (uint64_t *)(v135 + *(int *)(v184 + 36));
    *v136 = v134;
    v136[1] = v133;
    v137 = sub_56024(v131, &qword_150C178);
    v138 = static Edge.Set.horizontal.getter(v137);
    LOBYTE(v133) = v138;
    v139 = EdgeInsets.init(_all:)(v138, 18.0);
    v141 = v140;
    v143 = v142;
    v145 = v144;
    v146 = v195;
    sub_5C238(v135, v195, &qword_150C180);
    v147 = v146 + *(int *)(v189 + 36);
    *(_BYTE *)v147 = v133;
    *(double *)(v147 + 8) = v139;
    *(_QWORD *)(v147 + 16) = v141;
    *(_QWORD *)(v147 + 24) = v143;
    *(_QWORD *)(v147 + 32) = v145;
    *(_BYTE *)(v147 + 40) = 0;
    v148 = sub_56024(v135, &qword_150C180);
    v149 = static Edge.Set.top.getter(v148);
    v150 = v149;
    if (qword_15062E0 != -1)
      v149 = swift_once(&qword_15062E0, sub_E77B10);
    v151 = EdgeInsets.init(_all:)(v149, *(double *)&qword_150B0E8);
    v153 = v152;
    v155 = v154;
    v157 = v156;
    v158 = v197;
    sub_5C238(v146, v197, &qword_150C188);
    v159 = v158 + *(int *)(v193 + 36);
    *(_BYTE *)v159 = v150;
    *(double *)(v159 + 8) = v151;
    *(_QWORD *)(v159 + 16) = v153;
    *(_QWORD *)(v159 + 24) = v155;
    *(_QWORD *)(v159 + 32) = v157;
    *(_BYTE *)(v159 + 40) = 0;
    sub_56024(v146, &qword_150C188);
    v160 = v196;
    sub_5C090(v158, v196, &qword_150C190);
    sub_5C238(v120, v118, &qword_150C1A8);
    sub_5C238(v160, v158, &qword_150C190);
    sub_5C238(v118, v109, &qword_150C1A8);
    v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1F0);
    sub_5C238(v158, v109 + *(int *)(v161 + 48), &qword_150C190);
    v162 = v109 + *(int *)(v161 + 64);
    *(_QWORD *)v162 = 0x3FF0000000000000;
    *(_BYTE *)(v162 + 8) = 0;
    sub_56024(v160, &qword_150C190);
    sub_56024(v120, &qword_150C1A8);
    sub_56024(v158, &qword_150C190);
    sub_56024(v118, &qword_150C1A8);
    v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1D8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v109, 0, 1, v163);
    sub_5C090(v109, v110, (uint64_t *)&unk_150C1B0);
    LOBYTE(v99) = v205;
  }
  else
  {
    v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1D8);
    v110 = (uint64_t)v209;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v209, 1, 1, v165);
    v109 = (uint64_t)v210;
  }
  v166 = v99 & 1;
  v213 = static VerticalAlignment.center.getter(v164);
  v167 = v212;
  v168 = v214;
  sub_5C238(v212, v214, &qword_150C1D0);
  sub_5C238(v110, v109, (uint64_t *)&unk_150C1B0);
  v169 = v211;
  sub_5C238(v168, v211, &qword_150C1D0);
  v170 = v110;
  v171 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150C1E0);
  v172 = v169 + v171[12];
  v173 = v207;
  v174 = v206;
  *(_QWORD *)v172 = v207;
  *(_QWORD *)(v172 + 8) = v174;
  *(_BYTE *)(v172 + 16) = v166;
  *(_QWORD *)(v172 + 24) = v208;
  sub_5C238(v109, v169 + v171[16], (uint64_t *)&unk_150C1B0);
  v175 = v169 + v171[20];
  *(_QWORD *)v175 = v213;
  *(_QWORD *)(v175 + 8) = 0;
  *(_BYTE *)(v175 + 16) = 1;
  *(_QWORD *)(v175 + 24) = 0;
  *(_BYTE *)(v175 + 32) = 1;
  sub_AF8D8(v173, (uint64_t)v174, v166);
  swift_bridgeObjectRetain();
  sub_56024(v170, (uint64_t *)&unk_150C1B0);
  sub_56024(v167, &qword_150C1D0);
  sub_56024(v109, (uint64_t *)&unk_150C1B0);
  sub_AF8E8(v173, (uint64_t)v174, v166);
  swift_bridgeObjectRelease();
  return sub_56024(v168, &qword_150C1D0);
}

uint64_t sub_E74278@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t (**v75)();
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  unsigned int (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  _QWORD v116[2];
  unsigned __int8 v117;

  v109 = a2;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C270);
  v107 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v97 = (uint64_t)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v96 = (uint64_t)&v86 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C278);
  __chkstk_darwin();
  v108 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v104 = (char *)&v86 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  __chkstk_darwin();
  v95 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v86 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BA60);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = type metadata accessor for Collaboration.Management.View(0);
  v12 = *(_QWORD *)(v101 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  __chkstk_darwin();
  v94 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v86 - v17;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C280);
  __chkstk_darwin();
  v93 = (uint64_t)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v98 = (uint64_t)&v86 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C288);
  v22 = *(_QWORD *)(v21 - 8);
  v102 = v21;
  v103 = v22;
  __chkstk_darwin();
  v106 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v100 = (char *)&v86 - v24;
  __chkstk_darwin();
  v99 = (char *)&v86 - v25;
  sub_5BDB8(a1, (uint64_t)v14, type metadata accessor for Collaboration.Management.View);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v111 = v26 | 7;
  v112 = v27 + v13;
  v28 = swift_allocObject(&unk_13CB1F8, v27 + v13, v26 | 7);
  sub_5C04C((uint64_t)v14, v28 + v27, type metadata accessor for Collaboration.Management.View);
  *v11 = swift_getKeyPath(&unk_10B1988);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  swift_storeEnumTagMultiPayload(v11, v89, 0);
  KeyPath = swift_getKeyPath(&unk_10B19B8);
  *v18 = 0;
  *((_QWORD *)v18 + 1) = sub_E88238;
  *((_QWORD *)v18 + 2) = v28;
  v30 = (uint64_t)&v18[*(int *)(v15 + 24)];
  v92 = v11;
  sub_5C090((uint64_t)v11, v30, &qword_150BA60);
  v91 = v15;
  v31 = &v18[*(int *)(v15 + 28)];
  *(_QWORD *)v31 = KeyPath;
  v31[8] = 0;
  sub_E6C9C8((uint64_t)v9);
  v32 = type metadata accessor for URL(0);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
  v110 = 1;
  v88 = v32;
  v87 = v33;
  LOBYTE(KeyPath) = ((unsigned int (*)(char *, uint64_t))v33)(v9, 1) == 1;
  sub_56024((uint64_t)v9, &qword_15068B0);
  v34 = swift_getKeyPath(&unk_10B19E8);
  v35 = swift_allocObject(&unk_13CB220, 17, 7);
  *(_BYTE *)(v35 + 16) = KeyPath;
  v36 = v98;
  sub_5BDB8((uint64_t)v18, v98, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v37 = v113;
  v38 = (uint64_t *)(v36 + *(int *)(v113 + 36));
  *v38 = v34;
  v38[1] = (uint64_t)sub_1F6E50;
  v38[2] = v35;
  sub_5C0DC((uint64_t)v18, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v39 = a1;
  v40 = a1 + *(int *)(v101 + 36);
  v41 = *(_BYTE *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  v114 = v41;
  v115 = v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(v116, v43);
  v44 = v116[0];
  v45 = v116[1];
  v46 = v117;
  v101 = v39;
  sub_5BDB8(v39, (uint64_t)v14, type metadata accessor for Collaboration.Management.View);
  v47 = swift_allocObject(&unk_13CB248, v112, v111);
  v90 = v27;
  v86 = v14;
  sub_5C04C((uint64_t)v14, v47 + v27, type metadata accessor for Collaboration.Management.View);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C290);
  v49 = sub_E882B4();
  v50 = sub_3D38D0(&qword_150C2B8, &qword_150C290, (void (*)(void))sub_E85FD8);
  v85 = v48;
  v52 = v99;
  v51 = v100;
  View.sheet<A>(isPresented:onDismiss:content:)(v44, v45, v46, 0, 0, sub_E88278, v47, v37, v53, v85, v49, v50);
  v54 = v102;
  swift_release();
  swift_release();
  v55 = (uint64_t)v104;
  swift_release();
  v56 = v103;
  sub_56024(v36, &qword_150C280);
  v57 = v105;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v52, v51, v54);
  v58 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v59 = (char *)objc_msgSend(v58, "userInterfaceIdiom");

  if (v59 != (_BYTE *)&dword_4 + 2)
  {
    v60 = (uint64_t)v86;
    sub_5BDB8(v101, (uint64_t)v86, type metadata accessor for Collaboration.Management.View);
    v61 = swift_allocObject(&unk_13CB270, v112, v111);
    sub_5C04C(v60, v61 + v90, type metadata accessor for Collaboration.Management.View);
    v62 = swift_getKeyPath(&unk_10B1988);
    v63 = (uint64_t)v92;
    *v92 = v62;
    swift_storeEnumTagMultiPayload(v63, v89, 0);
    v64 = swift_getKeyPath(&unk_10B19B8);
    v65 = (uint64_t)v94;
    *v94 = 1;
    *(_QWORD *)(v65 + 8) = sub_E88354;
    *(_QWORD *)(v65 + 16) = v61;
    v66 = v91;
    sub_5C090(v63, v65 + *(int *)(v91 + 24), &qword_150BA60);
    v67 = v65 + *(int *)(v66 + 28);
    *(_QWORD *)v67 = v64;
    *(_BYTE *)(v67 + 8) = 0;
    v68 = v95;
    sub_E6C9C8(v95);
    v69 = v87(v68, 1, v88) == 1;
    sub_56024(v68, &qword_15068B0);
    v70 = swift_getKeyPath(&unk_10B19E8);
    v71 = swift_allocObject(&unk_13CB298, 17, 7);
    *(_BYTE *)(v71 + 16) = v69;
    v72 = v93;
    sub_5BDB8(v65, v93, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    v73 = (uint64_t *)(v72 + *(int *)(v113 + 36));
    *v73 = v70;
    v73[1] = (uint64_t)sub_1F9D48;
    v73[2] = v71;
    sub_5C0DC(v65, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    v74 = v97;
    sub_5C238(v72, v97, &qword_150C280);
    v75 = (uint64_t (**)())(v74 + *(int *)(v57 + 36));
    *v75 = sub_E75004;
    v75[1] = 0;
    sub_56024(v72, &qword_150C280);
    v76 = v74;
    v77 = v96;
    sub_5C090(v76, v96, &qword_150C270);
    sub_5C090(v77, v55, &qword_150C270);
    v110 = 0;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v55, v110, 1, v57);
  v78 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  v79 = v106;
  v78(v106, v52, v54);
  v80 = v108;
  sub_5C238(v55, v108, &qword_150C278);
  v81 = v109;
  v78(v109, v79, v54);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C2C0);
  sub_5C238(v80, (uint64_t)&v81[*(int *)(v82 + 48)], &qword_150C278);
  sub_56024(v55, &qword_150C278);
  v83 = *(void (**)(char *, uint64_t))(v56 + 8);
  v83(v52, v54);
  sub_56024(v80, &qword_150C278);
  return ((uint64_t (*)(char *, uint64_t))v83)(v79, v54);
}

uint64_t sub_E74B90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 36));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "[Management] Share Sheet button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_E74CD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;

  v4 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 8);
  sub_E6C9C8((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    result = sub_56024((uint64_t)v8, &qword_15068B0);
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    KeyPath = swift_getKeyPath(&unk_10B1628);
    swift_getKeyPath(&unk_10B1650);
    static Published.subscript.getter(v6, v13, KeyPath);
    swift_release();
    swift_release();
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    swift_retain();
    v15 = Collaboration.Manager.activityViewController(for:url:)((uint64_t)v6, (uint64_t)v12);
    swift_release();
    sub_5C0DC((uint64_t)v6, type metadata accessor for Collaboration.Object);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *a2 = v15;
  return result;
}

uint64_t sub_E74EBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 40));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "[Management] QRCode button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_E75004()
{
  return Transaction.disablesAnimations.setter(1);
}

uint64_t sub_E75028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t KeyPath;
  double v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  _BYTE v58[4];
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a2;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C1F8);
  __chkstk_darwin();
  v76 = (uint64_t *)&v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v69 = v4;
  v70 = &v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for OpenURLAction(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  __chkstk_darwin();
  v73 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C200);
  __chkstk_darwin();
  v9 = &v58[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v77 = &v58[-v10];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C208);
  __chkstk_darwin();
  v13 = &v58[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C210);
  __chkstk_darwin();
  v15 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C218);
  __chkstk_darwin();
  v18 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v71 = a1;
  v19 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1868);
  swift_getKeyPath(&unk_10B1890);
  static Published.subscript.getter(&v79, v19, KeyPath);
  swift_release();
  *(_QWORD *)&v21 = swift_release().n128_u64[0];
  if (v79 == 1)
  {
    *(_QWORD *)v18 = static VerticalAlignment.center.getter(v21);
    *((_QWORD *)v18 + 1) = 0x4020000000000000;
    v18[16] = 0;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C250);
    sub_E75608(&v18[*(int *)(v22 + 44)]);
    sub_5C238((uint64_t)v18, (uint64_t)v13, &qword_150C218);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    v23 = sub_5C150(&qword_150C228, &qword_150C218, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v24 = sub_E880B8();
    _ConditionalContent<>.init(storage:)(v13, v16, v7, v23, v24);
    sub_56024((uint64_t)v18, &qword_150C218);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C220);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 0, 1, v25);
    v26 = (uint64_t)v15;
    return sub_5C090(v26, v78, &qword_150C210);
  }
  v63 = v15;
  v64 = v13;
  v65 = v11;
  v66 = v16;
  v67 = v7;
  v27 = sub_E6C138();
  if (v28)
  {
    v29 = LocalizedStringKey.init(_:)(v27);
    v30 = Text.init(_:tableName:bundle:comment:)(v29);
    v61 = v31;
    v62 = v30;
    v33 = v32;
    v35 = v34 & 1;
    v36 = static Color.accentColor.getter(v30);
    v37 = swift_getKeyPath(&unk_10B1670);
    v60 = swift_getKeyPath(&unk_10B0F80);
    v38 = v70;
    sub_5BDB8(v71, (uint64_t)v70, type metadata accessor for Collaboration.Management.View);
    v39 = *(unsigned __int8 *)(v68 + 80);
    v40 = (v39 + 16) & ~v39;
    v41 = swift_allocObject(&unk_13CB1A8, v40 + v69, v39 | 7);
    sub_5C04C((uint64_t)v38, v41 + v40, type metadata accessor for Collaboration.Management.View);
    v42 = v73;
    OpenURLAction.init(handler:)(sub_E8806C, v41);
    v44 = v75;
    v43 = v76;
    v45 = v74;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))((_BYTE *)v76 + *(int *)(v72 + 28), v42, v75);
    *v43 = v60;
    sub_5C238((uint64_t)v43, (uint64_t)&v9[*(int *)(v67 + 36)], &qword_150C1F8);
    v47 = v61;
    v46 = v62;
    *(_QWORD *)v9 = v62;
    *((_QWORD *)v9 + 1) = v47;
    v48 = v35;
    v59 = v35;
    v9[16] = v35;
    *((_QWORD *)v9 + 3) = v33;
    *((_QWORD *)v9 + 4) = v37;
    *((_QWORD *)v9 + 5) = v36;
    v49 = v46;
    sub_AF8D8(v46, v47, v48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_56024((uint64_t)v43, &qword_150C1F8);
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v42, v44);
    sub_AF8E8(v49, v47, v59);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v50 = v77;
    sub_5C090((uint64_t)v9, (uint64_t)v77, &qword_150C200);
    v51 = (uint64_t)v64;
    sub_5C238((uint64_t)v50, (uint64_t)v64, &qword_150C200);
    swift_storeEnumTagMultiPayload(v51, v65, 1);
    v52 = sub_5C150(&qword_150C228, &qword_150C218, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v53 = sub_E880B8();
    v54 = (uint64_t)v63;
    _ConditionalContent<>.init(storage:)(v51, v66, v67, v52, v53);
    sub_56024((uint64_t)v50, &qword_150C200);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C220);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
    v26 = v54;
    return sub_5C090(v26, v78, &qword_150C210);
  }
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C220);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v78, 1, 1, v57);
}

uint64_t sub_E75608@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  __n128 v31;
  char *v33;
  _QWORD v34[3];

  v33 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v2 = (char *)&v34[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v34[-1] - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBC8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v34[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v34[-1] - v13;
  ProgressView<>.init<>()(v15);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000018, 0x800000000110E860);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v8, v3);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v16 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v17 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v16, v2, 0, 0, 256);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  v34[0] = v17;
  v34[1] = v19;
  v20 = sub_DD0BF8();
  v21 = Text.init<A>(_:)(v34, &type metadata for String, v20);
  v23 = v22;
  v25 = v24;
  LOBYTE(v19) = v26 & 1;
  v27 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v27(v12, v14, v9);
  v28 = v33;
  v27(v33, v12, v9);
  v29 = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C258) + 48)];
  *(_QWORD *)v29 = v21;
  *((_QWORD *)v29 + 1) = v23;
  v29[16] = v19;
  *((_QWORD *)v29 + 3) = v25;
  sub_AF8D8(v21, v23, v19);
  v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  v30(v14, v9);
  sub_AF8E8(v21, v23, v19);
  v31 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t, __n128))v30)(v12, v9, v31);
}

uint64_t sub_E758A0()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_E758C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_E758D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v12;
  char v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a2 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1868);
  v7 = swift_getKeyPath(&unk_10B1890);
  v13 = 1;
  swift_retain();
  static Published.subscript.setter(&v13, v5, KeyPath, v7);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject(&unk_13CB1D0, 40, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  swift_retain();
  sub_E08E7C((uint64_t)v4, (uint64_t)&unk_150C268, (uint64_t)v9);
  v10 = swift_release();
  return static OpenURLAction.Result.handled.getter(v10);
}

uint64_t sub_E759F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  _BYTE v27[8];
  uint64_t v28;
  unint64_t v29;
  void *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  __chkstk_darwin();
  v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_E6C9C8((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    result = sub_56024((uint64_t)v3, &qword_15068B0);
    v9 = 0;
    v10 = 0;
LABEL_6:
    v17 = 0;
    v18 = 0;
    v25 = 0;
    v21 = 0;
    v23 = 0;
    v24 = 0uLL;
    goto LABEL_7;
  }
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v12 = URL.dataRepresentation.getter(v11);
  QRCode.init(data:errorCorrectionLevel:)(v12, v13, 76, (uint64_t)v27);
  v14 = v28;
  v15 = v29;
  v16 = v30;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_5C090((uint64_t)v27, (uint64_t)&v31, (uint64_t *)&unk_150C150);
  v10 = v33;
  if (!v33)
  {
    v9 = 0;
    goto LABEL_6;
  }
  v26 = v31;
  v9 = v32;
  v17 = v34;
  sub_50CB4(v14, v15);
  v18 = static SafeAreaRegions.all.getter(v16);
  v19 = static Edge.Set.all.getter(v18);
  v20 = v19;
  v21 = static Alignment.center.getter(v19);
  v23 = v22;
  result = sub_A2ADF4((uint64_t)v27);
  v24 = v26;
  v25 = v20;
LABEL_7:
  *(_OWORD *)a1 = v24;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v18;
  *(_QWORD *)(a1 + 48) = v25;
  *(_QWORD *)(a1 + 56) = v21;
  *(_QWORD *)(a1 + 64) = v23;
  return result;
}

uint64_t sub_E75BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE v27[15];
  char v28;
  _QWORD v29[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
  __chkstk_darwin();
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v27[-v9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_150B670);
  __chkstk_darwin();
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Playlist.Collaborator(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin();
  v17 = &v27[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v14 + 16))(v17, a1, v13, v15);
  v18 = *(_QWORD *)(a2 + 8);
  *v12 = swift_getKeyPath(&unk_10B0F80);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  swift_storeEnumTagMultiPayload(v12, v19, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(a3, v17, v13);
  v20 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  *(_QWORD *)(a3 + v20[5]) = v18;
  v21 = a3 + v20[6];
  v28 = 0;
  swift_retain();
  State.init(wrappedValue:)(v29, &v28, &type metadata for Bool);
  v22 = v29[1];
  *(_BYTE *)v21 = v29[0];
  *(_QWORD *)(v21 + 8) = v22;
  v23 = (_QWORD *)(a3 + v20[7]);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  sub_5C238((uint64_t)v10, (uint64_t)v8, &qword_1508780);
  State.init(wrappedValue:)(v23, v8, v6);
  sub_56024((uint64_t)v10, &qword_1508780);
  v24 = (_QWORD *)(a3 + v20[8]);
  *v24 = swift_getKeyPath(&unk_10B0F50);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  swift_storeEnumTagMultiPayload(v24, v25, 0);
  return sub_5C090((uint64_t)v12, a3 + v20[9], &qword_150B670);
}

uint64_t sub_E75E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  __n128 v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v42 = a2;
  v3 = type metadata accessor for BorderlessButtonStyle(0);
  v39 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for Collaboration.Management.View(0);
  v6 = *(_QWORD *)(v38 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0D8);
  v14 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  v41 = v14;
  __chkstk_darwin();
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(a1, (uint64_t)v8, type metadata accessor for Collaboration.Management.View);
  v17 = *(unsigned __int8 *)(v6 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_13CB090, v18 + v7, v17 | 7);
  sub_5C04C((uint64_t)v8, v19 + v18, type metadata accessor for Collaboration.Management.View);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0F8);
  v21 = sub_E87C34();
  v23 = Button.init(action:label:)(sub_E87C20, v19, sub_E76268, 0, v20, v21, v22);
  BorderlessButtonStyle.init()(v23);
  v24 = sub_5C150(&qword_150C0E8, &qword_150C0E0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v25 = sub_4DD24(&qword_150C0F0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)(v5, v9, v3, v24, v25);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = a1 + *(int *)(v38 + 48);
  v27 = *(_BYTE *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  v49 = v27;
  v50 = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(&v45, v29);
  v30 = v45;
  v31 = v46;
  v32 = v47;
  v44 = a1;
  v45 = v9;
  v46 = v3;
  v47 = v24;
  v48 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v45, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v34 = v40;
  View.alert(isPresented:content:)(v30, v31, v32, sub_E87D44, v43, v40, OpaqueTypeConformance2);
  swift_release();
  v35 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v41 + 8))(v16, v34, v35);
}

uint64_t sub_E76120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 48));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "[Management] Remove Join Request button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

__n128 sub_E76268@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __n128 result;
  _BYTE v29[16];
  _OWORD v30[9];
  __int128 v31;
  __n128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v29[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x800000000110E720);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v10 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v3, 0, 0, 256);
  v13 = v12;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  *(_QWORD *)&v31 = v11;
  *((_QWORD *)&v31 + 1) = v13;
  v14 = sub_DD0BF8();
  v15 = Text.init<A>(_:)(&v31, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  LOBYTE(v13) = v20 & 1;
  v21 = static Alignment.center.getter(v15);
  sub_9C0B6C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1, v21, v22, v15, v17, v13, v19);
  sub_AF8E8(v15, v17, v13);
  swift_bridgeObjectRelease();
  v37 = v30[6];
  v38 = v30[7];
  v39 = v30[8];
  v33 = v30[2];
  v34 = v30[3];
  v35 = v30[4];
  v36 = v30[5];
  v31 = v30[0];
  v32 = (__n128)v30[1];
  v23 = static Color.red.getter();
  KeyPath = swift_getKeyPath(&unk_10B16E8);
  v25 = v38;
  *(_OWORD *)(a1 + 96) = v37;
  *(_OWORD *)(a1 + 112) = v25;
  *(_OWORD *)(a1 + 128) = v39;
  v26 = v34;
  *(_OWORD *)(a1 + 32) = v33;
  *(_OWORD *)(a1 + 48) = v26;
  v27 = v36;
  *(_OWORD *)(a1 + 64) = v35;
  *(_OWORD *)(a1 + 80) = v27;
  result = v32;
  *(_OWORD *)a1 = v31;
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 144) = KeyPath;
  *(_QWORD *)(a1 + 152) = v23;
  return result;
}

uint64_t sub_E764EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a1;
  v66 = a2;
  v60 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v2 = __chkstk_darwin();
  v61 = v3;
  v63 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v2);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v5;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v53 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x800000000110E6C0);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14(v11, v13, v8);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v15 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v67 = v16;
  v68 = v18;
  v20 = sub_DD0BF8();
  v21 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v58 = v22;
  v59 = v21;
  v56 = v23;
  v57 = v24;
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000037, 0x800000000110E6E0);
  v14(v11, v13, v8);
  v25 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v7, 0, 0, 256);
  v28 = v27;
  v19(v13, v8);
  v67 = v26;
  v68 = v28;
  v29 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v54 = v30;
  v55 = v29;
  v53 = v31;
  v33 = v32 & 1;
  String.LocalizationValue.init(stringLiteral:)(0x522065766F6D6552, 0xEE00747365757165);
  v14(v11, v13, v8);
  v34 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v35 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v34, v7, 0, 0, 256);
  v37 = v36;
  v19(v13, v8);
  v67 = v35;
  v68 = v37;
  v38 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  v45 = v63;
  sub_5BDB8(v62, v63, type metadata accessor for Collaboration.Management.View);
  v46 = *(unsigned __int8 *)(v60 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_13CB0B8, v47 + v61, v46 | 7);
  sub_5C04C(v45, v48 + v47, type metadata accessor for Collaboration.Management.View);
  v49 = v64;
  static Alert.Button.destructive(_:action:)(v38, v40, v44, v42, sub_E87D50, v48);
  sub_AF8E8(v38, v40, v44);
  swift_release();
  v50 = swift_bridgeObjectRelease();
  v51 = v65;
  static Alert.Button.cancel(_:)(UIScreen.Dimensions.size.getter, 0, v50);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v59, v58, v56 & 1, v57, v55, v54, v33, v53, v49, v51);
}

uint64_t sub_E76954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_E6D1F4();
  type metadata accessor for Collaboration.Management.View(0);
  sub_E429D0((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_E769F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1790);
  swift_getKeyPath(&unk_10B17B8);
  static Published.subscript.getter(&v16, v4, KeyPath);
  swift_release();
  swift_release();
  sub_5BDB8(a1, (uint64_t)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v6 = *(unsigned __int8 *)(v2 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_13CB0E0, v7 + v3, v6 | 7);
  sub_5C04C((uint64_t)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for Collaboration.Management.View);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B160);
  v10 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v11 = sub_5C150(&qword_150C118, &qword_150B160, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_4DD24(&qword_150C0A8, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10B15D8);
  v13 = sub_4DD24(&qword_150C120, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  return ForEach<>.init(_:content:)(&v16, sub_E87D58, v8, v9, &type metadata for MusicItemID, v10, v11, v12, v13);
}

uint64_t sub_E76BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD v29[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = (char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v29[-1] - v10;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v13 = (char *)&v29[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1790);
  swift_getKeyPath(&unk_10B17B8);
  static Published.subscript.getter(v29, v14, KeyPath);
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(v29[0] + 16);
  swift_bridgeObjectRelease();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
  v29[0] = v16;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v29, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v18._object = (void *)0x800000000110E740;
  v18._countAndFlagsBits = 0xD000000000000010;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  String.LocalizationValue.init(stringInterpolation:)(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v19 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v20 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v19, v5, 0, 0, 256);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v29[0] = v20;
  v29[1] = v22;
  v23 = sub_DD0BF8();
  result = Text.init<A>(_:)(v29, &type metadata for String, v23);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v25;
  *(_BYTE *)(a2 + 16) = v26 & 1;
  *(_QWORD *)(a2 + 24) = v27;
  return result;
}

uint64_t sub_E76E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[2];
  unsigned __int8 v21;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin();
  v7 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(v6);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v19 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C128) + 44);
  sub_5BDB8(a1, (uint64_t)v7, type metadata accessor for Collaboration.Management.View);
  type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = v11 + v5;
  v13 = v10 | 7;
  v14 = swift_allocObject(&unk_13CB108, v12, v10 | 7);
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v7, v14 + v11, type metadata accessor for Collaboration.Management.View);
  sub_5BDB8(a1, (uint64_t)v7, type metadata accessor for Collaboration.Management.View);
  v16 = static MainActor.shared.getter(v15);
  v17 = swift_allocObject(&unk_13CB130, v12, v13);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v7, v17 + v11, type metadata accessor for Collaboration.Management.View);
  Binding.init(get:set:)(v20, sub_E87D60, v14, sub_E87F64, v17, &type metadata for Bool);
  return Toggle.init(isOn:label:)(v20[0], v20[1], v21, sub_E77198, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_E76FEC(uint64_t a1@<X2>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1820);
  v5 = swift_getKeyPath(&unk_10B1848);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = (v6 & 1) == 0;
}

double sub_E77070(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  BOOL v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *(_QWORD *)(a4 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1820);
  v11 = swift_getKeyPath(&unk_10B1848);
  v12 = (v8 & 1) == 0;
  v17 = v12;
  swift_retain();
  static Published.subscript.setter(&v17, v9, KeyPath, v11);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v14 = swift_allocObject(&unk_13CB158, 41, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = v9;
  *(_BYTE *)(v14 + 40) = v12;
  swift_retain();
  sub_E08FC8((uint64_t)v7, (uint64_t)&unk_150C138, v14);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E77198@<X0>(uint64_t a1@<X8>)
{
  return sub_E7A620(0xD000000000000015, 0x800000000110E840, a1);
}

void sub_E771B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  unsigned __int8 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[16];
  __int128 v52;
  __int128 v53;
  __int16 v54;
  __int128 v55;
  __int128 v56;
  unsigned __int8 v57;
  char v58;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v11 = &v51[-v10];
  v12 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B1820);
  swift_getKeyPath(&unk_10B1848);
  static Published.subscript.getter(&v55, v12, KeyPath);
  swift_release();
  swift_release();
  if ((v55 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x800000000110E760);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v28 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v29 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v28, v5, 0, 0, 256);
    v31 = v30;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
    *(_QWORD *)&v55 = v29;
    *((_QWORD *)&v55 + 1) = v31;
    v32 = sub_DD0BF8();
    v21 = Text.init<A>(_:)(&v55, &type metadata for String, v32);
    v23 = v21;
    v24 = v22;
    *(_QWORD *)&v52 = v21;
    *((_QWORD *)&v52 + 1) = v22;
    v26 = v33 & 1;
    *(_QWORD *)&v53 = v33 & 1;
    *((_QWORD *)&v53 + 1) = v34;
    LOBYTE(v54) = 0;
    goto LABEL_9;
  }
  v14 = swift_getKeyPath(&unk_10B1748);
  swift_getKeyPath(&unk_10B1770);
  static Published.subscript.getter(&v55, v12, v14);
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v55 + 16);
  swift_bridgeObjectRelease();
  if (v15)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000045, 0x800000000110E7B0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v16 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v17 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v16, v5, 0, 0, 256);
    v19 = v18;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
    *(_QWORD *)&v55 = v17;
    *((_QWORD *)&v55 + 1) = v19;
    v20 = sub_DD0BF8();
    v21 = Text.init<A>(_:)(&v55, &type metadata for String, v20);
    v23 = v21;
    v24 = v22;
    v26 = v25 & 1;
    *(_QWORD *)&v52 = v21;
    *((_QWORD *)&v52 + 1) = v22;
    *(_QWORD *)&v53 = v25 & 1;
    *((_QWORD *)&v53 + 1) = v27;
    LOBYTE(v54) = 1;
LABEL_9:
    sub_AF8D8(v21, v22, v26);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)(&v52, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v52 = v55;
    v53 = v56;
    v54 = v57;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0A0);
    v36 = sub_E87CE0((unint64_t *)&qword_150C098, &qword_150C0A0, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    _ConditionalContent<>.init(storage:)(&v52, v35, &type metadata for Text, v36, &protocol witness table for Text);
    sub_AF8E8(v23, v24, v26);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000003BLL, 0x800000000110E800);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v41 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v42 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v41, v5, 0, 0, 256);
  v44 = v43;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
  *(_QWORD *)&v55 = v42;
  *((_QWORD *)&v55 + 1) = v44;
  v45 = sub_DD0BF8();
  *(_QWORD *)&v52 = Text.init<A>(_:)(&v55, &type metadata for String, v45);
  *((_QWORD *)&v52 + 1) = v46;
  *(_QWORD *)&v53 = v47 & 1;
  *((_QWORD *)&v53 + 1) = v48;
  v54 = 256;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0A0);
  v50 = sub_E87CE0((unint64_t *)&qword_150C098, &qword_150C0A0, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  _ConditionalContent<>.init(storage:)(&v52, v49, &type metadata for Text, v50, &protocol witness table for Text);
LABEL_10:
  v37 = *((_QWORD *)&v55 + 1);
  v38 = v56;
  v39 = v57;
  v40 = v58;
  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v37;
  *(_OWORD *)(a2 + 16) = v38;
  *(_BYTE *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 33) = v40;
}

uint64_t sub_E77704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Collaboration.Management.View(0);
  sub_E429D0((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_E7779C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v3 = type metadata accessor for DismissAction(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 == 1)
  {
    type metadata accessor for Collaboration.Management.View(0);
    sub_E429D0((uint64_t)v6);
    DismissAction.callAsFunction()();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_E77844()
{
  id v0;
  char *v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = (char *)objc_msgSend(v0, "userInterfaceIdiom");

  byte_150B0A0 = v1 == (_BYTE *)&dword_4 + 2;
}

uint64_t sub_E778A4(uint64_t a1)
{
  return sub_E779F0(a1, (uint64_t (*)(void))&static Font.largeTitle.getter, (uint64_t (*)(void))&static Font.title.getter, &qword_150B0A8);
}

void sub_E778C0(__n128 a1)
{
  uint64_t v1;

  if (qword_1506298 != -1)
    swift_once(&qword_1506298, sub_E77844);
  if (byte_150B0A0 == 1)
  {
    v1 = static Font.largeTitle.getter();
  }
  else
  {
    static Font.title2.getter(a1);
    v1 = Font.bold()();
    swift_release();
  }
  qword_150B0B0 = v1;
}

uint64_t sub_E7793C()
{
  double v0;
  uint64_t result;

  if (qword_1506298 != -1)
    result = swift_once(&qword_1506298, sub_E77844);
  v0 = 56.0;
  if (byte_150B0A0)
    v0 = 68.0;
  qword_150B0B8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E7799C(uint64_t a1)
{
  return sub_E779F0(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &qword_150B0C0);
}

uint64_t sub_E779B8(uint64_t a1)
{
  return sub_E779F0(a1, (uint64_t (*)(void))&static Font.footnote.getter, (uint64_t (*)(void))&static Font.caption.getter, &qword_150B0C8);
}

uint64_t sub_E779D4(uint64_t a1)
{
  return sub_E779F0(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.caption2.getter, &qword_150B0D0);
}

uint64_t sub_E779F0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t (*v7)(void);
  uint64_t result;

  if (qword_1506298 != -1)
    swift_once(&qword_1506298, sub_E77844);
  if (byte_150B0A0)
    v7 = a2;
  else
    v7 = a3;
  result = v7();
  *a4 = result;
  return result;
}

void sub_E77A5C(uint64_t a1, __n128 a2)
{
  double v2;

  if (qword_1506298 != -1)
    a1 = swift_once(&qword_1506298, sub_E77844);
  if (byte_150B0A0 == 1)
    v2 = static Font.Weight.semibold.getter(a2);
  else
    v2 = static Font.Weight.regular.getter(a1);
  qword_150B0D8 = *(_QWORD *)&v2;
}

uint64_t sub_E77AB8()
{
  double v0;
  uint64_t result;

  if (qword_1506298 != -1)
    result = swift_once(&qword_1506298, sub_E77844);
  v0 = 12.0;
  if (byte_150B0A0)
    v0 = 0.0;
  qword_150B0E0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E77B10()
{
  double v0;
  uint64_t result;

  if (qword_1506298 != -1)
    result = swift_once(&qword_1506298, sub_E77844);
  v0 = -4.0;
  if (byte_150B0A0)
    v0 = 0.0;
  qword_150B0E8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E77B68()
{
  double v0;
  uint64_t result;

  if (qword_1506298 != -1)
    result = swift_once(&qword_1506298, sub_E77844);
  v0 = 32.0;
  if (byte_150B0A0)
    v0 = 44.0;
  qword_150B0F0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E77BC8()
{
  double v0;
  uint64_t result;

  if (qword_1506298 != -1)
    result = swift_once(&qword_1506298, sub_E77844);
  v0 = 84.0;
  if (byte_150B0A0)
    v0 = 169.0;
  qword_150B0F8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E77C2C()
{
  double v0;
  uint64_t result;

  if (qword_1506298 != -1)
    result = swift_once(&qword_1506298, sub_E77844);
  v0 = 38.0;
  if (byte_150B0A0)
    v0 = 48.0;
  qword_150B100 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E77C8C(uint64_t a1)
{
  uint64_t result;

  if (qword_1506298 != -1)
    a1 = swift_once(&qword_1506298, sub_E77844);
  if (byte_150B0A0 == 1)
  {
    result = static Color.accentColor.getter(a1);
  }
  else
  {
    if (qword_1506030 != -1)
      swift_once(&qword_1506030, sub_DD39E4);
    result = Color.init(_:)((id)static UIColor.MusicTint.normal);
  }
  qword_150B108 = result;
  return result;
}

uint64_t sub_E77D20()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for DynamicTypeSize(0);
  __swift_allocate_value_buffer(v0, qword_150B110);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_150B110);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for DynamicTypeSize.accessibility2(_:), v0);
}

uint64_t sub_E77D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for DynamicTypeSize(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCE8);
  __swift_allocate_value_buffer(v4, qword_150B128);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_150B128);
  if (qword_1506308 != -1)
    swift_once(&qword_1506308, sub_E77D20);
  v6 = __swift_project_value_buffer(v0, (uint64_t)qword_150B110);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  v7 = sub_4DD24((unint64_t *)&unk_150BD30, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v3, v3, v0, v7);
  if ((result & 1) != 0)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  __break(1u);
  return result;
}

uint64_t sub_E77EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  char *v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[16];
  uint64_t v57;
  char v58[16];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;

  v54 = a1;
  v55 = type metadata accessor for AccessibilityTraits(0);
  v53 = *(_QWORD *)(v55 - 8);
  v2 = __chkstk_darwin();
  v52 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AccessibilityChildBehavior(0, v2);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin();
  v49 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BB28);
  __chkstk_darwin();
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BB30);
  __chkstk_darwin();
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BB38);
  v44 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BB40);
  v46 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin();
  v42 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BB48);
  v48 = *(_QWORD *)(v47 - 8);
  v15 = __chkstk_darwin();
  v43 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v15);
  *((_QWORD *)v7 + 1) = 0x4028000000000000;
  v7[16] = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BB50);
  sub_E78338(v1, (uint64_t)&v7[*(int *)(v17 + 44)]);
  sub_5C238((uint64_t)v7, (uint64_t)v10, &qword_150BB28);
  v10[*(int *)(v8 + 36)] = 0;
  sub_56024((uint64_t)v7, &qword_150BB28);
  v59 = v1;
  v18 = v1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BB58);
  v20 = sub_E860C4();
  v21 = sub_3D38D0(&qword_150BB80, &qword_150BB58, (void (*)(void))sub_E86160);
  View.swipeActions<A>(edge:allowsFullSwipe:content:)(1, 1, sub_E860BC, v58, v8, v19, v20, v21);
  sub_56024((uint64_t)v10, &qword_150BB30);
  v22 = v1 + *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 24);
  v23 = *(_BYTE *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v64 = v23;
  v65 = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(&v60, v25);
  v26 = v60;
  v27 = v61;
  v28 = v62;
  v57 = v18;
  v60 = v8;
  v61 = v19;
  v62 = v20;
  v63 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v60, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
  v30 = v42;
  View.alert(isPresented:content:)(v26, v27, v28, sub_E861FC, v56, v11, OpaqueTypeConformance2);
  swift_release();
  v31 = swift_release();
  v32 = (*(uint64_t (**)(char *, uint64_t, __n128))(v44 + 8))(v13, v11, v31);
  v33 = v49;
  static AccessibilityChildBehavior.combine.getter(v32);
  v60 = v11;
  v61 = OpaqueTypeConformance2;
  v34 = swift_getOpaqueTypeConformance2(&v60, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
  v35 = v43;
  v36 = v45;
  View.accessibilityElement(children:)(v33, v45, v34);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v51);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v30, v36);
  v38 = v52;
  static AccessibilityTraits.isButton.getter(v37);
  v60 = v36;
  v61 = v34;
  v39 = swift_getOpaqueTypeConformance2(&v60, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v40 = v47;
  View.accessibilityAddTraits(_:)(v38, v47, v39);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v35, v40);
}

uint64_t sub_E78338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  __int128 v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  unsigned __int8 v156;
  _OWORD v157[3];
  uint64_t v158;
  char v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  __int16 v163;

  v146 = a2;
  v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v118 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v119 = v4;
  v123 = (uint64_t)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBC0);
  __chkstk_darwin();
  v128 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBC8);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin();
  v120 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBD0);
  __chkstk_darwin();
  v117 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v124 = (uint64_t)&v115 - v8;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBD8);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v126 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for Playlist(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin();
  v140 = (uint64_t *)((char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BBE0);
  __chkstk_darwin();
  v148 = (uint64_t)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v149 = (uint64_t)&v115 - v12;
  v138 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v136 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin();
  v134 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v133 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin();
  v130 = (uint64_t)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBF0);
  __chkstk_darwin();
  v19 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBF8);
  __chkstk_darwin();
  v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC00);
  v139 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v137 = (uint64_t)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DynamicTypeSize(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v27 = (char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v115 - v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BC08);
  __chkstk_darwin();
  v147 = (uint64_t)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v150 = (uint64_t)&v115 - v31;
  v143 = v3;
  v32 = a1;
  sub_E42DEC((uint64_t)v29);
  if (qword_1506308 != -1)
    swift_once(&qword_1506308, sub_E77D20);
  v33 = __swift_project_value_buffer(v24, (uint64_t)qword_150B110);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v33, v24);
  v34 = sub_4DD24((unint64_t *)&qword_150BC10, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v35 = dispatch thunk of static Comparable.< infix(_:_:)(v27, v29, v24, v34);
  v36 = *(void (**)(char *, uint64_t))(v25 + 8);
  v36(v27, v24);
  v36(v29, v24);
  v37 = 1;
  v38 = v32;
  v39 = v150;
  if ((v35 & 1) == 0)
  {
    v116 = v22;
    sub_E791B4(v16);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v41 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v133, 7, 10, v40);
    v158 = 0;
    v159 = 1;
    v160 = 0;
    v161 = 1;
    v162 = 0;
    v163 = 513;
    v42 = v136;
    v43 = (uint64_t)v134;
    v44 = v138;
    (*(void (**)(char *, _QWORD, uint64_t))(v136 + 104))(v134, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v138);
    v45 = v130;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v16, v41, (uint64_t)&v158, v43, v130);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
    sub_5C0DC(v41, type metadata accessor for ArtworkImage.Placeholder);
    sub_56024((uint64_t)v16, (uint64_t *)&unk_150CEE0);
    v46 = v131;
    v47 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v19, v45, v132);
    v48 = &v19[*(int *)(v129 + 36)];
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    v48[16] = 1;
    v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    if (qword_15062F8 != -1)
      v49 = swift_once(&qword_15062F8, sub_E77C2C);
    v50 = qword_150B100;
    v51 = static Alignment.center.getter(v49);
    _FrameLayout.init(width:height:alignment:)(v157, v50, 0, v50, 0, v51, v52);
    sub_5C238((uint64_t)v19, (uint64_t)v21, &qword_150BBF0);
    v53 = &v21[*(int *)(v135 + 36)];
    v54 = v157[1];
    *(_OWORD *)v53 = v157[0];
    *((_OWORD *)v53 + 1) = v54;
    *((_OWORD *)v53 + 2) = v157[2];
    sub_56024((uint64_t)v19, &qword_150BBF0);
    v55 = v137;
    sub_5C238((uint64_t)v21, v137, &qword_150BBF8);
    v22 = v116;
    v56 = v55 + *(int *)(v116 + 36);
    *(_QWORD *)v56 = 0;
    *(_WORD *)(v56 + 8) = 257;
    sub_56024((uint64_t)v21, &qword_150BBF8);
    v39 = v150;
    sub_5C090(v55, v150, &qword_150BC00);
    v37 = 0;
  }
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56))(v39, v37, 1, v22);
  v133 = (char *)static HorizontalAlignment.leading.getter(v57);
  sub_E79594(v38, (uint64_t *)&v151);
  v136 = *((_QWORD *)&v151 + 1);
  v137 = v151;
  v135 = v152;
  v58 = v153;
  v134 = (char *)*((_QWORD *)&v152 + 1);
  v59 = *((_QWORD *)&v153 + 1);
  v60 = v154;
  v139 = v155;
  LODWORD(v138) = v156;
  v61 = *(int *)(v143 + 20);
  v62 = *(_QWORD *)(v38 + v61);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  v64 = v140;
  static Published.subscript.getter(v140, v62, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v62) = Playlist.isOwner.getter(v65);
  v66 = (*(uint64_t (**)(_QWORD *, uint64_t))(v141 + 8))(v64, v142);
  v67 = 1;
  if ((v62 & 1) != 0)
  {
    if ((Playlist.Collaborator.isPending.getter(v66) & 1) != 0)
    {
      v68 = *(_QWORD *)(v38 + v61);
      v69 = swift_getKeyPath(&unk_10B16A0);
      swift_getKeyPath(&unk_10B16C8);
      static Published.subscript.getter(&v151, v68, v69);
      swift_release();
      swift_release();
      LOBYTE(v69) = sub_DE82C8(v38, v151);
      swift_bridgeObjectRelease();
      if ((v69 & 1) != 0)
      {
        v71 = v120;
        v72 = ProgressView<>.init<>()(v70);
        if (qword_15062E8 != -1)
          v72 = swift_once(&qword_15062E8, sub_E77B68);
        v73 = qword_150B0F0;
        v74 = static Alignment.center.getter(v72);
        _FrameLayout.init(width:height:alignment:)(&v151, v73, 0, v73, 0, v74, v75);
        v76 = v121;
        v77 = (uint64_t)v117;
        v78 = v122;
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v117, v71, v122);
        v79 = v127;
        v80 = (_OWORD *)(v77 + *(int *)(v127 + 36));
        v81 = v152;
        *v80 = v151;
        v80[1] = v81;
        v80[2] = v153;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v78);
        v82 = v124;
        sub_5C090(v77, v124, &qword_150BBD0);
        v83 = v128;
        sub_5C238(v82, (uint64_t)v128, &qword_150BBD0);
        swift_storeEnumTagMultiPayload(v83, v125, 0);
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC28);
        v85 = sub_E864BC();
        v86 = sub_5C150((unint64_t *)&unk_150BC40, &qword_150BC28, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v87 = (uint64_t)v126;
        _ConditionalContent<>.init(storage:)(v83, v79, v84, v85, v86);
        sub_56024(v82, &qword_150BBD0);
        v39 = v150;
      }
      else
      {
        v88 = v123;
        sub_5BDB8(v38, v123, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v89 = *(unsigned __int8 *)(v118 + 80);
        v90 = (v89 + 16) & ~v89;
        v91 = v90 + v119;
        v92 = v89 | 7;
        v93 = swift_allocObject(&unk_13CAEB0, v90 + v119, v89 | 7);
        sub_5C04C(v88, v93 + v90, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        sub_5BDB8(v38, v88, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v94 = swift_allocObject(&unk_13CAED8, v91, v92);
        sub_5C04C(v88, v94 + v90, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        swift_retain();
        v95 = v128;
        *v128 = 1;
        *((_QWORD *)v95 + 1) = sub_E86448;
        *((_QWORD *)v95 + 2) = v93;
        v95[24] = 0;
        *((_QWORD *)v95 + 4) = sub_E8645C;
        *((_QWORD *)v95 + 5) = v94;
        swift_retain();
        swift_storeEnumTagMultiPayload(v95, v125, 1);
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC28);
        v97 = sub_E864BC();
        v98 = sub_5C150((unint64_t *)&unk_150BC40, &qword_150BC28, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v99 = v97;
        v87 = (uint64_t)v126;
        _ConditionalContent<>.init(storage:)(v95, v127, v96, v99, v98);
        swift_release();
        swift_release();
      }
      sub_5C090(v87, v149, &qword_150BBD8);
      v67 = 0;
    }
    else
    {
      v67 = 1;
    }
  }
  v100 = v149;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v149, v67, 1, v145);
  v101 = v147;
  sub_5C238(v39, v147, &qword_150BC08);
  sub_5C238(v100, v148, (uint64_t *)&unk_150BBE0);
  v102 = v146;
  sub_5C238(v101, v146, &qword_150BC08);
  v103 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150BC20);
  v104 = v102 + v103[12];
  *(_QWORD *)v104 = v133;
  *(_QWORD *)(v104 + 8) = 0;
  *(_BYTE *)(v104 + 16) = 1;
  v105 = v137;
  v106 = v136;
  *(_QWORD *)(v104 + 24) = v137;
  *(_QWORD *)(v104 + 32) = v106;
  v107 = v135;
  v108 = (uint64_t)v134;
  *(_QWORD *)(v104 + 40) = v135;
  *(_QWORD *)(v104 + 48) = v108;
  *(_QWORD *)(v104 + 56) = v58;
  *(_QWORD *)(v104 + 64) = v59;
  v109 = v139;
  *(_QWORD *)(v104 + 72) = v60;
  *(_QWORD *)(v104 + 80) = v109;
  v110 = v138;
  *(_BYTE *)(v104 + 88) = v138;
  v111 = v102 + v103[16];
  *(_QWORD *)v111 = 0;
  *(_BYTE *)(v111 + 8) = 1;
  v112 = v102 + v103[20];
  v113 = v148;
  sub_5C238(v148, v112, (uint64_t *)&unk_150BBE0);
  sub_184E34(v105, v106, v107, v108);
  sub_E863CC(v58, v59, v60, v109, v110);
  sub_56024(v149, (uint64_t *)&unk_150BBE0);
  sub_56024(v150, &qword_150BC08);
  sub_56024(v113, (uint64_t *)&unk_150BBE0);
  sub_184E64(v105, v106, v107, v108);
  sub_E863E4(v58, v59, v60, v109, v110);
  return sub_56024(v147, &qword_150BC08);
}

uint64_t sub_E791B4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  v38 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin();
  v37 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Artwork(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v35 = (char *)&v35 - v5;
  __chkstk_darwin();
  v7 = (char *)&v35 - v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v35 - v10;
  __chkstk_darwin();
  v13 = (char *)&v35 - v12;
  v14 = __chkstk_darwin();
  v16 = (char *)&v35 - v15;
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, double))(v3 + 56);
  v18 = v17((char *)&v35 - v15, 1, 1, v2, v14);
  Playlist.Collaborator.artwork.getter(v18);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v19(v13, 1, v2) == 1)
  {
    sub_56024((uint64_t)v13, (uint64_t *)&unk_150CB40);
    v20 = sub_4E684(0, (unint64_t *)&qword_150BC50, MPArtworkCatalog_ptr);
    v21 = Playlist.Collaborator.name.getter(v20);
    v23 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v21, v22, 0, 1);
    swift_bridgeObjectRelease();
    if (v23)
    {
      Artwork.init(_:)(v23);
      sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)(v11, 0, 1, v2);
      sub_5C090((uint64_t)v11, (uint64_t)v16, (uint64_t *)&unk_150CB40);
    }
  }
  else
  {
    sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
    v24 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v24(v7, v13, v2);
    v24(v16, v7, v2);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)(v16, 0, 1, v2);
  }
  sub_5C238((uint64_t)v16, (uint64_t)v9, (uint64_t *)&unk_150CB40);
  if (v19(v9, 1, v2) == 1)
  {
    sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
    sub_56024((uint64_t)v9, (uint64_t *)&unk_150CB40);
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v38, 1, 1, v25);
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v28 = v35;
    v27(v35, v9, v2);
    v29 = v36;
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v36, v28, v2);
    v31 = (uint64_t)v37;
    static Artwork.CropStyle.boundedBox.getter(v30);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v2);
    sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
    v32 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
    v33 = v38;
    v27(v38, v29, v2);
    v34 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_5C090(v31, (uint64_t)&v33[*(int *)(v34 + 20)], &qword_15070F0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
}

double sub_E79594@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  unsigned __int8 v145;

  v135 = a2;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v4 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v131 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v132 = *(_QWORD *)(v6 - 8);
  v133 = v6;
  __chkstk_darwin();
  v129 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v130 = (char *)&v127 - v8;
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v128 = *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 20);
  v13 = *(_QWORD *)(a1 + v128);
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v12, v13, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v13) = Playlist.isOwner.getter(v15);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  v16 = sub_E79D88(v13 & 1);
  if (v17)
  {
    v141 = v16;
    v142 = v17;
    v18 = sub_DD0BF8();
    v19 = Text.init<A>(_:)(&v141, &type metadata for String, v18);
    v21 = v20;
    v23 = v22;
    v25 = v24 & 1;
    LODWORD(v141) = static HierarchicalShapeStyle.primary.getter(v26);
    v27 = Text.foregroundStyle<A>(_:)(&v141, v19, v21, v25, v23, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_AF8E8(v19, v21, v25);
    swift_bridgeObjectRelease();
    if (qword_15062B8 != -1)
      swift_once(&qword_15062B8, sub_E7799C);
    swift_retain();
    v34 = v31 & 1;
    v36 = Text.font(_:)(v35, v27, v29, v34, v33);
    v38 = v37;
    v40 = v39;
    v134 = v41;
    swift_release();
    v42 = v40 & 1;
    sub_AF8E8(v27, v29, v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = 0;
    v38 = 0;
    v42 = 0;
    v134 = 0;
  }
  if ((Playlist.Collaborator.isPending.getter(v16) & 1) != 0 && (sub_E6B3FC() & 1) == 0)
  {
    v127 = v42;
    v89 = v130;
    String.LocalizationValue.init(stringLiteral:)(0x6F742073746E6157, 0xED00006E696F4A20);
    v91 = v132;
    v90 = v133;
    v92 = v129;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v129, v89, v133);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v128 = v38;
    v93 = qword_1583020;
    v94 = (id)qword_1583020;
    v95 = v131;
    static Locale.current.getter(v94);
    v96 = String.init(localized:table:bundle:locale:comment:)(v92, 0, 0, v93, v95, 0, 0, 256);
    v98 = v97;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v89, v90);
    v141 = v96;
    v142 = v98;
    v99 = sub_DD0BF8();
    v100 = Text.init<A>(_:)(&v141, &type metadata for String, v99);
    v102 = v101;
    v104 = v103;
    v106 = v105 & 1;
    LODWORD(v141) = static HierarchicalShapeStyle.secondary.getter(v107);
    v108 = Text.foregroundStyle<A>(_:)(&v141, v100, v102, v106, v104, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v110 = v109;
    v112 = v111;
    v114 = v113;
    sub_AF8E8(v100, v102, v106);
    swift_bridgeObjectRelease();
    if (qword_15062C0 != -1)
      swift_once(&qword_15062C0, sub_E779B8);
    swift_retain();
    v115 = v112 & 1;
    v117 = Text.font(_:)(v116, v108, v110, v115, v114);
    v119 = v118;
    v121 = v120;
    v123 = v122;
    swift_release();
    sub_AF8E8(v108, v110, v115);
    swift_bridgeObjectRelease();
    v136 = v117;
    v137 = v119;
    v138 = v121 & 1;
    v139 = v123;
    v140 = 0;
    goto LABEL_20;
  }
  v43 = Playlist.Collaborator.handle.getter();
  v45 = v44;
  if (v44)
  {
    v46 = v43;
    v127 = v42;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 1);
    v47._countAndFlagsBits = 64;
    v47._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v47);
    v48._countAndFlagsBits = v46;
    v48._object = v45;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v48);
    swift_bridgeObjectRelease();
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v49);
    v50 = v130;
    String.LocalizationValue.init(stringInterpolation:)(v4);
    v52 = v132;
    v51 = v133;
    v53 = v129;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v129, v50, v133);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v128 = v38;
    v54 = qword_1583020;
    v55 = (id)qword_1583020;
    v56 = v131;
    static Locale.current.getter(v55);
    v57 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v54, v56, 0, 0, 256);
    v59 = v58;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
    v141 = v57;
    v142 = v59;
    v60 = sub_DD0BF8();
    v61 = Text.init<A>(_:)(&v141, &type metadata for String, v60);
    v63 = v62;
    v65 = v64;
    v67 = v66 & 1;
    LODWORD(v141) = static HierarchicalShapeStyle.secondary.getter(v68);
    v69 = Text.foregroundStyle<A>(_:)(&v141, v61, v63, v67, v65, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    sub_AF8E8(v61, v63, v67);
    swift_bridgeObjectRelease();
    if (qword_15062C0 != -1)
      swift_once(&qword_15062C0, sub_E779B8);
    swift_retain();
    v76 = v73 & 1;
    v78 = Text.font(_:)(v77, v69, v71, v76, v75);
    v80 = v79;
    v82 = v81;
    v84 = v83;
    swift_release();
    sub_AF8E8(v69, v71, v76);
    swift_bridgeObjectRelease();
    v136 = v78;
    v137 = v80;
    v138 = v82 & 1;
    v139 = v84;
    v140 = 1;
LABEL_20:
    _ConditionalContent<>.init(storage:)(&v136, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v85 = v141;
    v86 = v142;
    v45 = v143;
    v87 = v144;
    v88 = v145;
    v38 = v128;
    v42 = v127;
    goto LABEL_21;
  }
  v85 = 0;
  v86 = 0;
  v87 = 0;
  v88 = -1;
LABEL_21:
  v125 = v134;
  v124 = v135;
  *v135 = v36;
  v124[1] = v38;
  v124[2] = v42;
  v124[3] = v125;
  v124[4] = v85;
  v124[5] = v86;
  v124[6] = (uint64_t)v45;
  v124[7] = v87;
  *((_BYTE *)v124 + 64) = v88;
  sub_184E34(v36, v38, v42, v125);
  sub_E863CC(v85, v86, (char)v45, v87, v88);
  sub_E863E4(v85, v86, (char)v45, v87, v88);
  return sub_184E64(v36, v38, v42, v125);
}

uint64_t sub_E79D88(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = Playlist.Collaborator.name.getter(v8);
  v11 = v10;
  if (v10 && (Playlist.Collaborator.isHost.getter() & 1) != 0)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1);
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
    v13._countAndFlagsBits = v9;
    v13._object = v11;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 0x2972656E774F2820;
    v14._object = (void *)0xE800000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
    v15 = String.LocalizationValue.init(stringInterpolation:)(v7);
    static Locale.current.getter(v15);
    if ((a1 & 1) != 0)
      return String.init(localized:defaultValue:table:bundle:locale:comment:)("device host owner", 17, 2, v5, 0, 0, 0, v3, "Variable is user name", 21, 2);
    else
      return String.init(localized:defaultValue:table:bundle:locale:comment:)("playlist host owner", 19, 2, v5, 0, 0, 0, v3, "Variable is user name", 21, 2);
  }
  return v9;
}

double sub_E79F58(uint64_t a1, const char *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_0, v12, v13, a2, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  return sub_E6E030(a1, a3);
}

uint64_t sub_E7A084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a2;
  v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v38 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v38 + 64);
  __chkstk_darwin();
  v41 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CE60);
  __chkstk_darwin();
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin();
  v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BB90);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(a1 + *(int *)(v3 + 20));
  KeyPath = swift_getKeyPath(&unk_10B1628);
  swift_getKeyPath(&unk_10B1650);
  static Published.subscript.getter(v14, v15, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v15) = Playlist.isOwner.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v20 = Playlist.Collaborator.isHost.getter();
    v19 = v45;
    if ((v20 & 1) != 0)
    {
      v18 = 1;
    }
    else
    {
      v21 = Playlist.Collaborator.isPending.getter(v20);
      v18 = 1;
      if (v21 != 2 && (v21 & 1) == 0)
      {
        v23 = v39;
        static ButtonRole.cancel.getter(v22);
        v24 = type metadata accessor for ButtonRole(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
        v25 = v41;
        sub_5BDB8(a1, v41, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v26 = *(unsigned __int8 *)(v38 + 80);
        v27 = (v26 + 16) & ~v26;
        v28 = swift_allocObject(&unk_13CAE88, v27 + v4, v26 | 7);
        sub_5C04C(v25, v28 + v27, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v29 = v42;
        v30 = Button.init(role:action:label:)(v23, sub_E863B0, v28, sub_E7A60C, 0, &type metadata for Text, &protocol witness table for Text);
        v31 = static Color.red.getter(v30);
        v32 = swift_getKeyPath(&unk_10B1670);
        v34 = v43;
        v33 = v44;
        v35 = (uint64_t)v40;
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v29, v44);
        v36 = (uint64_t *)(v35 + *(int *)(v8 + 36));
        *v36 = v32;
        v36[1] = v31;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v33);
        sub_5C090(v35, v19, (uint64_t *)&unk_150BB90);
        v18 = 0;
      }
    }
  }
  else
  {
    v18 = 1;
    v19 = v45;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v19, v18, 1, v8);
}

uint64_t sub_E7A3E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _BYTE v24[15];
  _BYTE v25[9];
  uint64_t v26;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
  __chkstk_darwin();
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v24[-v8];
  v10 = type metadata accessor for Playlist.Collaborator(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v12 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_5C238((uint64_t)v9, (uint64_t)v7, &qword_1508780);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  State.wrappedValue.setter(v7, v13);
  sub_56024((uint64_t)v9, &qword_1508780);
  v14 = (char *)(a1 + *(int *)(v12 + 24));
  v15 = *v14;
  v16 = *((_QWORD *)v14 + 1);
  v25[1] = v15;
  v26 = v16;
  v25[0] = 1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v25, v17);
  v18 = Logger.collaboration.unsafeMutableAddressor();
  v19 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "[Management] Remove swipe action triggered", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_E7A60C@<X0>(uint64_t a1@<X8>)
{
  return sub_E7A620(0x65766F6D6552, 0xE600000000000000, a1);
}

uint64_t sub_E7A620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD v24[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v24[-1] - v12;
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v13, v8);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v14 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v7, 0, 0, 256);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  v24[0] = v15;
  v24[1] = v17;
  v18 = sub_DD0BF8();
  result = Text.init<A>(_:)(v24, &type metadata for String, v18);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v20;
  *(_BYTE *)(a3 + 16) = v21 & 1;
  *(_QWORD *)(a3 + 24) = v22;
  return result;
}

uint64_t sub_E7A7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a1;
  v66 = a2;
  v60 = *(_QWORD *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8);
  v2 = __chkstk_darwin();
  v61 = v3;
  v63 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v2);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v5;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v53 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x800000000110E380);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14(v11, v13, v8);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v15 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v67 = v16;
  v68 = v18;
  v20 = sub_DD0BF8();
  v21 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v58 = v22;
  v59 = v21;
  v56 = v23;
  v57 = v24;
  String.LocalizationValue.init(stringLiteral:)(0x10000000000000BCLL, 0x800000000110E3A0);
  v14(v11, v13, v8);
  v25 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v7, 0, 0, 256);
  v28 = v27;
  v19(v13, v8);
  v67 = v26;
  v68 = v28;
  v29 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v54 = v30;
  v55 = v29;
  v53 = v31;
  v33 = v32 & 1;
  String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
  v14(v11, v13, v8);
  v34 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v35 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v34, v7, 0, 0, 256);
  v37 = v36;
  v19(v13, v8);
  v67 = v35;
  v68 = v37;
  v38 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  v45 = v63;
  sub_5BDB8(v62, v63, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  v46 = *(unsigned __int8 *)(v60 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_13CAE60, v47 + v61, v46 | 7);
  sub_5C04C(v45, v48 + v47, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  v49 = v64;
  static Alert.Button.destructive(_:action:)(v38, v40, v44, v42, sub_E86208, v48);
  sub_AF8E8(v38, v40, v44);
  swift_release();
  v50 = swift_bridgeObjectRelease();
  v51 = v65;
  static Alert.Button.cancel(_:)(UIScreen.Dimensions.size.getter, 0, v50);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v59, v58, v56 & 1, v57, v55, v54, v33, v53, v49, v51);
}

uint64_t sub_E7AC0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
  __chkstk_darwin();
  v1 = (uint64_t *)((char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  State.wrappedValue.getter(v1, v2);
  sub_E6DAA8((uint64_t)v1);
  return sub_56024((uint64_t)v1, &qword_1508780);
}

uint64_t sub_E7ACC0(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v15[-v8];
  if ((a1 & 1) != 0)
  {
    v11 = 0x65646F43205251;
    v10 = 0xE700000000000000;
  }
  else
  {
    v10 = 0x800000000110E510;
    v11 = 0xD000000000000011;
  }
  String.LocalizationValue.init(stringLiteral:)(v11, v10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v12 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v13 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  return v13;
}

uint64_t sub_E7AE50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  void *v42;
  char **v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70[16];
  uint64_t v71;

  v2 = v1;
  v69 = a1;
  v67 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ColorScheme(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  __chkstk_darwin();
  v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (uint64_t)&v58 - v6;
  v7 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC70);
  v11 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BC78);
  __chkstk_darwin();
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC80);
  __chkstk_darwin();
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC88);
  __chkstk_darwin();
  v63 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v2, (uint64_t)v10, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_13CAF00, v20 + v9, v19 | 7);
  sub_5C04C((uint64_t)v10, v21 + v20, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v71 = v2;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BC90);
  v23 = sub_184F98(&qword_150BC98, &qword_150BC90, (void (*)(void))sub_E86754);
  v25 = Button.init(action:label:)(sub_E86710, v21, sub_E8674C, v70, v22, v23, v24);
  v26 = static Alignment.center.getter(v25);
  v28 = sub_E98E50(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v26, v27);
  (*(void (**)(char *, uint64_t, double))(v11 + 8))(v13, v59, v28);
  v29 = v2 + *(int *)(v7 + 28);
  v30 = *(_QWORD *)v29;
  LOBYTE(v10) = *(_BYTE *)(v29 + 8);
  sub_270050(*(_QWORD *)v29, (char)v10);
  v31 = sub_E42E20(v30, (char)v10);
  sub_270154(v30, (char)v10);
  if ((v31 & 1) != 0)
  {
    if (qword_1506300 != -1)
      swift_once(&qword_1506300, sub_E77C8C);
    v32 = qword_150B108;
    swift_retain();
  }
  else
  {
    v33 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v32 = Color.init(_:)(v33);
  }
  KeyPath = swift_getKeyPath(&unk_10B16E8);
  sub_5C238((uint64_t)v15, (uint64_t)v17, &qword_150BC78);
  v35 = (uint64_t *)&v17[*(int *)(v60 + 36)];
  *v35 = KeyPath;
  v35[1] = v32;
  sub_56024((uint64_t)v15, &qword_150BC78);
  v36 = v61;
  sub_E42FAC(v61);
  v38 = v64;
  v37 = v65;
  v39 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v64, enum case for ColorScheme.light(_:), v66);
  v40 = static ColorScheme.== infix(_:_:)(v36, v38);
  v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v38, v39);
  v41((char *)v36, v39);
  v42 = (void *)objc_opt_self(UIColor);
  v43 = &selRef_systemBackgroundColor;
  if ((v40 & 1) == 0)
    v43 = &selRef_secondarySystemBackgroundColor;
  v44 = Color.init(_:)(objc_msgSend(v42, *v43));
  v45 = v68;
  v46 = &v68[*(int *)(v67 + 20)];
  v47 = enum case for RoundedCornerStyle.continuous(_:);
  v48 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
  __asm { FMOV            V0.2D, #10.0 }
  *v45 = _Q0;
  v54 = (uint64_t)v63;
  v55 = (uint64_t *)&v63[*(int *)(v62 + 36)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCE0);
  sub_5BDB8((uint64_t)v45, (uint64_t)v55 + *(int *)(v56 + 52), (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *v55 = v44;
  *(_WORD *)((char *)v55 + *(int *)(v56 + 56)) = 256;
  sub_5C238((uint64_t)v17, v54, &qword_150BC80);
  sub_5C0DC((uint64_t)v45, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_56024((uint64_t)v17, &qword_150BC80);
  return sub_5C090(v54, v69, &qword_150BC88);
}

uint64_t sub_E7B3AC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  char *v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCB8);
  __chkstk_darwin();
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CE40);
  __chkstk_darwin();
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BC90);
  v10 = __chkstk_darwin();
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0x4008000000000000;
  v6[16] = 0;
  sub_E7B57C(a1, &v6[*(int *)(v4 + 44)]);
  if (*a1)
    v13 = 2.5;
  else
    v13 = 0.0;
  sub_5C238((uint64_t)v6, (uint64_t)v9, &qword_150BCB8);
  v14 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v14 = 0;
  *((double *)v14 + 1) = v13;
  v15 = sub_56024((uint64_t)v6, &qword_150BCB8);
  v16 = static Alignment.center.getter(v15);
  sub_E98EA8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v16, v17);
  sub_56024((uint64_t)v9, (uint64_t *)&unk_150CE40);
  return sub_5C090((uint64_t)v12, a2, &qword_150BC90);
}

uint64_t sub_E7B57C@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  __n128 v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _BYTE *, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  _QWORD *v61;
  int *v62;
  char *v63;
  char *v64;
  void (*v65)(uint64_t, uint64_t);
  __n128 v66;
  _BYTE v68[4];
  int v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;

  v75 = a2;
  v73 = (_BYTE *)__swift_instantiateConcreteTypeFromMangledName(&qword_150BCE8);
  __chkstk_darwin();
  v4 = &v68[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCF0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin();
  v7 = &v68[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCF8);
  v9 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  v77 = v9;
  __chkstk_darwin();
  v74 = &v68[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v70 = &v68[-v11];
  __chkstk_darwin();
  v13 = &v68[-v12];
  v69 = *a1;
  if (v69)
    v14 = 0x65646F637271;
  else
    v14 = 0xD000000000000013;
  if (v69)
    v15 = 0xE600000000000000;
  else
    v15 = 0x80000000010D12D0;
  v16 = Image.init(systemName:)(v14, v15);
  v17 = static Font.body.getter(v16);
  KeyPath = swift_getKeyPath(&unk_10B1718);
  v78 = v16;
  v79 = KeyPath;
  v80 = v17;
  v20 = static Font.Weight.semibold.getter(v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BD00);
  v22 = sub_E62468();
  View.fontWeight(_:)(*(_QWORD *)&v20, 0, v21, v22);
  swift_release();
  swift_release();
  swift_release();
  if (qword_1506310 != -1)
    swift_once(&qword_1506310, sub_E77D78);
  v23 = (uint64_t)v73;
  v24 = __swift_project_value_buffer((uint64_t)v73, (uint64_t)qword_150B128);
  sub_5C238(v24, (uint64_t)v4, &qword_150BCE8);
  v78 = v21;
  v79 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v26 = sub_5C150(&qword_150BD20, &qword_150BCE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v27 = v70;
  v28 = v72;
  View.dynamicTypeSize<A>(_:)(v4, v72, v23, OpaqueTypeConformance2, v26);
  sub_56024((uint64_t)v4, &qword_150BCE8);
  (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v7, v28);
  v29 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v77 + 32);
  v73 = v13;
  v29(v13, v27, v76);
  v78 = sub_E7ACC0(v69);
  v79 = v30;
  v31 = sub_DD0BF8();
  v32 = Text.init<A>(_:)(&v78, &type metadata for String, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  if (qword_15062C8 != -1)
    swift_once(&qword_15062C8, sub_E779D4);
  swift_retain();
  v39 = v36 & 1;
  v41 = Text.font(_:)(v40, v32, v34, v36 & 1, v38);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  swift_release();
  sub_AF8E8(v32, v34, v39);
  swift_bridgeObjectRelease();
  if (qword_15062D0 != -1)
    swift_once(&qword_15062D0, sub_E77A5C);
  v48 = v45 & 1;
  v49 = Text.fontWeight(_:)(qword_150B0D8, 0, v41, v43, v45 & 1, v47);
  v51 = v50;
  v72 = v52;
  v54 = v53 & 1;
  sub_AF8E8(v41, v43, v48);
  v55 = swift_bridgeObjectRelease();
  v56 = v76;
  v57 = v77;
  v58 = *(void (**)(char *, _BYTE *, uint64_t))(v77 + 16);
  v60 = (uint64_t)v73;
  v59 = v74;
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v58)(v74, v73, v76, v55);
  v61 = v75;
  *v75 = 0;
  *((_BYTE *)v61 + 8) = 1;
  v62 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150BD28);
  v58((char *)v61 + v62[12], v59, v56);
  v63 = (char *)v61 + v62[16];
  *(_QWORD *)v63 = v49;
  *((_QWORD *)v63 + 1) = v51;
  v63[16] = v54;
  *((_QWORD *)v63 + 3) = v72;
  v64 = (char *)v61 + v62[20];
  *(_QWORD *)v64 = 0x4020000000000000;
  v64[8] = 0;
  sub_AF8D8(v49, v51, v54);
  v65 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  swift_bridgeObjectRetain();
  v65(v60, v56);
  sub_AF8E8(v49, v51, v54);
  v66 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(_BYTE *, uint64_t, __n128))v65)(v59, v56, v66);
}

uint64_t sub_E7BA48@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[5];

  v50 = a4;
  v6 = a1 & 1;
  v51 = type metadata accessor for ButtonBorderShape(0);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin();
  v48 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BorderlessButtonStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v45 = v9;
  __chkstk_darwin();
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C508);
  v43 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C510);
  v46 = *(_QWORD *)(v15 - 8);
  v47 = v15;
  __chkstk_darwin();
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_13CB498, 40, 7);
  *(_BYTE *)(v18 + 16) = v6;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  v52[16] = v6;
  v53 = a2;
  v54 = a3;
  swift_retain();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C518);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C520);
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BCE8);
  v22 = sub_E88F24();
  v23 = sub_5C150(&qword_150BD20, &qword_150BCE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v55[0] = v20;
  v55[1] = v21;
  v55[2] = v22;
  v55[3] = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v55, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  v26 = Button.init(action:label:)(sub_E88F0C, v18, sub_E88F18, v52, v19, OpaqueTypeConformance2, v25);
  BorderlessButtonStyle.init()(v26);
  v27 = sub_5C150(&qword_150C570, &qword_150C508, (uint64_t)&protocol conformance descriptor for Button<A>);
  v28 = sub_4DD24(&qword_150C0F0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v29 = v44;
  View.buttonStyle<A>(_:)(v11, v12, v44, v27, v28);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v29);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v14, v12);
  v31 = v48;
  static ButtonBorderShape.circle.getter(v30);
  KeyPath = swift_getKeyPath(&unk_10B1B60);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C578);
  v34 = v50;
  v35 = (uint64_t *)(v50 + *(int *)(v33 + 36));
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C580);
  v37 = v49;
  v38 = v51;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))((char *)v35 + *(int *)(v36 + 28), v31, v51);
  *v35 = KeyPath;
  v40 = v46;
  v39 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v34, v17, v47);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v39);
}

double sub_E7BD80(char a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v5 = a1 & 1;
  v6 = static Animation.spring(response:dampingFraction:blendDuration:)(0.25, 1.0, 0.0);
  v8[16] = v5;
  v9 = a2;
  v10 = a3;
  withAnimation<A>(_:_:)(v6, sub_E89114, v8, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E7BDF8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int16 v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;

  v40 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BCE8);
  __chkstk_darwin();
  v4 = (char *)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C518);
  v38 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin();
  v37 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v6 = 0x6B72616D78;
  else
    v6 = 0x72616D6B63656863;
  if ((a1 & 1) != 0)
    v7 = 0xE500000000000000;
  else
    v7 = 0xE90000000000006BLL;
  v35 = Image.init(systemName:)(v6, v7);
  static Font.subheadline.getter(v35);
  v34 = Font.bold()();
  swift_release();
  KeyPath = swift_getKeyPath(&unk_10B1718);
  v9 = static Color.white.getter(v8);
  v10 = swift_getKeyPath(&unk_10B16E8);
  v11 = v10;
  if (qword_15062E8 != -1)
    v10 = swift_once(&qword_15062E8, sub_E77B68);
  v12 = qword_150B0F0;
  v13 = static Alignment.center.getter(v10);
  v15 = _FrameLayout.init(width:height:alignment:)(&v55, v12, 0, v12, 0, v13, v14);
  v16 = v55;
  v17 = v56;
  v18 = v57;
  v19 = v58;
  v20 = v59;
  v21 = v60;
  if ((a1 & 1) != 0)
    v22 = static Color.red.getter(v15);
  else
    v22 = static Color.green.getter(v15);
  v23 = v22;
  v24 = static Edge.Set.all.getter(v22);
  v41 = v35;
  v42 = KeyPath;
  v43 = v34;
  v44 = v11;
  v45 = v9;
  v46 = v16;
  v47 = v17;
  v48 = v18;
  v49 = v19;
  v50 = v20;
  v51 = v21;
  v52 = v23;
  v53 = v24;
  v54 = 256;
  if (qword_1506310 != -1)
    swift_once(&qword_1506310, sub_E77D78);
  v25 = v36;
  v26 = __swift_project_value_buffer(v36, (uint64_t)qword_150B128);
  sub_5C238(v26, (uint64_t)v4, &qword_150BCE8);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C520);
  v28 = sub_E88F24();
  v29 = sub_5C150(&qword_150BD20, &qword_150BCE8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v30 = v37;
  View.dynamicTypeSize<A>(_:)(v4, v27, v25, v28, v29);
  sub_56024((uint64_t)v4, &qword_150BCE8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v31 = swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v38 + 32))(v40, v30, v39, v31);
}

uint64_t sub_E7C124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E7BA48(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t Collaboration.Management.ViewController.__allocating_init(model:)()
{
  objc_class *v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = objc_allocWithZone(v0);
  swift_retain();
  Collaboration.Management.View.init(model:)(v4, v2);
  v5 = UIHostingController.init(rootView:)(v2);
  swift_release();
  return v5;
}

uint64_t Collaboration.Management.ViewController.init(model:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain(a1);
  Collaboration.Management.View.init(model:)(v5, v4);
  v6 = UIHostingController.init(rootView:)(v4);
  swift_release(a1);
  return v6;
}

void sub_E7C248()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/CollaborationUI.swift", 33, 2, 718, 0);
  __break(1u);
}

Swift::Void __swiftcall Collaboration.Management.ViewController.viewDidLayoutSubviews()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v6, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "window");

    if (v3)
    {
      v4 = objc_msgSend(v3, "windowScene");

      if (v4)
      {
        v5 = objc_msgSend(v4, "coordinateSpace");

        objc_msgSend(v5, "bounds");
        swift_unknownObjectRelease(v5);
      }
    }
    sub_E82374();
  }
  else
  {
    __break(1u);
  }
}

void sub_E7C388(void *a1)
{
  id v1;

  v1 = a1;
  Collaboration.Management.ViewController.viewDidLayoutSubviews()();

}

id Collaboration.Management.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  objc_super v8;

  sub_E82374();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  return objc_msgSendSuper2(&v8, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_E7C41C(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;
  objc_super v10;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_E82374();
  v10.receiver = v9;
  v10.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v10, "viewWillTransitionToSize:withTransitionCoordinator:", a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

void Collaboration.Management.ViewController.init(coder:rootView:)()
{
  PlaylistCurators.ViewController.__allocating_init(coder:rootView:)();
}

id Collaboration.Management.ViewController.__deallocating_deinit()
{
  return sub_1A9A14(type metadata accessor for Collaboration.Management.ViewController);
}

uint64_t sub_E7C4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E865F8();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_E7C518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E865F8();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_E7C568(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E865F8();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

char *sub_E7C58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  id v15;
  _BYTE v17[16];
  _OWORD v18[2];
  uint64_t v19;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v17[-v8];
  v10 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v10;
  v19 = *(_QWORD *)(v1 + 32);
  sub_E86584((_QWORD *)v1);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000010FBCF0);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
  v11(v7, v9, v4);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v12 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v9, v4);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x800000000110E4C0);
  v11(v7, v9, v4);
  v14 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v14, v3, 0, 0, 256);
  v13(v9, v4);
  v15 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(v18);
}

char *sub_E7C7C4()
{
  return sub_E7C58C();
}

uint64_t sub_E7C7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E865B4();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_E7C84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E865B4();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_E7C89C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E865B4();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t PlaylistCurators.Curator.init(name:artwork:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for PlaylistCurators.Curator(0);
  return sub_5C090(a3, (uint64_t)a4 + *(int *)(v6 + 20), (uint64_t *)&unk_150CB40);
}

uint64_t sub_E7C904@<X0>(char *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;

  v36 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin();
  v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v33 = (char *)&v33 - v6;
  __chkstk_darwin();
  v8 = (char *)&v33 - v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v33 - v11;
  __chkstk_darwin();
  v14 = (char *)&v33 - v13;
  v15 = __chkstk_darwin();
  v17 = (char *)&v33 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v4 + 56);
  v18((char *)&v33 - v16, 1, 1, v3, v15);
  v19 = type metadata accessor for PlaylistCurators.Curator(0);
  sub_5C238((uint64_t)v1 + *(int *)(v19 + 20), (uint64_t)v14, (uint64_t *)&unk_150CB40);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v20(v14, 1, v3) == 1)
  {
    sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
    sub_4E684(0, (unint64_t *)&qword_150BC50, MPArtworkCatalog_ptr);
    v21 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*v1, v1[1], 0, 1);
    if (v21)
    {
      Artwork.init(_:)(v21);
      sub_56024((uint64_t)v17, (uint64_t *)&unk_150CB40);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v12, 0, 1, v3);
      sub_5C090((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_150CB40);
    }
  }
  else
  {
    sub_56024((uint64_t)v17, (uint64_t *)&unk_150CB40);
    v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v22(v8, v14, v3);
    v22(v17, v8, v3);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v17, 0, 1, v3);
  }
  sub_5C238((uint64_t)v17, (uint64_t)v10, (uint64_t *)&unk_150CB40);
  if (v20(v10, 1, v3) == 1)
  {
    sub_56024((uint64_t)v17, (uint64_t *)&unk_150CB40);
    sub_56024((uint64_t)v10, (uint64_t *)&unk_150CB40);
    v23 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v36, 1, 1, v23);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v26 = v33;
    v25(v33, v10, v3);
    v27 = v34;
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v34, v26, v3);
    v29 = (uint64_t)v35;
    static Artwork.CropStyle.boundedBox.getter(v28);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v26, v3);
    sub_56024((uint64_t)v17, (uint64_t *)&unk_150CB40);
    v30 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    v31 = v36;
    v25(v36, v27, v3);
    v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_5C090(v29, (uint64_t)&v31[*(int *)(v32 + 20)], &qword_15070F0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
}

uint64_t sub_E7CCF0(uint64_t *a1, uint64_t *a2)
{
  return _s11MusicCoreUI16PlaylistCuratorsO4ViewV13ConfigurationV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *a2);
}

uint64_t PlaylistCurators.View.init(configuration:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v4 = (_QWORD *)((char *)a2 + *(int *)(type metadata accessor for PlaylistCurators.View(0) + 20));
  *v4 = swift_getKeyPath(&unk_10B0FF8);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  result = swift_storeEnumTagMultiPayload(v4, v5, 0);
  *a2 = a1;
  return result;
}

uint64_t PlaylistCurators.View.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B278);
  v2 = __chkstk_darwin();
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v2);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B280);
  sub_E7CE54(v0, (uint64_t)&v4[*(int *)(v5 + 44)]);
  v6 = sub_5C150(&qword_150B288, &qword_150B278, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.artworkCaching(id:limit:)(0xD000000000000010, 0x80000000010B1010, 3, 0, v1, v6);
  return sub_56024((uint64_t)v4, &qword_150B278);
}

uint64_t sub_E7CE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a2;
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin();
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B290);
  __chkstk_darwin();
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
  __chkstk_darwin();
  v48 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v46 - v8;
  __chkstk_darwin();
  v49 = (uint64_t)&v46 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BE08);
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE10);
  __chkstk_darwin();
  v54 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)&v46 - v15;
  v17 = __chkstk_darwin();
  v19 = (char *)&v46 - v18;
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v12 + 1) = 0x4018000000000000;
  v12[16] = 0;
  v20 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150BE18) + 44)];
  v51 = (char *)a1;
  sub_E7D3A0(a1, v20);
  if (qword_1506198 != -1)
    swift_once(&qword_1506198, sub_E1B540);
  v21 = *(_QWORD *)algn_1583DA8;
  v22 = byte_1583DB0;
  if (byte_1583DB0)
    v23 = *(double *)&static Corner.medium;
  else
    v23 = *(double *)&static Corner.medium + -3.0;
  sub_5C238((uint64_t)v12, (uint64_t)v16, &qword_150BE08);
  v24 = &v16[*(int *)(v13 + 36)];
  *(double *)v24 = v23;
  *((_QWORD *)v24 + 1) = v21;
  v24[16] = v22;
  *((_QWORD *)v24 + 3) = 0x4008000000000000;
  *((_QWORD *)v24 + 4) = 0;
  *((_WORD *)v24 + 20) = 257;
  sub_56024((uint64_t)v12, &qword_150BE08);
  sub_5C090((uint64_t)v16, (uint64_t)v19, &qword_150BE10);
  type metadata accessor for PlaylistCurators.View(0);
  v25 = v49;
  sub_E42FDC(v49);
  v27 = v52;
  v26 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v9, enum case for UserInterfaceSizeClass.regular(_:), v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v26);
  v28 = (uint64_t)&v6[*(int *)(v50 + 48)];
  sub_5C238(v25, (uint64_t)v6, &qword_1506880);
  sub_5C238((uint64_t)v9, v28, &qword_1506880);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v30 = v29(v6, 1, v26);
  v51 = v19;
  v31 = (uint64_t)v6;
  v32 = v26;
  if (v30 != 1)
  {
    v33 = v27;
    v34 = v48;
    sub_5C238(v31, v48, &qword_1506880);
    if (v29((char *)v28, 1, v26) != 1)
    {
      v35 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v47, v28, v26);
      v36 = sub_4DD24(&qword_150B2A0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v37 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35, v26, v36);
      v38 = *(void (**)(char *, uint64_t))(v33 + 8);
      v38(v35, v32);
      sub_56024((uint64_t)v9, &qword_1506880);
      sub_56024(v25, &qword_1506880);
      v38((char *)v34, v32);
      sub_56024(v31, &qword_1506880);
      if ((v37 & 1) != 0)
        goto LABEL_13;
LABEL_14:
      v40 = 0;
      v39 = 1;
      goto LABEL_15;
    }
    sub_56024((uint64_t)v9, &qword_1506880);
    sub_56024(v25, &qword_1506880);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v26);
LABEL_11:
    sub_56024(v31, (uint64_t *)&unk_150B290);
    goto LABEL_14;
  }
  sub_56024((uint64_t)v9, &qword_1506880);
  sub_56024(v25, &qword_1506880);
  if (v29((char *)v28, 1, v26) != 1)
    goto LABEL_11;
  sub_56024(v31, &qword_1506880);
LABEL_13:
  v39 = 0;
  v40 = 1;
LABEL_15:
  v41 = (uint64_t)v51;
  v42 = v54;
  sub_5C238((uint64_t)v51, v54, &qword_150BE10);
  v43 = v55;
  sub_5C238(v42, v55, &qword_150BE10);
  v44 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BE20) + 48);
  *(_QWORD *)v44 = 0;
  *(_BYTE *)(v44 + 8) = v40;
  *(_BYTE *)(v44 + 9) = v39;
  sub_56024(v41, &qword_150BE10);
  return sub_56024(v42, &qword_150BE10);
}

uint64_t sub_E7D3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  double v42;
  char *v43;
  __n128 v44;
  char *v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  double *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;

  v96 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509DD8);
  __chkstk_darwin();
  v93 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v94 = *(_QWORD *)(v4 - 8);
  v95 = v4;
  __chkstk_darwin();
  v92 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Image.Scale(0);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin();
  v86 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for Text.Suffix(0);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin();
  v74 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE30);
  v82 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin();
  v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE38);
  __chkstk_darwin();
  v76 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE40);
  __chkstk_darwin();
  v80 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE48);
  __chkstk_darwin();
  v88 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v90 = (uint64_t)&v73 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
  __chkstk_darwin();
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BE50);
  __chkstk_darwin();
  v85 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (double *)((char *)&v73 - v16);
  type metadata accessor for PlaylistCurators.View(0);
  sub_E42FDC((uint64_t)v14);
  v18 = sub_E86CC4((uint64_t)v14);
  sub_56024((uint64_t)v14, &qword_1506880);
  *(_QWORD *)v17 = static VerticalAlignment.center.getter(v19);
  v17[1] = v18;
  *((_BYTE *)v17 + 16) = 0;
  v77 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BE58);
  v73 = a1;
  sub_E7DB30(a1);
  v97 = sub_E7E394();
  v98 = v20;
  v21 = sub_DD0BF8();
  v97 = Text.init<A>(_:)(&v97, &type metadata for String, v21);
  v98 = v22;
  v99 = v23 & 1;
  v100 = v24;
  v25 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
  v26 = *v25;
  v27 = v25[1];
  swift_bridgeObjectRetain();
  Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  swift_retain();
  v29 = Text.init(_:)(v28);
  v31 = v30;
  v33 = v32 & 1;
  v35 = static Text.+ infix(_:_:)(v26, v27, 0, _swiftEmptyArrayStorage, v29, v30, v33, v34);
  v37 = v36;
  v39 = v38;
  v41 = v40 & 1;
  sub_AF8E8(v29, v31, v33);
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)&v42 = swift_bridgeObjectRelease().n128_u64[0];
  v43 = v74;
  static Text.Suffix.alwaysVisible(_:)(v35, v37, v41, v39, v42);
  sub_AF8E8(v35, v37, v41);
  v44 = swift_bridgeObjectRelease();
  v45 = v75;
  View.textSuffix(_:)(v43, &type metadata for Text, &protocol witness table for Text, v44);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v81);
  sub_AF8E8(v97, v98, v99);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_10B18B0);
  v47 = v82;
  v48 = (uint64_t)v76;
  v49 = v45;
  v50 = v45;
  v51 = v84;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v76, v49, v84);
  v52 = v48 + *(int *)(v78 + 36);
  *(_QWORD *)v52 = KeyPath;
  *(_QWORD *)(v52 + 8) = 1;
  *(_BYTE *)(v52 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v51);
  v54 = v86;
  v53 = v87;
  v55 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, enum case for Image.Scale.small(_:), v89);
  v56 = swift_getKeyPath(&unk_10B18E0);
  v57 = (uint64_t)v80;
  v58 = (uint64_t *)&v80[*(int *)(v83 + 36)];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE60);
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v58 + *(int *)(v59 + 28), v54, v55);
  *v58 = v56;
  sub_5C238(v48, v57, &qword_150BE38);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
  sub_56024(v48, &qword_150BE38);
  v60 = v92;
  PlaylistCurators.View.fontTextStyle.getter(v92);
  v61 = type metadata accessor for Font.Design(0);
  v62 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v93, 1, 1, v61);
  v63 = static Font.system(_:design:weight:)(v60, v62, 0, 1);
  sub_56024(v62, &qword_1509DD8);
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v60, v95);
  v64 = swift_getKeyPath(&unk_10B1718);
  v65 = v88;
  sub_5C238(v57, v88, &qword_150BE40);
  v66 = (uint64_t *)(v65 + *(int *)(v91 + 36));
  *v66 = v64;
  v66[1] = v63;
  sub_56024(v57, &qword_150BE40);
  v67 = v90;
  sub_5C090(v65, v90, &qword_150BE48);
  v68 = (uint64_t)v77;
  v69 = v85;
  sub_5C238((uint64_t)v77, v85, &qword_150BE50);
  sub_5C238(v67, v65, &qword_150BE48);
  v70 = v96;
  sub_5C238(v69, v96, &qword_150BE50);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE68);
  sub_5C238(v65, v70 + *(int *)(v71 + 48), &qword_150BE48);
  sub_56024(v67, &qword_150BE48);
  sub_56024(v68, &qword_150BE50);
  sub_56024(v65, &qword_150BE48);
  return sub_56024(v69, &qword_150BE50);
}

uint64_t sub_E7DB30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = *(_QWORD *)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) >= 3uLL)
    v5 = 3;
  else
    v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v7 = swift_bridgeObjectRetain();
  v8 = swift_unknownObjectRetain_n(v7, 2);
  v9 = (_QWORD *)swift_dynamicCastClass(v8, v6);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v9 = _swiftEmptyArrayStorage;
  }
  v10 = v9[2];
  swift_release();
  if (v10 == v5)
  {
    v11 = (_QWORD *)swift_dynamicCastClass(v4, v6);
    if (!v11)
    {
      swift_bridgeObjectRelease();
      v11 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistCurators.Curator(0) - 8) + 80);
    sub_DCAE68(v4, v4 + ((v25 + 32) & ~v25), 0, (2 * v5) | 1);
    v11 = v26;
  }
  swift_bridgeObjectRelease();
  v12 = swift_bridgeObjectRetain();
  sub_EFA4F0(v12);
  v14 = v13;
  swift_release();
  v28 = v14;
  KeyPath = swift_getKeyPath(&unk_10B1910);
  sub_5BDB8(a1, (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.View);
  v16 = *(unsigned __int8 *)(v2 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = swift_allocObject(&unk_13CAFF0, v17 + v3, v16 | 7);
  *(_QWORD *)(v18 + 16) = v11;
  sub_5C04C((uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for PlaylistCurators.View);
  v19 = swift_allocObject(&unk_13CB018, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_E87064;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE70);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE78);
  v22 = sub_5C150(&qword_150BE80, &qword_150BE70, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_E87138();
  return ForEach<>.init(_:id:content:)(&v28, KeyPath, sub_E870E0, v19, v20, v21, v22, &protocol witness table for Int, v23);
}

void sub_E7DD94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  double v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150BE98);
  __chkstk_darwin();
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = __OFSUB__(v10, a1);
  v12 = v10 - a1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    v13 = (double)v12;
    sub_E7DE6C(a2, (uint64_t)v9);
    sub_5C238((uint64_t)v9, a4, &qword_150BE98);
    *(double *)(a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150BE78) + 36)) = v13;
    sub_56024((uint64_t)v9, &qword_150BE98);
  }
}

uint64_t sub_E7DE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[3];
  double v53;
  char v54;
  double v55;
  char v56;
  uint64_t v57;
  __int16 v58;

  v43 = a1;
  v51 = a2;
  v50 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v45 = (uint64_t (**)(uint64_t))((char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v44 = *(_QWORD *)(v3 - 8);
  v4 = v3;
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  __chkstk_darwin();
  v41 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BEC8);
  __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BEB8);
  __chkstk_darwin();
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BEA8);
  __chkstk_darwin();
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
  __chkstk_darwin();
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.View(0);
  sub_E42FDC((uint64_t)v20);
  v21 = sub_E87340((uint64_t)v20);
  sub_56024((uint64_t)v20, &qword_1506880);
  sub_E7C904(v10);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 7, 10, v22);
  v53 = v21;
  v54 = 0;
  v55 = v21;
  v56 = 0;
  v57 = 0;
  v58 = 257;
  v23 = v44;
  v24 = v4;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v4);
  v25 = v41;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v53, (uint64_t)v6, v41);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  sub_5C0DC((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_56024((uint64_t)v10, (uint64_t *)&unk_150CEE0);
  v26 = v45;
  v27 = (char *)v45 + *(int *)(v50 + 20);
  *(_QWORD *)v27 = swift_getKeyPath(&unk_10B1930);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v27, v28, 0);
  *v26 = sub_E7E9EC;
  v26[1] = 0;
  sub_5C04C((uint64_t)v26, (uint64_t)&v14[*(int *)(v42 + 36)], type metadata accessor for PlaceholderStyleModifier);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 32))(v14, v25, v49);
  v30 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v52, *(_QWORD *)&v21, 0, *(_QWORD *)&v21, 0, v30, v31);
  sub_5C238((uint64_t)v14, (uint64_t)v16, &qword_150BEC8);
  v32 = &v16[*(int *)(v46 + 36)];
  v33 = v52[1];
  *(_OWORD *)v32 = v52[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v52[2];
  sub_56024((uint64_t)v14, &qword_150BEC8);
  sub_5C238((uint64_t)v16, (uint64_t)v18, &qword_150BEB8);
  v34 = &v18[*(int *)(v47 + 36)];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  sub_56024((uint64_t)v16, &qword_150BEB8);
  if (qword_1506320 != -1)
    swift_once(&qword_1506320, sub_E7EB90);
  v35 = qword_150B148;
  v36 = qword_150B150;
  v37 = byte_150B158;
  v38 = v51;
  sub_5C238((uint64_t)v18, v51, &qword_150BEA8);
  v39 = v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150BE98) + 36);
  *(_QWORD *)v39 = v35;
  *(_QWORD *)(v39 + 8) = v36;
  *(_BYTE *)(v39 + 16) = v37;
  *(_QWORD *)(v39 + 24) = 0;
  *(_QWORD *)(v39 + 32) = 0;
  *(_BYTE *)(v39 + 40) = 1;
  swift_retain();
  return sub_56024((uint64_t)v18, &qword_150BEA8);
}

uint64_t sub_E7E394()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v27 - v8;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.Curator(0);
  __chkstk_darwin();
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (v16)
  {
    sub_5BDB8(v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for PlaylistCurators.Curator);
    v17 = v16 - 1;
    if (v16 == 1)
    {
      v18 = *v14;
      swift_bridgeObjectRetain();
    }
    else
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 2);
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
      v20 = *v14;
      v21 = (void *)v14[1];
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = v20;
      v22._object = v21;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = 2106912;
      v23._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
      v28 = v17;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v24._countAndFlagsBits = 0x7328726568744F20;
      v24._object = (void *)0xE900000000000029;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
      String.LocalizationValue.init(stringInterpolation:)(v11);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v25 = qword_1583020;
      static Locale.current.getter((id)qword_1583020);
      v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v25, v3, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
    sub_5C0DC((uint64_t)v14, type metadata accessor for PlaylistCurators.Curator);
    return v18;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x73736F5020746F4ELL, 0xEC000000656C6269, "MusicCoreUI/CollaborationUI.swift", 33, 2, 878, 0);
    __break(1u);
  }
  return result;
}

uint64_t PlaylistCurators.View.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B290);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - v15;
  type metadata accessor for PlaylistCurators.View(0);
  sub_E42FDC((uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v1);
  v17 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_5C238((uint64_t)v16, (uint64_t)v7, &qword_1506880);
  sub_5C238((uint64_t)v13, v17, &qword_1506880);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v18((uint64_t)v7, 1, v1) != 1)
  {
    sub_5C238((uint64_t)v7, (uint64_t)v10, &qword_1506880);
    if (v18(v17, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v17, v1);
      v19 = sub_4DD24(&qword_150B2A0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v4, v1, v19);
      v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v4, v1);
      sub_56024((uint64_t)v13, &qword_1506880);
      sub_56024((uint64_t)v16, &qword_1506880);
      v21(v10, v1);
      sub_56024((uint64_t)v7, &qword_1506880);
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v22 = (unsigned int *)&enum case for Font.TextStyle.title(_:);
      goto LABEL_10;
    }
    sub_56024((uint64_t)v13, &qword_1506880);
    sub_56024((uint64_t)v16, &qword_1506880);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
LABEL_6:
    sub_56024((uint64_t)v7, (uint64_t *)&unk_150B290);
    goto LABEL_9;
  }
  sub_56024((uint64_t)v13, &qword_1506880);
  sub_56024((uint64_t)v16, &qword_1506880);
  if (v18(v17, 1, v1) != 1)
    goto LABEL_6;
  sub_56024((uint64_t)v7, &qword_1506880);
LABEL_8:
  v22 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
LABEL_10:
  v23 = *v22;
  v24 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, v23, v24);
}

uint64_t sub_E7E9EC(uint64_t a1)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = Color.init(_:)(v2);
  return sub_5C1F4((uint64_t)v4, a1 + 40, (uint64_t *)&unk_150BF60);
}

void sub_E7EA60()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[6];

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_E7EB04;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_12EEE0;
  v3[3] = &block_descriptor_355;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release();
  qword_150B140 = (uint64_t)v2;
}

id sub_E7EB04(void *a1)
{
  void *v2;
  char **v3;
  char *v4;

  if (objc_msgSend(a1, "userInterfaceIdiom") == (char *)&dword_4 + 2)
  {
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
  }
  else
  {
    v4 = (char *)objc_msgSend(a1, "userInterfaceStyle");
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
    if (v4 == (_BYTE *)&dword_0 + 2)
      v3 = &selRef_blackColor;
  }
  return objc_msgSend(v2, *v3);
}

uint64_t sub_E7EB90()
{
  id v0;
  __n128 v1;
  uint64_t result;

  if (qword_1506318 != -1)
    swift_once(&qword_1506318, sub_E7EA60);
  v0 = (id)qword_150B140;
  result = Color.init(uiColor:)(v0, v1);
  qword_150B148 = result;
  qword_150B150 = 0x3FF0000000000000;
  byte_150B158 = 1;
  return result;
}

uint64_t PlaylistCurators.ViewController.configuration.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + direct field offset for PlaylistCurators.ViewController.configuration, v2, 0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t PlaylistCurators.ViewController.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *, _QWORD);
  uint64_t *v7;
  uint64_t v8;
  _BYTE v10[32];
  _BYTE v11[24];

  v3 = (uint64_t *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration);
  swift_beginAccess(v1 + direct field offset for PlaylistCurators.ViewController.configuration, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_bridgeObjectRelease(v4);
  v5 = *v3;
  swift_bridgeObjectRetain();
  v6 = (uint64_t (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v10);
  v8 = *v7;
  *v7 = v5;
  swift_bridgeObjectRelease(v8);
  return v6(v10, 0);
}

void (*PlaylistCurators.ViewController.configuration.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = direct field offset for PlaylistCurators.ViewController.configuration;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_E7ED1C;
}

void sub_E7ED1C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, _QWORD);
  uint64_t *v6;
  uint64_t v7;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(v3[4] + v3[5]);
    swift_bridgeObjectRetain();
    v5 = (void (*)(_QWORD *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v3);
    v7 = *v6;
    *v6 = v4;
    swift_bridgeObjectRelease(v7);
    v5(v3, 0);
  }
  free(v3);
}

uint64_t PlaylistCurators.ViewController.__allocating_init(configuration:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  v8 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v8[direct field offset for PlaylistCurators.ViewController.configuration] = a1;
  v9 = (_QWORD *)((char *)v5 + *(int *)(v3 + 20));
  *v9 = swift_getKeyPath(&unk_10B0FF8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  *v5 = a1;
  sub_5C04C((uint64_t)v5, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)(v7);
}

uint64_t PlaylistCurators.ViewController.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - v7;
  *(_QWORD *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration) = a1;
  v10 = (_QWORD *)((char *)v5 + *(int *)(v9 + 20));
  *v10 = swift_getKeyPath(&unk_10B0FF8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  *v5 = a1;
  sub_5C04C((uint64_t)v5, (uint64_t)v8, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)(v8);
}

void sub_E7EF70()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/CollaborationUI.swift", 33, 2, 915, 0);
  __break(1u);
}

void PlaylistCurators.ViewController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(rootView:)", 15, 0);
  __break(1u);
}

void PlaylistCurators.ViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_E7F020()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + direct field offset for PlaylistCurators.ViewController.configuration));
}

id PlaylistCurators.ViewController.__deallocating_deinit()
{
  return sub_1A9A14(type metadata accessor for PlaylistCurators.ViewController);
}

uint64_t sub_E7F03C(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + direct field offset for PlaylistCurators.ViewController.configuration));
}

id sub_E7F2C8()
{
  return sub_1A9A14((uint64_t (*)(_QWORD))type metadata accessor for ClearBackground.Controller);
}

id sub_E7F2D4()
{
  type metadata accessor for ClearBackground.Controller();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
}

uint64_t sub_E7F2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E86540();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_E7F34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E86540();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_E7F39C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E86540();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_E7F3C0(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  id v23;
  Swift::Int v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease();

      v31 = v10;
      v11 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
      swift_unknownObjectRetain(v10);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_E7FB44(v7, result + 1);
    v32 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v29 = v25 + 1;
      v30 = v8;
      sub_744C4(v29, (uint64_t *)&unk_150C4B0);
      v26 = v32;
    }
    else
    {
      v26 = v24;
      v27 = v8;
    }
    sub_77960((uint64_t)v8, v26);
    *v3 = v26;
  }
  else
  {
    v13 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v14 = NSObject._rawHashValue(seed:)(v13);
    v15 = -1 << *(_BYTE *)(v6 + 32);
    v16 = v14 & ~v15;
    if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
      v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
      v18 = static NSObject.== infix(_:_:)(v17, a2);

      if ((v18 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v22 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v16);
        *a1 = (Swift::Int)v22;
        v23 = v22;
        return 0;
      }
      v19 = ~v15;
      while (1)
      {
        v16 = (v16 + 1) & v19;
        if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = static NSObject.== infix(_:_:)(v20, a2);

        if ((v21 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_E802BC((uint64_t)v8, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_E7F664(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  id v23;
  Swift::Int v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease();

      v31 = v10;
      v11 = type metadata accessor for SyncedLyricsLineView();
      swift_unknownObjectRetain(v10);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_E7FD4C(v7, result + 1);
    v32 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v29 = v25 + 1;
      v30 = v8;
      sub_744C4(v29, &qword_150BDD0);
      v26 = v32;
    }
    else
    {
      v26 = v24;
      v27 = v8;
    }
    sub_77960((uint64_t)v8, v26);
    *v3 = v26;
  }
  else
  {
    v13 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v14 = NSObject._rawHashValue(seed:)(v13);
    v15 = -1 << *(_BYTE *)(v6 + 32);
    v16 = v14 & ~v15;
    if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      type metadata accessor for SyncedLyricsLineView();
      v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
      v18 = static NSObject.== infix(_:_:)(v17, a2);

      if ((v18 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v22 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v16);
        *a1 = (Swift::Int)v22;
        v23 = v22;
        return 0;
      }
      v19 = ~v15;
      while (1)
      {
        v16 = (v16 + 1) & v19;
        if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = static NSObject.== infix(_:_:)(v20, a2);

        if ((v21 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_E80460((uint64_t)v8, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_E7F8E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  __n128 v29;
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24((unint64_t *)&unk_150BD60, v12, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  v36 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a1;
    v34 = ~v15;
    v35 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_4DD24(&qword_15077D0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v36, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v35 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v34;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v32;
        a1 = v33;
        v26 = v35;
        goto LABEL_7;
      }
    }
    v31 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v36, v6, v31);
    v22(v33, *(_QWORD *)(*v32 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v36;
    v20(v9, v36, v6);
    v37 = *v3;
    *v3 = 0x8000000000000000;
    sub_E805F4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v37;
    v29 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v29);
    return 1;
  }
}

Swift::Int sub_E7FB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150C4B0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_744C4(v16 + 1, (uint64_t *)&unk_150C4B0);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_E7FD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_150BDD0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for SyncedLyricsLineView();
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_744C4(v16 + 1, &qword_150BDD0);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_E7FF44(uint64_t a1)
{
  sub_744C4(a1, (uint64_t *)&unk_150C4B0);
}

void sub_E7FF50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Collaborator(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BD70);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v40 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v38 = v2;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v20 >= v39)
      goto LABEL_35;
    v21 = v40[v20];
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v39)
        goto LABEL_35;
      v21 = v40[v16];
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(_QWORD *)(v7 + 48);
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v41 + 32);
    v26(v6, v24 + v25 * v19, v4, v15);
    v27 = *(_QWORD *)(v9 + 40);
    v28 = sub_4DD24((unint64_t *)&unk_150BD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    ((void (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v23;
  }
  v22 = v20 + 3;
  if (v22 < v39)
  {
    v21 = v40[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v16 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        ++v22;
        if (v21)
          goto LABEL_25;
      }
    }
    v16 = v22;
    goto LABEL_25;
  }
LABEL_35:
  swift_release();
  v2 = v38;
  v37 = 1 << *(_BYTE *)(v7 + 32);
  if (v37 > 63)
    bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v40 = -1 << v37;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release();
  *v2 = v9;
}

void sub_E802BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_744C4(v9, (uint64_t *)&unk_150C4B0);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7D4E4((uint64_t *)&unk_150C4B0);
      goto LABEL_14;
    }
    sub_817B8(v9, (uint64_t *)&unk_150C4B0);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

void sub_E80460(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_744C4(v9, &qword_150BDD0);
  }
  else
  {
    if (v8 > v7)
    {
      sub_7D4E4(&qword_150BDD0);
      goto LABEL_14;
    }
    sub_817B8(v9, &qword_150BDD0);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for SyncedLyricsLineView();
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

uint64_t sub_E805F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_E7FF50(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_E807F8();
      goto LABEL_12;
    }
    sub_E80A1C(v13);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_4DD24((unint64_t *)&unk_150BD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_4DD24(&qword_15077D0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_E807F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Collaborator(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BD70);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_E80A1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Collaborator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150BD70);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release();
LABEL_37:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v36 = v2;
  v37 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  v16 = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_35;
      v22 = *(_QWORD *)(v37 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v38)
          goto LABEL_35;
        v22 = *(_QWORD *)(v37 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v24 * v20, v4, v16);
    v25 = *(_QWORD *)(v10 + 40);
    v26 = sub_4DD24((unint64_t *)&unk_150BD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v27 = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v18 * v24, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v38)
  {
LABEL_35:
    swift_release_n(v8, 2);
    v2 = v36;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_E80D44(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = a1;
    v7 = __CocoaSet.contains(_:)(v6, v5);

    if ((v7 & 1) != 0)
    {
      sub_E8114C(v5, (uint64_t)v6);
      v9 = v8;
      swift_bridgeObjectRelease();
      return v9;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    goto LABEL_15;
  type metadata accessor for SyncedLyricsLineView();
  v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14, a1);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      v17 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17, a1);

    }
    while ((v18 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v20 = *v2;
  v22 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_7D4E4(&qword_150BDD0);
    v20 = v22;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v13);
  sub_70ECE0(v13);
  *v2 = v22;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_E80F10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_4DD24((unint64_t *)&unk_150BD60, v12, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_4DD24(&qword_15077D0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33, v6, v21);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease();
        v24 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease();
    v25 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v27 = *v25;
    v35 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_E807F8();
      v27 = v35;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v28, v6);
    sub_E812D4(v16);
    *v25 = v35;
    v23 = swift_bridgeObjectRelease();
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease();
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

void sub_E8114C(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  Swift::Int v19;

  v3 = v2;
  swift_bridgeObjectRelease();
  v6 = __CocoaSet.count.getter(a1);
  v7 = swift_unknownObjectRetain(a1);
  v8 = sub_E7FD4C(v7, v6);
  v19 = v8;
  v9 = *(_QWORD *)(v8 + 40);
  swift_retain();
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    type metadata accessor for SyncedLyricsLineView();
    v13 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
    v14 = static NSObject.== infix(_:_:)(v13, a2);

    if ((v14 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v18 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v12);
      sub_70ECE0(v12);
      if ((static NSObject.== infix(_:_:)(a2, v18) & 1) != 0)
      {
        *v3 = v19;
        return;
      }
      __break(1u);
    }
    else
    {
      v15 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v15;
        if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
        v17 = static NSObject.== infix(_:_:)(v16, a2);

        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  swift_release();
  __break(1u);
}

void sub_E812D4(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for Playlist.Collaborator(0);
  v32 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v29 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v31 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v32 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        v15 = *(_QWORD *)(v6 + 40);
        v16 = sub_4DD24((unint64_t *)&unk_150BD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
        v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
        v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v18 < v12 || a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v13 * a1;
        v23 = v21 + v13 * a1;
        v24 = v21 + v14;
        if (v13 * a1 < v14 || v23 >= v24 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23, v24, 1, v3);
        }
        else
        {
          a1 = v9;
          if (v22 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v23, v24);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v31 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v29;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v1;
  v26 = *(_QWORD *)(*v1 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
}

uint64_t sub_E81550(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150C380);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v3, &qword_150C380);
  return EnvironmentValues.symbolRenderingMode.setter(v3);
}

void sub_E815D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD, __n128);
  uint64_t *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _BYTE v26[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v25 = a3;
    else
      v25 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
    if (!v15)
      return;
  }
  else
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v15)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v14)
  {
    if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) <= a2)
    {
      a4(0);
      swift_arrayInitWithCopy(a1);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v16 = a3;
  else
    v16 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease();
  if (v17 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v15 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = sub_5C150(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain();
  for (i = 0; i != v15; ++i)
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
    v21 = (void (*)(_BYTE *, _QWORD, __n128))a7(v26, i, a3, v20, v18);
    v23 = *v22;
    v24 = swift_retain();
    v21(v26, 0, v24);
    *(_QWORD *)(a1 + 8 * i) = v23;
  }
  swift_bridgeObjectRelease();
}

BOOL _s11MusicCoreUI16PlaylistCuratorsO7CuratorV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507568);
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v28 - v13;
  __chkstk_darwin();
  v16 = (char *)&v28 - v15;
  v17 = a1[1];
  v18 = a2[1];
  if (*a1 == *a2 && v17 == v18
    || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v17, *a2, v18, 0), result = 0, (v19 & 1) != 0))
  {
    v29 = v7;
    v21 = type metadata accessor for PlaylistCurators.Curator(0);
    sub_5C238((uint64_t)a1 + *(int *)(v21 + 20), (uint64_t)v16, (uint64_t *)&unk_150CB40);
    sub_5C238((uint64_t)a2 + *(int *)(v21 + 20), (uint64_t)v14, (uint64_t *)&unk_150CB40);
    v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_5C238((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_150CB40);
    sub_5C238((uint64_t)v14, v22, (uint64_t *)&unk_150CB40);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v23((uint64_t)v10, 1, v4) == 1)
    {
      sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
      sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
      if (v23(v22, 1, v4) == 1)
      {
        sub_56024((uint64_t)v10, (uint64_t *)&unk_150CB40);
        return 1;
      }
    }
    else
    {
      sub_5C238((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_150CB40);
      if (v23(v22, 1, v4) != 1)
      {
        v24 = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v22, v4);
        v25 = sub_4DD24(&qword_150BF70, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v24, v4, v25);
        v27 = *(void (**)(char *, uint64_t))(v5 + 8);
        v27(v24, v4);
        sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
        sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
        v27(v12, v4);
        sub_56024((uint64_t)v10, (uint64_t *)&unk_150CB40);
        return (v26 & 1) != 0;
      }
      sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
      sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }
    sub_56024((uint64_t)v10, &qword_1507568);
    return 0;
  }
  return result;
}

uint64_t sub_E81AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, _QWORD *);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  __n128 v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char v78;
  _BYTE v79[24];
  _QWORD v80[16];

  v3 = v2;
  v72 = a2;
  v73 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin(v4);
  v75 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BDA0);
  __chkstk_darwin(v6);
  v68 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for Playlist(0);
  v77 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v8;
  __chkstk_darwin(v9);
  v76 = (char *)&v66 - v10;
  v70 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v69 = *(v70 - 1);
  __chkstk_darwin(v70);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B190);
  v13 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B178);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v80[0] = _swiftEmptyArrayStorage;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B160);
  Published.init(initialValue:)(v80, v21);
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v22(v20, v19, v16);
  v23 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators;
  v80[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(v80, v21);
  v22(v23, v19, v16);
  v24 = v67;
  v25 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v80[0] = &_swiftEmptySetSingleton;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B168);
  Published.init(initialValue:)(v80, v26);
  v27 = v25;
  v28 = (uint64_t)v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v27, v15, v66);
  v29 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL;
  LOBYTE(v80[0]) = 0;
  Published.init(initialValue:)(v80, &type metadata for Bool);
  v30 = *(void (**)(uint64_t, char *, _QWORD *))(v69 + 32);
  v31 = v70;
  v30(v29, v12, v70);
  v32 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss;
  LOBYTE(v80[0]) = 0;
  Published.init(initialValue:)(v80, &type metadata for Bool);
  v30(v32, v12, v31);
  v33 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity;
  static ApplicationCapabilities.shared.getter((uint64_t)v80);
  sub_A9008(v80);
  v79[0] = BYTE1(v80[0]);
  Published.init(initialValue:)(v79, &type metadata for Bool);
  v30(v33, v12, v31);
  v34 = v72;
  v35 = v3
      + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *(_QWORD *)(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = 0;
  v69 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver) = 0;
  v37 = v73;
  *(_QWORD *)(v3 + 16) = v73;
  v39 = v76;
  v38 = v77;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  v40(v76, v34, v24);
  v41 = swift_beginAccess(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist, v79, 33, 0);
  v42 = v71;
  v70 = v40;
  ((void (*)(char *, char *, uint64_t, __n128))v40)(v71, v39, v24, v41);
  swift_retain(v37);
  Published.init(initialValue:)(v42, v24);
  v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v39, v24);
  swift_endAccess(v79);
  v44 = v34;
  Playlist.collaboration.getter(v45);
  v46 = type metadata accessor for Playlist.Collaboration(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v28, 1, v46) == 1)
  {
    sub_56024(v28, &qword_150BDA0);
    v48 = 0;
  }
  else
  {
    v48 = Playlist.Collaboration.isOpenInvitation.getter();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v28, v46);
  }
  swift_beginAccess(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen, v79, 33, 0);
  v78 = v48 & 1;
  Published.init(initialValue:)(&v78, &type metadata for Bool);
  swift_endAccess(v79);
  v49 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  v50 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  v51 = swift_allocObject(&unk_13CB338, 24, 7);
  swift_weakInit(v51 + 16);
  v52 = type metadata accessor for NotificationObserver();
  swift_allocObject(v52, 64, 7);
  swift_retain(v50);
  v53 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v49, v50, 1, 1, (uint64_t)sub_E8884C, v51);
  v54 = *(_QWORD *)(v3 + v69);
  *(_QWORD *)(v3 + v69) = v53;
  swift_release(v54);
  v55 = type metadata accessor for TaskPriority(0);
  v56 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v75, 1, 1, v55);
  v57 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v70)(v76, v34, v24);
  v58 = v77;
  v59 = *(unsigned __int8 *)(v77 + 80);
  v60 = (v59 + 32) & ~v59;
  v61 = (v74 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  v62 = swift_allocObject(&unk_13CB360, v61 + 8, v59 | 7);
  *(_QWORD *)(v62 + 16) = 0;
  *(_QWORD *)(v62 + 24) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v62 + v60, v57, v24);
  *(_QWORD *)(v62 + v61) = v3;
  swift_retain(v3);
  v63 = sub_E08E7C(v56, (uint64_t)&unk_150C410, v62);
  v64 = swift_release(v63);
  ((void (*)(uint64_t, uint64_t, __n128))v43)(v44, v24, v64);
  return v3;
}

uint64_t type metadata accessor for Collaboration.Management.View(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150B6D0, (uint64_t)&nominal type descriptor for Collaboration.Management.View);
}

uint64_t sub_E82188()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_E821A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_E821CC()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_E821EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t type metadata accessor for Collaboration.Management.Model(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150B2E0, (uint64_t)&nominal type descriptor for Collaboration.Management.Model);
}

uint64_t sub_E82224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E6EEB4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E8222C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150B238;
  if (!qword_150B238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150B230);
    sub_5C150(&qword_150B240, &qword_150B248, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_5C150(&qword_150B250, &qword_150B258, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150B238);
  }
  return result;
}

uint64_t sub_E822C8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10B0FB0, (uint64_t)&unk_10B0FD8, a2);
}

uint64_t sub_E822EC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10B0FB0, (uint64_t)&unk_10B0FD8);
}

void sub_E82314(uint64_t a1, _BYTE *a2)
{
  type metadata accessor for Collaboration.Management.View(0);
  sub_E7779C(a1, a2);
}

uint64_t type metadata accessor for Collaboration.Management.ViewController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150B740, (uint64_t)&nominal type descriptor for Collaboration.Management.ViewController);
}

void sub_E82374()
{
  void *v0;
  id v1;
  char *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v8;
  id v9;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (_BYTE *)&dword_4 + 2)
    v3 = 512.0;
  else
    v3 = 540.0;
  if (v2 == (_BYTE *)&dword_4 + 2)
    v4 = 620.0;
  else
    v4 = 700.0;
  objc_msgSend(v0, "preferredContentSize");
  if (v3 != v6 || v4 != v5)
  {
    objc_msgSend(v0, "setPreferredContentSize:", v3, v4);
    v8 = objc_msgSend(v0, "navigationController");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setPreferredContentSize:", v3, v4);

    }
  }
}

uint64_t type metadata accessor for PlaylistCurators.Curator(uint64_t a1)
{
  return sub_6345C(a1, qword_150B848, (uint64_t)&nominal type descriptor for PlaylistCurators.Curator);
}

uint64_t type metadata accessor for PlaylistCurators.View(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150B8E8, (uint64_t)&nominal type descriptor for PlaylistCurators.View);
}

uint64_t type metadata accessor for PlaylistCurators.ViewController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150B928, (uint64_t)&nominal type descriptor for PlaylistCurators.ViewController);
}

uint64_t sub_E824D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Collaboration.Management.View.body>>, 1);
}

uint64_t sub_E824E8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaylistCurators.View.body>>, 1);
}

uint64_t sub_E824F8(uint64_t a1)
{
  uint64_t result;

  result = sub_4DD24(&qword_150B2B0, type metadata accessor for PlaylistCurators.View, (uint64_t)&protocol conformance descriptor for PlaylistCurators.View);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Management()
{
  return &type metadata for Collaboration.Management;
}

uint64_t sub_E82544()
{
  return type metadata accessor for Collaboration.Management.Model(0);
}

void sub_E8254C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  const char *v24;

  v12 = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1F7F1C(319, &qword_150B2F0, &qword_150B160, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v13 = *(_QWORD *)(v2 - 8) + 64;
    v14 = v13;
    sub_1F7F1C(319, &qword_150B2F8, &qword_150B168, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v15 = *(_QWORD *)(v4 - 8) + 64;
      sub_1D1B7C(319, &qword_150B300, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v7 <= 0x3F)
      {
        v16 = *(_QWORD *)(v6 - 8) + 64;
        sub_E826A4();
        if (v9 <= 0x3F)
        {
          v17 = *(_QWORD *)(v8 - 8) + 64;
          v18 = v17;
          v19 = v17;
          v20 = v17;
          sub_1F7F1C(319, qword_150B310, (uint64_t *)&unk_150CEE0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          if (v11 <= 0x3F)
          {
            v21 = *(_QWORD *)(v10 - 8) + 64;
            v22 = "\b";
            v23 = "\b";
            v24 = "\b";
            swift_updateClassMetadata2(a1, 256, 13, &v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_E826A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_150B308)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_150B308);
  }
}

uint64_t *_s10ManagementO4ViewVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[6];
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
    v21 = a3[7];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
    v27 = a3[8];
    v28 = a3[9];
    v29 = (uint64_t *)((char *)v4 + v27);
    v30 = (char *)a2 + v27;
    v31 = *(void **)v30;
    v32 = *((_QWORD *)v30 + 1);
    *v29 = *(_QWORD *)v30;
    v29[1] = v32;
    v33 = (char *)v4 + v28;
    v34 = (char *)a2 + v28;
    *v33 = *v34;
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    v35 = a3[10];
    v36 = a3[11];
    v37 = (char *)v4 + v35;
    v38 = (char *)a2 + v35;
    *v37 = *v38;
    *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
    v39 = (char *)v4 + v36;
    v40 = (char *)a2 + v36;
    *v39 = *v40;
    *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
    v41 = a3[12];
    v42 = (char *)v4 + v41;
    v43 = (char *)a2 + v41;
    *v42 = *v43;
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    v44 = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

double _s10ManagementO4ViewVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_release();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *_s10ManagementO4ViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v25 = a3[8];
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v25);
  v28 = (char *)a2 + v25;
  v29 = *(void **)v28;
  v30 = *((_QWORD *)v28 + 1);
  *v27 = *(_QWORD *)v28;
  v27[1] = v30;
  v31 = (char *)a1 + v26;
  v32 = (char *)a2 + v26;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  v33 = a3[10];
  v34 = a3[11];
  v35 = (char *)a1 + v33;
  v36 = (char *)a2 + v33;
  *v35 = *v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  v37 = (char *)a1 + v34;
  v38 = (char *)a2 + v34;
  *v37 = *v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *v40 = *v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  v42 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s10ManagementO4ViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_56024((uint64_t)a1 + v6, &qword_150CE90);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_56024((uint64_t)a1 + v12, &qword_1506570);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_56024((uint64_t)a1 + v18, &qword_1506578);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(void **)((char *)a1 + v24);
  v28 = *(void **)((char *)a2 + v24);
  *v25 = v28;
  v29 = v28;

  v25[1] = *((_QWORD *)v26 + 1);
  swift_retain();
  swift_release();
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_retain();
  swift_release();
  v33 = a3[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *v34 = *v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_retain();
  swift_release();
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *v37 = *v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_retain();
  swift_release();
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *v40 = *v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s10ManagementO4ViewVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  v22 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

_QWORD *_s10ManagementO4ViewVwta(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_56024((uint64_t)a1 + v7, &qword_150CE90);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_56024((uint64_t)a1 + v12, &qword_1506570);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    sub_56024((uint64_t)a1 + v17, &qword_1506578);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(void **)((char *)a1 + v22);
  *v23 = *v24;

  v23[1] = v24[1];
  swift_release();
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_release();
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  v32 = a3[11];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_release();
  v35 = a3[12];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  *v36 = *v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_release();
  return a1;
}

uint64_t _s10ManagementO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E83494);
}

uint64_t sub_E83494(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B670);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s10ManagementO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E83570);
}

uint64_t sub_E83570(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B670);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_E8363C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  v8[0] = &unk_10B11D8;
  sub_1D1B7C(319, (unint64_t *)&qword_150B6E0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1D1B7C(319, &qword_150B6E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1D1B7C(319, (unint64_t *)&unk_150B6F0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = &unk_10B11F0;
        v8[5] = &unk_10B11F0;
        v8[6] = &unk_10B11F0;
        v8[7] = &unk_10B11F0;
        v8[8] = &unk_10B11F0;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_E83740(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + class metadata base offset for Collaboration.Management.ViewController);
}

uint64_t sub_E8377C()
{
  return type metadata accessor for Collaboration.Management.ViewController(0);
}

ValueMetadata *type metadata accessor for PlaylistCurators()
{
  return &type metadata for PlaylistCurators;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.Curator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Artwork(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for PlaylistCurators.Curator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for PlaylistCurators.Curator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E83CDC);
}

uint64_t sub_E83CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E83D68);
}

uint64_t sub_E83D68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_E83DE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10B11D8;
  sub_1D1B7C(319, &qword_150A400, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = v7;
      v14 = v9;
      v15 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v13 = v7;
      v14 = v9;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

void destroy for PlaylistCurators.View(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
}

_QWORD *initializeWithCopy for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      v11 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v5, v6, v8);
      v11 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
  }
  else
  {
    *v5 = *v6;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v11);
  return a1;
}

_QWORD *assignWithCopy for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_56024((uint64_t)a1 + v6, &qword_1506580);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        v13 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
  }
  return a1;
}

_QWORD *initializeWithTake for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_56024((uint64_t)a1 + v6, &qword_1506580);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E844E0);
}

uint64_t sub_E844E0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B888);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E8456C);
}

char *sub_E8456C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B888);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_E845E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1F7F1C(319, (unint64_t *)&unk_150B8F8, &qword_1506880, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for PlaylistCurators.View.Configuration()
{
  return &type metadata for PlaylistCurators.View.Configuration;
}

uint64_t sub_E84684(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + class metadata base offset for PlaylistCurators.ViewController);
}

uint64_t sub_E846D0()
{
  return type metadata accessor for PlaylistCurators.ViewController(0);
}

uint64_t type metadata accessor for ClearBackground.Controller()
{
  return objc_opt_self(_TtCV11MusicCoreUIP33_BED032AFC26D7293E5DA491DDAECC51415ClearBackground10Controller);
}

uint64_t sub_E846F8()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150B210);
  v1[1] = &type metadata for Bool;
  v1[2] = sub_5C150(&qword_150B270, &qword_150B210, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  v1[3] = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_E84770()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150B278);
  v1[1] = sub_5C150(&qword_150B288, &qword_150B278, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.artworkCaching(id:limit:)>>, 1);
}

uint64_t *sub_E847D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Playlist.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *v11 = *v12;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48);
    swift_retain();
    v17 = swift_retain();
    if (v16(v15, 1, v7, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v14, (uint64_t *)v15, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
    *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    swift_retain();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
    v27 = a3[9];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = v28;
      v33 = v30;
      v34 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = v28;
      v33 = v30;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

double sub_E84A18(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v4 = type metadata accessor for Playlist.Collaborator(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_release();
  v7 = swift_release();
  v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v8, 1, v4, v7))
    v6(v8, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  swift_release();
  v9 = a1 + a2[8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  v12 = a1 + a2[9];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_E84B70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  v12 = a3[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48);
  swift_retain();
  v16 = swift_retain();
  if (v15(v14, 1, v6, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v13, (uint64_t)v14, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  *(_QWORD *)&v13[*(int *)(v18 + 28)] = *(_QWORD *)&v14[*(int *)(v18 + 28)];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  swift_retain();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
    v30 = v26;
    v31 = v28;
    v32 = 1;
  }
  else
  {
    *v26 = *v27;
    swift_retain();
    v30 = v26;
    v31 = v28;
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v31, v32);
  return a1;
}

uint64_t sub_E84D88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_retain();
  v12 = swift_release();
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48);
  v17 = v16(a1 + v13, 1, v6, v12);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v15, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v15, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v14, (uint64_t)v15, v6);
LABEL_7:
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[8];
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    sub_56024(a1 + v21, &qword_1506570);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
    v27 = a3[9];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (_QWORD *)(a2 + v27);
    sub_56024(a1 + v27, &qword_1506578);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = v28;
      v33 = v30;
      v34 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = v28;
      v33 = v30;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

uint64_t sub_E85030(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  *(_QWORD *)&v11[*(int *)(v14 + 28)] = *(_QWORD *)&v12[*(int *)(v14 + 28)];
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v20 = a3[9];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload(v21, v23, 1);
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_E85220(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  v12 = swift_release();
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48);
  v17 = v16(a1 + v13, 1, v6, v12);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v15, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v15, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508780);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v14, (uint64_t)v15, v6);
LABEL_7:
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[8];
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_56024(a1 + v21, &qword_1506570);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    v26 = a3[9];
    v27 = (void *)(a1 + v26);
    v28 = (const void *)(a2 + v26);
    sub_56024(a1 + v26, &qword_1506578);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload(v27, v29, 1);
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_E854B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E854BC);
}

uint64_t sub_E854BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[8];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B670);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[9];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_E855B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E855C4);
}

uint64_t sub_E855C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Playlist.Collaborator(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B670);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[9];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s10ManagementO4ViewV19CollaboratorRowViewVMa(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150BA08, (uint64_t)&_s10ManagementO4ViewV19CollaboratorRowViewVMn);
}

void sub_E856D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  v2 = type metadata accessor for Playlist.Collaborator(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[2] = &unk_10B11F0;
    sub_1F7F1C(319, (unint64_t *)&unk_150BA18, &qword_1508780, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1D1B7C(319, &qword_150B6E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_1D1B7C(319, (unint64_t *)&unk_150B6F0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v10[5] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 6, v10, a1 + 16);
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for ClearBackground()
{
  return &type metadata for ClearBackground;
}

ValueMetadata *_s10ManagementO10QRCodeViewVMa()
{
  return &_s10ManagementO10QRCodeViewVN;
}

ValueMetadata *_s10ManagementO22ActivityViewControllerVMa()
{
  return &_s10ManagementO22ActivityViewControllerVN;
}

ValueMetadata *_s10ManagementO4ViewV5ShareOMa()
{
  return &_s10ManagementO4ViewV5ShareON;
}

uint64_t *sub_E85830(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 28);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = v17[8];
    sub_270050(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    v16[8] = v19;
  }
  return v4;
}

uint64_t sub_E85944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  return sub_270154(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_E859D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_retain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_270050(*(_QWORD *)v15, v17);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  return a1;
}

uint64_t sub_E85ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_56024(a1 + v7, &qword_15065E8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
  }
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_270050(*(_QWORD *)v15, v17);
  v18 = *(_QWORD *)v14;
  v19 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  sub_270154(v18, v19);
  return a1;
}

uint64_t sub_E85BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_E85CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_56024(a1 + v6, &qword_15065E8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  sub_270154(v15, v16);
  return a1;
}

uint64_t sub_E85DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E85DC4);
}

uint64_t sub_E85DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BA60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_E85E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E85E50);
}

uint64_t sub_E85E50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BA60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t _s10ManagementO4ViewV5ShareO6ButtonVMa(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150BAC0, (uint64_t)&_s10ManagementO4ViewV5ShareO6ButtonVMn);
}

void sub_E85EDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10B1298;
  v4[1] = (char *)&value witness table for () + 64;
  sub_1D1B7C(319, (unint64_t *)&unk_150BAD0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_10B12B0;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_E85F7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1212EC4, 1);
}

unint64_t sub_E85F90()
{
  unint64_t result;

  result = qword_150BB08;
  if (!qword_150BB08)
  {
    result = swift_getWitnessTable(&unk_10B1358, &_s10ManagementO4ViewV5ShareON);
    atomic_store(result, (unint64_t *)&qword_150BB08);
  }
  return result;
}

unint64_t sub_E85FD8()
{
  unint64_t result;

  result = qword_150BB10;
  if (!qword_150BB10)
  {
    result = swift_getWitnessTable(&unk_10B1380, &_s10ManagementO22ActivityViewControllerVN);
    atomic_store(result, (unint64_t *)&qword_150BB10);
  }
  return result;
}

unint64_t sub_E86020()
{
  unint64_t result;

  result = qword_150BB18;
  if (!qword_150BB18)
  {
    result = swift_getWitnessTable(&unk_10B1448, &_s10ManagementO10QRCodeViewVN);
    atomic_store(result, (unint64_t *)&qword_150BB18);
  }
  return result;
}

unint64_t sub_E86068()
{
  unint64_t result;

  result = qword_150BB20;
  if (!qword_150BB20)
  {
    result = swift_getWitnessTable(&unk_10B1510, &type metadata for ClearBackground);
    atomic_store(result, (unint64_t *)&qword_150BB20);
  }
  return result;
}

uint64_t sub_E860AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1212E9C, 1);
}

uint64_t sub_E860BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E7A084(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E860C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BB60;
  if (!qword_150BB60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BB30);
    sub_5C150(&qword_150BB68, &qword_150BB28, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_5C150(&qword_150BB70, &qword_150BB78, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BB60);
  }
  return result;
}

unint64_t sub_E86160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BB88;
  if (!qword_150BB88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BB90);
    sub_5C150(&qword_150CF80, (uint64_t *)&unk_150B260, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BB88);
  }
  return result;
}

uint64_t sub_E861FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E7A7B4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E86208()
{
  return sub_4EF53C(_s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t (*)(uint64_t))sub_E7AC0C);
}

uint64_t objectdestroy_31Tm_3()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v0 + v4, v7);
  swift_release();
  v10 = swift_release();
  v11 = v0 + v4 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v11, 1, v7, v10))
    v9(v11, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150B9A8);
  swift_release();
  v12 = v6 + v1[8];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release();
  }
  v15 = v6 + v1[9];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E863B0()
{
  return sub_4EF53C(_s10ManagementO4ViewV19CollaboratorRowViewVMa, sub_E7A3E0);
}

uint64_t sub_E863CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    return sub_4D68D0(a1, a2, a3);
  return a1;
}

double sub_E863E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  double result;

  if (a5 != 255)
    return sub_4D68F8(a1, a2, a3, a4);
  return result;
}

uint64_t sub_E863FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1F6354(a1, (uint64_t)&unk_10B16A0, (uint64_t)&unk_10B16C8, a2);
}

uint64_t sub_E86420(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F63E0(a1, a2, a3, a4, (uint64_t)&unk_10B16A0, (uint64_t)&unk_10B16C8);
}

double sub_E86448()
{
  return sub_E8646C("[Management] Decline button tapped", 1);
}

double sub_E8645C()
{
  return sub_E8646C("[Management] Approve button tapped", 0);
}

double sub_E8646C(const char *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8) + 80);
  return sub_E79F58(v2 + ((v5 + 16) & ~v5), a1, a2);
}

unint64_t sub_E864BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BC30;
  if (!qword_150BC30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BBD0);
    sub_5C150(&qword_150BC38, &qword_150BBC8, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BC30);
  }
  return result;
}

unint64_t sub_E86540()
{
  unint64_t result;

  result = qword_150BC58;
  if (!qword_150BC58)
  {
    result = swift_getWitnessTable(&unk_10B1560, &type metadata for ClearBackground);
    atomic_store(result, (unint64_t *)&qword_150BC58);
  }
  return result;
}

_QWORD *sub_E86584(_QWORD *a1)
{
  void *v2;
  id v3;

  v2 = (void *)a1[3];
  sub_50CB4(a1[1], a1[2]);
  v3 = v2;
  return a1;
}

unint64_t sub_E865B4()
{
  unint64_t result;

  result = qword_150BC60;
  if (!qword_150BC60)
  {
    result = swift_getWitnessTable(&unk_10B1498, &_s10ManagementO10QRCodeViewVN);
    atomic_store(result, (unint64_t *)&qword_150BC60);
  }
  return result;
}

unint64_t sub_E865F8()
{
  unint64_t result;

  result = qword_150BC68;
  if (!qword_150BC68)
  {
    result = swift_getWitnessTable(&unk_10B13D0, &_s10ManagementO22ActivityViewControllerVN);
    atomic_store(result, (unint64_t *)&qword_150BC68);
  }
  return result;
}

uint64_t sub_E8663C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  sub_270154(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 28)), *(_BYTE *)(v0 + v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E86710()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s10ManagementO4ViewV5ShareO6ButtonVMa(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 8))();
}

uint64_t sub_E8674C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E7B3AC(*(unsigned __int8 **)(v1 + 16), a1);
}

uint64_t sub_E86754()
{
  return sub_184F98((unint64_t *)&unk_150BCA0, (uint64_t *)&unk_150CE40, (void (*)(void))sub_E86778);
}

unint64_t sub_E86778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BCB0;
  if (!qword_150BCB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BCB8);
    sub_5C150(&qword_150BCC0, &qword_150BCC8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_5C150(&qword_150BCD0, &qword_150BCD8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BCB0);
  }
  return result;
}

uint64_t sub_E86824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 41) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E868A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  v9 = v1 + ((v4 + 41) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_150BD44);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_C3150;
  return sub_E6E23C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_E86940(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_150BD54);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return sub_E6E668(a1, v5, v6, v7, v8);
}

uint64_t objectdestroy_74Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E86A54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_150BD7C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return sub_E6DCFC(a1, v5, v6, v7, v8);
}

uint64_t sub_E86AE8()
{
  return objectdestroy_11Tm_2(40);
}

uint64_t sub_E86AF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_150BD8C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_E6D3C8(a1, v4, v5, v6);
}

uint64_t sub_E86B5C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1F6354(a1, (uint64_t)&unk_10B1748, (uint64_t)&unk_10B1770, a2);
}

uint64_t sub_E86B80(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F63E0(a1, a2, a3, a4, (uint64_t)&unk_10B1748, (uint64_t)&unk_10B1770);
}

uint64_t sub_E86BA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1F6354(a1, (uint64_t)&unk_10B1790, (uint64_t)&unk_10B17B8, a2);
}

uint64_t sub_E86BC8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F63E0(a1, a2, a3, a4, (uint64_t)&unk_10B1790, (uint64_t)&unk_10B17B8);
}

uint64_t sub_E86BEC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10B17D8, (uint64_t)&unk_10B1800, a2);
}

uint64_t sub_E86C10(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10B17D8, (uint64_t)&unk_10B1800);
}

uint64_t sub_E86C34@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10B1820, (uint64_t)&unk_10B1848, a2);
}

uint64_t sub_E86C58(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10B1820, (uint64_t)&unk_10B1848);
}

uint64_t sub_E86C7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10B1868, (uint64_t)&unk_10B1890, a2);
}

uint64_t sub_E86CA0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10B1868, (uint64_t)&unk_10B1890);
}

double sub_E86CC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B290);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
  __chkstk_darwin();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))((char *)&v20 - v12, enum case for UserInterfaceSizeClass.compact(_:), v2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  v14 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_5C238(a1, (uint64_t)v8, &qword_1506880);
  sub_5C238((uint64_t)v13, v14, &qword_1506880);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v8, 1, v2) == 1)
  {
    sub_56024((uint64_t)v13, &qword_1506880);
    if (v15(v14, 1, v2) == 1)
    {
      sub_56024((uint64_t)v8, &qword_1506880);
      return -9.0;
    }
  }
  else
  {
    sub_5C238((uint64_t)v8, (uint64_t)v10, &qword_1506880);
    if (v15(v14, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v14, v2);
      v17 = sub_4DD24(&qword_150B2A0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v2, v17);
      v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v5, v2);
      sub_56024((uint64_t)v13, &qword_1506880);
      v19(v10, v2);
      sub_56024((uint64_t)v8, &qword_1506880);
      result = -9.0;
      if ((v18 & 1) != 0)
        return result;
      return -12.0;
    }
    sub_56024((uint64_t)v13, &qword_1506880);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_56024((uint64_t)v8, (uint64_t *)&unk_150B290);
  return -12.0;
}

uint64_t sub_E86F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistCurators.View(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v0 + v4 + *(int *)(v1 + 20);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506580);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_E87064(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  type metadata accessor for PlaylistCurators.View(0);
  sub_E7DD94(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_E870BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_E870E0(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BF50);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_E87138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BE88;
  if (!qword_150BE88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BE78);
    sub_E871DC(&qword_150BE90, &qword_150BE98, (void (*)(void))sub_E8724C, (void (*)(void))sub_E1BD08);
    sub_5C150(&qword_150BF40, &qword_150BF48, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BE88);
  }
  return result;
}

uint64_t sub_E871DC(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_E8724C()
{
  return sub_E871DC(&qword_150BEA0, &qword_150BEA8, (void (*)(void))sub_E87270, (void (*)(void))sub_E1BCB0);
}

uint64_t sub_E87270()
{
  return sub_184F98(&qword_150BEB0, &qword_150BEB8, (void (*)(void))sub_E87294);
}

unint64_t sub_E87294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150BEC0;
  if (!qword_150BEC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BEC8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BED0);
    v2[1] = sub_E4B3D8();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_4DD24(&qword_150A728, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BEC0);
  }
  return result;
}

double sub_E87340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B290);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506880);
  __chkstk_darwin();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))((char *)&v20 - v12, enum case for UserInterfaceSizeClass.compact(_:), v2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  v14 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_5C238(a1, (uint64_t)v8, &qword_1506880);
  sub_5C238((uint64_t)v13, v14, &qword_1506880);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v8, 1, v2) == 1)
  {
    sub_56024((uint64_t)v13, &qword_1506880);
    if (v15(v14, 1, v2) == 1)
    {
      sub_56024((uint64_t)v8, &qword_1506880);
      return 25.0;
    }
  }
  else
  {
    sub_5C238((uint64_t)v8, (uint64_t)v10, &qword_1506880);
    if (v15(v14, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v14, v2);
      v17 = sub_4DD24(&qword_150B2A0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v2, v17);
      v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v5, v2);
      sub_56024((uint64_t)v13, &qword_1506880);
      v19(v10, v2);
      sub_56024((uint64_t)v8, &qword_1506880);
      result = 25.0;
      if ((v18 & 1) != 0)
        return result;
      return 29.0;
    }
    sub_56024((uint64_t)v13, &qword_1506880);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_56024((uint64_t)v8, (uint64_t *)&unk_150B290);
  return 29.0;
}

uint64_t block_copy_helper_349(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_349(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_E87614@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_E6F4E0(*(_QWORD *)(v1 + 16), a1);
}

void sub_E8761C(double *a1@<X8>)
{
  *a1 = EnvironmentValues.defaultMinListRowHeight.getter();
}

uint64_t sub_E87644(double *a1)
{
  return EnvironmentValues.defaultMinListRowHeight.setter(*a1);
}

uint64_t objectdestroyTm_36()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release();
  v7 = v0 + v4 + v1[5];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v6 + v1[6];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }
  v13 = v6 + v1[7];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E87824()
{
  return sub_4EF53C(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_E77704);
}

uint64_t sub_E87838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E7062C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E87840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BFE0;
  if (!qword_150BFE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFD0);
    sub_5C150(&qword_150BFE8, (uint64_t *)&unk_150BFF0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_5C150(&qword_1509BF8, &qword_150C000, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BFE0);
  }
  return result;
}

unint64_t sub_E878DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C010;
  if (!qword_150C010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C018);
    sub_184F98(&qword_150C020, &qword_150C028, (void (*)(void))sub_E86020);
    sub_5C150(&qword_150C030, &qword_150C038, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C010);
  }
  return result;
}

unint64_t sub_E87980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C040;
  if (!qword_150C040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFC8);
    sub_5C150(&qword_150C048, &qword_150C050, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_150C040);
  }
  return result;
}

unint64_t sub_E879FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_150C058;
  if (!qword_150C058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFB8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFD0);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BFD8);
    v2[2] = sub_E87840();
    v2[3] = sub_3D38D0(&qword_150C008, &qword_150BFD8, (void (*)(void))sub_E878DC);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
    sub_E87980();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_150C058);
  }
  return result;
}

uint64_t sub_E87AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E76E3C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E87AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C090;
  if (!qword_150C090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C080);
    sub_E87CE0((unint64_t *)&qword_150C098, &qword_150C0A0, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C090);
  }
  return result;
}

uint64_t sub_E87B78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E75BD0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_E87B90()
{
  uint64_t v0;

  return sub_E769F4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_E87B98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C0C0;
  if (!qword_150C0C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C0B8);
    sub_4DD24(&qword_150C0A8, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10B15D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_150C0C0);
  }
  return result;
}

uint64_t sub_E87C14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E75E28(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E87C20()
{
  return sub_4EF53C(type metadata accessor for Collaboration.Management.View, sub_E76120);
}

unint64_t sub_E87C34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C100;
  if (!qword_150C100)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C0F8);
    sub_E87CE0(&qword_150C108, &qword_150C110, (uint64_t)&protocol witness table for _FlexFrameLayout, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C100);
  }
  return result;
}

uint64_t sub_E87CE0(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_E87D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E764EC(*(_QWORD *)(v1 + 16), a1);
}

void sub_E87D60(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  sub_E76FEC(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t objectdestroy_159Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  swift_release();
  v7 = v0 + v4 + v1[5];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = v6 + v1[6];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }
  v13 = v6 + v1[7];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506578);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_E87F64(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_E77070(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_E87FA4()
{
  return objectdestroy_11Tm_2(41);
}

uint64_t sub_E87FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_150C134);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_50F8C;
  return sub_E6CFD4(a1, v4, v5, v6, v7);
}

uint64_t sub_E8802C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_E759F8(a1);
}

uint64_t sub_E8806C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_E758D4(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_E880B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C230;
  if (!qword_150C230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C200);
    sub_E8813C();
    sub_5C150(&qword_150C248, &qword_150C1F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C230);
  }
  return result;
}

unint64_t sub_E8813C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C238;
  if (!qword_150C238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C240);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C238);
  }
  return result;
}

uint64_t sub_E881C0()
{
  return objectdestroy_11Tm_2(40);
}

uint64_t sub_E881C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_150C264);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_E6D6F8(a1, v4, v5, v6);
}

uint64_t sub_E88238()
{
  return sub_4EF53C(type metadata accessor for Collaboration.Management.View, sub_E74B90);
}

uint64_t sub_E88264()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_E88278@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_E74CD8(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_E882B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C298;
  if (!qword_150C298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C280);
    sub_4DD24(&qword_150C2A0, _s10ManagementO4ViewV5ShareO6ButtonVMa, (uint64_t)&unk_10B12C8);
    sub_5C150(&qword_150C2A8, &qword_150C2B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C298);
  }
  return result;
}

uint64_t sub_E88354()
{
  return sub_4EF53C(type metadata accessor for Collaboration.Management.View, sub_E74EBC);
}

uint64_t sub_E88368()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_E88378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C300;
  if (!qword_150C300)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C2D8);
    sub_E883FC();
    sub_5C150(&qword_1509BF8, &qword_150C000, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C300);
  }
  return result;
}

unint64_t sub_E883FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C308;
  if (!qword_150C308)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C2D0);
    sub_5C150(&qword_150C310, &qword_150C2C8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C308);
  }
  return result;
}

unint64_t sub_E88480()
{
  unint64_t result;

  result = qword_150C318;
  if (!qword_150C318)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_150C318);
  }
  return result;
}

uint64_t sub_E884C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_E75BD0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_E88518()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_E88540()
{
  return sub_4EF53C(type metadata accessor for Collaboration.Management.View, sub_E7270C);
}

unint64_t sub_E88554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C3B0;
  if (!qword_150C3B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C328);
    sub_5C150(&qword_150CF80, (uint64_t *)&unk_150B260, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C3B0);
  }
  return result;
}

unint64_t sub_E885F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C3C0;
  if (!qword_150C3C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C358);
    sub_E88674();
    sub_5C150(&qword_150C3F8, &qword_150C3B8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C3C0);
  }
  return result;
}

unint64_t sub_E88674()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C3C8;
  if (!qword_150C3C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C350);
    sub_184F98(&qword_150C3D0, &qword_150C348, (void (*)(void))sub_E88718);
    sub_5C150((unint64_t *)&unk_150CC20, &qword_150C3F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C3C8);
  }
  return result;
}

uint64_t sub_E88718()
{
  return sub_184F98(&qword_150C3D8, &qword_150C340, (void (*)(void))sub_E8873C);
}

unint64_t sub_E8873C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150C3E0;
  if (!qword_150C3E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C338);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C328);
    v2[1] = sub_E88554();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C3E0);
  }
  return result;
}

uint64_t sub_E887E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_E72854(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_E887F8()
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_E76954();
}

uint64_t sub_E88828()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E8884C(uint64_t a1)
{
  uint64_t v1;

  return sub_E68DE4(a1, v1);
}

uint64_t sub_E88854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_E888E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_150C40C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_C3150;
  return sub_E68E7C(a1, v6, v7, v8, v9);
}

uint64_t sub_E88988@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = dispatch thunk of LibraryPlaylistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_E889CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C458;
  if (!qword_150C458)
  {
    v1 = sub_4E684(255, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_150C458);
  }
  return result;
}

void sub_E88A24(void (*a1)(char *))
{
  uint64_t v1;

  sub_E69364(a1, v1);
}

uint64_t sub_E88A2C()
{
  return Playlist.collaboration.getter();
}

uint64_t _s10ManagementO4ViewV5ShareOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_E88A98 + 4 * byte_10B0F15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E88ACC + 4 * asc_10B0F10[v4]))();
}

uint64_t sub_E88ACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E88AD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE88ADCLL);
  return result;
}

uint64_t sub_E88AE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE88AF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_E88AF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E88AFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationOMa()
{
  return &_s10ManagementO4ViewV10ModerationON;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

__n128 __swift_memcpy24_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationO6ButtonVMa()
{
  return &_s10ManagementO4ViewV10ModerationO6ButtonVN;
}

unint64_t sub_E88BB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_150C4C0;
  if (!qword_150C4C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C4C8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BB40);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BB38);
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BB30);
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BB58);
    v8 = sub_E860C4();
    v9 = sub_3D38D0(&qword_150BB80, &qword_150BB58, (void (*)(void))sub_E86160);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_4DD24(&qword_150C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C4C0);
  }
  return result;
}

unint64_t sub_E88D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C4D8;
  if (!qword_150C4D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BC88);
    sub_E88D88();
    sub_5C150(&qword_150C4F8, &qword_150BCE0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C4D8);
  }
  return result;
}

unint64_t sub_E88D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C4E0;
  if (!qword_150C4E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BC80);
    sub_E88E0C();
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C4E0);
  }
  return result;
}

unint64_t sub_E88E0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C4E8;
  if (!qword_150C4E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150BC78);
    sub_5C150(&qword_150C4F0, &qword_150BC70, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C4E8);
  }
  return result;
}

uint64_t sub_E88E90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1212EEC, 1);
}

unint64_t sub_E88EA4()
{
  unint64_t result;

  result = qword_150C500;
  if (!qword_150C500)
  {
    result = swift_getWitnessTable(&unk_10B1B38, &_s10ManagementO4ViewV10ModerationON);
    atomic_store(result, (unint64_t *)&qword_150C500);
  }
  return result;
}

uint64_t sub_E88EE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_E88F0C()
{
  uint64_t v0;

  return sub_E7BD80(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_E88F18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E7BDF8(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_E88F24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C528;
  if (!qword_150C528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C520);
    sub_E88FA8();
    sub_5C150((unint64_t *)&unk_150C560, &qword_150CF60, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C528);
  }
  return result;
}

unint64_t sub_E88FA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C530;
  if (!qword_150C530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C538);
    sub_184F98(&qword_150C540, &qword_150C548, (void (*)(void))sub_E8904C);
    sub_5C150((unint64_t *)&unk_150CC20, &qword_150C3F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C530);
  }
  return result;
}

unint64_t sub_E8904C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C550;
  if (!qword_150C550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C558);
    sub_E62468();
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C550);
  }
  return result;
}

uint64_t sub_E890D0()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_E890F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_E89114()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

unint64_t sub_E89140()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_150C588;
  if (!qword_150C588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C578);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C508);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_5C150(&qword_150C570, &qword_150C508, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_4DD24(&qword_150C0F0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_5C150((unint64_t *)&unk_150C590, &qword_150C580, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C588);
  }
  return result;
}

void Collaboration.Management.ViewController.init(rootView:)()
{
  PlaylistCurators.ViewController.init(rootView:)();
}

uint64_t Collaboration.Flow.Collaborator.init(name:handle:artwork:canCollaborate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v15 = (uint64_t)a7 + *(int *)(v14 + 24);
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = *(int *)(v14 + 28);
  *((_BYTE *)a7 + v17) = 0;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  result = sub_E8931C(a5, v15);
  *((_BYTE *)a7 + v17) = a6;
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.Collaborator(uint64_t a1)
{
  return sub_6345C(a1, qword_150C710, (uint64_t)&nominal type descriptor for Collaboration.Flow.Collaborator);
}

uint64_t sub_E8931C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Collaboration.Flow.Collaborator.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  return sub_5C238(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_150CB40);
}

uint64_t Collaboration.Flow.Collaborator.artwork.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 24);
  return sub_E8931C(a1, v3);
}

double (*Collaboration.Flow.Collaborator.artwork.modify())(double)
{
  type metadata accessor for Collaboration.Flow.Collaborator(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 28));
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Collaboration.Flow.Collaborator(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

double (*Collaboration.Flow.Collaborator.canCollaborate.modify())(double)
{
  type metadata accessor for Collaboration.Flow.Collaborator(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Collaboration.Flow.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];

  v1 = v0;
  v41[0] = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v41[0] - 8);
  __chkstk_darwin();
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v41 - v11;
  v13 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v1, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v18 = v41[0];
      (*(void (**)(char *, char *, _QWORD))(v2 + 32))(v4, v15, v41[0]);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x800000000110E9A0);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v19 = qword_1583020;
      static Locale.current.getter((id)qword_1583020);
      v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5D8);
      v24 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_105B360;
      v25 = Playlist.Collaborator.name.getter(v24);
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      *(_QWORD *)(v24 + 64) = sub_E92D04();
      if (v27)
        v28 = v25;
      else
        v28 = 0;
      v29 = 0xE000000000000000;
      if (v27)
        v29 = v27;
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v24 + 40) = v29;
      v30 = static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
      swift_bridgeObjectRelease();
      v31 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v18, v31);
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x800000000110E9E0);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v36 = qword_1583020;
      static Locale.current.getter((id)qword_1583020);
      v30 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v36, v6, 0, 0, 256);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v37);
    }
  }
  else
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v33 = &v15[*(int *)(v32 + 48)];
    if (v15[*(int *)(v32 + 64)] == 1)
    {
      v34 = 0x616C50206E696F4ALL;
      v35 = 0xEE003F7473696C79;
    }
    else
    {
      v34 = 0xD000000000000017;
      v35 = 0x800000000110E9C0;
    }
    String.LocalizationValue.init(stringLiteral:)(v34, v35);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v38 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v30 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v38, v6, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v39 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v33, v39);
    sub_56024((uint64_t)v15, &qword_150C5F0);
  }
  return v30;
}

Swift::String __swiftcall Collaboration.Flow.subtitle(hasProfileEdit:)(Swift::Bool hasProfileEdit)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String *v5;
  uint64_t v6;
  Swift::String *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  int EnumCaseMultiPayload;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  Swift::String *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  void *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  char *v60;
  void *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t countAndFlagsBits;
  void *object;
  char *v71;
  char *v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  unint64_t v76;
  const char *v77;
  void *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  unint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  Swift::String result;
  Swift::String *v104;
  uint64_t v105;
  uint64_t v106;
  _BOOL4 v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;

  v107 = hasProfileEdit;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v2 = (char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  __chkstk_darwin();
  v5 = (Swift::String *)((char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (Swift::String *)((char *)&v104 - v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F8);
  __chkstk_darwin();
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
  __chkstk_darwin();
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v108 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin();
  v110 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v104 - v16;
  v18 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8((uint64_t)v109, (uint64_t)v20, v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v18);
  if (!EnumCaseMultiPayload)
  {
    v104 = v5;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v109 = &v20[*(int *)(v34 + 48)];
    v35 = v20[*(int *)(v34 + 64)];
    sub_5C090((uint64_t)v20, (uint64_t)v12, &qword_150C5F0);
    v36 = *(int *)(v8 + 48);
    sub_5C238((uint64_t)v12, (uint64_t)v10, &qword_150C5F0);
    v10[v36] = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v10, 1, v106) == 1)
    {
      v37 = v17;
      v38 = v14;
      if (v35)
      {
        v39 = 0x800000000110EAD0;
        v40 = 0x100000000000005BLL;
      }
      else
      {
        v39 = 0x800000000110EA50;
        v40 = 0xD00000000000007ELL;
      }
      String.LocalizationValue.init(stringLiteral:)(v40, v39);
      v55 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v57 = v110;
      v56 = v111;
      v55(v110, v37, v111);
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v58 = qword_1583020;
      v59 = (id)qword_1583020;
      v60 = v108;
      static Locale.current.getter(v59);
      v31 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v58, v60, 0, 0, 256);
      v33 = v61;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v56);
      sub_56024((uint64_t)v12, &qword_150C5F0);
      goto LABEL_36;
    }
    v47 = v14;
    if (v35)
    {
      v48 = v7;
      sub_5C04C((uint64_t)v10, (uint64_t)v7, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v107)
      {
        v49 = 0x800000000110EAD0;
        v50 = 0x100000000000005BLL;
LABEL_24:
        String.LocalizationValue.init(stringLiteral:)(v50, v49);
        v62 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v64 = v110;
        v63 = v111;
        v62(v110, v17, v111);
        if (qword_1505F70 != -1)
          swift_once(&qword_1505F70, sub_DB9248);
        v65 = qword_1583020;
        v66 = (id)qword_1583020;
        v67 = v108;
        static Locale.current.getter(v66);
        v68 = v64;
LABEL_34:
        v31 = String.init(localized:table:bundle:locale:comment:)(v68, 0, 0, v65, v67, 0, 0, 256);
        v33 = v85;
        (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v63);
LABEL_35:
        sub_56024((uint64_t)v12, &qword_150C5F0);
        sub_5C0DC((uint64_t)v48, type metadata accessor for Collaboration.Flow.Collaborator);
LABEL_36:
        v86 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v109, v86);
        goto LABEL_37;
      }
      countAndFlagsBits = v7[1]._countAndFlagsBits;
      object = v48[1]._object;
      v71 = v110;
      if (object)
      {
        v72 = v2;
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(98, 2);
        v73._countAndFlagsBits = 0x100000000000002ELL;
        v73._object = (void *)0x800000000110ECA0;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v73);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v48);
        v74._countAndFlagsBits = 4204576;
        v74._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v74);
        v75._countAndFlagsBits = countAndFlagsBits;
        v75._object = object;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v75);
        v76 = 0xD000000000000031;
        v77 = ") and the playlist will be added to your library.";
LABEL_31:
        v82 = (unint64_t)(v77 - 32) | 0x8000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v76);
        String.LocalizationValue.init(stringInterpolation:)(v72);
        v83 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v63 = v111;
        v83(v71, v17, v111);
        if (qword_1505F70 != -1)
          swift_once(&qword_1505F70, sub_DB9248);
        v65 = qword_1583020;
        v84 = (id)qword_1583020;
        v67 = v108;
        static Locale.current.getter(v84);
        v68 = v71;
        goto LABEL_34;
      }
      v89 = 0x1000000000000060;
      v90 = "You’ll be able to edit and reorder songs as %@ and the playlist will be added to your library.";
    }
    else
    {
      v48 = v104;
      sub_5C04C((uint64_t)v10, (uint64_t)v104, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v107)
      {
        v49 = 0x800000000110EA50;
        v50 = 0xD00000000000007ELL;
        goto LABEL_24;
      }
      countAndFlagsBits = v48[1]._countAndFlagsBits;
      v78 = v48[1]._object;
      v71 = v110;
      if (v78)
      {
        v72 = v2;
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(117, 2);
        v79._countAndFlagsBits = 0x100000000000002ALL;
        v79._object = (void *)0x800000000110EBB0;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v79);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v48);
        v80._countAndFlagsBits = 4204576;
        v80._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v80);
        v81._countAndFlagsBits = countAndFlagsBits;
        v81._object = v78;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v81);
        v76 = 0xD000000000000048;
        v77 = "). The playlist will be added to your library after you request to join.";
        goto LABEL_31;
      }
      v89 = 0x1000000000000073;
      v90 = "Once the owner approves, you’ll join as %@. The playlist will be added to your library after you request to join.";
    }
    String.LocalizationValue.init(stringLiteral:)(v89, (unint64_t)(v90 - 32) | 0x8000000000000000);
    v91 = v111;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v71, v17, v111);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v92 = qword_1583020;
    v93 = (id)qword_1583020;
    v94 = v108;
    static Locale.current.getter(v93);
    v95 = String.init(localized:table:bundle:locale:comment:)(v71, countAndFlagsBits, 0, v92, v94, 0, 0, 256);
    v97 = v96;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v91);
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5D8);
    v99 = swift_allocObject(v98, 72, 7);
    *(_OWORD *)(v99 + 16) = xmmword_105B360;
    v101 = v48->_countAndFlagsBits;
    v100 = v48->_object;
    *(_QWORD *)(v99 + 56) = &type metadata for String;
    *(_QWORD *)(v99 + 64) = sub_E92D04();
    *(_QWORD *)(v99 + 32) = v101;
    *(_QWORD *)(v99 + 40) = v100;
    swift_bridgeObjectRetain();
    v31 = static String.localizedStringWithFormat(_:_:)(v95, v97, v99);
    v33 = v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v23 = v17;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000004BLL, 0x800000000110EA00);
    v24 = v14;
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v27 = v110;
    v26 = v111;
    v25(v110, v23, v111);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v28 = qword_1583020;
    v29 = (id)qword_1583020;
    v30 = v108;
    static Locale.current.getter(v29);
    v31 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v30, 0, 0, 256);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v26);
    sub_5C0DC((uint64_t)v20, type metadata accessor for Collaboration.Flow);
  }
  else
  {
    v41 = v17;
    v42 = v14;
    v43 = v110;
    v44 = v111;
    if (v107)
    {
      v45 = 0xD00000000000006CLL;
      v46 = "Anyone with the link will be able to edit and reorder songs and your name and photo will be shown to others.";
    }
    else
    {
      v45 = 0xD00000000000003CLL;
      v46 = "Anyone with the link will be able to edit and reorder songs.";
    }
    String.LocalizationValue.init(stringLiteral:)(v45, (unint64_t)(v46 - 32) | 0x8000000000000000);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v43, v41, v44);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v51 = qword_1583020;
    v52 = (id)qword_1583020;
    v53 = v108;
    static Locale.current.getter(v52);
    v31 = String.init(localized:table:bundle:locale:comment:)(v43, 0, 0, v51, v53, 0, 0, 256);
    v33 = v54;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v44);
  }
LABEL_37:
  v87 = v31;
  v88 = v33;
  result._object = v88;
  result._countAndFlagsBits = v87;
  return result;
}

uint64_t Collaboration.Flow.buttonActionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[16];

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v24[-v8];
  v10 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5BDB8(v1, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_5C0DC((uint64_t)v12, type metadata accessor for Collaboration.Flow);
      return 0;
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x800000000110EDC0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v20 = qword_1583020;
      static Locale.current.getter((id)qword_1583020);
      v15 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v20, v3, 0, 0, 256);
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    }
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v17 = &v12[*(int *)(v16 + 48)];
    if (v12[*(int *)(v16 + 64)] == 1)
    {
      v18 = 1852403530;
      v19 = 0xE400000000000000;
    }
    else
    {
      v18 = 0x2074736575716552;
      v19 = 0xEF6E696F4A206F74;
    }
    String.LocalizationValue.init(stringLiteral:)(v18, v19);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v21 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v15 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v21, v3, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    v22 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v17, v22);
    sub_56024((uint64_t)v12, &qword_150C5F0);
  }
  return v15;
}

uint64_t Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t result;
  _QWORD *v25;
  char v28;
  uint64_t v29;
  uint64_t v30;

  *a9 = swift_getKeyPath(&unk_10B1BA0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(a9, v16, 0);
  v17 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v18 = (char *)a9 + v17[5];
  v28 = _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B805SwiftD05StateVySbGvpfi_0() & 1;
  State.init(wrappedValue:)(&v29, &v28, &type metadata for Bool);
  v19 = v30;
  *v18 = v29;
  *((_QWORD *)v18 + 1) = v19;
  v20 = (char *)a9 + v17[6];
  v28 = 0;
  State.init(wrappedValue:)(&v29, &v28, &type metadata for Bool);
  v21 = v30;
  *v20 = v29;
  *((_QWORD *)v20 + 1) = v21;
  v22 = (_QWORD *)((char *)a9 + v17[11]);
  v23 = (char *)a9 + v17[13];
  *(_QWORD *)v23 = sub_E90068;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 0;
  sub_5C04C(a1, (uint64_t)a9 + v17[7], type metadata accessor for Collaboration.Flow);
  result = sub_5C04C(a2, (uint64_t)a9 + v17[8], type metadata accessor for Collaboration.Object);
  *(_QWORD *)((char *)a9 + v17[9]) = a3;
  *((_BYTE *)a9 + v17[10]) = a4;
  *v22 = a5;
  v22[1] = a6;
  v25 = (_QWORD *)((char *)a9 + v17[12]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

uint64_t (*variable initialization expression of Collaboration.Flow.View._profileContext())()
{
  return sub_E90068;
}

uint64_t Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a1 = static HorizontalAlignment.center.getter(a2);
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C600);
  return sub_E8A750(v2, a1 + *(int *)(v4 + 44));
}

uint64_t sub_E8A750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t OpaqueTypeConformance2;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t KeyPath;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  double v140;
  double v141;
  double v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  int EnumCaseMultiPayload;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  Swift::String *v178;
  Swift::String v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  double v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  double v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  double v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  void (*v251)(char *, uint64_t, uint64_t);
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t *v267;
  unint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  __n128 v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  double v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  _OWORD *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _OWORD *v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  void *v321;
  char *v322;
  uint64_t v323;
  unint64_t v324;
  unint64_t v325;
  char *v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  id v330;
  char *v331;
  uint64_t v332;
  void *v333;
  void *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char v339;
  char v340;
  uint64_t v341;
  __n128 v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  __n128 v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  double v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  double v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  unint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  char v381;
  uint64_t v382;
  __int128 v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  void (*v400)(char *, uint64_t);
  unint64_t *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  int *v411;
  uint64_t v412;
  uint64_t v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  uint64_t v423;
  uint64_t v424;
  char *v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v430;
  int v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t *v436;
  uint64_t v437;
  uint64_t v438;
  char *v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  char *v443;
  char *v444;
  uint64_t v445;
  char *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char *v451;
  char *v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  char *v459;
  uint64_t v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  char *v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  double v473;
  double v474;
  char *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  unint64_t *v488;
  void (*v489)(char *, char *, uint64_t);
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  void (*v498)(char *, uint64_t);
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  int v510;
  uint64_t v511;
  uint64_t v512;
  char *v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t *v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  char *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  uint64_t v530;
  uint64_t v531;
  char *v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  unint64_t object;
  _DWORD v540[2];
  uint64_t v541;
  Swift::String v542;
  Swift::String v543;
  Swift::String v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  uint64_t v553;
  Swift::String v554;
  Swift::String v555;
  Swift::String v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  uint64_t v565;
  _OWORD v566[21];
  Swift::String v567;
  Swift::String v568;
  Swift::String v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  uint64_t v578;
  char v579;
  _BYTE v580[7];
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  char v585;
  _BYTE v586[7];
  char v587;
  _BYTE v588[7];
  double v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  char v593;
  _BYTE v594[7];
  char v595;
  _BYTE v596[7];
  unint64_t v597;
  uint64_t v598;
  char *v599;
  char *v600;
  char v601;
  _OWORD v602[9];
  uint64_t v603;
  unsigned __int8 v604[8];
  unsigned __int8 v605[8];
  unsigned __int8 v606[12];
  _DWORD v607[2];
  int v608;
  __int16 v609;
  _DWORD v610[3];
  unsigned __int8 v611;
  unsigned __int8 v612;
  unsigned __int8 v613;
  _BYTE v614[7];
  _BYTE v615[7];
  _BYTE v616[7];
  int v617;
  __int16 v618;
  _OWORD v619[7];
  uint64_t v620;
  uint64_t v621;
  char v622;
  uint64_t v623;
  __int16 v624;

  v533 = a1;
  v512 = a2;
  v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C970);
  __chkstk_darwin();
  v484 = (uint64_t)&v433 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v465 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v463 = *(_QWORD *)(v465 - 8);
  __chkstk_darwin();
  v461 = (char *)&v433 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v457 = (char *)&v433 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v509 = (char *)&v433 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v464 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v462 = *(_QWORD *)(v464 - 8);
  __chkstk_darwin();
  v460 = (uint64_t)&v433 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v455 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEF0);
  __chkstk_darwin();
  v459 = (char *)&v433 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v456 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C978);
  __chkstk_darwin();
  v466 = (uint64_t)&v433 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v458 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF00);
  __chkstk_darwin();
  v495 = (uint64_t)&v433 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v497 = (uint64_t)&v433 - v10;
  v514 = type metadata accessor for Playlist.Collaborator(0);
  v496 = *(_QWORD *)(v514 - 8);
  __chkstk_darwin();
  v467 = v11;
  v468 = (char *)&v433 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v513 = (char *)&v433 - v12;
  v13 = type metadata accessor for URL(0);
  v476 = *(_QWORD *)(v13 - 8);
  v477 = v13;
  __chkstk_darwin();
  v453 = v14;
  v454 = (char *)&v433 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v475 = (char *)&v433 - v15;
  v503 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C980);
  __chkstk_darwin();
  v505 = (uint64_t)&v433 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v486 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C988);
  __chkstk_darwin();
  v488 = (unint64_t *)((char *)&v433 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v487 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C990);
  __chkstk_darwin();
  v470 = (uint64_t)&v433 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v504 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C998);
  __chkstk_darwin();
  v489 = (void (*)(char *, char *, uint64_t))((char *)&v433 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for Collaboration.Flow.View(0);
  v499 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin();
  v500 = v21;
  v502 = (uint64_t)&v433 - ((unint64_t)(v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v501 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9A0);
  v483 = *(_QWORD *)(v501 - 8);
  __chkstk_darwin();
  v469 = (char *)&v433 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v485 = (char *)&v433 - v23;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v480 = (char *)&v433 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v494 = type metadata accessor for String.LocalizationValue(0);
  v478 = *(_QWORD *)(v494 - 8);
  __chkstk_darwin();
  v479 = (char *)&v433 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v481 = (char *)&v433 - v26;
  v450 = type metadata accessor for RoundedRectangle(0);
  v27 = __chkstk_darwin();
  v452 = (char *)&v433 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v447 = type metadata accessor for Material(0, v27);
  v445 = *(_QWORD *)(v447 - 8);
  __chkstk_darwin();
  v444 = (char *)&v433 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9A8);
  v440 = *(_QWORD *)(v30 - 8);
  v441 = v30;
  __chkstk_darwin();
  v439 = (char *)&v433 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v437 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9B0);
  __chkstk_darwin();
  v443 = (char *)&v433 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v438 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9B8);
  __chkstk_darwin();
  v446 = (char *)&v433 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v442 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9C0);
  __chkstk_darwin();
  v451 = (char *)&v433 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v448 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9C8);
  __chkstk_darwin();
  v482 = (uint64_t)&v433 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v449 = (uint64_t)&v433 - v36;
  __chkstk_darwin();
  v498 = (void (*)(char *, uint64_t))((char *)&v433 - v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C9D0);
  __chkstk_darwin();
  v537 = (uint64_t)&v433 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v40 = (char *)&v433 - v39;
  v434 = _s4FlowO18ProfileEditingViewVMa(0);
  __chkstk_darwin();
  v436 = (uint64_t *)((char *)&v433 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v508 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9D8);
  v507 = *(_QWORD *)(v508 - 8);
  __chkstk_darwin();
  v435 = (uint64_t)&v433 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C9E0);
  __chkstk_darwin();
  v531 = (uint64_t)&v433 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v538 = (uint64_t)&v433 - v44;
  v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9E8);
  v525 = *(_QWORD *)(v526 - 8);
  __chkstk_darwin();
  v524 = (char *)&v433 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v523 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9F0);
  __chkstk_darwin();
  v535 = (char *)&v433 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v534 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C9F8);
  __chkstk_darwin();
  v530 = (uint64_t)&v433 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v527 = (uint64_t)&v433 - v48;
  __chkstk_darwin();
  v536 = (uint64_t)&v433 - v49;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA00);
  v519 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin();
  v52 = (char *)&v433 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA08);
  v520 = *(_QWORD *)(v521 - 8);
  __chkstk_darwin();
  v54 = (char *)&v433 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v516 = (uint64_t)&v433 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v522 = (uint64_t)&v433 - v57;
  __chkstk_darwin();
  v59 = (char *)&v433 - v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150CA10);
  __chkstk_darwin();
  v528 = (uint64_t)&v433 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v62 = (char *)&v433 - v61;
  v517 = v20;
  object = v533 + *(int *)(v20 + 28);
  sub_5BDB8(object, (uint64_t)v59, type metadata accessor for Collaboration.Flow);
  v518 = (uint64_t *)v55;
  LODWORD(v20) = swift_getEnumCaseMultiPayload(v59, v55);
  sub_5C0DC((uint64_t)v59, type metadata accessor for Collaboration.Flow);
  v529 = v40;
  v532 = v62;
  if ((_DWORD)v20 == 1)
  {
    v63 = 1;
  }
  else
  {
    if (qword_1506350 != -1)
      swift_once(&qword_1506350, sub_E91B7C);
    v64 = qword_150C5C8;
    v567._countAndFlagsBits = swift_getKeyPath(&unk_10B1EB8);
    v567._object = (void *)v64;
    swift_retain();
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA18);
    v66 = sub_E971B0();
    View.bold(_:)(1, v65, v66);
    swift_release();
    swift_release();
    v567._countAndFlagsBits = v65;
    v567._object = (void *)v66;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v567, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    View.accessibilityHidden(_:)(1, v50, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v519 + 8))(v52, v50);
    v62 = v532;
    sub_5C090((uint64_t)v54, (uint64_t)v532, &qword_150CA08);
    v63 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v520 + 56))(v62, v63, 1, v521);
  v567._countAndFlagsBits = Collaboration.Flow.title.getter();
  v567._object = v68;
  v515 = sub_DD0BF8();
  v69 = Text.init<A>(_:)(&v567, &type metadata for String, v515);
  v71 = v70;
  v73 = v72;
  v75 = v74;
  if (qword_1506348 != -1)
    swift_once(&qword_1506348, sub_E91A80);
  v76 = qword_150C5C0;
  KeyPath = swift_getKeyPath(&unk_10B1EB8);
  v567._countAndFlagsBits = v69;
  v567._object = (void *)v71;
  LOBYTE(v568._countAndFlagsBits) = v73 & 1;
  v568._object = v75;
  LOWORD(v569._countAndFlagsBits) = 256;
  v569._object = (void *)KeyPath;
  *(_QWORD *)&v570 = v76;
  swift_retain();
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA30);
  v79 = sub_E97278();
  v80 = v524;
  View.bold(_:)(1, v78, v79);
  sub_AF8E8(v69, v71, v73 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v81 = swift_getKeyPath(&unk_10B1EE8);
  v82 = v525;
  v83 = (uint64_t)v535;
  v84 = v526;
  (*(void (**)(char *, char *, uint64_t))(v525 + 16))(v535, v80, v526);
  v85 = v83 + *(int *)(v523 + 36);
  *(_QWORD *)v85 = v81;
  *(_BYTE *)(v85 + 8) = 1;
  v86 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v80, v84);
  v87 = static Edge.Set.top.getter(v86);
  v88 = v522;
  sub_5BDB8(object, v522, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload(v88, v518) == 1)
    v89 = 24.0;
  else
    v89 = 10.0;
  v90 = sub_5C0DC(v88, type metadata accessor for Collaboration.Flow);
  v91 = EdgeInsets.init(_all:)(v90, v89);
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v98 = v527;
  sub_5C238(v83, v527, &qword_150C9F0);
  v99 = v98 + *(int *)(v534 + 36);
  *(_BYTE *)v99 = v87;
  *(double *)(v99 + 8) = v91;
  *(_QWORD *)(v99 + 16) = v93;
  *(_QWORD *)(v99 + 24) = v95;
  *(_QWORD *)(v99 + 32) = v97;
  *(_BYTE *)(v99 + 40) = 0;
  sub_56024(v83, &qword_150C9F0);
  sub_5C090(v98, v536, &qword_150C9F8);
  v100 = v517;
  v101 = *(int *)(v517 + 40);
  v102 = v533;
  v567 = Collaboration.Flow.subtitle(hasProfileEdit:)(*(_BYTE *)(v533 + v101));
  v511 = Text.init<A>(_:)(&v567, &type metadata for String, v515);
  v523 = v103;
  v105 = v104;
  v526 = v106;
  v107 = qword_150C5C0;
  v525 = swift_getKeyPath(&unk_10B1EB8);
  v524 = (char *)swift_getKeyPath(&unk_10B1EE8);
  v527 = v107;
  v108 = swift_retain();
  v535 = (char *)static Color.secondary.getter(v108);
  v534 = swift_getKeyPath(&unk_10B1E28);
  v109 = static Edge.Set.top.getter(v534);
  LODWORD(v522) = v109;
  v110 = EdgeInsets.init(_all:)(v109, 10.0);
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v510 = v105;
  v612 = v105 & 1;
  v611 = 0;
  v118 = static Edge.Set.bottom.getter(v117);
  LODWORD(v521) = v118;
  if (qword_1506340 != -1)
    v118 = swift_once(&qword_1506340, sub_E91A28);
  v119 = EdgeInsets.init(_all:)(v118, *(double *)&qword_150C5B8);
  v121 = v120;
  v123 = v122;
  v125 = v124;
  LODWORD(v519) = v612;
  LODWORD(v520) = v611;
  v613 = 0;
  v126 = *(unsigned __int8 *)(v102 + v101);
  v127 = v509;
  v128 = v508;
  v492 = v114;
  v493 = v112;
  v490 = v124;
  v491 = v116;
  if (v126 == 1 && *(_QWORD *)(v102 + *(int *)(v100 + 44)))
  {
    v129 = v102 + *(int *)(v100 + 52);
    v130 = *(_QWORD *)v129;
    v131 = *(_QWORD *)(v129 + 8);
    v132 = *(unsigned __int8 *)(v129 + 16);
    v133 = type metadata accessor for InlineProfileEditingView.Context(0);
    v134 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v135 = v133;
    v100 = v517;
    v136 = StateObject.wrappedValue.getter(v130, v131, v132, v135, v134);
    v137 = v436;
    v138 = sub_5BDB8(object, (uint64_t)v436 + *(int *)(v434 + 20), type metadata accessor for Collaboration.Flow);
    *v137 = v136;
    v139 = static Edge.Set.bottom.getter(v138);
    LOBYTE(v136) = v139;
    v140 = v110;
    v141 = v119;
    v142 = EdgeInsets.init(_all:)(v139, 12.0);
    v143 = v121;
    v145 = v144;
    v146 = v123;
    v148 = v147;
    v150 = v149;
    v151 = v435;
    sub_5BDB8((uint64_t)v137, v435, _s4FlowO18ProfileEditingViewVMa);
    v152 = v151 + *(int *)(v128 + 36);
    *(_BYTE *)v152 = v136;
    *(double *)(v152 + 8) = v142;
    *(_QWORD *)(v152 + 16) = v145;
    v119 = v141;
    v110 = v140;
    v121 = v143;
    v112 = v493;
    *(_QWORD *)(v152 + 24) = v148;
    *(_QWORD *)(v152 + 32) = v150;
    v123 = v146;
    v116 = v491;
    v114 = v492;
    v125 = v490;
    *(_BYTE *)(v152 + 40) = 0;
    sub_5C0DC((uint64_t)v137, _s4FlowO18ProfileEditingViewVMa);
    sub_5C090(v151, v538, &qword_150C9D8);
    v153 = 0;
  }
  else
  {
    v153 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v507 + 56))(v538, v153, 1, v128);
  v154 = v102 + *(int *)(v100 + 52);
  v155 = *(_QWORD *)v154;
  v156 = *(_QWORD *)(v154 + 8);
  v157 = *(unsigned __int8 *)(v154 + 16);
  v158 = type metadata accessor for InlineProfileEditingView.Context(0);
  v159 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  StateObject.wrappedValue.getter(v155, v156, v157, v158, v159);
  LODWORD(v156) = InlineProfileEditingView.Context.canValidate.getter();
  swift_release();
  v160 = v156 ^ 1;
  v161 = v516;
  sub_5BDB8(object, v516, type metadata accessor for Collaboration.Flow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v161, v518);
  if (EnumCaseMultiPayload)
  {
    v473 = v119;
    v474 = v110;
    v471 = v123;
    v472 = v121;
    if (EnumCaseMultiPayload == 1)
    {
      v518 = *(uint64_t **)(v496 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v518)(v513, v161, v514);
      sub_E791B4(v127);
      v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
      v164 = (uint64_t)v127;
      v165 = (uint64_t)v457;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v457, 7, 10, v163);
      v166 = v478;
      if (qword_1506338 != -1)
        swift_once(&qword_1506338, sub_E919C0);
      v542._countAndFlagsBits = qword_150C5B0;
      LOBYTE(v542._object) = 0;
      v543._countAndFlagsBits = qword_150C5B0;
      LOBYTE(v543._object) = 0;
      v544._countAndFlagsBits = 0;
      LOWORD(v544._object) = 257;
      v167 = v463;
      v168 = (uint64_t)v461;
      v169 = v465;
      (*(void (**)(char *, _QWORD, uint64_t))(v463 + 104))(v461, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v465);
      v170 = v460;
      static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v164, v165, (uint64_t)&v542, v168, v460);
      (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v168, v169);
      sub_5C0DC(v165, type metadata accessor for ArtworkImage.Placeholder);
      v171 = sub_56024(v164, (uint64_t *)&unk_150CEE0);
      v172 = qword_150C5B0;
      v173 = static Alignment.center.getter(v171);
      _FrameLayout.init(width:height:alignment:)(&v554, v172, 0, v172, 0, v173, v174);
      v175 = v462;
      v176 = (uint64_t)v459;
      v177 = v464;
      (*(void (**)(char *, uint64_t, uint64_t))(v462 + 16))(v459, v170, v464);
      v178 = (Swift::String *)(v176 + *(int *)(v455 + 36));
      v179 = v555;
      *v178 = v554;
      v178[1] = v179;
      v178[2] = v556;
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v170, v177);
      v180 = v466;
      sub_5C238(v176, v466, (uint64_t *)&unk_150CEF0);
      *(_WORD *)(v180 + *(int *)(v456 + 36)) = 256;
      v181 = sub_56024(v176, (uint64_t *)&unk_150CEF0);
      v182 = static Edge.Set.top.getter(v181);
      LOBYTE(v177) = v182;
      v183 = EdgeInsets.init(_all:)(v182, 8.0);
      v185 = v184;
      v187 = v186;
      v189 = v188;
      v190 = v495;
      sub_5C238(v180, v495, &qword_150C978);
      v191 = v190 + *(int *)(v458 + 36);
      *(_BYTE *)v191 = v177;
      *(double *)(v191 + 8) = v183;
      *(_QWORD *)(v191 + 16) = v185;
      *(_QWORD *)(v191 + 24) = v187;
      *(_QWORD *)(v191 + 32) = v189;
      *(_BYTE *)(v191 + 40) = 0;
      sub_56024(v180, &qword_150C978);
      sub_5C090(v190, v497, &qword_150CF00);
      v192 = v481;
      String.LocalizationValue.init(stringLiteral:)(0x65766F72707041, 0xE700000000000000);
      v193 = v479;
      v194 = v494;
      v515 = *(_QWORD *)(v166 + 16);
      ((void (*)(char *, char *, uint64_t))v515)(v479, v192, v494);
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v195 = qword_1583020;
      v196 = (id)qword_1583020;
      v197 = v480;
      static Locale.current.getter(v196);
      v509 = (char *)String.init(localized:table:bundle:locale:comment:)(v193, 0, 0, v195, v197, 0, 0, 256);
      v517 = v198;
      v498 = *(void (**)(char *, uint64_t))(v166 + 8);
      v498(v192, v194);
      v199 = v502;
      sub_5BDB8(v102, v502, type metadata accessor for Collaboration.Flow.View);
      v489 = *(void (**)(char *, char *, uint64_t))(v496 + 16);
      v200 = v496;
      v201 = v468;
      v202 = v514;
      v489(v468, v513, v514);
      v203 = *(unsigned __int8 *)(v499 + 80);
      v204 = (v203 + 16) & ~v203;
      v205 = *(unsigned __int8 *)(v200 + 80);
      v206 = (unint64_t *)((unint64_t)&v500[v205 + v204] & ~v205);
      v488 = v206;
      v500 = (char *)v206 + v467;
      v499 = v203 | v205 | 7;
      v207 = swift_allocObject(&unk_13CB720, (char *)v206 + v467, v499);
      v508 = v207;
      sub_5C04C(v199, v207 + v204, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v518)((char *)v206 + v207, v201, v202);
      LOBYTE(v566[0]) = 0;
      State.init(wrappedValue:)(&v567, v566, &type metadata for Bool);
      LODWORD(v507) = LOBYTE(v567._countAndFlagsBits);
      object = (unint64_t)v567._object;
      v516 = swift_getKeyPath(&unk_10B1F18);
      v208 = static Edge.Set.top.getter(v516);
      LODWORD(v501) = v208;
      v209 = EdgeInsets.init(_all:)(v208, 32.0);
      v211 = v210;
      v213 = v212;
      v215 = v214;
      String.LocalizationValue.init(stringLiteral:)(0x656E696C636544, 0xE700000000000000);
      v216 = v494;
      ((void (*)(char *, char *, uint64_t))v515)(v193, v192, v494);
      v217 = qword_1583020;
      static Locale.current.getter((id)qword_1583020);
      v218 = String.init(localized:table:bundle:locale:comment:)(v193, 0, 0, v217, v197, 0, 0, 256);
      v515 = v219;
      v498(v192, v216);
      sub_5BDB8(v533, v199, type metadata accessor for Collaboration.Flow.View);
      v220 = v514;
      v489(v201, v513, v514);
      v221 = swift_allocObject(&unk_13CB748, v500, v499);
      sub_5C04C(v199, v221 + v204, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v518)((char *)v488 + v221, v201, v220);
      LOBYTE(v566[0]) = 0;
      State.init(wrappedValue:)(&v567, v566, &type metadata for Bool);
      LODWORD(v502) = LOBYTE(v567._countAndFlagsBits);
      v222 = (uint64_t *)v567._object;
      v223 = swift_getKeyPath(&unk_10B1F18);
      v533 = v223;
      v224 = static Edge.Set.top.getter(v223);
      LOBYTE(v197) = v224;
      v225 = EdgeInsets.init(_all:)(v224, 8.0);
      v227 = v226;
      v229 = v228;
      v231 = v230;
      v232 = v495;
      sub_5C238(v497, v495, &qword_150CF00);
      LOBYTE(v567._countAndFlagsBits) = 0;
      v233 = v232;
      v234 = v484;
      sub_5C238(v233, v484, &qword_150CF00);
      v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA50);
      v236 = v234;
      v237 = v234 + *(int *)(v235 + 48);
      v238 = v517;
      *(_QWORD *)v237 = v509;
      *(_QWORD *)(v237 + 8) = v238;
      *(_BYTE *)(v237 + 16) = 0;
      v239 = v508;
      *(_QWORD *)(v237 + 24) = sub_E97374;
      *(_QWORD *)(v237 + 32) = v239;
      *(_BYTE *)(v237 + 40) = v507;
      v240 = v516;
      *(_QWORD *)(v237 + 48) = object;
      *(_QWORD *)(v237 + 56) = v240;
      *(_BYTE *)(v237 + 64) = 0;
      *(_BYTE *)(v237 + 72) = v501;
      *(double *)(v237 + 80) = v209;
      *(_QWORD *)(v237 + 88) = v211;
      *(_QWORD *)(v237 + 96) = v213;
      *(_QWORD *)(v237 + 104) = v215;
      *(_BYTE *)(v237 + 112) = 0;
      v241 = v236 + *(int *)(v235 + 64);
      *(_QWORD *)v241 = v218;
      *(_QWORD *)(v241 + 8) = v515;
      *(_BYTE *)(v241 + 16) = 1;
      *(_QWORD *)(v241 + 24) = sub_E9768C;
      *(_QWORD *)(v241 + 32) = v221;
      *(_BYTE *)(v241 + 40) = v502;
      *(_QWORD *)(v241 + 48) = v222;
      *(_QWORD *)(v241 + 56) = v223;
      *(_BYTE *)(v241 + 64) = 0;
      *(_BYTE *)(v241 + 72) = (_BYTE)v197;
      *(double *)(v241 + 80) = v225;
      *(_QWORD *)(v241 + 88) = v227;
      *(_QWORD *)(v241 + 96) = v229;
      *(_QWORD *)(v241 + 104) = v231;
      *(_BYTE *)(v241 + 112) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_270050(v240, 0);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v242 = v533;
      sub_270050(v533, 0);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_270050(v240, 0);
      swift_bridgeObjectRetain();
      v500 = (char *)v221;
      swift_retain();
      v518 = v222;
      swift_retain();
      sub_270050(v242, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_270154(v242, 0);
      LOBYTE(v239) = v567._countAndFlagsBits;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v243 = v516;
      sub_270154(v516, v239);
      sub_56024(v495, &qword_150CF00);
      v244 = v484;
      v245 = v505;
      sub_5C238(v484, v505, &qword_150C970);
      swift_storeEnumTagMultiPayload(v245, v503, 1);
      v246 = sub_E9773C();
      v247 = sub_5C150(&qword_150CA80, &qword_150C970, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v248 = (uint64_t)v529;
      _ConditionalContent<>.init(storage:)(v245, v504, v506, v246, v247);
      sub_56024(v244, &qword_150C970);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_270154(v533, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_270154(v243, 0);
      sub_56024(v497, &qword_150CF00);
      (*(void (**)(char *, uint64_t))(v496 + 8))(v513, v514);
    }
    else
    {
      LODWORD(v497) = v160;
      v277 = v102 + *(int *)(v517 + 20);
      v278 = *(_QWORD *)(v277 + 8);
      LOBYTE(v566[0]) = *(_BYTE *)v277;
      *((_QWORD *)&v566[0] + 1) = v278;
      v518 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
      State.projectedValue.getter(&v567, v518);
      v279 = v439;
      v280 = Toggle.init(isOn:label:)(v567._countAndFlagsBits, v567._object, LOBYTE(v568._countAndFlagsBits), sub_E8D494, 0, &type metadata for Text, &protocol witness table for Text);
      v281 = static Edge.Set.all.getter(v280);
      v282 = v281;
      v283 = EdgeInsets.init(_all:)(v281, 12.0);
      v285 = v284;
      v287 = v286;
      v289 = v288;
      v291 = v440;
      v290 = v441;
      v292 = (uint64_t)v443;
      (*(void (**)(char *, char *, uint64_t))(v440 + 16))(v443, v279, v441);
      v293 = v292 + *(int *)(v437 + 36);
      *(_BYTE *)v293 = v282;
      *(double *)(v293 + 8) = v283;
      *(_QWORD *)(v293 + 16) = v285;
      *(_QWORD *)(v293 + 24) = v287;
      *(_QWORD *)(v293 + 32) = v289;
      *(_BYTE *)(v293 + 40) = 0;
      v294 = (*(uint64_t (**)(char *, uint64_t))(v291 + 8))(v279, v290);
      v295 = v444;
      v296 = static Material.thick.getter(v294);
      v297 = static Edge.Set.all.getter(v296);
      v299 = v445;
      v298 = (uint64_t)v446;
      v300 = &v446[*(int *)(v438 + 36)];
      v301 = v447;
      (*(void (**)(char *, char *, uint64_t))(v445 + 16))(v300, v295, v447);
      v300[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150AC80) + 36)] = v297;
      sub_5C238(v292, v298, &qword_150C9B0);
      (*(void (**)(char *, uint64_t))(v299 + 8))(v295, v301);
      sub_56024(v292, &qword_150C9B0);
      v302 = v452;
      v303 = &v452[*(int *)(v450 + 20)];
      v304 = enum case for RoundedCornerStyle.continuous(_:);
      v305 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v305 - 8) + 104))(v303, v304, v305);
      __asm { FMOV            V0.2D, #16.0 }
      *v302 = _Q0;
      v311 = (uint64_t)v451;
      v312 = (uint64_t)&v451[*(int *)(v442 + 36)];
      sub_5BDB8((uint64_t)v302, v312, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v312 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CBE0) + 36)) = 256;
      sub_5C238(v298, v311, &qword_150C9B8);
      sub_5C0DC((uint64_t)v302, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v313 = sub_56024(v298, &qword_150C9B8);
      v314 = static Alignment.center.getter(v313);
      LOBYTE(v431) = 1;
      _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v619, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, v431, v314, v315);
      v316 = v449;
      sub_5C238(v311, v449, &qword_150C9C0);
      v317 = (_OWORD *)(v316 + *(int *)(v448 + 36));
      v318 = v619[5];
      v317[4] = v619[4];
      v317[5] = v318;
      v317[6] = v619[6];
      v319 = v619[1];
      *v317 = v619[0];
      v317[1] = v319;
      v320 = v619[3];
      v317[2] = v619[2];
      v317[3] = v320;
      sub_56024(v311, &qword_150C9C0);
      sub_5C090(v316, (uint64_t)v498, &qword_150C9C8);
      v321 = *(void **)(v277 + 8);
      LOBYTE(v567._countAndFlagsBits) = *(_BYTE *)v277;
      v567._object = v321;
      State.wrappedValue.getter(v566, v518);
      v323 = v478;
      v322 = v479;
      if (LOBYTE(v566[0]) == 1)
      {
        v324 = 0xD000000000000047;
        v325 = 0x800000000110E760;
        v326 = v481;
      }
      else
      {
        v325 = 0x800000000110E800;
        v326 = v481;
        v324 = 0xD00000000000003BLL;
      }
      String.LocalizationValue.init(stringLiteral:)(v324, v325);
      v327 = v494;
      (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v322, v326, v494);
      v328 = v515;
      if (qword_1505F70 != -1)
        swift_once(&qword_1505F70, sub_DB9248);
      v329 = qword_1583020;
      v330 = (id)qword_1583020;
      v331 = v480;
      static Locale.current.getter(v330);
      v332 = String.init(localized:table:bundle:locale:comment:)(v322, 0, 0, v329, v331, 0, 0, 256);
      v334 = v333;
      v335 = v533;
      (*(void (**)(char *, uint64_t))(v323 + 8))(v326, v327);
      v567._countAndFlagsBits = v332;
      v567._object = v334;
      v336 = Text.init<A>(_:)(&v567, &type metadata for String, v328);
      v338 = v337;
      v340 = v339 & 1;
      v620 = v336;
      v621 = v337;
      v622 = v339 & 1;
      v623 = v341;
      v624 = 256;
      v343 = static Alignment.leading.getter(v342);
      sub_E98F00(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v602, 0.0, 1, 0.0, 1, v343, v344);
      sub_AF8E8(v336, v338, v340);
      swift_bridgeObjectRelease();
      v345 = swift_getKeyPath(&unk_10B1EE8);
      v347 = static HierarchicalShapeStyle.secondary.getter(v346);
      LODWORD(v336) = v347;
      v348 = static Font.footnote.getter(v347);
      v349 = swift_getKeyPath(&unk_10B1EB8);
      v549 = v602[7];
      v550 = v602[8];
      v544 = (Swift::String)v602[2];
      v545 = v602[3];
      v546 = v602[4];
      v547 = v602[5];
      v548 = v602[6];
      v542 = (Swift::String)v602[0];
      v543 = (Swift::String)v602[1];
      *(_QWORD *)&v551 = v603;
      *((_QWORD *)&v551 + 1) = v345;
      LOBYTE(v552) = 0;
      *(_WORD *)((char *)&v552 + 1) = v607[0];
      BYTE3(v552) = BYTE2(v607[0]);
      DWORD1(v552) = v336;
      *((_QWORD *)&v552 + 1) = v349;
      v553 = v348;
      v350 = static Edge.Set.horizontal.getter(v349);
      LODWORD(v496) = v350;
      v351 = EdgeInsets.init(_all:)(v350, 10.0);
      v494 = v352;
      v495 = *(_QWORD *)&v351;
      v484 = v353;
      v481 = v354;
      v562 = v550;
      v563 = v551;
      v564 = v552;
      v565 = v553;
      v558 = v546;
      v559 = v547;
      v560 = v548;
      v561 = v549;
      v554 = v542;
      v555 = v543;
      v556 = v544;
      v557 = v545;
      v604[0] = 0;
      v356 = static Edge.Set.top.getter(v355);
      LODWORD(v480) = v356;
      if (qword_1506358 != -1)
        v356 = swift_once(&qword_1506358, sub_E91C74);
      v357 = EdgeInsets.init(_all:)(v356, *(double *)&qword_150C5D0);
      v359 = v358;
      v361 = v360;
      v363 = v362;
      LODWORD(v508) = v604[0];
      v605[0] = 0;
      v365 = static Edge.Set.bottom.getter(v364);
      LODWORD(v516) = v365;
      v515 = EdgeInsets.init(_all:)(v365, 24.0);
      v514 = v366;
      v513 = v367;
      v509 = v368;
      LODWORD(v507) = v605[0];
      v606[0] = 0;
      v369 = Collaboration.Flow.buttonActionTitle.getter();
      object = v370;
      v371 = v502;
      sub_5BDB8(v335, v502, type metadata accessor for Collaboration.Flow.View);
      v372 = *(unsigned __int8 *)(v499 + 80);
      v373 = (v372 + 16) & ~v372;
      v374 = v335;
      v375 = swift_allocObject(&unk_13CB7C0, &v500[v373], v372 | 7);
      sub_5C04C(v371, v375 + v373, type metadata accessor for Collaboration.Flow.View);
      LOBYTE(v566[0]) = 0;
      State.init(wrappedValue:)(&v567, v566, &type metadata for Bool);
      LOBYTE(v373) = v567._countAndFlagsBits;
      v376 = v567._object;
      v377 = swift_getKeyPath(&unk_10B1F18);
      v378 = swift_getKeyPath(&unk_10B1F48);
      v379 = swift_allocObject(&unk_13CB7E8, 17, 7);
      *(_BYTE *)(v379 + 16) = v497 & 1;
      v567._countAndFlagsBits = v369;
      v567._object = (void *)object;
      LOBYTE(v568._countAndFlagsBits) = 0;
      v568._object = sub_E97C74;
      v569._countAndFlagsBits = v375;
      LOBYTE(v569._object) = v373;
      *(_QWORD *)&v570 = v376;
      *((_QWORD *)&v570 + 1) = v377;
      LOBYTE(v571) = 0;
      *((_QWORD *)&v571 + 1) = v378;
      *(_QWORD *)&v572 = sub_1F9D48;
      *((_QWORD *)&v572 + 1) = v379;
      v380 = v374 + *(int *)(v517 + 24);
      v381 = *(_BYTE *)v380;
      v382 = *(_QWORD *)(v380 + 8);
      LOBYTE(v540[0]) = v381;
      v541 = v382;
      State.projectedValue.getter(v566, v518);
      v518 = &v433;
      v383 = v566[0];
      v384 = LOBYTE(v566[1]);
      __chkstk_darwin();
      v432 = v374;
      v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA70);
      v533 = v385;
      object = sub_E977C0();
      v386 = v485;
      View.alert(isPresented:content:)(v383, *((_QWORD *)&v383 + 1), v384, sub_E97CC0, &v430, v385, object);
      swift_release();
      swift_release();
      v387 = *((_QWORD *)&v570 + 1);
      LOBYTE(v375) = v571;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_270154(v387, v375);
      swift_release();
      swift_release();
      v388 = v482;
      sub_5C238((uint64_t)v498, v482, &qword_150C9C8);
      LOBYTE(v373) = v606[0];
      LODWORD(v518) = v606[0];
      v517 = *(_QWORD *)(v483 + 16);
      v389 = v469;
      ((void (*)(char *, char *, uint64_t))v517)(v469, v386, v501);
      v390 = v388;
      v391 = v470;
      sub_5C238(v390, v470, &qword_150C9C8);
      v392 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA90);
      v393 = (void *)(v391 + *(int *)(v392 + 48));
      v566[8] = v562;
      v566[9] = v563;
      v566[10] = v564;
      *(_QWORD *)&v566[11] = v565;
      v566[4] = v558;
      v566[5] = v559;
      v566[6] = v560;
      v566[7] = v561;
      v566[0] = v554;
      v566[1] = v555;
      v566[2] = v556;
      v566[3] = v557;
      LOBYTE(v375) = v496;
      BYTE8(v566[11]) = v496;
      *(_DWORD *)((char *)&v566[11] + 9) = v610[0];
      HIDWORD(v566[11]) = *(_DWORD *)((char *)v610 + 3);
      v395 = v494;
      v394 = v495;
      *(_QWORD *)&v566[12] = v495;
      *((_QWORD *)&v566[12] + 1) = v494;
      v396 = v484;
      v397 = v481;
      *(_QWORD *)&v566[13] = v484;
      *((_QWORD *)&v566[13] + 1) = v481;
      LOBYTE(v566[14]) = v508;
      *(_DWORD *)((char *)&v566[14] + 1) = *(_DWORD *)v615;
      DWORD1(v566[14]) = *(_DWORD *)&v615[3];
      LOBYTE(v385) = (_BYTE)v480;
      BYTE8(v566[14]) = (_BYTE)v480;
      HIDWORD(v566[14]) = *(_DWORD *)&v614[3];
      *(_DWORD *)((char *)&v566[14] + 9) = *(_DWORD *)v614;
      *(double *)&v566[15] = v357;
      *((_QWORD *)&v566[15] + 1) = v359;
      *(_QWORD *)&v566[16] = v361;
      *((_QWORD *)&v566[16] + 1) = v363;
      LOBYTE(v566[17]) = v507;
      *(_DWORD *)((char *)&v566[17] + 1) = v540[0];
      DWORD1(v566[17]) = *(_DWORD *)((char *)v540 + 3);
      BYTE8(v566[17]) = v516;
      *(_DWORD *)((char *)&v566[17] + 9) = *(_DWORD *)v616;
      HIDWORD(v566[17]) = *(_DWORD *)&v616[3];
      *(_QWORD *)&v566[18] = v515;
      *((_QWORD *)&v566[18] + 1) = v514;
      *(_QWORD *)&v566[19] = v513;
      *((_QWORD *)&v566[19] + 1) = v509;
      LOBYTE(v566[20]) = v373;
      memcpy(v393, v566, 0x141uLL);
      v398 = v391 + *(int *)(v392 + 64);
      v399 = v501;
      ((void (*)(uint64_t, char *, uint64_t))v517)(v398, v389, v501);
      sub_E97CC8((uint64_t)v566);
      sub_E97CC8((uint64_t)&v542);
      v400 = *(void (**)(char *, uint64_t))(v483 + 8);
      v400(v389, v399);
      v575 = v562;
      v576 = v563;
      v577 = v564;
      v578 = v565;
      v571 = v558;
      v572 = v559;
      v573 = v560;
      v574 = v561;
      v567 = v554;
      v568 = v555;
      v569 = v556;
      v570 = v557;
      v579 = v375;
      *(_DWORD *)v580 = v610[0];
      *(_DWORD *)&v580[3] = *(_DWORD *)((char *)v610 + 3);
      v581 = v394;
      v582 = v395;
      v583 = v396;
      v584 = v397;
      v585 = v508;
      *(_DWORD *)v586 = *(_DWORD *)v615;
      *(_DWORD *)&v586[3] = *(_DWORD *)&v615[3];
      v587 = v385;
      *(_DWORD *)&v588[3] = *(_DWORD *)&v614[3];
      *(_DWORD *)v588 = *(_DWORD *)v614;
      v589 = v357;
      v590 = v359;
      v591 = v361;
      v592 = v363;
      v593 = v507;
      *(_DWORD *)v594 = v540[0];
      *(_DWORD *)&v594[3] = *(_DWORD *)((char *)v540 + 3);
      v595 = v516;
      *(_DWORD *)v596 = *(_DWORD *)v616;
      *(_DWORD *)&v596[3] = *(_DWORD *)&v616[3];
      v597 = v515;
      v598 = v514;
      v599 = v513;
      v600 = v509;
      v601 = (char)v518;
      sub_E97D34((uint64_t)&v567);
      sub_56024(v482, &qword_150C9C8);
      v401 = v488;
      sub_5C238(v391, (uint64_t)v488, &qword_150C990);
      swift_storeEnumTagMultiPayload(v401, v486, 0);
      v402 = sub_5C150(&qword_150CA60, &qword_150C990, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v403 = (uint64_t)v489;
      _ConditionalContent<>.init(storage:)(v401, v487, v533, v402, object);
      sub_56024(v391, &qword_150C990);
      v404 = v505;
      sub_5C238(v403, v505, &qword_150C998);
      swift_storeEnumTagMultiPayload(v404, v503, 0);
      v405 = sub_E9773C();
      v406 = sub_5C150(&qword_150CA80, &qword_150C970, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v248 = (uint64_t)v529;
      _ConditionalContent<>.init(storage:)(v404, v504, v506, v405, v406);
      sub_56024(v403, &qword_150C998);
      v400(v485, v501);
      sub_E97D34((uint64_t)&v542);
      sub_56024((uint64_t)v498, &qword_150C9C8);
    }
    v119 = v473;
    v110 = v474;
    v114 = v492;
    v112 = v493;
    v125 = v490;
    v116 = v491;
    v123 = v471;
    v121 = v472;
  }
  else
  {
    v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v250 = v475;
    v251 = *(void (**)(char *, uint64_t, uint64_t))(v476 + 32);
    v252 = v476;
    v253 = v477;
    v251(v475, v161 + *(int *)(v249 + 48), v477);
    v515 = Collaboration.Flow.buttonActionTitle.getter();
    object = v254;
    v255 = v502;
    sub_5BDB8(v102, v502, type metadata accessor for Collaboration.Flow.View);
    v256 = v252;
    v257 = v454;
    (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v454, v250, v253);
    v258 = *(unsigned __int8 *)(v499 + 80);
    v259 = (v258 + 16) & ~v258;
    v260 = *(unsigned __int8 *)(v256 + 80);
    v261 = (unint64_t)&v500[v260 + v259] & ~v260;
    v262 = swift_allocObject(&unk_13CB770, v261 + v453, v258 | v260 | 7);
    sub_5C04C(v255, v262 + v259, type metadata accessor for Collaboration.Flow.View);
    v251((char *)(v262 + v261), (uint64_t)v257, v253);
    LOBYTE(v566[0]) = 0;
    State.init(wrappedValue:)(&v567, v566, &type metadata for Bool);
    LOBYTE(v257) = v567._countAndFlagsBits;
    v263 = v567._object;
    v518 = (uint64_t *)v567._object;
    v264 = swift_getKeyPath(&unk_10B1F18);
    v265 = swift_getKeyPath(&unk_10B1F48);
    v266 = swift_allocObject(&unk_13CB798, 17, 7);
    *(_BYTE *)(v266 + 16) = v160 & 1;
    v267 = v488;
    v268 = object;
    *v488 = v515;
    v267[1] = v268;
    *((_BYTE *)v267 + 16) = 0;
    v267[3] = (unint64_t)sub_E97C3C;
    v267[4] = v262;
    *((_BYTE *)v267 + 40) = (_BYTE)v257;
    v267[6] = (unint64_t)v263;
    v267[7] = v264;
    v517 = v264;
    *((_BYTE *)v267 + 64) = 0;
    v267[9] = v265;
    v267[10] = (unint64_t)sub_1F6E50;
    v533 = v265;
    v267[11] = v266;
    swift_storeEnumTagMultiPayload(v267, v486, 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_270050(v264, 0);
    swift_retain();
    swift_retain();
    v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA70);
    v270 = sub_5C150(&qword_150CA60, &qword_150C990, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v271 = sub_E977C0();
    v272 = (uint64_t)v489;
    _ConditionalContent<>.init(storage:)(v267, v487, v269, v270, v271);
    v273 = v505;
    sub_5C238(v272, v505, &qword_150C998);
    swift_storeEnumTagMultiPayload(v273, v503, 0);
    v274 = sub_E9773C();
    v275 = sub_5C150(&qword_150CA80, &qword_150C970, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v248 = (uint64_t)v529;
    _ConditionalContent<>.init(storage:)(v273, v504, v506, v274, v275);
    sub_56024(v272, &qword_150C998);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_270154(v517, 0);
    swift_release();
    v276 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v476 + 8))(v475, v477, v276);
    sub_56024(v516, &qword_150C5F0);
  }
  v407 = v528;
  sub_5C238((uint64_t)v532, v528, &qword_150CA10);
  v408 = v530;
  sub_5C238(v536, v530, &qword_150C9F8);
  v610[0] = v602[0];
  *(_DWORD *)((char *)v610 + 3) = *(_DWORD *)((char *)v602 + 3);
  v608 = v617;
  v609 = v618;
  v607[0] = v540[0];
  *(_DWORD *)((char *)v607 + 3) = *(_DWORD *)((char *)v540 + 3);
  *(_DWORD *)&v606[3] = *(_DWORD *)&v616[3];
  *(_DWORD *)v606 = *(_DWORD *)v616;
  *(_DWORD *)&v605[3] = *(_DWORD *)&v615[3];
  *(_DWORD *)v605 = *(_DWORD *)v615;
  *(_DWORD *)&v604[3] = *(_DWORD *)&v614[3];
  *(_DWORD *)v604 = *(_DWORD *)v614;
  LODWORD(object) = v613;
  v409 = v531;
  sub_5C238(v538, v531, &qword_150C9E0);
  sub_5C238(v248, v537, &qword_150C9D0);
  v410 = v512;
  sub_5C238(v407, v512, &qword_150CA10);
  v411 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150CA88);
  sub_5C238(v408, v410 + v411[12], &qword_150C9F8);
  v412 = v410 + v411[16];
  v413 = v511;
  *(_QWORD *)&v566[0] = v511;
  *((_QWORD *)&v566[0] + 1) = v523;
  LOBYTE(v566[1]) = v519;
  *(_DWORD *)((char *)&v566[1] + 1) = v602[0];
  DWORD1(v566[1]) = *(_DWORD *)((char *)v602 + 3);
  *((_QWORD *)&v566[1] + 1) = v526;
  LOWORD(v566[2]) = 256;
  *(_DWORD *)((char *)&v566[2] + 2) = v617;
  WORD3(v566[2]) = v618;
  *((_QWORD *)&v566[2] + 1) = v525;
  *(_QWORD *)&v566[3] = v527;
  *((_QWORD *)&v566[3] + 1) = v524;
  LOBYTE(v566[4]) = 1;
  *(_DWORD *)((char *)&v566[4] + 1) = v540[0];
  DWORD1(v566[4]) = *(_DWORD *)((char *)v540 + 3);
  *((_QWORD *)&v566[4] + 1) = v534;
  *(_QWORD *)&v566[5] = v535;
  BYTE8(v566[5]) = v522;
  *(_DWORD *)((char *)&v566[5] + 9) = *(_DWORD *)v616;
  HIDWORD(v566[5]) = *(_DWORD *)&v616[3];
  *(double *)&v566[6] = v110;
  *((_QWORD *)&v566[6] + 1) = v112;
  *(_QWORD *)&v566[7] = v114;
  *((_QWORD *)&v566[7] + 1) = v116;
  LOBYTE(v566[8]) = v520;
  DWORD1(v566[8]) = *(_DWORD *)&v615[3];
  *(_DWORD *)((char *)&v566[8] + 1) = *(_DWORD *)v615;
  BYTE8(v566[8]) = v521;
  HIDWORD(v566[8]) = *(_DWORD *)&v614[3];
  *(_DWORD *)((char *)&v566[8] + 9) = *(_DWORD *)v614;
  *(double *)&v566[9] = v119;
  *((_QWORD *)&v566[9] + 1) = v121;
  *(_QWORD *)&v566[10] = v123;
  *((_QWORD *)&v566[10] + 1) = v125;
  LOBYTE(v566[11]) = object;
  v415 = v566[8];
  v414 = v566[9];
  v416 = v566[10];
  *(_BYTE *)(v412 + 176) = object;
  *(_OWORD *)(v412 + 144) = v414;
  *(_OWORD *)(v412 + 160) = v416;
  v417 = v566[0];
  v418 = v566[1];
  v419 = v566[3];
  *(_OWORD *)(v412 + 32) = v566[2];
  *(_OWORD *)(v412 + 48) = v419;
  *(_OWORD *)v412 = v417;
  *(_OWORD *)(v412 + 16) = v418;
  v420 = v566[4];
  v421 = v566[5];
  v422 = v566[6];
  *(_OWORD *)(v412 + 112) = v566[7];
  *(_OWORD *)(v412 + 128) = v415;
  *(_OWORD *)(v412 + 80) = v421;
  *(_OWORD *)(v412 + 96) = v422;
  *(_OWORD *)(v412 + 64) = v420;
  sub_5C238(v409, v410 + v411[20], &qword_150C9E0);
  sub_5C238(v537, v410 + v411[24], &qword_150C9D0);
  sub_E97888((uint64_t)v566);
  LOBYTE(v411) = v510 & 1;
  v423 = v523;
  sub_AF8D8(v413, v523, v510 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  v424 = v527;
  swift_retain();
  v425 = v524;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_56024((uint64_t)v529, &qword_150C9D0);
  sub_56024(v538, &qword_150C9E0);
  sub_AF8E8(v413, v423, (char)v411);
  swift_release();
  swift_release();
  v426 = v425;
  swift_release();
  swift_release();
  v427 = v525;
  swift_release();
  v428 = v526;
  swift_bridgeObjectRelease();
  sub_56024(v536, &qword_150C9F8);
  sub_56024((uint64_t)v532, &qword_150CA10);
  sub_56024(v537, &qword_150C9D0);
  sub_56024(v531, &qword_150C9E0);
  v567._countAndFlagsBits = v413;
  v567._object = (void *)v423;
  LOBYTE(v568._countAndFlagsBits) = v519;
  *(_DWORD *)((char *)&v568._countAndFlagsBits + 1) = v610[0];
  HIDWORD(v568._countAndFlagsBits) = *(_DWORD *)((char *)v610 + 3);
  v568._object = (void *)v428;
  LOWORD(v569._countAndFlagsBits) = 256;
  *(_DWORD *)((char *)&v569._countAndFlagsBits + 2) = v608;
  HIWORD(v569._countAndFlagsBits) = v609;
  v569._object = (void *)v427;
  *(_QWORD *)&v570 = v424;
  *((_QWORD *)&v570 + 1) = v426;
  LOBYTE(v571) = 1;
  DWORD1(v571) = *(_DWORD *)((char *)v607 + 3);
  *(_DWORD *)((char *)&v571 + 1) = v607[0];
  *((_QWORD *)&v571 + 1) = v534;
  *(_QWORD *)&v572 = v535;
  BYTE8(v572) = v522;
  HIDWORD(v572) = *(_DWORD *)&v606[3];
  *(_DWORD *)((char *)&v572 + 9) = *(_DWORD *)v606;
  *(double *)&v573 = v110;
  *((_QWORD *)&v573 + 1) = v112;
  *(_QWORD *)&v574 = v114;
  *((_QWORD *)&v574 + 1) = v116;
  LOBYTE(v575) = v520;
  DWORD1(v575) = *(_DWORD *)&v605[3];
  *(_DWORD *)((char *)&v575 + 1) = *(_DWORD *)v605;
  BYTE8(v575) = v521;
  HIDWORD(v575) = *(_DWORD *)&v604[3];
  *(_DWORD *)((char *)&v575 + 9) = *(_DWORD *)v604;
  *(double *)&v576 = v119;
  *((_QWORD *)&v576 + 1) = v121;
  *(_QWORD *)&v577 = v123;
  *((_QWORD *)&v577 + 1) = v125;
  LOBYTE(v578) = object;
  sub_E97910((uint64_t)&v567);
  sub_56024(v530, &qword_150C9F8);
  return sub_56024(v528, &qword_150CA10);
}

uint64_t sub_E8D494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v20[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v20[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v20[-1] - v8;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x800000000110E840);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v10 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v3, 0, 0, 256);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  v20[0] = v11;
  v20[1] = v13;
  v14 = sub_DD0BF8();
  result = Text.init<A>(_:)(v20, &type metadata for String, v14);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v16;
  *(_BYTE *)(a1 + 16) = v17 & 1;
  *(_QWORD *)(a1 + 24) = v18;
  return result;
}

double sub_E8D630(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_5BDB8(a2, (uint64_t)v5, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor(0);
  v10 = static MainActor.shared.getter(v9);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(&unk_13CB888, v12 + v4, v11 | 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v5, v13 + v12, type metadata accessor for Collaboration.Flow.View);
  sub_E08E7C((uint64_t)v7, (uint64_t)&unk_150CAC8, v13);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E8D774()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_150CABC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_2B280C;
  return sub_E8D7DC(0);
}

uint64_t sub_E8D7DC(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;
  _QWORD *v12;

  v2[10] = v1;
  v4 = type metadata accessor for DismissAction(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA98);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Object(0);
  v2[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[17] = v8;
  v2[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[19] = type metadata accessor for MainActor(0);
  v2[20] = static MainActor.shared.getter(v9);
  type metadata accessor for Collaboration.Flow.View(0);
  if ((a1 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(dword_14FE9C4);
    v2[21] = v10;
    *v10 = v2;
    v10[1] = sub_E8D914;
    return Collaboration.Object.duplicate()();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_14FE94C);
    v2[23] = v12;
    *v12 = v2;
    v12[1] = sub_E8DB28;
    return Collaboration.Object.hasUnsupportedContent.getter();
  }
}

uint64_t sub_E8D914()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_E8E208;
  else
    v6 = sub_E8D998;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_E8D998()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(_QWORD *)(v0 + 192) = v2;
  if (*(_BYTE *)(v1 + v2[10]) == 1 && (v3 = *(int **)(v1 + v2[11])) != 0)
  {
    v4 = (uint64_t *)(v1 + v2[13]);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((unsigned __int8 *)v4 + 16);
    v8 = type metadata accessor for InlineProfileEditingView.Context(0);
    v9 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    *(_QWORD *)(v0 + 200) = v10;
    v20 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    v11 = (_QWORD *)swift_task_alloc(v3[1]);
    *(_QWORD *)(v0 + 208) = v11;
    *v11 = v0;
    v11[1] = sub_E8DF0C;
    return v20(v10);
  }
  else
  {
    v13 = v1 + v2[8];
    v14 = (char *)(v1 + v2[5]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 1);
    *(_BYTE *)(v0 + 40) = v15;
    *(_QWORD *)(v0 + 48) = v16;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
    State.wrappedValue.getter((_QWORD *)(v0 + 33), v17);
    v18 = *(_BYTE *)(v0 + 33);
    v19 = (_QWORD *)swift_task_alloc(dword_14FE9DC);
    *(_QWORD *)(v0 + 224) = v19;
    *v19 = v0;
    v19[1] = sub_E8E060;
    return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v13, (v18 & 1) == 0);
  }
}

uint64_t sub_E8DB28(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_BYTE *)(*(_QWORD *)v1 + 35) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_E8DBA0, v4, v5);
}

uint64_t sub_E8DBA0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);

  if (*(_BYTE *)(v0 + 35) == 1)
  {
    swift_release();
    v1 = sub_E98044();
    v2 = swift_allocError(&type metadata for Collaboration.Error, v1, 0, 0);
    *(_OWORD *)v3 = xmmword_10A97F0;
    *(_BYTE *)(v3 + 16) = 3;
    swift_willThrow(v2);
    *(_QWORD *)(v0 + 72) = v2;
    swift_errorRetain(v2);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
    if ((swift_dynamicCast(v0 + 16, v0 + 72, v4, &type metadata for Collaboration.Error, 0) & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 16);
      v6 = *(_QWORD *)(v0 + 24);
      v7 = *(unsigned __int8 *)(v0 + 32);
      if (v7 == 3 && v5 == 8 && !v6)
      {
        v8 = *(_QWORD *)(v0 + 80);
        swift_errorRelease(v2);
        v9 = (char *)(v8 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
        v10 = *v9;
        v11 = *((_QWORD *)v9 + 1);
        *(_BYTE *)(v0 + 56) = v10;
        *(_QWORD *)(v0 + 64) = v11;
        *(_BYTE *)(v0 + 34) = 1;
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
        State.wrappedValue.setter(v0 + 34, v12);
        swift_errorRelease(*(_QWORD *)(v0 + 72));
LABEL_13:
        v39 = *(_QWORD *)(v0 + 120);
        v40 = *(_QWORD *)(v0 + 104);
        swift_task_dealloc(*(_QWORD *)(v0 + 144));
        swift_task_dealloc(v39);
        swift_task_dealloc(v40);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      sub_7A285C(v5, v6, v7);
    }
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(uint64_t **)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    v37 = *(_QWORD *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    *v33 = v2;
    swift_storeEnumTagMultiPayload(v33, v32, 1);
    swift_errorRetain(v2);
    sub_E429D0(v34);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    v38 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(uint64_t *))(v37 + *(int *)(v38 + 48)))(v33);
    swift_errorRelease(v2);
    sub_56024((uint64_t)v33, &qword_150CA98);
    goto LABEL_13;
  }
  v13 = *(_QWORD *)(v0 + 80);
  v14 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(_QWORD *)(v0 + 192) = v14;
  if (*(_BYTE *)(v13 + v14[10]) == 1 && (v15 = *(int **)(v13 + v14[11])) != 0)
  {
    v16 = (uint64_t *)(v13 + v14[13]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((unsigned __int8 *)v16 + 16);
    v20 = type metadata accessor for InlineProfileEditingView.Context(0);
    v21 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v22 = StateObject.wrappedValue.getter(v17, v18, v19, v20, v21);
    *(_QWORD *)(v0 + 200) = v22;
    v41 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
    v23 = (_QWORD *)swift_task_alloc(v15[1]);
    *(_QWORD *)(v0 + 208) = v23;
    *v23 = v0;
    v23[1] = sub_E8DF0C;
    return v41(v22);
  }
  else
  {
    v25 = v13 + v14[8];
    v26 = (char *)(v13 + v14[5]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    *(_BYTE *)(v0 + 40) = v27;
    *(_QWORD *)(v0 + 48) = v28;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
    State.wrappedValue.getter((_QWORD *)(v0 + 33), v29);
    v30 = *(_BYTE *)(v0 + 33);
    v31 = (_QWORD *)swift_task_alloc(dword_14FE9DC);
    *(_QWORD *)(v0 + 224) = v31;
    *v31 = v0;
    v31[1] = sub_E8E060;
    return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v25, (v30 & 1) == 0);
  }
}

uint64_t sub_E8DF0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
    v6 = v5;
    v7 = sub_E8E3B8;
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 152);
    swift_release();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
    v6 = v9;
    v7 = sub_E8DFAC;
  }
  return swift_task_switch(v7, v4, v6);
}

uint64_t sub_E8DFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = v2 + *(int *)(v1 + 32);
  v4 = v2 + *(int *)(v1 + 20);
  LOBYTE(v2) = *(_BYTE *)v4;
  v5 = *(_QWORD *)(v4 + 8);
  *(_BYTE *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.getter((_QWORD *)(v0 + 33), v6);
  v7 = *(_BYTE *)(v0 + 33);
  v8 = (_QWORD *)swift_task_alloc(dword_14FE9DC);
  *(_QWORD *)(v0 + 224) = v8;
  *v8 = v0;
  v8[1] = sub_E8E060;
  return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v3, (v7 & 1) == 0);
}

uint64_t sub_E8E060()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_E8E578;
  else
    v6 = sub_E8E0E4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_E8E0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_5BDB8(v1, v4, type metadata accessor for Collaboration.Object);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  sub_E429D0(v6);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t))(v9 + *(int *)(v13 + 48)))(v4);
  sub_56024(v4, &qword_150CA98);
  sub_5C0DC(v1, type metadata accessor for Collaboration.Object);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8E208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  v1 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(unsigned __int8 *)(v0 + 32);
    if (v5 == 3 && v3 == 8 && v4 == 0)
    {
      v18 = *(_QWORD *)(v0 + 80);
      swift_errorRelease(v1);
      v19 = (char *)(v18 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      v20 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      *(_BYTE *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v21;
      *(_BYTE *)(v0 + 34) = 1;
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
      State.wrappedValue.setter(v0 + 34, v22);
      swift_errorRelease(*(_QWORD *)(v0 + 72));
      goto LABEL_11;
    }
    sub_7A285C(v3, v4, v5);
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD **)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v8, 1);
  swift_errorRetain(v1);
  sub_E429D0(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(_QWORD *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease(v1);
  sub_56024((uint64_t)v9, &qword_150CA98);
LABEL_11:
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8E3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) == 0)
    goto LABEL_7;
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(unsigned __int8 *)(v0 + 32);
  if (v5 != 3 || v3 != 8 || v4)
  {
    sub_7A285C(v3, v4, v5);
LABEL_7:
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD **)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    *v12 = v1;
    swift_storeEnumTagMultiPayload(v12, v11, 1);
    swift_errorRetain(v1);
    sub_E429D0(v13);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v17 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(_QWORD *))(v16 + *(int *)(v17 + 48)))(v12);
    swift_errorRelease(v1);
    sub_56024((uint64_t)v12, &qword_150CA98);
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(v0 + 80);
  swift_errorRelease(v1);
  v7 = (char *)(v6 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  *(_BYTE *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = v9;
  *(_BYTE *)(v0 + 34) = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v0 + 34, v10);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
LABEL_8:
  v18 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8E578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  v1 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(unsigned __int8 *)(v0 + 32);
    if (v5 == 3 && v3 == 8 && v4 == 0)
    {
      v18 = *(_QWORD *)(v0 + 80);
      swift_errorRelease(v1);
      v19 = (char *)(v18 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      v20 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      *(_BYTE *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v21;
      *(_BYTE *)(v0 + 34) = 1;
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
      State.wrappedValue.setter(v0 + 34, v22);
      swift_errorRelease(*(_QWORD *)(v0 + 72));
      goto LABEL_11;
    }
    sub_7A285C(v3, v4, v5);
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD **)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v8, 1);
  swift_errorRetain(v1);
  sub_E429D0(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(_QWORD *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease(v1);
  sub_56024((uint64_t)v9, &qword_150CA98);
LABEL_11:
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8E728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;

  v68 = a1;
  v69 = a2;
  v64 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v2 = __chkstk_darwin();
  v65 = v3;
  v66 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v2);
  __chkstk_darwin();
  v67 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v70 = (char *)&v55 - v5;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v55 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x800000000110EE40);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14(v11, v13, v8);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v15 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v71 = v16;
  v72 = v18;
  v20 = sub_DD0BF8();
  v21 = Text.init<A>(_:)(&v71, &type metadata for String, v20);
  v62 = v22;
  v63 = v21;
  v60 = v23;
  v61 = v24;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000008ELL, 0x800000000110EE70);
  v14(v11, v13, v8);
  v25 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v7, 0, 0, 256);
  v28 = v27;
  v19(v13, v8);
  v71 = v26;
  v72 = v28;
  v29 = Text.init<A>(_:)(&v71, &type metadata for String, v20);
  v58 = v30;
  v59 = v29;
  v56 = v31 & 1;
  v57 = v32;
  String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
  v14(v11, v13, v8);
  v33 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v34 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v33, v7, 0, 0, 256);
  v36 = v35;
  v19(v13, v8);
  v71 = v34;
  v72 = v36;
  v37 = Text.init<A>(_:)(&v71, &type metadata for String, v20);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = v68;
  v45 = v66;
  sub_5BDB8(v68, v66, type metadata accessor for Collaboration.Flow.View);
  v46 = *(unsigned __int8 *)(v64 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = v47 + v65;
  v49 = v46 | 7;
  v50 = swift_allocObject(&unk_13CB810, v47 + v65, v46 | 7);
  sub_5C04C(v45, v50 + v47, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.default(_:action:)(v37, v39, v43, v41, sub_E97FEC, v50);
  sub_AF8E8(v37, v39, v43);
  swift_release();
  swift_bridgeObjectRelease();
  sub_5BDB8(v44, v45, type metadata accessor for Collaboration.Flow.View);
  v51 = swift_allocObject(&unk_13CB838, v48, v49);
  sub_5C04C(v45, v51 + v47, type metadata accessor for Collaboration.Flow.View);
  v52 = v67;
  static Alert.Button.cancel(_:)(sub_E97FFC, v51, v53);
  swift_release();
  return Alert.init(title:message:primaryButton:secondaryButton:)(v63, v62, v60 & 1, v61, v59, v58, v56, v57, v70, v52);
}

double sub_E8EBD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v2 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_5BDB8(a1, (uint64_t)v4, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v2 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(&unk_13CB860, v11 + v3, v10 | 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v4, v12 + v11, type metadata accessor for Collaboration.Flow.View);
  sub_E08E7C((uint64_t)v6, (uint64_t)&unk_150CAB0, v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E8ED1C()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_150CABC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_2B41E4;
  return sub_E8D7DC(1);
}

uint64_t sub_E8ED84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for DismissAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA98);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_E98044();
  v10 = swift_allocError(&type metadata for Collaboration.Error, v9, 0, 0);
  *(_OWORD *)v11 = xmmword_10A97F0;
  *(_BYTE *)(v11 + 16) = 3;
  *v8 = v10;
  swift_storeEnumTagMultiPayload(v8, v6, 1);
  sub_E429D0((uint64_t)v5);
  DismissAction.callAsFunction()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(uint64_t *))(a1 + *(int *)(v12 + 48)))(v8);
  return sub_56024((uint64_t)v8, &qword_150CA98);
}

uint64_t sub_E8EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA98);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[10] = v11;
  v5[11] = v12;
  return swift_task_switch(sub_E8EF80, v11, v12);
}

uint64_t sub_E8EF80()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);

  v1 = v0[2];
  v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  if (*(_BYTE *)(v1 + v2[10]) == 1 && (v3 = *(int **)(v1 + v2[11])) != 0)
  {
    v4 = (uint64_t *)(v1 + v2[13]);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((unsigned __int8 *)v4 + 16);
    v8 = type metadata accessor for InlineProfileEditingView.Context(0);
    v9 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v0[13] = v10;
    v15 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    v11 = (_QWORD *)swift_task_alloc(v3[1]);
    v0[14] = v11;
    *v11 = v0;
    v11[1] = sub_E8F0C8;
    return v15(v10);
  }
  else
  {
    v13 = v1 + v2[8];
    v14 = (_QWORD *)swift_task_alloc(dword_14FEA04);
    v0[16] = v14;
    *v14 = v0;
    v14[1] = sub_E8F198;
    return Collaboration.Manager.join(_:url:)(v13, v0[3]);
  }
}

uint64_t sub_E8F0C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_E8F2E0;
  }
  else
  {
    swift_release();
    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_E8F134;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_E8F134()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2] + *(int *)(v0[12] + 32);
  v2 = (_QWORD *)swift_task_alloc(dword_14FEA04);
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_E8F198;
  return Collaboration.Manager.join(_:url:)(v1, v0[3]);
}

uint64_t sub_E8F198()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_E8F3C4;
  else
    v4 = sub_E8F1F8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_E8F1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  swift_release();
  v8 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  swift_storeEnumTagMultiPayload(v2, v3, 0);
  sub_E429D0(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t))(v7 + *(int *)(v1 + 48)))(v2);
  sub_56024(v2, &qword_150CA98);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8F2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release();
  *v3 = v1;
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  swift_errorRetain(v1);
  sub_E429D0(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(_QWORD *))(v8 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease(v1);
  sub_56024((uint64_t)v3, &qword_150CA98);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8F3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release();
  *v3 = v1;
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  swift_errorRetain(v1);
  sub_E429D0(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(_QWORD *))(v8 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease(v1);
  sub_56024((uint64_t)v3, &qword_150CA98);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8F4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA98);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CAF0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[14] = v14;
  v5[15] = v15;
  return swift_task_switch(sub_E8F5A8, v14, v15);
}

uint64_t sub_E8F5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 128) = type metadata accessor for Collaboration.Flow.View(0);
  Collaboration.Object.musicItem.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_56024(v4, &qword_150CAF0);
    v5 = sub_E98044();
    v6 = swift_allocError(&type metadata for Collaboration.Error, v5, 0, 0);
    *(_OWORD *)v7 = xmmword_1099300;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow(v6);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(uint64_t **)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    *v10 = v6;
    swift_storeEnumTagMultiPayload(v10, v9, 1);
    swift_errorRetain(v6);
    sub_E429D0(v11);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t *))(v14 + *(int *)(v8 + 48)))(v10);
    swift_errorRelease(v6);
    sub_56024((uint64_t)v10, &qword_150CA98);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v19 = (_QWORD *)swift_task_alloc(dword_14FEA14);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_E8F7A0;
    return Collaboration.Manager.moderate(_:collaborator:in:)(0, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_E8F7A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_E8F920;
  else
    v4 = sub_E8F800;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_E8F800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 16);
  swift_release();
  v10 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_storeEnumTagMultiPayload(v5, v4, 0);
  sub_E429D0(v7);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t))(v9 + *(int *)(v1 + 48)))(v5);
  sub_56024(v5, &qword_150CA98);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E8F920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD **)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 16);
  *v8 = v5;
  swift_storeEnumTagMultiPayload(v8, v7, 1);
  swift_errorRetain(v5);
  sub_E429D0(v9);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  (*(void (**)(_QWORD *))(v12 + *(int *)(v6 + 48)))(v8);
  swift_errorRelease(v5);
  sub_56024((uint64_t)v8, &qword_150CA98);
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_E8FA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a5;
  v29 = a6;
  v27 = a3;
  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_5BDB8(a2, (uint64_t)v14, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v27, v7);
  type metadata accessor for MainActor(0);
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = *(unsigned __int8 *)(v8 + 80);
  v23 = (v13 + v22 + v21) & ~v22;
  v24 = swift_allocObject(v28, v23 + v9, v20 | v22 | 7);
  *(_QWORD *)(v24 + 16) = v19;
  *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v14, v24 + v21, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v11, v7);
  sub_E08E7C((uint64_t)v16, v29, v24);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E8FBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CA98);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CAF0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[14] = v14;
  v5[15] = v15;
  return swift_task_switch(sub_E8FCFC, v14, v15);
}

uint64_t sub_E8FCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 128) = type metadata accessor for Collaboration.Flow.View(0);
  Collaboration.Object.musicItem.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_56024(v4, &qword_150CAF0);
    v5 = sub_E98044();
    v6 = swift_allocError(&type metadata for Collaboration.Error, v5, 0, 0);
    *(_OWORD *)v7 = xmmword_1099300;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow(v6);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(uint64_t **)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    *v10 = v6;
    swift_storeEnumTagMultiPayload(v10, v9, 1);
    swift_errorRetain(v6);
    sub_E429D0(v11);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t *))(v14 + *(int *)(v8 + 48)))(v10);
    swift_errorRelease(v6);
    sub_56024((uint64_t)v10, &qword_150CA98);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v19 = (_QWORD *)swift_task_alloc(dword_14FEA14);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_E8FEF4;
    return Collaboration.Manager.moderate(_:collaborator:in:)(1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_E8FEF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_E98D98;
  else
    v4 = sub_E98D9C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

id _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B8LL05SwiftD05StateVySbGvpfi_0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
  sub_E98B68();
  v1 = static ICUserIdentity.active.getter();
  v10 = 0;
  v2 = objc_msgSend(v0, "getPropertiesForUserIdentity:error:", v1, &v10);

  v3 = v10;
  if (v2)
  {
    v4 = v10;
    v5 = objc_msgSend(v2, "isU18MinorAccount");

  }
  else
  {
    v6 = v10;
    v7 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v8);
    swift_errorRelease(v7);
    return 0;
  }
  return v5;
}

uint64_t sub_E90068()
{
  uint64_t v0;

  v0 = type metadata accessor for InlineProfileEditingView.Context(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return InlineProfileEditingView.Context.init()();
}

uint64_t sub_E9009C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  return sub_E90DE0(0, &qword_150C600, (uint64_t (*)(uint64_t))sub_E8A750, a1, a2);
}

uint64_t sub_E900B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150C380);
  __chkstk_darwin();
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = Image.init(systemName:)(0x322E6E6F73726570, 0xED00006C6C69662ELL);
  static SymbolRenderingMode.hierarchical.getter(v5);
  v6 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 0, 1, v6);
  v7 = Image.symbolRenderingMode(_:)(v3, v4);
  swift_release();
  v8 = sub_56024((uint64_t)v3, &qword_150C380);
  v9 = static Color.accentColor.getter(v8);
  result = swift_getKeyPath(&unk_10B1E28);
  *a1 = v7;
  a1[1] = result;
  a1[2] = v9;
  return result;
}

uint64_t sub_E901B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  _BYTE v156[133];
  _BYTE v157[133];
  char v158;
  _BYTE v159[11];
  __int16 v160;
  char v161;
  _QWORD v162[2];
  char v163;
  _BYTE v164[7];
  uint64_t v165;
  __int16 v166;
  int v167;
  __int16 v168;
  uint64_t v169;
  char v170;
  _BYTE v171[7];
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  _BYTE v177[7];
  double v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  __n128 v185;
  char v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v152 = a2;
  v153 = a1;
  v2 = type metadata accessor for Font.Leading(0);
  v150 = *(_QWORD *)(v2 - 8);
  v151 = v2;
  __chkstk_darwin();
  v143 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F98);
  __chkstk_darwin();
  v137 = (uint64_t *)((char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA0);
  __chkstk_darwin();
  v135 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v149 - 8);
  __chkstk_darwin();
  v10 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v127 - v11;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA8);
  __chkstk_darwin();
  v131 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FB0);
  __chkstk_darwin();
  v132 = (uint64_t)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CE30);
  __chkstk_darwin();
  v134 = (uint64_t)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C928);
  __chkstk_darwin();
  v138 = (uint64_t)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C930);
  v146 = *(_QWORD *)(v17 - 8);
  v147 = v17;
  __chkstk_darwin();
  v136 = (uint64_t)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v21 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v23 = (char *)&v127 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C938);
  __chkstk_darwin();
  v155 = (uint64_t)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v26 = (char *)&v127 - v25;
  v144 = v153 + *(int *)(_s4FlowO18ProfileEditingViewVMa(0) + 20);
  sub_5BDB8(v144, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v148 = v19;
  swift_storeEnumTagMultiPayload(v21, v19, 2);
  LOBYTE(v19) = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v23, (uint64_t)v21);
  v145 = v21;
  sub_5C0DC((uint64_t)v21, type metadata accessor for Collaboration.Flow);
  sub_5C0DC((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v154 = v26;
  v141 = v8;
  v142 = v7;
  v139 = v10;
  v140 = v12;
  if ((v19 & 1) != 0)
  {
    v27 = 1;
    v29 = v150;
    v28 = v151;
    v30 = v147;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x7341206E696F4ALL, 0xE700000000000000);
    v31 = v149;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v149);
    v32 = v31;
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v33 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v34 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v33, v7, 0, 0, 256);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v32);
    v183 = v34;
    v184 = v36;
    v37 = sub_DD0BF8();
    v38 = Text.init<A>(_:)(&v183, &type metadata for String, v37);
    v40 = v39;
    v42 = v41;
    v44 = v43 & 1;
    v45 = enum case for Text.Case.uppercase(_:);
    v46 = type metadata accessor for Text.Case(0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v135, v45, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
    KeyPath = swift_getKeyPath(&unk_10B1E88);
    v50 = v137;
    sub_5C238(v48, (uint64_t)v137 + *(int *)(v133 + 28), &qword_1508FA0);
    *v50 = KeyPath;
    v51 = (uint64_t)v131;
    sub_5C238((uint64_t)v50, (uint64_t)&v131[*(int *)(v128 + 36)], &qword_1508F98);
    *(_QWORD *)v51 = v38;
    *(_QWORD *)(v51 + 8) = v40;
    *(_BYTE *)(v51 + 16) = v44;
    *(_QWORD *)(v51 + 24) = v42;
    sub_AF8D8(v38, v40, v44);
    swift_bridgeObjectRetain();
    sub_56024((uint64_t)v50, &qword_1508F98);
    sub_56024(v48, &qword_1508FA0);
    sub_AF8E8(v38, v40, v44);
    swift_bridgeObjectRelease();
    v53 = static Font.footnote.getter(v52);
    v54 = swift_getKeyPath(&unk_10B1EB8);
    v55 = v132;
    sub_5C238(v51, v132, &qword_1508FA8);
    v56 = (uint64_t *)(v55 + *(int *)(v129 + 36));
    *v56 = v54;
    v56[1] = v53;
    sub_56024(v51, &qword_1508FA8);
    v58 = static Color.secondary.getter(v57);
    v59 = swift_getKeyPath(&unk_10B1E28);
    v60 = v134;
    sub_5C238(v55, v134, &qword_1508FB0);
    v61 = (uint64_t *)(v60 + *(int *)(v130 + 36));
    *v61 = v59;
    v61[1] = v58;
    sub_56024(v55, &qword_1508FB0);
    v63 = static Alignment.leading.getter(v62);
    v64 = v138;
    sub_E990CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v138, 0.0, 1, 0.0, 1, v63, v65);
    v66 = sub_56024(v60, (uint64_t *)&unk_150CE30);
    v67 = static Edge.Set.horizontal.getter(v66);
    LOBYTE(v58) = v67;
    v68 = EdgeInsets.init(_all:)(v67, 12.0);
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v75 = v136;
    sub_5C238(v64, v136, &qword_150C928);
    v30 = v147;
    v76 = v75 + *(int *)(v147 + 36);
    *(_BYTE *)v76 = v58;
    *(double *)(v76 + 8) = v68;
    *(_QWORD *)(v76 + 16) = v70;
    *(_QWORD *)(v76 + 24) = v72;
    *(_QWORD *)(v76 + 32) = v74;
    *(_BYTE *)(v76 + 40) = 0;
    sub_56024(v64, &qword_150C928);
    v77 = v75;
    v26 = v154;
    sub_5C090(v77, (uint64_t)v154, &qword_150C930);
    v27 = 0;
    v29 = v150;
    v28 = v151;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v26, v27, 1, v30);
  swift_retain();
  sub_E9DC90(v78, &v185);
  sub_5BDB8(v144, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v79 = (uint64_t)v145;
  swift_storeEnumTagMultiPayload(v145, v148, 2);
  v80 = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v23, v79);
  sub_5C0DC(v79, type metadata accessor for Collaboration.Flow);
  sub_5C0DC((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  if ((v80 & 1) != 0)
  {
    sub_6CF040((uint64_t)v162);
    sub_5C090((uint64_t)v162, (uint64_t)&v183, &qword_150C940);
  }
  else
  {
    v81 = v140;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x800000000110EDE0);
    v82 = v141;
    v83 = v139;
    v84 = v149;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v139, v81, v149);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v85 = qword_1583020;
    v86 = (id)qword_1583020;
    v87 = v142;
    static Locale.current.getter(v86);
    v88 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v85, v87, 0, 0, 256);
    v90 = v89;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v84);
    v183 = v88;
    v184 = v90;
    v91 = sub_DD0BF8();
    v92 = Text.init<A>(_:)(&v183, &type metadata for String, v91);
    v94 = v93;
    v96 = v95;
    v153 = v97;
    v151 = swift_getKeyPath(&unk_10B1EE8);
    v98 = static Font.footnote.getter(v151);
    v99 = v143;
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v143, enum case for Font.Leading.tight(_:), v28);
    v100 = Font.leading(_:)(v99, v98);
    v101 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v99, v28, v101);
    v102 = swift_getKeyPath(&unk_10B1EB8);
    v104 = static Color.secondary.getter(v103);
    v105 = swift_getKeyPath(&unk_10B1E28);
    v106 = static Edge.Set.horizontal.getter(v105);
    LOBYTE(v99) = v106;
    v107 = EdgeInsets.init(_all:)(v106, 12.0);
    v161 = v96 & 1;
    v158 = 0;
    v162[0] = v92;
    v162[1] = v94;
    v163 = v96 & 1;
    *(_DWORD *)v164 = *(_DWORD *)v157;
    *(_DWORD *)&v164[3] = *(_DWORD *)&v157[3];
    v165 = v153;
    v166 = 256;
    v167 = *(_DWORD *)&v159[7];
    v168 = v160;
    v169 = v151;
    v170 = 1;
    *(_DWORD *)&v171[3] = *(_DWORD *)&v156[3];
    *(_DWORD *)v171 = *(_DWORD *)v156;
    v172 = v102;
    v173 = v100;
    v174 = v105;
    v175 = v104;
    v176 = (char)v99;
    *(_DWORD *)&v177[3] = *(_DWORD *)&v159[3];
    *(_DWORD *)v177 = *(_DWORD *)v159;
    v178 = v107;
    v179 = v108;
    v180 = v109;
    v181 = v110;
    v182 = 0;
    UIScreen.Dimensions.size.getter(v107);
    sub_5C090((uint64_t)v162, (uint64_t)&v183, &qword_150C940);
    v26 = v154;
  }
  v111 = v155;
  sub_5C238((uint64_t)v26, v155, &qword_150C938);
  v112 = v185.n128_u64[1];
  v113 = v186;
  v114 = v187;
  v115 = v188;
  v116 = v189;
  v117 = v190;
  v118 = v192;
  v153 = v191;
  v119 = v194;
  v149 = v193;
  v150 = v185.n128_u64[0];
  sub_5C090((uint64_t)&v183, (uint64_t)v156, &qword_150C940);
  v120 = v111;
  v121 = v152;
  sub_5C238(v120, v152, &qword_150C938);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C948);
  v123 = v121 + *(int *)(v122 + 48);
  *(_QWORD *)v123 = v150;
  *(_QWORD *)(v123 + 8) = v112;
  v151 = v112;
  *(_BYTE *)(v123 + 16) = v113 & 1;
  *(_QWORD *)(v123 + 24) = v114;
  *(_BYTE *)(v123 + 32) = v115 & 1;
  *(_QWORD *)(v123 + 40) = v116;
  *(_BYTE *)(v123 + 48) = v117 & 1;
  *(_QWORD *)(v123 + 56) = v153;
  *(_QWORD *)(v123 + 64) = v118;
  v124 = (void *)v149;
  *(_QWORD *)(v123 + 72) = v149;
  *(_QWORD *)(v123 + 80) = v119;
  v125 = v121 + *(int *)(v122 + 64);
  sub_5C090((uint64_t)v156, (uint64_t)v157, &qword_150C940);
  sub_5C090((uint64_t)v157, v125, &qword_150C940);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1F89EC(v118, v124);
  swift_retain();
  sub_6CEB50((uint64_t)v157, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_E970C0);
  sub_56024((uint64_t)v154, &qword_150C938);
  sub_5C090((uint64_t)v156, (uint64_t)v162, &qword_150C940);
  sub_6CEB50((uint64_t)v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_E97138);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_2B7A2C(v118, v124);
  swift_release();
  return sub_56024(v155, &qword_150C938);
}

uint64_t sub_E90DC8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  return sub_E90DE0(0x4018000000000000, &qword_150C920, (uint64_t (*)(uint64_t))sub_E901B4, a1, a2);
}

uint64_t sub_E90DE0@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v5;

  *(_QWORD *)a4 = static HorizontalAlignment.center.getter(a5);
  *(_QWORD *)(a4 + 8) = a1;
  *(_BYTE *)(a4 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  return a3(v5);
}

uint64_t sub_E90E3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  __n128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  char *v45;
  double v46;
  double *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double *v79;
  uint64_t v80;
  uint64_t v81;
  char v82[16];
  uint64_t v83;
  _OWORD v84[7];

  v2 = v1;
  v81 = a1;
  v73 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v79 = (double *)((char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8A0);
  __chkstk_darwin();
  v80 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CE20);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C8A8);
  __chkstk_darwin();
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8B0);
  __chkstk_darwin();
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8B8);
  __chkstk_darwin();
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8C0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin();
  v75 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8C8);
  __chkstk_darwin();
  v74 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_13CB6F8, 81, 7);
  v19 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v2 + 64);
  v20 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v18 + 32) = v20;
  v83 = v2;
  sub_E96D14(v2);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8D0);
  v22 = sub_E96D78();
  v24 = Button.init(action:label:)(sub_E96D04, v18, sub_E96D0C, v82, v21, v22, v23);
  v25 = static Alignment.center.getter(v24);
  v27 = sub_E99124(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v25, v26);
  v28 = (*(uint64_t (**)(char *, uint64_t, double))(v6 + 8))(v8, v5, v27);
  v30 = *(_BYTE *)(v2 + 16);
  if ((v30 & 1) != 0)
    v31 = static Color.accentColor.getter(v28);
  else
    v31 = static Color.white.getter(v29);
  v32 = v31;
  KeyPath = swift_getKeyPath(&unk_10B1E28);
  sub_5C238((uint64_t)v10, (uint64_t)v13, &qword_150C8A8);
  v34 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v34 = KeyPath;
  v34[1] = v32;
  v35 = sub_56024((uint64_t)v10, &qword_150C8A8);
  if (qword_1506328 != -1)
    v35 = swift_once(&qword_1506328, sub_E918B0);
  v36 = qword_150C5A0;
  v37 = static Alignment.center.getter(v35);
  LOBYTE(v69) = 1;
  LOBYTE(v68) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v84, 0, 1, 0, 1, 0, 1, v36, 0, 0, v68, 0, v69, v37, v38);
  sub_5C238((uint64_t)v13, (uint64_t)v15, &qword_150C8B0);
  v39 = v71;
  v40 = &v15[*(int *)(v71 + 36)];
  v41 = v84[5];
  *((_OWORD *)v40 + 4) = v84[4];
  *((_OWORD *)v40 + 5) = v41;
  *((_OWORD *)v40 + 6) = v84[6];
  v42 = v84[1];
  *(_OWORD *)v40 = v84[0];
  *((_OWORD *)v40 + 1) = v42;
  v43 = v84[3];
  *((_OWORD *)v40 + 2) = v84[2];
  *((_OWORD *)v40 + 3) = v43;
  sub_56024((uint64_t)v13, &qword_150C8B0);
  v44 = sub_E96EA0();
  v45 = v75;
  View.bold(_:)(1, v39, v44);
  sub_56024((uint64_t)v15, &qword_150C8B8);
  v46 = *(double *)&qword_150C5A0 * 0.5;
  v47 = v79;
  v48 = (char *)v79 + *(int *)(v73 + 20);
  v49 = enum case for RoundedCornerStyle.continuous(_:);
  v50 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v48, v49, v50);
  *v47 = v46;
  v47[1] = v46;
  v51 = *(_QWORD *)(v2 + 56);
  LOBYTE(v49) = *(_BYTE *)(v2 + 64);
  sub_270050(v51, v49);
  LOBYTE(v39) = sub_E42E20(v51, v49);
  v52 = sub_270154(v51, v49);
  if ((v39 & 1) != 0)
  {
    if ((v30 & 1) != 0)
      v53 = static Color.clear.getter(v52);
    else
      v53 = static Color.accentColor.getter(v52);
  }
  else
  {
    v54 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    v53 = Color.init(_:)(v54);
  }
  v55 = v53;
  v56 = v80;
  sub_5BDB8((uint64_t)v47, v80, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v57 = v78;
  *(_QWORD *)(v56 + *(int *)(v78 + 52)) = v55;
  *(_WORD *)(v56 + *(int *)(v57 + 56)) = 256;
  v58 = sub_5C0DC((uint64_t)v47, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v59 = static Alignment.center.getter(v58);
  v61 = v60;
  v62 = (uint64_t)v74;
  v63 = (uint64_t)&v74[*(int *)(v72 + 36)];
  sub_5C238(v56, v63, &qword_150C8A0);
  v64 = (uint64_t *)(v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C910) + 36));
  *v64 = v59;
  v64[1] = v61;
  v65 = v76;
  v66 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v62, v45, v77);
  sub_56024(v56, &qword_150C8A0);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v66);
  return sub_5C090(v62, v81, &qword_150C8C8);
}

uint64_t sub_E914DC(uint64_t a1)
{
  uint64_t v2;
  char v4;
  __int128 v5;

  v5 = *(_OWORD *)(a1 + 40);
  v4 = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(&v4, v2);
  return (*(uint64_t (**)(uint64_t))(a1 + 24))(a1);
}

uint64_t sub_E91538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[10];

  v45[1] = a2;
  v45[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_150C918);
  __chkstk_darwin();
  v4 = (_OWORD *)((char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBC8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C8E8);
  __chkstk_darwin();
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v45 - v11;
  v56[0] = *(_OWORD *)(a1 + 40);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  v14 = State.wrappedValue.getter(&v47, v13);
  if (v47 == 1)
  {
    ProgressView<>.init<>()(v14);
    v16 = static Color.white.getter(v15);
    KeyPath = swift_getKeyPath(&unk_10B1E58);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
    v18 = (uint64_t *)&v10[*(int *)(v46 + 36)];
    *v18 = KeyPath;
    v18[1] = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_5C090((uint64_t)v10, (uint64_t)v12, &qword_150C8E8);
    sub_5C238((uint64_t)v12, (uint64_t)v4, &qword_150C8E8);
    swift_storeEnumTagMultiPayload(v4, v45[0], 0);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C110);
    v20 = sub_E96DFC();
    v21 = sub_E97314(&qword_150C108, &qword_150C110);
    _ConditionalContent<>.init(storage:)(v4, v46, v19, v20, v21);
    return sub_56024((uint64_t)v12, &qword_150C8E8);
  }
  else
  {
    v23 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v56[0] = *(_QWORD *)a1;
    *((_QWORD *)&v56[0] + 1) = v23;
    v24 = sub_DD0BF8();
    swift_bridgeObjectRetain();
    v25 = Text.init<A>(_:)(v56, &type metadata for String, v24);
    v27 = v26;
    v29 = v28;
    v31 = v30 & 1;
    v32 = static Alignment.center.getter(v25);
    sub_9C0B6C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v47, 0.0, 1, 0.0, 1, v32, v33, v25, v27, v31, v29);
    sub_AF8E8(v25, v27, v31);
    swift_bridgeObjectRelease();
    v34 = v54;
    v56[6] = v53;
    v56[7] = v54;
    v35 = v55;
    v56[8] = v55;
    v36 = v49;
    v37 = v50;
    v56[2] = v49;
    v56[3] = v50;
    v39 = v51;
    v38 = v52;
    v56[4] = v51;
    v56[5] = v52;
    v41 = v47;
    v40 = v48;
    v56[0] = v47;
    v56[1] = v48;
    v4[6] = v53;
    v4[7] = v34;
    v4[8] = v35;
    v4[2] = v36;
    v4[3] = v37;
    v4[4] = v39;
    v4[5] = v38;
    *v4 = v41;
    v4[1] = v40;
    swift_storeEnumTagMultiPayload(v4, v45[0], 1);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C110);
    v43 = sub_E96DFC();
    v44 = sub_E97314(&qword_150C108, &qword_150C110);
    return _ConditionalContent<>.init(storage:)(v4, v46, v42, v43, v44);
  }
}

void sub_E918B0()
{
  id v0;
  char *v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = (char *)objc_msgSend(v0, "userInterfaceIdiom");

  v2 = 50.0;
  if (v1 == (_BYTE *)&dword_4 + 2)
    v2 = 44.0;
  qword_150C5A0 = *(_QWORD *)&v2;
}

uint64_t sub_E91920@<X0>(uint64_t a1@<X8>)
{
  return sub_E90E3C(a1);
}

void sub_E91960()
{
  id v0;
  char *v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = (char *)objc_msgSend(v0, "userInterfaceIdiom");

  byte_150C5A8 = v1 == (_BYTE *)&dword_4 + 2;
}

uint64_t sub_E919C0()
{
  double v0;
  uint64_t result;

  if (qword_1506330 != -1)
    result = swift_once(&qword_1506330, sub_E91960);
  v0 = 180.0;
  if (byte_150C5A8)
    v0 = 140.0;
  qword_150C5B0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E91A28()
{
  double v0;
  uint64_t result;

  if (qword_1506330 != -1)
    result = swift_once(&qword_1506330, sub_E91960);
  v0 = 24.0;
  if (byte_150C5A8)
    v0 = 16.0;
  qword_150C5B8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_E91A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1506330 != -1)
    v2 = swift_once(&qword_1506330, sub_E91960);
  if (byte_150C5A8 == 1)
  {
    result = static Font.subheadline.getter(v2);
    v6 = result;
  }
  else
  {
    v7 = static Font.body.getter(v2);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for Font.Leading.tight(_:), v0);
    v6 = Font.leading(_:)(v4, v7);
    v8 = swift_release();
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v8);
  }
  qword_150C5C0 = v6;
  return result;
}

uint64_t sub_E91B7C()
{
  uint64_t v0;
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1509DD8);
  __chkstk_darwin();
  v1 = (char *)&v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1506330 != -1)
    swift_once(&qword_1506330, sub_E91960);
  if (byte_150C5A8)
    v2 = 58.0;
  else
    v2 = 52.0;
  v3 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = static Font.system(size:weight:design:)(0, 1, v1, v2);
  result = sub_56024((uint64_t)v1, &qword_1509DD8);
  qword_150C5C8 = v4;
  return result;
}

uint64_t sub_E91C74()
{
  double v0;
  uint64_t result;

  if (qword_1506330 != -1)
    result = swift_once(&qword_1506330, sub_E91960);
  v0 = 6.0;
  if (byte_150C5A8)
    v0 = 9.0;
  qword_150C5D0 = *(_QWORD *)&v0;
  return result;
}

uint64_t ICMusicUserProfile.collaborator.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v36 = a1;
  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = type metadata accessor for Artwork(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v35 = v12;
  v34(v11, 1, 1);
  v13 = objc_msgSend(v2, "artworkInfo");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "responseDictionary");

    if (v15)
    {
      v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v17 = sub_E91F7C(v16);
      v18 = swift_bridgeObjectRelease(v16);
      if (v17)
      {
        Artwork.init(_:)(v17, v18);
        sub_56024((uint64_t)v11, (uint64_t *)&unk_150CB40);
        sub_5C090((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_150CB40);
      }
    }
  }
  v19 = objc_msgSend(v2, "name");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = objc_msgSend(v2, "handle");
  if (v22)
  {
    v23 = v22;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  sub_5C238((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_150CB40);
  v27 = objc_msgSend(v2, "collaborationAllowed");
  v28 = (uint64_t)v8;
  v29 = v3;
  v30 = (uint64_t)v5 + *(int *)(v3 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v30, 1, 1, v35);
  v31 = *(int *)(v29 + 28);
  *((_BYTE *)v5 + v31) = 0;
  *v5 = v33;
  v5[1] = v21;
  v5[2] = v24;
  v5[3] = v26;
  sub_E8931C(v28, v30);
  *((_BYTE *)v5 + v31) = v27;
  sub_5C04C((uint64_t)v5, v36, type metadata accessor for Collaboration.Flow.Collaborator);
  return sub_56024((uint64_t)v11, (uint64_t *)&unk_150CB40);
}

unint64_t sub_E91F7C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_150C950);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v8 << 6);
      v13 = v8;
    }
    else
    {
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v14 >= v25)
      {
LABEL_33:
        sub_55D68(a1);
        return (unint64_t)v3;
      }
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v13 = v8 + 1;
      if (!v15)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v13);
          if (!v15)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v13);
            if (!v15)
            {
              v16 = v8 + 5;
              if (v8 + 5 >= v25)
                goto LABEL_33;
              v15 = *(_QWORD *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_38;
                  if (v13 >= v25)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v26 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_138F24(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v37);
    sub_95094(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_138F24((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_56024((uint64_t)v34, &qword_150C958);
      swift_bridgeObjectRelease(v28);
      sub_55D68(a1);
      swift_release(v3);
      return 0;
    }
    v17 = v27;
    v18 = v28;
    sub_95094((uint64_t)v35 + 8, (uint64_t)v29);
    sub_56024((uint64_t)v34, &qword_150C958);
    sub_50CA4(v29, v30);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    sub_50CA4(v30, v32);
    v19 = v31;
    sub_50CA4(v32, v33);
    sub_50CA4(v33, &v31);
    result = sub_21BAD0(v19, *((uint64_t *)&v19 + 1));
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v9 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      *(_OWORD *)v9 = v19;
      v10 = (_QWORD *)(v3[7] + 32 * v20);
      __swift_destroy_boxed_opaque_existential_1(v10);
      result = (unint64_t)sub_50CA4(&v31, v10);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v19;
    result = (unint64_t)sub_50CA4(&v31, (_OWORD *)(v3[7] + 32 * result));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v3[2] = v24;
LABEL_8:
    v8 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  char v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  int v38;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(uint64_t, uint64_t);
  _QWORD *v53;
  char v54;
  char v55;
  void (*v56)(uint64_t, uint64_t);
  char v57;
  _BYTE v58[12];
  int v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;

  v70 = (_BYTE *)a1;
  v71 = (_BYTE *)a2;
  v2 = type metadata accessor for Playlist.Collaborator(0);
  v66 = *(_BYTE **)(v2 - 8);
  v67 = (_BYTE *)v2;
  __chkstk_darwin();
  v65 = &v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin();
  v60 = &v58[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C960);
  __chkstk_darwin();
  v64 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  v69 = v8;
  __chkstk_darwin();
  v10 = &v58[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v12 = &v58[-v11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
  __chkstk_darwin();
  v14 = &v58[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v16 = &v58[-v15];
  v17 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v21 = &v58[-v20];
  __swift_instantiateConcreteTypeFromMangledName(&qword_150C968);
  __chkstk_darwin();
  v23 = &v58[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = (uint64_t)&v23[*(int *)(v24 + 48)];
  sub_5BDB8((uint64_t)v70, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  sub_5BDB8((uint64_t)v71, v25, type metadata accessor for Collaboration.Flow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v17);
  if (!EnumCaseMultiPayload)
  {
    v66 = v14;
    v67 = v16;
    v70 = v10;
    v71 = v12;
    v33 = v68;
    v32 = v69;
    sub_5BDB8((uint64_t)v23, (uint64_t)v21, type metadata accessor for Collaboration.Flow);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v35 = *(int *)(v34 + 48);
    v36 = &v21[v35];
    v37 = *(int *)(v34 + 64);
    v38 = v21[v37];
    if (swift_getEnumCaseMultiPayload(v25, v17))
    {
      (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(&v21[v35], v33);
      sub_56024((uint64_t)v21, &qword_150C5F0);
LABEL_10:
      sub_56024((uint64_t)v23, &qword_150C968);
LABEL_11:
      v30 = 0;
      return v30 & 1;
    }
    LODWORD(v65) = v38;
    v40 = (_BYTE *)(v25 + v35);
    v59 = *(unsigned __int8 *)(v25 + v37);
    v41 = (uint64_t)v67;
    sub_5C090(v25, (uint64_t)v67, &qword_150C5F0);
    v42 = v32;
    v43 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v32 + 32);
    v44 = v33;
    v43(v71, v36, v33);
    v45 = (uint64_t)v70;
    v43(v70, v40, v44);
    v46 = v64;
    v47 = (uint64_t)&v64[*(int *)(v61 + 48)];
    sub_5C090((uint64_t)v21, (uint64_t)v64, &qword_150C5F0);
    sub_5C238(v41, v47, &qword_150C5F0);
    v48 = v63;
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
    if (v49((uint64_t)v46, 1, v63) == 1)
    {
      if (v49(v47, 1, v48) == 1)
      {
        sub_56024((uint64_t)v46, &qword_150C5F0);
        v50 = (uint64_t)v71;
        goto LABEL_21;
      }
    }
    else
    {
      v51 = v66;
      sub_5C238((uint64_t)v46, (uint64_t)v66, &qword_150C5F0);
      if (v49(v47, 1, v48) != 1)
      {
        v53 = v60;
        sub_5C04C(v47, (uint64_t)v60, type metadata accessor for Collaboration.Flow.Collaborator);
        v54 = _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(v51, v53);
        sub_5C0DC((uint64_t)v53, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_5C0DC((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_56024((uint64_t)v46, &qword_150C5F0);
        v50 = (uint64_t)v71;
        if ((v54 & 1) != 0)
        {
LABEL_21:
          v55 = static URL.== infix(_:_:)(v50, v45);
          v56 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
          v56(v45, v44);
          v56(v50, v44);
          sub_56024(v41, &qword_150C5F0);
          if ((v55 & 1) != 0)
          {
            v57 = v65 ^ v59;
            sub_5C0DC((uint64_t)v23, type metadata accessor for Collaboration.Flow);
            v30 = v57 ^ 1;
            return v30 & 1;
          }
          goto LABEL_23;
        }
LABEL_19:
        v52 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
        v52(v45, v44);
        v52(v50, v44);
        sub_56024(v41, &qword_150C5F0);
LABEL_23:
        sub_5C0DC((uint64_t)v23, type metadata accessor for Collaboration.Flow);
        goto LABEL_11;
      }
      sub_5C0DC((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
    }
    sub_56024((uint64_t)v46, &qword_150C960);
    v50 = (uint64_t)v71;
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload(v25, v17) == 2)
    {
      sub_5C0DC((uint64_t)v23, type metadata accessor for Collaboration.Flow);
      v30 = 1;
      return v30 & 1;
    }
    goto LABEL_10;
  }
  sub_5BDB8((uint64_t)v23, (uint64_t)v19, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload(v25, v17) != 1)
  {
    (*((void (**)(_BYTE *, _BYTE *))v66 + 1))(v19, v67);
    goto LABEL_10;
  }
  v28 = v65;
  v27 = (uint64_t)v66;
  v29 = (uint64_t)v67;
  (*((void (**)(_BYTE *, uint64_t, _BYTE *))v66 + 4))(v65, v25, v67);
  v30 = static Playlist.Collaborator.== infix(_:_:)(v19, v28);
  v31 = *(void (**)(_BYTE *, uint64_t))(v27 + 8);
  v31(v28, v29);
  v31(v19, v29);
  sub_5C0DC((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  return v30 & 1;
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507568);
  __chkstk_darwin();
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v14 = &v37[-v13];
  __chkstk_darwin();
  v16 = &v37[-v15];
  v17 = a1[1];
  v18 = a2[1];
  if (*a1 == *a2 && v17 == v18
    || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v17, *a2, v18, 0), v20 = 0, (v19 & 1) != 0))
  {
    v21 = a1[3];
    v22 = a2[3];
    if (v21)
    {
      if (!v22)
        goto LABEL_19;
      v23 = a1[2];
      v24 = a2[2];
      if (v23 != v24 || v21 != v22)
      {
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v21, v24, v22, 0);
        v20 = 0;
        if ((v25 & 1) == 0)
          return v20 & 1;
      }
    }
    else if (v22)
    {
      goto LABEL_19;
    }
    v41 = v12;
    v39 = v7;
    v26 = v5;
    v27 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    sub_5C238((uint64_t)a1 + *(int *)(v27 + 24), (uint64_t)v16, (uint64_t *)&unk_150CB40);
    v40 = v27;
    v28 = *(int *)(v27 + 24);
    v29 = v26;
    sub_5C238((uint64_t)a2 + v28, (uint64_t)v14, (uint64_t *)&unk_150CB40);
    v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_5C238((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_150CB40);
    sub_5C238((uint64_t)v14, v30, (uint64_t *)&unk_150CB40);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v31((uint64_t)v10, 1, v4) == 1)
    {
      sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
      sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
      if (v31(v30, 1, v4) == 1)
      {
        sub_56024((uint64_t)v10, (uint64_t *)&unk_150CB40);
LABEL_18:
        v20 = *((_BYTE *)a1 + *(int *)(v40 + 28)) ^ *((_BYTE *)a2 + *(int *)(v40 + 28)) ^ 1;
        return v20 & 1;
      }
      goto LABEL_16;
    }
    v32 = (uint64_t)v41;
    sub_5C238((uint64_t)v10, (uint64_t)v41, (uint64_t *)&unk_150CB40);
    if (v31(v30, 1, v4) == 1)
    {
      sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
      sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v4);
LABEL_16:
      sub_56024((uint64_t)v10, &qword_1507568);
      goto LABEL_19;
    }
    v33 = v39;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 32))(v39, v30, v4);
    v34 = sub_4DD24(&qword_150BF70, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v38 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v4, v34);
    v35 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
    v35(v33, v4);
    sub_56024((uint64_t)v14, (uint64_t *)&unk_150CB40);
    sub_56024((uint64_t)v16, (uint64_t *)&unk_150CB40);
    v35((_BYTE *)v32, v4);
    sub_56024((uint64_t)v10, (uint64_t *)&unk_150CB40);
    if ((v38 & 1) != 0)
      goto LABEL_18;
LABEL_19:
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t type metadata accessor for Collaboration.Flow(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150C678, (uint64_t)&nominal type descriptor for Collaboration.Flow);
}

unint64_t sub_E92D04()
{
  unint64_t result;

  result = qword_150C5E0;
  if (!qword_150C5E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_150C5E0);
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.View(uint64_t a1)
{
  return sub_6345C(a1, qword_150C7A8, (uint64_t)&nominal type descriptor for Collaboration.Flow.View);
}

uint64_t sub_E92D60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Collaboration.Flow.View.body>>, 1);
}

uint64_t *_s4FlowOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        v19 = *(int *)(v9 + 24);
        __dst = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v21 - 8);
        v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22(v20, 1, v21))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v21);
        }
        *((_BYTE *)a1 + *(int *)(v9 + 28)) = *((_BYTE *)a2 + *(int *)(v9 + 28));
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)a1 + *(int *)(v24 + 64)) = *((_BYTE *)a2 + *(int *)(v24 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s4FlowOwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v8 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v2 + *(int *)(v4 + 24);
      v6 = type metadata accessor for Artwork(0);
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    v2 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v8 = type metadata accessor for URL(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v2, v8);
}

_QWORD *_s4FlowOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v16;
      v17 = (char *)a2 + v16;
      v18 = type metadata accessor for Artwork(0);
      v27 = *(_QWORD *)(v18 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v18);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v22 = *(int *)(v21 + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *_s4FlowOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *__dst;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v14 = *(int *)(v7 + 24);
        __dst = (char *)a1 + v14;
        v15 = (char *)a2 + v14;
        v16 = type metadata accessor for Artwork(0);
        v25 = *(_QWORD *)(v16 - 8);
        v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17(v15, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v15, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v16);
        }
        *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v20 = *(int *)(v19 + 48);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      *((_BYTE *)a1 + *(int *)(v19 + 64)) = *((_BYTE *)a2 + *(int *)(v19 + 64));
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s4FlowOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = *(int *)(v7 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for Artwork(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v22 = *(int *)(v21 + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s4FlowOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        v15 = *(int *)(v7 + 24);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for Artwork(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v22 = *(int *)(v21 + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_E93948(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v10[32];
  _QWORD v11[2];

  sub_1D1B7C(319, (unint64_t *)&unk_150C688, type metadata accessor for Collaboration.Flow.Collaborator, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v5 = type metadata accessor for URL(319);
    if (v6 > 0x3F)
    {
      return v5;
    }
    else
    {
      swift_getTupleTypeLayout3(v10, *(_QWORD *)(v3 - 8) + 64, *(_QWORD *)(v5 - 8) + 64, &unk_10B1C88);
      v11[0] = v10;
      v7 = type metadata accessor for Playlist.Collaborator(319);
      v3 = v7;
      if (v8 <= 0x3F)
      {
        v11[1] = *(_QWORD *)(v7 - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 2, v11);
        return 0;
      }
    }
  }
  return v3;
}

_QWORD *_s4FlowO12CollaboratorVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Artwork(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t _s4FlowO12CollaboratorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *_s4FlowO12CollaboratorVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s4FlowO12CollaboratorVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *_s4FlowO12CollaboratorVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s4FlowO12CollaboratorVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s4FlowO12CollaboratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E94040);
}

uint64_t sub_E94040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t _s4FlowO12CollaboratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E940CC);
}

uint64_t sub_E940CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_E94144(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10B1CB0;
  v4[1] = &unk_10B1CC8;
  sub_1D1B7C(319, &qword_150A400, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_10B1C88;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

_QWORD *_s4FlowO4ViewVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = a1;
    v10 = v7;
    v11 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v9 = a1;
    v10 = v7;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  v13 = a3[5];
  v14 = a3[6];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = (char *)a1 + v14;
  v18 = (char *)a2 + v14;
  *v17 = *v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v22);
  if (EnumCaseMultiPayload == 1)
  {
    v27 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v20, v21, v27);
    v28 = v20;
    v29 = v22;
    v30 = 1;
LABEL_17:
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    v24 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v71 = v25;
      v31 = v21[1];
      *v20 = *v21;
      v20[1] = v31;
      v32 = v21[3];
      v20[2] = v21[2];
      v20[3] = v32;
      v33 = *(int *)(v24 + 24);
      __dst = (char *)v20 + v33;
      v70 = (char *)v21 + v33;
      v34 = type metadata accessor for Artwork(0);
      v68 = *(_QWORD *)(v34 - 8);
      v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v69(v70, 1, v34))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(__dst, v70, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v34);
      }
      *((_BYTE *)v20 + *(int *)(v24 + 28)) = *((_BYTE *)v21 + *(int *)(v24 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v20, 0, 1, v24);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v37 = *(int *)(v36 + 48);
    v38 = (char *)v20 + v37;
    v39 = (char *)v21 + v37;
    v40 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    *((_BYTE *)v20 + *(int *)(v36 + 64)) = *((_BYTE *)v21 + *(int *)(v36 + 64));
    v28 = v20;
    v29 = v22;
    v30 = 0;
    goto LABEL_17;
  }
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_18:
  v41 = a3[8];
  v42 = (void **)((char *)a1 + v41);
  v43 = (void **)((char *)a2 + v41);
  v44 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
  {
    v45 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
    v46 = v42;
    v47 = v44;
    v48 = 1;
  }
  else
  {
    v49 = *v43;
    *v42 = *v43;
    v50 = v49;
    v46 = v42;
    v47 = v44;
    v48 = 0;
  }
  swift_storeEnumTagMultiPayload(v46, v47, v48);
  v51 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v51) = *((_BYTE *)a2 + v51);
  v52 = a3[11];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (char *)a2 + v52;
  v55 = *(_QWORD *)((char *)a2 + v52);
  swift_retain();
  if (v55)
  {
    v56 = *((_QWORD *)v54 + 1);
    *v53 = v55;
    v53[1] = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v53 = *(_OWORD *)v54;
  }
  v57 = a3[12];
  v58 = a3[13];
  v59 = (_QWORD *)((char *)a1 + v57);
  v60 = (_QWORD *)((char *)a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = (char *)a1 + v58;
  v63 = (char *)a2 + v58;
  v64 = *(_QWORD *)((char *)a2 + v58);
  v65 = *((_QWORD *)v63 + 1);
  v66 = v63[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v64, v65);
  *(_QWORD *)v62 = v64;
  *((_QWORD *)v62 + 1) = v65;
  v62[16] = v66;
  return a1;
}

uint64_t _s4FlowO4ViewVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v6 + *(int *)(v9 + 24);
      v11 = type metadata accessor for Artwork(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v13 = type metadata accessor for URL(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
LABEL_12:
  v14 = (id *)(a1 + a2[8]);
  v15 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  swift_release();
  return sub_14E55C(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8));
}

_QWORD *_s4FlowO4ViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *__dst;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *v13 = *v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
  if (EnumCaseMultiPayload == 1)
  {
    v25 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v19, v25);
    v26 = v18;
    v27 = v20;
    v28 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      goto LABEL_16;
    }
    v22 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v67 = v23;
      v29 = v19[1];
      *v18 = *v19;
      v18[1] = v29;
      v30 = v19[3];
      v18[2] = v19[2];
      v18[3] = v30;
      v31 = *(int *)(v22 + 24);
      v69 = (char *)v19 + v31;
      __dst = (char *)v18 + v31;
      v32 = type metadata accessor for Artwork(0);
      v66 = *(_QWORD *)(v32 - 8);
      v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v68(v69, 1, v32))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dst, v69, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v32);
      }
      *((_BYTE *)v18 + *(int *)(v22 + 28)) = *((_BYTE *)v19 + *(int *)(v22 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v18, 0, 1, v22);
    }
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v35 = *(int *)(v34 + 48);
    v36 = (char *)v18 + v35;
    v37 = (char *)v19 + v35;
    v38 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    *((_BYTE *)v18 + *(int *)(v34 + 64)) = *((_BYTE *)v19 + *(int *)(v34 + 64));
    v26 = v18;
    v27 = v20;
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v27, v28);
LABEL_16:
  v39 = a3[8];
  v40 = (void **)((char *)a1 + v39);
  v41 = (void **)((char *)a2 + v39);
  v42 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
  {
    v43 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
    v44 = v40;
    v45 = v42;
    v46 = 1;
  }
  else
  {
    v47 = *v41;
    *v40 = *v41;
    v48 = v47;
    v44 = v40;
    v45 = v42;
    v46 = 0;
  }
  swift_storeEnumTagMultiPayload(v44, v45, v46);
  v49 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v49) = *((_BYTE *)a2 + v49);
  v50 = a3[11];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (char *)a2 + v50;
  v53 = *(_QWORD *)((char *)a2 + v50);
  swift_retain();
  if (v53)
  {
    v54 = *((_QWORD *)v52 + 1);
    *v51 = v53;
    v51[1] = v54;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  v55 = a3[12];
  v56 = a3[13];
  v57 = (_QWORD *)((char *)a1 + v55);
  v58 = (_QWORD *)((char *)a2 + v55);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  v60 = (char *)a1 + v56;
  v61 = (char *)a2 + v56;
  v62 = *(_QWORD *)((char *)a2 + v56);
  v63 = *((_QWORD *)v61 + 1);
  v64 = v61[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v62, v63);
  *(_QWORD *)v60 = v62;
  *((_QWORD *)v60 + 1) = v63;
  v60[16] = v64;
  return a1;
}

_QWORD *_s4FlowO4ViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *__dst;

  if (a1 != a2)
  {
    sub_56024((uint64_t)a1, &qword_150CE90);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *v12 = *v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    sub_5C0DC((uint64_t)a1 + v17, type metadata accessor for Collaboration.Flow);
    v20 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
    if (EnumCaseMultiPayload == 1)
    {
      v25 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v19, v25);
      v26 = v18;
      v27 = v20;
      v28 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_19:
        v37 = a3[8];
        v38 = (void **)((char *)a1 + v37);
        v39 = (void **)((char *)a2 + v37);
        sub_5C0DC((uint64_t)a1 + v37, type metadata accessor for Collaboration.Object);
        v40 = type metadata accessor for Collaboration.Object(0);
        if (swift_getEnumCaseMultiPayload(v39, v40) == 1)
        {
          v41 = type metadata accessor for Playlist(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v39, v41);
          v42 = v38;
          v43 = v40;
          v44 = 1;
        }
        else
        {
          v45 = *v39;
          *v38 = *v39;
          v46 = v45;
          v42 = v38;
          v43 = v40;
          v44 = 0;
        }
        swift_storeEnumTagMultiPayload(v42, v43, v44);
        goto LABEL_23;
      }
      v22 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *v18 = *v19;
        v18[1] = v19[1];
        v18[2] = v19[2];
        v18[3] = v19[3];
        v29 = *(int *)(v22 + 24);
        __dst = (char *)v18 + v29;
        v69 = (char *)v19 + v29;
        v30 = type metadata accessor for Artwork(0);
        v67 = *(_QWORD *)(v30 - 8);
        v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v68(v69, 1, v30))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(__dst, v69, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v30);
        }
        *((_BYTE *)v18 + *(int *)(v22 + 28)) = *((_BYTE *)v19 + *(int *)(v22 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
      }
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v33 = *(int *)(v32 + 48);
      v34 = (char *)v18 + v33;
      v35 = (char *)v19 + v33;
      v36 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      *((_BYTE *)v18 + *(int *)(v32 + 64)) = *((_BYTE *)v19 + *(int *)(v32 + 64));
      v26 = v18;
      v27 = v20;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
    goto LABEL_19;
  }
LABEL_23:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v47 = a3[11];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (char *)a2 + v47;
  v50 = *(_QWORD *)((char *)a1 + v47);
  v51 = *(_QWORD *)((char *)a2 + v47);
  if (!v50)
  {
    if (v51)
    {
      v53 = *((_QWORD *)v49 + 1);
      *v48 = v51;
      v48[1] = v53;
      swift_retain();
      goto LABEL_30;
    }
LABEL_29:
    *(_OWORD *)v48 = *(_OWORD *)v49;
    goto LABEL_30;
  }
  if (!v51)
  {
    swift_release();
    goto LABEL_29;
  }
  v52 = *((_QWORD *)v49 + 1);
  *v48 = v51;
  v48[1] = v52;
  swift_retain();
  swift_release();
LABEL_30:
  v54 = a3[12];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  swift_retain();
  swift_release();
  v58 = a3[13];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = *(_QWORD *)v60;
  v62 = *((_QWORD *)v60 + 1);
  v63 = v60[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v60, v62);
  v64 = *(_QWORD *)v59;
  v65 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v59 = v61;
  *((_QWORD *)v59 + 1) = v62;
  v59[16] = v63;
  sub_14E55C(v64, v65);
  return a1;
}

char *_s4FlowO4ViewVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v46;
  char *v47;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v17 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
    v18 = v10;
    v19 = v12;
    v20 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_16;
    }
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v21 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v21;
      v22 = *(int *)(v14 + 24);
      v47 = &v10[v22];
      v23 = &v11[v22];
      v24 = type metadata accessor for Artwork(0);
      v46 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(v47, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v47, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v24);
      }
      v10[*(int *)(v14 + 28)] = v11[*(int *)(v14 + 28)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v27 = *(int *)(v26 + 48);
    v28 = &v10[v27];
    v29 = &v11[v27];
    v30 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v10[*(int *)(v26 + 64)] = v11[*(int *)(v26 + 64)];
    v18 = v10;
    v19 = v12;
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v19, v20);
LABEL_16:
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
    swift_storeEnumTagMultiPayload(v32, v34, 1);
  }
  else
  {
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  v36 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v36] = a2[v36];
  v37 = a3[11];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *(_QWORD *)v39;
  if (*(_QWORD *)v39)
  {
    v41 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = v40;
    *((_QWORD *)v38 + 1) = v41;
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  v42 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_OWORD *)v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  return a1;
}

char *_s4FlowO4ViewVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;

  if (a1 != a2)
  {
    sub_56024((uint64_t)a1, &qword_150CE90);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *v9 = *v10;
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *v12 = *v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_release();
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    sub_5C0DC((uint64_t)&a1[v14], type metadata accessor for Collaboration.Flow);
    v17 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
      v23 = v15;
      v24 = v17;
      v25 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        goto LABEL_18;
      }
      v19 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v26 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v26;
        v27 = *(int *)(v19 + 24);
        v55 = &v15[v27];
        v28 = &v16[v27];
        v29 = type metadata accessor for Artwork(0);
        v54 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v28, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(v55, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v55, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v29);
        }
        v15[*(int *)(v19 + 28)] = v16[*(int *)(v19 + 28)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v32 = *(int *)(v31 + 48);
      v33 = &v15[v32];
      v34 = &v16[v32];
      v35 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v15[*(int *)(v31 + 64)] = v16[*(int *)(v31 + 64)];
      v23 = v15;
      v24 = v17;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
LABEL_18:
    v36 = a3[8];
    v37 = &a1[v36];
    v38 = &a2[v36];
    sub_5C0DC((uint64_t)&a1[v36], type metadata accessor for Collaboration.Object);
    v39 = type metadata accessor for Collaboration.Object(0);
    if (swift_getEnumCaseMultiPayload(v38, v39) == 1)
    {
      v40 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload(v37, v39, 1);
    }
    else
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_release();
  v41 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(_QWORD *)&a2[v41];
  if (!*(_QWORD *)&a1[v41])
  {
    if (v44)
    {
      v46 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = v44;
      *((_QWORD *)v42 + 1) = v46;
      goto LABEL_28;
    }
LABEL_27:
    *(_OWORD *)v42 = *(_OWORD *)v43;
    goto LABEL_28;
  }
  if (!v44)
  {
    swift_release();
    goto LABEL_27;
  }
  v45 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = v44;
  *((_QWORD *)v42 + 1) = v45;
  swift_release();
LABEL_28:
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  v47 = a3[13];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v49[16];
  v51 = *(_QWORD *)v48;
  v52 = *((_QWORD *)v48 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  v48[16] = v50;
  sub_14E55C(v51, v52);
  return a1;
}

uint64_t _s4FlowO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E95898);
}

uint64_t sub_E95898(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Collaboration.Flow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[7];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for Collaboration.Object(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[8];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t _s4FlowO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E95974);
}

uint64_t sub_E95974(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for Collaboration.Flow(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[7];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for Collaboration.Object(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

void sub_E95A40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  sub_1D1B7C(319, (unint64_t *)&qword_150B6E0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_10B1CC8;
    v8[2] = &unk_10B1CC8;
    v4 = type metadata accessor for Collaboration.Flow(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for Collaboration.Object(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[6] = &unk_10B1C88;
        v8[7] = &unk_10B1CC8;
        v8[8] = (char *)&value witness table for () + 64;
        v8[9] = &unk_10B1CE8;
        swift_initStructMetadata(a1, 256, 10, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_E95B34()
{
  return sub_5C150(&qword_150C800, &qword_150C808, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t _s4FlowO12ActionButtonVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_270154(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t _s4FlowO12ActionButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_270050(v5, v6);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v4 = v2[4];
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)v2 + 40);
  *(_QWORD *)(a1 + 48) = v2[6];
  swift_retain();
  swift_release();
  v5 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_270050(v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_270154(v6, v7);
  return a1;
}

__n128 __swift_memcpy65_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s4FlowO12ActionButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v5;
  sub_270154(v6, v7);
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4FlowO12ActionButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonVMa()
{
  return &_s4FlowO12ActionButtonVN;
}

uint64_t *sub_E95E24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for Collaboration.Flow(0);
    swift_retain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return v5;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = v8[1];
        *v7 = *v8;
        v7[1] = v18;
        v19 = v8[3];
        v7[2] = v8[2];
        v7[3] = v19;
        v20 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v20;
        v21 = (char *)v8 + v20;
        v22 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v22 - 8);
        v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v22);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)v7 + *(int *)(v24 + 64)) = *((_BYTE *)v8 + *(int *)(v24 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_14;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return v5;
}

uint64_t sub_E960A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Collaboration.Flow(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  if ((_DWORD)result == 1)
  {
    v11 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v4 + *(int *)(v7 + 24);
      v9 = type metadata accessor for Artwork(0);
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    v4 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v11 = type metadata accessor for URL(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
}

_QWORD *sub_E961BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  char *__dst;
  unsigned int (*v30)(char *, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, v6, v12);
    v13 = v5;
    v14 = v7;
    v15 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v16 = v6[1];
      *v5 = *v6;
      v5[1] = v16;
      v17 = v6[3];
      v5[2] = v6[2];
      v5[3] = v17;
      v18 = *(int *)(v9 + 24);
      __dst = (char *)v5 + v18;
      v19 = (char *)v6 + v18;
      v20 = type metadata accessor for Artwork(0);
      v28 = *(_QWORD *)(v20 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30(v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v20);
      }
      *((_BYTE *)v5 + *(int *)(v9 + 28)) = *((_BYTE *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v23 = *(int *)(v22 + 48);
    v24 = (char *)v5 + v23;
    v25 = (char *)v6 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    *((_BYTE *)v5 + *(int *)(v22 + 64)) = *((_BYTE *)v6 + *(int *)(v22 + 64));
    v13 = v5;
    v14 = v7;
    v15 = 0;
    goto LABEL_12;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

_QWORD *sub_E96410(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  char *__dst;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_5C0DC((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    v9 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        v18 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v18;
        v19 = (char *)v8 + v18;
        v20 = type metadata accessor for Artwork(0);
        v28 = *(_QWORD *)(v20 - 8);
        v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29(v19, 1, v20))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v19, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v20);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v23 = *(int *)(v22 + 48);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      *((_BYTE *)v7 + *(int *)(v22 + 64)) = *((_BYTE *)v8 + *(int *)(v22 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_13;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_E966A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
    v13 = v5;
    v14 = v7;
    v15 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v16 = v6[1];
      *v5 = *v6;
      v5[1] = v16;
      v17 = *(int *)(v9 + 24);
      v18 = (char *)v5 + v17;
      v19 = (char *)v6 + v17;
      v20 = type metadata accessor for Artwork(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      *((_BYTE *)v5 + *(int *)(v9 + 28)) = *((_BYTE *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    v24 = *(int *)(v23 + 48);
    v25 = (char *)v5 + v24;
    v26 = (char *)v6 + v24;
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    *((_BYTE *)v5 + *(int *)(v23 + 64)) = *((_BYTE *)v6 + *(int *)(v23 + 64));
    v13 = v5;
    v14 = v7;
    v15 = 0;
    goto LABEL_12;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

_QWORD *sub_E968B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    sub_5C0DC((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    v9 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5F0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = v8[1];
        *v7 = *v8;
        v7[1] = v18;
        v19 = *(int *)(v11 + 24);
        v20 = (char *)v7 + v19;
        v21 = (char *)v8 + v19;
        v22 = type metadata accessor for Artwork(0);
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
      v26 = *(int *)(v25 + 48);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      *((_BYTE *)v7 + *(int *)(v25 + 64)) = *((_BYTE *)v8 + *(int *)(v25 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_13;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_E96AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E96AFC);
}

uint64_t sub_E96AFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Collaboration.Flow(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_E96B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E96B84);
}

char *sub_E96B84(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Collaboration.Flow(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s4FlowO18ProfileEditingViewVMa(uint64_t a1)
{
  return sub_6345C(a1, qword_150C868, (uint64_t)&_s4FlowO18ProfileEditingViewVMn);
}

uint64_t sub_E96C0C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Collaboration.Flow(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *_s4FlowO14GlyphImageViewVMa()
{
  return &_s4FlowO14GlyphImageViewVN;
}

uint64_t sub_E96C94(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1213098, 1);
}

uint64_t sub_E96CA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1213070, 1);
}

uint64_t sub_E96CB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1213048, 1);
}

uint64_t sub_E96CC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_270154(*(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_E96D04()
{
  uint64_t v0;

  return sub_E914DC(v0 + 16);
}

uint64_t sub_E96D0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E91538(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E96D14(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_270050(v2, v3);
  return a1;
}

unint64_t sub_E96D78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C8D8;
  if (!qword_150C8D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8D0);
    sub_E96DFC();
    sub_E97314(&qword_150C108, &qword_150C110);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C8D8);
  }
  return result;
}

unint64_t sub_E96DFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C8E0;
  if (!qword_150C8E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8E8);
    sub_5C150(&qword_150BC38, &qword_150BBC8, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C8E0);
  }
  return result;
}

unint64_t sub_E96EA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C8F0;
  if (!qword_150C8F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8B8);
    sub_E96F0C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C8F0);
  }
  return result;
}

unint64_t sub_E96F0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C8F8;
  if (!qword_150C8F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8B0);
    sub_E96F90();
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C8F8);
  }
  return result;
}

unint64_t sub_E96F90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C900;
  if (!qword_150C900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8A8);
    sub_5C150(&qword_150C908, (uint64_t *)&unk_150CE20, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C900);
  }
  return result;
}

uint64_t sub_E97014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_E9703C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_E97074@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_E9709C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

double sub_E970C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_AF8D8(a1, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

double sub_E97138(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_AF8E8(a1, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

unint64_t sub_E971B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CA20;
  if (!qword_150CA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CA18);
    sub_E97234();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CA20);
  }
  return result;
}

unint64_t sub_E97234()
{
  unint64_t result;

  result = qword_150CA28;
  if (!qword_150CA28)
  {
    result = swift_getWitnessTable(&unk_10B1D34, &_s4FlowO14GlyphImageViewVN);
    atomic_store(result, (unint64_t *)&qword_150CA28);
  }
  return result;
}

unint64_t sub_E97278()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CA38;
  if (!qword_150CA38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CA30);
    sub_E97314(&qword_150CA40, &qword_150CA48);
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CA38);
  }
  return result;
}

uint64_t sub_E97314(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

double sub_E97374(uint64_t a1)
{
  return sub_E976A8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_13CB900, (uint64_t)&unk_150CB00);
}

uint64_t sub_E97390@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_E973BC(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t objectdestroy_26Tm_2()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = *(_QWORD *)(v7 + 64);
  v9 = v0 + v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v12 = v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
    v30 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v12 + *(int *)(v15 + 24);
      v17 = type metadata accessor for Artwork(0);
      v28 = *(_QWORD *)(v17 - 8);
      v29 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v18, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v19);
    }
    v20 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v21 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v5 = v30;
  }
  v22 = (id *)(v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v9 + v1[11]))
    swift_release();
  v25 = v3 | v8 | 7;
  v26 = (v4 + v5 + v8) & ~v8;
  swift_release();
  sub_14E55C(*(_QWORD *)(v9 + v1[13]), *(_QWORD *)(v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v26, v6);
  return swift_deallocObject(v0, v26 + v31, v25);
}

double sub_E9768C(uint64_t a1)
{
  return sub_E976A8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_13CB8D8, (uint64_t)&unk_150CAE8);
}

double sub_E976A8(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return sub_E8FA24(a1, v4 + v10, v4 + ((v10 + v11 + v12) & ~v12), a2, a3, a4);
}

unint64_t sub_E9773C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CA58;
  if (!qword_150CA58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C998);
    sub_5C150(&qword_150CA60, &qword_150C990, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_E977C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CA58);
  }
  return result;
}

unint64_t sub_E977C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CA68;
  if (!qword_150CA68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CA70);
    sub_E97844();
    sub_5C150(&qword_150C2A8, &qword_150C2B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CA68);
  }
  return result;
}

unint64_t sub_E97844()
{
  unint64_t result;

  result = qword_150CA78;
  if (!qword_150CA78)
  {
    result = swift_getWitnessTable(&unk_10B1DD4, &_s4FlowO12ActionButtonVN);
    atomic_store(result, (unint64_t *)&qword_150CA78);
  }
  return result;
}

uint64_t sub_E97888(uint64_t a1)
{
  sub_AF8D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_E97910(uint64_t a1)
{
  sub_AF8E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_E97998()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = *(_QWORD *)(v7 + 64);
  v9 = v0 + v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v12 = v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    v21 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v12, v21);
  }
  else if (!EnumCaseMultiPayload)
  {
    v30 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v12 + *(int *)(v15 + 24);
      v17 = type metadata accessor for Artwork(0);
      v28 = *(_QWORD *)(v17 - 8);
      v29 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v18, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v19);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12 + *(int *)(v20 + 48), v6);
    v5 = v30;
  }
  v22 = (id *)(v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v9 + v1[11]))
    swift_release();
  v25 = v3 | v8 | 7;
  v26 = (v4 + v5 + v8) & ~v8;
  swift_release();
  sub_14E55C(*(_QWORD *)(v9 + v1[13]), *(_QWORD *)(v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v26, v6);
  return swift_deallocObject(v0, v26 + v31, v25);
}

double sub_E97C3C(uint64_t a1)
{
  return sub_E976A8(a1, (uint64_t (*)(_QWORD))&type metadata accessor for URL, (uint64_t)&unk_13CB8B0, (uint64_t)&unk_150CAD8);
}

uint64_t sub_E97C60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_E97C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 80);
  return sub_E8D630(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_E97CB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_E97CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E8E728(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E97CC8(uint64_t a1)
{
  sub_AF8D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_E97D34(uint64_t a1)
{
  sub_AF8E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t objectdestroy_46Tm_1()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v9 = v6 + v1[7];
  v10 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    v16 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v9 + *(int *)(v12 + 24);
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    v9 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v16 = type metadata accessor for URL(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v9, v16);
LABEL_12:
  v17 = (id *)(v6 + v1[8]);
  v18 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v6 + v1[11]))
    swift_release();
  swift_release();
  sub_14E55C(*(_QWORD *)(v6 + v1[13]), *(_QWORD *)(v6 + v1[13] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E97FEC()
{
  return sub_E98008((uint64_t (*)(uint64_t))sub_E8EBD8);
}

uint64_t sub_E97FFC()
{
  return sub_E98008(sub_E8ED84);
}

uint64_t sub_E98008(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_E98044()
{
  unint64_t result;

  result = qword_150CAA0;
  if (!qword_150CAA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Error, &type metadata for Collaboration.Error);
    atomic_store(result, &qword_150CAA0);
  }
  return result;
}

uint64_t sub_E9808C()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for Collaboration.Flow.View(0);
  v1 = (_QWORD *)swift_task_alloc(dword_150CAAC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_50F8C;
  return sub_E8ED1C();
}

uint64_t objectdestroy_59Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v9 = v6 + v1[7];
  v10 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    v16 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v9 + *(int *)(v12 + 24);
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
    v9 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v16 = type metadata accessor for URL(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v9, v16);
LABEL_12:
  v17 = (id *)(v6 + v1[8]);
  v18 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v6 + v1[11]))
    swift_release();
  swift_release();
  sub_14E55C(*(_QWORD *)(v6 + v1[13]), *(_QWORD *)(v6 + v1[13] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E98364()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for Collaboration.Flow.View(0);
  v1 = (_QWORD *)swift_task_alloc(dword_150CAC4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  return sub_E8D774();
}

uint64_t sub_E983E8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = v0 + v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v12 = v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    v21 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v12, v21);
  }
  else if (!EnumCaseMultiPayload)
  {
    v30 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v12 + *(int *)(v15 + 24);
      v17 = type metadata accessor for Artwork(0);
      v28 = *(_QWORD *)(v17 - 8);
      v29 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v18, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v19);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12 + *(int *)(v20 + 48), v6);
    v5 = v30;
  }
  v22 = (id *)(v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v9 + v1[11]))
    swift_release();
  v25 = v3 | v8 | 7;
  v26 = (v4 + v5 + v8) & ~v8;
  swift_release();
  sub_14E55C(*(_QWORD *)(v9 + v1[13]), *(_QWORD *)(v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v26, v6);
  return swift_deallocObject(v0, v26 + v31, v25);
}

uint64_t sub_E98694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_150CAD4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_C3150;
  return sub_E8EEC4(a1, v9, v10, v11, v12);
}

uint64_t sub_E9874C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_150CAE4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_C3150;
  return sub_E8FBF4(a1, v9, v10, v11, v12);
}

uint64_t objectdestroy_79Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = v0 + v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v12 = v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
    v30 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v12 + *(int *)(v15 + 24);
      v17 = type metadata accessor for Artwork(0);
      v28 = *(_QWORD *)(v17 - 8);
      v29 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v18, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v19);
    }
    v20 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150C5E8) + 48);
    v21 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v5 = v30;
  }
  v22 = (id *)(v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v9 + v1[11]))
    swift_release();
  v25 = v3 | v8 | 7;
  v26 = (v4 + v5 + v8) & ~v8;
  swift_release();
  sub_14E55C(*(_QWORD *)(v9 + v1[13]), *(_QWORD *)(v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v26, v6);
  return swift_deallocObject(v0, v26 + v31, v25);
}

uint64_t sub_E98AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_150CAFC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_C3150;
  return sub_E8F4A0(a1, v9, v10, v11, v12);
}

unint64_t sub_E98B68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CB08;
  if (!qword_150CB08)
  {
    v1 = objc_opt_self(ICUserIdentity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_150CB08);
  }
  return result;
}

uint64_t _s4FlowO12ActionButtonV5StyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_E98BF0 + 4 * byte_10B1B95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E98C24 + 4 * byte_10B1B90[v4]))();
}

uint64_t sub_E98C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E98C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE98C34);
  return result;
}

uint64_t sub_E98C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE98C48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_E98C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E98C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonV5StyleOMa()
{
  return &_s4FlowO12ActionButtonV5StyleON;
}

unint64_t sub_E98C74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150CB10;
  if (!qword_150CB10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8C8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C8B8);
    v2[1] = sub_E96EA0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    sub_5C150(&qword_150CB18, &qword_150C910, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CB10);
  }
  return result;
}

uint64_t sub_E98D20()
{
  return sub_5C150(&qword_150CB20, &qword_150CB28, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

unint64_t sub_E98D54()
{
  unint64_t result;

  result = qword_150CB30;
  if (!qword_150CB30)
  {
    result = swift_getWitnessTable(&unk_10B1FC0, &_s4FlowO12ActionButtonV5StyleON);
    atomic_store(result, (unint64_t *)&qword_150CB30);
  }
  return result;
}

double sub_E98DA0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_150CE50, &qword_1508CF0).n128_u64[0];
  return result;
}

double sub_E98DF8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_150CF90, &qword_150C160).n128_u64[0];
  return result;
}

double sub_E98E50@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_150BC70, &qword_150BC78).n128_u64[0];
  return result;
}

double sub_E98EA8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_150CE40, &qword_150BC90).n128_u64[0];
  return result;
}

_QWORD *sub_E98F00@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _BYTE v49[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v46 = *v15;
  v47 = v34;
  sub_9D38DC((uint64_t)&v46, (uint64_t)v49);
  v35 = v15[1];
  *(_OWORD *)a9 = *v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 88) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 104) = v45[4];
  *(_OWORD *)(a9 + 120) = v37;
  *(_OWORD *)(a9 + 136) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 40) = v45[0];
  *(_OWORD *)(a9 + 56) = v38;
  v48 = *((_QWORD *)&v47 + 1);
  *(_WORD *)(a9 + 32) = *((_WORD *)v15 + 16);
  *(_OWORD *)(a9 + 72) = v36;
  sub_9D3918((uint64_t)v49);
  return sub_94FF8(&v48);
}

double sub_E990CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_150CE30, &qword_150C928).n128_u64[0];
  return result;
}

double sub_E99124@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_150CE20, &qword_150C8A8).n128_u64[0];
  return result;
}

uint64_t InlineProfileEditingView.Context.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  InlineProfileEditingView.Context.init()();
  return v1;
}

double InlineProfileEditingView.init(context:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v3;
  double result;
  __n128 v5;
  __n128 v6[5];
  unint64_t v7;

  sub_E9DC90(a1, v6);
  v3 = v6[3];
  a2[2] = v6[2];
  a2[3] = v3;
  a2[4] = v6[4];
  a2[5].n128_u64[0] = v7;
  result = v6[0].n128_f64[0];
  v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.Context.artwork(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v4, (uint64_t *)&unk_150CB40);
  Published.init(initialValue:)(v4, v2);
  return sub_56024(a1, (uint64_t *)&unk_150CB40);
}

double InlineProfileEditingView.Context.userArtwork.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10B2038);
  v4 = swift_getKeyPath(&unk_10B2060);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_E99308()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  v2 = swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.userImage(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E70);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_E993BC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10B2088);
  v2 = swift_getKeyPath(&unk_10B20B0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t InlineProfileEditingView.Context.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSString *v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  Class isa;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  double v77;
  uint64_t v78;
  id v79;
  void *v80;
  void *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  __n128 v89;
  id v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  Class v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  char *v102;
  char *v103;
  _QWORD *v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  id v114;
  unint64_t v115;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  v109 = *(_QWORD *)(v1 - 8);
  v110 = v1;
  __chkstk_darwin(v1);
  v106 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509278);
  v107 = *(_QWORD *)(v3 - 8);
  v108 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CB60);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin(v10);
  v104 = (char **)((char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v105 = (char **)((char *)&v102 - v13);
  __chkstk_darwin(v14);
  v16 = (char *)&v102 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v102 - v18;
  v20 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v21 = type metadata accessor for Artwork(0);
  v111 = *(_QWORD *)(v21 - 8);
  v112 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 56))(v19, 1, 1);
  sub_5C238((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_150CB40);
  v103 = v16;
  Published.init(initialValue:)(v16, v10);
  v102 = v19;
  sub_56024((uint64_t)v19, (uint64_t *)&unk_150CB40);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20, v9, v6);
  v22 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v114 = 0;
  v115 = 0xE000000000000000;
  Published.init(initialValue:)(&v114, &type metadata for String);
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v22, v5, v108);
  v23 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v114 = 0;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E70);
  v25 = v106;
  Published.init(initialValue:)(&v114, v24);
  v26 = v0;
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v23, v25, v110);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage) = 0;
  v27 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v28 = objc_msgSend(v27, "activeUserState");

  v29 = objc_msgSend(v28, "music");
  v30 = objc_msgSend(v29, "userProfile");

  if (v30)
  {
    v31 = objc_msgSend(v30, "name");
    v32 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    KeyPath = swift_getKeyPath(&unk_10B1FF0);
    v36 = swift_getKeyPath(&unk_10B2018);
    v114 = v32;
    v115 = v34;
    swift_retain(v26);
    static Published.subscript.setter(&v114, v26, KeyPath, v36);
    v37 = objc_msgSend(v30, "artworkInfo");
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend(v37, "responseDictionary");

      if (v39)
      {
        v40 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v39, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v41 = sub_E91F7C(v40);
        v42 = swift_bridgeObjectRelease(v40);
        if (v41)
        {
          v43 = (uint64_t)v102;
          Artwork.init(_:)(v41, v42);
          v44 = swift_getKeyPath(&unk_10B2038);
          v45 = swift_getKeyPath(&unk_10B2060);
          v46 = (uint64_t)v103;
          sub_5C238(v43, (uint64_t)v103, (uint64_t *)&unk_150CB40);
          swift_retain(v26);
          static Published.subscript.setter(v46, v26, v44, v45);
          sub_56024(v43, (uint64_t *)&unk_150CB40);
        }
      }
    }
  }
  v47 = swift_getKeyPath(&unk_10B1FF0);
  v48 = swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v114, v26, v47, v48);
  swift_release(v47);
  swift_release(v48);
  v50 = (unint64_t)v114;
  v49 = v115;
  swift_bridgeObjectRelease(v115);
  v51 = HIBYTE(v49) & 0xF;
  if ((v49 & 0x2000000000000000) == 0)
    v51 = v50 & 0xFFFFFFFFFFFFLL;
  v53 = v111;
  v52 = v112;
  if (v51)
  {
    v54 = swift_getKeyPath(&unk_10B2038);
    v55 = swift_getKeyPath(&unk_10B2060);
    v56 = v105;
    static Published.subscript.getter(v105, v26, v54, v55);
    swift_release(v54);
    v57 = swift_release(v55);
    LODWORD(v54) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v53 + 48))(v56, 1, v52, v57);
    sub_56024((uint64_t)v56, (uint64_t *)&unk_150CB40);
    if ((_DWORD)v54 != 1)
      goto LABEL_24;
  }
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  v59 = swift_allocObject(v58, 40, 7);
  *(_OWORD *)(v59 + 16) = xmmword_1060220;
  *(_QWORD *)(v59 + 32) = CNContactThumbnailImageDataKey;
  v114 = (id)v59;
  specialized Array._endMutation()(v59);
  v113 = (unint64_t)v114;
  v60 = (void *)objc_opt_self(CNContactFormatter);
  v61 = CNContactThumbnailImageDataKey;
  v62 = objc_msgSend(v60, "descriptorForRequiredKeysForStyle:", 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
  v64 = *(_QWORD *)((char *)&dword_10 + (v113 & 0xFFFFFFFFFFFFFF8));
  v63 = *(_QWORD *)((char *)&dword_18 + (v113 & 0xFFFFFFFFFFFFFF8));
  if (v64 >= v63 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
  v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62);
  specialized Array._endMutation()(v65);
  v66 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v67 = v113;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150CB88);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v69 = swift_bridgeObjectRelease(v67).n128_u64[0];
  v114 = 0;
  v70 = objc_msgSend(v66, "_ios_meContactWithKeysToFetch:error:", isa, &v114, v69);

  v71 = v114;
  if (!v70)
  {
    v98 = v114;
    v99 = _convertNSErrorToError(_:)(v71);

    swift_willThrow(v100);
    swift_errorRelease(v99);
    return v26;
  }
  v72 = swift_getKeyPath(&unk_10B1FF0);
  v73 = swift_getKeyPath(&unk_10B2018);
  v74 = v71;
  static Published.subscript.getter(&v114, v26, v72, v73);
  swift_release(v72);
  swift_release(v73);
  v76 = (unint64_t)v114;
  v75 = v115;
  *(_QWORD *)&v77 = swift_bridgeObjectRelease(v115).n128_u64[0];
  v78 = HIBYTE(v75) & 0xF;
  if ((v75 & 0x2000000000000000) == 0)
    v78 = v76 & 0xFFFFFFFFFFFFLL;
  if (!v78)
  {
    v79 = objc_msgSend(v60, "stringFromContact:style:", v70, 0, v77);
    if (v79)
    {
      v80 = v79;
      v81 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
      v83 = v82;

      v84 = swift_getKeyPath(&unk_10B1FF0);
      v85 = swift_getKeyPath(&unk_10B2018);
      v114 = v81;
      v115 = v83;
      swift_retain(v26);
      static Published.subscript.setter(&v114, v26, v84, v85);
    }
  }
  v86 = swift_getKeyPath(&unk_10B2038);
  v87 = swift_getKeyPath(&unk_10B2060);
  v88 = v104;
  static Published.subscript.getter(v104, v26, v86, v87);
  swift_release(v86);
  v89 = swift_release(v87);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v53 + 48))(v88, 1, v52, v89) != 1)
  {

    sub_56024((uint64_t)v88, (uint64_t *)&unk_150CB40);
    return v26;
  }
  sub_56024((uint64_t)v88, (uint64_t *)&unk_150CB40);
  v90 = objc_msgSend(v70, "thumbnailImageData");
  if (!v90)
  {

LABEL_24:
    return v26;
  }
  v91 = v90;
  v92 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v90);
  v94 = v93;

  v95 = objc_allocWithZone((Class)UIImage);
  sub_50CB4(v92, v94);
  v96 = Data._bridgeToObjectiveC()().super.isa;
  v97 = objc_msgSend(v95, "initWithData:", v96);
  sub_50C60(v92, v94);

  sub_E9DAC4(v97);
  sub_50C60(v92, v94);
  return v26;
}

BOOL InlineProfileEditingView.Context.canValidate.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  Swift::String v2;
  unint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v5, v0, KeyPath);
  swift_release();
  swift_release();
  v2 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = ((unint64_t)v2._object >> 56) & 0xF;
  if (((uint64_t)v2._object & 0x2000000000000000) == 0)
    v3 = v2._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  return v3 != 0;
}

uint64_t InlineProfileEditingView.Context.userName.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t countAndFlagsBits;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release();
  swift_release();
  countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v3, 0, 0);
  return *v1;
}

void InlineProfileEditingView.Context.hasRemovedImage.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*InlineProfileEditingView.Context.hasRemovedImage.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t InlineProfileEditingView.Context.userImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v9, 0, 0);
  result = 0;
  if ((*v3 & 1) == 0)
  {
    KeyPath = swift_getKeyPath(&unk_10B2038);
    swift_getKeyPath(&unk_10B2060);
    static Published.subscript.getter(v2, v0, KeyPath);
    swift_release();
    swift_release();
    v6 = type metadata accessor for Artwork(0);
    LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v2, 1, v6);
    sub_56024((uint64_t)v2, (uint64_t *)&unk_150CB40);
    result = 0;
    if ((_DWORD)KeyPath == 1)
    {
      v7 = swift_getKeyPath(&unk_10B2088);
      swift_getKeyPath(&unk_10B20B0);
      static Published.subscript.getter(&v8, v0, v7);
      swift_release();
      swift_release();
      return v8;
    }
  }
  return result;
}

uint64_t InlineProfileEditingView.Context.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CB60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509278);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

double InlineProfileEditingView.Context.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CB60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509278);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_E9A200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for InlineProfileEditingView.Context(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.imagePickerSourceType(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  uint64_t v4;

  v3[0] = a1;
  v3[1] = a2;
  State.init(wrappedValue:)(&v4, v3, &type metadata for ImagePicker.SourceType);
  return v4;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.context(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for InlineProfileEditingView.Context(0);
  v3 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char v107[16];
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  unint64_t v114;
  _OWORD v115[7];

  v2 = v1;
  v105 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v104 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for String.LocalizationValue(0);
  v98 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin();
  v99 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v97 = (char *)&v87 - v5;
  v90 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150CB98);
  __chkstk_darwin();
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBA0);
  __chkstk_darwin();
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBA8);
  __chkstk_darwin();
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150CBB0);
  __chkstk_darwin();
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBB8);
  __chkstk_darwin();
  v91 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBC0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin();
  v93 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBC8);
  __chkstk_darwin();
  v92 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBD0);
  v101 = *(_QWORD *)(v102 - 8);
  v20 = __chkstk_darwin();
  v100 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBD8);
  sub_E9ABF4(v2, (uint64_t)&v9[*(int *)(v22 + 44)]);
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v24 = Color.init(_:)(v23);
  v25 = static Edge.Set.all.getter(v24);
  sub_5C238((uint64_t)v9, (uint64_t)v12, &qword_150CB98);
  v26 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v26 = v24;
  v26[8] = v25;
  v27 = sub_56024((uint64_t)v9, &qword_150CB98);
  v28 = static Alignment.center.getter(v27);
  LOBYTE(v84) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v115, 0, 1, 0, 1, 0, 1, 0x4052800000000000, 0, 0, 1, 0, v84, v28, v29);
  sub_5C238((uint64_t)v12, (uint64_t)v14, &qword_150CBA0);
  v30 = &v14[*(int *)(v89 + 36)];
  v31 = v115[5];
  *((_OWORD *)v30 + 4) = v115[4];
  *((_OWORD *)v30 + 5) = v31;
  *((_OWORD *)v30 + 6) = v115[6];
  v32 = v115[1];
  *(_OWORD *)v30 = v115[0];
  *((_OWORD *)v30 + 1) = v32;
  v33 = v115[3];
  *((_OWORD *)v30 + 2) = v115[2];
  *((_OWORD *)v30 + 3) = v33;
  v34 = sub_56024((uint64_t)v12, &qword_150CBA0);
  v35 = static Alignment.center.getter(v34);
  sub_9C0DA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v35, v36, &qword_150CBA8, &qword_150CBB0);
  sub_56024((uint64_t)v14, &qword_150CBA8);
  v37 = (char *)v7 + *(int *)(v90 + 20);
  v38 = enum case for RoundedCornerStyle.continuous(_:);
  v39 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v45 = (uint64_t)v91;
  v46 = (uint64_t)&v91[*(int *)(v106 + 36)];
  sub_5BDB8((uint64_t)v7, v46, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CBE0) + 36)) = 256;
  sub_5C238((uint64_t)v16, v45, &qword_150CBB0);
  sub_5C0DC((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_56024((uint64_t)v16, &qword_150CBB0);
  v113 = 0;
  v114 = 0xE000000000000000;
  v47 = v88;
  v109 = *(_OWORD *)(v88 + 16);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(&v110, v89);
  v49 = v110;
  v48 = v111;
  v50 = v112;
  v108 = v47;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CBF0);
  v52 = sub_E9DE54();
  v53 = sub_DD0BF8();
  v54 = v98;
  v55 = sub_5C150(&qword_150CC40, &qword_150CBF0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v90 = v53;
  v83 = v52;
  v84 = v53;
  v56 = v99;
  v82 = v51;
  v57 = v97;
  v58 = v93;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)(&v113, v49, v48, v50, 2, sub_E9DE4C, v107, v106, &type metadata for String, v82, v83, v84, v55);
  v59 = (uint64_t)v92;
  swift_release();
  v60 = v47;
  v61 = v94;
  swift_release();
  swift_bridgeObjectRelease();
  v62 = sub_56024(v45, &qword_150CBB8);
  v63 = static Alignment.center.getter(v62);
  v65 = v64;
  v66 = v59 + *(int *)(v61 + 36);
  sub_E9CC70((uint64_t *)v60, v66);
  v67 = (uint64_t *)(v66 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150CC48) + 36));
  v68 = v103;
  *v67 = v63;
  v67[1] = v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v59, v58, v96);
  String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v56, v57, v68);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v69 = qword_1583020;
  v70 = (id)qword_1583020;
  v71 = v104;
  static Locale.current.getter(v70);
  v72 = String.init(localized:table:bundle:locale:comment:)(v56, 0, 0, v69, v71, 0, 0, 256);
  v74 = v73;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v68);
  v113 = v72;
  v114 = v74;
  v109 = *(_OWORD *)(v60 + 48);
  State.projectedValue.getter(&v110, v89);
  v76 = v110;
  v75 = v111;
  v77 = v112;
  __chkstk_darwin();
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CC50);
  v79 = sub_E9DFC0();
  v86 = sub_5C150(&qword_150CC68, &qword_150CC50, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v84 = v79;
  v85 = v90;
  v83 = v78;
  v80 = v100;
  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(char *@<X8>), unint64_t *, uint64_t, _QWORD *))View.alert<A, B>(_:isPresented:actions:))(&v113, v76, v75, v77, sub_E9DFB8, &v83, v61, &type metadata for String);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_56024(v59, &qword_150CBC8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v101 + 32))(v105, v80, v102);
}

uint64_t sub_E9ABF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t KeyPath;
  id v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Swift::String v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  Swift::String v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  __n128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  char v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  char *v155;
  uint64_t v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  unint64_t v163;
  char *v164;
  __n128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  Swift::String v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  char *v183;
  uint64_t v184;
  void *v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  unint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  double v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int *v217;
  uint64_t v218;
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  Swift::String v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  char v278;
  uint64_t v279;
  __int16 v280;

  v265 = a2;
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CEA8);
  __chkstk_darwin();
  v246 = (char *)&v220 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CEB0);
  __chkstk_darwin();
  v245 = (uint64_t)&v220 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CEB8);
  v261 = *(_QWORD *)(v262 - 8);
  __chkstk_darwin();
  v244 = (uint64_t)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEC0);
  __chkstk_darwin();
  v264 = (uint64_t)&v220 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v263 = (char *)&v220 - v7;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v254 = (char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = type metadata accessor for String.LocalizationValue(0);
  v253 = *(_QWORD *)(v255 - 8);
  __chkstk_darwin();
  v267 = (char *)&v220 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v268 = (char *)&v220 - v10;
  v258 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v257 = *(_QWORD *)(v258 - 8);
  __chkstk_darwin();
  v256 = (char *)&v220 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BB90);
  __chkstk_darwin();
  v239 = (char *)&v220 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v240 = (uint64_t)&v220 - v13;
  v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CED0);
  __chkstk_darwin();
  v250 = (uint64_t *)((char *)&v220 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150CED8);
  __chkstk_darwin();
  v260 = (uint64_t)&v220 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v270 = (uint64_t)&v220 - v16;
  v236 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v237 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin();
  v224 = (char *)&v220 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v233 = (char *)&v220 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for Artwork(0);
  v241 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin();
  v226 = (char *)&v220 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v227 = (char *)&v220 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v235 = *(_QWORD *)(v234 - 8);
  __chkstk_darwin();
  v231 = (uint64_t)&v220 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEF0);
  __chkstk_darwin();
  v230 = (char *)&v220 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C978);
  __chkstk_darwin();
  v223 = (char *)&v220 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF00);
  __chkstk_darwin();
  v232 = (uint64_t)&v220 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v238 = (uint64_t)&v220 - v25;
  v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF08);
  __chkstk_darwin();
  v27 = (char *)&v220 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Image.ResizingMode(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v31 = (char *)&v220 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v33 = (char *)&v220 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v35 = (uint64_t *)((char *)&v220 - v34);
  __chkstk_darwin();
  v37 = (char *)&v220 - v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CF10);
  __chkstk_darwin();
  v252 = (uint64_t)&v220 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v269 = (uint64_t)&v220 - v39;
  v40 = Int.seconds.getter(54);
  v41 = Int.seconds.getter(10);
  v259 = a1;
  v42 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10B2088);
  swift_getKeyPath(&unk_10B20B0);
  v266 = v42;
  static Published.subscript.getter(&v272, v42, KeyPath);
  swift_release();
  swift_release();
  if ((_QWORD)v272)
  {
    v44 = (id)v272;
    v45 = Image.init(uiImage:)(v44);
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v31, enum case for Image.ResizingMode.stretch(_:), v28);
    v46 = Image.resizable(capInsets:resizingMode:)(v31, v45, 0.0, 0.0, 0.0, 0.0);
    v47 = swift_release();
    v48 = (*(uint64_t (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v47);
    v49 = static Alignment.center.getter(v48);
    v51 = _FrameLayout.init(width:height:alignment:)(&v272, *(_QWORD *)&v40, 0, *(_QWORD *)&v40, 0, v49, v50);
    v52 = v272;
    v53 = BYTE8(v272);
    v54 = v273;
    v55 = BYTE8(v273);
    v57 = *((_QWORD *)&v274 + 1);
    v56 = v274;
    v58 = static Edge.Set.all.getter(v51);
    v59 = v58;
    v60 = EdgeInsets.init(_all:)(v58, v41);
    *(_QWORD *)v27 = v46;
    *((_QWORD *)v27 + 1) = v52;
    v27[16] = v53;
    *((_QWORD *)v27 + 3) = v54;
    v27[32] = v55;
    *((_QWORD *)v27 + 5) = v56;
    *((_QWORD *)v27 + 6) = v57;
    *((_WORD *)v27 + 28) = 256;
    v27[64] = v59;
    *((double *)v27 + 9) = v60;
    *((_QWORD *)v27 + 10) = v61;
    *((_QWORD *)v27 + 11) = v62;
    *((_QWORD *)v27 + 12) = v63;
    v27[104] = 0;
    swift_storeEnumTagMultiPayload(v27, v247, 0);
    swift_retain();
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF28);
    v65 = sub_184F98(&qword_150CF30, &qword_150CF28, (void (*)(void))sub_E9E7B4);
    v66 = sub_184F98(&qword_150CF68, &qword_150CF00, (void (*)(void))sub_E9E89C);
    v67 = v269;
    _ConditionalContent<>.init(storage:)(v27, v64, v248, v65, v66);
    swift_release();

    v68 = v268;
    v69 = v267;
    v70 = v266;
  }
  else
  {
    v221 = v33;
    v222 = v37;
    v71 = v224;
    v72 = swift_getKeyPath(&unk_10B2038);
    swift_getKeyPath(&unk_10B2060);
    v70 = v266;
    static Published.subscript.getter(v35, v266, v72);
    swift_release();
    v73 = swift_release();
    v74 = v241;
    v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 48);
    v76 = v225;
    v77 = (uint64_t)v35;
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v75)(v35, 1, v225, v73) == 1)
    {
      v78 = swift_getKeyPath(&unk_10B1FF0);
      swift_getKeyPath(&unk_10B2018);
      static Published.subscript.getter(&v272, v70, v78);
      swift_release();
      swift_release();
      v79 = String.trim()();
      swift_bridgeObjectRelease();
      sub_E9E778();
      v80 = 1;
      v81 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v79._countAndFlagsBits, (uint64_t)v79._object, 0, 1);
      v82 = (uint64_t)v71;
      if (v81)
      {
        v83 = (uint64_t)v222;
        Artwork.init(_:)(v81);
        v80 = 0;
        v84 = (uint64_t)v223;
      }
      else
      {
        v84 = (uint64_t)v223;
        v83 = (uint64_t)v222;
      }
      v74 = v241;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v83, v80, 1, v76);
      swift_bridgeObjectRelease();
      sub_56024(v77, (uint64_t *)&unk_150CB40);
      v70 = v266;
    }
    else
    {
      v83 = (uint64_t)v222;
      (*(void (**)(char *, _QWORD *, uint64_t))(v74 + 32))(v222, v35, v76);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v83, 0, 1, v76);
      v82 = (uint64_t)v71;
      v84 = (uint64_t)v223;
    }
    v85 = v83;
    v86 = (uint64_t)v221;
    sub_5C238(v85, (uint64_t)v221, (uint64_t *)&unk_150CB40);
    v87 = v75(v86, 1, v76);
    v88 = v227;
    v89 = v226;
    if (v87 == 1)
    {
      v90 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v88, 1, 1, v90);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v226, v86, v76);
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v88, v89, v76);
      v91 = type metadata accessor for ArtworkImage.ViewModel(0);
      v92 = v74;
      v93 = &v88[*(int *)(v91 + 20)];
      v94 = type metadata accessor for Artwork.CropStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v93, 1, 1, v94);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v89, v76);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v88, 0, 1, v91);
    }
    v68 = v268;
    v95 = v236;
    v96 = v237;
    v97 = (uint64_t)v88;
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v99 = (uint64_t)v233;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v233, 7, 10, v98);
    v275 = 0;
    v276 = 1;
    v277 = 0;
    v278 = 1;
    v279 = 0;
    v280 = 513;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v96 + 104))(v82, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v95);
    v100 = v231;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v97, v99, (uint64_t)&v275, v82, v231);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v82, v95);
    sub_5C0DC(v99, type metadata accessor for ArtworkImage.Placeholder);
    v101 = sub_56024(v97, (uint64_t *)&unk_150CEE0);
    v102 = static Alignment.center.getter(v101);
    _FrameLayout.init(width:height:alignment:)(&v272, *(_QWORD *)&v40, 0, *(_QWORD *)&v40, 0, v102, v103);
    v104 = v235;
    v105 = (uint64_t)v230;
    v106 = v234;
    (*(void (**)(char *, uint64_t, uint64_t))(v235 + 16))(v230, v100, v234);
    v107 = (_OWORD *)(v105 + *(int *)(v228 + 36));
    v108 = v273;
    *v107 = v272;
    v107[1] = v108;
    v107[2] = v274;
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v100, v106);
    sub_5C238(v105, v84, (uint64_t *)&unk_150CEF0);
    *(_WORD *)(v84 + *(int *)(v229 + 36)) = 256;
    v109 = sub_56024(v105, (uint64_t *)&unk_150CEF0);
    v110 = static Edge.Set.all.getter(v109);
    LOBYTE(v106) = v110;
    v111 = EdgeInsets.init(_all:)(v110, v41);
    v113 = v112;
    v115 = v114;
    v117 = v116;
    v118 = v232;
    sub_5C238(v84, v232, &qword_150C978);
    v119 = v248;
    v120 = v118 + *(int *)(v248 + 36);
    *(_BYTE *)v120 = v106;
    *(double *)(v120 + 8) = v111;
    *(_QWORD *)(v120 + 16) = v113;
    *(_QWORD *)(v120 + 24) = v115;
    *(_QWORD *)(v120 + 32) = v117;
    *(_BYTE *)(v120 + 40) = 0;
    sub_56024(v84, &qword_150C978);
    v121 = v238;
    sub_5C090(v118, v238, &qword_150CF00);
    sub_5C238(v121, (uint64_t)v27, &qword_150CF00);
    swift_storeEnumTagMultiPayload(v27, v247, 1);
    v122 = v119;
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF28);
    v124 = sub_184F98(&qword_150CF30, &qword_150CF28, (void (*)(void))sub_E9E7B4);
    v125 = sub_184F98(&qword_150CF68, &qword_150CF00, (void (*)(void))sub_E9E89C);
    v67 = v269;
    _ConditionalContent<>.init(storage:)(v27, v123, v122, v124, v125);
    sub_56024(v121, &qword_150CF00);
    sub_56024((uint64_t)v222, (uint64_t *)&unk_150CB40);
    v69 = v267;
  }
  v126 = swift_getKeyPath(&unk_10B1FF0);
  swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v271, v70, v126);
  swift_release();
  swift_release();
  v127 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v128 = ((unint64_t)v127._object >> 56) & 0xF;
  if (((uint64_t)v127._object & 0x2000000000000000) == 0)
    v128 = v127._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v129 = v67;
  if (v128)
  {
    v130 = swift_getKeyPath(&unk_10B1FF0);
    swift_getKeyPath(&unk_10B2018);
    static Published.subscript.getter(&v271, v70, v130);
    swift_release();
    swift_release();
    v131 = String.trim()();
    swift_bridgeObjectRelease();
    v271 = v131;
    v132 = sub_DD0BF8();
    v133 = Text.init<A>(_:)(&v271, &type metadata for String, v132);
    v135 = v134;
    v137 = v136 & 1;
    v140 = Text.bold()(v133, v134, v136 & 1, v138, v139);
    v142 = v141;
    v144 = v143;
    v146 = v145;
    sub_AF8E8(v133, v135, v137);
    swift_bridgeObjectRelease();
    v147 = v250;
    *v250 = v140;
    v147[1] = v142;
    v68 = v268;
    v148 = v144 & 1;
    v69 = v267;
    *((_BYTE *)v147 + 16) = v148;
    v147[3] = v146;
    swift_storeEnumTagMultiPayload(v147, v249, 0);
    v149 = sub_E86160();
    _ConditionalContent<>.init(storage:)(v147, &type metadata for Text, v251, &protocol witness table for Text, v149);
    v150 = (uint64_t)v263;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x6F59207265746E45, 0xEF656D614E207275);
    v151 = v253;
    v152 = v255;
    (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v69, v68, v255);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v153 = qword_1583020;
    v154 = (id)qword_1583020;
    v155 = v254;
    static Locale.current.getter(v154);
    v156 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, v153, v155, 0, 0, 256);
    v158 = v157;
    (*(void (**)(char *, uint64_t))(v151 + 8))(v68, v152);
    v271._countAndFlagsBits = v156;
    v271._object = v158;
    v159 = swift_allocObject(&unk_13CBC08, 104, 7);
    v160 = v259;
    v161 = *(_OWORD *)(v259 + 48);
    *(_OWORD *)(v159 + 48) = *(_OWORD *)(v259 + 32);
    *(_OWORD *)(v159 + 64) = v161;
    *(_OWORD *)(v159 + 80) = *(_OWORD *)(v160 + 64);
    *(_QWORD *)(v159 + 96) = *(_QWORD *)(v160 + 80);
    v162 = *(_OWORD *)(v160 + 16);
    *(_OWORD *)(v159 + 16) = *(_OWORD *)v160;
    *(_OWORD *)(v159 + 32) = v162;
    sub_E9E684(v160);
    v163 = sub_DD0BF8();
    v164 = v256;
    v165.n128_f64[0] = Button<>.init<A>(_:action:)(&v271, sub_E9E750, v159, &type metadata for String, v163);
    v166 = static Color.secondary.getter(v165);
    v167 = swift_getKeyPath(&unk_10B2230);
    v168 = v257;
    v169 = (uint64_t)v239;
    v170 = v258;
    (*(void (**)(char *, char *, uint64_t))(v257 + 16))(v239, v164, v258);
    v171 = v251;
    v172 = (uint64_t *)(v169 + *(int *)(v251 + 36));
    *v172 = v167;
    v172[1] = v166;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v164, v170);
    v173 = v240;
    sub_5C090(v169, v240, (uint64_t *)&unk_150BB90);
    v174 = v250;
    sub_5C238(v173, (uint64_t)v250, (uint64_t *)&unk_150BB90);
    swift_storeEnumTagMultiPayload(v174, v249, 1);
    v175 = sub_E86160();
    _ConditionalContent<>.init(storage:)(v174, &type metadata for Text, v171, &protocol witness table for Text, v175);
    sub_56024(v173, (uint64_t *)&unk_150BB90);
    v150 = (uint64_t)v263;
    v70 = v266;
  }
  v176 = swift_getKeyPath(&unk_10B1FF0);
  swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v271, v70, v176);
  swift_release();
  swift_release();
  v177 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v178 = ((unint64_t)v177._object >> 56) & 0xF;
  if (((uint64_t)v177._object & 0x2000000000000000) == 0)
    v178 = v177._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v178)
  {
    String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
    v179 = v253;
    v180 = v255;
    (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v69, v68, v255);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v181 = qword_1583020;
    v182 = (id)qword_1583020;
    v183 = v254;
    static Locale.current.getter(v182);
    v184 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, v181, v183, 0, 0, 256);
    v186 = v185;
    (*(void (**)(char *, uint64_t))(v179 + 8))(v68, v180);
    v271._countAndFlagsBits = v184;
    v271._object = v186;
    v187 = swift_allocObject(&unk_13CBBE0, 104, 7);
    v188 = v259;
    v189 = *(_OWORD *)(v259 + 48);
    *(_OWORD *)(v187 + 48) = *(_OWORD *)(v259 + 32);
    *(_OWORD *)(v187 + 64) = v189;
    *(_OWORD *)(v187 + 80) = *(_OWORD *)(v188 + 64);
    *(_QWORD *)(v187 + 96) = *(_QWORD *)(v188 + 80);
    v190 = *(_OWORD *)(v188 + 16);
    *(_OWORD *)(v187 + 16) = *(_OWORD *)v188;
    *(_OWORD *)(v187 + 32) = v190;
    sub_E9E684(v188);
    v191 = sub_DD0BF8();
    v192 = v256;
    Button<>.init<A>(_:action:)(&v271, sub_E9E9B8, v187, &type metadata for String, v191);
    v194 = static Edge.Set.trailing.getter(v193);
    LOBYTE(v187) = v194;
    v195 = EdgeInsets.init(_all:)(v194, 24.0);
    v197 = v196;
    v199 = v198;
    v201 = v200;
    v202 = v257;
    v203 = (uint64_t)v246;
    v204 = v258;
    (*(void (**)(char *, char *, uint64_t))(v257 + 16))(v246, v192, v258);
    v205 = v203 + *(int *)(v242 + 36);
    *(_BYTE *)v205 = v187;
    *(double *)(v205 + 8) = v195;
    *(_QWORD *)(v205 + 16) = v197;
    *(_QWORD *)(v205 + 24) = v199;
    *(_QWORD *)(v205 + 32) = v201;
    *(_BYTE *)(v205 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v202 + 8))(v192, v204);
    v206 = swift_getKeyPath(&unk_10B2200);
    v207 = v245;
    sub_5C238(v203, v245, &qword_150CEA8);
    v208 = v207 + *(int *)(v243 + 36);
    *(_QWORD *)v208 = v206;
    *(_QWORD *)(v208 + 8) = 1;
    *(_BYTE *)(v208 + 16) = 0;
    sub_56024(v203, &qword_150CEA8);
    v209 = v244;
    sub_5C238(v207, v244, &qword_150CEB0);
    v210 = v262;
    *(_QWORD *)(v209 + *(int *)(v262 + 36)) = 0x3FF0000000000000;
    sub_56024(v207, &qword_150CEB0);
    sub_5C090(v209, v150, &qword_150CEB8);
    v211 = 0;
  }
  else
  {
    v211 = 1;
    v210 = v262;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v261 + 56))(v150, v211, 1, v210);
  v212 = v252;
  sub_5C238(v129, v252, (uint64_t *)&unk_150CF10);
  v213 = v270;
  v214 = v260;
  sub_5C238(v270, v260, &qword_150CED8);
  v215 = v264;
  sub_5C238(v150, v264, (uint64_t *)&unk_150CEC0);
  v216 = v265;
  sub_5C238(v212, v265, (uint64_t *)&unk_150CF10);
  v217 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150CF88);
  sub_5C238(v214, v216 + v217[12], &qword_150CED8);
  v218 = v216 + v217[16];
  *(_QWORD *)v218 = 0;
  *(_BYTE *)(v218 + 8) = 1;
  sub_5C238(v215, v216 + v217[20], (uint64_t *)&unk_150CEC0);
  sub_56024(v150, (uint64_t *)&unk_150CEC0);
  sub_56024(v213, &qword_150CED8);
  sub_56024(v269, (uint64_t *)&unk_150CF10);
  sub_56024(v215, (uint64_t *)&unk_150CEC0);
  sub_56024(v214, &qword_150CED8);
  return sub_56024(v212, (uint64_t *)&unk_150CF10);
}

uint64_t sub_E9C330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  char *v51;
  double v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t, double);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;

  v70 = a2;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v64 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v66 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v69 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v68 = (char *)&v64 - v13;
  __chkstk_darwin();
  v67 = (char *)&v64 - v14;
  __chkstk_darwin();
  v73 = (char *)&v64 - v15;
  __chkstk_darwin();
  v65 = (char *)&v64 - v16;
  __chkstk_darwin();
  v72 = (char *)&v64 - v17;
  __chkstk_darwin();
  v75 = (char *)&v64 - v18;
  __chkstk_darwin();
  v20 = (char *)&v64 - v19;
  String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  v74 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v74(v8, v10, v5);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v21 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v22 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v21, v4, 0, 0, 256);
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v10, v5);
  v76 = v22;
  v77 = v24;
  v26 = swift_allocObject(&unk_13CBB40, 104, 7);
  v27 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v26 + 64) = v27;
  *(_OWORD *)(v26 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v26 + 96) = *(_QWORD *)(a1 + 80);
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v26 + 32) = v28;
  sub_E9E684(a1);
  v29 = sub_DD0BF8();
  Button<>.init<A>(_:action:)(&v76, sub_E9E750, v26, &type metadata for String, v29);
  String.LocalizationValue.init(stringLiteral:)(0x502065736F6F6843, 0xEC0000006F746F68);
  v74(v8, v10, v5);
  v30 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v31 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v30, v4, 0, 0, 256);
  v71 = v20;
  v33 = v32;
  v25(v10, v5);
  v76 = v31;
  v77 = v33;
  v34 = swift_allocObject(&unk_13CBB68, 104, 7);
  v35 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 64) = v35;
  *(_OWORD *)(v34 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v34 + 96) = *(_QWORD *)(a1 + 80);
  v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 32) = v36;
  sub_E9E684(a1);
  Button<>.init<A>(_:action:)(&v76, sub_E9E758, v34, &type metadata for String, v29);
  String.LocalizationValue.init(stringLiteral:)(0x6F685020656B6154, 0xEA00000000006F74);
  v74(v8, v10, v5);
  v37 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v38 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v37, v4, 0, 0, 256);
  v40 = v39;
  v25(v10, v5);
  v76 = v38;
  v77 = v40;
  v41 = swift_allocObject(&unk_13CBB90, 104, 7);
  v42 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v41 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v41 + 64) = v42;
  *(_OWORD *)(v41 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v41 + 96) = *(_QWORD *)(a1 + 80);
  v43 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v41 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v41 + 32) = v43;
  sub_E9E684(a1);
  Button<>.init<A>(_:action:)(&v76, sub_E9E764, v41, &type metadata for String, v29);
  String.LocalizationValue.init(stringLiteral:)(0x502065766F6D6552, 0xEC0000006F746F68);
  v74(v8, v10, v5);
  v44 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v45 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v44, v4, 0, 0, 256);
  v47 = v46;
  v25(v10, v5);
  v76 = v45;
  v77 = v47;
  v48 = swift_allocObject(&unk_13CBBB8, 104, 7);
  v49 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v48 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v48 + 64) = v49;
  *(_OWORD *)(v48 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v48 + 96) = *(_QWORD *)(a1 + 80);
  v50 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v48 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v48 + 32) = v50;
  sub_E9E684(a1);
  v51 = v65;
  v52 = Button<>.init<A>(_:action:)(&v76, sub_E9E770, v48, &type metadata for String, v29);
  v53 = v66;
  v54 = *(void (**)(char *, char *, uint64_t, double))(v66 + 16);
  v55 = v73;
  v54(v73, v71, v11, v52);
  v56 = v67;
  ((void (*)(char *, char *, uint64_t))v54)(v67, v75, v11);
  v57 = v68;
  v58 = v72;
  ((void (*)(char *, char *, uint64_t))v54)(v68, v72, v11);
  v59 = v69;
  ((void (*)(char *, char *, uint64_t))v54)(v69, v51, v11);
  v60 = v70;
  ((void (*)(uint64_t, char *, uint64_t))v54)(v70, v55, v11);
  v61 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150CEA0);
  ((void (*)(uint64_t, char *, uint64_t))v54)(v60 + v61[12], v56, v11);
  ((void (*)(uint64_t, char *, uint64_t))v54)(v60 + v61[16], v57, v11);
  ((void (*)(uint64_t, char *, uint64_t))v54)(v60 + v61[20], v59, v11);
  v62 = *(void (**)(char *, uint64_t))(v53 + 8);
  v62(v51, v11);
  v62(v58, v11);
  v62(v75, v11);
  v62(v71, v11);
  v62(v59, v11);
  v62(v57, v11);
  v62(v56, v11);
  return ((uint64_t (*)(char *, uint64_t))v62)(v73, v11);
}

uint64_t sub_E9CA28(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v6 = xmmword_1060130;
  v7 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE88);
  State.wrappedValue.setter(&v6, v3);
  v7 = *(_OWORD *)(a1 + 32);
  LOBYTE(v6) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(&v6, v4);
}

uint64_t sub_E9CAAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  v5[0] = 0;
  v5[1] = 0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE88);
  State.wrappedValue.setter(v5, v2);
  v6 = *(_OWORD *)(a1 + 32);
  LOBYTE(v5[0]) = 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(v5, v3);
}

void sub_E9CB2C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[24];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v5 = &v12[-v4 - 8];
  v6 = *(_QWORD *)(a1 + 8);
  sub_E9DAC4(0);
  v7 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  KeyPath = swift_getKeyPath(&unk_10B2038);
  v9 = swift_getKeyPath(&unk_10B2060);
  sub_5C238((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_150CB40);
  swift_retain();
  static Published.subscript.setter(v3, v6, KeyPath, v9);
  sub_56024((uint64_t)v5, (uint64_t *)&unk_150CB40);
  v10 = (_BYTE *)(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v12, 1, 0);
  *v10 = 1;
}

uint64_t sub_E9CC70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _QWORD v43[3];
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v40 = a2;
  v3 = (int *)type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v35 - v6;
  v8 = *a1;
  v9 = a1[1];
  v10 = type metadata accessor for InlineProfileEditingView.Context(0);
  v11 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v12 = ObservedObject.projectedValue.getter(v8, v9, v10, v11);
  KeyPath = swift_getKeyPath(&unk_10B2088);
  ObservedObject.Wrapper.subscript.getter(v43, KeyPath, v12, v11);
  swift_release();
  swift_release();
  v38 = v43[1];
  v39 = v43[0];
  v37 = v43[2];
  v41 = *((_OWORD *)a1 + 4);
  v42 = a1[10];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE88);
  State.projectedValue.getter(&v44, v14);
  v36 = *((_QWORD *)&v44 + 1);
  v15 = v44;
  v16 = v45;
  v41 = *((_OWORD *)a1 + 2);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(&v44, v17);
  v18 = v44;
  v19 = v45;
  if (qword_1506360 != -1)
    swift_once(&qword_1506360, sub_EAC6DC);
  v20 = static UIImagePickerController.profileImagePickerProperties;
  *v5 = swift_getKeyPath(&unk_10B21D0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(v5, v21, 0);
  v22 = (_QWORD *)((char *)v5 + v3[7]);
  v23 = v3[9];
  v24 = (_QWORD *)((char *)v5 + v3[5]);
  *v24 = v39;
  v24[1] = v38;
  v24[2] = v37;
  v25 = (char *)v5 + v3[6];
  v26 = v36;
  *(_QWORD *)v25 = v15;
  *((_QWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 1) = v16;
  v27 = (char *)v5 + v3[8];
  *(_OWORD *)v27 = v18;
  v27[16] = v19;
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)((char *)v5 + v23) = v20;
  sub_E9E708((uint64_t)v5, (uint64_t)v7);
  v28 = swift_bridgeObjectRetain();
  v29 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(&v44, 0, 0, 0, 0, v29, v30);
  v31 = v40;
  sub_5BDB8((uint64_t)v7, v40, type metadata accessor for ImagePicker);
  v32 = (_OWORD *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150CE98) + 36));
  v33 = v45;
  *v32 = v44;
  v32[1] = v33;
  v32[2] = v46;
  return sub_5C0DC((uint64_t)v7, type metadata accessor for ImagePicker);
}

void sub_E9CF2C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B2088);
  v5 = swift_getKeyPath(&unk_10B20B0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_E9CFA8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  Swift::String v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(uint64_t, char *, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD v97[2];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v92 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CE60);
  __chkstk_darwin();
  v87 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v84 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v91 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v90 = (char *)&v76 - v5;
  __chkstk_darwin();
  v83 = (char *)&v76 - v6;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE70);
  __chkstk_darwin();
  v89 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v81 = (char *)&v76 - v8;
  __chkstk_darwin();
  v95 = (uint64_t)&v76 - v9;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v76 - v16;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE78);
  v94 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin();
  v85 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v96 = (char *)&v76 - v19;
  v88 = a1;
  v21 = *a1;
  v20 = a1[1];
  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v98, v20, KeyPath);
  swift_release();
  swift_release();
  v80 = v98;
  v79 = v99;
  String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  v78 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v78(v15, v17, v12);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v23 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v24 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v23, v11, 0, 0, 256);
  v26 = v25;
  v76 = *(void (**)(char *, uint64_t))(v13 + 8);
  v76(v17, v12);
  v27 = type metadata accessor for InlineProfileEditingView.Context(0);
  v28 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v29 = ObservedObject.projectedValue.getter(v21, v20, v27, v28);
  v30 = swift_getKeyPath(&unk_10B1FF0);
  v77 = v20;
  ObservedObject.Wrapper.subscript.getter(&v98, v30, v29, v28);
  swift_release();
  swift_release();
  v31 = v98;
  v32 = v99;
  v34 = v100;
  v33 = v101;
  v97[0] = v24;
  v97[1] = v26;
  v35 = sub_DD0BF8();
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)(v97, v31, v32, v34, v33, UIScreen.Dimensions.size.getter, 0, UIScreen.Dimensions.size.getter, 0, &type metadata for String, v35);
  String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v78(v15, v17, v12);
  v36 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v37 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v36, v11, 0, 0, 256);
  v39 = v38;
  v76(v17, v12);
  v98 = v37;
  v99 = v39;
  v40 = v83;
  Button<>.init<A>(_:action:)(&v98, UIScreen.Dimensions.size.getter, 0, &type metadata for String, v35);
  v41 = swift_getKeyPath(&unk_10B1FF0);
  swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(&v98, v77, v41);
  swift_release();
  swift_release();
  v42 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = ((unint64_t)v42._object >> 56) & 0xF;
  if (((uint64_t)v42._object & 0x2000000000000000) == 0)
    v43 = v42._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v44 = v43 == 0;
  v45 = swift_getKeyPath(&unk_10B21A0);
  v46 = swift_allocObject(&unk_13CBAF0, 17, 7);
  *(_BYTE *)(v46 + 16) = v44;
  v47 = v84;
  v78 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v48 = (uint64_t)v81;
  v49 = v93;
  v78(v81, v40, v93);
  v50 = (uint64_t *)(v48 + *(int *)(v82 + 36));
  *v50 = v45;
  v50[1] = (uint64_t)sub_991998;
  v50[2] = v46;
  v84 = *(_QWORD *)(v47 + 8);
  ((void (*)(char *, uint64_t))v84)(v40, v49);
  v51 = v95;
  sub_5C090(v48, v95, &qword_150CE70);
  v52 = String.cancelButtonTitle.unsafeMutableAddressor();
  v54 = *v52;
  v53 = v52[1];
  v98 = v54;
  v99 = v53;
  swift_bridgeObjectRetain();
  v55 = v87;
  static ButtonRole.cancel.getter(v56);
  v57 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v55, 0, 1, v57);
  v58 = swift_allocObject(&unk_13CBB18, 120, 7);
  v59 = (uint64_t)v88;
  v60 = *((_OWORD *)v88 + 3);
  *(_OWORD *)(v58 + 48) = *((_OWORD *)v88 + 2);
  *(_OWORD *)(v58 + 64) = v60;
  *(_OWORD *)(v58 + 80) = *(_OWORD *)(v59 + 64);
  v61 = *(_QWORD *)(v59 + 80);
  v62 = *(_OWORD *)(v59 + 16);
  *(_OWORD *)(v58 + 16) = *(_OWORD *)v59;
  *(_OWORD *)(v58 + 32) = v62;
  v63 = v80;
  *(_QWORD *)(v58 + 96) = v61;
  *(_QWORD *)(v58 + 104) = v63;
  *(_QWORD *)(v58 + 112) = v79;
  sub_E9E684(v59);
  v64 = v90;
  Button<>.init<A>(_:role:action:)(&v98, v55, sub_E9E678, v58, &type metadata for String, v35);
  v65 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
  v67 = v85;
  v66 = v86;
  v65(v85, v96, v86);
  v68 = v89;
  sub_5C238(v51, v89, &qword_150CE70);
  v69 = v91;
  v70 = (void (*)(uint64_t, char *, uint64_t))v78;
  v78(v91, v64, v49);
  v71 = v92;
  v65(v92, v67, v66);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE80);
  sub_5C238(v68, (uint64_t)&v71[*(int *)(v72 + 48)], &qword_150CE70);
  v70((uint64_t)&v71[*(int *)(v72 + 64)], v69, v49);
  v73 = (void (*)(char *, uint64_t))v84;
  ((void (*)(char *, uint64_t))v84)(v64, v49);
  sub_56024(v95, &qword_150CE70);
  v74 = *(void (**)(char *, uint64_t))(v94 + 8);
  v74(v96, v66);
  v73(v69, v49);
  sub_56024(v68, &qword_150CE70);
  return ((uint64_t (*)(char *, uint64_t))v74)(v67, v66);
}

void sub_E9D794(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  v5 = swift_getKeyPath(&unk_10B2018);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_E9D810(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  v6 = swift_getKeyPath(&unk_10B2018);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_E9D890(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;

  v10 = *a1;
  v5 = *((_QWORD *)&v10 + 1);
  KeyPath = swift_getKeyPath(&unk_10B1FF0);
  v7 = swift_getKeyPath(&unk_10B2018);
  v9[0] = a2;
  v9[1] = a3;
  swift_bridgeObjectRetain();
  sub_2051C8((uint64_t)&v10);
  return static Published.subscript.setter(v9, v5, KeyPath, v7);
}

uint64_t sub_E9D91C@<X0>(uint64_t a1@<X8>)
{
  return InlineProfileEditingView.body.getter(a1);
}

double sub_E9D964@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B2038);
  v5 = swift_getKeyPath(&unk_10B2060);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_E9D9CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_5C238(a1, (uint64_t)&v12 - v6, (uint64_t *)&unk_150CB40);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10B2038);
  v10 = swift_getKeyPath(&unk_10B2060);
  sub_5C238((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_150CB40);
  swift_retain();
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_56024((uint64_t)v7, (uint64_t *)&unk_150CB40);
}

void sub_E9DAC4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin(v3);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20[-1] - v7;
  KeyPath = swift_getKeyPath(&unk_10B2088);
  v10 = swift_getKeyPath(&unk_10B20B0);
  v20[0] = a1;
  v11 = a1;
  swift_retain(v1);
  static Published.subscript.setter(v20, v1, KeyPath, v10);
  v12 = swift_getKeyPath(&unk_10B2088);
  v13 = swift_getKeyPath(&unk_10B20B0);
  static Published.subscript.getter(v20, v1, v12, v13);
  swift_release(v12);
  swift_release(v13);
  v14 = (void *)v20[0];
  if (v20[0])
  {
    v15 = (_BYTE *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
    swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v20, 1, 0);
    *v15 = 0;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    v17 = swift_getKeyPath(&unk_10B2038);
    v18 = swift_getKeyPath(&unk_10B2060);
    sub_5C238((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_150CB40);
    swift_retain(v1);
    static Published.subscript.setter(v5, v1, v17, v18);
    sub_56024((uint64_t)v8, (uint64_t *)&unk_150CB40);

  }
}

__n128 sub_E9DC90@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 result;
  __n128 v15;
  __int128 v16;
  __n128 v17;
  unint64_t v18;

  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for Bool);
  v4 = v17.n128_u8[0];
  v5 = v17.n128_u64[1];
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for Bool);
  v6 = v17.n128_u8[0];
  v7 = v17.n128_u64[1];
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for Bool);
  v8 = v17.n128_u8[0];
  v9 = v17.n128_u64[1];
  v16 = xmmword_1060130;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for ImagePicker.SourceType);
  v15 = v17;
  v10 = v18;
  v11 = type metadata accessor for InlineProfileEditingView.Context(0);
  v12 = sub_4DD24(&qword_150CB90, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  a2->n128_u64[0] = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  a2->n128_u64[1] = v13;
  a2[1].n128_u8[0] = v4;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u8[0] = v6;
  a2[2].n128_u64[1] = v7;
  a2[3].n128_u8[0] = v8;
  a2[3].n128_u64[1] = v9;
  result = v15;
  a2[4] = v15;
  a2[5].n128_u64[0] = v10;
  return result;
}

void sub_E9DDD4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_E9DAC4(v1);

}

uint64_t type metadata accessor for InlineProfileEditingView.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_150CCA0;
  if (!qword_150CCA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InlineProfileEditingView.Context);
  return result;
}

uint64_t sub_E9DE4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E9C330(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E9DE54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CBF8;
  if (!qword_150CBF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CBB8);
    sub_184F98(&qword_150CC00, &qword_150CBB0, (void (*)(void))sub_E9DEF8);
    sub_5C150((unint64_t *)&unk_150CC30, (uint64_t *)&unk_150CBE0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CBF8);
  }
  return result;
}

uint64_t sub_E9DEF8()
{
  return sub_184F98(&qword_150CC08, &qword_150CBA8, (void (*)(void))sub_E9DF1C);
}

unint64_t sub_E9DF1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CC10;
  if (!qword_150CC10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CBA0);
    sub_5C150(&qword_150CC18, &qword_150CB98, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_5C150((unint64_t *)&unk_150CC20, &qword_150C3F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CC10);
  }
  return result;
}

uint64_t sub_E9DFB8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_E9CFA8(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_E9DFC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_150CC58;
  if (!qword_150CC58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CBC8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CBB8);
    v2[1] = &type metadata for String;
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CBF0);
    v2[3] = sub_E9DE54();
    v2[4] = sub_DD0BF8();
    v2[5] = sub_5C150(&qword_150CC40, &qword_150CBF0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>, 1);
    sub_5C150(&qword_150CC60, &qword_150CC48, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CC58);
  }
  return result;
}

uint64_t sub_E9E0C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InlineProfileEditingView.body>>, 1);
}

double destroy for InlineProfileEditingView(uint64_t a1)
{
  unint64_t v2;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 56));
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 3)
  {
    swift_bridgeObjectRelease(v2);

  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 80)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v9 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 64);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  if (v8 >= 3)
  {
    v10 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    swift_bridgeObjectRetain();
    v11 = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v9;
  }
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_retain(v12);
  return a1;
}

uint64_t assignWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >= 3uLL)
  {
    if (v4 >= 3)
    {
      *(_QWORD *)(a1 + 64) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = *(void **)(a1 + 72);
      v8 = *(void **)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v8;
      v9 = v8;

      goto LABEL_8;
    }
    sub_56024(a1 + 64, &qword_150CC70);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  v6 = v5;
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >= 3uLL)
  {
    if (v5 >= 3)
    {
      *(_QWORD *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      v6 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

      goto LABEL_6;
    }
    sub_56024(a1 + 64, &qword_150CC70);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_6:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InlineProfileEditingView()
{
  return &type metadata for InlineProfileEditingView;
}

uint64_t sub_E9E440()
{
  return type metadata accessor for InlineProfileEditingView.Context(0);
}

void sub_E9E448(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_AEEF4(319, (unint64_t *)&unk_150CCB0, (uint64_t *)&unk_150CB40);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_E27B34();
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_AEEF4(319, (unint64_t *)&unk_150CCC0, &qword_1506E70);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_10B2188;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_E9E510()
{
  _QWORD v1[6];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CBC8);
  v1[1] = &type metadata for String;
  v1[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CC50);
  v1[3] = sub_E9DFC0();
  v1[4] = sub_DD0BF8();
  v1[5] = sub_5C150(&qword_150CC68, &qword_150CC50, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>, 1);
}

uint64_t sub_E9E5B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_E9E5E0(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_E9E604()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_E9E614()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >= 3)
  {
    swift_bridgeObjectRelease(v1);

  }
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_E9E678()
{
  uint64_t v0;

  return sub_E9D890((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_E9E684(uint64_t a1)
{
  unint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(void **)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1F89EC(v2, v3);
  swift_retain();
  return a1;
}

uint64_t sub_E9E708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_E9E758()
{
  uint64_t v0;

  return sub_E9CA28(v0 + 16);
}

uint64_t sub_E9E764()
{
  uint64_t v0;

  return sub_E9CAAC(v0 + 16);
}

void sub_E9E770()
{
  uint64_t v0;

  sub_E9CB2C(v0 + 16);
}

unint64_t sub_E9E778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BC50;
  if (!qword_150BC50)
  {
    v1 = objc_opt_self(MPArtworkCatalog);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_150BC50);
  }
  return result;
}

unint64_t sub_E9E7B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CF38;
  if (!qword_150CF38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CF40);
    sub_E9E838();
    sub_5C150((unint64_t *)&unk_150C560, &qword_150CF60, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CF38);
  }
  return result;
}

unint64_t sub_E9E838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CF48;
  if (!qword_150CF48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150CF50);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CF48);
  }
  return result;
}

unint64_t sub_E9E89C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CF70;
  if (!qword_150CF70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C978);
    sub_E9E920();
    sub_5C150((unint64_t *)&unk_150C560, &qword_150CF60, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CF70);
  }
  return result;
}

unint64_t sub_E9E920()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150CF78;
  if (!qword_150CF78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150CEF0);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BED0);
    v2[1] = sub_E4B3D8();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CF78);
  }
  return result;
}

uint64_t sub_E9E9B8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 32);
  v3 = 1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t objectdestroy_27Tm_3()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >= 3)
  {
    swift_bridgeObjectRelease(v1);

  }
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_E9EA6C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 64);
  v3 = 1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_E9EAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD v77[11];
  _BYTE v78[183];
  char v79;
  _OWORD v80[12];
  __int128 v81;

  v3 = v2;
  v72 = a1;
  v76 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF98);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin();
  v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CFA0);
  __chkstk_darwin();
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CFA8);
  __chkstk_darwin();
  v70 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v71 = (uint64_t)&v63 - v10;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CFB0);
  __chkstk_darwin();
  v73 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CFB8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v3 + 40);
  v17 = *(_BYTE *)(v3 + 48);
  sub_270050(v16, v17);
  v18 = sub_E42E20(v16, v17);
  sub_270154(v16, v17);
  if ((v18 & 1) != 0)
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v19(v15, v72, v12);
    v20 = (uint64_t)v73;
    v19(v73, (uint64_t)v15, v12);
    swift_storeEnumTagMultiPayload(v20, v74, 0);
    v21 = sub_5C150(&qword_150CFC0, &qword_150CFB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v22 = sub_E9F9B0();
    _ConditionalContent<>.init(storage:)(v20, v12, v75, v21, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v24 = type metadata accessor for ScrollGeometry(0);
    v81 = *(_OWORD *)(v3 + 24);
    v25 = swift_allocObject(&unk_13CBD30, 65, 7);
    v26 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v25 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v25 + 32) = v26;
    *(_OWORD *)(v25 + 48) = *(_OWORD *)(v3 + 32);
    *(_BYTE *)(v25 + 64) = *(_BYTE *)(v3 + 48);
    sub_270050(v16, v17);
    sub_2051C8((uint64_t)&v81);
    v27 = sub_5C150(&qword_150CFC0, &qword_150CFB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v66 = v27;
    v28 = sub_E9F920();
    View.onScrollGeometryChange<A>(for:of:action:)(v24, sub_E9EFEC, 0, sub_E9F918, v25, v12, v24, v27, v28);
    *(_QWORD *)&v29 = swift_release().n128_u64[0];
    v30 = static Alignment.bottom.getter(v29);
    v64 = v31;
    v65 = v30;
    v63 = static VerticalAlignment.center.getter(v32);
    sub_E9F0C0(v3, (uint64_t)v77, v33);
    *(_OWORD *)&v78[119] = v77[7];
    *(_OWORD *)&v78[135] = v77[8];
    *(_OWORD *)&v78[151] = v77[9];
    *(_OWORD *)&v78[167] = v77[10];
    *(_OWORD *)&v78[55] = v77[3];
    *(_OWORD *)&v78[71] = v77[4];
    *(_OWORD *)&v78[87] = v77[5];
    *(_OWORD *)&v78[103] = v77[6];
    *(_OWORD *)&v78[7] = v77[0];
    *(_OWORD *)&v78[23] = v77[1];
    v79 = 0;
    *(_OWORD *)&v78[39] = v77[2];
    v35 = static SafeAreaRegions.all.getter(v34);
    LOBYTE(v27) = static Edge.Set.all.getter(v35);
    v72 = v12;
    v37 = v68;
    v36 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v8, v6, v69);
    v38 = &v8[*(int *)(v67 + 36)];
    v39 = *(_OWORD *)&v78[144];
    *(_OWORD *)(v38 + 161) = *(_OWORD *)&v78[128];
    *(_OWORD *)(v38 + 177) = v39;
    *(_OWORD *)(v38 + 193) = *(_OWORD *)&v78[160];
    v40 = *(_OWORD *)&v78[80];
    *(_OWORD *)(v38 + 97) = *(_OWORD *)&v78[64];
    *(_OWORD *)(v38 + 113) = v40;
    v41 = *(_OWORD *)&v78[112];
    *(_OWORD *)(v38 + 129) = *(_OWORD *)&v78[96];
    *(_OWORD *)(v38 + 145) = v41;
    v42 = *(_OWORD *)&v78[16];
    *(_OWORD *)(v38 + 33) = *(_OWORD *)v78;
    *(_OWORD *)(v38 + 49) = v42;
    v43 = *(_OWORD *)&v78[48];
    *(_OWORD *)(v38 + 65) = *(_OWORD *)&v78[32];
    v44 = v64;
    *(_QWORD *)v38 = v65;
    *((_QWORD *)v38 + 1) = v44;
    *((_QWORD *)v38 + 2) = v63;
    *((_QWORD *)v38 + 3) = 0;
    v38[32] = 0;
    v45 = *(_QWORD *)&v78[175];
    *(_OWORD *)(v38 + 81) = v43;
    *((_QWORD *)v38 + 26) = v45;
    *((_QWORD *)v38 + 27) = v35;
    v38[224] = v27;
    v46 = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v6, v36);
    v47 = static Alignment.center.getter(v46);
    v49 = v48;
    sub_E9F378((uint64_t *)v3, (uint64_t)v80, v50);
    v51 = v70;
    sub_5C238((uint64_t)v8, v70, &qword_150CFA0);
    v52 = v75;
    v53 = v51 + *(int *)(v75 + 36);
    v54 = v80[9];
    *(_OWORD *)(v53 + 128) = v80[8];
    *(_OWORD *)(v53 + 144) = v54;
    v55 = v80[11];
    *(_OWORD *)(v53 + 160) = v80[10];
    *(_OWORD *)(v53 + 176) = v55;
    v56 = v80[5];
    *(_OWORD *)(v53 + 64) = v80[4];
    *(_OWORD *)(v53 + 80) = v56;
    v57 = v80[7];
    *(_OWORD *)(v53 + 96) = v80[6];
    *(_OWORD *)(v53 + 112) = v57;
    v58 = v80[1];
    *(_OWORD *)v53 = v80[0];
    *(_OWORD *)(v53 + 16) = v58;
    v59 = v80[3];
    *(_OWORD *)(v53 + 32) = v80[2];
    *(_OWORD *)(v53 + 48) = v59;
    *(_QWORD *)(v53 + 192) = v47;
    *(_QWORD *)(v53 + 200) = v49;
    sub_56024((uint64_t)v8, &qword_150CFA0);
    v60 = v71;
    sub_E9F968(v51, v71);
    v61 = (uint64_t)v73;
    sub_5C238(v60, (uint64_t)v73, &qword_150CFA8);
    swift_storeEnumTagMultiPayload(v61, v74, 1);
    v62 = sub_E9F9B0();
    _ConditionalContent<>.init(storage:)(v61, v72, v52, v66, v62);
    return sub_56024(v60, &qword_150CFA8);
  }
}

uint64_t sub_E9EFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for ScrollGeometry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_E9F028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  double v6;
  double MaxY;
  double v8;
  double v9;
  uint64_t v10;
  double v12;
  __int128 v13;
  CGRect v14;

  v4 = ScrollGeometry.contentSize.getter();
  v6 = v5;
  v14.origin.x = ScrollGeometry.visibleRect.getter(v4);
  MaxY = CGRectGetMaxY(v14);
  ScrollGeometry.contentInsets.getter();
  v9 = (v6 - (MaxY - v8)) / *(double *)a3;
  if (v9 > 1.0)
    v9 = 1.0;
  if (v9 < 0.0)
    v9 = 0.0;
  v13 = *(_OWORD *)(a3 + 24);
  v12 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D000);
  return State.wrappedValue.setter(&v12, v10);
}

void sub_E9F0C0(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;

  v5 = static HorizontalAlignment.center.getter(a3);
  sub_E9F1F4((uint64_t *)a1, (uint64_t)&v28);
  v7 = v28;
  v8 = v29;
  v9 = v30;
  v10 = v31;
  v11 = v32;
  v12 = v33;
  v13 = v34;
  v14 = v35;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0uLL;
  }
  else
  {
    v21 = *(_QWORD *)(a1 + 8);
    v26 = v29;
    v27 = v28;
    v24 = v35;
    v25 = v30;
    v15 = static Color.black.getter(v6);
    v22 = static Alignment.center.getter(v15);
    _FrameLayout.init(width:height:alignment:)(&v28, v21, 0, 0, 1, v22, v23);
    v14 = v24;
    v9 = v25;
    v8 = v26;
    v7 = v27;
    v16 = v28;
    v17 = BYTE8(v28);
    v18 = v29;
    v19 = BYTE8(v29);
    v20 = v30;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = v7;
  *(_OWORD *)(a2 + 40) = v8;
  *(_OWORD *)(a2 + 56) = v9;
  *(_QWORD *)(a2 + 72) = v10;
  *(_BYTE *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = v12;
  *(_BYTE *)(a2 + 96) = v13;
  *(_OWORD *)(a2 + 104) = v14;
  *(_QWORD *)(a2 + 120) = v15;
  *(_QWORD *)(a2 + 128) = v16;
  *(_QWORD *)(a2 + 136) = v17;
  *(_QWORD *)(a2 + 144) = v18;
  *(_QWORD *)(a2 + 152) = v19;
  *(_OWORD *)(a2 + 160) = v20;
}

double sub_E9F1F4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  _QWORD *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  double result;
  __int128 v33;
  double v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v4 = static Color.black.getter(a1);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D008);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_105F890;
  v7 = static Color.black.getter(v6);
  *(_QWORD *)(v6 + 32) = v7;
  static Color.black.getter(v7);
  v38 = *(_OWORD *)(a1 + 3);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D000);
  State.wrappedValue.getter(&v34, v8);
  v9 = Color.opacity(_:)(1.0 - v34);
  swift_release();
  *(_QWORD *)(v6 + 40) = v9;
  *(_QWORD *)&v38 = v6;
  v11 = specialized Array._endMutation()(v10);
  v12 = v38;
  v13 = static UnitPoint.top.getter(v11);
  v15 = v14;
  v17 = v16;
  v18 = static UnitPoint.bottom.getter(v13);
  v20 = v19;
  Gradient.init(colors:)(v12);
  v21 = LinearGradient.init(gradient:startPoint:endPoint:)(&v34, v15, v17, v18, v20);
  v22 = v34;
  v33 = v35;
  v23 = v36;
  v24 = v37;
  v25 = *a1;
  v26 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(&v38, 0, 1, v25, 0, v26, v27);
  v28 = v38;
  v29 = BYTE8(v38);
  v30 = v39;
  v31 = v40;
  *(_QWORD *)a2 = v4;
  *(double *)(a2 + 8) = v22;
  *(_OWORD *)(a2 + 16) = v33;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v24;
  *(_QWORD *)(a2 + 48) = v28;
  *(_BYTE *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v30;
  *(_BYTE *)(a2 + 72) = v31;
  result = *(double *)&v41;
  *(_OWORD *)(a2 + 80) = v41;
  return result;
}

uint64_t sub_E9F378@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v38 = static HorizontalAlignment.center.getter(a3);
  v5 = static Alignment.center.getter(v38);
  v39 = v6;
  v40 = v5;
  v7 = *a1;
  v8 = static Alignment.center.getter(v5);
  v10 = _FrameLayout.init(width:height:alignment:)(&v47, 0, 1, v7, 0, v8, v9);
  v11 = v48;
  v36 = v49;
  v37 = v47;
  v12 = v50;
  v13 = v51;
  v14 = v52;
  v15 = static Edge.Set.trailing.getter(v10);
  v16 = v15;
  v17 = *((_BYTE *)a1 + 16);
  v18 = 0.0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if ((v17 & 1) == 0)
  {
    v18 = EdgeInsets.init(_all:)(v15, *((double *)a1 + 1));
    v19 = v22;
    v20 = v23;
    v21 = v24;
  }
  v46 = 1;
  v45 = 1;
  v44 = v11;
  v43 = v12;
  v42 = v17;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D000);
  v26 = State.wrappedValue.getter(&v41, v25);
  v27 = v41;
  v28 = v46;
  v29 = v45;
  v30 = v44;
  v31 = v43;
  v32 = v42;
  v33 = static Edge.Set.bottom.getter(v26);
  v34 = v33;
  result = static SafeAreaRegions.all.getter(v33);
  *(_QWORD *)a2 = v38;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = v29;
  *(_QWORD *)(a2 + 40) = v40;
  *(_QWORD *)(a2 + 48) = v39;
  *(_QWORD *)(a2 + 56) = 0x4018000000000000;
  *(_BYTE *)(a2 + 64) = 3;
  *(_QWORD *)(a2 + 72) = v37;
  *(_BYTE *)(a2 + 80) = v30;
  *(_QWORD *)(a2 + 88) = v36;
  *(_BYTE *)(a2 + 96) = v31;
  *(_QWORD *)(a2 + 104) = v13;
  *(_QWORD *)(a2 + 112) = v14;
  *(_BYTE *)(a2 + 120) = v16;
  *(double *)(a2 + 128) = v18;
  *(_QWORD *)(a2 + 136) = v19;
  *(_QWORD *)(a2 + 144) = v20;
  *(_QWORD *)(a2 + 152) = v21;
  *(_BYTE *)(a2 + 160) = v32;
  *(_QWORD *)(a2 + 168) = v27;
  *(_QWORD *)(a2 + 176) = result;
  *(_BYTE *)(a2 + 184) = v34;
  return result;
}

uint64_t sub_E9F524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_E9EAC0(a1, a2);
}

void sub_E9F564(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  double v10;
  uint64_t v11;
  uint64_t KeyPath;
  double v13;
  uint64_t v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v20 = 0x3FF0000000000000;
  State.init(wrappedValue:)(&v13, &v20, &type metadata for CGFloat);
  v10 = v13;
  v11 = v14;
  KeyPath = swift_getKeyPath(&off_10B2260);
  v13 = a5;
  v14 = a1;
  v15 = a2 & 1;
  v16 = v10;
  v17 = v11;
  v18 = KeyPath;
  v19 = 0;
  View.modifier<A>(_:)(&v13, a3, &type metadata for BottomGradientBlurMask, a4);
  swift_release(KeyPath);
  swift_release(v11);
}

uint64_t sub_E9F638@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t destroy for BottomGradientBlurMask(uint64_t a1)
{
  swift_release();
  return sub_270154(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  swift_retain();
  sub_270050(v5, v6);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(v2 + 40);
  LOBYTE(v2) = *(_BYTE *)(v2 + 48);
  sub_270050(v5, v2);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v2;
  sub_270154(v6, v7);
  return a1;
}

__n128 __swift_memcpy49_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v4;
  sub_270154(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomGradientBlurMask(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomGradientBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomGradientBlurMask()
{
  return &type metadata for BottomGradientBlurMask;
}

uint64_t sub_E9F8D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1213230, 1);
}

uint64_t sub_E9F8E8()
{
  uint64_t v0;

  swift_release();
  sub_270154(*(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_E9F918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_E9F028(a1, a2, v2 + 16);
}

unint64_t sub_E9F920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CFC8;
  if (!qword_150CFC8)
  {
    v1 = type metadata accessor for ScrollGeometry(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ScrollGeometry, v1);
    atomic_store(result, (unint64_t *)&qword_150CFC8);
  }
  return result;
}

uint64_t sub_E9F968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_E9F9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150CFD0;
  if (!qword_150CFD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CFA8);
    sub_E9FA34();
    sub_5C150(&qword_150CFF0, &qword_150CFF8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CFD0);
  }
  return result;
}

unint64_t sub_E9FA34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_150CFD8;
  if (!qword_150CFD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CFA0);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150CFB8);
    v2[1] = type metadata accessor for ScrollGeometry(255);
    v2[2] = sub_5C150(&qword_150CFC0, &qword_150CFB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[3] = sub_E9F920();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
    sub_5C150(&qword_150CFE0, &qword_150CFE8, (uint64_t)&protocol conformance descriptor for _MaskAlignmentEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150CFD8);
  }
  return result;
}

unint64_t sub_E9FB1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D010;
  if (!qword_150D010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D018);
    sub_5C150(&qword_150CFC0, &qword_150CFB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_E9F9B0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D010);
  }
  return result;
}

double ExpandableTextView.init(title:buttonColor:_:sheetContent:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__n128)@<X3>, void (*a5)(uint64_t)@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>, __int128 a8, uint64_t a9)
{
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v23 = 0;
  State.init(wrappedValue:)(&v20, &v23, &type metadata for Bool);
  v16 = v21;
  *(_BYTE *)a7 = v20;
  *(_QWORD *)(a7 + 8) = v16;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  v20 = a6;
  v21 = a8;
  v22 = a9;
  *(_QWORD *)(a7 + *(int *)(type metadata accessor for ExpandableTextView(0, (uint64_t)&v20) + 64)) = a3;
  v17 = swift_retain();
  v18 = a4(v17);
  a5(v18);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ExpandableTextView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ExpandableTextView);
}

double ExpandableTextView.init<>(title:buttonColor:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__n128)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  __int128 v8;

  *((_QWORD *)&v8 + 1) = a6;
  *(_QWORD *)&v8 = a5;
  return ExpandableTextView.init(title:buttonColor:_:sheetContent:)(a1, a2, a3, a4, (void (*)(uint64_t))a4, a5, a7, v8, a6);
}

uint64_t ExpandableTextView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, _QWORD *, double);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  uint64_t v95;
  ValueMetadata *v96;
  uint64_t v97;
  void *v98;

  v3 = v2;
  v80 = a2;
  v66 = *(a1 - 1);
  v70 = *(_QWORD *)(v66 + 64);
  __chkstk_darwin();
  v83 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *(_QWORD *)(v6 + 16);
  v7 = v64;
  v8 = type metadata accessor for MoreLabel(255);
  v75 = v8;
  v82 = a1[4];
  v9 = v82;
  v72 = (void *)sub_4DD24(&qword_150D020, type metadata accessor for MoreLabel, (uint64_t)&protocol conformance descriptor for MoreLabel);
  v95 = v7;
  v96 = (ValueMetadata *)v8;
  v97 = v9;
  v98 = v72;
  v10 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v95);
  v78 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v71 = (uint64_t)&v58 - v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>, v10);
  v95 = v10;
  v96 = (ValueMetadata *)&type metadata for Bool;
  v61 = v10;
  v97 = WitnessTable;
  v98 = &protocol witness table for Bool;
  v62 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v95, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v79 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v73 = OpaqueTypeMetadata2;
  __chkstk_darwin();
  v68 = (char *)&v58 - v14;
  v81 = a1[3];
  v58 = a1[5];
  v16 = type metadata accessor for Sheet(255, v81, v58, v15);
  v17 = swift_getWitnessTable(&unk_10B2468, v16);
  v18 = sub_EA037C();
  v95 = v16;
  v96 = &type metadata for DescriptionSheetSizing;
  v97 = v17;
  v98 = (void *)v18;
  v19 = swift_getOpaqueTypeMetadata2(255, &v95, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v65 = v19;
  v95 = v10;
  v96 = (ValueMetadata *)&type metadata for Bool;
  v97 = WitnessTable;
  v98 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v69 = OpaqueTypeConformance2;
  v95 = v16;
  v96 = &type metadata for DescriptionSheetSizing;
  v97 = v17;
  v98 = (void *)v18;
  v67 = swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v95 = OpaqueTypeMetadata2;
  v96 = (ValueMetadata *)v19;
  v97 = OpaqueTypeConformance2;
  v98 = (void *)v67;
  v76 = swift_getOpaqueTypeMetadata2(0, &v95, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 0);
  v77 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin();
  v63 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin();
  v74 = (uint64_t)&v58 - v23;
  v24 = v66;
  v60 = *(void (**)(char *, uint64_t, _QWORD *, double))(v66 + 16);
  v25 = v83;
  v60(v83, v3, a1, v22);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 48) & ~v26;
  v70 += v27;
  v59 = v26 | 7;
  v28 = (_QWORD *)swift_allocObject(&unk_13CBDA0, v70, v26 | 7);
  v29 = v64;
  v30 = v81;
  v28[2] = v64;
  v28[3] = v30;
  v31 = v82;
  v32 = v58;
  v28[4] = v82;
  v28[5] = v32;
  v66 = *(_QWORD *)(v24 + 32);
  ((void (*)(char *, char *, _QWORD *))v66)((char *)v28 + v27, v25, a1);
  v33 = v29;
  v89 = v29;
  v90 = v30;
  v91 = v31;
  v92 = v32;
  v34 = v32;
  v93 = v3;
  v84 = v33;
  v85 = v30;
  v86 = v31;
  v87 = v32;
  v88 = v3;
  v35 = v71;
  HeightLimitedButtonTextView.init(action:body:trailingView:)((uint64_t)sub_EA03C4, (uint64_t)v28, (void (*)(void))sub_EA0488, sub_EA060C, v33, v75, v71, v31, (uint64_t)v72);
  v36 = *(ValueMetadata **)(v3 + 8);
  LOBYTE(v95) = *(_BYTE *)v3;
  v96 = v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.getter(v94, v37);
  LOBYTE(v95) = v94[0];
  v38 = v68;
  v39 = v61;
  View.onChange<A>(of:initial:_:)(&v95, 0, UIScreen.Dimensions.size.getter, 0, v61, &type metadata for Bool, v62, &protocol witness table for Bool);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v35, v39);
  v40 = *(_QWORD *)(v3 + 8);
  LOBYTE(v94[0]) = *(_BYTE *)v3;
  v94[1] = v40;
  State.projectedValue.getter(&v95, v37);
  v42 = v95;
  v41 = v96;
  v43 = v97;
  v44 = v83;
  ((void (*)(char *, uint64_t, _QWORD *))v60)(v83, v3, a1);
  v45 = (_QWORD *)swift_allocObject(&unk_13CBDC8, v70, v59);
  v46 = v81;
  v45[2] = v33;
  v45[3] = v46;
  v45[4] = v82;
  v45[5] = v34;
  ((void (*)(char *, char *, _QWORD *))v66)((char *)v45 + v27, v44, a1);
  v47 = swift_checkMetadataState(0, v65);
  v48 = (void *)v67;
  v49 = v69;
  v50 = (uint64_t)v63;
  v51 = v73;
  View.sheet<A>(isPresented:onDismiss:content:)(v42, v41, v43, 0, 0, sub_EA094C, v45, v73, v52, v47, v69, v67);
  swift_release();
  swift_release();
  v53 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v38, v51, v53);
  v95 = v51;
  v96 = (ValueMetadata *)v47;
  v97 = v49;
  v98 = v48;
  swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v54 = v74;
  v55 = v76;
  sub_505E64(v50, v76, v74);
  v56 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v56(v50, v55);
  sub_4FF1F4(v54, v55, v80);
  return ((uint64_t (*)(uint64_t, uint64_t))v56)(v54, v55);
}

uint64_t type metadata accessor for Sheet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet);
}

unint64_t sub_EA037C()
{
  unint64_t result;

  result = qword_150D028[0];
  if (!qword_150D028[0])
  {
    result = swift_getWitnessTable(&unk_10B2430, &type metadata for DescriptionSheetSizing);
    atomic_store(result, qword_150D028);
  }
  return result;
}

uint64_t sub_EA03C4()
{
  return sub_EA4080(1);
}

uint64_t sub_EA03CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin();
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v9;
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  v13 = type metadata accessor for ExpandableTextView(0, (uint64_t)v15);
  sub_505E64(a1 + *(int *)(v13 + 56), a2, (uint64_t)v8);
  sub_4FF1F4((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_EA0488()
{
  return sub_EA0618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_EA03CC);
}

double sub_EA0494@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  double result;
  _QWORD v26[4];

  v12 = type metadata accessor for MoreLabel(0);
  __chkstk_darwin();
  v14 = (_QWORD *)((char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v16 = (char *)v26 - v15;
  __chkstk_darwin();
  v18 = (char *)v26 - v17;
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  v26[3] = a5;
  v19 = *(int *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v26) + 64);
  if (*(_QWORD *)(a1 + v19))
    v21 = *(_QWORD *)(a1 + v19);
  else
    v21 = static Color.primary.getter(v20);
  v22 = (uint64_t *)((char *)v14 + *(int *)(v12 + 20));
  *v22 = swift_getKeyPath(&unk_10B24E8);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  v24 = (char *)v14 + *(int *)(v12 + 24);
  *(_QWORD *)v24 = swift_getKeyPath(&unk_10B2518);
  v24[8] = 0;
  *v14 = v21;
  sub_EA410C((uint64_t)v14, (uint64_t)v16);
  sub_EA410C((uint64_t)v16, (uint64_t)v18);
  sub_EA410C((uint64_t)v18, a6);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_EA060C()
{
  return sub_EA0618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_EA0494);
}

uint64_t sub_EA0618(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_EA062C@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (**v38)();
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  ValueMetadata *v62;
  uint64_t v63;
  unint64_t v64;

  v52 = a2;
  v53 = a4;
  v60 = a6;
  v61 = a2;
  v62 = (ValueMetadata *)a3;
  v63 = a4;
  v64 = a5;
  v50 = a5;
  v9 = type metadata accessor for ExpandableTextView(0, (uint64_t)&v61);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v13 = (char *)&v46 - v12;
  v47 = a3;
  v15 = (int *)type metadata accessor for Sheet(0, a3, a5, v14);
  v59 = *((_QWORD *)v15 - 1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v46 - v16);
  WitnessTable = swift_getWitnessTable(&unk_10B2468, v15);
  v56 = WitnessTable;
  v55 = sub_EA037C();
  v61 = v15;
  v62 = &type metadata for DescriptionSheetSizing;
  v63 = WitnessTable;
  v64 = v55;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v61, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v20 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v57 = OpaqueTypeMetadata2;
  v58 = v20;
  __chkstk_darwin();
  v51 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin();
  v54 = (uint64_t)&v46 - v23;
  v24 = a1;
  v48 = *(_QWORD *)(a1 + 16);
  v49 = a1;
  v46 = *(_QWORD *)(a1 + 24);
  v25 = v13;
  v26 = v13;
  v27 = v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v25, v24, v9, v22);
  v28 = *(unsigned __int8 *)(v10 + 80);
  v29 = (v28 + 48) & ~v28;
  v30 = (char *)swift_allocObject(&unk_13CBF60, v29 + v11, v28 | 7);
  v31 = v53;
  *((_QWORD *)v30 + 2) = v52;
  *((_QWORD *)v30 + 3) = a3;
  v32 = v50;
  *((_QWORD *)v30 + 4) = v31;
  *((_QWORD *)v30 + 5) = v32;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v30[v29], v26, v27);
  v33 = v46;
  swift_bridgeObjectRetain();
  v34 = (_QWORD *)((char *)v17 + v15[11]);
  *v34 = swift_getKeyPath(&unk_10B24B8);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(v34, v35, 0);
  v36 = v49;
  *v17 = v48;
  v17[1] = v33;
  v37 = sub_EA09F8(v36, v47, (uint64_t)v17 + v15[9]);
  v38 = (uint64_t (**)())((char *)v17 + v15[10]);
  *v38 = sub_EA4078;
  v38[1] = (uint64_t (*)())v30;
  v39 = (uint64_t)v51;
  v41 = v55;
  v40 = v56;
  View.presentationSizing<A>(_:)(v37, v15, &type metadata for DescriptionSheetSizing, v56, v55);
  (*(void (**)(_QWORD *, int *))(v59 + 8))(v17, v15);
  v61 = v15;
  v62 = &type metadata for DescriptionSheetSizing;
  v63 = v40;
  v64 = v41;
  swift_getOpaqueTypeConformance2(&v61, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v42 = v54;
  v43 = v57;
  sub_505E64(v39, v57, v54);
  v44 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v44(v39, v43);
  sub_4FF1F4(v42, v43, v60);
  return ((uint64_t (*)(uint64_t, uint64_t))v44)(v42, v43);
}

uint64_t sub_EA094C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v9[0] = v1[2];
  v3 = (int *)v9[0];
  v9[1] = v4;
  v9[2] = v5;
  v9[3] = v6;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v9) - 8) + 80);
  return sub_EA062C((uint64_t)v1 + ((v7 + 48) & ~v7), v3, v4, v5, v6, a1);
}

uint64_t sub_EA09C4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of ExpandableTextView.body>>, 1);
}

uint64_t sub_EA09F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin();
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v9;
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  v13 = type metadata accessor for ExpandableTextView(0, (uint64_t)v15);
  sub_505E64(a1 + *(int *)(v13 + 60), a2, (uint64_t)v8);
  sub_4FF1F4((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_EA0AB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  v5[0] = &unk_10B23B8;
  v5[1] = &unk_10B23B8;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      v5[4] = &unk_10B23D0;
      swift_initStructMetadata(a1, 0, 5, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_EA0B58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;

  v3 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  if ((v9 | v7) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((v11 + ((v10 + ((v7 + 32) & ~v7)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v21 + (((v9 | v7) & 0xF8 ^ 0x1F8) & ((v9 | v7) + 16)));
  }
  else
  {
    v23 = ~v9;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v14 = a2[1];
    v3[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v15[1] = v16[1];
    v17 = ((unint64_t)v15 + v7 + 16) & ~v7;
    v18 = ((unint64_t)v16 + v7 + 16) & ~v7;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain(v14);
    swift_bridgeObjectRetain();
    v19(v17, v18, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v23, (v18 + v10) & v23, v4);
    v20 = (uint64_t *)((v11 + ((v18 + v10) & v23)) & 0xFFFFFFFFFFFFF8);
    v21 = *v20;
    *(_QWORD *)((v11 + ((v17 + v10) & v23)) & 0xFFFFFFFFFFFFF8) = *v20;
  }
  swift_retain(v21);
  return v3;
}

double sub_EA0CDC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v6);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v9);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)).n128_u64[0];
  return result;
}

uint64_t sub_EA0D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_retain(v5);
  swift_bridgeObjectRetain();
  v13(v11, v12, v8);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v9 + 64) + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFF8);
  v21 = (uint64_t *)((v19 + v18) & 0xFFFFFFFFFFFFF8);
  v22 = *v21;
  *v20 = *v21;
  swift_retain(v22);
  return a1;
}

uint64_t sub_EA0E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v11 + 64) + v16;
  v18 = (v17 + v13) & ~v16;
  v19 = (v17 + v14) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64) + 7;
  v21 = (uint64_t *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (uint64_t *)((v20 + v19) & 0xFFFFFFFFFFFFF8);
  v23 = *v22;
  v24 = *v21;
  *v21 = *v22;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

_OWORD *sub_EA0F9C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 16) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  *(_QWORD *)((*(_QWORD *)(v12 + 64) + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v12 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_EA1074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  v7 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v7[1];
  v7[1] = v8[1];
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (uint64_t *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  *v20 = *(_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  return a1;
}

uint64_t sub_EA1178(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;
  int v16;
  unint64_t v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v4 <= *(_DWORD *)(v5 + 84))
    v6 = *(_DWORD *)(v5 + 84);
  else
    v6 = *(_DWORD *)(v3 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if (v6 > 0x7FFFFFFE)
    {
      v17 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8;
      if (v4 == v7)
        return (*(uint64_t (**)(unint64_t, _QWORD))(v3 + 48))(v17, *(unsigned int *)(v3 + 84));
      else
        return (*(uint64_t (**)(unint64_t))(v5 + 48))((v17 + v9 + v10) & ~v10);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      v16 = v15 - 1;
      if (v16 < 0)
        v16 = -1;
      return (v16 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v9 + v10 + ((v8 + 32) & ~v8)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_EA1230 + 4 * byte_10B2300[v13]))();
  }
}

void sub_EA12FC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v5 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + ((*(_DWORD *)(v5 + 64)
         + *(unsigned __int8 *)(v6 + 80)
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_EA1434()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xEA14B4);
}

void sub_EA143C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xEA1444);
  JUMPOUT(0xEA14B4);
}

void sub_EA148C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xEA14B4);
}

void sub_EA1494()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xEA14B4);
}

void sub_EA149C(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v4 > 0x7FFFFFFE)
    {
      if (v2 == v3)
        JUMPOUT(0xEA14DCLL);
      JUMPOUT(0xEA14C8);
    }
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0xEA14A8);
    *(_QWORD *)(v5 + 8) = a2;
  }
  JUMPOUT(0xEA14B4);
}

uint64_t sub_EA14F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void *v18;

  v1 = a1[1];
  v3 = a1[2];
  v2 = a1[3];
  v15 = *a1;
  v16 = (ValueMetadata *)type metadata accessor for MoreLabel(255);
  v17 = v3;
  v18 = (void *)sub_4DD24(&qword_150D020, type metadata accessor for MoreLabel, (uint64_t)&protocol conformance descriptor for MoreLabel);
  v4 = type metadata accessor for HeightLimitedButtonTextView(255, (uint64_t)&v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>, v4);
  v15 = v4;
  v16 = (ValueMetadata *)&type metadata for Bool;
  v17 = WitnessTable;
  v18 = &protocol witness table for Bool;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v8 = type metadata accessor for Sheet(255, v1, v2, v7);
  v9 = swift_getWitnessTable(&unk_10B2468, v8);
  v10 = sub_EA037C();
  v15 = v8;
  v16 = &type metadata for DescriptionSheetSizing;
  v17 = v9;
  v18 = (void *)v10;
  v11 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v15 = v4;
  v16 = (ValueMetadata *)&type metadata for Bool;
  v17 = WitnessTable;
  v18 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v15 = v8;
  v16 = &type metadata for DescriptionSheetSizing;
  v17 = v9;
  v18 = (void *)v10;
  v13 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v15 = OpaqueTypeMetadata2;
  v16 = (ValueMetadata *)v11;
  v17 = OpaqueTypeConformance2;
  v18 = (void *)v13;
  return swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
}

ValueMetadata *type metadata accessor for DescriptionSheetSizing()
{
  return &type metadata for DescriptionSheetSizing;
}

void sub_EA1694(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_10B23B8;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_10B23B8;
    sub_E282B4(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_EA1728(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  unsigned int v29;
  uint64_t v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64) + 7;
  v10 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v10 + 64);
  v14 = (v11 | v7) & 0x100000;
  if ((v12 | v7) != 7
    || v14 != 0
    || v13
     + ((v12
       + ((v9 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v12)
     + 1 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v12 | v7) + 16) & ~(v12 | v7)));
LABEL_24:
    swift_retain(v17);
    return a1;
  }
  v18 = ~v12;
  v19 = a2[1];
  *a1 = *a2;
  a1[1] = v19;
  v20 = (char *)a2 + v8;
  v21 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v22 = (unint64_t)(v20 + 16) & ~v8;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v23(v21, v22, v5);
  v24 = (v9 + v21) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v25 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  else
  {
    v26 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 8) = v26;
    swift_retain(v26);
  }
  v27 = (_QWORD *)((v24 + v12 + 16) & v18);
  v28 = (uint64_t *)((v25 + v12 + 16) & v18);
  v29 = *((unsigned __int8 *)v28 + v13);
  if (v29 >= 2)
  {
    if (v13 <= 3)
      v30 = v13;
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  if (v29 != 1)
  {
    v17 = *v28;
    *v27 = *v28;
    *((_BYTE *)v27 + v13) = 0;
    goto LABEL_24;
  }
  (*(void (**)(_QWORD *))(v10 + 16))(v27);
  *((_BYTE *)v27 + v13) = 1;
  return a1;
}

double sub_EA1944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (_QWORD *)((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v6 >= 0xFFFFFFFFuLL)
    swift_release(v6[1]);
  v7 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = (_QWORD *)(((unint64_t)v6 + v8 + 16) & ~v8);
  v10 = *(_QWORD *)(v7 + 64);
  if (v10 <= 8)
    v10 = 8;
  v11 = *((unsigned __int8 *)v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 1)
    (*(void (**)(void))(v7 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v9).n128_u64[0];
  return result;
}

_QWORD *sub_EA1A88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (v11 + v8) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    swift_retain(v14);
  }
  v15 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v17 = (_QWORD *)((v12 + v16 + 16) & ~v16);
  v18 = (uint64_t *)((v13 + v16 + 16) & ~v16);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v19 = 8;
  else
    v19 = *(_QWORD *)(v15 + 64);
  v20 = *((unsigned __int8 *)v18 + v19);
  if (v20 >= 2)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X13 }
  }
  if (v20 == 1)
  {
    (*(void (**)(_QWORD *))(v15 + 16))(v17);
    v22 = 1;
  }
  else
  {
    v23 = *v18;
    *v17 = *v18;
    swift_retain(v23);
    v22 = 0;
  }
  *((_BYTE *)v17 + v19) = v22;
  return a1;
}

_QWORD *sub_EA1C1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (_QWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = (unint64_t *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v17 = v13[1];
      *v12 = v14;
      v12[1] = v17;
      swift_retain(v17);
      goto LABEL_8;
    }
  }
  else
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v15 = v13[1];
      v16 = v12[1];
      *v12 = v14;
      v12[1] = v15;
      swift_retain(v15);
      swift_release(v16);
      goto LABEL_8;
    }
    swift_release(v12[1]);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
LABEL_8:
  v18 = type metadata accessor for DismissAction(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  v21 = (char *)v13 + v20;
  v22 = (uint64_t *)(((unint64_t)v12 + v20 + 16) & ~v20);
  v23 = (uint64_t *)((unint64_t)(v21 + 16) & ~v20);
  if (v22 != v23)
  {
    v24 = v18;
    if (*(_QWORD *)(v19 + 64) <= 8uLL)
      v25 = 8;
    else
      v25 = *(_QWORD *)(v19 + 64);
    v26 = *((unsigned __int8 *)v22 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v22, v18);
    else
      v28 = swift_release(*v22);
    v29 = *((unsigned __int8 *)v23 + v25);
    if (v29 >= 2)
    {
      if (v25 <= 3)
        v30 = v25;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, __n128))(v19 + 16))(v22, v23, v24, v28);
      *((_BYTE *)v22 + v25) = 1;
    }
    else
    {
      v31 = *v23;
      *v22 = *v23;
      *((_BYTE *)v22 + v25) = 0;
      swift_retain(v31);
    }
  }
  return a1;
}

_OWORD *sub_EA1EAC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v11 = *(_QWORD *)(v10 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v11;
  }
  v12 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v9 + v13 + 16) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + 16) & ~v13);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v12 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *))(v12 + 32))(v14);
    v19 = 1;
  }
  else
  {
    v19 = 0;
    *v14 = *v15;
  }
  *((_BYTE *)v14 + v16) = v19;
  return a1;
}

_QWORD *sub_EA2028(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  unsigned int v29;
  uint64_t v30;
  char v31;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (unint64_t *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v14;
  if (*v13 < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      v18 = v14[1];
      *v13 = v15;
      v13[1] = v18;
      goto LABEL_8;
    }
  }
  else
  {
    if (v15 >= 0xFFFFFFFF)
    {
      v16 = v14[1];
      v17 = v13[1];
      *v13 = v15;
      v13[1] = v16;
      swift_release(v17);
      goto LABEL_8;
    }
    swift_release(v13[1]);
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
LABEL_8:
  v19 = type metadata accessor for DismissAction(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  v22 = (_QWORD *)(((unint64_t)v13 + v21 + 16) & ~v21);
  v23 = (_QWORD *)(((unint64_t)v14 + v21 + 16) & ~v21);
  if (v22 != v23)
  {
    v24 = v19;
    if (*(_QWORD *)(v20 + 64) <= 8uLL)
      v25 = 8;
    else
      v25 = *(_QWORD *)(v20 + 64);
    v26 = *((unsigned __int8 *)v22 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
    else
      v28 = swift_release(*v22);
    v29 = *((unsigned __int8 *)v23 + v25);
    if (v29 >= 2)
    {
      if (v25 <= 3)
        v30 = v25;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v20 + 32))(v22, v23, v24, v28);
      v31 = 1;
    }
    else
    {
      v31 = 0;
      *v22 = *v23;
    }
    *((_BYTE *)v22 + v25) = v31;
  }
  return a1;
}

uint64_t sub_EA2298(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  if (a2 <= v8)
    goto LABEL_24;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10 + ((v12 + ((*(_QWORD *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v7 > 0x7FFFFFFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))((a1 + v11 + 16) & ~v11, v7, v5);
      v19 = *(_QWORD *)(a1 + 8);
      if (v19 >= 0xFFFFFFFF)
        LODWORD(v19) = -1;
      if ((v19 + 1) >= 2)
        return v19;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_24;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_EA2470(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFEu)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10
      + ((v11
        + ((*(_QWORD *)(v7 + 64)
          + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v11)
      + 1;
  if (a3 <= v8)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_4;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &dword_0 + 1;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_EA26DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t WitnessTable;
  void *v45;
  uint64_t v46;
  void *v47;

  v33 = a2;
  v31 = type metadata accessor for NavigationPath(255);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v6 = *(_QWORD *)(a1 + 24);
  v46 = v6;
  v47 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v45 = &protocol witness table for _PaddingLayout;
  v7 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v8 = type metadata accessor for ScrollView(255, v5, v7);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v8);
  v40 = v8;
  v41 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v40 = v8;
  v41 = v9;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v40 = OpaqueTypeMetadata2;
  v41 = OpaqueTypeConformance2;
  v12 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v14 = type metadata accessor for Sheet.Toolbar(255, v3, v6, v13);
  v15 = swift_getWitnessTable(&unk_10B2570, v14);
  v40 = v14;
  v41 = v15;
  v16 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v40 = OpaqueTypeMetadata2;
  v41 = OpaqueTypeConformance2;
  v17 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v40 = v14;
  v41 = v15;
  v18 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v40 = v12;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v19 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for BottomGradientBlurMask);
  v40 = v12;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v38 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v39 = sub_EA3E74();
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v22 = type metadata accessor for NavigationStack(0, v31, v20, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v27 = (char *)&v30 - v26;
  v35 = v3;
  v36 = v6;
  v37 = v32;
  NavigationStack.init<>(root:)(sub_EA3EB8, v34, v20, v21);
  swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v22);
  sub_505E64((uint64_t)v25, v22, (uint64_t)v27);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v25, v22);
  sub_4FF1F4((uint64_t)v27, v22, v33);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v22);
}

uint64_t sub_EA29FC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  double v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char v89[16];
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t WitnessTable;
  void *v100;
  uint64_t v101;
  void *v102;

  v87 = a1;
  v85 = a4;
  v7 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0, a5);
  v83 = *(_QWORD *)(v7 - 8);
  v84 = v7;
  __chkstk_darwin();
  v82 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for ScrollBounceBehavior(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin();
  v61 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = (char *)a2;
  v10 = type metadata accessor for ModifiedContent(255, a2, &type metadata for _PaddingLayout);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  v101 = a3;
  v102 = &protocol witness table for _PaddingLayout;
  v88 = a3;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v100 = &protocol witness table for _PaddingLayout;
  v65 = v11;
  v64 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v12 = type metadata accessor for ScrollView(0, v11, v64);
  v79 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v14 = (char *)&v61 - v13;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v12);
  v95 = v12;
  v96 = v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v95, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v78 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v76 = (char *)&v61 - v17;
  v95 = v12;
  v96 = v15;
  v73 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v95 = OpaqueTypeMetadata2;
  v96 = OpaqueTypeConformance2;
  v19 = swift_getOpaqueTypeMetadata2(0, &v95, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v77 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin();
  v74 = (char *)&v61 - v20;
  v22 = type metadata accessor for Sheet.Toolbar(255, a2, a3, v21);
  v23 = swift_getWitnessTable(&unk_10B2570, v22);
  v95 = v22;
  v96 = v23;
  v24 = swift_getOpaqueTypeMetadata2(255, &v95, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v67 = OpaqueTypeMetadata2;
  v95 = OpaqueTypeMetadata2;
  v96 = OpaqueTypeConformance2;
  v72 = OpaqueTypeConformance2;
  v25 = swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v95 = v22;
  v96 = v23;
  v26 = v61;
  v27 = swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v75 = v19;
  v95 = v19;
  v96 = v24;
  v62 = v24;
  v68 = v25;
  v97 = v25;
  v98 = v27;
  v63 = v27;
  v66 = *(_QWORD *)(swift_getOpaqueTypeMetadata2(0, &v95, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0)- 8);
  __chkstk_darwin();
  v29 = (char *)&v61 - v28;
  v70 = v30;
  v31 = type metadata accessor for ModifiedContent(0, v30, &type metadata for BottomGradientBlurMask);
  v71 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin();
  v33 = (char *)&v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin();
  v69 = (uint64_t)&v61 - v35;
  v90 = v86;
  v91 = v88;
  v92 = v87;
  v36 = static Axis.Set.vertical.getter(v34);
  v37 = v14;
  v38 = ScrollView.init(_:showsIndicators:content:)(v36, 1, sub_EA3EC4, v89, v65, v64);
  v39 = static ScrollBounceBehavior.basedOnSize.getter(v38);
  v40 = static Axis.Set.vertical.getter(v39);
  v41 = Axis.Set.init(rawValue:)(0);
  v42 = Axis.Set.init(rawValue:)(v41);
  if (Axis.Set.init(rawValue:)(v42 & v40) != v40)
    v41 = Axis.Set.init(rawValue:)(v41 | v40);
  v43 = v76;
  View.scrollBounceBehavior(_:axes:)(v26, v41, v12, v73);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v26, v81);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v12);
  v45 = v83;
  v44 = v84;
  v46 = v82;
  v47.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v84);
  v48 = v74;
  v49 = v67;
  View.navigationBarTitleDisplayMode(_:)(v46, v67, v72, v47);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v49);
  __chkstk_darwin();
  v50 = (char *)v88;
  *(&v61 - 4) = v86;
  *(&v61 - 3) = v50;
  *(&v61 - 2) = v87;
  v51 = swift_checkMetadataState(0, v62);
  v52 = v75;
  v53 = v68;
  v54 = v63;
  View.toolbar<A>(content:)(sub_EA3ED0, &v61 - 6, v75, v51, v68, v63);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v52);
  v95 = v52;
  v96 = v51;
  v97 = v53;
  v98 = v54;
  v55 = swift_getOpaqueTypeConformance2(&v95, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v56 = v70;
  sub_E9F564(0x402E000000000000, 0, v70, v55, 64.0);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v29, v56);
  v57 = sub_EA3E74();
  v93 = v55;
  v94 = v57;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  v58 = v69;
  sub_505E64((uint64_t)v33, v31, v69);
  v59 = *(void (**)(char *, uint64_t))(v71 + 8);
  v59(v33, v31);
  sub_4FF1F4(v58, v31, v85);
  return ((uint64_t (*)(uint64_t, uint64_t))v59)(v58, v31);
}

uint64_t sub_EA30D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  v23 = a3;
  v5 = type metadata accessor for ModifiedContent(0, a1, &type metadata for _PaddingLayout);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for ModifiedContent(0, v5, &type metadata for _PaddingLayout);
  v22 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  v15 = type metadata accessor for Sheet(0, a1, a2, v14);
  v16 = static Edge.Set.horizontal.getter(v15);
  v17 = View.padding(_:_:)(v16, 0x4034000000000000, 0, a1, a2);
  v18 = static Edge.Set.vertical.getter(v17);
  v26 = a2;
  v27 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  View.padding(_:_:)(v18, 0x4038000000000000, 0, v5, WitnessTable);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = WitnessTable;
  v25 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_505E64((uint64_t)v11, v9, (uint64_t)v13);
  v20 = *(void (**)(char *, uint64_t))(v22 + 8);
  v20(v11, v9);
  sub_4FF1F4((uint64_t)v13, v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v9);
}

double sub_EA32BC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  double result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  _QWORD v45[4];

  v40 = a4;
  v36 = type metadata accessor for DismissAction(0);
  v7 = *(_QWORD *)(v36 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  v35 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v35 - v9;
  v38 = a2;
  v39 = a3;
  v12 = type metadata accessor for Sheet(0, a2, a3, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin();
  v16 = (char *)&v35 - v15;
  v17 = a1[1];
  v37 = *a1;
  v19 = (uint64_t *)((char *)a1 + *(int *)(v18 + 40));
  v21 = *v19;
  v20 = v19[1];
  if (*v19)
  {
    v22 = swift_allocObject(&unk_13CBF38, 32, 7);
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = v20;
    (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))(v16, a1, v12);
    swift_bridgeObjectRetain();
    sub_A9DEC(v21, v20);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v23 = sub_12BACC;
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t, double))(v13 + 16))(v16, a1, v12, v14);
    v24 = v17;
    swift_bridgeObjectRetain();
    sub_A9DEC(0, v20);
    sub_E429D0((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v26 = v35;
    v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v10, v36);
    v27 = *(unsigned __int8 *)(v7 + 80);
    v28 = (v27 + 16) & ~v27;
    v29 = swift_allocObject(&unk_13CBEC0, v28 + v8, v27 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v29 + v28, v26, v25);
    v17 = v24;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v25);
    v22 = swift_allocObject(&unk_13CBEE8, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_EA3F3C;
    *(_QWORD *)(v22 + 24) = v29;
    v23 = sub_129E54;
  }
  v30 = swift_allocObject(&unk_13CBF10, 32, 7);
  *(_QWORD *)(v30 + 16) = v23;
  *(_QWORD *)(v30 + 24) = v22;
  v41 = v37;
  v42 = v17;
  v43 = sub_129E54;
  v44 = v30;
  v32 = type metadata accessor for Sheet.Toolbar(0, v38, v39, v31);
  WitnessTable = swift_getWitnessTable(&unk_10B2570, v32);
  (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v45, &v41, v32);
  swift_release();
  swift_bridgeObjectRelease();
  v41 = v45[0];
  v42 = v45[1];
  v43 = (uint64_t (*)())v45[2];
  v44 = v45[3];
  static ToolbarContentBuilder.buildBlock<A>(_:)(&v41, v32, WitnessTable);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_EA35A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t WitnessTable;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[16];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53[16];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v36 = a6;
  v44 = a4;
  v34 = a1;
  v43 = a7;
  v35 = a5;
  v41 = type metadata accessor for Sheet.Toolbar.CloseButton(255, a5, a6, a4);
  WitnessTable = swift_getWitnessTable(&unk_10B2678, v41);
  v11 = type metadata accessor for ToolbarItem(0, (char *)&type metadata for () + 8, v41, WitnessTable);
  v42 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin();
  v38 = (char *)&v34 - v15;
  v45 = type metadata accessor for ToolbarItemPlacement(0, v14);
  v16 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin();
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v34 - v19;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D1B8);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin();
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter(v23);
  v54 = a5;
  v24 = v36;
  v55 = v36;
  v56 = a1;
  v57 = a2;
  v58 = a3;
  v25 = a2;
  v59 = v44;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D1C0);
  v27 = sub_EA4598();
  v28 = ToolbarItem<>.init(placement:content:)(v20, sub_EA4588, v53, v26, v27);
  static ToolbarItemPlacement.automatic.getter(v28);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v20, v45);
  v47 = v35;
  v48 = v24;
  v49 = v34;
  v50 = v25;
  v51 = a3;
  v52 = v44;
  ToolbarItem<>.init(placement:content:)(v18, sub_EA480C, v46, v41, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for ToolbarItem<A, B>, v11);
  v29 = v42;
  v30 = (uint64_t)v38;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v38, v13, v11);
  v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v13, v11);
  sub_5C150(qword_150D210, &qword_150D1B8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v32 = v37;
  sub_EA3BB0((uint64_t)v22, v30, v37, v11);
  v31((char *)v30, v11);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v22, v32);
}

uint64_t sub_EA38E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v6 = type metadata accessor for AccessibilityTraits(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150D1D8);
  v12 = __chkstk_darwin();
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 56))(a3, 1, 1, v12);
  v40 = a1;
  v41 = a2;
  v38 = v11;
  v39 = v10;
  v15 = sub_DD0BF8();
  swift_bridgeObjectRetain();
  v16 = Text.init<A>(_:)(&v40, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  KeyPath = swift_getKeyPath(&unk_10B25B8);
  v25 = static Font.headline.getter(v24);
  v37 = a3;
  v26 = v25;
  v27 = swift_getKeyPath(&unk_10B25E8);
  v36 = v6;
  v28 = v27;
  v29 = swift_getKeyPath(&unk_10B2618);
  v40 = v16;
  v41 = v18;
  v42 = v20 & 1;
  v43 = v22;
  v44 = KeyPath;
  v45 = 1;
  v46 = 0;
  v47 = v28;
  v48 = v26;
  v49 = v29;
  v50 = 1;
  static AccessibilityTraits.isHeader.getter(v30);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D1E8);
  v32 = sub_EA4680();
  View.accessibilityAddTraits(_:)(v9, v31, v32);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v36);
  sub_AF8E8(v40, v41, v42);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v33 = v37;
  sub_EA4834((uint64_t)v14, v37);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v39);
}

double sub_EA3B20@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v8 = a1;
  v9 = a2;
  v6 = type metadata accessor for Sheet.Toolbar.CloseButton(0, a3, a4, a2);
  swift_getWitnessTable(&unk_10B2678, v6);
  sub_505E64((uint64_t)&v8, v6, (uint64_t)v10);
  v8 = v10[0];
  v9 = v10[1];
  sub_4FF1F4((uint64_t)&v8, v6, a5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_EA3BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a3, a4, 0, 0);
  v9 = __chkstk_darwin(TupleTypeMetadata2);
  v11 = (char *)&v14 - v10;
  v12 = (char *)&v14 + *(int *)(v9 + 48) - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v10, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v12, a2, a4);
  return TupleToolbarContent.init(_:)(v11, TupleTypeMetadata2);
}

uint64_t sub_EA3C84(uint64_t a1, uint64_t a2)
{
  __n128 v4;

  v4 = swift_retain();
  return Button.init(action:label:)(a1, a2, sub_EA3CE0, 0, &type metadata for Text, &protocol witness table for Text, v4);
}

void sub_EA3CE0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v2 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6 & 1;
  v10 = Text.bold()(v3, v4, v6 & 1, v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_AF8E8(v3, v5, v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_BYTE *)(a1 + 16) = v14 & 1;
  *(_QWORD *)(a1 + 24) = v16;
}

uint64_t sub_EA3DB0()
{
  uint64_t *v0;

  return sub_EA3C84(*v0, v0[1]);
}

uint64_t sub_EA3DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_EA35A8(*v2, v2[1], v2[2], v2[3], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_EA3DD8()
{
  return PresentationSizing.proposedSize(for:context:)();
}

uint64_t sub_EA3E08()
{
  return 0x4080E00000000000;
}

uint64_t sub_EA3E34(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_121339C, 1);
}

uint64_t type metadata accessor for Sheet.Toolbar(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet.Toolbar);
}

unint64_t sub_EA3E74()
{
  unint64_t result;

  result = qword_150D130[0];
  if (!qword_150D130[0])
  {
    result = swift_getWitnessTable(&unk_10B22A8, &type metadata for BottomGradientBlurMask);
    atomic_store(result, qword_150D130);
  }
  return result;
}

uint64_t sub_EA3EB8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;

  return sub_EA29FC(*(char **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_EA3EC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_EA30D8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

double sub_EA3ED0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_EA32BC(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_EA3EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DismissAction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_EA3F3C()
{
  type metadata accessor for DismissAction(0);
  DismissAction.callAsFunction()();
}

uint64_t sub_EA3F74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroyTm_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 16);
  v1 = v13;
  v14 = *(_OWORD *)(v0 + 24);
  v12 = v14;
  v15 = v2;
  v3 = type metadata accessor for ExpandableTextView(0, (uint64_t)&v13);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  swift_release();
  v10 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v1 - 8) + 8))(v9 + *(int *)(v3 + 56), v1, v10);
  (*(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v9 + *(int *)(v3 + 60));
  swift_release();
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_EA4078()
{
  return sub_EA4080(0);
}

uint64_t sub_EA4080(char a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  char v11;

  v3 = *(_OWORD *)(v1 + 32);
  v10[0] = *(_OWORD *)(v1 + 16);
  v10[1] = v3;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v10) - 8) + 80);
  v5 = (char *)(v1 + ((v4 + 48) & ~v4));
  v6 = *v5;
  v7 = *((_QWORD *)v5 + 1);
  LOBYTE(v10[0]) = v6;
  *((_QWORD *)&v10[0] + 1) = v7;
  v11 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(&v11, v8);
}

uint64_t sub_EA410C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoreLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_EA4150(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_EA4178(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return a1;
}

_QWORD *sub_EA41C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = a2[2];
  v5 = a2[3];
  v7 = a1[3];
  a1[2] = v6;
  a1[3] = v5;
  swift_retain(v5);
  swift_release(v7);
  return a1;
}

_QWORD *sub_EA4224(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

uint64_t sub_EA4270(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_EA42B8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_EA42F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  void *v28;
  uint64_t v29;
  void *v30;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for NavigationPath(255);
  v4 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v29 = v2;
  v30 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v28 = &protocol witness table for _PaddingLayout;
  v6 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v7 = type metadata accessor for ScrollView(255, v5, v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v7);
  v23 = v7;
  v24 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v23 = v7;
  v24 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v23 = OpaqueTypeMetadata2;
  v24 = OpaqueTypeConformance2;
  v11 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v13 = type metadata accessor for Sheet.Toolbar(255, v1, v2, v12);
  v14 = swift_getWitnessTable(&unk_10B2570, v13);
  v23 = v13;
  v24 = v14;
  v15 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v23 = OpaqueTypeMetadata2;
  v24 = OpaqueTypeConformance2;
  v16 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v23 = v13;
  v24 = v14;
  v17 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v23 = v11;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  v18 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for BottomGradientBlurMask);
  v23 = v11;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  sub_EA3E74();
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v21 = type metadata accessor for NavigationStack(255, v3, v19, v20);
  return swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v21);
}

uint64_t sub_EA4548(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_121340C, 1);
}

uint64_t type metadata accessor for Sheet.Toolbar.CloseButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet.Toolbar.CloseButton);
}

uint64_t sub_EA4588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_EA38E0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_EA4598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D1C8;
  if (!qword_150D1C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D1C0);
    sub_EA45FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_150D1C8);
  }
  return result;
}

unint64_t sub_EA45FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D1D0;
  if (!qword_150D1D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D1D8);
    sub_EA4680();
    sub_4DD24(&qword_150C4D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D1D0);
  }
  return result;
}

unint64_t sub_EA4680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D1E0;
  if (!qword_150D1E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D1E8);
    sub_EA4704();
    sub_5C150(&qword_1509F80, &qword_1509F88, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D1E0);
  }
  return result;
}

unint64_t sub_EA4704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D1F0;
  if (!qword_150D1F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D1F8);
    sub_EA4788();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D1F0);
  }
  return result;
}

unint64_t sub_EA4788()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D200;
  if (!qword_150D200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D208);
    sub_5C150((unint64_t *)&qword_1508F80, &qword_1508F88, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D200);
  }
  return result;
}

double sub_EA480C@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_EA3B20(v1[6], v1[7], v1[2], v1[3], a1);
}

uint64_t sub_EA4834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_EA487C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D1B8);
  v5 = type metadata accessor for Sheet.Toolbar.CloseButton(255, v1, v2, v4);
  WitnessTable = swift_getWitnessTable(&unk_10B2678, v5);
  v7 = type metadata accessor for ToolbarItem(255, (char *)&type metadata for () + 8, v5, WitnessTable);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v7, 0, 0);
  v9 = type metadata accessor for TupleToolbarContent(255, TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleToolbarContent<A>, v9);
}

uint64_t sub_EA4920(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1213440, 1);
}

uint64_t sub_EA4954()
{
  return sub_5C150(&qword_150CF80, (uint64_t *)&unk_150B260, (uint64_t)&protocol conformance descriptor for Button<A>);
}

uint64_t HeightLimitedButtonTextView.init(action:body:trailingView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD v18[4];

  a3();
  v18[0] = a5;
  v18[1] = a6;
  v18[2] = a8;
  v18[3] = a9;
  v15 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)v18);
  result = a4();
  v17 = (_QWORD *)(a7 + *(int *)(v15 + 56));
  *v17 = a1;
  v17[1] = a2;
  return result;
}

uint64_t type metadata accessor for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for HeightLimitedButtonTextView);
}

uint64_t HeightLimitedButtonTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[16];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD v66[7];

  v55 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F88);
  v5 = type metadata accessor for ModifiedContent(255, v2, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FixedSizeLayout);
  v53 = *(_QWORD *)(a1 + 24);
  v7 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v53, 0, 0);
  v9 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v10 = type metadata accessor for ZStack(255, v9);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _CompositingGroupEffect);
  v66[4] = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
  v66[5] = &protocol witness table for _CompositingGroupEffect;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v66[0] = type metadata accessor for Button(255, v11, WitnessTable);
  v66[1] = type metadata accessor for PlainButtonStyle(255);
  v66[2] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v66[0]);
  v66[3] = sub_EA4E74();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v14 = swift_getTupleTypeMetadata2(255, v6, OpaqueTypeMetadata2, 0, 0);
  v49 = type metadata accessor for TupleView(255, v14);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v49);
  v15 = type metadata accessor for ViewThatFits(0, v49, v48);
  v52 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v45 = (char *)&v44 - v16;
  v17 = type metadata accessor for ModifiedContent(0, v2, &type metadata for _HiddenModifier);
  v51 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin();
  v19 = (char *)&v44 - v18;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v15);
  v47 = type metadata accessor for _OverlayModifier(255, v15, v46);
  v20 = type metadata accessor for ModifiedContent(0, v17, v47);
  v50 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin();
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin();
  v25 = (char *)&v44 - v24;
  v26 = v7;
  v27 = *(_QWORD *)(v7 + 32);
  v28 = v2;
  v29 = v2;
  v30 = v54;
  v31 = View.hidden()(v29, v27, v23);
  v32 = static Axis.Set.vertical.getter(v31);
  v57 = v28;
  v58 = v53;
  v33 = *(_QWORD *)(v26 + 40);
  v59 = v27;
  v60 = v33;
  v61 = v30;
  v34 = v45;
  v35 = ViewThatFits.init(in:content:)(v32, sub_EA54AC, v56, v49, v48);
  v36 = static Alignment.center.getter(v35);
  v38 = v37;
  v39 = sub_EA587C();
  v64 = v27;
  v65 = v39;
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  View.overlay<A>(_:alignment:)(v34, v36, v38, v17, v15, v40, v46);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v15);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v17);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v47);
  v62 = v40;
  v63 = v41;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  sub_505E64((uint64_t)v22, v20, (uint64_t)v25);
  v42 = *(void (**)(char *, uint64_t))(v50 + 8);
  v42(v22, v20);
  sub_4FF1F4((uint64_t)v25, v20, v55);
  return ((uint64_t (*)(char *, uint64_t))v42)(v25, v20);
}

unint64_t sub_EA4E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150ACA8;
  if (!qword_150ACA8)
  {
    v1 = type metadata accessor for PlainButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PlainButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_150ACA8);
  }
  return result;
}

uint64_t sub_EA4EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  char *v54;
  uint64_t (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[16];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[6];
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t WitnessTable;
  void *v93;

  v74 = a5;
  v73 = a3;
  v57 = a1;
  v77 = a6;
  v9 = type metadata accessor for PlainButtonStyle(0);
  v76 = *(_QWORD *)(v9 - 8);
  v10 = v9;
  v64 = v9;
  __chkstk_darwin();
  v75 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v14 = type metadata accessor for ZStack(255, v13);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _CompositingGroupEffect);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v14);
  v93 = &protocol witness table for _CompositingGroupEffect;
  v68 = v15;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v16 = type metadata accessor for Button(0, v15, v69);
  v72 = *(_QWORD *)(v16 - 8);
  v65 = v16;
  __chkstk_darwin();
  v66 = (char *)&v57 - v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v16);
  v63 = v18;
  v62 = sub_EA4E74();
  v88 = (char *)v16;
  v89 = v10;
  v90 = v18;
  v91 = v62;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v88, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v71 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v61 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (uint64_t)&v57 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F88);
  v22 = type metadata accessor for ModifiedContent(0, a2, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v25 = (char *)&v57 - v24;
  v26 = type metadata accessor for ModifiedContent(0, v22, &type metadata for _FixedSizeLayout);
  v78 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v30 = (char *)&v57 - v29;
  v58 = (char *)&v57 - v29;
  View.lineLimit(_:)(0, 1, a2, a4);
  v31 = sub_EA62C8();
  v87[4] = a4;
  v87[5] = v31;
  v32 = a4;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  View.fixedSize(horizontal:vertical:)(0, 1, v22, v33);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v87[2] = v33;
  v87[3] = &protocol witness table for _FixedSizeLayout;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  sub_505E64((uint64_t)v28, v26, (uint64_t)v30);
  v60 = *(void (**)(char *, uint64_t))(v78 + 8);
  v60(v28, v26);
  v34 = v73;
  v88 = (char *)a2;
  v89 = v73;
  v35 = v74;
  v90 = v32;
  v91 = v74;
  v36 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v88);
  v37 = (uint64_t *)(v57 + *(int *)(v36 + 56));
  v38 = *v37;
  v39 = v37[1];
  v80 = a2;
  v81 = v34;
  v82 = v32;
  v83 = v35;
  v84 = v57;
  v40 = swift_retain();
  v41 = v66;
  v42 = Button.init(action:label:)(v38, v39, sub_EA6314, v79, v68, v69, v40);
  v43 = v75;
  PlainButtonStyle.init()(v42);
  v44 = (uint64_t)v61;
  v45 = v65;
  v46 = v64;
  v47 = v63;
  v48 = v62;
  View.buttonStyle<A>(_:)(v43, v65, v64, v63, v62);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v46);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v45);
  v88 = (char *)v45;
  v89 = v46;
  v90 = v47;
  v91 = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v88, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v50 = v67;
  v51 = OpaqueTypeMetadata2;
  sub_505E64(v44, OpaqueTypeMetadata2, v67);
  v52 = v71;
  v53 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v53(v44, v51);
  v54 = v58;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v28, v58, v26);
  v88 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v44, v50, v51);
  v89 = v44;
  v87[0] = v26;
  v87[1] = v51;
  v85 = v59;
  v86 = OpaqueTypeConformance2;
  sub_2B7F28((uint64_t *)&v88, 2uLL, (uint64_t)v87);
  v53(v50, v51);
  v55 = (uint64_t (*)(char *, uint64_t))v60;
  v60(v54, v26);
  v53(v44, v51);
  return v55(v28, v26);
}

uint64_t sub_EA54AC()
{
  return sub_EA0618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_EA4EBC);
}

uint64_t sub_EA54B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t WitnessTable;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;

  v26 = a4;
  v27 = a5;
  v23 = a3;
  v25 = a1;
  v28 = a6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v9 = type metadata accessor for ZStack(0, v8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v23 - v11;
  v13 = type metadata accessor for ModifiedContent(0, v9, &type metadata for _CompositingGroupEffect);
  v24 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin();
  v18 = (char *)&v23 - v17;
  v19 = static HorizontalAlignment.trailing.getter(v16);
  static VerticalAlignment.lastTextBaseline.getter();
  v29 = a2;
  v30 = v23;
  v31 = v26;
  v32 = v27;
  v33 = v25;
  ZStack.init(alignment:content:)(v19);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  View.compositingGroup()(v9, WitnessTable);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v34 = WitnessTable;
  v35 = &protocol witness table for _CompositingGroupEffect;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  sub_505E64((uint64_t)v15, v13, (uint64_t)v18);
  v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v15, v13);
  sub_4FF1F4((uint64_t)v18, v13, v28);
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v13);
}

uint64_t sub_EA56CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  _QWORD v28[4];
  _QWORD v29[2];
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v28[1] = a6;
  v28[0] = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)v28 - v13;
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)v28 - v19;
  sub_505E64(v21, v22, (uint64_t)v28 - v19);
  v30 = (char *)a2;
  v31 = (char *)a3;
  v32 = a4;
  v33 = a5;
  v23 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v30);
  sub_505E64(a1 + *(int *)(v23 + 52), a3, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v20, a2);
  v30 = v18;
  v24 = v28[0];
  (*(void (**)(char *, char *, uint64_t))(v28[0] + 16))(v12, v14, a3);
  v31 = v12;
  v29[0] = a2;
  v29[1] = a3;
  v28[2] = a4;
  v28[3] = a5;
  sub_2B7F28((uint64_t *)&v30, 2uLL, (uint64_t)v29);
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v14, a3);
  v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v20, a2);
  v25(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v26)(v18, a2);
}

unint64_t sub_EA587C()
{
  unint64_t result;

  result = qword_150D298[0];
  if (!qword_150D298[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, qword_150D298);
  }
  return result;
}

uint64_t sub_EA58C0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of HeightLimitedButtonTextView.body>>, 1);
}

uint64_t sub_EA58F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 3, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_EA5990(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    v18 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v16;
    v18[1] = v17;
  }
  swift_retain(v17);
  return v4;
}

double sub_EA5A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double result;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)&dword_8
                                               + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8))).n128_u64[0];
  return result;
}

uint64_t sub_EA5B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  return a1;
}

uint64_t sub_EA5BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_EA5C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_EA5CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_OWORD *)v14 = *(_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFF8);
  swift_release(v15);
  return a1;
}

uint64_t sub_EA5D7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_EA5E1C + 4 * byte_10B26D0[v15]))();
  }
}

void sub_EA5EC4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_EA5FE0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xEA6070);
}

void sub_EA5FE8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xEA5FF0);
  JUMPOUT(0xEA6070);
}

void sub_EA6034()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xEA6070);
}

void sub_EA603C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xEA6070);
}

uint64_t sub_EA6044(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0xEA6070);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0xEA6050);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

uint64_t sub_EA6088(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[6];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _HiddenModifier);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F88);
  v5 = type metadata accessor for ModifiedContent(255, v1, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FixedSizeLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v1, v2, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v9 = type metadata accessor for ZStack(255, v8);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _CompositingGroupEffect);
  v21[4] = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v9);
  v21[5] = &protocol witness table for _CompositingGroupEffect;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v21[0] = type metadata accessor for Button(255, v10, WitnessTable);
  v21[1] = type metadata accessor for PlainButtonStyle(255);
  v21[2] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v21[0]);
  v21[3] = sub_EA4E74();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, v21, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v13 = swift_getTupleTypeMetadata2(255, v6, OpaqueTypeMetadata2, 0, 0);
  v14 = type metadata accessor for TupleView(255, v13);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v14);
  v16 = type metadata accessor for ViewThatFits(255, v14, v15);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v16);
  v18 = type metadata accessor for _OverlayModifier(255, v16, v17);
  v19 = type metadata accessor for ModifiedContent(255, v3, v18);
  sub_EA587C();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v18);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
}

unint64_t sub_EA62C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508F80;
  if (!qword_1508F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F88);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1508F80);
  }
  return result;
}

uint64_t sub_EA6314()
{
  return sub_EA0618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_EA54B8);
}

uint64_t sub_EA6320()
{
  return sub_EA0618((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_EA56CC);
}

uint64_t MoreLabel.init(color:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;

  v4 = type metadata accessor for MoreLabel(0);
  v5 = (_QWORD *)((char *)a2 + *(int *)(v4 + 20));
  *v5 = swift_getKeyPath(&unk_10B2770);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (char *)a2 + *(int *)(v4 + 24);
  result = swift_getKeyPath(&unk_10B27A0);
  *(_QWORD *)v7 = result;
  v7[8] = 0;
  *a2 = a1;
  return result;
}

uint64_t type metadata accessor for MoreLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_150D3D8;
  if (!qword_150D3D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoreLabel);
  return result;
}

uint64_t MoreLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  _QWORD *v121;
  __int128 v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  char v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v127 = a1;
  type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin();
  v126 = (char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for BlendMode(0);
  v129 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin();
  v130 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D320);
  __chkstk_darwin();
  v124 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for Text.LineStyle.Pattern(0);
  *(_QWORD *)&v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin();
  v120 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F98);
  __chkstk_darwin();
  v106 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA0);
  __chkstk_darwin();
  v8 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA8);
  __chkstk_darwin();
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D328);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin();
  v107 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D330);
  __chkstk_darwin();
  v108 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D338);
  __chkstk_darwin();
  v109 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D340);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin();
  v114 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D348);
  __chkstk_darwin();
  v115 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D350);
  __chkstk_darwin();
  v128 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = Int.seconds.getter(44);
  v18 = LocalizedStringKey.init(stringLiteral:)(1701998413, 0xE400000000000000);
  v19 = Text.init(_:tableName:bundle:comment:)(v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = enum case for Text.Case.uppercase(_:);
  v27 = type metadata accessor for Text.Case(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v8, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v27);
  KeyPath = swift_getKeyPath(&unk_10B27D0);
  v30 = (uint64_t)v106;
  sub_5C238((uint64_t)v8, (uint64_t)&v106[*(int *)(v5 + 28)], &qword_1508FA0);
  *(_QWORD *)v30 = KeyPath;
  v31 = v105;
  sub_5C238(v30, (uint64_t)&v10[*(int *)(v105 + 36)], &qword_1508F98);
  *(_QWORD *)v10 = v19;
  *((_QWORD *)v10 + 1) = v21;
  v10[16] = v25;
  *((_QWORD *)v10 + 3) = v23;
  sub_AF8D8(v19, v21, v25);
  swift_bridgeObjectRetain();
  sub_56024(v30, &qword_1508F98);
  sub_56024((uint64_t)v8, &qword_1508FA0);
  sub_AF8E8(v19, v21, v25);
  swift_bridgeObjectRelease();
  v33 = static Font.Weight.bold.getter(v32);
  v34 = sub_E25CC4();
  v35 = v107;
  View.fontWeight(_:)(*(_QWORD *)&v33, 0, v31, v34);
  v36 = sub_56024((uint64_t)v10, &qword_1508FA8);
  v37 = static Font.footnote.getter(v36);
  v38 = swift_getKeyPath(&unk_10B2800);
  v39 = v112;
  v40 = (uint64_t)v108;
  v41 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v108, v35, v113);
  v42 = (uint64_t *)(v40 + *(int *)(v110 + 36));
  *v42 = v38;
  v42[1] = v37;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v41);
  v43 = v121;
  v44 = *v121;
  v45 = swift_getKeyPath(&unk_10B2830);
  v46 = v109;
  sub_5C238(v40, v109, &qword_150D330);
  v47 = v111;
  v48 = (uint64_t *)(v46 + *(int *)(v111 + 36));
  *v48 = v45;
  v48[1] = v44;
  swift_retain();
  sub_56024(v40, &qword_150D330);
  v49 = (char *)v43 + *(int *)(type metadata accessor for MoreLabel(0) + 24);
  v50 = *(_QWORD *)v49;
  LOBYTE(v45) = v49[8];
  sub_270050(*(_QWORD *)v49, v45);
  LOBYTE(v30) = sub_E42E20(v50, v45);
  v51 = sub_270154(v50, v45);
  v52 = v120;
  static Text.LineStyle.Pattern.solid.getter(v51);
  v53 = sub_EA715C();
  v54 = v114;
  View.underline(_:pattern:color:)(v30 & 1, v52, 0, v47, v53);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v52, v123);
  v55 = sub_56024(v46, &qword_150D338);
  v56 = static Edge.Set.leading.getter(v55);
  LOBYTE(v52) = v56;
  v57 = EdgeInsets.init(_all:)(v56, v17);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = v117;
  v65 = (uint64_t)v115;
  v66 = v118;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v115, v54, v118);
  v67 = v65 + *(int *)(v116 + 36);
  *(_BYTE *)v67 = (_BYTE)v52;
  *(double *)(v67 + 8) = v57;
  *(_QWORD *)(v67 + 16) = v59;
  *(_QWORD *)(v67 + 24) = v61;
  *(_QWORD *)(v67 + 32) = v63;
  *(_BYTE *)(v67 + 40) = 0;
  v68 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v54, v66);
  v69 = static Edge.Set.top.getter(v68);
  LOBYTE(v52) = v69;
  v70 = EdgeInsets.init(_all:)(v69, 4.0);
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v77 = v128;
  sub_5C238(v65, v128, &qword_150D348);
  v78 = v77 + *(int *)(v119 + 36);
  *(_BYTE *)v78 = (_BYTE)v52;
  *(double *)(v78 + 8) = v70;
  *(_QWORD *)(v78 + 16) = v72;
  *(_QWORD *)(v78 + 24) = v74;
  *(_QWORD *)(v78 + 32) = v76;
  *(_BYTE *)(v78 + 40) = 0;
  sub_56024(v65, &qword_150D348);
  v123 = static VerticalAlignment.center.getter(v79);
  sub_EA6DAC((uint64_t)&v132, v17);
  v80 = v132;
  v122 = v133;
  v81 = v134;
  v82 = v135;
  v121 = v136;
  LOBYTE(v64) = v137;
  v83 = v138;
  LOBYTE(v23) = v139;
  v84 = v140;
  v85 = v141;
  v86 = v142;
  v87 = v129;
  v89 = v130;
  v88 = v131;
  (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v130, enum case for BlendMode.destinationOut(_:), v131);
  v90 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v91 = (uint64_t)v126;
  v90(v126, v89, v88);
  v92 = v124;
  sub_EA728C(v91, (uint64_t)&v124[*(int *)(v125 + 36)]);
  *(_QWORD *)v92 = v123;
  *((_QWORD *)v92 + 1) = 0;
  v92[16] = 0;
  *((_QWORD *)v92 + 3) = v80;
  *((_OWORD *)v92 + 2) = v122;
  *((_QWORD *)v92 + 6) = v81;
  *((_QWORD *)v92 + 7) = v82;
  *((_QWORD *)v92 + 8) = v121;
  v92[72] = v64;
  *((_QWORD *)v92 + 10) = v83;
  v92[88] = v23;
  *((_QWORD *)v92 + 12) = v84;
  *((_QWORD *)v92 + 13) = v85;
  *((_QWORD *)v92 + 14) = v86;
  v93 = (uint64_t)v92;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_EA72D0(v91);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v131);
  swift_release();
  swift_bridgeObjectRelease();
  v95 = static Alignment.center.getter(v94);
  v97 = v96;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D368);
  v99 = v127;
  v100 = v127 + *(int *)(v98 + 36);
  sub_5C238(v93, v100, &qword_150D320);
  v101 = (uint64_t *)(v100 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150D370) + 36));
  *v101 = v95;
  v101[1] = v97;
  v102 = v128;
  sub_5C238(v128, v99, &qword_150D350);
  sub_56024(v93, &qword_150D320);
  return sub_56024(v102, &qword_150D350);
}

double sub_EA6DAC@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  _QWORD *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v40 - v8;
  type metadata accessor for MoreLabel(0);
  sub_E42BB0((uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LayoutDirection.rightToLeft(_:), v4);
  v10 = static LayoutDirection.== infix(_:_:)(v9, v7);
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v11(v9, v4);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D008);
  v13 = swift_allocObject(v12, 48, 7);
  v14 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_105F890;
  if ((v10 & 1) != 0)
  {
    v15 = static Color.black.getter(v13);
    *(_QWORD *)(v14 + 32) = v15;
    v16 = static Color.clear.getter(v15);
  }
  else
  {
    v17 = static Color.clear.getter(v13);
    *(_QWORD *)(v14 + 32) = v17;
    v16 = static Color.black.getter(v17);
  }
  *(_QWORD *)(v14 + 40) = v16;
  v45 = v14;
  specialized Array._endMutation()(v16);
  Gradient.init(colors:)(v45);
  v19 = static UnitPoint.leading.getter(v18);
  v21 = v20;
  v22 = static UnitPoint.trailing.getter();
  v24 = LinearGradient.init(gradient:startPoint:endPoint:)(&v41, v19, v21, v22, v23);
  v25 = v41;
  v40 = v42;
  v26 = a2;
  v27 = v43;
  v28 = v44;
  v29 = static Alignment.center.getter(v24);
  v31 = _FrameLayout.init(width:height:alignment:)(&v45, *(_QWORD *)&v26, 0, 0, 1, v29, v30);
  v32 = v45;
  v33 = v46;
  v34 = v47;
  v35 = v48;
  v36 = v49;
  v37 = v50;
  v38 = static Color.black.getter(v31);
  *(_QWORD *)a1 = v25;
  result = *(double *)&v40;
  *(_OWORD *)(a1 + 8) = v40;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v28;
  *(_QWORD *)(a1 + 40) = v32;
  *(_BYTE *)(a1 + 48) = v33;
  *(_QWORD *)(a1 + 56) = v34;
  *(_BYTE *)(a1 + 64) = v35;
  *(_QWORD *)(a1 + 72) = v36;
  *(_QWORD *)(a1 + 80) = v37;
  *(_QWORD *)(a1 + 88) = v38;
  return result;
}

uint64_t sub_EA6FBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_EA6FE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_EA7018()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_EA7038(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA0);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v3, &qword_1508FA0);
  return EnvironmentValues.textCase.setter(v3);
}

uint64_t sub_EA70BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_EA70E4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_EA710C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_EA7134(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_EA715C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D358;
  if (!qword_150D358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D338);
    sub_EA71E0();
    sub_5C150(&qword_150AC70, (uint64_t *)&unk_150BBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D358);
  }
  return result;
}

unint64_t sub_EA71E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150D360;
  if (!qword_150D360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D330);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508FA8);
    v2[1] = sub_E25CC4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D360);
  }
  return result;
}

uint64_t sub_EA728C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_EA72D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_EA730C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MoreLabel.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    sub_270050(*(_QWORD *)v16, v18);
    *(_QWORD *)v15 = v17;
    v15[8] = v18;
  }
  return a1;
}

uint64_t destroy for MoreLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  return sub_270154(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

_QWORD *initializeWithCopy for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_270050(*(_QWORD *)v14, v16);
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  return a1;
}

_QWORD *assignWithCopy for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_56024((uint64_t)a1 + v6, (uint64_t *)&unk_1506560);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_270050(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  sub_270154(v17, v18);
  return a1;
}

_QWORD *initializeWithTake for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

_QWORD *assignWithTake for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_56024((uint64_t)a1 + v6, (uint64_t *)&unk_1506560);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  sub_270154(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EA7880);
}

uint64_t sub_EA7880(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D378);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EA790C);
}

char *sub_EA790C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D378);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_EA7984(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_E64C04(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

unint64_t sub_EA7A08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D418;
  if (!qword_150D418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D368);
    sub_EA7A8C();
    sub_5C150(&qword_150D430, &qword_150D370, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D418);
  }
  return result;
}

unint64_t sub_EA7A8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D420;
  if (!qword_150D420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D350);
    sub_EA7AF8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D420);
  }
  return result;
}

unint64_t sub_EA7AF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_150D428;
  if (!qword_150D428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D348);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D338);
    v2[1] = sub_EA715C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.underline(_:pattern:color:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D428);
  }
  return result;
}

double Gradient.startPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void Gradient.startPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

void Gradient.endPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 48) = a1;
  *(double *)(v2 + 56) = a2;
}

uint64_t Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(double *)(a5 + 56) = a9;
  return result;
}

char *sub_EA7BB8(void *a1)
{
  double *v1;
  double *v2;
  double v4;
  _QWORD *v5;
  NSArray v6;
  Class isa;
  double v8;
  Class v9;
  uint64_t v10;
  char *result;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  char v24[8];
  char v25[8];
  uint64_t v26;
  objc_class *v27;

  v2 = v1;
  objc_msgSend(a1, "setType:", *(_QWORD *)v1);
  sub_5C090((uint64_t)(v1 + 2), (uint64_t)v25, &qword_150D4F8);
  sub_5C090((uint64_t)v25, (uint64_t)&v26, &qword_150D4F8);
  if (v26)
  {
    v5 = sub_DD7D2C(v26);
    sub_4E684(0, &qword_1507268, NSNumber_ptr);
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v6.super.isa = 0;
  }
  objc_msgSend(a1, "setLocations:", v6.super.isa, v4);

  sub_5C090((uint64_t)(v2 + 3), (uint64_t)v24, &qword_150D500);
  sub_5C090((uint64_t)v24, (uint64_t)&v27, &qword_150D500);
  isa = v27;
  if (v27)
  {
    sub_4E684(0, &qword_1507560, CAMediaTimingFunction_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(a1, "setInterpolations:", isa);

  v9 = (Class)*((_QWORD *)v2 + 1);
  if (!v9)
    goto LABEL_24;
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)v9 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_9;
LABEL_22:
    swift_bridgeObjectRelease(v9);
    v13 = _swiftEmptyArrayStorage;
LABEL_23:
    v9 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(v13).n128_u64[0];
LABEL_24:
    objc_msgSend(a1, "setColors:", v9, v8);

    objc_msgSend(a1, "setStartPoint:", v2[4], v2[5]);
    return (char *)objc_msgSend(a1, "setEndPoint:", v2[6], v2[7]);
  }
  if ((uint64_t)v9 >= 0)
    v20 = (unint64_t)v9 & 0xFFFFFFFFFFFFFF8;
  else
    v20 = *((_QWORD *)v2 + 1);
  swift_bridgeObjectRetain();
  v10 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v10)
    goto LABEL_22;
LABEL_9:
  v23 = _swiftEmptyArrayStorage;
  result = sub_DDECA0(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v12 = 0;
    v13 = v23;
    do
    {
      if (((unint64_t)v9 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
      else
        v14 = *((id *)v9 + v12 + 4);
      v15 = v14;
      v16 = objc_msgSend(v14, "CGColor");
      _s3__C7CGColorCMa_1(0);
      v22 = v17;

      *(_QWORD *)&v21 = v16;
      v23 = v13;
      v19 = v13[2];
      v18 = v13[3];
      if (v19 >= v18 >> 1)
      {
        sub_DDECA0((char *)(v18 > 1), v19 + 1, 1);
        v13 = v23;
      }
      ++v12;
      v13[2] = v19 + 1;
      sub_50CA4(&v21, &v13[4 * v19 + 4]);
    }
    while (v10 != v12);
    swift_bridgeObjectRelease(v9);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

id Gradient.View.__allocating_init(configuration:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;

  v2 = v1;
  v4 = (char *)objc_allocWithZone(v2);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = *(_OWORD *)(a1 + 48);
  v8 = *(_OWORD *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_EA8064((void **)a1);
  v14.receiver = v4;
  v14.super_class = v2;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_EA7BB8(v12);
  sub_B91B60(a1);

  return v9;
}

id Gradient.View.init(configuration:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  __int128 v6;
  __int128 v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v7;
  sub_EA8064((void **)a1);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = objc_msgSend(v8, "layer");
  v10 = objc_opt_self(CAGradientLayer);
  v11 = (void *)swift_dynamicCastObjCClassUnconditional(v9, v10, 0, 0, 0);
  sub_EA7BB8(v11);
  sub_B91B60(a1);

  return v8;
}

void **sub_EA8064(void **a1)
{
  void *v2;
  id v3;

  v2 = *a1;
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void Gradient.View.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/Gradient.swift", 26, 2, 52, 0);
  __break(1u);
}

uint64_t static Gradient.View.layerClass.getter()
{
  return sub_4E684(0, (unint64_t *)&qword_15088E0, CAGradientLayer_ptr);
}

uint64_t Gradient.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  id v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Gradient.View.typedConfiguration.setter(uint64_t a1)
{
  char *v1;
  char *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  void *v18;
  char v20[24];
  _OWORD v21[4];
  _OWORD v22[4];
  _OWORD v23[4];

  v3 = &v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration], v20, 1, 0);
  v4 = *((_OWORD *)v3 + 1);
  v23[0] = *(_OWORD *)v3;
  v23[1] = v4;
  v5 = *((_OWORD *)v3 + 3);
  v23[2] = *((_OWORD *)v3 + 2);
  v23[3] = v5;
  v7 = *(void **)v3;
  v6 = *((_QWORD *)v3 + 1);
  v8 = *((_QWORD *)v3 + 2);
  v9 = *((_QWORD *)v3 + 3);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *((_OWORD *)v3 + 1) = v10;
  v11 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v3 + 3) = v11;
  sub_EA8064((void **)v23);
  sub_EA8064((void **)a1);

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v9);
  v12 = *((_OWORD *)v3 + 1);
  v22[0] = *(_OWORD *)v3;
  v22[1] = v12;
  v13 = *((_OWORD *)v3 + 3);
  v22[2] = *((_OWORD *)v3 + 2);
  v22[3] = v13;
  sub_EA8064((void **)v22);
  LOBYTE(v6) = _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v23);
  sub_B91B60((uint64_t)v22);
  if ((v6 & 1) == 0)
  {
    v14 = *((_OWORD *)v3 + 1);
    v21[0] = *(_OWORD *)v3;
    v21[1] = v14;
    v15 = *((_OWORD *)v3 + 3);
    v21[2] = *((_OWORD *)v3 + 2);
    v21[3] = v15;
    sub_EA8064((void **)v21);
    v16 = objc_msgSend(v1, "layer");
    v17 = objc_opt_self(CAGradientLayer);
    v18 = (void *)swift_dynamicCastObjCClassUnconditional(v16, v17, 0, 0, 0);
    sub_EA7BB8(v18);

    sub_B91B60((uint64_t)v21);
  }
  sub_B91B60(a1);
  return sub_B91B60((uint64_t)v23);
}

void (*Gradient.View.typedConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v10;

  v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v3 + 24, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v3[16] = *(_QWORD *)v4;
  v3[17] = v5;
  v3 += 16;
  v3[2] = v8;
  v3[3] = v7;
  v9 = *(_OWORD *)(v4 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
  *((_OWORD *)v3 + 3) = v9;
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_EA8444;
}

void sub_EA8444(uint64_t *a1, char a2)
{
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *a1;
  v3 = (_OWORD *)(*a1 + 128);
  v4 = *(_OWORD *)(*a1 + 144);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)v2 = *v3;
    *(_OWORD *)(v2 + 16) = v4;
    v5 = v3[3];
    *(_OWORD *)(v2 + 32) = v3[2];
    *(_OWORD *)(v2 + 48) = v5;
    sub_EA8064((void **)v2);
    Gradient.View.typedConfiguration.setter(v2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v2 + 64) = *v3;
    *(_OWORD *)(v2 + 80) = v4;
    v6 = v3[3];
    *(_OWORD *)(v2 + 96) = v3[2];
    *(_OWORD *)(v2 + 112) = v6;
    Gradient.View.typedConfiguration.setter(v2 + 64);
  }
  free((void *)v2);
}

id sub_EA8550(_OWORD *a1)
{
  objc_class *v1;
  __int128 v3;
  __int128 v4;
  char *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;
  _OWORD v15[4];

  v3 = a1[1];
  v15[0] = *a1;
  v15[1] = v3;
  v4 = a1[3];
  v15[2] = a1[2];
  v15[3] = v4;
  v5 = (char *)objc_allocWithZone(v1);
  v6 = &v5[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v7 = a1[1];
  *(_OWORD *)v6 = *a1;
  *((_OWORD *)v6 + 1) = v7;
  v8 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v8;
  sub_EA8064((void **)v15);
  v14.receiver = v5;
  v14.super_class = v1;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_EA7BB8(v12);
  sub_B91B60((uint64_t)v15);

  return v9;
}

uint64_t sub_EA8640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  id v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v3, v11, 0, 0);
  v5 = *(void **)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v7 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  v9 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_EA86C4(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  v2 = a1[3];
  v4[2] = a1[2];
  v4[3] = v2;
  return Gradient.View.typedConfiguration.setter((uint64_t)v4);
}

uint64_t sub_EA86F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v10;
  _BYTE v12[24];

  a1[3] = (uint64_t)&type metadata for Gradient;
  a1[4] = sub_EA8FF0();
  v3 = swift_allocObject(&unk_13CC270, 80, 7);
  *a1 = v3;
  v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v12, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)v4;
  *(_QWORD *)(v3 + 24) = v5;
  *(_QWORD *)(v3 + 32) = v8;
  *(_QWORD *)(v3 + 40) = v7;
  v9 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 64) = v9;
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_EA87A8(_QWORD *a1)
{
  uint64_t v2;
  _OWORD v4[4];
  _BYTE v5[40];
  _OWORD v6[4];

  sub_55D1C((uint64_t)a1, (uint64_t)v5);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E20);
  swift_dynamicCast(v4, v5, v2, &type metadata for Gradient, 7);
  v6[0] = v4[0];
  v6[1] = v4[1];
  v6[2] = v4[2];
  v6[3] = v4[3];
  Gradient.View.typedConfiguration.setter((uint64_t)v6);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void (*sub_EA8830(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;

  v3 = malloc(0x158uLL);
  *a1 = v3;
  v3[42] = v1;
  v3[32] = &type metadata for Gradient;
  v3[33] = sub_EA8FF0();
  v4 = swift_allocObject(&unk_13CC270, 80, 7);
  v3[29] = v4;
  v5 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v5, v3 + 39, 0, 0);
  v7 = *(void **)v5;
  v6 = *(_QWORD *)(v5 + 8);
  v9 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v8;
  v10 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 64) = v10;
  swift_bridgeObjectRetain();
  v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_EA8900;
}

void sub_EA8900(void **a1, char a2)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *a1;
  v3 = (char *)*a1 + 128;
  v4 = (uint64_t)*a1 + 192;
  v5 = (char *)*a1 + 232;
  if ((a2 & 1) != 0)
  {
    sub_55D1C((uint64_t)*a1 + 232, (uint64_t)(v2 + 17));
    sub_55D1C((uint64_t)(v2 + 17), v4);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E20);
    swift_dynamicCast(v3, v4, v6, &type metadata for Gradient, 7);
    v7 = v3[1];
    *v2 = *v3;
    v2[1] = v7;
    v8 = v3[3];
    v2[2] = v3[2];
    v2[3] = v8;
    Gradient.View.typedConfiguration.setter((uint64_t)v2);
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)v2 + 34);
  }
  else
  {
    sub_55D1C((uint64_t)*a1 + 232, v4);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E20);
    swift_dynamicCast(v3, v4, v9, &type metadata for Gradient, 7);
    v10 = v3[1];
    v2[4] = *v3;
    v2[5] = v10;
    v11 = v3[3];
    v2[6] = v3[2];
    v2[7] = v11;
    Gradient.View.typedConfiguration.setter((uint64_t)(v2 + 4));
  }
  __swift_destroy_boxed_opaque_existential_1(v5);
  free(v2);
}

id sub_EA8A0C()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  objc_class *v3;
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v1 = v0[1];
  v15 = *v0;
  v16 = v1;
  v2 = v0[3];
  v17 = v0[2];
  v18 = v2;
  v3 = (objc_class *)type metadata accessor for Gradient.View();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = v18;
  v8 = v15;
  v7 = v16;
  *((_OWORD *)v5 + 2) = v17;
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_EA8064((void **)&v15);
  v14.receiver = v4;
  v14.super_class = v3;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_EA7BB8(v12);

  sub_EA8F44(&qword_150D488, (uint64_t)&protocol conformance descriptor for Gradient.View);
  return v9;
}

uint64_t sub_EA8B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(void **)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  v7 = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_EA8B58(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8);
}

uint64_t static Gradient.vertical(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_EA8BC8(a1, a2, a3, a4, (__n128)xmmword_10A9800, (__n128)xmmword_106F240);
}

uint64_t static Gradient.horizontal(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_EA8BC8(a1, a2, a3, a4, (__n128)xmmword_1099460, (__n128)xmmword_10A9810);
}

uint64_t sub_EA8BC8@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>)
{
  NSString *v6;

  a4->n128_u64[0] = (unint64_t)kCAGradientLayerAxial;
  a4->n128_u64[1] = a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  a4[2] = a5;
  a4[3] = a6;
  v6 = kCAGradientLayerAxial;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall Gradient.flip()()
{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 48) = v1;
}

__n128 Gradient.flipped()@<Q0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __int128 v9;
  __n128 v10;

  v2 = v1;
  v4 = *((_QWORD *)v1 + 3);
  v5 = *((_QWORD *)v2 + 2);
  v9 = *v2;
  v10 = (__n128)v2[3];
  v6 = *((_QWORD *)v2 + 4);
  v7 = *((_QWORD *)v2 + 5);
  sub_EA8064((void **)v2);
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  result = v10;
  *(__n128 *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  return result;
}

BOOL _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  id v24;
  id v25;

  v4 = *(void **)a1;
  v24 = *(id *)a2;
  v25 = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  if (v5 == v8 && v7 == v9)
  {
    sub_5F430(&v25);
    sub_5F430(&v24);
    swift_bridgeObjectRelease_n(v7, 2);
    sub_5F12C(&v24);
    sub_5F12C(&v25);
LABEL_8:
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a2 + 8);
    if (v14)
    {
      if (!v15)
        return 0;
      swift_bridgeObjectRetain();
      v16 = swift_bridgeObjectRetain();
      v17 = sub_DD8344(v16, v15);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) == 0)
        return 0;
    }
    else if (v15)
    {
      return 0;
    }
    v18 = *(_QWORD *)(a1 + 16);
    v19 = *(_QWORD *)(a2 + 16);
    if (v18)
    {
      if (!v19 || !sub_DD8358(v18, v19))
        return 0;
    }
    else if (v19)
    {
      return 0;
    }
    v20 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a2 + 24);
    if (v20)
    {
      if (!v21)
        return 0;
      swift_bridgeObjectRetain();
      v22 = swift_bridgeObjectRetain();
      v23 = sub_DD83C4(v22, v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v21);
      if ((v23 & 1) == 0)
        return 0;
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    }
    if (!v21)
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    return 0;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  sub_5F430(&v25);
  sub_5F430(&v24);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  sub_5F12C(&v24);
  sub_5F12C(&v25);
  result = 0;
  if ((v12 & 1) != 0)
    goto LABEL_8;
  return result;
}

unint64_t sub_EA8E88()
{
  unint64_t result;

  result = qword_150D440;
  if (!qword_150D440)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_150D440);
  }
  return result;
}

uint64_t sub_EA8ECC(uint64_t a1)
{
  uint64_t result;

  result = sub_EA8F44(&qword_150D488, (uint64_t)&protocol conformance descriptor for Gradient.View);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for Gradient.View()
{
  return objc_opt_self(_TtCV11MusicCoreUI8Gradient4View);
}

uint64_t sub_EA8F20()
{
  return sub_EA8F44(&qword_150D490, (uint64_t)&protocol conformance descriptor for Gradient.View);
}

uint64_t sub_EA8F44(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Gradient.View();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_EA8F80(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_EA8FAC();
  result = sub_EA8FF0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_EA8FAC()
{
  unint64_t result;

  result = qword_150D4C0;
  if (!qword_150D4C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_150D4C0);
  }
  return result;
}

unint64_t sub_EA8FF0()
{
  unint64_t result;

  result = qword_150D4C8;
  if (!qword_150D4C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_150D4C8);
  }
  return result;
}

uint64_t destroy for Gradient(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

uint64_t sub_EA91DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t *UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor()
{
  if (qword_1506360 != -1)
    swift_once(&qword_1506360, sub_EAC6DC);
  return &static UIImagePickerController.profileImagePickerProperties;
}

int *ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  int *result;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;

  *a9 = swift_getKeyPath(&unk_10B29E0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  swift_storeEnumTagMultiPayload(a9, v21, 0);
  result = (int *)type metadata accessor for ImagePicker(0);
  v23 = (_QWORD *)((char *)a9 + result[7]);
  v24 = result[9];
  v25 = (_QWORD *)((char *)a9 + result[5]);
  *v25 = a1;
  v25[1] = a2;
  v25[2] = a3;
  v26 = (_QWORD *)((char *)a9 + result[6]);
  *v26 = a4;
  v26[1] = a5;
  v26[2] = a6;
  v26[3] = a7;
  v27 = (char *)a9 + result[8];
  *(_QWORD *)v27 = a8;
  *((_QWORD *)v27 + 1) = a10;
  v27[16] = a11;
  *v23 = a12;
  v23[1] = a13;
  *(_QWORD *)((char *)a9 + v24) = a14;
  return result;
}

id ImagePicker.makeUIViewController(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
}

void ImagePicker.updateUIViewController(_:context:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  Class isa;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Class v47;
  Swift::OpaquePointer v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  __int128 v80;
  _QWORD v81[2];

  v3 = v2;
  v77 = a2;
  v72 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v5 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150D508);
  v8 = __chkstk_darwin();
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PHPickerConfiguration(0, v8);
  v73 = *(_QWORD *)(v11 - 8);
  v74 = v11;
  __chkstk_darwin();
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin();
  v76 = (char *)&v70 - v15;
  v75 = type metadata accessor for UTType(0, v14);
  v16 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for ImagePicker(0);
  v20 = v2 + v19[8];
  v21 = *(void **)v20;
  v22 = *(_QWORD *)(v20 + 8);
  LOBYTE(v20) = *(_BYTE *)(v20 + 16);
  v78 = v21;
  v79 = v22;
  LOBYTE(v80) = v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  Binding.wrappedValue.getter(v81, v23);
  if (LOBYTE(v81[0]) != 1)
    return;
  v24 = objc_msgSend(a1, "presentedViewController");

  if (v24)
    return;
  v71 = a1;
  v25 = v3 + v19[6];
  v26 = *(_QWORD *)(v25 + 8);
  v78 = *(void **)v25;
  v79 = v26;
  v80 = *(_OWORD *)(v25 + 16);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D518);
  Binding.wrappedValue.getter(v81, v27);
  if (v81[0])
  {
    if (v81[0] != 1)
    {
      v28 = v71;
      if (v81[0] != 2)
      {
        v66 = (void *)v81[1];
        v67 = objc_msgSend(v71, "view", swift_bridgeObjectRelease().n128_f64[0]);
        if (v67)
        {
          v68 = v67;
          v69 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
          objc_msgSend(v68, "setBackgroundColor:", v69);

          return;
        }
        goto LABEL_20;
      }
      v29 = objc_msgSend(v71, "view");
      if (v29)
      {
        v30 = v29;
        v31 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v30, "setBackgroundColor:", v31);

        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D520);
        *(_OWORD *)(swift_allocObject(v32, ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72), *(unsigned __int8 *)(v16 + 80) | 7)+ 16) = xmmword_105B360;
        static UTType.image.getter();
        v33 = objc_allocWithZone((Class)UIDocumentPickerViewController);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v35 = objc_msgSend(v33, "initForOpeningContentTypes:asCopy:", isa, 1, swift_bridgeObjectRelease().n128_f64[0]);

        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D528);
        UIViewControllerRepresentableContext.coordinator.getter(&v78, v36);
        v37 = v78;
        objc_msgSend(v35, "setDelegate:", v78);

        objc_msgSend(v35, "_setAutomaticallyDismissesAfterCompletion:", 0);
        objc_msgSend(v28, "presentViewController:animated:completion:", v35, 1, 0);

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    v49 = v71;
    v50 = objc_msgSend(v71, "view");
    if (!v50)
      goto LABEL_19;
    v51 = v50;
    v52 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v51, "setBackgroundColor:", v52);

    v53 = objc_msgSend((id)objc_opt_self(PHPhotoLibrary), "sharedPhotoLibrary");
    v54 = v76;
    v55 = PHPickerConfiguration.init(photoLibrary:)(v53);
    static PHPickerFilter.images.getter(v55);
    v56 = type metadata accessor for PHPickerFilter(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v10, 0, 1, v56);
    PHPickerConfiguration.filter.setter(v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v72);
    PHPickerConfiguration.preferredAssetRepresentationMode.setter(v7);
    sub_4E684(0, &qword_150D530, PHPickerViewController_ptr);
    v58 = v73;
    v57 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v13, v54, v74);
    v59 = (void *)PHPickerViewController.init(configuration:)(v13);
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D528);
    UIViewControllerRepresentableContext.coordinator.getter(&v78, v60);
    v61 = v78;
    v62 = sub_4DD24(&qword_150D538, type metadata accessor for ImagePicker.Coordinator, (uint64_t)&protocol conformance descriptor for ImagePicker.Coordinator);
    PHPickerViewController.delegate.setter(v61, v62);
    v63 = objc_msgSend(v59, "presentationController");
    if (v63)
    {
      v64 = v63;
      UIViewControllerRepresentableContext.coordinator.getter(&v78, v60);
      v65 = v78;
      objc_msgSend(v64, "setDelegate:", v78);

    }
    objc_msgSend(v49, "presentViewController:animated:completion:", v59, 1, 0);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v76, v57);
  }
  else
  {
    v38 = objc_msgSend(objc_allocWithZone((Class)UIImagePickerController), "init");
    objc_msgSend(v38, "setSourceType:", 1);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D528);
    UIViewControllerRepresentableContext.coordinator.getter(&v78, v39);
    v40 = v78;
    objc_msgSend(v38, "setDelegate:", v78);

    objc_msgSend(v38, "setAllowsEditing:", 1);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
    v42 = swift_allocObject(v41, 48, 7);
    *(_OWORD *)(v42 + 16) = xmmword_105B360;
    v43 = static UTType.image.getter();
    v44 = UTType.identifier.getter(v43);
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v75);
    *(_QWORD *)(v42 + 32) = v44;
    *(_QWORD *)(v42 + 40) = v46;
    v47 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v38, "setMediaTypes:", v47, swift_bridgeObjectRelease().n128_f64[0]);

    v48._rawValue = *(void **)(v3 + v19[9]);
    if (v48._rawValue)
      UIImagePickerController.setProperties(_:)(v48);
    objc_msgSend(v71, "presentViewController:animated:completion:", v38, 1, 0);

  }
}

Swift::Void __swiftcall UIImagePickerController.setProperties(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  id v3;
  void *v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  NSDictionary v34;
  id v35;
  _OWORD v36[2];
  __int128 v37;
  void *v38;
  _BYTE v39[40];

  v3 = objc_msgSend(v1, "_properties");
  v35 = v1;
  if (v3)
  {
    v4 = v3;
    v5 = (_QWORD *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v5 = 0;
  }
  v6 = (char *)a1._rawValue + 64;
  v7 = 1 << *((_BYTE *)a1._rawValue + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *((_QWORD *)a1._rawValue + 8);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v13 = v5;
      if (!v9)
        break;
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      v5 = 0;
      if (v13)
        goto LABEL_26;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_42;
    if (v16 >= v10)
      break;
    v17 = *(_QWORD *)&v6[8 * v16];
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v10)
        break;
      v17 = *(_QWORD *)&v6[8 * v11];
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v10)
          break;
        v17 = *(_QWORD *)&v6[8 * v11];
        if (!v17)
        {
          v18 = v16 + 3;
          if (v18 >= v10)
            break;
          v17 = *(_QWORD *)&v6[8 * v18];
          if (!v17)
          {
            while (1)
            {
              v11 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_44;
              if (v11 >= v10)
                goto LABEL_37;
              v17 = *(_QWORD *)&v6[8 * v11];
              ++v18;
              if (v17)
                goto LABEL_25;
            }
          }
          v11 = v18;
        }
      }
    }
LABEL_25:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
    v5 = 0;
    if (v13)
    {
LABEL_26:
      v19 = *(_BYTE *)(*((_QWORD *)a1._rawValue + 7) + v15);
      v20 = *(_QWORD *)(*((_QWORD *)a1._rawValue + 6) + 16 * v15 + 8);
      *(_QWORD *)&v37 = *(_QWORD *)(*((_QWORD *)a1._rawValue + 6) + 16 * v15);
      *((_QWORD *)&v37 + 1) = v20;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)(&v37, &type metadata for String, &protocol witness table for String);
      v38 = &type metadata for Bool;
      LOBYTE(v37) = v19;
      sub_50CA4(&v37, v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
      v23 = sub_21BFA0((uint64_t)v39);
      v24 = v13[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
        __break(1u);
        return;
      }
      v27 = v22;
      if (v13[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v5 = v13;
          if ((v22 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_DE16CC();
          v5 = v13;
          if ((v27 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_DE09A0(v26, isUniquelyReferenced_nonNull_native);
        v28 = sub_21BFA0((uint64_t)v39);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_45;
        v23 = v28;
        v5 = v13;
        if ((v27 & 1) != 0)
        {
LABEL_7:
          v12 = (_QWORD *)(v5[7] + 32 * v23);
          __swift_destroy_boxed_opaque_existential_1(v12);
          sub_50CA4(v36, v12);
          goto LABEL_8;
        }
      }
      v5[(v23 >> 6) + 8] |= 1 << v23;
      sub_138F24((uint64_t)v39, v5[6] + 40 * v23);
      sub_50CA4(v36, (_OWORD *)(v5[7] + 32 * v23));
      v30 = v5[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_43;
      v5[2] = v32;
LABEL_8:
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_55E40((uint64_t)v39);
    }
  }
LABEL_37:
  v33 = swift_release(a1._rawValue).n128_u64[0];
  if (v5)
  {
    swift_bridgeObjectRetain();
    v34.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v33 = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  else
  {
    v34.super.isa = 0;
  }
  objc_msgSend(v35, "_setProperties:", v34.super.isa, *(double *)&v33);
  swift_bridgeObjectRelease(v5);

}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerController(_:didFinishPickingMediaWithInfo:)(UIImagePickerController _, Swift::OpaquePointer didFinishPickingMediaWithInfo)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSString *v11;
  unint64_t v12;
  char v13;
  NSString *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString *v20;
  unint64_t v21;
  char v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __n128 v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  void (*v50)(id, _QWORD);
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;

  v3 = v2;
  v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)v77 - v9;
  if (*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    v11 = UIImagePickerControllerEditedImage;
    v12 = sub_C327F4((uint64_t)v11);
    if ((v13 & 1) != 0)
    {
      sub_95094(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v12, (uint64_t)&v78);

      if (*((_QWORD *)&v79 + 1))
      {
        sub_50CA4(&v78, &v80);
        goto LABEL_13;
      }
    }
    else
    {
      v78 = 0u;
      v79 = 0u;

    }
    if (*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
    {
      v14 = UIImagePickerControllerOriginalImage;
      v15 = sub_C327F4((uint64_t)v14);
      if ((v16 & 1) != 0)
      {
        sub_95094(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v15, (uint64_t)&v80);
      }
      else
      {
        v80 = 0u;
        v81 = 0u;
      }

      goto LABEL_12;
    }
  }
  else
  {
    v78 = 0u;
    v79 = 0u;
  }
  v80 = 0u;
  v81 = 0u;
LABEL_12:
  sub_56024((uint64_t)&v78, &qword_1508840);
LABEL_13:
  if (!*((_QWORD *)&v81 + 1))
  {
    sub_56024((uint64_t)&v80, &qword_1508840);
LABEL_19:
    *(_QWORD *)&v80 = 0;
    *((_QWORD *)&v80 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v23._countAndFlagsBits = 0xD00000000000002ALL;
    v23._object = (void *)0x800000000110F020;
    String.append(_:)(v23);
    _s3__C7InfoKeyVMa_0(0);
    v25 = v24;
    v26 = sub_4DD24(&qword_150D540, (uint64_t (*)(uint64_t))_s3__C7InfoKeyVMa_0, (uint64_t)&unk_10AA9EC);
    v27._countAndFlagsBits = Dictionary.description.getter(didFinishPickingMediaWithInfo._rawValue, v25, (char *)&type metadata for Any + 8, v26);
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._object = (void *)0x800000000110F050;
    v28._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v28);
    v29 = *((_QWORD *)&v80 + 1);
    v30 = *(void (**)(uint64_t, uint64_t, __n128))(v3
                                                          + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v30)
    {
      v31 = v80;
      v32 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
      v33 = sub_EAC76C();
      v34 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v33, 0, 0);
      *v35 = v31;
      v35[1] = v29;
      v36 = swift_retain();
      v30(v34, 1, v36);
      sub_5C198((uint64_t)v30, v32);
      swift_errorRelease(v34);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  v17 = sub_4E684(0, &qword_150D550, UIImage_ptr);
  if ((swift_dynamicCast(&v78, &v80, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
    goto LABEL_19;
  v18 = (void *)v78;
  if (!*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    v80 = 0u;
    v81 = 0u;
    v37 = (id)v78;
    if (*((_QWORD *)&v81 + 1))
      goto LABEL_27;
LABEL_24:
    sub_56024((uint64_t)&v80, &qword_1508840);
LABEL_29:
    v48 = 1;
    v41 = 0;
    v43 = 0;
    v45 = 0;
    v47 = 0;
    goto LABEL_30;
  }
  v19 = (id)v78;
  v20 = UIImagePickerControllerCropRect;
  v21 = sub_C327F4((uint64_t)v20);
  if ((v22 & 1) != 0)
  {
    sub_95094(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v21, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }

  if (!*((_QWORD *)&v81 + 1))
    goto LABEL_24;
LABEL_27:
  v38 = sub_4E684(0, (unint64_t *)&unk_150D558, NSValue_ptr);
  if ((swift_dynamicCast(&v78, &v80, (char *)&type metadata for Any + 8, v38, 6) & 1) == 0)
    goto LABEL_29;
  v39 = (void *)v78;
  objc_msgSend((id)v78, "CGRectValue");
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  v48 = 0;
LABEL_30:
  *(_QWORD *)&v80 = v41;
  *((_QWORD *)&v80 + 1) = v43;
  *(_QWORD *)&v81 = v45;
  *((_QWORD *)&v81 + 1) = v47;
  v82 = v48;
  v49 = UIImage.centerCropIfNeeded(imageRect:)((uint64_t)&v80);

  v50 = *(void (**)(id, _QWORD))(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v50)
  {
    v51 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
    v52 = v49;
    sub_A9DEC((uint64_t)v50, v51);
    v50(v49, 0);
    sub_5C198((uint64_t)v50, v51);

  }
  v53 = v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_EAC7B0(v53, (uint64_t)v10);
  v54 = &v10[*(int *)(v6 + 24)];
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)&v78 = *(_QWORD *)v54;
  *((_QWORD *)&v78 + 1) = v55;
  v79 = *((_OWORD *)v54 + 1);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D518);
  Binding.wrappedValue.getter(v77, v56);
  v58 = v77[0];
  v57 = (void *)v77[1];
  sub_EAC7F4((uint64_t)v10);
  if (v58 - 1 < 2)
  {
    v59 = -[objc_class presentingViewController](_.super.super.super.super.isa, "presentingViewController");
    if (!v59
      || (v60 = v59,
          v61 = objc_msgSend(v59, "presentingViewController"),
          v60,
          !v61))
    {

      return;
    }
    sub_EAC7B0(v53, (uint64_t)v8);
    v62 = &v8[*(int *)(v6 + 32)];
    v63 = *(_QWORD *)v62;
    v64 = *((_QWORD *)v62 + 1);
    LOBYTE(v62) = v62[16];
    *(_QWORD *)&v78 = v63;
    *((_QWORD *)&v78 + 1) = v64;
    LOBYTE(v79) = (_BYTE)v62;
    LOBYTE(v77[0]) = 0;
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
    Binding.wrappedValue.setter(v77, v65);
    objc_msgSend(v61, "dismissViewControllerAnimated:completion:", 1, 0);

    goto LABEL_42;
  }
  if (!v58)
  {
    sub_EAC7B0(v53, (uint64_t)v8);
    v66 = &v8[*(int *)(v6 + 32)];
    v67 = *(_QWORD *)v66;
    v68 = *((_QWORD *)v66 + 1);
    LOBYTE(v66) = v66[16];
    *(_QWORD *)&v78 = v67;
    *((_QWORD *)&v78 + 1) = v68;
    LOBYTE(v79) = (_BYTE)v66;
    LOBYTE(v77[0]) = 0;
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
    Binding.wrappedValue.setter(v77, v69);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);

LABEL_42:
    sub_EAC7F4((uint64_t)v8);
    return;
  }
  v70 = -[objc_class presentingViewController](_.super.super.super.super.isa, "presentingViewController");
  if (v70)
  {
    v71 = v70;
    v72 = objc_msgSend(v70, "presentingViewController");

    if (v72)
    {
      sub_EAC7B0(v53, (uint64_t)v8);
      v73 = &v8[*(int *)(v6 + 32)];
      v74 = *(_QWORD *)v73;
      v75 = *((_QWORD *)v73 + 1);
      LOBYTE(v73) = v73[16];
      *(_QWORD *)&v78 = v74;
      *((_QWORD *)&v78 + 1) = v75;
      LOBYTE(v79) = (_BYTE)v73;
      LOBYTE(v77[0]) = 0;
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
      Binding.wrappedValue.setter(v77, v76);
      objc_msgSend(v72, "dismissViewControllerAnimated:completion:", 1, 0);

      sub_2B7A2C(v58, v57);
      goto LABEL_42;
    }
  }

  sub_2B7A2C(v58, v57);
}

id UIImage.centerCropIfNeeded(imageRect:)(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  id result;
  id v6;
  uint64_t v7;
  double v8;
  _BYTE v9[16];
  double v10;
  double v11;
  char v12;

  sub_E1906C(a1, (uint64_t)v9);
  if ((v12 & 1) != 0)
  {
    objc_msgSend(v6, "size");
    v2 = v1;
    v4 = v3;
  }
  else
  {
    v2 = v10;
    v4 = v11;
  }
  v8 = v4;
  v7 = 0;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v8, &v7) & 1) == 0)
    return v6;
  if (vabdd_f64(1.0, v2 / v4) <= 0.05)
    return v6;
  result = (id)UIImage.byCroppingToUniformCenter()();
  if (!result)
    return v6;
  return result;
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerControllerDidCancel(_:)(UIImagePickerController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _QWORD v33[2];

  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin();
  v8 = (char *)&v28 - v7;
  v9 = -[objc_class presentingViewController](a1.super.super.super.super.isa, "presentingViewController", v6);
  if (v9)
  {
    v10 = v9;
    objc_opt_self(PHPickerViewController);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (uint64_t *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier + 8);
      if (v13)
      {
        v14 = (void *)v11;
        v29 = *v12;
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
        v16 = swift_allocObject(v15, 48, 7);
        *(_OWORD *)(v16 + 16) = xmmword_105B360;
        *(_QWORD *)(v16 + 32) = v29;
        *(_QWORD *)(v16 + 40) = v13;
        swift_bridgeObjectRetain();
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v14, "deselectAssetsWithIdentifiers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

        *v12 = 0;
        v12[1] = 0;
        objc_msgSend(v14, "setModalInPresentation:", 0, swift_bridgeObjectRelease().n128_f64[0]);
      }
    }

  }
  v18 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_EAC7B0(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
  v19 = &v8[*(int *)(v3 + 24)];
  v20 = *((_QWORD *)v19 + 1);
  v30 = *(_QWORD *)v19;
  v31 = v20;
  v32 = *((_OWORD *)v19 + 1);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D518);
  Binding.wrappedValue.getter(v33, v21);
  v22 = v33[0];
  v23 = (void *)v33[1];
  sub_EAC7F4((uint64_t)v8);
  if (v22 - 1 >= 2)
  {
    if (!v22)
    {
      sub_EAC7B0(v18, (uint64_t)v5);
      v24 = &v5[*(int *)(v3 + 32)];
      v25 = *(_QWORD *)v24;
      v26 = *((_QWORD *)v24 + 1);
      LOBYTE(v24) = v24[16];
      v30 = v25;
      v31 = v26;
      LOBYTE(v32) = (_BYTE)v24;
      LOBYTE(v33[0]) = 0;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
      Binding.wrappedValue.setter(v33, v27);
      -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
      sub_EAC7F4((uint64_t)v5);
      return;
    }
    sub_2B7A2C(v22, v23);
  }
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
}

Swift::Void __swiftcall ImagePicker.Coordinator.picker(_:didFinishPicking:)(PHPickerViewController _, Swift::OpaquePointer didFinishPicking)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  Class v24;
  void *v25;
  id v26;
  objc_class *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  Class isa;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v5 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PHPickerResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin();
  v12 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UTType(0, v11);
  v15 = __chkstk_darwin();
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_QWORD *)didFinishPicking._rawValue + 2))
  {
    v18 = *(unsigned __int8 *)(v9 + 80);
    v34 = v2;
    isa = _.super.super.super.isa;
    v19 = (v18 + 32) & ~v18;
    v20 = (char *)didFinishPicking._rawValue + v19;
    v36 = v13;
    v21 = v14;
    v22 = (void *)PHPickerResult.itemProvider.getter(v15);
    static UTType.image.getter();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v8);
    v23 = swift_allocObject(&unk_13CC2F8, v19 + v10, v18 | 7);
    v25 = v34;
    v24 = isa;
    *(_QWORD *)(v23 + 16) = v34;
    *(_QWORD *)(v23 + 24) = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23 + v19, v12, v8);
    v26 = v25;
    v27 = v24;
    v28 = (void *)NSItemProvider.loadDataRepresentation(for:completionHandler:)(v17, sub_EAC994, v23);
    swift_release();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v36);
  }
  else
  {
    sub_EAC7B0((uint64_t)v2 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
    v29 = &v7[*(int *)(v5 + 32)];
    v30 = *(_QWORD *)v29;
    v31 = *((_QWORD *)v29 + 1);
    LOBYTE(v29) = v29[16];
    v38 = v30;
    v39 = v31;
    v40 = (char)v29;
    v37 = 0;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
    Binding.wrappedValue.setter(&v37, v32);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
    sub_EAC7F4((uint64_t)v7);
  }
}

double sub_EAAB08(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  v32 = a5;
  v30 = a1;
  v11 = type metadata accessor for PHPickerResult(0);
  v12 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  type metadata accessor for MainActor(0);
  v18 = a2;
  sub_1390D8(a1, a2);
  v19 = a3;
  swift_errorRetain(a3);
  v20 = a4;
  v21 = v32;
  v23 = static MainActor.shared.getter(v22);
  v24 = *(unsigned __int8 *)(v12 + 80);
  v25 = (v24 + 72) & ~v24;
  v26 = (char *)swift_allocObject(&unk_13CC468, v25 + v13, v24 | 7);
  *((_QWORD *)v26 + 2) = v23;
  *((_QWORD *)v26 + 3) = &protocol witness table for MainActor;
  v27 = v31;
  *((_QWORD *)v26 + 4) = v30;
  *((_QWORD *)v26 + 5) = v18;
  *((_QWORD *)v26 + 6) = v19;
  *((_QWORD *)v26 + 7) = v20;
  *((_QWORD *)v26 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v25], v14, v27);
  sub_E08E7C((uint64_t)v16, (uint64_t)&unk_150D7D8, (uint64_t)v26);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_EAACC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[7] = a8;
  v8[8] = v14;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  v8[4] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[9] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_EAAD3C, v11, v12);
}

uint64_t sub_EAAD3C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  Class isa;
  UIImage *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  NSData *v12;
  NSData *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  void (*v29)(uint64_t, uint64_t, __n128);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  Class v45;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  if (v1 >> 60 != 15)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = objc_allocWithZone((Class)UIImage);
    sub_50CB4(v2, v3);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v6 = (UIImage *)objc_msgSend(v4, "initWithData:", isa);

    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 48);
      v9 = PHPickerResult.assetIdentifier.getter(v7);
      v10 = (uint64_t *)(v8 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      *v10 = v9;
      v10[1] = v11;
      swift_bridgeObjectRelease();
      v12 = UIImagePNGRepresentation(v6);
      if (v12)
      {
        v13 = v12;
        v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

        v17 = UIImage.centeredSquareCropRect.getter();
        v21 = sub_EAB8E0(v17, v18, v19, v20);
        if (v21)
        {
          v22 = v21;
          v24 = *(_QWORD *)(v0 + 24);
          v23 = *(_QWORD *)(v0 + 32);
          objc_msgSend(*(id *)(v0 + 56), "presentViewController:animated:completion:", v21, 1, 0);
          objc_msgSend(v22, "becomeFirstResponder");
          sub_50C4C(v24, v23);

        }
        else
        {
          sub_50C4C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
        }

        sub_50C60(v14, v16);
      }
      else
      {
        sub_50C4C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));

      }
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    sub_50C4C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  v25 = *(_QWORD *)(v0 + 40);
  v26 = *(_QWORD *)(v0 + 48);
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v25;
  swift_errorRetain(v25);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150D7E0);
  v28._countAndFlagsBits = String.init<A>(describing:)(v0 + 16, v27);
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29 = *(void (**)(uint64_t, uint64_t, __n128))(v26
                                                        + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v29)
  {
    v30 = *(_QWORD *)(v26 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
    v31 = sub_EAC76C();
    v32 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v31, 0, 0);
    *v33 = 0xD00000000000002FLL;
    v33[1] = 0x800000000110F210;
    v34 = swift_retain();
    v29(v32, 1, v34);
    sub_5C198((uint64_t)v29, v30);
    swift_errorRelease(v32);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v35 = *(void **)(v0 + 56);
  v36 = sub_EAB9F0();
  objc_msgSend(v35, "presentViewController:animated:completion:", v36, 1, 0);

  v38 = PHPickerResult.assetIdentifier.getter(v37);
  if (v39)
  {
    v40 = v38;
    v41 = v39;
    v42 = *(void **)(v0 + 56);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
    v44 = swift_allocObject(v43, 48, 7);
    *(_OWORD *)(v44 + 16) = xmmword_105B360;
    *(_QWORD *)(v44 + 32) = v40;
    *(_QWORD *)(v44 + 40) = v41;
    v45 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v42, "deselectAssetsWithIdentifiers:", v45, swift_bridgeObjectRelease().n128_f64[0]);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double UIImage.centeredSquareCropRect.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v26;
  CGRect v27;

  objc_msgSend(v0, "size");
  v2 = v1;
  objc_msgSend(v0, "size");
  v4 = v3;
  objc_msgSend(v0, "size");
  v6 = v5;
  objc_msgSend(v0, "size");
  v8 = v7;
  objc_msgSend(v0, "size");
  v10 = v9;
  v12 = v11;
  objc_msgSend(v0, "size");
  v14 = (v10 - v13) * 0.5 + 0.0;
  v16 = (v12 - v15) * 0.5 + 0.0;
  if (v6 < v8)
    v17 = v16;
  else
    v17 = 0.0;
  if (v6 < v8)
    v18 = 0.0;
  else
    v18 = v14;
  if (v4 >= v2)
    v19 = v2;
  else
    v19 = v4;
  v20 = v19;
  v26 = CGRectIntegral(*(CGRect *)(&v17 - 1));
  x = v26.origin.x;
  y = v26.origin.y;
  width = v26.size.width;
  height = v26.size.height;
  CGRectGetWidth(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  CGRectGetHeight(v27);
  return x;
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  objc_class *isa;
  uint64_t v17;
  id v18;
  NSString v19;
  UIImage *v20;
  id v21;
  void *v22;
  NSData *v23;
  NSData *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  void (*v38)(uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  char v54;

  v3 = v2;
  v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  __chkstk_darwin();
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin();
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((_QWORD *)didPickDocumentsAt._rawValue + 2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v12 + 56))(v10, 1, 1, v11, v13);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t, double))(v12 + 16))(v10, (char *)didPickDocumentsAt._rawValue+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    sub_56024((uint64_t)v10, &qword_15068B0);
LABEL_10:
    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v34._countAndFlagsBits = 0xD000000000000025;
    v34._object = (void *)0x800000000110F070;
    String.append(_:)(v34);
    v35._countAndFlagsBits = Array.description.getter(didPickDocumentsAt._rawValue, v11);
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36._object = (void *)0x800000000110F0A0;
    v36._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v36);
    v37 = v53;
    v38 = *(void (**)(uint64_t, uint64_t, __n128))(v3
                                                          + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v38)
    {
      v39 = v52;
      v40 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
      v41 = sub_EAC76C();
      v42 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v41, 0, 0);
      *v43 = v39;
      v43[1] = v37;
      v44 = swift_retain();
      v38(v42, 1, v44);
      sub_5C198((uint64_t)v38, v40);
      swift_errorRelease(v42);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_EAC7B0(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
    v45 = &v8[*(int *)(v6 + 32)];
    v46 = *(_QWORD *)v45;
    v47 = *((_QWORD *)v45 + 1);
    LOBYTE(v45) = v45[16];
    v52 = v46;
    v53 = v47;
    v54 = (char)v45;
    v51 = 0;
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
    Binding.wrappedValue.setter(&v51, v48);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
    sub_EAC7F4((uint64_t)v8);
    return;
  }
  v50 = v3;
  isa = _.super.super.super.isa;
  v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  URL.path.getter(v17);
  v18 = objc_allocWithZone((Class)UIImage);
  v19 = String._bridgeToObjectiveC()();
  v20 = (UIImage *)objc_msgSend(v18, "initWithContentsOfFile:", v19, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    _.super.super.super.isa = isa;
    v3 = v50;
    goto LABEL_10;
  }
  v21 = -[objc_class view](isa, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "endEditing:", 1);

    v23 = UIImagePNGRepresentation(v20);
    if (!v23)
    {

      goto LABEL_17;
    }
    v24 = v23;
    v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v27 = v26;

    v28 = UIImage.centeredSquareCropRect.getter();
    v32 = sub_EAB8E0(v28, v29, v30, v31);
    if (v32)
    {
      v33 = v32;
      -[objc_class presentViewController:animated:completion:](isa, "presentViewController:animated:completion:", v32, 1, 0);

      sub_50C60(v25, v27);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      return;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_50C60(v25, v27);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_EAC7B0(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v5);
  v6 = &v5[*(int *)(v3 + 32)];
  v7 = *(_QWORD *)v6;
  v8 = *((_QWORD *)v6 + 1);
  LOBYTE(v6) = v6[16];
  v11 = v7;
  v12 = v8;
  v13 = (char)v6;
  HIBYTE(v10) = 0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  Binding.wrappedValue.setter((char *)&v10 + 7, v9);
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
  sub_EAC7F4((uint64_t)v5);
}

Swift::Void __swiftcall ImagePicker.Coordinator.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  v3 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ImagePicker(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  v8 = v4;
  v9 = v5;
  v10 = (char)v3;
  v7 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  Binding.wrappedValue.setter(&v7, v6);
}

id sub_EAB8E0(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  id v9;
  Class isa;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for ImageEditingViewController();
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  isa = Data._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, "_initWithSourceImageData:cropRect:", isa, a1, a2, a3, a4);

  if (v11)
  {
    v12 = v11;
    objc_msgSend(v12, "setDelegate:", v4);
    objc_msgSend(v12, "setModalInPresentation:", 1);
    v13 = v4 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
    if (*(_QWORD *)(v13 + *(int *)(type metadata accessor for ImagePicker(0) + 36)))
    {
      v14 = swift_bridgeObjectRetain();
      UIImagePickerController.setProperties(_:)((Swift::OpaquePointer)v14);
      swift_bridgeObjectRelease();
    }

  }
  return v11;
}

id sub_EAB9F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  }
  else
  {
    v4 = sub_EABA4C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_EABA4C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t);
  uint64_t v11;
  NSString v12;
  NSString v13;
  id v14;
  NSString v15;
  id v16;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v18[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = type metadata accessor for String.LocalizationValue(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v7 = &v18[-v6];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x800000000110F1A0);
  v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v9 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v9, v1, 0, 0, 256);
  v10 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v10(v7, v2);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x800000000110F1C0);
  v8(v5, v7, v2);
  v11 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v11, v1, 0, 0, 256);
  v10(v7, v2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 1, 0);

  objc_msgSend(v14, "addAction:", v16);
  return v14;
}

void ImagePicker.Coordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.Coordinator", 23, "init()", 6, 0);
  __break(1u);
}

id ImagePicker.Coordinator.__deallocating_deinit()
{
  return sub_15A49C(0, (uint64_t (*)(void))type metadata accessor for ImagePicker.Coordinator);
}

char *ImagePicker.makeCoordinator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(void *, char);
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v1 = *(_QWORD *)(type metadata accessor for ImagePicker(0) - 8);
  v2 = *(_QWORD *)(v1 + 64);
  __chkstk_darwin();
  sub_EAC7B0(v0, (uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (objc_class *)type metadata accessor for ImagePicker.Coordinator(0);
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController] = 0;
  sub_EAC7B0((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker]);
  v15.receiver = v4;
  v15.super_class = v3;
  v7 = (char *)objc_msgSendSuper2(&v15, "init");
  sub_EAC7F4((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_EAC7B0(v0, (uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(unsigned __int8 *)(v1 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_13CC320, v9 + v2, v8 | 7);
  sub_E9E708((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  v11 = (void (**)(void *, char))&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  v12 = *(_QWORD *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8];
  *v11 = sub_EACB28;
  v11[1] = (void (*)(void *, char))v10;
  sub_5C198(v12, v13);
  return v7;
}

void sub_EABF30(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(unint64_t, void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  void *v34;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v22 = Logger.playlistCovers.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
    swift_errorRetain(a1);
    v23 = swift_errorRetain(a1);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v31 = v27;
      *(_DWORD *)v26 = 136446210;
      v33 = (unint64_t)a1;
      swift_errorRetain(a1);
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
      v29 = (char *)String.init<A>(describing:)(&v33, v28);
      *(_QWORD *)(v26 + 4) = sub_DCF730(v29, v30, (uint64_t *)&v31);
      swift_bridgeObjectRelease();
      sub_A90E8(a1, 1);
      sub_A90E8(a1, 1);
      _os_log_impl(&dword_0, v24, v25, "ImagePicker failed with error: %{public}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      sub_A90E8(a1, 1);
    }
    else
    {
      sub_A90E8(a1, 1);
      sub_A90E8(a1, 1);
      swift_errorRelease(a1);

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v10 = (int *)type metadata accessor for ImagePicker(0);
    v11 = (__int128 *)(a3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v31 = v12;
    *(_QWORD *)&v32 = v13;
    v33 = (unint64_t)a1;
    v14 = a1;
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150D7C0);
    Binding.wrappedValue.setter(&v33, v15);
    v16 = *(void (**)(unint64_t, void *))(a3 + v10[7]);
    if (v16)
    {
      v17 = a3 + v10[6];
      v18 = *(_QWORD *)(v17 + 8);
      *(_QWORD *)&v31 = *(_QWORD *)v17;
      *((_QWORD *)&v31 + 1) = v18;
      v32 = *(_OWORD *)(v17 + 16);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D518);
      Binding.wrappedValue.getter(&v33, v19);
      v20 = v33;
      v21 = v34;
      v16(v33, v34);
      sub_2B7A2C(v20, v21);
    }
  }
}

uint64_t sub_EAC1DC(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD **)a1, *(void **)(a1 + 8), *(_QWORD **)a2, *(void **)(a2 + 8));
}

char *sub_EAC1F4@<X0>(char **a1@<X8>)
{
  char *result;

  result = ImagePicker.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t sub_EAC218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_4DD24((unint64_t *)&unk_150D7B0, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_EAC280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_4DD24((unint64_t *)&unk_150D7B0, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_EAC2E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24((unint64_t *)&unk_150D7B0, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

id ImageEditingViewController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
  return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  objc_super v6;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ImageEditingViewController();
  return objc_msgSendSuper2(&v6, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(rootViewController:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v5;
  id v6;
  objc_super v8;

  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

id ImageEditingViewController.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ImageEditingViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_15A49C(a1, type metadata accessor for ImageEditingViewController);
}

unint64_t sub_EAC6DC()
{
  unint64_t result;

  result = sub_DB9BCC((uint64_t)&off_13C2340);
  static UIImagePickerController.profileImagePickerProperties = result;
  return result;
}

uint64_t type metadata accessor for ImagePicker(uint64_t a1)
{
  return sub_6345C(a1, qword_150D5E0, (uint64_t)&nominal type descriptor for ImagePicker);
}

uint64_t type metadata accessor for ImagePicker.Coordinator(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150D778, (uint64_t)&nominal type descriptor for ImagePicker.Coordinator);
}

uint64_t static UIImagePickerController.profileImagePickerProperties.getter()
{
  if (qword_1506360 != -1)
    swift_once(&qword_1506360, sub_EAC6DC);
  return swift_bridgeObjectRetain();
}

unint64_t sub_EAC76C()
{
  unint64_t result;

  result = qword_150D548;
  if (!qword_150D548)
  {
    result = swift_getWitnessTable(&unk_10B2C04, &type metadata for ImagePicker.Coordinator.ImagePickerError);
    atomic_store(result, (unint64_t *)&qword_150D548);
  }
  return result;
}

uint64_t sub_EAC7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_EAC7F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(_QWORD *a1, void *a2, _QWORD *a3, void *a4)
{
  id v7;
  id v8;
  char v9;

  if (!a1)
    return !a3;
  if (a1 == (_QWORD *)((char *)&dword_0 + 1))
    return a3 == (_QWORD *)((char *)&dword_0 + 1);
  if (a1 == (_QWORD *)((char *)&dword_0 + 2))
    return a3 == (_QWORD *)((char *)&dword_0 + 2);
  if ((unint64_t)a3 < 3)
    return 0;
  if ((sub_DD84CC(a1, a3) & 1) != 0)
  {
    if (a2)
    {
      if (a4)
      {
        sub_4E684(0, &qword_150D550, UIImage_ptr);
        v7 = a2;
        v8 = a4;
        v9 = static NSObject.== infix(_:_:)(v7, v8);

        if ((v9 & 1) != 0)
          return 1;
      }
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_EAC918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_EAC994(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8) + 80);
  return sub_EAAB08(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), v3 + ((v7 + 32) & ~v7));
}

uint64_t sub_EAC9EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for ImagePicker(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v6 + v1[5];
  swift_release();
  swift_release();

  v10 = v6 + v1[6];
  swift_release();
  swift_release();
  if (*(_QWORD *)(v10 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v6 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_EACB28(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImagePicker(0) - 8) + 80);
  sub_EABF30(a1, v4, v2 + ((v5 + 16) & ~v5));
}

uint64_t type metadata accessor for ImageEditingViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26ImageEditingViewController);
}

uint64_t sub_EACB94()
{
  return sub_4DD24(&qword_150D580, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int *v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = a3[5];
    v14 = a3[6];
    v37 = a3;
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (void *)v16[2];
    v15[2] = v18;
    v19 = (uint64_t *)((char *)a1 + v14);
    v20 = (char *)a2 + v14;
    v21 = *(uint64_t *)((char *)a2 + v14 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v14);
    v19[1] = v21;
    v23 = (unint64_t *)((char *)a2 + v14 + 16);
    v22 = *v23;
    swift_retain();
    swift_retain();
    v24 = v18;
    swift_retain();
    swift_retain();
    if (v22 >= 3)
    {
      v25 = (void *)*((_QWORD *)v20 + 3);
      v19[2] = v22;
      v19[3] = v25;
      swift_bridgeObjectRetain();
      v26 = v25;
    }
    else
    {
      *((_OWORD *)v19 + 1) = *(_OWORD *)v23;
    }
    v27 = v37[7];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (*v29)
    {
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v31 = v37[8];
    v32 = v37[9];
    v33 = (char *)a1 + v31;
    v34 = (char *)a2 + v31;
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v33[16] = v34[16];
    *(uint64_t *)((char *)a1 + v32) = *(uint64_t *)((char *)a2 + v32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double destroy for ImagePicker(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[5];
  swift_release();
  swift_release();

  v7 = a1 + a2[6];
  swift_release();
  swift_release();
  if (*(_QWORD *)(v7 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(a1 + a2[7]))
    swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for ImagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int *v35;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v35 = a3;
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (void *)v14[2];
  v13[2] = v16;
  v17 = (_QWORD *)((char *)a1 + v12);
  v18 = (char *)a2 + v12;
  v19 = *(_QWORD *)((char *)a2 + v12 + 8);
  *v17 = *(_QWORD *)((char *)a2 + v12);
  v17[1] = v19;
  v21 = (_QWORD *)((char *)a2 + v12 + 16);
  v20 = *v21;
  swift_retain();
  swift_retain();
  v22 = v16;
  swift_retain();
  swift_retain();
  if (v20 >= 3)
  {
    v23 = (void *)*((_QWORD *)v18 + 3);
    v17[2] = v20;
    v17[3] = v23;
    swift_bridgeObjectRetain();
    v24 = v23;
  }
  else
  {
    *((_OWORD *)v17 + 1) = *(_OWORD *)v21;
  }
  v25 = v35[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  if (*v27)
  {
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v29 = v35[8];
  v30 = v35[9];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v31[16] = v32[16];
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ImagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  if (a1 != a2)
  {
    sub_56024((uint64_t)a1, &qword_150CE90);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  v14 = (void *)*((_QWORD *)v12 + 2);
  v15 = (void *)*((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 2) = v15;
  v16 = v15;

  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  swift_retain();
  swift_release();
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  v20 = v19[2];
  if (v18[2] < 3uLL)
  {
    if (v20 >= 3)
    {
      v18[2] = v20;
      v21 = (void *)v19[3];
      v18[3] = v21;
      swift_bridgeObjectRetain();
      v22 = v21;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v20 < 3)
  {
    sub_56024((uint64_t)(v18 + 2), &qword_150CC70);
LABEL_11:
    *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
    goto LABEL_13;
  }
  v18[2] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = (void *)v18[3];
  v24 = (void *)v19[3];
  v18[3] = v24;
  v25 = v24;

LABEL_13:
  v26 = a3[7];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a1 + v26);
  v30 = *(_QWORD *)((char *)a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      v32 = *((_QWORD *)v28 + 1);
      *v27 = v30;
      v27[1] = v32;
      swift_retain();
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_20;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_19;
  }
  v31 = *((_QWORD *)v28 + 1);
  *v27 = v30;
  v27[1] = v31;
  swift_retain();
  swift_release();
LABEL_20:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  swift_retain();
  swift_release();
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_retain();
  swift_release();
  v34[16] = v35[16];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v12 = &a1[v9];
  v13 = &a2[v9];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  if (*(_QWORD *)v17)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[8];
  v21 = a3[9];
  v22 = &a1[v20];
  v23 = &a2[v20];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  return a1;
}

char *assignWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  if (a1 != a2)
  {
    sub_56024((uint64_t)a1, &qword_150CE90);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  v11 = (void *)*((_QWORD *)v9 + 2);
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);

  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  v15 = *((_QWORD *)v14 + 2);
  if (*((_QWORD *)v13 + 2) < 3uLL)
    goto LABEL_8;
  if (v15 < 3)
  {
    sub_56024((uint64_t)(v13 + 16), &qword_150CC70);
LABEL_8:
    *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
    goto LABEL_10;
  }
  *((_QWORD *)v13 + 2) = v15;
  swift_bridgeObjectRelease();
  v16 = (void *)*((_QWORD *)v13 + 3);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);

LABEL_10:
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)&a1[v17];
  v21 = *(_QWORD *)&a2[v17];
  if (!v20)
  {
    if (v21)
    {
      v23 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v23;
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_17;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_16;
  }
  v22 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v22;
  swift_release();
LABEL_17:
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  swift_release();
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_release();
  v25[16] = v26[16];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EAD604);
}

uint64_t sub_EAD604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EAD694);
}

uint64_t sub_EAD694(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_EAD714(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_E282B4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10B2B40;
    v4[2] = &unk_10B2B58;
    v4[3] = &unk_10B2B70;
    v4[4] = &unk_10B2B88;
    v4[5] = &unk_10B2BA0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_EAD7AC()
{
  return type metadata accessor for ImagePicker.Coordinator(0);
}

uint64_t sub_EAD7B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for ImagePicker(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10B2B70;
    v4[2] = &unk_10B2B70;
    v4[3] = &unk_10B2BA0;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void destroy for ImagePicker.SourceType(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)a1;
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);

  }
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    v4 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ImagePicker.SourceType(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v9 = (void *)a2[1];
      *(_QWORD *)(a1 + 8) = v9;
      swift_bridgeObjectRetain();
      v10 = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);

    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = *(void **)(a1 + 8);
  v7 = (void *)a2[1];
  *(_QWORD *)(a1 + 8) = v7;
  v8 = v7;

  return a1;
}

uint64_t assignWithTake for ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;

  v4 = *(_QWORD *)a1;
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease(v4);

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for JSThread.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSThread.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImagePicker.SourceType()
{
  return &type metadata for ImagePicker.SourceType;
}

ValueMetadata *type metadata accessor for ImagePicker.Coordinator.ImagePickerError()
{
  return &type metadata for ImagePicker.Coordinator.ImagePickerError;
}

uint64_t sub_EADAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = *(_QWORD *)(v0 + 40);
  if (v5 >> 60 != 15)
    sub_50C60(*(_QWORD *)(v0 + 32), v5);
  v6 = (v3 + 72) & ~v3;
  swift_errorRelease(*(_QWORD *)(v0 + 48));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  return swift_deallocObject(v0, v6 + v4, v3 | 7);
}

uint64_t sub_EADB60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  type metadata accessor for PHPickerResult(0);
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_150D7D4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_50F8C;
  return sub_EAACC0(a1, v4, v5, v6, v7, v8, v9, v10);
}

double InteractionFeedbackLoadingView.init(delay:)(double a1)
{
  char v3;
  uint64_t v4;

  v3 = 0;
  State.init(wrappedValue:)(&v4, &v3, &type metadata for Bool);
  return a1;
}

uint64_t InteractionFeedbackLoadingView.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150D7F0);
  v8 = __chkstk_darwin();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D7F8);
  sub_EADD84(a1, a2, &v10[*(int *)(v11 + 44)], a4);
  v12 = swift_allocObject(&unk_13CC578, 40, 7);
  *(double *)(v12 + 16) = a4;
  *(_BYTE *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a2;
  sub_5C238((uint64_t)v10, a3, &qword_150D7F0);
  v13 = (uint64_t (**)())(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150D800) + 36));
  *v13 = sub_EAE3B8;
  v13[1] = (uint64_t (*)())v12;
  v13[2] = 0;
  v13[3] = 0;
  swift_retain();
  return sub_56024((uint64_t)v10, &qword_150D7F0);
}

uint64_t sub_EADD84@<X0>(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;

  v65 = a2;
  v67 = a3;
  v5 = type metadata accessor for OpacityTransition(0, a4);
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  __chkstk_darwin();
  v61 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v62 = (char *)&v53 - v7;
  v8 = type metadata accessor for ControlSize(0);
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  v9 = __chkstk_darwin();
  v58 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CircularProgressViewStyle(0, v9);
  v55 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBC8);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D828);
  v56 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  __chkstk_darwin();
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D830);
  __chkstk_darwin();
  v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D838);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin();
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150D840);
  __chkstk_darwin();
  v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v27 = (char *)&v53 - v26;
  v69 = a1;
  v70 = v65;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  v29 = State.wrappedValue.getter(&v71, v28);
  v30 = 1;
  if (v71 == 1)
  {
    v31 = ProgressView<>.init<>()(v29);
    CircularProgressViewStyle.init()(v31);
    v32 = sub_5C150(&qword_150BC38, &qword_150BBC8, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v33 = sub_4DD24(&qword_150D850, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle, (uint64_t)&protocol conformance descriptor for CircularProgressViewStyle);
    View.progressViewStyle<A>(_:)(v13, v14, v11, v32, v33);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v14);
    v35 = v58;
    v34 = v59;
    v36 = v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v58, enum case for ControlSize.large(_:), v60);
    KeyPath = swift_getKeyPath(&unk_10B2CD0);
    v38 = (uint64_t *)&v21[*(int *)(v53 + 36)];
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D858);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v38 + *(int *)(v39 + 28), v35, v36);
    *v38 = KeyPath;
    v41 = v56;
    v40 = v57;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v21, v19, v57);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    v42 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v40);
    v43 = v62;
    OpacityTransition.init()(v42);
    v45 = v63;
    v44 = v64;
    v46 = v61;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v61, v43, v64);
    v47 = sub_4DD24(&qword_150D860, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
    v48 = AnyTransition.init<A>(_:)(v46, v44, v47);
    sub_5C238((uint64_t)v21, (uint64_t)v23, &qword_150D830);
    *(_QWORD *)&v23[*(int *)(v68 + 36)] = v48;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
    sub_56024((uint64_t)v21, &qword_150D830);
    sub_EAE764((uint64_t)v23, (uint64_t)v27);
    v30 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v27, v30, 1, v68);
  sub_5C238((uint64_t)v27, (uint64_t)v25, &qword_150D840);
  v49 = v67;
  *v67 = 0;
  *((_BYTE *)v49 + 8) = 1;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D848);
  sub_5C238((uint64_t)v25, (uint64_t)v49 + *(int *)(v50 + 48), &qword_150D840);
  v51 = (char *)v49 + *(int *)(v50 + 64);
  *(_QWORD *)v51 = 0;
  v51[8] = 1;
  sub_56024((uint64_t)v27, &qword_150D840);
  return sub_56024((uint64_t)v25, &qword_150D840);
}

uint64_t sub_EAE28C(char a1, uint64_t a2, double a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject(&unk_13CC648, 40, 7);
  *(double *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  swift_retain();
  static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_150D820, v9, (uint64_t)&type metadata for () + 8, a3);
  swift_release();
  swift_release();
  return sub_56024((uint64_t)v7, &qword_15085D0);
}

uint64_t sub_EAE394()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_EAE3B8()
{
  uint64_t v0;

  return sub_EAE28C(*(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t sub_EAE3C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InteractionFeedbackLoadingView.body>>, 1);
}

uint64_t sub_EAE3D8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a3;
  *(_BYTE *)(v3 + 41) = a2;
  return swift_task_switch(sub_EAE3F4, 0, 0);
}

uint64_t sub_EAE3F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 41);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v0 + 40) = 1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.setter(v0 + 40, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_EAE458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  char *v5;
  double v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)();
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150D7F0);
  v3 = __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v1;
  v7 = *(_BYTE *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v3);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D7F8);
  sub_EADD84(v7, v8, &v5[*(int *)(v9 + 44)], v6);
  v10 = swift_allocObject(&unk_13CC620, 40, 7);
  *(double *)(v10 + 16) = v6;
  *(_BYTE *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v8;
  sub_5C238((uint64_t)v5, a1, &qword_150D7F0);
  v11 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150D800) + 36));
  *v11 = sub_EAE7B4;
  v11[1] = (uint64_t (*)())v10;
  v11[2] = 0;
  v11[3] = 0;
  swift_retain();
  return sub_56024((uint64_t)v5, &qword_150D7F0);
}

uint64_t sub_EAE57C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for InteractionFeedbackLoadingView()
{
  return &type metadata for InteractionFeedbackLoadingView;
}

unint64_t sub_EAE654()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150D808;
  if (!qword_150D808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D800);
    sub_5C150(&qword_150D810, &qword_150D7F0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150D808);
  }
  return result;
}

uint64_t sub_EAE6D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_task_alloc(dword_150D81C);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_50F8C;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 41) = v2;
  return swift_task_switch(sub_EAE3F4, 0, 0);
}

uint64_t sub_EAE740()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_EAE764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  int *result;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  v23 = a8;
  v24 = a10;
  v25 = a11;
  result = (int *)type metadata accessor for LayoutProviderStack(0, (uint64_t)&v23);
  v20 = (_QWORD *)(a9 + result[13]);
  *v20 = a2;
  v20[1] = a3;
  v21 = a9 + result[14];
  *(_QWORD *)v21 = a4;
  *(_BYTE *)(v21 + 8) = a5 & 1;
  v22 = (_QWORD *)(a9 + result[15]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t type metadata accessor for LayoutProviderStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for LayoutProviderStack);
}

uint64_t LayoutProviderStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v28 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D868);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = sub_EAEAF8(&qword_150D870, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v7 = type metadata accessor for _VariadicView.Tree(0, v4, v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v27 - v12;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double))(*(_QWORD *)(a1 + 32)
                                                                                               + 8))(v32, *(_QWORD *)(v2 + *(int *)(a1 + 52)), *(_QWORD *)(v2 + *(int *)(a1 + 52) + 8), *(_QWORD *)(v2 + *(int *)(a1 + 56)), *(unsigned __int8 *)(v2 + *(int *)(a1 + 56) + 8), *(_QWORD *)(a1 + 16), v11);
  v14 = v33;
  v15 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  v16 = __chkstk_darwin();
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v19 + 16))(v18, v16);
  v31 = AnyLayout.init<A>(_:)(v18, v14, v15);
  v20 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  v21 = *v20;
  v22 = v20[1];
  v23 = sub_EAEAB4();
  v24 = *(_QWORD *)(a1 + 40);
  sub_7EAF1C(v21, v22, (uint64_t)&type metadata for AnyLayout, v5, v23, v24, (uint64_t)v10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v32);
  v29 = sub_EAEAF8(&qword_150D880, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v30 = v24;
  swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v7);
  sub_505E64((uint64_t)v10, v7, (uint64_t)v13);
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v10, v7);
  sub_4FF1F4((uint64_t)v13, v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v25)(v13, v7);
}

unint64_t sub_EAEAB4()
{
  unint64_t result;

  result = qword_150D878;
  if (!qword_150D878)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyLayout, &type metadata for AnyLayout);
    atomic_store(result, (unint64_t *)&qword_150D878);
  }
  return result;
}

uint64_t sub_EAEAF8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D868);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AxisStack.init(axis:alignment:spacing:content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = result & 1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5 & 1;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

double AxisStack.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  _BYTE v18[8];
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v18[0] = *(_BYTE *)v2;
  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_BYTE *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  (*(void (**)(_BYTE *, _BYTE *, _QWORD *))(*(&type metadata for Axis - 1) + 32))(v24, v18, &type metadata for Axis);
  v30 = &type metadata for Axis;
  *(_QWORD *)&v31 = v9;
  *((_QWORD *)&v31 + 1) = &protocol witness table for Axis;
  v32 = v10;
  v11 = (int *)type metadata accessor for LayoutProviderStack(0, (uint64_t)&v30);
  v12 = &v24[v11[13]];
  *v12 = v3;
  v12[1] = v4;
  v13 = &v24[v11[14]];
  *(_QWORD *)v13 = v5;
  v13[8] = v6;
  v14 = &v24[v11[15]];
  *v14 = v8;
  v14[1] = v7;
  v18[0] = v24[0];
  v19 = v25;
  v20 = v26;
  v21 = v27;
  v22 = v28;
  v23 = v29;
  v30 = &type metadata for Axis;
  *(_QWORD *)&v31 = v9;
  *((_QWORD *)&v31 + 1) = &protocol witness table for Axis;
  v32 = v10;
  v15 = type metadata accessor for LayoutProviderStack(0, (uint64_t)&v30);
  swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v15);
  sub_505E64((uint64_t)v18, v15, (uint64_t)&v30);
  swift_retain();
  swift_release();
  v24[0] = (_BYTE)v30;
  v25 = v31;
  v26 = v32;
  v27 = v33;
  v28 = v34;
  v29 = v35;
  sub_4FF1F4((uint64_t)v24, v15, a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unint64_t Axis.layout(alignment:spacing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t result;

  if ((a5 & 1) != 0)
  {
    *(_QWORD *)(a6 + 24) = &type metadata for VStackLayout;
    result = sub_EAED70();
    *(_QWORD *)(a6 + 32) = result;
    *(_QWORD *)a6 = a1;
  }
  else
  {
    *(_QWORD *)(a6 + 24) = &type metadata for HStackLayout;
    result = sub_EAEDB4();
    *(_QWORD *)(a6 + 32) = result;
    *(_QWORD *)a6 = a2;
  }
  *(_QWORD *)(a6 + 8) = a3;
  *(_BYTE *)(a6 + 16) = a4 & 1;
  return result;
}

unint64_t sub_EAED70()
{
  unint64_t result;

  result = qword_150D888;
  if (!qword_150D888)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VStackLayout, &type metadata for VStackLayout);
    atomic_store(result, (unint64_t *)&qword_150D888);
  }
  return result;
}

unint64_t sub_EAEDB4()
{
  unint64_t result;

  result = qword_150D890[0];
  if (!qword_150D890[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HStackLayout, &type metadata for HStackLayout);
    atomic_store(result, qword_150D890);
  }
  return result;
}

uint64_t sub_EAEDF8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of LayoutProviderStack.body>>, 1);
}

uint64_t sub_EAEE2C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of AxisStack.body>>, 1);
}

unint64_t sub_EAEE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  _BYTE *v5;
  unint64_t result;

  if ((*v5 & 1) != 0)
  {
    *(_QWORD *)(a5 + 24) = &type metadata for VStackLayout;
    result = sub_EAED70();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a1;
  }
  else
  {
    *(_QWORD *)(a5 + 24) = &type metadata for HStackLayout;
    result = sub_EAEDB4();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a2;
  }
  *(_QWORD *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_EAEEE4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10B2DF8;
    v4[2] = &unk_10B2E10;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 48);
    return 0;
  }
  return result;
}

uint64_t *sub_EAEF70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v9 = *v10;
    v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_BYTE *)(v12 + 8);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_BYTE *)(v11 + 8) = v13;
    v14 = (_QWORD *)(((unint64_t)v9 + 39) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
  }
  swift_retain(v16);
  return v4;
}

double sub_EAF060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)&dword_8
                                               + ((((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8))).n128_u64[0];
  return result;
}

uint64_t sub_EAF0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (_QWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain(v14);
  return a1;
}

uint64_t sub_EAF140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  v15 = v12[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain(v14);
  swift_release(v15);
  return a1;
}

uint64_t sub_EAF1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_EAF280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = ((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 8);
  *(_OWORD *)v12 = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFF8);
  swift_release(v13);
  return a1;
}

uint64_t sub_EAF324(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_EAF3A8 + 4 * byte_10B2D00[v10]))();
  }
}

void sub_EAF434(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_EAF530()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xEAF5B0);
}

void sub_EAF538(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xEAF540);
  JUMPOUT(0xEAF5B0);
}

void sub_EAF588()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xEAF5B0);
}

void sub_EAF590()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xEAF5B0);
}

uint64_t sub_EAF598(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0xEAF5B0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0xEAF5ACLL);
    JUMPOUT(0xEAF5A4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

double sub_EAF5C8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 48)).n128_u64[0];
  return result;
}

uint64_t sub_EAF5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_EAF61C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain(v4);
  swift_release(v5);
  return a1;
}

uint64_t sub_EAF67C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for AxisStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AxisStack);
}

uint64_t sub_EAF6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150D868);
  v3 = sub_EAEAF8(&qword_150D870, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v4 = type metadata accessor for _VariadicView.Tree(255, v2, v1, v3);
  sub_EAEAF8(&qword_150D880, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v4);
}

uint64_t sub_EAF770(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v1 = *a1;
  v2 = a1[1];
  v5[0] = &type metadata for Axis;
  v5[1] = v1;
  v5[2] = &protocol witness table for Axis;
  v5[3] = v2;
  v3 = type metadata accessor for LayoutProviderStack(255, (uint64_t)v5);
  return swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v3);
}

char *LoadingView.__allocating_init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return LoadingView.init(title:style:usesSubtitleTextColor:)(a1, a2, a3 & 0xFFFFFFFFFFLL | (((a3 >> 40) & 1) << 40), a4);
}

char *LoadingView.init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  id v22;
  double v23;
  NSString v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  objc_super v35;
  char v36[24];
  char v37[24];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *(_DWORD *)v10 = 0;
  *((_WORD *)v10 + 2) = 256;
  v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  v11 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *v11 = 0;
  v11[1] = 0;
  v12 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  v13 = objc_allocWithZone((Class)UILabel);
  v14 = v5;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;
  swift_beginAccess(v11, v37, 1, 0);
  v16 = v11[1];
  *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v16);
  swift_beginAccess(v10, v36, 1, 0);
  v10[4] = BYTE4(a3);
  *(_DWORD *)v10 = a3;
  v10[5] = BYTE5(a3) & 1;

  v35.receiver = v14;
  v35.super_class = ObjectType;
  v17 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  v19 = *(void **)&v17[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator];
  v20 = v17;
  objc_msgSend(v19, "setHidesWhenStopped:", 1);
  v21 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  v22 = *(id *)&v20[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
  if (a2)
  {
    v24 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v24 = 0;
  }
  objc_msgSend(v22, "setText:", v24, v23);

  objc_msgSend(*(id *)&v20[v21], "setAdjustsFontForContentSizeCategory:", 1);
  v25 = qword_1506368;
  v26 = *(id *)&v20[v21];
  if (v25 != -1)
    swift_once(&qword_1506368, sub_EB0F3C);
  objc_msgSend(v26, "setFont:", qword_150D998);

  objc_msgSend(*(id *)&v20[v21], "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  objc_msgSend(*(id *)&v20[v21], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v20[v21], "setTextAlignment:", 1);
  if ((a4 & 1) != 0)
  {
    v27 = *(void **)&v20[v21];
    v28 = (void *)objc_opt_self(UIColor);
    v29 = v27;
    v30 = objc_msgSend(v28, "secondaryLabelColor");
    objc_msgSend(v29, "setTextColor:", v30);

  }
  sub_EAFB8C();
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[v21]);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v17[v18]);
  v31 = v20;
  v32 = sub_EAFCFC();
  objc_msgSend(v31, "addSubview:", v32);

  return v31;
}

void sub_EAFB8C()
{
  uint64_t v0;
  unsigned int *v1;
  double v2;
  id v3;
  int v4;
  id v5;
  id v6;
  double v7;
  id v8;
  _BYTE v9[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v9, 0, 0).n128_u64[0];
  if ((*((_BYTE *)v1 + 5) & 1) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "stopAnimating", v2);
    v3 = sub_EAFCFC();
    objc_msgSend(v3, "setHidden:", 1);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 1);
  }
  else if (((*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32)) & 0x100000000) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "startAnimating", v2);
    v8 = sub_EAFCFC();
    objc_msgSend(v8, "setHidden:", 1);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 0);
  }
  else
  {
    v4 = *v1;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "stopAnimating", v2);
    v5 = sub_EAFCFC();
    objc_msgSend(v5, "setHidden:", 0);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 0);
    v6 = sub_EAFCFC();
    LODWORD(v7) = v4;
    objc_msgSend(v6, "setProgress:", v7);

  }
}

id sub_EAFCFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithProgressViewStyle:", 1);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    objc_msgSend(v4, "setTrackTintColor:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

unint64_t LoadingView.style.getter()
{
  uint64_t v0;
  unsigned int *v1;
  _BYTE v3[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v3, 0, 0);
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40);
}

float LoadingView.style.setter(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v3;
  float result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (unsigned int *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  LODWORD(result) = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v9, 1, 0).n128_u32[0];
  v5 = *((unsigned __int8 *)v3 + 4);
  v6 = *v3;
  v7 = *((_BYTE *)v3 + 5);
  *v3 = a1;
  *((_BYTE *)v3 + 4) = BYTE4(a1);
  *((_BYTE *)v3 + 5) = BYTE5(a1) & 1;
  if ((a1 & 0x10000000000) != 0)
  {
    if ((v7 & 1) != 0)
      return result;
    goto LABEL_5;
  }
  if ((v7 & 1) != 0)
    goto LABEL_5;
  v8 = v6 | (v5 << 32);
  if ((a1 & 0x100000000) != 0)
  {
    if ((v8 & 0x100000000) != 0)
      return result;
    goto LABEL_5;
  }
  if ((v8 & 0x100000000) != 0 || (result = *(float *)&a1, *(float *)&a1 != *(float *)&v8))
LABEL_5:
    sub_EAFB8C();
  return result;
}

void (*LoadingView.style.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style;
  v3[3] = v1;
  v3[4] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *(_BYTE *)(v5 + 4);
  v7 = *(_BYTE *)(v5 + 5);
  *((_DWORD *)v3 + 10) = *(_DWORD *)v5;
  v3 += 5;
  *((_BYTE *)v3 + 4) = v6;
  *((_BYTE *)v3 + 5) = v7;
  return sub_EAFF58;
}

void sub_EAFF58(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  char v9;

  v2 = *(void **)a1;
  v3 = *(unsigned int *)(*(_QWORD *)a1 + 40);
  v4 = (unsigned int *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32));
  v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + 44);
  v6 = v3 | (v5 << 32);
  v7 = *(_BYTE *)(*(_QWORD *)a1 + 45);
  v8 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  v9 = *((_BYTE *)v4 + 5);
  *v4 = v3;
  *((_BYTE *)v4 + 4) = v5;
  *((_BYTE *)v4 + 5) = v7;
  if ((a2 & 1) != 0)
  {
    if ((v7 & 1) == 0)
    {
      if ((v9 & 1) == 0)
      {
        if ((v6 & 0x100000000) != 0)
          goto LABEL_5;
        goto LABEL_12;
      }
LABEL_14:
      sub_EAFB8C();
      goto LABEL_15;
    }
LABEL_8:
    if ((v9 & 1) != 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((v7 & 1) != 0)
    goto LABEL_8;
  if ((v9 & 1) != 0)
    goto LABEL_14;
  if ((v6 & 0x100000000) != 0)
  {
LABEL_5:
    if ((v8 & 0x100000000) != 0)
      goto LABEL_15;
    goto LABEL_14;
  }
LABEL_12:
  if ((v8 & 0x100000000) != 0 || *(float *)&v3 != *(float *)&v8)
    goto LABEL_14;
LABEL_15:
  free(v2);
}

uint64_t LoadingView.titlePosition.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition, v3, 0, 0);
  return *v1;
}

void LoadingView.titlePosition.setter(unsigned __int8 a1)
{
  char *v1;
  char *v3;
  double v4;
  int v5;
  char v6[24];

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition], v6, 1, 0).n128_u64[0];
  v5 = *v3;
  *v3 = a1;
  if (v5 != a1)
    objc_msgSend(v1, "setNeedsLayout", v4);
}

void (*LoadingView.titlePosition.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_EB0114;
}

void sub_EB0114(id **a1)
{
  id *v1;
  int v2;
  _BYTE *v3;
  id v4;
  int v5;

  v1 = *a1;
  v2 = *((unsigned __int8 *)*a1 + 40);
  v4 = (*a1)[3];
  v3 = (*a1)[4];
  v5 = v3[(_QWORD)v4];
  v3[(_QWORD)v4] = v2;
  if (v2 != v5)
    objc_msgSend(v1[3], "setNeedsLayout");
  free(v1);
}

id LoadingView.font.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "font");
}

void LoadingView.font.setter(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label);
  objc_msgSend(v2, "setFont:", a1);

}

void (*LoadingView.font.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = objc_msgSend(*(id *)(v1 + v2), "font");
  return sub_EB0230;
}

void sub_EB0230(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v3, "setFont:", v2);
    v4 = v2;
  }
  else
  {
    v5 = v3;
    objc_msgSend(v5, "setFont:", v2);

    v4 = v5;
  }

}

void sub_EB0298(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  NSString v10;
  char v11[24];

  v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title], v11, 0, 0);
  v6 = *((_QWORD *)v5 + 1);
  if (!v6)
  {
    if (!a2)
      return;
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    v10 = 0;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)v5;
  if (!a2
    || (v7 == a1 ? (v8 = v6 == a2) : (v8 = 0),
        !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, a1, a2, 0) & 1) == 0))
  {
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
LABEL_11:
    objc_msgSend(v9, "setText:", v10);

    objc_msgSend(v2, "setNeedsLayout");
  }
}

uint64_t LoadingView.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void LoadingView.title.setter(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  NSString v10;
  char v11[24];

  v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title], v11, 1, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  if (a2)
  {
    if (v7)
    {
      v8 = v6 == a1 && v7 == a2;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v6, v7, 0) & 1) != 0)
        goto LABEL_12;
    }
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    if (!v7)
      return;
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    v10 = 0;
  }
  objc_msgSend(v9, "setText:", v10);

  objc_msgSend(v2, "setNeedsLayout");
LABEL_12:
  swift_bridgeObjectRelease(v7);
}

void (*LoadingView.title.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_EB0584;
}

void sub_EB0584(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = (uint64_t *)(v5 + v4);
  v9 = *v7;
  v8 = v7[1];
  *v7 = v3;
  v7[1] = v6;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_EB0298(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_EB0298(v9, v8);
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall LoadingView.layoutSubviews()()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  CGFloat x;
  CGFloat y;
  double width;
  double height;
  CGFloat v21;
  uint64_t v22;
  double v23;
  double v24;
  CGFloat v25;
  id v26;
  double v27;
  CGFloat v28;
  uint64_t v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  double v35;
  CGFloat v36;
  char *v37;
  double v38;
  double v39;
  double v40;
  id v41;
  double v42;
  double v43;
  int v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  CGFloat v53;
  uint64_t v54;
  uint64_t v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat rect;
  char v59[24];
  objc_super v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;

  v60.receiver = v0;
  v60.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v60, "layoutSubviews");
  v1 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v2, "displayScale");

  objc_msgSend(v0, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  objc_msgSend(v0, "layoutMargins");
  UIEdgeInsetsInsetRect(v4, v6, v8, v10, v11, v12);
  LoadingView.sizeThatFits(_:)(v13, v14);
  v16 = v15;
  objc_msgSend(v0, "bounds");
  v52 = v16;
  v61.origin.x = CGRect.centeringAlong(axes:bounds:scale:)(3);
  x = v61.origin.x;
  y = v61.origin.y;
  width = v61.size.width;
  height = v61.size.height;
  v21 = CGRectGetWidth(v61);
  v22 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  rect = height;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label], "sizeThatFits:", width, height, v52);
  v56 = v24;
  v57 = v23;
  v62.origin.x = 0.0;
  v62.origin.y = 0.0;
  v62.size.height = 0.0;
  v62.size.width = v21;
  v25 = CGRectGetWidth(v62);
  v26 = sub_EAFCFC();
  objc_msgSend(v26, "intrinsicContentSize");
  v28 = v27;

  v29 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator], "intrinsicContentSize");
  v31 = v30;
  v33 = v32;
  v63.origin.x = 0.0;
  v63.origin.y = 0.0;
  v63.size.width = v25;
  v63.size.height = v28;
  v34 = CGRectGetHeight(v63);
  v64.origin.x = 0.0;
  v64.origin.y = 0.0;
  v64.size.width = v31;
  v64.size.height = v33;
  v35 = CGRectGetHeight(v64);
  if (v34 > v35)
    v36 = v34;
  else
    v36 = v35;
  v37 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  *(_QWORD *)&v38 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition], v59, 0, 0).n128_u64[0];
  if (*v37)
  {
    if (*v37 == 1)
    {
      v65.origin.x = x;
      v65.origin.y = y;
      v65.size.width = width;
      v65.size.height = rect;
      CGRectGetMinX(v65);
      v66.origin.x = x;
      v66.origin.y = y;
      v66.size.width = v21;
      v66.size.height = v36;
      CGRectGetMaxY(v66);
      objc_msgSend(*(id *)&v0[v22], "_firstBaselineOffsetFromTop");
    }
    else
    {
      objc_msgSend(*(id *)&v0[v29], "intrinsicContentSize", v38);
      v40 = v39;
      v41 = sub_EAFCFC();
      objc_msgSend(v41, "intrinsicContentSize");
      v43 = v42;

      if (v40 > v43)
        v43 = v40;
      v69.origin.x = x;
      v69.origin.y = y;
      v69.size.width = v43;
      v69.size.height = v36;
      CGRectGetMaxX(v69);
      v70.origin.x = x;
      v70.origin.y = y;
      v70.size.width = width;
      v70.size.height = rect;
      CGRectGetMinY(v70);
    }
  }
  else
  {
    v67.origin.x = x;
    v67.origin.y = y;
    v67.size.width = width;
    v67.size.height = rect;
    CGRectGetMinX(v67);
    v68.origin.x = x;
    v68.origin.y = y;
    v68.size.height = v56;
    v68.size.width = v57;
    CGRectGetMaxY(v68);
    objc_msgSend(*(id *)&v0[v22], "_baselineOffsetFromBottom");
  }
  v44 = *v37;
  v45 = sub_EAFCFC();
  CGRect.centeringAlong(axes:bounds:scale:)(2);
  if (v44 == 2)
  {
    objc_msgSend(v0, "bounds", *(_QWORD *)&v36);
    objc_msgSend(v45, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v1));

    v47 = *(id *)&v0[v29];
    CGRect.centeringAlong(axes:bounds:scale:)(2);
    objc_msgSend(v0, "bounds", *(_QWORD *)&v36);
    objc_msgSend(v47, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v1));

    v48 = *(id *)&v0[v22];
    v53 = v56;
    v49 = 2;
  }
  else
  {
    v54 = v46;
    CGRect.centeringAlong(axes:bounds:scale:)(1);
    objc_msgSend(v0, "bounds", v54);
    objc_msgSend(v45, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v1));

    v50 = *(id *)&v0[v29];
    CGRect.centeringAlong(axes:bounds:scale:)(2);
    v55 = v51;
    CGRect.centeringAlong(axes:bounds:scale:)(1);
    objc_msgSend(v0, "bounds", v55);
    objc_msgSend(v50, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v1));

    v48 = *(id *)&v0[v22];
    v53 = v56;
    v49 = 1;
  }
  CGRect.centeringAlong(axes:bounds:scale:)(v49);
  objc_msgSend(v0, "bounds", *(_QWORD *)&v53);
  objc_msgSend(v48, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v1));

}

double LoadingView.sizeThatFits(_:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _BYTE *v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  _QWORD v24[2];
  _QWORD v25[2];
  _BYTE v26[24];

  v3 = v2;
  v6 = sub_EAFCFC();
  objc_msgSend(v6, "sizeThatFits:", 0.0, 0.0);
  v8 = v7;
  v10 = v9;

  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "sizeThatFits:", 0.0, 0.0);
  v13 = v12;
  if (v8 > v11)
    v14 = v8;
  else
    v14 = v11;
  v15 = (_BYTE *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition, v26, 0, 0).n128_u64[0];
  if (v10 > v13)
    v17 = v10;
  else
    v17 = v13;
  if (*v15 == 2)
  {
    v18 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "intrinsicContentSize", v16);
    objc_msgSend(*(id *)(v3 + v18), "intrinsicContentSize");
    return v14 + v19;
  }
  else
  {
    v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "sizeThatFits:", 0.0, 0.0);
    v22 = v21;
    _s3__C6CGSizeVMa_1(0);
    *(double *)v25 = a1;
    *(double *)&v25[1] = a2;
    v24[0] = 0;
    v24[1] = 0;
    if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v25, v24) & 1) != 0)
    {
      objc_msgSend(*(id *)(v3 + v20), "sizeThatFits:", a1, a2 - (v17 + 0.0 + 8.0));
    }
    else if (v22 > v14)
    {
      return v22;
    }
    else
    {
      return v14;
    }
  }
  return a1;
}

double LoadingView.intrinsicContentSize.getter()
{
  return LoadingView.sizeThatFits(_:)(0.0, 0.0);
}

BOOL static LoadingView.Style.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (((a1 | a2) & 0x100000000) != 0)
    return BYTE4(a1) & BYTE4(a2) & 1;
  else
    return *(float *)&a1 == *(float *)&a2;
}

uint64_t sub_EB0F0C(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = *(unsigned __int8 *)(a2 + 4);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(float *)a1 == *(float *)a2;
  return result;
}

uint64_t sub_EB0F3C()
{
  uint64_t result;

  sub_EB1318();
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleSubheadline, UIFontWeightRegular);
  qword_150D998 = result;
  return result;
}

void LoadingView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LoadingView", 23, "init(frame:)", 12, 0);
  __break(1u);
}

unint64_t sub_EB103C()
{
  unint64_t result;

  result = qword_150D9D0;
  if (!qword_150D9D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LoadingView.TextPosition, &type metadata for LoadingView.TextPosition);
    atomic_store(result, (unint64_t *)&qword_150D9D0);
  }
  return result;
}

uint64_t type metadata accessor for LoadingView()
{
  return objc_opt_self(_TtC11MusicCoreUI11LoadingView);
}

uint64_t storeEnumTagSinglePayload for LoadingView.TextPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_EB10EC + 4 * byte_10B2E75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_EB1120 + 4 * byte_10B2E70[v4]))();
}

uint64_t sub_EB1120(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_EB1128(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xEB1130);
  return result;
}

uint64_t sub_EB113C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xEB1144);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_EB1148(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_EB1150(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.TextPosition()
{
  return &type metadata for LoadingView.TextPosition;
}

uint64_t __swift_memcpy5_4_0(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LoadingView.Style(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LoadingView.Style(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_EB11CC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_EB11E8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.Style()
{
  return &type metadata for LoadingView.Style;
}

void sub_EB1218()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *((_WORD *)v1 + 2) = 256;
  *(_DWORD *)v1 = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *v2 = 0;
  v2[1] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/LoadingView.swift", 29, 2, 42, 0);
  __break(1u);
}

unint64_t sub_EB1318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1506538;
  if (!qword_1506538)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1506538);
  }
  return result;
}

uint64_t MarkupView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];

  type metadata accessor for AttributedString(0);
  __chkstk_darwin();
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = a1;
  v13[1] = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA00);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)(v13);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  result = Text.init(_:)(v7);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v10;
  *(_BYTE *)(a3 + 16) = v11 & 1;
  *(_QWORD *)(a3 + 24) = v12;
  return result;
}

uint64_t sub_EB141C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MarkupView.body>>, 1);
}

uint64_t sub_EB142C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v12[2];

  type metadata accessor for AttributedString(0);
  __chkstk_darwin();
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = v1[1];
  v12[0] = v5;
  v12[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA00);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)(v12);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  result = Text.init(_:)(v4);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v10 & 1;
  *(_QWORD *)(a1 + 24) = v11;
  return result;
}

ValueMetadata *type metadata accessor for MarkupView()
{
  return &type metadata for MarkupView;
}

void *sub_EB1500()
{
  return &protocol witness table for Text;
}

uint64_t NoticeView.init(notice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = (int *)type metadata accessor for NoticeView(0);
  v5 = a2 + v4[5];
  *(_QWORD *)v5 = swift_getKeyPath(&off_10B2FB0);
  *(_QWORD *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  v6 = (_QWORD *)(a2 + v4[6]);
  v17 = 0x3FF0000000000000;
  State.init(wrappedValue:)(&v14, &v17, &type metadata for Double);
  v7 = v15;
  *v6 = v14;
  v6[1] = v7;
  v8 = a2 + v4[7];
  LOBYTE(v17) = 0;
  GestureState.init(wrappedValue:)(&v14, &v17, &type metadata for Bool);
  v9 = v15;
  v10 = v16;
  *(_BYTE *)v8 = v14;
  *(_QWORD *)(v8 + 8) = v9;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = a2 + v4[8];
  LOBYTE(v17) = 0;
  State.init(wrappedValue:)(&v14, &v17, &type metadata for Bool);
  v12 = v15;
  *(_BYTE *)v11 = v14;
  *(_QWORD *)(v11 + 8) = v12;
  return sub_5C04C(a1, a2, type metadata accessor for Notice);
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return sub_6345C(a1, qword_150DB88, (uint64_t)&nominal type descriptor for NoticeView);
}

uint64_t EnvironmentValues.noticeDismissal.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_EB1820();
  EnvironmentValues.subscript.getter(&v2, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v0);
  return v2;
}

double sub_EB166C@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  char v3;
  double result;
  __int128 v5;
  char v6;

  v2 = sub_EB1820();
  EnvironmentValues.subscript.getter(&v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v2);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_BYTE *)(a1 + 16) = v3;
  return result;
}

double sub_EB16C0@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  char v3;
  double result;
  __int128 v5;
  char v6;

  v2 = sub_EB1820();
  EnvironmentValues.subscript.getter(&v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v2);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_BYTE *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_EB1714(uint64_t a1)
{
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v5[2];
  char v6;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v5[0] = *(_QWORD *)a1;
  v5[1] = v1;
  v6 = v2;
  sub_E55108(v5[0], v1);
  v3 = sub_EB1820();
  return EnvironmentValues.subscript.setter(v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v3);
}

uint64_t EnvironmentValues.noticeDismissal.setter(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  _QWORD v5[2];
  char v6;

  v5[0] = a1;
  v5[1] = a2;
  v6 = a3;
  v3 = sub_EB1820();
  return EnvironmentValues.subscript.setter(v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v3);
}

uint64_t property wrapper backing initializer of NoticeView.swapScale(double a1)
{
  double v2;
  _QWORD v3[2];

  v2 = a1;
  State.init(wrappedValue:)(v3, &v2, &type metadata for Double);
  return v3[1];
}

uint64_t property wrapper backing initializer of NoticeView.isHighlighted(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  GestureState.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

unint64_t sub_EB1820()
{
  unint64_t result;

  result = qword_150DA08;
  if (!qword_150DA08)
  {
    result = swift_getWitnessTable(&unk_10B31AC, &_s25NoticeDismissalContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_150DA08);
  }
  return result;
}

uint64_t NoticeView.notice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5BDB8(v1, a1, type metadata accessor for Notice);
}

uint64_t NoticeView.notice.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_EB1890(a1, v1);
}

uint64_t sub_EB1890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NoticeView.dismiss.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = v0 + *(int *)(type metadata accessor for NoticeView(0) + 20);
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 17);
  sub_EB1978(*(_QWORD *)v1, v3, v4, *(_BYTE *)(v1 + 17));
  v6 = sub_E43200(v2, v3, v4 | (v5 << 8));
  sub_E550CC(v2, v3, v4, v5);
  return v6;
}

double sub_EB1978(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  double v4;

  if ((a4 & 1) != 0)
    sub_E55108(result, a2);
  else
    *(_QWORD *)&v4 = swift_retain().n128_u64[0];
  return v4;
}

uint64_t NoticeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  char *v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  __n128 v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t OpaqueTypeConformance2;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double *v136;
  uint64_t v137;
  __n128 v138;
  __n128 v139;
  __n128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  _QWORD *v145;
  void (*v146)(char *, _QWORD, uint64_t);
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t result;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t);
  char *v157;
  char *v158;
  void (*v159)(char *, char *, uint64_t);
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  char *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  char *v167;
  unint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  char *v221;
  _QWORD *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD v230[2];
  __int128 v231;
  uint64_t v232;
  char *v233;
  __int128 v234;
  _OWORD v235[7];

  v2 = v1;
  v179 = a1;
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA10);
  __chkstk_darwin();
  v178 = (char *)&v170 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v174 = (char *)&v170 - v4;
  v220 = type metadata accessor for DynamicTypeSize(0);
  v222 = *(_QWORD **)(v220 - 8);
  __chkstk_darwin();
  v221 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v219 = (char *)&v170 - v6;
  v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA18);
  __chkstk_darwin();
  v173 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v175 = (uint64_t)&v170 - v8;
  v218 = type metadata accessor for ContentTransition(0);
  v217 = *(_QWORD *)(v218 - 8);
  v9 = __chkstk_darwin();
  v216 = (char *)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for TapGesture(0, v9);
  v212 = *(_QWORD *)(v214 - 8);
  __chkstk_darwin();
  v210 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA20);
  v211 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin();
  v209 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = type metadata accessor for NoticeView(0);
  v195 = *(_QWORD *)(v229 - 8);
  __chkstk_darwin();
  v225 = v13;
  v215 = (uint64_t)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for LocalCoordinateSpace(0);
  v14 = __chkstk_darwin();
  v187 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = type metadata accessor for DragGesture(0, v14);
  v196 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin();
  v194 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA28);
  __chkstk_darwin();
  v204 = (char *)&v170 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA30);
  v18 = __chkstk_darwin();
  v205 = (uint64_t)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v186 = type metadata accessor for Material(0, v18);
  v185 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin();
  v180 = (char *)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
  __chkstk_darwin();
  v22 = (char **)((char *)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v207 = type metadata accessor for Notice(0);
  __chkstk_darwin();
  v24 = (char *)&v170 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for NoticeView.Content(0);
  __chkstk_darwin();
  v27 = (char *)&v170 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA38);
  __chkstk_darwin();
  v29 = (char *)&v170 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA40);
  __chkstk_darwin();
  v31 = (char *)&v170 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA48);
  __chkstk_darwin();
  v33 = (char *)&v170 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA50);
  __chkstk_darwin();
  v35 = (char *)&v170 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA58);
  __chkstk_darwin();
  v226 = (uint64_t)&v170 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA60);
  v192 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin();
  v191 = (char *)&v170 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA68);
  v199 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin();
  v198 = (char *)&v170 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA70);
  __chkstk_darwin();
  v202 = (char *)&v170 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA78);
  __chkstk_darwin();
  v203 = (uint64_t)&v170 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA80);
  __chkstk_darwin();
  v223 = (char *)&v170 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA88);
  v171 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin();
  v170 = (char *)&v170 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = v2;
  sub_5BDB8(v2, (uint64_t)v24, type metadata accessor for Notice);
  *v22 = swift_getKeyPath(&unk_10B2FD8);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  swift_storeEnumTagMultiPayload(v22, v43, 0);
  KeyPath = swift_getKeyPath(&unk_10B3008);
  v45 = (uint64_t *)&v27[*(int *)(v25 + 32)];
  *v45 = KeyPath;
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  swift_storeEnumTagMultiPayload(v45, v46, 0);
  v206 = v24;
  sub_5C04C((uint64_t)v24, (uint64_t)v27, type metadata accessor for Notice);
  *(_QWORD *)&v235[0] = 0x4041000000000000;
  v47 = sub_EB2E00();
  ScaledMetric.init(wrappedValue:)(v235, &type metadata for Double, v47);
  *(_QWORD *)&v235[0] = 0x4010000000000000;
  v48 = sub_E21D94();
  ScaledMetric.init(wrappedValue:)(v235, &type metadata for CGFloat, v48);
  v49 = sub_5C090((uint64_t)v22, (uint64_t)&v27[*(int *)(v25 + 28)], &qword_150B668);
  v50 = static Alignment.center.getter(v49);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v235, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, 1, v50, v51);
  sub_5BDB8((uint64_t)v27, (uint64_t)v29, type metadata accessor for NoticeView.Content);
  v52 = &v29[*(int *)(v181 + 36)];
  v53 = v235[5];
  *((_OWORD *)v52 + 4) = v235[4];
  *((_OWORD *)v52 + 5) = v53;
  *((_OWORD *)v52 + 6) = v235[6];
  v54 = v235[1];
  *(_OWORD *)v52 = v235[0];
  *((_OWORD *)v52 + 1) = v54;
  v55 = v235[3];
  *((_OWORD *)v52 + 2) = v235[2];
  *((_OWORD *)v52 + 3) = v55;
  v56 = sub_5C0DC((uint64_t)v27, type metadata accessor for NoticeView.Content);
  v57 = v180;
  v58 = static Material.regular.getter(v56);
  LOBYTE(v22) = static Edge.Set.all.getter(v58);
  v59 = &v31[*(int *)(v182 + 36)];
  v60 = v185;
  v61 = v186;
  (*(void (**)(char *, char *, _QWORD))(v185 + 16))(v59, v57, v186);
  v59[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150AC80) + 36)] = (char)v22;
  sub_5C238((uint64_t)v29, (uint64_t)v31, &qword_150DA38);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v61);
  sub_56024((uint64_t)v29, &qword_150DA38);
  if (qword_15061A8 != -1)
    swift_once(&qword_15061A8, sub_E1B718);
  v62 = static Corner.extraLarge;
  v63 = *(_QWORD *)algn_1583DD8;
  v64 = byte_1583DE0;
  sub_5C238((uint64_t)v31, (uint64_t)v33, &qword_150DA40);
  v65 = &v33[*(int *)(v183 + 36)];
  *(_QWORD *)v65 = v62;
  *((_QWORD *)v65 + 1) = v63;
  v65[16] = v64;
  sub_56024((uint64_t)v31, &qword_150DA40);
  v66 = v228 + *(int *)(v229 + 28);
  v67 = v228;
  v68 = *(char **)(v66 + 8);
  LOBYTE(v232) = *(_BYTE *)v66;
  v233 = v68;
  v234 = *(_OWORD *)(v66 + 16);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA98);
  GestureState.wrappedValue.getter(v230, v69);
  if (LOBYTE(v230[0]))
    v70 = 0.4;
  else
    v70 = 1.0;
  sub_5C238((uint64_t)v33, (uint64_t)v35, &qword_150DA48);
  *(double *)&v35[*(int *)(v184 + 36)] = v70;
  sub_56024((uint64_t)v33, &qword_150DA48);
  v71 = static Animation.easeIn(duration:)(0.2);
  v72 = *(char **)(v66 + 8);
  LOBYTE(v232) = *(_BYTE *)v66;
  v233 = v72;
  v234 = *(_OWORD *)(v66 + 16);
  GestureState.wrappedValue.getter(v230, v69);
  v73 = v230[0];
  v74 = v226;
  sub_5C238((uint64_t)v35, v226, &qword_150DA50);
  v75 = v74 + *(int *)(v227 + 36);
  *(_QWORD *)v75 = v71;
  *(_BYTE *)(v75 + 8) = v73;
  v76 = sub_56024((uint64_t)v35, &qword_150DA50);
  v77 = v187;
  static CoordinateSpaceProtocol<>.local.getter(v76);
  v78 = v194;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v77, v188, &protocol witness table for LocalCoordinateSpace, 0.0);
  v79 = *(_QWORD *)(v66 + 8);
  LOBYTE(v230[0]) = *(_BYTE *)v66;
  v230[1] = v79;
  v231 = *(_OWORD *)(v66 + 16);
  GestureState.projectedValue.getter(&v232, v69);
  LOBYTE(v77) = v232;
  v187 = v233;
  v186 = v234;
  v80 = v67;
  v81 = v215;
  sub_5BDB8(v67, v215, type metadata accessor for NoticeView);
  v82 = *(unsigned __int8 *)(v195 + 80);
  v83 = (v82 + 16) & ~v82;
  v84 = v83 + v225;
  v225 = v82 | 7;
  v188 = v84;
  v85 = swift_allocObject(&unk_13CC9B8, v84, v82 | 7);
  v195 = v83;
  sub_5C04C(v81, v85 + v83, type metadata accessor for NoticeView);
  v86 = v196;
  v87 = (uint64_t)v204;
  v88 = v197;
  (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v204, v78, v197);
  v89 = v190;
  v90 = v87 + *(int *)(v190 + 44);
  *(_BYTE *)v90 = (_BYTE)v77;
  *(_QWORD *)(v90 + 8) = v187;
  *(_OWORD *)(v90 + 16) = v186;
  v91 = (_QWORD *)(v87 + *(int *)(v89 + 48));
  *v91 = sub_EB3028;
  v91[1] = v85;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v78, v88);
  v92 = v210;
  TapGesture.init(count:)(1);
  sub_5BDB8(v80, v81, type metadata accessor for NoticeView);
  v93 = swift_allocObject(&unk_13CC9E0, v84, v225);
  v94 = v81;
  sub_5C04C(v81, v93 + v83, type metadata accessor for NoticeView);
  v95 = swift_allocObject(&unk_13CCA08, 32, 7);
  *(_QWORD *)(v95 + 16) = sub_EB3374;
  *(_QWORD *)(v95 + 24) = v93;
  v96 = v209;
  v97 = v214;
  Gesture.onEnded(_:)(sub_129E54, v95, v214, &protocol witness table for TapGesture, v98);
  v99 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v212 + 8))(v92, v97, v99);
  v100 = v205;
  sub_5C238(v87, v205, &qword_150DA28);
  v101 = v208;
  (*(void (**)(uint64_t, char *, uint64_t))(v211 + 32))(v100 + *(int *)(v208 + 52), v96, v213);
  sub_56024(v87, &qword_150DA28);
  v103 = static GestureMask.all.getter(v102);
  v104 = sub_EB33A4();
  v105 = sub_5C150(&qword_150DAD0, &qword_150DA30, (uint64_t)&protocol conformance descriptor for SequenceGesture<A, B>);
  v106 = v191;
  v107 = v227;
  v108 = v226;
  View.gesture<A>(_:including:)(v100, v103, v227, v101, v104, v105);
  sub_56024(v100, &qword_150DA30);
  sub_56024(v108, &qword_150DA58);
  v109 = v228;
  v110 = (uint64_t)v206;
  sub_5BDB8(v228, (uint64_t)v206, type metadata accessor for Notice);
  sub_5BDB8(v109, v94, type metadata accessor for NoticeView);
  v111 = swift_allocObject(&unk_13CCA30, v188, v225);
  sub_5C04C(v94, v111 + v195, type metadata accessor for NoticeView);
  v232 = v107;
  v233 = (char *)v101;
  *(_QWORD *)&v234 = v104;
  *((_QWORD *)&v234 + 1) = v105;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v232, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
  v113 = sub_4DD24(&qword_150DAD8, type metadata accessor for Notice, (uint64_t)&protocol conformance descriptor for Notice);
  v114 = v198;
  v115 = v193;
  View.onChange<A>(of:initial:_:)(v110, 0, sub_EB3704, v111, v193, v207, OpaqueTypeConformance2, v113);
  swift_release();
  sub_5C0DC(v110, type metadata accessor for Notice);
  v116 = (*(uint64_t (**)(char *, uint64_t))(v192 + 8))(v106, v115);
  v117 = v216;
  static ContentTransition.opacity.getter(v116);
  v118 = swift_getKeyPath(&unk_10B3038);
  v119 = (uint64_t)v202;
  v120 = (uint64_t *)&v202[*(int *)(v189 + 36)];
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DAE0);
  v122 = v217;
  v123 = v218;
  (*(void (**)(char *, char *, uint64_t))(v217 + 16))((char *)v120 + *(int *)(v121 + 28), v117, v218);
  *v120 = v118;
  v124 = v199;
  v125 = v201;
  (*(void (**)(uint64_t, char *, uint64_t))(v199 + 16))(v119, v114, v201);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v117, v123);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v114, v125);
  v126 = (uint64_t *)(v109 + *(int *)(v229 + 24));
  v127 = *v126;
  v128 = (char *)v126[1];
  v232 = v127;
  v233 = v128;
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DAE8);
  v130 = State.wrappedValue.getter(v230, v129);
  v131 = v230[0];
  v132 = static UnitPoint.center.getter(v130);
  v134 = v133;
  v135 = v203;
  sub_5C238(v119, v203, &qword_150DA70);
  v136 = (double *)(v135 + *(int *)(v200 + 36));
  *(_QWORD *)v136 = v131;
  *((_QWORD *)v136 + 1) = v131;
  v136[2] = v132;
  *((_QWORD *)v136 + 3) = v134;
  v137 = sub_56024(v119, &qword_150DA70);
  v138.n128_u64[0] = 0x4089900000000000;
  v139.n128_u64[0] = 0x4043000000000000;
  v140.n128_u64[0] = 1.0;
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v137, v140, v138, v139, 1.0);
  v141 = Animation.delay(_:)(0.05);
  swift_release();
  v142 = (uint64_t)v223;
  v143 = (uint64_t *)&v223[*(int *)(v224 + 36)];
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DAF0);
  sub_5BDB8(v109, (uint64_t)v143 + *(int *)(v144 + 36), type metadata accessor for Notice);
  *v143 = v141;
  sub_5C090(v135, v142, &qword_150DA78);
  v145 = v222;
  v146 = (void (*)(char *, _QWORD, uint64_t))v222[13];
  v147 = v219;
  v148 = v220;
  v146(v219, enum case for DynamicTypeSize.xSmall(_:), v220);
  v149 = v221;
  v146(v221, enum case for DynamicTypeSize.accessibility2(_:), v148);
  v150 = sub_4DD24((unint64_t *)&qword_150BC10, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v147, v149, v148, v150);
  if ((result & 1) != 0)
  {
    v152 = v149;
    v153 = v177;
    v154 = v174;
    v155 = &v174[*(int *)(v177 + 48)];
    v156 = (void (*)(char *, char *, uint64_t))v145[4];
    v156(v174, v147, v148);
    v156(v155, v152, v148);
    v157 = v178;
    v158 = &v178[*(int *)(v153 + 48)];
    v159 = (void (*)(char *, char *, uint64_t))v145[2];
    v159(v178, v154, v148);
    v159(v158, v155, v148);
    v160 = (uint64_t)v173;
    v156(v173, v157, v148);
    v161 = (void (*)(char *, uint64_t))v145[1];
    v161(v158, v148);
    v162 = &v157[*(int *)(v153 + 48)];
    v156(v157, v154, v148);
    v156(v162, v155, v148);
    v163 = v176;
    v156((char *)(v160 + *(int *)(v176 + 36)), v162, v148);
    v161(v157, v148);
    v164 = v175;
    sub_5C090(v160, v175, &qword_150DA18);
    v165 = sub_EB5F28();
    v166 = sub_5C150(&qword_150DB20, &qword_150DA18, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v167 = v170;
    v168 = v165;
    v169 = (uint64_t)v223;
    View.dynamicTypeSize<A>(_:)(v164, v224, v163, v168, v166);
    sub_56024(v164, &qword_150DA18);
    sub_56024(v169, &qword_150DA80);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v171 + 32))(v179, v167, v172);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NoticeView.Content(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150DC30, (uint64_t)&nominal type descriptor for NoticeView.Content);
}

unint64_t sub_EB2E00()
{
  unint64_t result;

  result = qword_150DA90;
  if (!qword_150DA90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_150DA90);
  }
  return result;
}

uint64_t sub_EB2E44(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v22[-v9];
  v11 = type metadata accessor for Notice(0);
  v12 = *(unsigned __int8 *)(a4 + *(int *)(v11 + 40));
  sub_5BDB8(a4, (uint64_t)v10, type metadata accessor for NoticeView);
  if (v12 == 1)
  {
    result = sub_5C0DC((uint64_t)v10, type metadata accessor for NoticeView);
LABEL_5:
    *a2 = 1;
    return result;
  }
  v14 = (uint64_t *)&v10[*(int *)(v11 + 32)];
  v16 = *v14;
  v15 = v14[1];
  if (*v14)
  {
    v17 = swift_allocObject(&unk_13CCB20, 32, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v15;
    sub_A9DEC(v16, v15);
    sub_5C198((uint64_t)sub_62604, v17);
    sub_5BDB8((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
    v18 = &v8[*(int *)(v6 + 32)];
    v19 = *v18;
    v20 = *((_QWORD *)v18 + 1);
    v22[8] = v19;
    v23 = v20;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
    State.wrappedValue.getter(&v24, v21);
    sub_5C0DC((uint64_t)v8, type metadata accessor for NoticeView);
    result = sub_5C0DC((uint64_t)v10, type metadata accessor for NoticeView);
    if ((v24 & 1) != 0)
      return result;
    goto LABEL_5;
  }
  sub_A9DEC(0, v14[1]);
  sub_5C198(0, 0);
  sub_5BDB8((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
  sub_5C0DC((uint64_t)v8, type metadata accessor for NoticeView);
  return sub_5C0DC((uint64_t)v10, type metadata accessor for NoticeView);
}

uint64_t sub_EB3028(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  return sub_EB2E44(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

double sub_EB307C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for NoticeView(0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.getter(&v14, v3);
  if ((v14 & 1) == 0)
  {
    LOBYTE(v14) = 1;
    State.wrappedValue.setter(&v14, v3);
    v4 = *(void (**)(void))(a1 + *(int *)(type metadata accessor for Notice(0) + 32));
    if (v4)
      v4();
  }
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for Notice(0) + 40)) == 1)
  {
    v6 = a1 + *(int *)(v2 + 20);
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(unsigned __int8 *)(v6 + 16);
    v10 = *(unsigned __int8 *)(v6 + 17);
    sub_EB1978(*(_QWORD *)v6, v8, v9, *(_BYTE *)(v6 + 17));
    sub_E43200(v7, v8, v9 | (v10 << 8));
    v12 = v11;
    result = sub_E550CC(v7, v8, v9, v10);
    if (v12)
    {
      LOBYTE(v14) = 0;
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
      Binding.wrappedValue.setter(&v14, v13);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t objectdestroyTm_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v12;

  v1 = type metadata accessor for NoticeView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for Notice(0);
  v8 = v0 + v4 + *(int *)(v7 + 20);
  v9 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + *(int *)(v7 + 32)))
    swift_release();
  sub_E550CC(*(_QWORD *)(v6 + *(int *)(v1 + 20)), *(_QWORD *)(v6 + *(int *)(v1 + 20) + 8), *(unsigned __int8 *)(v6 + *(int *)(v1 + 20) + 16), *(_BYTE *)(v6 + *(int *)(v1 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_EB3374()
{
  return sub_EB91B4((uint64_t (*)(uint64_t))sub_EB307C);
}

uint64_t sub_EB3380()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_EB33A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DAA0;
  if (!qword_150DAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA58);
    sub_EB3428();
    sub_5C150(&qword_150AD88, &qword_150AD90, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DAA0);
  }
  return result;
}

unint64_t sub_EB3428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DAA8;
  if (!qword_150DAA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA50);
    sub_E871DC(&qword_150DAB0, &qword_150DA48, (void (*)(void))sub_EB34B4, (void (*)(void))sub_E1BCB0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DAA8);
  }
  return result;
}

unint64_t sub_EB34B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DAB8;
  if (!qword_150DAB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA40);
    sub_EB3538();
    sub_5C150(&qword_150AC78, &qword_150AC80, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DAB8);
  }
  return result;
}

unint64_t sub_EB3538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DAC0;
  if (!qword_150DAC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA38);
    sub_4DD24(&qword_150DAC8, type metadata accessor for NoticeView.Content, (uint64_t)&unk_10B315C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DAC0);
  }
  return result;
}

void sub_EB35BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;

  v4 = *(_QWORD *)(type metadata accessor for NoticeView(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  v6.n128_u64[0] = 0x408A900000000000;
  v7.n128_u64[0] = 0x4048000000000000;
  v8.n128_u64[0] = 1.0;
  v10 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v9, v8, v6, v7, 1.0);
  v24 = a3;
  withAnimation<A>(_:_:)(v10, sub_EB9148, v23, (char *)&type metadata for () + 8);
  swift_release();
  v11 = sub_EB9168();
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  sub_5BDB8(a3, (uint64_t)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for NoticeView);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_13CCAF8, v21 + v5, v20 | 7);
  sub_5C04C((uint64_t)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v22 + v21, type metadata accessor for NoticeView);
  OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_EB91A8, v22, 0.215);
  swift_release();

}

void sub_EB3704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  sub_EB35BC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

double sub_EB3750(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v5;
  double result;
  _QWORD v7[4];

  a3.n128_u64[0] = 0x406C600000000000;
  a2.n128_u64[0] = 1.0;
  a4.n128_u64[0] = 17.0;
  v5 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(a1, a2, a3, a4, 1.0);
  v7[2] = a1;
  withAnimation<A>(_:_:)(v5, sub_EB91F0, v7, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_EB37C8(double a1)
{
  uint64_t v2;
  double v4;

  type metadata accessor for NoticeView(0);
  v4 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DAE8);
  return State.wrappedValue.setter(&v4, v2);
}

uint64_t sub_EB3844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  _BOOL8 v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150DC80);
  __chkstk_darwin();
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DC88);
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin();
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v1, (uint64_t)v11, v12);
  type metadata accessor for NoticeView.Content(0);
  sub_E42DEC((uint64_t)v9);
  sub_EB8A04((uint64_t)v11, (uint64_t)v9, (double *)&v25);
  v13 = sub_EB3A48();
  if (v13)
    v15 = static VerticalAlignment.top.getter(v13);
  else
    v15 = static VerticalAlignment.center.getter(v14);
  v16 = v28;
  *(_QWORD *)v4 = v15;
  *((_QWORD *)v4 + 1) = v16;
  v4[16] = 0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DC90);
  v18 = sub_EB3BD4(v1, (uint64_t)&v25, (uint64_t)&v4[*(int *)(v17 + 44)]);
  v24 = v25;
  v19 = v26;
  v20 = v27;
  v21 = static Edge.Set.all.getter(v18);
  sub_5C238((uint64_t)v4, (uint64_t)v7, &qword_150DC80);
  v22 = &v7[*(int *)(v5 + 36)];
  *v22 = v21;
  *(_OWORD *)(v22 + 8) = v24;
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v20;
  v22[40] = 0;
  sub_56024((uint64_t)v4, &qword_150DC80);
  return sub_5C090((uint64_t)v7, a1, &qword_150DC88);
}

BOOL sub_EB3A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
  __chkstk_darwin();
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NoticeView.Content(0);
  v8 = sub_E42DEC((uint64_t)v7);
  v9 = DynamicTypeSize.isAccessibilitySize.getter(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v10 = type metadata accessor for Notice(0);
    v11 = (_QWORD *)(v1 + *(int *)(v10 + 28));
    v12 = v11[1];
    if (v12)
    {
      v13 = *v11 & 0xFFFFFFFFFFFFLL;
      if ((v12 & 0x2000000000000000) != 0 ? HIBYTE(v12) & 0xF : v13)
      {
        sub_5C238(v1 + *(int *)(v10 + 20), (uint64_t)v3, &qword_150DB28);
        v15 = type metadata accessor for Notice.Thumbnail(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v3, 1, v15) != 1)
        {
          v16 = swift_getEnumCaseMultiPayload(v3, v15) == 1;
          sub_5C0DC((uint64_t)v3, type metadata accessor for Notice.Thumbnail);
          return v16;
        }
        sub_56024((uint64_t)v3, &qword_150DB28);
      }
    }
  }
  return 0;
}

uint64_t sub_EB3BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  double v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  __n128 v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[7];

  v53 = a2;
  v54 = a3;
  v50 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DC98);
  __chkstk_darwin();
  v52 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v46 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DCA0);
  __chkstk_darwin();
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCA8);
  __chkstk_darwin();
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCB0);
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCB8);
  __chkstk_darwin();
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCC0);
  __chkstk_darwin();
  v51 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v46 - v16;
  __chkstk_darwin();
  v19 = (char *)&v46 - v18;
  sub_EB404C(a1, (uint64_t)v8);
  v21 = static Font.subheadline.getter(v20);
  v23 = static Font.Weight.semibold.getter(v22);
  v24 = Font.weight(_:)(v21, v23);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_10B31E8);
  sub_5C238((uint64_t)v8, (uint64_t)v10, &qword_150DCA0);
  v26 = (uint64_t *)&v10[*(int *)(v46 + 36)];
  *v26 = KeyPath;
  v26[1] = v24;
  sub_56024((uint64_t)v8, &qword_150DCA0);
  v28 = static HierarchicalShapeStyle.primary.getter(v27);
  sub_5C238((uint64_t)v10, (uint64_t)v12, &qword_150DCA8);
  *(_DWORD *)&v12[*(int *)(v47 + 36)] = v28;
  v29 = sub_56024((uint64_t)v10, &qword_150DCA8);
  v30 = static Alignment.center.getter(v29);
  v45 = 1;
  v44 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v55, 0x403E000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v44, 0, v45, v30, v31);
  sub_5C238((uint64_t)v12, (uint64_t)v14, &qword_150DCB0);
  v32 = &v14[*(int *)(v48 + 36)];
  v33 = v55[5];
  *((_OWORD *)v32 + 4) = v55[4];
  *((_OWORD *)v32 + 5) = v33;
  *((_OWORD *)v32 + 6) = v55[6];
  v34 = v55[1];
  *(_OWORD *)v32 = v55[0];
  *((_OWORD *)v32 + 1) = v34;
  v35 = v55[3];
  *((_OWORD *)v32 + 2) = v55[2];
  *((_OWORD *)v32 + 3) = v35;
  sub_56024((uint64_t)v12, &qword_150DCB0);
  sub_5C238((uint64_t)v14, (uint64_t)v17, &qword_150DCB8);
  v36 = &v17[*(int *)(v49 + 36)];
  *(_QWORD *)v36 = 0x3FF0000000000000;
  *((_WORD *)v36 + 4) = 0;
  sub_56024((uint64_t)v14, &qword_150DCB8);
  v37 = sub_5C090((uint64_t)v17, (uint64_t)v19, &qword_150DCC0);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v37);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCC8);
  sub_EB4B2C(v50, v53, (uint64_t *)&v6[*(int *)(v38 + 44)]);
  v39 = v51;
  sub_5C238((uint64_t)v19, v51, &qword_150DCC0);
  v40 = v52;
  sub_5C238((uint64_t)v6, v52, &qword_150DC98);
  v41 = v54;
  sub_5C238(v39, v54, &qword_150DCC0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCD0);
  sub_5C238(v40, v41 + *(int *)(v42 + 48), &qword_150DC98);
  sub_56024((uint64_t)v6, &qword_150DC98);
  sub_56024((uint64_t)v19, &qword_150DCC0);
  sub_56024(v40, &qword_150DC98);
  return sub_56024(v39, &qword_150DCC0);
}

void sub_EB404C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int EnumCaseMultiPayload;
  __n128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD v113[3];

  v112 = a2;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD10);
  __chkstk_darwin();
  v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD18);
  v5 = __chkstk_darwin();
  v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for CircularProgressView.LineStyle(0, v5);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin();
  v92 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for CircularProgressView(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin();
  v97 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD20);
  __chkstk_darwin();
  v95 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin();
  v101 = (uint64_t)&v84 - v13;
  v94 = type metadata accessor for ArtworkImage(0, v12);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin();
  v91 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD28);
  __chkstk_darwin();
  v100 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD30);
  __chkstk_darwin();
  v96 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v104 = (uint64_t)&v84 - v17;
  v103 = type metadata accessor for Artwork(0);
  v108 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin();
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v102 = (char *)&v84 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD38);
  __chkstk_darwin();
  v23 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD40);
  __chkstk_darwin();
  v106 = (uint64_t *)((char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD48);
  __chkstk_darwin();
  v107 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
  __chkstk_darwin();
  v28 = (uint64_t *)((char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = type metadata accessor for Notice(0);
  sub_5C238(a1 + *(int *)(v29 + 20), (uint64_t)v28, &qword_150DB28);
  v30 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v28, 1, v30) == 1)
  {
    swift_storeEnumTagMultiPayload(v4, v110, 1);
    v31 = sub_EB8FB4();
    _ConditionalContent<>.init(storage:)(v4, v10, &type metadata for EmptyView, v31, &protocol witness table for EmptyView);
    sub_5C238((uint64_t)v7, (uint64_t)v23, &qword_150DD18);
    swift_storeEnumTagMultiPayload(v23, v21, 1);
    v32 = sub_EB9038();
    v33 = sub_EB8E54(&qword_150DD80, &qword_150DD18, (void (*)(void))sub_EB8FB4);
    _ConditionalContent<>.init(storage:)(v23, v25, v111, v32, v33);
    v34 = (uint64_t)v7;
    v35 = &qword_150DD18;
LABEL_10:
    sub_56024(v34, v35);
    return;
  }
  v85 = v23;
  v86 = v21;
  v87 = v25;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v30);
  if (!EnumCaseMultiPayload)
  {
    v61 = v105;
    v62 = v106;
    *v106 = *v28;
    swift_storeEnumTagMultiPayload(v62, v61, 0);
    v63 = sub_E871DC(&qword_150DD68, &qword_150DD30, (void (*)(void))sub_EB90C4, (void (*)(void))sub_E1BD08);
    swift_retain();
    v64 = (uint64_t)v107;
    _ConditionalContent<>.init(storage:)(v62, &type metadata for Image, v109, &protocol witness table for Image, v63);
    v65 = (uint64_t)v85;
    sub_5C238(v64, (uint64_t)v85, &qword_150DD48);
    swift_storeEnumTagMultiPayload(v65, v86, 0);
    v66 = sub_EB9038();
    v67 = sub_EB8E54(&qword_150DD80, &qword_150DD18, (void (*)(void))sub_EB8FB4);
    _ConditionalContent<>.init(storage:)(v65, v87, v111, v66, v67);
    sub_56024(v64, &qword_150DD48);
    swift_release();
    return;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v68 = static Color.white.getter(v37);
    v69 = v92;
    (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v92, enum case for CircularProgressView.LineStyle.round(_:), v90);
    LOBYTE(v113[0]) = 1;
    v70 = v97;
    v71 = CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(0x100000000, v68, v69, 2.5);
    v72 = static Alignment.center.getter(v71);
    _FrameLayout.init(width:height:alignment:)(v113, 0x4030000000000000, 0, 0x4030000000000000, 0, v72, v73);
    v74 = v98;
    v75 = (uint64_t)v95;
    v76 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v70, v99);
    v77 = (_OWORD *)(v75 + *(int *)(v10 + 36));
    v78 = v113[1];
    *v77 = v113[0];
    v77[1] = v78;
    v77[2] = v113[2];
    (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v76);
    v79 = v101;
    sub_5C090(v75, v101, &qword_150DD20);
    sub_5C238(v79, (uint64_t)v4, &qword_150DD20);
    swift_storeEnumTagMultiPayload(v4, v110, 0);
    v80 = sub_EB8FB4();
    _ConditionalContent<>.init(storage:)(v4, v10, &type metadata for EmptyView, v80, &protocol witness table for EmptyView);
    v81 = (uint64_t)v85;
    sub_5C238((uint64_t)v7, (uint64_t)v85, &qword_150DD18);
    swift_storeEnumTagMultiPayload(v81, v86, 1);
    v82 = sub_EB9038();
    v83 = sub_EB8E54(&qword_150DD80, &qword_150DD18, (void (*)(void))sub_EB8FB4);
    _ConditionalContent<>.init(storage:)(v81, v87, v111, v82, v83);
    sub_56024((uint64_t)v7, &qword_150DD18);
    v34 = v79;
    v35 = &qword_150DD20;
    goto LABEL_10;
  }
  v39 = v102;
  v38 = v103;
  v40 = v108;
  (*(void (**)(char *, _QWORD *, uint64_t))(v108 + 32))(v102, v28, v103);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v19, v39, v38);
  type metadata accessor for NoticeView.Content(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
  ScaledMetric.wrappedValue.getter(v113);
  v41 = v91;
  ArtworkImage.init(_:height:)(v19, *(double *)v113);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  ScaledMetric.wrappedValue.getter(v113);
  v42 = *(_QWORD *)&v113[0];
  v43 = v93;
  v44 = (uint64_t)v100;
  v45 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v100, v41, v94);
  v46 = v44 + *(int *)(v88 + 36);
  *(_QWORD *)v46 = v42;
  *(_QWORD *)(v46 + 8) = -1;
  *(_BYTE *)(v46 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v45);
  if (qword_15061B0 != -1)
    swift_once(&qword_15061B0, sub_E1B804);
  v47 = static Border.artwork;
  v48 = qword_1583DF0;
  v49 = byte_1583DF8;
  ScaledMetric.wrappedValue.getter(v113);
  v50 = *(_QWORD *)&v113[0];
  v51 = v96;
  sub_5C238(v44, v96, &qword_150DD28);
  v52 = v109;
  v53 = v51 + *(int *)(v109 + 36);
  *(_QWORD *)v53 = v47;
  *(_QWORD *)(v53 + 8) = v48;
  *(_BYTE *)(v53 + 16) = v49;
  *(_QWORD *)(v53 + 24) = v50;
  *(_QWORD *)(v53 + 32) = -1;
  *(_BYTE *)(v53 + 40) = 0;
  swift_retain();
  sub_56024(v44, &qword_150DD28);
  v54 = v104;
  sub_5C090(v51, v104, &qword_150DD30);
  v55 = v106;
  sub_5C238(v54, (uint64_t)v106, &qword_150DD30);
  swift_storeEnumTagMultiPayload(v55, v105, 1);
  v56 = sub_E871DC(&qword_150DD68, &qword_150DD30, (void (*)(void))sub_EB90C4, (void (*)(void))sub_E1BD08);
  v57 = (uint64_t)v107;
  _ConditionalContent<>.init(storage:)(v55, &type metadata for Image, v52, &protocol witness table for Image, v56);
  v58 = (uint64_t)v85;
  sub_5C238(v57, (uint64_t)v85, &qword_150DD48);
  swift_storeEnumTagMultiPayload(v58, v86, 0);
  v59 = sub_EB9038();
  v60 = sub_EB8E54(&qword_150DD80, &qword_150DD18, (void (*)(void))sub_EB8FB4);
  _ConditionalContent<>.init(storage:)(v58, v87, v111, v59, v60);
  sub_56024(v57, &qword_150DD48);
  sub_56024(v54, &qword_150DD30);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v39, v38);
}

void sub_EB4B2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __n128 v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;

  v74 = a2;
  v84 = a3;
  v4 = type metadata accessor for Font.Leading(0);
  v77 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v76 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCD8);
  v88 = *(_QWORD *)(v6 - 8);
  v89 = v6;
  __chkstk_darwin();
  v87 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCE0);
  __chkstk_darwin();
  v91 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v85 = (char *)&v74 - v9;
  __chkstk_darwin();
  v90 = (uint64_t)&v74 - v10;
  v11 = *(int *)(type metadata accessor for Notice(0) + 28);
  v92 = a1;
  v12 = (_QWORD *)(a1 + v11);
  v13 = v12[1];
  if (v13)
  {
    *(_QWORD *)&v94 = *v12;
    *((_QWORD *)&v94 + 1) = v13;
    v14 = sub_DD0BF8();
    swift_bridgeObjectRetain();
    v15 = Text.init<A>(_:)(&v94, &type metadata for String, v14);
    v17 = v16;
    v19 = v18;
    v21 = v20 & 1;
    v22 = static Font.footnote.getter(v15);
    v23 = Text.font(_:)(v22, v15, v17, v21, v19);
    v25 = v24;
    v27 = v26;
    v75 = v4;
    v29 = v28;
    swift_release();
    sub_AF8E8(v15, v17, v21);
    v30 = swift_bridgeObjectRelease();
    LODWORD(v94) = static HierarchicalShapeStyle.secondary.getter(v30);
    v83 = Text.foregroundStyle<A>(_:)(&v94, v23, v25, v27 & 1, v29, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v82 = v31;
    v81 = v32;
    v80 = v33 & 1;
    sub_AF8E8(v23, v25, v27 & 1);
    v4 = v75;
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_10B3218);
    v78 = 2;
  }
  else
  {
    v83 = 0;
    v82 = 0;
    v80 = 0;
    v81 = 0;
    KeyPath = 0;
    v78 = 0;
  }
  sub_EB50D0(v92, &v94);
  v34 = *((_QWORD *)&v94 + 1);
  v75 = v94;
  v35 = v95;
  v36 = v96;
  v37 = v97;
  v38 = v98;
  v40 = static Font.subheadline.getter(v39);
  v41 = v77;
  v42 = v76;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 104))(v76, enum case for Font.Leading.tight(_:), v4);
  v43 = Font.leading(_:)(v42, v40);
  v44 = swift_release();
  v45 = v42;
  v46 = v75;
  v47 = v36;
  v48 = v4;
  v49 = v38;
  v50.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v45, v48, v44);
  v51 = static Font.Weight.semibold.getter(v50);
  v52 = Font.weight(_:)(v43, v51);
  swift_release();
  v53 = swift_getKeyPath(&unk_10B31E8);
  *(_QWORD *)&v94 = v46;
  *((_QWORD *)&v94 + 1) = v34;
  v95 = v35;
  v96 = v47;
  v76 = v47;
  LODWORD(v77) = v37;
  v97 = v37;
  v98 = v38;
  v99 = v53;
  v100 = v52;
  v54 = 0.0;
  if (sub_EB3A48())
  {
    type metadata accessor for NoticeView.Content(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
    ScaledMetric.wrappedValue.getter(&v93);
    v54 = v93 + *(double *)(v74 + 32);
  }
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DCE8);
  v56 = sub_EB8D4C();
  v57 = v87;
  v58.n128_f64[0] = v54;
  View.bodyHeadOutdent(_:)(v55, v56, v58);
  sub_EB8F18(v46, v34, v35, v76, v77, v49);
  swift_release();
  swift_release();
  v59 = swift_getKeyPath(&unk_10B3218);
  v61 = v88;
  v60 = v89;
  v62 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v57, v89);
  v63 = v62 + *(int *)(v86 + 36);
  *(_QWORD *)v63 = v59;
  *(_QWORD *)(v63 + 8) = 4;
  *(_BYTE *)(v63 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v60);
  v64 = v90;
  sub_5C090(v62, v90, &qword_150DCE0);
  v65 = v91;
  sub_5C238(v64, v91, &qword_150DCE0);
  v66 = v83;
  v67 = v84;
  v68 = v82;
  *v84 = v83;
  v67[1] = v68;
  v69 = v80;
  v70 = v81;
  v67[2] = v80;
  v67[3] = v70;
  v71 = KeyPath;
  v72 = v78;
  v67[4] = KeyPath;
  v67[5] = v72;
  *((_BYTE *)v67 + 48) = 0;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DD08);
  sub_5C238(v65, (uint64_t)v67 + *(int *)(v73 + 48), &qword_150DCE0);
  sub_1D1C38(v66, v68, v69, v70, v71);
  sub_56024(v64, &qword_150DCE0);
  sub_56024(v65, &qword_150DCE0);
  sub_1D1CDC(v66, v68, v69, v70, v71);
}

double sub_EB50D0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  _QWORD *v32;
  NSString v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  __int128 v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  double result;
  __int128 v168;
  unsigned __int8 v169;
  char v170;
  _OWORD *v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  _OWORD *v178;
  __int128 v179;
  __int128 v180;
  __int16 v181;
  __int128 v182;
  __int128 v183;
  unsigned __int8 v184;
  char v185;

  v178 = a2;
  v3 = type metadata accessor for Locale.Language(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v176 = (char *)&v172 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LayoutDirection(0);
  v177 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v172 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1507140);
  __chkstk_darwin();
  v12 = (char *)&v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice(0);
  if (*(_QWORD *)(a1 + *(int *)(v13 + 32)))
  {
    v174 = v4;
    v175 = v3;
    v14 = type metadata accessor for NoticeView.Content(0);
    sub_E42DEC((uint64_t)v12);
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
    v16 = (void *)UIContentSizeCategory.init(_:)(v12);
    v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v16);

    v18 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v17);
    v19 = objc_msgSend(v18, "fontDescriptorWithSymbolicTraits:", 32770);

    v20 = (void *)objc_opt_self(UIFont);
    v173 = v14;
    if (v19)
    {
      v21 = objc_msgSend(v20, "fontWithDescriptor:size:", v19, 0.0);

    }
    else
    {
      v21 = objc_msgSend(v20, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v17);
    }
    v22 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v21, 1);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v23, v22);

    if (v24)
    {
      v25 = objc_msgSend(v24, "imageWithRenderingMode:", 2);

      v26 = v175;
      v27 = v174;
      if (v25)
      {
        sub_E42BB0((uint64_t)v10);
        v28 = v177;
        (*(void (**)(char *, _QWORD, uint64_t))(v177 + 104))(v8, enum case for LayoutDirection.rightToLeft(_:), v6);
        v29 = static LayoutDirection.== infix(_:_:)(v10, v8);
        v30 = *(void (**)(char *, uint64_t))(v28 + 8);
        v30(v8, v6);
        v30(v10, v6);
        v172 = v25;
        if ((v29 & 1) != 0)
        {
          v31 = (void *)objc_opt_self(NLLanguageRecognizer);
          v32 = (_QWORD *)(a1 + *(int *)(v13 + 24));
          v33 = String._bridgeToObjectiveC()();
          v34 = (char *)objc_msgSend(v31, "dominantLanguageForString:", v33, v172, v173);

          if (v34)
          {
            v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
            v36 = v176;
            v38 = Locale.Language.init(identifier:)(v35, v37);
            v39 = Locale.Language.characterDirection.getter(v38);
            (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
            if (v39 == 1)
            {
              v40 = Image.init(uiImage:)(v25);
              v41 = Text.init(_:)(v40);
              v43 = v42;
              v45 = v44;
              v47 = v46 & 1;
              LODWORD(v182) = static HierarchicalShapeStyle.secondary.getter(v48);
              v49 = Text.foregroundStyle<A>(_:)(&v182, v41, v43, v47, v45, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
              v176 = v34;
              v51 = v50;
              v53 = v52;
              v55 = v54 & 1;
              sub_AF8E8(v41, v43, v47);
              swift_bridgeObjectRelease();
              v56 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
              v57 = *v56;
              v58 = v56[1];
              swift_bridgeObjectRetain();
              v59 = static Text.+ infix(_:_:)(v49, v51, v55, v53, v57, v58, 0, _swiftEmptyArrayStorage);
              v175 = v60;
              v62 = v61;
              v177 = v63;
              swift_bridgeObjectRelease();
              v64 = v62 & 1;
              sub_AF8E8(v49, v51, v55);
              swift_bridgeObjectRelease();
              v65 = v32[1];
              *(_QWORD *)&v182 = *v32;
              *((_QWORD *)&v182 + 1) = v65;
              v66 = sub_DD0BF8();
              swift_bridgeObjectRetain();
              v67 = Text.init<A>(_:)(&v182, &type metadata for String, v66);
              v69 = v68;
              v71 = v70;
              v73 = v72 & 1;
              LODWORD(v182) = static HierarchicalShapeStyle.primary.getter(v74);
              v75 = Text.foregroundStyle<A>(_:)(&v182, v67, v69, v73, v71, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
              v77 = v76;
              v79 = v78;
              v81 = v80 & 1;
              LODWORD(v174) = v80 & 1;
              sub_AF8E8(v67, v69, v73);
              swift_bridgeObjectRelease();
              v82 = v59;
              v83 = v59;
              v84 = v175;
              v85 = static Text.+ infix(_:_:)(v83, v175, v64, v177, v75, v77, v81, v79);
              v87 = v86;
              v89 = v88;
              v91 = v90 & 1;
              sub_AF8E8(v75, v77, v174);
              swift_bridgeObjectRelease();
              sub_AF8E8(v82, v84, v64);
              swift_bridgeObjectRelease();
              *(_QWORD *)&v179 = v85;
              *((_QWORD *)&v179 + 1) = v87;
              *(_QWORD *)&v180 = v91;
              *((_QWORD *)&v180 + 1) = v89;
              LOBYTE(v181) = 0;
              sub_AF8D8(v85, v87, v91);
              swift_bridgeObjectRetain();
              sub_AF8D8(v85, v87, v91);
              swift_bridgeObjectRetain();
              _ConditionalContent<>.init(storage:)(&v179, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);

              sub_AF8E8(v85, v87, v91);
              swift_bridgeObjectRelease();
              sub_AF8E8(v85, v87, v91);
              swift_bridgeObjectRelease();
LABEL_15:
              v162 = v182;
              v163 = v183;
              v164 = *((_QWORD *)&v183 + 1);
              v179 = v182;
              v180 = v183;
              v181 = v184;
              sub_4D68D0(v182, *((uint64_t *)&v182 + 1), v183);
              v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0A0);
              v166 = sub_EB8EBC();
              _ConditionalContent<>.init(storage:)(&v179, v165, &type metadata for Text, v166, &protocol witness table for Text);

              sub_4D68F8(v162, *((uint64_t *)&v162 + 1), v163, v164);
              goto LABEL_16;
            }

          }
        }
        v112 = (_QWORD *)(a1 + *(int *)(v13 + 24));
        v113 = v112[1];
        *(_QWORD *)&v182 = *v112;
        *((_QWORD *)&v182 + 1) = v113;
        v114 = sub_DD0BF8();
        swift_bridgeObjectRetain();
        v115 = Text.init<A>(_:)(&v182, &type metadata for String, v114);
        v116 = v25;
        v117 = v115;
        v119 = v118;
        v121 = v120;
        v123 = v122 & 1;
        LODWORD(v182) = static HierarchicalShapeStyle.primary.getter(v124);
        v125 = Text.foregroundStyle<A>(_:)(&v182, v117, v119, v123, v121, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
        v127 = v126;
        v129 = v128;
        v131 = v130 & 1;
        sub_AF8E8(v117, v119, v123);
        swift_bridgeObjectRelease();
        v132 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
        v133 = *v132;
        v134 = v132[1];
        swift_bridgeObjectRetain();
        v135 = static Text.+ infix(_:_:)(v125, v127, v131, v129, v133, v134, 0, _swiftEmptyArrayStorage);
        v176 = v136;
        LOBYTE(v113) = v137;
        v177 = v138;
        swift_bridgeObjectRelease();
        v139 = v113 & 1;
        sub_AF8E8(v125, v127, v131);
        swift_bridgeObjectRelease();
        v140 = Image.init(uiImage:)(v116);
        v141 = Text.init(_:)(v140);
        v143 = v142;
        v145 = v144;
        v147 = v146 & 1;
        LODWORD(v182) = static HierarchicalShapeStyle.secondary.getter(v148);
        v149 = Text.foregroundStyle<A>(_:)(&v182, v141, v143, v147, v145, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
        v151 = v150;
        v153 = v152;
        v155 = v154 & 1;
        sub_AF8E8(v141, v143, v147);
        swift_bridgeObjectRelease();
        v156 = (uint64_t)v176;
        v175 = static Text.+ infix(_:_:)(v135, v176, v139, v177, v149, v151, v155, v153);
        v174 = v157;
        v159 = v158;
        v161 = v160 & 1;
        sub_AF8E8(v149, v151, v155);
        swift_bridgeObjectRelease();
        sub_AF8E8(v135, v156, v139);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v179 = v175;
        *((_QWORD *)&v179 + 1) = v174;
        *(_QWORD *)&v180 = v161;
        *((_QWORD *)&v180 + 1) = v159;
        LOBYTE(v181) = 1;
        _ConditionalContent<>.init(storage:)(&v179, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
        goto LABEL_15;
      }
    }
    else
    {

    }
  }
  v92 = (_QWORD *)(a1 + *(int *)(v13 + 24));
  v93 = v92[1];
  *(_QWORD *)&v182 = *v92;
  *((_QWORD *)&v182 + 1) = v93;
  v94 = sub_DD0BF8();
  swift_bridgeObjectRetain();
  v95 = Text.init<A>(_:)(&v182, &type metadata for String, v94);
  v97 = v96;
  v99 = v98;
  v101 = v100 & 1;
  LODWORD(v182) = static HierarchicalShapeStyle.primary.getter(v102);
  v103 = Text.foregroundStyle<A>(_:)(&v182, v95, v97, v101, v99, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v105 = v104;
  v107 = v106;
  v109 = v108 & 1;
  sub_AF8E8(v95, v97, v101);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v179 = v103;
  *((_QWORD *)&v179 + 1) = v105;
  *(_QWORD *)&v180 = v109;
  *((_QWORD *)&v180 + 1) = v107;
  v181 = 256;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_150C0A0);
  v111 = sub_EB8EBC();
  _ConditionalContent<>.init(storage:)(&v179, v110, &type metadata for Text, v111, &protocol witness table for Text);
LABEL_16:
  result = *(double *)&v182;
  v168 = v183;
  v169 = v184;
  v170 = v185;
  v171 = v178;
  *v178 = v182;
  v171[1] = v168;
  *((_BYTE *)v171 + 32) = v169;
  *((_BYTE *)v171 + 33) = v170;
  return result;
}

uint64_t NoticeDismissal.presented.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  Binding.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t NoticeDismissal.presented.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v6 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  return Binding.wrappedValue.setter(&v6, v4);
}

void (*NoticeDismissal.presented.modify(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t a1)
{
  _BYTE *v8;
  uint64_t v9;

  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[19] = a4;
  *((_QWORD *)v8 + 3) = a2;
  *((_QWORD *)v8 + 4) = a3;
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v8[16] = a4;
  swift_retain();
  swift_retain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  *((_QWORD *)v8 + 5) = v9;
  Binding.wrappedValue.getter(v8 + 17, v9);
  return sub_EB5CCC;
}

void sub_EB5CCC(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *v1 = v6;
  v1[1] = v4;
  *((_BYTE *)v1 + 16) = v5;
  *((_BYTE *)v1 + 18) = v2;
  Binding.wrappedValue.setter((char *)v1 + 18, v3);
  swift_release(v6);
  swift_release(v4);
  free(v1);
}

uint64_t NoticeDismissal.$presented.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D510);
  Binding.projectedValue.getter(&v2, v0);
  return v2;
}

void sub_EB5D70(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

void (*EnvironmentValues.noticeDismissal.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  char *v3;
  unint64_t v4;
  char v5;

  v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 6) = v1;
  v4 = sub_EB1820();
  *((_QWORD *)v3 + 7) = v4;
  EnvironmentValues.subscript.getter((_QWORD *)v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v4);
  v5 = v3[40];
  *(_OWORD *)v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v5;
  return sub_EB5DF8;
}

void sub_EB5DF8(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v3[3] = v4;
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[7];
  v3[4] = v5;
  *((_BYTE *)v3 + 40) = v6;
  if ((a2 & 1) != 0)
  {
    sub_E55108(v4, v5);
    EnvironmentValues.subscript.setter(v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v7);
    sub_E550D8(*v3, v3[1]);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v7);
  }
  free(v3);
}

uint64_t sub_EB5E88()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_EB5EA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentTransition(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.contentTransition.setter(v4);
}

unint64_t sub_EB5F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DAF8;
  if (!qword_150DAF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA80);
    sub_EB5FAC();
    sub_5C150(&qword_150DB18, &qword_150DAF0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DAF8);
  }
  return result;
}

unint64_t sub_EB5FAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DB00;
  if (!qword_150DB00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA78);
    sub_EB6018();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DB00);
  }
  return result;
}

unint64_t sub_EB6018()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_150DB08;
  if (!qword_150DB08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA70);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA60);
    v3 = type metadata accessor for Notice(255);
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA58);
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA30);
    v8 = sub_EB33A4();
    v9 = sub_5C150(&qword_150DAD0, &qword_150DA30, (uint64_t)&protocol conformance descriptor for SequenceGesture<A, B>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
    v5 = sub_4DD24(&qword_150DAD8, type metadata accessor for Notice, (uint64_t)&protocol conformance descriptor for Notice);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_5C150(&qword_150DB10, &qword_150DAE0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DB08);
  }
  return result;
}

uint64_t sub_EB616C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticeView.body>>, 1);
}

_QWORD *initializeBufferWithCopyOfBuffer for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Notice(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Notice.Thumbnail(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        *v10 = *v11;
        swift_retain();
        swift_storeEnumTagMultiPayload(v10, v12, 0);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = v8[6];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v8[7];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[8];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 1);
      *v28 = v30;
      v28[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v32 = v8[9];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *((_BYTE *)v4 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    v35 = a3[5];
    v36 = (char *)v4 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(_QWORD *)v37;
    v39 = *((_QWORD *)v37 + 1);
    v40 = v37[17];
    v41 = v37[16];
    sub_EB1978(*(_QWORD *)v37, v39, v41, v40);
    *(_QWORD *)v36 = v38;
    *((_QWORD *)v36 + 1) = v39;
    v36[16] = v41;
    v36[17] = v40;
    v42 = a3[6];
    v43 = a3[7];
    v44 = (_QWORD *)((char *)v4 + v42);
    v45 = (_QWORD *)((char *)a2 + v42);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = (char *)v4 + v43;
    v48 = (char *)a2 + v43;
    *v47 = *v48;
    v49 = *((_QWORD *)v48 + 3);
    *(_OWORD *)(v47 + 8) = *(_OWORD *)(v48 + 8);
    *((_QWORD *)v47 + 3) = v49;
    v50 = a3[8];
    v51 = (char *)v4 + v50;
    v52 = (char *)a2 + v50;
    *v51 = *v52;
    *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

double destroy for NoticeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Notice(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(v4 + 32)))
    swift_release();
  sub_E550CC(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 16), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = v7[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v7[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 1);
    *v26 = v28;
    v26[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = v7[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v33 = a3[5];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *((_QWORD *)v35 + 1);
  v38 = v35[17];
  v39 = v35[16];
  sub_EB1978(*(_QWORD *)v35, v37, v39, v38);
  *(_QWORD *)v34 = v36;
  *((_QWORD *)v34 + 1) = v37;
  v34[16] = v39;
  v34[17] = v38;
  v40 = a3[6];
  v41 = a3[7];
  v42 = (_QWORD *)((char *)a1 + v40);
  v43 = (_QWORD *)((char *)a2 + v40);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = (char *)a1 + v41;
  v46 = (char *)a2 + v41;
  *v45 = *v46;
  v47 = *((_QWORD *)v46 + 3);
  *(_OWORD *)(v45 + 8) = *(_OWORD *)(v46 + 8);
  *((_QWORD *)v45 + 3) = v47;
  v48 = a3[8];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *v49 = *v50;
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v58;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_5C0DC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v58 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v8, v9, v58);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *v8 = *v9;
        swift_retain();
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v16 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v16);
      goto LABEL_17;
    }
    sub_5C0DC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150DB28) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v19 = v6[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v6[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v6[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      v31 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v31;
      swift_retain();
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    goto LABEL_24;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_23;
  }
  v30 = *((_QWORD *)v27 + 1);
  *v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
LABEL_24:
  v32 = v6[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v36 = a3[5];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v40 = *((_QWORD *)v38 + 1);
  v41 = v38[17];
  v42 = v38[16];
  sub_EB1978(*(_QWORD *)v38, v40, v42, v41);
  v43 = *(_QWORD *)v37;
  v44 = *((_QWORD *)v37 + 1);
  v45 = v37[17];
  *(_QWORD *)v37 = v39;
  *((_QWORD *)v37 + 1) = v40;
  v46 = v37[16];
  v37[16] = v42;
  v37[17] = v41;
  sub_E550CC(v43, v44, v46, v45);
  v47 = a3[6];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  v50 = a3[7];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  *v51 = *((_BYTE *)a2 + v50);
  *((_QWORD *)v51 + 1) = *(_QWORD *)((char *)a2 + v50 + 8);
  swift_retain();
  swift_release();
  v53 = *((_QWORD *)v52 + 3);
  *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);
  *((_QWORD *)v51 + 3) = v53;
  swift_retain();
  swift_release();
  v54 = a3[8];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *v55 = *v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for NoticeView(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = v6[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v22 = a3[5];
  v23 = a3[6];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  v26 = a3[7];
  v27 = a3[8];
  v28 = (_OWORD *)((char *)a1 + v26);
  v29 = (_OWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  return a1;
}

_QWORD *assignWithTake for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_5C0DC((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_5C0DC((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150DB28) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = v7[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v7[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = v7[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (!v32)
  {
    if (v33)
    {
      v35 = *((_QWORD *)v31 + 1);
      *v30 = v33;
      v30[1] = v35;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_21;
  }
  if (!v33)
  {
    swift_release();
    goto LABEL_20;
  }
  v34 = *((_QWORD *)v31 + 1);
  *v30 = v33;
  v30[1] = v34;
  swift_release();
LABEL_21:
  v36 = v7[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = v41[16];
  v43 = v41[17];
  v44 = *(_QWORD *)v40;
  v45 = *((_QWORD *)v40 + 1);
  v46 = v40[17];
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v47 = v40[16];
  v40[16] = v42;
  v40[17] = v43;
  sub_E550CC(v44, v45, v47, v46);
  v48 = a3[6];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_release();
  v51 = a3[7];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *v52 = *((_BYTE *)a2 + v51);
  *((_QWORD *)v52 + 1) = *(_QWORD *)((char *)a2 + v51 + 8);
  swift_release();
  *((_OWORD *)v52 + 1) = *((_OWORD *)v53 + 1);
  swift_release();
  v54 = a3[8];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *v55 = *v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EB70C0);
}

uint64_t sub_EB70C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Notice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EB714C);
}

uint64_t sub_EB714C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Notice(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_EB71C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Notice(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10B30D8;
    v4[2] = &unk_10B30F0;
    v4[3] = &unk_10B3108;
    v4[4] = &unk_10B30F0;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeDismissal()
{
  return &type metadata for NoticeDismissal;
}

uint64_t sub_EB7260()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA80);
  v1[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DA18);
  v1[2] = sub_EB5F28();
  v1[3] = sub_5C150(&qword_150DB20, &qword_150DA18, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
}

_QWORD *sub_EB72E8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Notice(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Notice.Thumbnail(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        *v10 = *v11;
        swift_retain();
        swift_storeEnumTagMultiPayload(v10, v12, 0);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = v8[6];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v8[7];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[8];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 1);
      *v28 = v30;
      v28[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v32 = v8[9];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *((_BYTE *)v4 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    v35 = a3[5];
    v36 = (char *)v4 + v35;
    v37 = (char *)a2 + v35;
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = a3[6];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v43 = a3[7];
    v44 = (_QWORD *)((char *)v4 + v43);
    v45 = (_QWORD *)((char *)a2 + v43);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = 1;
    }
    else
    {
      *v44 = *v45;
      swift_retain();
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v44, v46, v48);
    v49 = a3[8];
    v50 = (_QWORD *)((char *)v4 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
    if (swift_getEnumCaseMultiPayload(v51, v52) == 1)
    {
      v53 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v51, v53);
      v54 = v50;
      v55 = v52;
      v56 = 1;
    }
    else
    {
      *v50 = *v51;
      swift_retain();
      v54 = v50;
      v55 = v52;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
  }
  return v4;
}

double sub_EB763C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Notice(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(v4 + 32)))
    swift_release();
  v7 = a1 + a2[5];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[6];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[7];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release();
  }
  v14 = a1 + a2[8];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_EB7824(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = v7[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v7[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 1);
    *v26 = v28;
    v26[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = v7[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v33 = a3[5];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  v37 = a3[6];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = a3[7];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
  {
    v45 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
    v46 = 1;
  }
  else
  {
    *v42 = *v43;
    swift_retain();
    v46 = 0;
  }
  swift_storeEnumTagMultiPayload(v42, v44, v46);
  v47 = a3[8];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
  {
    v51 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
    v52 = 1;
  }
  else
  {
    *v48 = *v49;
    swift_retain();
    v52 = 0;
  }
  swift_storeEnumTagMultiPayload(v48, v50, v52);
  return a1;
}

_QWORD *sub_EB7B44(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_5C0DC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v57 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v8, v9, v57);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *v8 = *v9;
        swift_retain();
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v16 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v16);
      goto LABEL_17;
    }
    sub_5C0DC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150DB28) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v19 = v6[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v6[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v6[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      v30 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v30;
      swift_retain();
      swift_release();
      goto LABEL_24;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *((_QWORD *)v27 + 1);
    *v26 = v29;
    v26[1] = v31;
    swift_retain();
    goto LABEL_24;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_24:
  v32 = v6[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v36 = a3[5];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  v40 = a3[6];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  if (a1 != a2)
  {
    v44 = a3[7];
    v45 = (_QWORD *)((char *)a1 + v44);
    v46 = (_QWORD *)((char *)a2 + v44);
    sub_56024((uint64_t)a1 + v44, &qword_1506570);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
      v49 = 1;
    }
    else
    {
      *v45 = *v46;
      swift_retain();
      v49 = 0;
    }
    swift_storeEnumTagMultiPayload(v45, v47, v49);
    v50 = a3[8];
    v51 = (_QWORD *)((char *)a1 + v50);
    v52 = (_QWORD *)((char *)a2 + v50);
    sub_56024((uint64_t)a1 + v50, (uint64_t *)&unk_1506560);
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
    if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
    {
      v54 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
      v55 = 1;
    }
    else
    {
      *v51 = *v52;
      swift_retain();
      v55 = 0;
    }
    swift_storeEnumTagMultiPayload(v51, v53, v55);
  }
  return a1;
}

_OWORD *sub_EB7FA8(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = v6[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v22 = a3[5];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v35 = a3[8];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
  {
    v39 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload(v36, v38, 1);
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_EB827C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_5C0DC((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_5C0DC((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150DB28) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = v7[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v7[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = v7[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (v32)
  {
    if (v33)
    {
      v34 = *((_QWORD *)v31 + 1);
      *v30 = v33;
      v30[1] = v34;
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v33)
  {
    v35 = *((_QWORD *)v31 + 1);
    *v30 = v33;
    v30[1] = v35;
    goto LABEL_21;
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
LABEL_21:
  v36 = v7[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[6];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  if (a1 != a2)
  {
    v47 = a3[7];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    sub_56024((uint64_t)a1 + v47, &qword_1506570);
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload(v48, v50, 1);
    }
    else
    {
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v52 = a3[8];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_56024((uint64_t)a1 + v52, (uint64_t *)&unk_1506560);
    v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506560);
    if (swift_getEnumCaseMultiPayload(v54, v55) == 1)
    {
      v56 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload(v53, v55, 1);
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_EB8664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_EB8670);
}

uint64_t sub_EB8670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Notice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D378);
          v12 = *(_QWORD *)(v8 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_EB8760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_EB876C);
}

uint64_t sub_EB876C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = type metadata accessor for Notice(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DBD0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150D378);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_EB8864(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[5];

  v2 = type metadata accessor for Notice(319);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_EB898C(319, (unint64_t *)&unk_150DC40, (uint64_t (*)(void))sub_EB2E00, (uint64_t)&type metadata for Double);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_EB898C(319, (unint64_t *)&qword_1508E10, (uint64_t (*)(void))sub_E21D94, (uint64_t)&type metadata for CGFloat);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_4F1A3C(319, &qword_150B6E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v9 <= 0x3F)
        {
          v12[3] = *(_QWORD *)(v8 - 8) + 64;
          sub_4F1A3C(319, (unint64_t *)&qword_150AE28, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
          if (v11 <= 0x3F)
          {
            v12[4] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 5, v12, a1 + 16);
          }
        }
      }
    }
  }
}

void sub_EB898C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3();
    v8 = type metadata accessor for ScaledMetric(a1, a4, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

ValueMetadata *_s25NoticeDismissalContextKeyVMa()
{
  return &_s25NoticeDismissalContextKeyVN;
}

uint64_t sub_EB89F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_12139EC, 1);
}

uint64_t sub_EB8A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  uint64_t result;
  double v18;
  double v19;
  double v20;
  double v21;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DB28);
  __chkstk_darwin();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Notice(0);
  sub_5C238(a1 + *(int *)(v12 + 20), (uint64_t)v11, &qword_150DB28);
  v13 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) == 1)
  {
    sub_56024((uint64_t)v11, &qword_150DB28);
    v14 = 0;
  }
  else
  {
    v14 = swift_getEnumCaseMultiPayload(v11, v13) == 1;
    sub_5C0DC((uint64_t)v11, type metadata accessor for Notice.Thumbnail);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v15 == enum case for DynamicTypeSize.xSmall(_:) || v15 == enum case for DynamicTypeSize.small(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    result = sub_5C0DC(a1, type metadata accessor for Notice);
    v18 = 4.0;
    v19 = 12.0;
    if (v14)
      v20 = 12.0;
    else
      v20 = 4.0;
    v21 = 0.0;
    if (v14)
      v21 = 6.0;
  }
  else
  {
    if (v15 == enum case for DynamicTypeSize.medium(_:)
      || v15 == enum case for DynamicTypeSize.large(_:)
      || v15 == enum case for DynamicTypeSize.xLarge(_:))
    {
      v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
LABEL_32:
      if (*(_QWORD *)(a1 + *(int *)(v12 + 32)))
        v19 = 19.0;
      else
        v19 = 20.0;
      v24(a2, v6);
      result = sub_5C0DC(a1, type metadata accessor for Notice);
      v21 = 10.0;
      if (v14)
        v20 = 10.0;
      else
        v20 = 12.0;
      v18 = 4.0;
      if (!v14)
        v21 = 4.0;
      goto LABEL_43;
    }
    v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    if (v15 != enum case for DynamicTypeSize.xxLarge(_:)
      && v15 != enum case for DynamicTypeSize.xxxLarge(_:)
      && v15 != enum case for DynamicTypeSize.accessibility1(_:)
      && v15 != enum case for DynamicTypeSize.accessibility2(_:)
      && v15 != enum case for DynamicTypeSize.accessibility3(_:)
      && v15 != enum case for DynamicTypeSize.accessibility4(_:)
      && v15 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      v24((uint64_t)v9, v6);
      goto LABEL_32;
    }
    v24(a2, v6);
    result = sub_5C0DC(a1, type metadata accessor for Notice);
    v21 = 10.0;
    if (!v14)
      v21 = 6.0;
    v19 = 20.0;
    v20 = 12.0;
    v18 = 8.0;
  }
LABEL_43:
  *a3 = v18;
  a3[1] = v20;
  a3[2] = v18;
  a3[3] = v19;
  a3[4] = v21;
  return result;
}

unint64_t sub_EB8D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DCF0;
  if (!qword_150DCF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DCE8);
    sub_EB8DD0();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DCF0);
  }
  return result;
}

unint64_t sub_EB8DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DCF8;
  if (!qword_150DCF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DD00);
    sub_EB8E54((unint64_t *)&qword_150C090, &qword_150C080, (void (*)(void))sub_EB8EBC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_150DCF8);
  }
  return result;
}

uint64_t sub_EB8E54(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_EB8EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150C098;
  if (!qword_150C098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150C0A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150C098);
  }
  return result;
}

double sub_EB8F18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  double result;

  if ((a6 & 1) == 0)
    return sub_4D68F8(a1, a2, a3, a4);
  sub_AF8E8(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_EB8F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_EB8F88(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_EB8FB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DD50;
  if (!qword_150DD50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DD20);
    sub_4DD24(&qword_150DD58, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressView, (uint64_t)&protocol conformance descriptor for CircularProgressView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DD50);
  }
  return result;
}

unint64_t sub_EB9038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DD60;
  if (!qword_150DD60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DD48);
    sub_E871DC(&qword_150DD68, &qword_150DD30, (void (*)(void))sub_EB90C4, (void (*)(void))sub_E1BD08);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DD60);
  }
  return result;
}

unint64_t sub_EB90C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DD70;
  if (!qword_150DD70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DD28);
    sub_4DD24(&qword_150DD78, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkImage, (uint64_t)&protocol conformance descriptor for ArtworkImage);
    sub_E1BCB0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DD70);
  }
  return result;
}

uint64_t sub_EB9148()
{
  return sub_EB37C8(1.05);
}

unint64_t sub_EB9168()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15076C0;
  if (!qword_15076C0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_15076C0);
  }
  return result;
}

uint64_t sub_EB91A8()
{
  return sub_EB91B4((uint64_t (*)(uint64_t))sub_EB3750);
}

uint64_t sub_EB91B4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_EB91F0()
{
  return sub_EB37C8(1.0);
}

unint64_t sub_EB9210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DD88;
  if (!qword_150DD88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DC88);
    sub_5C150(&qword_150DD90, &qword_150DC80, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DD88);
  }
  return result;
}

id PassthroughView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  char v10;
  objc_super v12;

  if ((UIViewIgnoresTouchEvents(v3) & 1) != 0)
    return 0;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PassthroughView();
  v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    sub_EB9380();
    v8 = v3;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t type metadata accessor for PassthroughView()
{
  return objc_opt_self(_TtC11MusicCoreUI15PassthroughView);
}

unint64_t sub_EB9380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150B080;
  if (!qword_150B080)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_150B080);
  }
  return result;
}

id PassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id PassthroughView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *SymbolButton.__allocating_init(intent:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[24];

  v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_EB96E4(a1, 2, (uint64_t)v4);
  v5 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v6 = SymbolButton.init(configuration:handler:)((uint64_t)v4, 0, 0);
  v7 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v16, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)sub_EB9994;
  v7[1] = 0;
  v10 = v6;
  sub_5C198(v8, v9);
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v11 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v11 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v11 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v13 = *v11;
  v12 = v11[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v13, v12);

  return v10;
}

uint64_t sub_EB96E4@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  int v24;
  int v25;
  uint64_t v26;

  v24 = a1;
  v25 = a2;
  v26 = type metadata accessor for UIViewConfigurationState(0);
  v4 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  *(_OWORD *)(a3 + 48) = xmmword_10683D0;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = -1;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  *(_QWORD *)(a3 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a3 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a3 + 152) = 0;
  *(_QWORD *)(a3 + 160) = 0;
  *(_QWORD *)(a3 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 176) = 0;
  *(_BYTE *)(a3 + 184) = 0;
  *(_OWORD *)(a3 + 192) = xmmword_1060DF0;
  *(_QWORD *)(a3 + 208) = 0;
  *(_QWORD *)(a3 + 216) = 0;
  *(_QWORD *)(a3 + 224) = 1;
  *(_OWORD *)(a3 + 232) = 0u;
  *(_OWORD *)(a3 + 248) = 0u;
  *(_OWORD *)(a3 + 264) = 0u;
  *(_OWORD *)(a3 + 280) = 0u;
  v11 = a3 + *(int *)(v10 + 36);
  v12 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a3 + v7[10];
  *(_QWORD *)(v13 + 48) = 0;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)v13 = 0u;
  v14 = (_QWORD *)(a3 + v7[11]);
  *v14 = 0;
  v14[1] = 0;
  v14[2] = 1;
  *(_QWORD *)(a3 + v7[12]) = 0x4010000000000000;
  v15 = v7[13];
  v16 = qword_1506428;
  v17 = UIFontTextStyleSubheadline;
  if (v16 != -1)
    swift_once(&qword_1506428, sub_EDEDE4);
  *(_OWORD *)(a3 + v15) = static SymbolButton.Configuration.platterMinimumSize;
  v18 = a3 + v7[14];
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  v19 = (_OWORD *)(a3 + v7[15]);
  v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v19[1] = v20;
  v21 = a3 + v7[16];
  *(_BYTE *)v21 = 1;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_BYTE *)(v21 + 24) = 0;
  *(_QWORD *)(a3 + v7[17]) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + v7[18]) = 0;
  *(_BYTE *)(a3 + v7[19]) = 2;
  SymbolButton.Configuration.init()((uint64_t)v9);
  sub_EBA59C((uint64_t)v9, v24, v25);
  sub_1E557C(a3);
  sub_59EA18((uint64_t)v9, a3);
  v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  UIViewConfigurationState.init(traitCollection:)(v22);
  sub_EB99B4((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v26);
}

void sub_EB9994(uint64_t a1)
{
  sub_EB99B4(a1);
}

void sub_EB99B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  int v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = type metadata accessor for UIViewConfigurationState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)UIViewConfigurationState.traitCollection.getter(v8);
  v10 = (char *)objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 != (_BYTE *)&dword_4 + 2)
  {
    if (*(_QWORD *)(v2 + 224) == 1 || (v11 = *(unsigned __int8 *)(v2 + 248), v11 == 2))
    {
      v12 = UIViewConfigurationState.isHighlighted.getter();
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
      if ((v12 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        v14 = UIViewConfigurationState.isSelected.getter(v13);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if ((v14 & 1) == 0)
        {

          *(_QWORD *)(v2 + 112) = 0;
          *(_QWORD *)(v2 + 176) = 0;
          return;
        }
      }
      if (qword_1506040 != -1)
        swift_once(&qword_1506040, sub_DD3D1C);
      v15 = static UIColor.MusicTint.pressed;
      v16 = *(void **)(v2 + 112);
      v17 = (id)static UIColor.MusicTint.pressed;

      *(_QWORD *)(v2 + 112) = v15;
      v18 = static UIColor.MusicTint.pressed;
      v19 = *(void **)(v2 + 176);
      v20 = (id)static UIColor.MusicTint.pressed;

      *(_QWORD *)(v2 + 176) = v18;
    }
    else
    {
      v21 = (void *)objc_opt_self(UIColor);
      v22 = v21;
      if ((v11 & 1) != 0)
      {
        v34 = objc_msgSend(v21, "blackColor");

        *(_QWORD *)(v2 + 112) = v34;
        v35 = objc_msgSend(v22, "blackColor");

        *(_QWORD *)(v2 + 176) = v35;
        objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.05);
        UIView.Border.init(thickness:color:)();
        v37 = v36;
        v39 = v38;
        v41 = v40 & 1;

        *(_QWORD *)(v2 + 272) = v37;
        *(_QWORD *)(v2 + 280) = v41;
        *(_QWORD *)(v2 + 288) = v39;
        LOBYTE(v37) = UIViewConfigurationState.isHighlighted.getter();
        sub_DD4544();
        v42 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(19, 19, 20, 1.0);
        if ((v37 & 1) != 0)
          v43 = 0x3FD5C28F5C28F5C3;
        else
          v43 = 0x3FD3333333333333;
        sub_CCEC0(*(_QWORD *)(v2 + 192), *(char **)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
        *(_QWORD *)(v2 + 192) = v43;
        *(_QWORD *)(v2 + 200) = v42;
      }
      else
      {
        v23 = objc_msgSend(v21, "whiteColor");

        *(_QWORD *)(v2 + 112) = v23;
        v24 = objc_msgSend(v22, "whiteColor");

        *(_QWORD *)(v2 + 176) = v24;
        objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.05);
        UIView.Border.init(thickness:color:)();
        v26 = v25;
        v28 = v27;
        v30 = v29 & 1;

        *(_QWORD *)(v2 + 272) = v26;
        *(_QWORD *)(v2 + 280) = v30;
        *(_QWORD *)(v2 + 288) = v28;
        v31 = UIViewConfigurationState.isHighlighted.getter();
        v32 = objc_msgSend(v22, "whiteColor");
        if ((v31 & 1) != 0)
          v33 = 0x3FD0A3D70A3D70A4;
        else
          v33 = 0x3FCC28F5C28F5C29;
        sub_CCEC0(*(_QWORD *)(v2 + 192), *(char **)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
        *(_QWORD *)(v2 + 192) = v33;
        *(_QWORD *)(v2 + 200) = v32;
      }
      *(_QWORD *)(v2 + 208) = 0;
      *(_QWORD *)(v2 + 216) = 0;
    }
  }
}

uint64_t SymbolButton.Intent.accessibilityIdentifier.getter(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  if (a1)
  {
    if (a1 == 1)
      v1 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v1 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v1 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void SymbolButton.update(to:)(int a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = SymbolButton.materialColor.getter();
  sub_EB96E4(a1, v5, (uint64_t)v4);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v4, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1E557C((uint64_t)v4);
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v6 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v6 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v6 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v8 = *v6;
  v7 = v6[1];
  type metadata accessor for SymbolButton(0);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v8, v7);
}

uint64_t SymbolButton.materialColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v6;
  _BYTE v8[24];

  v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v4, v8, 0, 0);
  sub_1E5538(v4, (uint64_t)v3);
  if (*((_QWORD *)v3 + 28) == 1)
  {
    sub_1E557C((uint64_t)v3);
    return 2;
  }
  else
  {
    v6 = v3[248];
    sub_1E557C((uint64_t)v3);
    if (v6 == 2)
      return 2;
    else
      return (v6 & 1) == 0;
  }
}

void SymbolButton.materialColor.setter(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, "traitCollection");
  v11 = (char *)objc_msgSend(v10, "userInterfaceIdiom");

  if (v11 != (_BYTE *)&dword_4 + 2)
  {
    if (a1 == 2)
    {
      v18 = 0;
      v19 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 1;
    }
    else
    {
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 2;
      v24 = 0;
      v25 = 0;
      sub_EBA484((uint64_t)&v20, a1 & 1);
      v15 = v20;
      v18 = v22;
      v19 = v21;
      v12 = v23;
      v13 = v24;
      v14 = v25;
    }
    v16 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v20, 0, 0);
    sub_1E5538(v16, (uint64_t)v9);
    sub_CCF40(*((char **)v9 + 28), *((void **)v9 + 29), *((void **)v9 + 30), *((_QWORD *)v9 + 31), *((_QWORD *)v9 + 32), *((_QWORD *)v9 + 33));
    v17 = v19;
    *((_QWORD *)v9 + 28) = v15;
    *((_QWORD *)v9 + 29) = v17;
    *((_QWORD *)v9 + 30) = v18;
    *((_QWORD *)v9 + 31) = v12;
    *((_QWORD *)v9 + 32) = v13;
    *((_QWORD *)v9 + 33) = v14;
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v9, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_1E557C((uint64_t)v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v5, 0, 0, 0, 1);
    sub_56024((uint64_t)v5, &qword_150DDC0);
  }
}

void (*SymbolButton.materialColor.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = SymbolButton.materialColor.getter();
  return sub_EBA154;
}

void sub_EBA154(uint64_t a1)
{
  SymbolButton.materialColor.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SymbolButton.Intent.title.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1)
  {
    if (a1 == 1)
    {
      v12 = 0x656C6666756853;
      v13 = 0xE700000000000000;
    }
    else
    {
      v12 = 0x6953207472617453;
      v13 = 0xED0000676E69676ELL;
    }
  }
  else
  {
    v12 = 2036427856;
    v13 = 0xE400000000000000;
  }
  String.LocalizationValue.init(stringLiteral:)(v12, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v14 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t SymbolButton.Intent.symbolName.getter(char a1)
{
  if (!a1)
    return 0x6C69662E79616C70;
  if (a1 == 1)
    return 0x656C6666756873;
  return 0x2E646E612E63696DLL;
}

uint64_t SymbolButton.Intent.symbolBundle.getter(char a1)
{
  uint64_t v1;
  id v2;

  if (a1 != 2)
    return 0;
  if (qword_1506010 != -1)
    swift_once(&qword_1506010, sub_DCBAF4);
  v1 = static NSBundle.musicCoreUIBundle;
  v2 = (id)static NSBundle.musicCoreUIBundle;
  return v1;
}

unint64_t SymbolButton.Intent.id.getter(char a1)
{
  unint64_t result;

  result = 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000018;
  return result;
}

unint64_t sub_EBA45C@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = SymbolButton.Intent.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_EBA484(uint64_t a1, char a2)
{
  char v3;
  id v4;
  id v5;
  Swift::String v6;
  void *object;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a2 & 1;
  *(_BYTE *)(a1 + 24) = !(a2 & 1);
  v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 50.0);

  *(_QWORD *)a1 = v4;
  v5 = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.6);

  *(_QWORD *)(a1 + 8) = v5;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12 = 0xD000000000000011;
  v13 = 0x800000000110F320;
  v11 = v3;
  v6._countAndFlagsBits = String.init<A>(describing:)(&v11, &type metadata for SymbolButton.MaterialColor);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8 = v12;
  v9 = v13;
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  return result;
}

double sub_EBA59C(uint64_t a1, unsigned __int8 a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  UIFontTextStyle v11;
  uint64_t v12;
  NSString *v13;
  NSString *v14;
  void *v15;
  void *v16;
  NSString *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  _OWORD *v37;
  double result;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;

  HIDWORD(v39) = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E760);
  __chkstk_darwin(v5);
  v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v7 = a2;
    if (a2 == 1)
    {
      v8 = 0;
      v9 = 0xE700000000000000;
      v10 = 0x656C6666756873;
      v11 = UIFontTextStyleSubheadline;
    }
    else
    {
      v12 = qword_1506010;
      v13 = UIFontTextStyleSubheadline;
      if (v12 != -1)
        swift_once(&qword_1506010, sub_DCBAF4);
      v11 = (UIFontTextStyle)static NSBundle.musicCoreUIBundle;
      v9 = 0xED00007372617473;
      v10 = 0x2E646E612E63696DLL;
      v8 = static NSBundle.musicCoreUIBundle;
    }
  }
  else
  {
    v7 = a2;
    v8 = a2;
    v9 = 0xE90000000000006CLL;
    v10 = 0x6C69662E79616C70;
    v11 = UIFontTextStyleSubheadline;
  }
  v14 = v11;
  v15 = *(void **)(a1 + 16);
  v16 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_10683D0;
  *(_OWORD *)(a1 + 64) = xmmword_1062330;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 112) = 0;
  v17 = UIFontTextStyleSubheadline;
  v18 = v7;
  v19 = SymbolButton.Intent.title.getter(v7);
  v21 = v20;
  v22 = UIFontTextStyleBody;

  v23 = *(void **)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v21;
  *(_QWORD *)(a1 + 136) = v22;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  v24 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v25 = (char *)objc_msgSend(v24, "userInterfaceIdiom");

  if (v25 != (_BYTE *)&dword_4 + 2)
  {
    if (BYTE4(v39) == 2)
    {
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v31 = 1;
    }
    else
    {
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v44 = 2;
      v45 = 0;
      v46 = 0;
      sub_EBA484((uint64_t)&v41, BYTE4(v39) & 1);
      v31 = v41;
      v26 = v42;
      v27 = v43;
      v28 = v44;
      v29 = v45;
      v30 = v46;
    }
    sub_CCF40(*(char **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264));
    *(_QWORD *)(a1 + 224) = v31;
    *(_QWORD *)(a1 + 232) = v26;
    *(_QWORD *)(a1 + 240) = v27;
    *(_QWORD *)(a1 + 248) = v28;
    *(_QWORD *)(a1 + 256) = v29;
    *(_QWORD *)(a1 + 264) = v30;
  }
  if (qword_1506468 != -1)
    swift_once(&qword_1506468, sub_EDFE60);
  v32 = type metadata accessor for UIView.Corner(0);
  v33 = __swift_project_value_buffer(v32, (uint64_t)static UIView.Corner.roundedRect);
  v34 = *(_QWORD *)(v32 - 8);
  v35 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v40, v33, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v32);
  v36 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  sub_DCBED8(v35, a1 + v36[9]);
  *(_QWORD *)(a1 + v36[12]) = qword_10B3800[v18];
  *(int64x2_t *)(a1 + v36[13]) = vdupq_n_s64(0x4048000000000000uLL);
  v37 = (_OWORD *)(a1 + v36[15]);
  result = 0.0;
  *v37 = xmmword_1085B70;
  v37[1] = xmmword_1085B70;
  return result;
}

Swift::Int static PlayIntentButtonStack.playShuffle(_:)(uint64_t a1, uint64_t a2)
{
  return sub_EBA974(a1, a2, (uint64_t)&off_13C23C0);
}

Swift::Int static PlayIntentButtonStack.sing(_:)(uint64_t a1, uint64_t a2)
{
  return sub_EBA974(a1, a2, (uint64_t)&off_13C23E8);
}

Swift::Int sub_EBA974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v4;

  v4 = sub_DD1D30(a3);
  swift_retain(a2);
  return v4;
}

Swift::Int PlayIntentButtonStack.init(_:handler:)(char a1)
{
  uint64_t v2;
  uint64_t inited;
  Swift::Int v4;
  _BYTE v6[40];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070B0);
  inited = swift_initStackObject(v2, v6);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_BYTE *)(inited + 32) = a1;
  v4 = sub_DD1D30(inited);
  swift_setDeallocating(inited);
  return v4;
}

uint64_t PlayIntentButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC8);
  v8.n128_f64[0] = __chkstk_darwin();
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static Axis.Set.horizontal.getter(v8);
  v12 = Axis.Set.init(rawValue:)(0);
  v13 = v12;
  v14 = Axis.Set.init(rawValue:)(v12);
  if (Axis.Set.init(rawValue:)(v14 & v11) != v11)
    LOBYTE(v13) = Axis.Set.init(rawValue:)(v13 | v11);
  *v10 = v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDD0);
  sub_EBAB24(a1, a2, a3, &v10[*(int *)(v15 + 44)]);
  return sub_5C090((uint64_t)v10, a4, &qword_150DDC8);
}

uint64_t sub_EBAB24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE60);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  __chkstk_darwin();
  v15 = (char *)&v22 - v14;
  __chkstk_darwin();
  v17 = (char *)&v22 - v16;
  sub_EBACB8(0, a1, a2, a3, (uint64_t)&v22 - v16);
  sub_EBACB8(1, a1, a2, a3, (uint64_t)v15);
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v13, v17, v8);
  v18(v11, v15, v8);
  v18(a4, v13, v8);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE68);
  v18(&a4[*(int *)(v19 + 48)], v11, v8);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v15, v8);
  v20(v17, v8);
  v20(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v8);
}

void sub_EBACB8(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _BYTE *v34;
  _QWORD *v35;
  void (*v36)(char *, _QWORD, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;

  v65 = a1;
  v61 = a5;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA10);
  __chkstk_darwin();
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v57 = (char *)&v55 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v68 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin();
  v67 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v66 = (char *)&v55 - v13;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DA18);
  __chkstk_darwin();
  v56 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v58 = (uint64_t)&v55 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE70);
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  __chkstk_darwin();
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v55 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE78);
  __chkstk_darwin();
  v23 = (uint64_t *)((char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE80);
  __chkstk_darwin();
  v70 = (uint64_t)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v23 = 0x4030000000000000;
  swift_bridgeObjectRetain_n(a2, 2);
  v25 = (char *)sub_DCAF88(a2);
  swift_bridgeObjectRelease();
  v71 = v25;
  sub_EBC1A4(&v71);
  swift_bridgeObjectRelease();
  v62 = (char *)v23 + *(int *)(v21 + 44);
  v26 = swift_allocObject(&unk_13CD0B8, 48, 7);
  *(_BYTE *)(v26 + 16) = v65 & 1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_QWORD *)(v26 + 32) = a3;
  *(_QWORD *)(v26 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE88);
  v28 = sub_5C150(&qword_150DE90, &qword_150DE88, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = sub_EBD988();
  v30 = sub_EBE378();
  ForEach<>.init(_:content:)(&v71, sub_EBE31C, v26, v27, &type metadata for String, &type metadata for PlayIntentButtonWrapper, v28, v29, v30);
  v31 = v64;
  v32 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v32(v20, v18, v64);
  v32(v62, v20, v31);
  LOBYTE(v32) = *(_QWORD *)(a2 + 16) < 2uLL;
  v33 = v70;
  sub_EBE3BC((uint64_t)v23, v70);
  v34 = (_BYTE *)(v33 + *(int *)(v69 + 36));
  *v34 = (_BYTE)v32;
  v34[1] = 1;
  sub_56024((uint64_t)v23, &qword_150DE78);
  v35 = v68;
  v36 = (void (*)(char *, _QWORD, uint64_t))v68[13];
  v37 = v66;
  v36(v66, enum case for DynamicTypeSize.xSmall(_:), v11);
  v38 = v67;
  v36(v67, enum case for DynamicTypeSize.accessibility2(_:), v11);
  v39 = sub_4DD24((unint64_t *)&qword_150BC10, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v37, v38, v11, v39) & 1) != 0)
  {
    v40 = v59;
    v41 = v57;
    v42 = &v57[*(int *)(v59 + 48)];
    v43 = (void (*)(char *, char *, uint64_t))v35[4];
    v43(v57, v37, v11);
    v43(v42, v38, v11);
    v44 = &v9[*(int *)(v40 + 48)];
    v45 = (void (*)(char *, char *, uint64_t))v35[2];
    v45(v9, v41, v11);
    v45(v44, v42, v11);
    v46 = (uint64_t)v56;
    v43(v56, v9, v11);
    v47 = (void (*)(char *, uint64_t))v35[1];
    v47(v44, v11);
    v48 = &v9[*(int *)(v40 + 48)];
    v43(v9, v41, v11);
    v43(v48, v42, v11);
    v49 = v60;
    v43((char *)(v46 + *(int *)(v60 + 36)), v48, v11);
    v47(v9, v11);
    v50 = v58;
    sub_5C090(v46, v58, &qword_150DA18);
    v51 = sub_EBE404();
    v52 = sub_5C150(&qword_150DB20, &qword_150DA18, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v53 = v51;
    v54 = v70;
    View.dynamicTypeSize<A>(_:)(v50, v69, v49, v53, v52);
    sub_56024(v50, &qword_150DA18);
    sub_56024(v54, &qword_150DE80);
  }
  else
  {
    __break(1u);
    swift_release();
    __break(1u);
  }
}

uint64_t PlayIntentButtonWrapper.init(intent:iconOnly:handler:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath(&unk_10B3288);
  *(_BYTE *)a5 = a1;
  *(_BYTE *)(a5 + 1) = a2;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

void sub_EBB290(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, double *a6, double a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  double v28;
  double v29;
  uint64_t v30;
  void (*v31)(_QWORD *, _QWORD);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  double v38;
  double v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  double *v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  char v57[8];
  _QWORD v58[5];

  v51 = a6;
  v49 = a4;
  v48 = a3;
  v47 = a2;
  v46[1] = a1;
  v9 = type metadata accessor for LayoutSubview(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v53 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DE38);
  __chkstk_darwin();
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LayoutSubviews(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE40);
  v19 = __chkstk_darwin();
  v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v15;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v50 = a5;
  v54 = v22;
  ((void (*)(char *, uint64_t, uint64_t, double))v22)(v17, a5, v14, v19);
  v23 = sub_4DD24(&qword_150DE50, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v55 = v17;
  dispatch thunk of Sequence.makeIterator()(v14, v23);
  v24 = &v21[*(int *)(v18 + 36)];
  v25 = sub_4DD24(&qword_150DE48, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v26 = *(_QWORD *)v24;
  v52 = v21;
  dispatch thunk of Collection.endIndex.getter(v14, v25);
  if (v26 == v58[0])
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v28 = 0.0;
LABEL_10:
    v41 = v51;
    v27(v13, 1, 1, v9);
    v42 = (uint64_t)v52;
  }
  else
  {
    v28 = 0.0;
    v29 = 0.0;
    v30 = (uint64_t)v52;
    while (1)
    {
      v31 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v58, v24, v14, v25);
      (*(void (**)(char *))(v10 + 16))(v13);
      v31(v58, 0);
      v32 = v55;
      v54(v55, v30, v14);
      dispatch thunk of Collection.formIndex(after:)(v24, v14, v25);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v14);
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v27(v13, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v13, 1, v9) == 1)
        break;
      v33 = v53;
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v53, v13, v9);
      v35 = static ProposedViewSize.zero.getter(v34);
      LOBYTE(v58[0]) = v36 & 1;
      v57[0] = v37 & 1;
      v38 = LayoutSubview.sizeThatFits(_:)(v35);
      if (v28 <= v38)
        v28 = v38;
      if (v29 <= v39)
        v29 = v39;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v33, v9);
      v40 = *(_QWORD *)v24;
      dispatch thunk of Collection.endIndex.getter(v14, v25);
      if (v40 == v58[0])
        goto LABEL_10;
    }
    v41 = v51;
    v42 = v30;
  }
  sub_56024(v42, &qword_150DE40);
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(v14, v25);
  dispatch thunk of Collection.distance(from:to:)(v58, v57, v14, v25);
  v44 = v43;
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(v14, v25);
  dispatch thunk of Collection.distance(from:to:)(v58, v57, v14, v25);
  if (__OFSUB__(v45, 1))
  {
    __break(1u);
  }
  else
  {
    *v41 = v28;
    v41[1] = v28 * (double)v44 + (double)(v45 - 1) * a7;
  }
}

void sub_EBB6C0(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_EBB6D0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  double *v6;

  sub_EBB290(a1, a2 & 1, a3, a4 & 1, a5, a6, *v6);
}

uint64_t sub_EBB6EC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, double *a10)
{
  double *v10;

  return sub_EBC98C(a9, a10, a1, a2, a3, a4, *v10);
}

uint64_t sub_EBB700@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC8);
  v3.n128_f64[0] = __chkstk_darwin();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  v8 = v1[2];
  v9 = static Axis.Set.horizontal.getter(v3);
  v10 = Axis.Set.init(rawValue:)(0);
  v11 = v10;
  v12 = Axis.Set.init(rawValue:)(v10);
  if (Axis.Set.init(rawValue:)(v12 & v9) != v9)
    LOBYTE(v11) = Axis.Set.init(rawValue:)(v11 | v9);
  *v5 = v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDD0);
  sub_EBAB24(v6, v7, v8, &v5[*(int *)(v13 + 44)]);
  return sub_5C090((uint64_t)v5, a1, &qword_150DDC8);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.getter()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_EBC8D4();
  EnvironmentValues.subscript.getter(&var1, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v0);
  return var1;
}

_QWORD *sub_EBB824@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_EBC8D4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_EBB870(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_EBC8D4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.setter(char a1)
{
  unint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_EBC8D4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

char *PlayIntentButtonWrapper.makeUIView(context:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  char *v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  char v22[24];

  v1 = v0;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SymbolButton(0);
  v4 = *v0;
  v5 = SymbolButton.__allocating_init(intent:)(v4);
  v6 = SymbolButton.materialColor.getter();
  sub_EB96E4(v4, v6, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1E557C((uint64_t)v3);
  if (v4)
  {
    if (v4 == 1)
      v7 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v7 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v7 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v9 = *v7;
  v8 = v7[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v9, v8);
  v10 = *((_QWORD *)v1 + 3);
  LOBYTE(v8) = v1[32];
  sub_270050(v10, v8);
  LOBYTE(v9) = sub_E433C4(v10, v8);
  sub_270154(v10, v8);
  SymbolButton.materialColor.setter(v9);
  v11 = v1[1];
  v12 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v22, 0, 0);
  sub_1E5538(v12, (uint64_t)v3);
  v3[184] = v11;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1E557C((uint64_t)v3);
  v13 = *((_QWORD *)v1 + 1);
  v14 = *((_QWORD *)v1 + 2);
  v15 = swift_allocObject(&unk_13CCBC8, 49, 7);
  v16 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v15 + 32) = v16;
  *(_BYTE *)(v15 + 48) = v1[32];
  v17 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler], v21, 1, 0);
  v18 = *v17;
  v19 = v17[1];
  *v17 = (uint64_t)sub_EBC91C;
  v17[1] = v15;
  sub_270050(v10, v8);
  sub_A9DEC(v13, v14);
  sub_5C198(v18, v19);
  return v5;
}

uint64_t PlayIntentButtonWrapper.updateUIView(_:context:)(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];
  _BYTE v24[24];

  v2 = v1;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *v2;
  v7 = SymbolButton.materialColor.getter();
  sub_EB96E4(v6, v7, (uint64_t)v5);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1E557C((uint64_t)v5);
  if (v6)
  {
    if (v6 == 1)
      v8 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v8 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v8 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v10 = *v8;
  v9 = v8[1];
  type metadata accessor for SymbolButton(0);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v9);
  v11 = *((_QWORD *)v2 + 3);
  LOBYTE(v10) = v2[32];
  sub_270050(v11, v10);
  v12 = sub_E433C4(v11, v10);
  sub_270154(v11, v10);
  SymbolButton.materialColor.setter(v12);
  v13 = v2[1];
  v14 = a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v24, 0, 0);
  sub_1E5538(v14, (uint64_t)v5);
  v5[184] = v13;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1E557C((uint64_t)v5);
  v15 = *((_QWORD *)v2 + 1);
  v16 = *((_QWORD *)v2 + 2);
  v17 = swift_allocObject(&unk_13CCBF0, 49, 7);
  v18 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v17 + 32) = v18;
  *(_BYTE *)(v17 + 48) = v2[32];
  v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, v23, 1, 0);
  v20 = *v19;
  v21 = v19[1];
  *v19 = (uint64_t)sub_EBC91C;
  v19[1] = v17;
  sub_270050(v11, v10);
  sub_A9DEC(v15, v16);
  return sub_5C198(v20, v21);
}

double PlayIntentButtonWrapper.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2, int a3, int a4, id a5)
{
  double result;
  double v8;

  objc_msgSend(a5, "intrinsicContentSize");
  if ((a2 & 1) == 0)
  {
    if (result > *(double *)&a1)
      v8 = result;
    else
      v8 = *(double *)&a1;
    if (*(double *)&a1 != INFINITY)
      return v8;
  }
  return result;
}

uint64_t sub_EBBDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_EBE2AC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_EBBE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_EBE2AC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_EBBE68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_EBE2AC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

double View.playIntentButtonMaterial(_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  double result;
  char v8;

  KeyPath = swift_getKeyPath(&unk_10B3288);
  v8 = a1;
  View.environment<A>(_:_:)(KeyPath, &v8, a2, a3);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_EBBEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1F6F44(&qword_150DE28, &qword_150DE30, (void (*)(void))sub_EBD930, (uint64_t)&protocol conformance descriptor for <A> A?);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.playIntentButtonMaterial.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = a1 + 2;
  *a1 = v1;
  v4 = sub_EBC8D4();
  a1[1] = v4;
  EnvironmentValues.subscript.getter(v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v4);
  return sub_EBBFC4;
}

uint64_t sub_EBBFC4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return EnvironmentValues.subscript.setter(a1 + 17, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

uint64_t PlayIntentLayoutHelper.Configuration.distribution.getter(__int16 a1)
{
  return HIBYTE(a1);
}

uint64_t static PlayIntentLayoutHelper.Configuration.with(_:)(void (*a1)(unsigned __int16 *))
{
  unsigned __int16 v2;
  uint64_t v3;

  v2 = 513;
  v3 = 0x4030000000000000;
  a1(&v2);
  return v2;
}

BOOL static PlayIntentLayoutHelper.Configuration.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_EBC060(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
      && *((unsigned __int8 *)a1 + 1) == *((unsigned __int8 *)a2 + 1)
      && a1[1] == a2[1];
}

uint64_t PlayIntentLayoutHelper.configuration.setter(uint64_t result, double a2)
{
  uint64_t v2;

  *(_WORD *)(v2 + 16) = result;
  *(double *)(v2 + 24) = a2;
  return result;
}

char *PlayIntentLayoutHelper.init()()
{
  char *v0;

  type metadata accessor for SymbolButton(0);
  v0 = SymbolButton.__allocating_init(intent:)(0);
  SymbolButton.__allocating_init(intent:)(1);
  return v0;
}

void PlayIntentLayoutHelper.layout(in:rect:)(void *a1, uint64_t a2, void *a3, void *a4, int a5, double a6)
{
  uint64_t v12;
  uint64_t inited;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE v17[48];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  inited = swift_initStackObject(v12, v17);
  *(_OWORD *)(inited + 16) = xmmword_105F8A0;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  v16 = inited;
  specialized Array._endMutation()(inited);
  v14 = a3;
  v15 = a4;
  _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(v16, a1, a2, a5, a6);
  swift_bridgeObjectRelease();
}

void sub_EBC1A4(char **a1)
{
  char *v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_DF92DC((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_EBC20C(v4);
  *a1 = v2;
}

void sub_EBC20C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  Swift::Int v21;
  _BYTE *v22;
  unsigned int v23;
  Swift::Int v24;
  _BYTE *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  Swift::Int v94;
  Swift::Int v95;
  uint64_t v96;
  unsigned __int8 *v97;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(unsigned __int8 *)(v79 + i);
        v82 = v78;
        do
        {
          v83 = *(unsigned __int8 *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_142;
          *(_BYTE *)(v79 + v82 + 1) = v83;
          *(_BYTE *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v94 = v4;
    v95 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for SymbolButton.Intent);
      *(_QWORD *)(v7 + 16) = v6;
      v3 = v95;
      v93 = (_QWORD *)v7;
      v97 = (unsigned __int8 *)(v7 + 32);
LABEL_13:
      v9 = 0;
      v92 = v2;
      v10 = *v2;
      v11 = (char *)_swiftEmptyArrayStorage;
      v96 = *v2;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(unsigned __int8 *)(v10 + v9);
          v15 = *(unsigned __int8 *)(v10 + v13);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v16 = v14;
            while (1)
            {
              v17 = *(unsigned __int8 *)(v10 + v9);
              if (v14 < v15 == v17 >= v16)
                break;
              ++v9;
              v16 = v17;
              if (v3 == v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13)
              goto LABEL_139;
            if (v13 < v9)
            {
              v18 = v9 - 1;
              v19 = v13;
              do
              {
                if (v19 != v18)
                {
                  if (!v10)
                    goto LABEL_145;
                  v20 = *(_BYTE *)(v10 + v19);
                  *(_BYTE *)(v10 + v19) = *(_BYTE *)(v10 + v18);
                  *(_BYTE *)(v10 + v18) = v20;
                }
                v59 = ++v19 < v18--;
              }
              while (v59);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_136;
          if (v9 - v13 < v94)
          {
            v21 = v13 + v94;
            if (__OFADD__(v13, v94))
              goto LABEL_140;
            if (v21 >= v3)
              v21 = v3;
            if (v21 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return;
            }
            if (v9 != v21)
            {
              v22 = (_BYTE *)(v10 + v9);
              do
              {
                v23 = *(unsigned __int8 *)(v10 + v9);
                v24 = v13;
                v25 = v22;
                do
                {
                  v26 = *(v25 - 1);
                  if (v23 >= v26)
                    break;
                  if (!v10)
                    goto LABEL_143;
                  *v25 = v26;
                  *--v25 = v23;
                  ++v24;
                }
                while (v9 != v24);
                ++v9;
                ++v22;
              }
              while (v9 != v21);
              v9 = v21;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_131;
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_DF9154(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v28 = *((_QWORD *)v11 + 2);
        v27 = *((_QWORD *)v11 + 3);
        v12 = v28 + 1;
        v10 = v96;
        if (v28 >= v27 >> 1)
        {
          v77 = sub_DF9154((char *)(v27 > 1), v28 + 1, 1, v11);
          v10 = v96;
          v11 = v77;
        }
        *((_QWORD *)v11 + 2) = v12;
        v29 = v11 + 32;
        v30 = &v11[16 * v28 + 32];
        *(_QWORD *)v30 = v13;
        *((_QWORD *)v30 + 1) = v9;
        if (v28)
        {
          while (1)
          {
            v31 = v12 - 1;
            if (v12 >= 4)
            {
              v36 = &v29[16 * v12];
              v37 = *((_QWORD *)v36 - 8);
              v38 = *((_QWORD *)v36 - 7);
              v42 = __OFSUB__(v38, v37);
              v39 = v38 - v37;
              if (v42)
                goto LABEL_120;
              v41 = *((_QWORD *)v36 - 6);
              v40 = *((_QWORD *)v36 - 5);
              v42 = __OFSUB__(v40, v41);
              v34 = v40 - v41;
              v35 = v42;
              if (v42)
                goto LABEL_121;
              v43 = v12 - 2;
              v44 = &v29[16 * v12 - 32];
              v46 = *(_QWORD *)v44;
              v45 = *((_QWORD *)v44 + 1);
              v42 = __OFSUB__(v45, v46);
              v47 = v45 - v46;
              if (v42)
                goto LABEL_122;
              v42 = __OFADD__(v34, v47);
              v48 = v34 + v47;
              if (v42)
                goto LABEL_124;
              if (v48 >= v39)
              {
                v66 = &v29[16 * v31];
                v68 = *(_QWORD *)v66;
                v67 = *((_QWORD *)v66 + 1);
                v42 = __OFSUB__(v67, v68);
                v69 = v67 - v68;
                if (v42)
                  goto LABEL_130;
                v59 = v34 < v69;
                goto LABEL_84;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v60 = *((_QWORD *)v11 + 4);
                v61 = *((_QWORD *)v11 + 5);
                v42 = __OFSUB__(v61, v60);
                v53 = v61 - v60;
                v54 = v42;
                goto LABEL_78;
              }
              v33 = *((_QWORD *)v11 + 4);
              v32 = *((_QWORD *)v11 + 5);
              v42 = __OFSUB__(v32, v33);
              v34 = v32 - v33;
              v35 = v42;
            }
            if ((v35 & 1) != 0)
              goto LABEL_123;
            v43 = v12 - 2;
            v49 = &v29[16 * v12 - 32];
            v51 = *(_QWORD *)v49;
            v50 = *((_QWORD *)v49 + 1);
            v52 = __OFSUB__(v50, v51);
            v53 = v50 - v51;
            v54 = v52;
            if (v52)
              goto LABEL_125;
            v55 = &v29[16 * v31];
            v57 = *(_QWORD *)v55;
            v56 = *((_QWORD *)v55 + 1);
            v42 = __OFSUB__(v56, v57);
            v58 = v56 - v57;
            if (v42)
              goto LABEL_127;
            if (__OFADD__(v53, v58))
              goto LABEL_129;
            if (v53 + v58 >= v34)
            {
              v59 = v34 < v58;
LABEL_84:
              if (v59)
                v31 = v43;
              goto LABEL_86;
            }
LABEL_78:
            if ((v54 & 1) != 0)
              goto LABEL_126;
            v62 = &v29[16 * v31];
            v64 = *(_QWORD *)v62;
            v63 = *((_QWORD *)v62 + 1);
            v42 = __OFSUB__(v63, v64);
            v65 = v63 - v64;
            if (v42)
              goto LABEL_128;
            if (v65 < v53)
              goto LABEL_15;
LABEL_86:
            v70 = v31 - 1;
            if (v31 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10)
              goto LABEL_144;
            v71 = &v29[16 * v70];
            v72 = *(_QWORD *)v71;
            v73 = v29;
            v74 = &v29[16 * v31];
            v75 = *((_QWORD *)v74 + 1);
            sub_D9C15C((unsigned __int8 *)(v10 + *(_QWORD *)v71), (unsigned __int8 *)(v10 + *(_QWORD *)v74), v10 + v75, v97);
            if (v1)
              goto LABEL_114;
            if (v75 < v72)
              goto LABEL_117;
            if (v31 > *((_QWORD *)v11 + 2))
              goto LABEL_118;
            *(_QWORD *)v71 = v72;
            *(_QWORD *)&v73[16 * v70 + 8] = v75;
            v76 = *((_QWORD *)v11 + 2);
            if (v31 >= v76)
              goto LABEL_119;
            v12 = v76 - 1;
            memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
            v29 = v73;
            *((_QWORD *)v11 + 2) = v76 - 1;
            v10 = v96;
            if (v76 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v3 = v95;
        if (v9 >= v95)
        {
          v2 = v92;
          v8 = v93;
          goto LABEL_103;
        }
      }
    }
    v8 = _swiftEmptyArrayStorage;
    v97 = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v93 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v12 = _swiftEmptyArrayStorage[2];
    v11 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    v93 = v8;
    if (v12 >= 2)
    {
      v84 = *v2;
      do
      {
        v85 = v12 - 2;
        if (v12 < 2)
          goto LABEL_132;
        if (!v84)
          goto LABEL_146;
        v86 = v11;
        v87 = v11 + 32;
        v88 = *(_QWORD *)&v11[16 * v85 + 32];
        v89 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_D9C15C((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(_QWORD *)&v87[16 * v12 - 16]), v84 + v89, v97);
        if (v1)
          break;
        if (v89 < v88)
          goto LABEL_133;
        if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
          v86 = sub_DF924C((uint64_t)v86);
        if (v85 >= *((_QWORD *)v86 + 2))
          goto LABEL_134;
        v90 = &v86[16 * v85 + 32];
        *(_QWORD *)v90 = v88;
        *((_QWORD *)v90 + 1) = v89;
        v91 = *((_QWORD *)v86 + 2);
        if (v12 > v91)
          goto LABEL_135;
        memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
        v11 = v86;
        *((_QWORD *)v86 + 2) = v91 - 1;
        v12 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v93[2] = 0;
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_EBC840@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_EBC8D4();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_EBC88C(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_EBC8D4();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

unint64_t sub_EBC8D4()
{
  unint64_t result;

  result = qword_150DDD8;
  if (!qword_150DDD8)
  {
    result = swift_getWitnessTable(&unk_10B37C0, &type metadata for PlayIntentButtonMaterialKey);
    atomic_store(result, (unint64_t *)&qword_150DDD8);
  }
  return result;
}

uint64_t objectdestroyTm_39()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  sub_270154(*(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_EBC95C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 24);
  if (v1)
    return v1(*(unsigned __int8 *)(v0 + 16));
  return result;
}

uint64_t sub_EBC98C(uint64_t a1, double *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double Width;
  double v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  double v37;
  void (*v38)(_QWORD *, _QWORD);
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  double v42;
  char *v43;
  CGFloat Height;
  __n128 v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  CGFloat v52;
  uint64_t v53;
  double v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  void (*v68)(char *, uint64_t, uint64_t, __n128);
  char *v69;
  uint64_t v70;
  _QWORD v71[4];
  char v72[16];
  CGRect v73;
  CGRect v74;

  v14 = type metadata accessor for ViewDimensions(0);
  v65 = *(_QWORD *)(v14 - 8);
  v66 = v14;
  __chkstk_darwin();
  v64 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LayoutSubview(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v63 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DE38);
  __chkstk_darwin();
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LayoutSubviews(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE40);
  __chkstk_darwin();
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73.origin.x = a3;
  v73.origin.y = a4;
  v73.size.width = a5;
  v73.size.height = a6;
  Width = CGRectGetWidth(v73);
  v67 = a2;
  v29 = a2[1];
  v30 = sub_4DD24(&qword_150DE48, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v21);
  dispatch thunk of Collection.endIndex.getter(v21, v30);
  v31 = dispatch thunk of Collection.distance(from:to:)(v71, v72, v21, v30);
  v60 = v32;
  v70 = v22;
  v68 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
  v68(v24, a1, v21, v31);
  v33 = sub_4DD24(&qword_150DE50, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v69 = v24;
  dispatch thunk of Sequence.makeIterator()(v21, v33);
  v34 = &v27[*(int *)(v25 + 36)];
  v35 = *(_QWORD *)v34;
  dispatch thunk of Collection.endIndex.getter(v21, v30);
  if (v35 == v71[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v20, 1, 1, v16);
  }
  else
  {
    v36 = (Width - v29) / (double)(uint64_t)v60;
    v37 = a3;
    v62 = v30;
    v61 = v21;
    while (1)
    {
      v38 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v71, v34, v21, v30);
      (*(void (**)(char *))(v17 + 16))(v20);
      v38(v71, 0);
      v39 = v69;
      ((void (*)(char *, char *, uint64_t))v68)(v69, v27, v21);
      dispatch thunk of Collection.formIndex(after:)(v34, v21, v30);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v21);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v40(v20, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16) == 1)
        break;
      v60 = v40;
      v41 = v63;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v63, v20, v16);
      v42 = v36 + *v67;
      v74.origin.x = a3;
      v74.origin.y = a4;
      v74.size.width = a5;
      v74.size.height = a6;
      v43 = v27;
      Height = CGRectGetHeight(v74);
      v45.n128_u64[0] = static UnitPoint.topLeading.getter();
      v47.n128_u64[0] = v46;
      LOBYTE(v71[0]) = 0;
      v72[0] = 0;
      LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v42, 0, *(_QWORD *)&Height, 0, v37, a4, v45, v47);
      LOBYTE(v71[0]) = 0;
      v72[0] = 0;
      v48 = v17;
      v49 = v16;
      v50 = v20;
      v51 = v64;
      v52 = Height;
      v27 = v43;
      v21 = v61;
      v53 = LayoutSubview.dimensions(in:)(*(_QWORD *)&v42, 0, *(_QWORD *)&v52, 0);
      v54 = ViewDimensions.width.getter(v53);
      v55 = v51;
      v20 = v50;
      v16 = v49;
      v17 = v48;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v66);
      v37 = v37 + v54 + a7;
      v56 = v41;
      v30 = v62;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v56, v16);
      v57 = *(_QWORD *)v34;
      dispatch thunk of Collection.endIndex.getter(v21, v30);
      if (v57 == v71[0])
      {
        v60(v20, 1, 1, v16);
        return sub_56024((uint64_t)v27, &qword_150DE40);
      }
    }
  }
  return sub_56024((uint64_t)v27, &qword_150DE40);
}

void sub_EBCE4C(id *a1, id a2, CGFloat *a3, uint64_t a4, uint64_t a5, uint64_t a6, BOOL *a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  id v22;
  id v23;
  id v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  id v29;
  double v30;
  double v31;
  uint64_t v32;
  double v33;
  BOOL v34;
  double v35;
  double v36;
  uint64_t v37;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v22 = *a1;
  v23 = objc_msgSend(*a1, "superview");
  if (!v23 || (v24 = v23, v23, v24 != a2))
    objc_msgSend(a2, "addSubview:", v22);
  v25 = *a3;
  v26 = a3[1];
  v27 = a3[3];
  if ((*(_BYTE *)(a4 + 8) & 1) != 0)
  {
    v28 = a9;
    v29 = objc_msgSend(v22, "intrinsicContentSize");
    v31 = v30;
    if ((unint64_t)a5 >> 62)
    {
      if (a5 < 0)
        v37 = a5;
      else
        v37 = a5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v32 = _CocoaArrayWrapper.endIndex.getter(v37);
      v29 = (id)swift_bridgeObjectRelease(a5);
    }
    else
    {
      v32 = *(_QWORD *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8));
    }
    v33 = v31 - CGFloat.ceilingValue(scale:)(v29, v28, a8 / (double)v32);
  }
  else
  {
    v33 = *(double *)a4;
  }
  CGRect.applyingLayoutDirection(_:inBounds:)(a6);
  objc_msgSend(v22, "setFrame:");
  v39.origin.x = v25;
  v39.origin.y = v26;
  v39.size.width = v33;
  v39.size.height = v27;
  a3[2] = a3[2] - (CGRectGetWidth(v39) + a14);
  v40.origin.x = v25;
  v40.origin.y = v26;
  v40.size.width = v33;
  v40.size.height = v27;
  *a3 = *a3 + CGRectGetWidth(v40) + a14;
  if (*a7)
  {
    v34 = 1;
  }
  else
  {
    objc_msgSend(v22, "intrinsicContentSize");
    v36 = v35;
    v41.origin.x = v25;
    v41.origin.y = v26;
    v41.size.width = v33;
    v41.size.height = v27;
    v34 = CGRectGetWidth(v41) < v36;
  }
  *a7 = v34;
}

void _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(uint64_t a1, void *a2, uint64_t a3, int a4, double a5)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  _BOOL4 v38;
  uint64_t v39;
  double v40;
  double v41;
  CGFloat v42;
  CGFloat height;
  CGFloat width;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  char *v50;
  void *v51;
  uint64_t v52;
  id v53;
  double v54;
  double v55;
  uint64_t v56;
  double v57;
  char v58;
  int v59;
  double v60;
  void *v61;
  uint64_t v62;
  double v63;
  int v64;
  CGFloat y;
  CGFloat v66;
  uint64_t v67;
  CGFloat v68;
  uint64_t v69;
  CGFloat v70;
  double v71;
  double v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  double v79;
  double v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  char *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  void *v95;
  int v96;
  CGSize size;
  CGFloat v98;
  CGFloat x;
  double v100;
  id v101[4];
  BOOL v102;
  double v103;
  char v104;
  char v105[24];
  CGRect v106;
  _QWORD v107[5];
  _QWORD *v108;
  char v109;
  CGRect v110;
  CGRect v111;

  v96 = a4;
  v6 = a3;
  sub_5C090(a3, (uint64_t)v107, (uint64_t *)&unk_15087B0);
  x = *(double *)v107;
  v98 = *(double *)&v107[1];
  *(_QWORD *)&size.height = v107[2];
  *(_QWORD *)&size.width = v107[3];
  v9 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v9);
  v11 = (char *)v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v90 = a1;
    else
      v90 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v90);
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  v100 = a5;
  if (v12)
  {
    if (v12 < 1)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    v94 = v6;
    for (i = 0; i != v12; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v16 = *(id *)(a1 + 8 * i + 32);
      v17 = v16;
      v18 = objc_msgSend(v16, "isHidden");
      if ((v18 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v14 = v108[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
        v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v17);
        specialized ContiguousArray._endMutation()(v15);
      }
    }
    *(_QWORD *)&v19 = swift_bridgeObjectRelease().n128_u64[0];
    v20 = (uint64_t)v108;
    v6 = v94;
  }
  else
  {
    *(_QWORD *)&v19 = swift_bridgeObjectRelease().n128_u64[0];
    v20 = (uint64_t)_swiftEmptyArrayStorage;
  }
  objc_msgSend(a2, "bounds", v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v29, "displayScale");
  v31 = v30;

  v32 = objc_msgSend(a2, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(a2, "layoutMargins");
  v34 = v33;
  v36 = v35;
  v92[1] = v37;
  v38 = v20 < 0 || (v20 & 0x4000000000000000) != 0;
  if (!v38)
  {
    v39 = *(_QWORD *)(v20 + 16);
    *(_QWORD *)&v40 = v39 - 1;
    if (!__OFSUB__(v39, 1))
      goto LABEL_20;
    goto LABEL_76;
  }
  v91 = swift_bridgeObjectRetain();
  v39 = _CocoaArrayWrapper.endIndex.getter(v91);
  swift_release(v20);
  *(_QWORD *)&v40 = v39 - 1;
  if (__OFSUB__(v39, 1))
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
LABEL_20:
  sub_5C090(v6, (uint64_t)&v108, (uint64_t *)&unk_15087B0);
  v41 = x;
  v42 = v98;
  height = size.height;
  width = size.width;
  if ((v109 & 1) != 0)
    v41 = UIEdgeInsetsInsetRect(v22, v24, v26, v28, v34, v36);
  x = v40;
  v106.origin.x = v41;
  v106.origin.y = v42;
  v106.size.width = height;
  v106.size.height = width;
  if (v38)
  {
    swift_retain(v20);
    v46 = _CocoaArrayWrapper.endIndex.getter(v45);
  }
  else
  {
    v46 = *(_QWORD *)(v20 + 16);
    swift_retain(v20);
  }
  v95 = a2;
  v93 = (uint64_t)v32;
  v94 = v39;
  if (v46)
  {
    if (v46 >= 1)
    {
      v47 = 0;
      v48 = 0.0;
      v49 = 0.0;
      do
      {
        if ((v20 & 0xC000000000000001) != 0)
          v50 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v20);
        else
          v50 = (char *)*(id *)(v20 + 8 * v47 + 32);
        v51 = v50;
        v52 = (uint64_t)&v50[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
        swift_beginAccess(&v50[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v105, 0, 0);
        sub_1E5538(v52, (uint64_t)v11);
        v11[184] = 0;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v11, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_1E557C((uint64_t)v11);
        v53 = objc_msgSend(v51, "intrinsicContentSize");
        v55 = v54;
        v48 = v48 + CGFloat.ceilingValue(scale:)(v53, v31, v54);
        if (v55 > v49)
          v57 = v55;
        else
          v57 = v49;
        ++v47;
        v49 = CGFloat.ceilingValue(scale:)(v56, v31, v57);

      }
      while (v46 != v47);
      goto LABEL_36;
    }
LABEL_78:
    __break(1u);
    __break(1u);
    return;
  }
  v48 = 0.0;
  v49 = 0.0;
LABEL_36:
  v58 = v96;
  v59 = BYTE1(v96);
  v60 = (double)(*(_QWORD *)&x & ~(*(uint64_t *)&x >> 63)) * v100;
  swift_release(v20);
  if (v59)
  {
    v61 = v95;
    v62 = v94;
    if (v59 == 1)
    {
      v103 = v49;
      v104 = 0;
      v63 = v60 + v49 * (double)v94;
    }
    else
    {
      x = v106.origin.x;
      y = v106.origin.y;
      v98 = v106.size.width;
      size.height = v106.size.height;
      v66 = CGRectGetWidth(v106);
      v49 = CGFloat.ceilingValue(scale:)(v67, v31, (v66 - v60) / (double)v62);
      v103 = v49;
      v104 = 0;
      v110.origin.x = x;
      v110.origin.y = y;
      v110.size.width = v98;
      v110.size.height = size.height;
      v63 = CGRectGetWidth(v110);
    }
    v64 = 1;
  }
  else
  {
    v64 = 0;
    v103 = 0.0;
    v104 = 1;
    v63 = v60 + v48;
    v49 = 0.0;
    v61 = v95;
    v62 = v94;
  }
  v68 = v106.origin.y;
  v98 = v106.origin.x;
  size = v106.size;
  v70 = CGRectGetWidth(v106);
  x = v63;
  v71 = v63 - v70;
  if (v71 < 0.0)
    v72 = 0.0;
  else
    v72 = v71;
  if (v64 && v72 > 0.0)
  {
    v103 = v49 - CGFloat.ceilingValue(scale:)(v69, v31, v72 / (double)v62);
    v104 = 0;
    v111.origin.x = v98;
    v111.origin.y = v68;
    v111.size.width = size.width;
    v111.size.height = size.height;
    x = CGRectGetWidth(v111);
  }
  v73 = v100;
  if (v59 != 2)
  {
    if (v58)
    {
      v74 = v98;
      v75 = v68;
      v76 = size.width;
      v77 = size.height;
      if (v58 == 1)
      {
        v78 = CGRectGetWidth(*(CGRect *)&v74);
        v79 = CGFloat.floorValue(scale:)(v31, (v78 - x) * 0.5);
        v80 = v98 + v79;
      }
      else
      {
        v80 = CGRectGetMaxX(*(CGRect *)&v74) - x;
      }
      v106.origin.x = v80;
    }
    v106.size.width = x;
  }
  v102 = 0;
  if (v46)
  {
    v81 = v20 & 0xC000000000000001;
    swift_retain(v20);
    v82 = 0;
    v83 = v93;
    do
    {
      if (v81)
        v84 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v20);
      else
        v84 = *(id *)(v20 + 8 * v82 + 32);
      v85 = v84;
      ++v82;
      v101[0] = v84;
      sub_EBCE4C(v101, v61, &v106.origin.x, (uint64_t)&v103, v20, v83, &v102, v72, v31, v22, v24, v26, v28, v73);

    }
    while (v46 != v82);
    swift_release(v20);
    if (v102 && v62 > 1)
    {
      swift_retain(v20);
      v86 = 0;
      do
      {
        if (v81)
          v87 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v86, v20);
        else
          v87 = (char *)*(id *)(v20 + 8 * v86 + 32);
        v88 = v87;
        ++v86;
        v89 = (uint64_t)&v87[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
        swift_beginAccess(&v87[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v101, 0, 0);
        sub_1E5538(v89, (uint64_t)v11);
        v11[184] = 1;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v11, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_1E557C((uint64_t)v11);

      }
      while (v46 != v86);
      swift_release(v20);
    }
  }
  swift_release(v20);
}

unint64_t sub_EBD8E8()
{
  unint64_t result;

  result = qword_150DDE0;
  if (!qword_150DDE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Intent, &type metadata for SymbolButton.Intent);
    atomic_store(result, (unint64_t *)&qword_150DDE0);
  }
  return result;
}

unint64_t sub_EBD930()
{
  unint64_t result;

  result = qword_150DDE8;
  if (!qword_150DDE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.MaterialColor, &type metadata for SymbolButton.MaterialColor);
    atomic_store(result, (unint64_t *)&qword_150DDE8);
  }
  return result;
}

uint64_t sub_EBD974(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlayIntentButtonStack.body>>, 1);
}

unint64_t sub_EBD988()
{
  unint64_t result;

  result = qword_150DDF0;
  if (!qword_150DDF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonWrapper, &type metadata for PlayIntentButtonWrapper);
    atomic_store(result, (unint64_t *)&qword_150DDF0);
  }
  return result;
}

unint64_t sub_EBD9D0()
{
  unint64_t result;

  result = qword_150DDF8;
  if (!qword_150DDF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentLayoutHelper.Alignment, &type metadata for PlayIntentLayoutHelper.Alignment);
    atomic_store(result, (unint64_t *)&qword_150DDF8);
  }
  return result;
}

unint64_t sub_EBDA18()
{
  unint64_t result;

  result = qword_150DE00;
  if (!qword_150DE00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentLayoutHelper.Distribution, &type metadata for PlayIntentLayoutHelper.Distribution);
    atomic_store(result, (unint64_t *)&qword_150DE00);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Intent()
{
  return &type metadata for SymbolButton.Intent;
}

uint64_t _s13MaterialColorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_EBDABC + 4 * byte_10B3275[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_EBDAF0 + 4 * asc_10B3270[v4]))();
}

uint64_t sub_EBDAF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_EBDAF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xEBDB00);
  return result;
}

uint64_t sub_EBDB0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xEBDB14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_EBDB18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_EBDB20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.MaterialColor()
{
  return &type metadata for SymbolButton.MaterialColor;
}

double destroy for PlayIntentButtonStack(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(*a1);
  *(_QWORD *)&result = swift_release(a1[2]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI21PlayIntentButtonStackVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for PlayIntentButtonStack(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = a2[1];
  v5 = a2[2];
  v7 = a1[2];
  a1[1] = v6;
  a1[2] = v5;
  swift_retain(v5);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for PlayIntentButtonStack(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a1[2];
  a1[2] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack()
{
  return &type metadata for PlayIntentButtonStack;
}

uint64_t destroy for PlayIntentButtonWrapper(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
    swift_release();
  return sub_270154(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_270050(v6, v7);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_270050(v9, v10);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  sub_270154(v11, v12);
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  v9 = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v9;
  sub_270154(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentButtonWrapper()
{
  return &type metadata for PlayIntentButtonWrapper;
}

uint64_t initializeWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper()
{
  return &type metadata for PlayIntentLayoutHelper;
}

uint64_t getEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Configuration()
{
  return &type metadata for PlayIntentLayoutHelper.Configuration;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Alignment()
{
  return &type metadata for PlayIntentLayoutHelper.Alignment;
}

uint64_t _s11MusicCoreUI22PlayIntentLayoutHelperV9AlignmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_EBE118 + 4 * byte_10B327F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_EBE14C + 4 * byte_10B327A[v4]))();
}

uint64_t sub_EBE14C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_EBE154(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xEBE15CLL);
  return result;
}

uint64_t sub_EBE168(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xEBE170);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_EBE174(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_EBE17C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Distribution()
{
  return &type metadata for PlayIntentLayoutHelper.Distribution;
}

uint64_t sub_EBE198()
{
  return sub_5C150(&qword_150DE08, &qword_150DDC8, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
}

uint64_t sub_EBE1C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DE10);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_5C150(&qword_150DE18, &qword_150DE10, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

ValueMetadata *type metadata accessor for PlayIntentButtonMaterialKey()
{
  return &type metadata for PlayIntentButtonMaterialKey;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack;
}

unint64_t sub_EBE268()
{
  unint64_t result;

  result = qword_150DE20;
  if (!qword_150DE20)
  {
    result = swift_getWitnessTable(&unk_10B36F8, &type metadata for PlayIntentButtonStack.SmartHStack);
    atomic_store(result, (unint64_t *)&qword_150DE20);
  }
  return result;
}

unint64_t sub_EBE2AC()
{
  unint64_t result;

  result = qword_150DE58;
  if (!qword_150DE58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonWrapper, &type metadata for PlayIntentButtonWrapper);
    atomic_store(result, (unint64_t *)&qword_150DE58);
  }
  return result;
}

uint64_t sub_EBE2F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_EBE31C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;

  v4 = *(_BYTE *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  v7 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B3288);
  *(_BYTE *)a2 = v7;
  *(_BYTE *)(a2 + 1) = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_BYTE *)(a2 + 32) = 0;
  return swift_retain(v5);
}

unint64_t sub_EBE378()
{
  unint64_t result;

  result = qword_150DE98;
  if (!qword_150DE98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Intent, &type metadata for SymbolButton.Intent);
    atomic_store(result, (unint64_t *)&qword_150DE98);
  }
  return result;
}

uint64_t sub_EBE3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_EBE404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DEA0;
  if (!qword_150DEA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DE80);
    sub_EBE470();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DEA0);
  }
  return result;
}

unint64_t sub_EBE470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DEA8;
  if (!qword_150DEA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DE78);
    sub_5C150(&qword_150DEB0, &qword_150DEB8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_1F6F44(&qword_150DEC0, &qword_150DE70, (void (*)(void))sub_EBD988, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150DEA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack.Cache()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack.Cache;
}

uint64_t PlaylistCovers.CarouselItem.itemType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_EBE530(v1, a1);
}

uint64_t sub_EBE530(uint64_t a1, uint64_t a2)
{
  _s12CarouselItemV16CarouselItemTypeOwcp(a2, a1);
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.itemType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_EBE56C(a1, v1);
}

uint64_t sub_EBE56C(uint64_t a1, uint64_t a2)
{
  _s12CarouselItemV16CarouselItemTypeOwta(a2, a1);
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5C238(v1 + 80, a1, &qword_150AE48);
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_EBE5CC(a1, v1 + 80);
}

uint64_t sub_EBE5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

__n128 PlaylistCovers.CarouselItem.init(itemType:pageIndicator:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __n128 v11;
  __int128 v12;
  _OWORD v13[5];
  _OWORD v14[2];
  uint64_t v15;

  sub_EBE698(a2, (uint64_t)v14);
  v11 = (__n128)v14[1];
  v12 = v14[0];
  v5 = v15;
  sub_EBE6E0(a1, v13);
  v6 = v13[1];
  v7 = v13[2];
  v8 = v13[3];
  v9 = v13[4];
  *(_OWORD *)a3 = v13[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 64) = v9;
  *(_OWORD *)(a3 + 80) = v12;
  result = v11;
  *(__n128 *)(a3 + 96) = v11;
  *(_QWORD *)(a3 + 112) = v5;
  return result;
}

uint64_t sub_EBE698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_EBE6E0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t static PlaylistCovers.CarouselItem.CarouselItemType.__derived_enum_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  char v4;
  _OWORD v6[5];
  _OWORD v7[5];
  _OWORD v8[5];
  _OWORD v9[5];

  sub_EBE6E0(a1, v8);
  if (*(_QWORD *)&v8[0])
  {
    v9[2] = v8[2];
    v9[3] = v8[3];
    v9[4] = v8[4];
    v9[0] = v8[0];
    v9[1] = v8[1];
    sub_EBE6E0(a2, v6);
    if (*(_QWORD *)&v6[0])
    {
      v7[2] = v6[2];
      v7[3] = v6[3];
      v7[4] = v6[4];
      v7[0] = v6[0];
      v7[1] = v6[1];
      sub_8AC29C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
      sub_8AC29C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
      v4 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v9, v7);
      sub_8AC29C(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CBBB0);
      sub_8AC29C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CBBB0);
    }
    else
    {
      v4 = 0;
    }
  }
  else
  {
    sub_EBE6E0(a2, v9);
    v4 = *(_QWORD *)&v9[0] == 0;
  }
  return v4 & 1;
}

uint64_t sub_EBE804(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  _QWORD v37[10];
  _QWORD v38[11];

  v2 = *(void **)a1;
  v3 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = *(void **)(a1 + 16);
    v6 = *(void **)(a1 + 24);
    v7 = *(void **)(a1 + 32);
    v8 = *(void **)(a1 + 40);
    v9 = *(void **)(a1 + 48);
    v10 = *(void **)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 64);
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(void **)(a2 + 16);
    v15 = *(void **)(a2 + 24);
    v16 = *(void **)(a2 + 32);
    v17 = *(void **)(a2 + 40);
    v18 = *(void **)(a2 + 48);
    v19 = *(void **)(a2 + 56);
    v20 = *(_QWORD *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 72);
    v37[0] = *(_QWORD *)a1;
    v37[1] = v4;
    v37[2] = v5;
    v37[3] = v6;
    v37[4] = v7;
    v37[5] = v8;
    v37[6] = v9;
    v37[7] = v10;
    v37[8] = v11;
    v37[9] = v12;
    if (v3)
    {
      v38[0] = v3;
      v38[1] = v13;
      v38[2] = v14;
      v38[3] = v15;
      v38[4] = v16;
      v38[5] = v17;
      v38[6] = v18;
      v38[7] = v19;
      v38[8] = v20;
      v38[9] = v21;
      v35 = v6;
      v36 = v5;
      v27 = v14;
      v33 = v8;
      v34 = v7;
      v26 = v16;
      v31 = v10;
      v32 = v9;
      v22 = v19;
      v29 = v11;
      v30 = v4;
      v28 = v12;
      v23 = v13;
      sub_1CB614(v2, v4, v5, v6, v7, v8, v9, v10);
      sub_1CB614(v3, v23, v14, v15, v26, v17, v18, v22);
      v24 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v37, v38);
      sub_1CBBB0(v3, v23, v27, v15, v26, v17, v18, v22, v20, v21);
      sub_1CBBB0(v2, v30, v36, v35, v34, v33, v32, v31, v29, v28);
    }
    else
    {
      v24 = 0;
    }
  }
  else
  {
    v24 = v3 == 0;
  }
  return v24 & 1;
}

void PlaylistCovers.CarouselItem.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _OWORD v10[5];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  sub_EBE6E0(v1, v10);
  sub_EBE6E0(v10, &v18);
  if ((_QWORD)v18)
  {
    v3 = v19;
    if (v19)
    {
      v5 = v23;
      v4 = v24;
      v7 = v21;
      v6 = v22;
      v8 = v20;
      v9 = *((_QWORD *)&v18 + 1);
      v11 = BYTE8(v18);
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      Hasher._combine(_:)(1u);
      sub_8AC29C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
      sub_1CB694(v9, v3, v8, v7, v6, v5, v4);
      PlaylistCovers.Cover.Representation.hash(into:)(a1);
      sub_8AC29C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CBBB0);
      sub_1CBAB4(v9, v3, v8, v7, v6, v5, v4);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(a1, 0x72656B636970, 0xE600000000000000);
  }
}

uint64_t static PlaylistCovers.CarouselItem.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  char v3;
  _OWORD v5[5];
  _OWORD v6[5];
  _OWORD v7[5];
  _OWORD v8[5];
  _OWORD v9[5];
  _OWORD v10[5];

  sub_EBE6E0(a1, v6);
  sub_EBE6E0(a2, v5);
  sub_EBE6E0(v6, v9);
  if (*(_QWORD *)&v9[0])
  {
    v7[2] = v9[2];
    v7[3] = v9[3];
    v7[4] = v9[4];
    v7[0] = v9[0];
    v7[1] = v9[1];
    sub_EBE6E0(v5, v10);
    if (*(_QWORD *)&v10[0])
    {
      v8[2] = v10[2];
      v8[3] = v10[3];
      v8[4] = v10[4];
      v8[0] = v10[0];
      v8[1] = v10[1];
      sub_8AC29C(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
      sub_8AC29C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
      v3 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v7, v8);
      sub_8AC29C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CBBB0);
      sub_8AC29C(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CBBB0);
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    sub_EBE6E0(v5, v10);
    v3 = *(_QWORD *)&v10[0] == 0;
  }
  return v3 & 1;
}

_QWORD *PlaylistCovers.CarouselItem.cover.getter@<X0>(_QWORD *a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  _OWORD v14[5];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_EBE6E0(v1, v14);
  sub_EBE6E0(v14, &v15);
  v3 = v15;
  if ((_QWORD)v15)
  {
    v4 = v16;
    v13 = *((_QWORD *)&v15 + 1);
    v5 = v17;
    v6 = v18;
    v7 = v19;
    v8 = v20;
    v9 = v21;
    v10 = v22;
    v11 = v23;
  }
  else
  {
    v13 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  result = sub_8AC29C(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
  *a1 = v3;
  a1[1] = v13;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return result;
}

double static PlaylistCovers.CarouselItem.picker.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = Image.init(systemName:)(0x662E6172656D6163, 0xEB000000006C6C69);
  v3 = static Font.caption2.getter();
  v4 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  v5 = ((uint64_t (*)(void))static Color.primary.getter)();
  v6 = Color.opacity(_:)(1.0);
  v7 = swift_release(v5);
  v8 = static Color.primary.getter(v7);
  v9 = Color.opacity(_:)(0.25);
  swift_release(v8);
  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = v2;
  *(_QWORD *)(a1 + 88) = v3;
  *(_QWORD *)(a1 + 96) = v4;
  *(_QWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 112) = v9;
  return result;
}

double static PlaylistCovers.CarouselItem.tracksTiled(image:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  double result;
  _BYTE v25[16];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v25[-v12];
  v14 = a1;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000030, 0x80000000010F4100);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_1505F70 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v15 = qword_1583020;
  static Locale.current.getter((id)qword_1583020);
  v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v18 = v17;
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  PlaylistCovers.Cover.init(image:accessibilityLabel:)((uint64_t)v14, v16, v18, (uint64_t)&v26);
  v19 = v31;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  v23 = v30;
  *(_QWORD *)a2 = v26;
  *(_OWORD *)(a2 + 8) = v20;
  *(_OWORD *)(a2 + 24) = v21;
  *(_OWORD *)(a2 + 40) = v22;
  *(_OWORD *)(a2 + 56) = v23;
  *(_QWORD *)(a2 + 72) = v19;
  result = 0.0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_QWORD *)(a2 + 112) = 0;
  return result;
}

Swift::Int PlaylistCovers.CarouselItem.hashValue.getter()
{
  _OWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD v9[9];
  _OWORD v10[5];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  Hasher.init(_seed:)(v9);
  sub_EBE6E0(v0, v10);
  sub_EBE6E0(v10, &v18);
  if ((_QWORD)v18)
  {
    v1 = v19;
    if (v19)
    {
      v3 = v23;
      v2 = v24;
      v5 = v21;
      v4 = v22;
      v6 = v20;
      v7 = *((_QWORD *)&v18 + 1);
      v11 = BYTE8(v18);
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      Hasher._combine(_:)(1u);
      sub_8AC29C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CB614);
      sub_1CB694(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v9);
      sub_8AC29C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CBBB0);
      sub_1CBAB4(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(v9, 0x72656B636970, 0xE600000000000000);
  }
  return Hasher._finalize()();
}

Swift::Int sub_EBF06C()
{
  return PlaylistCovers.CarouselItem.hashValue.getter();
}

void sub_EBF0BC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    v4 = *(void **)(v1 + 16);
    if (v4)
    {
      v5 = *(void **)(v1 + 24);
      v6 = *(void **)(v1 + 32);
      v7 = *(void **)(v1 + 40);
      v8 = *(void **)(v1 + 48);
      v9 = *(void **)(v1 + 56);
      v12 = *(_QWORD *)(v1 + 64);
      v10 = *(_QWORD *)(v1 + 8);
      v11 = *(_QWORD *)(v1 + 72);
      Hasher._combine(_:)(1u);
      sub_1CB614(v3, v10, v4, v5, v6, v7, v8, v9);
      sub_1CB694(v10, v4, v5, v6, v7, v8, v9);
      PlaylistCovers.Cover.Representation.hash(into:)(a1);
      sub_1CBBB0(v3, v10, v4, v5, v6, v7, v8, v9, v12, v11);
      sub_1CBAB4(v10, v4, v5, v6, v7, v8, v9);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(a1, 0x72656B636970, 0xE600000000000000);
  }
}

Swift::Int sub_EBF250()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[9];
  char v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v6 = *(void **)(v0 + 40);
  v7 = *(void **)(v0 + 48);
  v8 = *(void **)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 64);
  Hasher.init(_seed:)(v12);
  if (v1)
  {
    if (v3)
    {
      v13 = v2;
      v14 = v3;
      v15 = v4;
      v16 = v5;
      v17 = v6;
      v18 = v7;
      v19 = v8;
      Hasher._combine(_:)(1u);
      sub_1CB614(v1, v2, v3, v4, v5, v6, v7, v8);
      sub_1CB694(v2, v3, v4, v5, v6, v7, v8);
      PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v12);
      sub_1CBBB0(v1, v2, v3, v4, v5, v6, v7, v8, v11, v9);
      sub_1CBAB4(v2, v3, v4, v5, v6, v7, v8);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(v12, 0x72656B636970, 0xE600000000000000);
  }
  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch(sub_EBF3D0, 0, 0);
}

uint64_t sub_EBF3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 24);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DED0);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DEE8);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_EBF4A0;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v2, v4, 0, 0, &unk_150DEE0, v3, v2);
}

uint64_t sub_EBF4A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_D1DDB0, 0, 0);
}

uint64_t sub_EBF4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[45] = a4;
  v5[46] = a5;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DEF8);
  v5[47] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[48] = v7;
  v5[49] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15085D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v8);
  v5[51] = swift_task_alloc(v8);
  return swift_task_switch(sub_EBF59C, 0, 0);
}

uint64_t sub_EBF59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_OWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 368);
    v5 = (__int128 *)(v1 + 32);
    v6 = type metadata accessor for TaskPriority(0);
    v7 = *(_QWORD *)(v6 - 8);
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v45 = v6;
    swift_bridgeObjectRetain();
    v42 = v4;
    v43 = v7;
    do
    {
      v46 = v2;
      v10 = *(_QWORD *)(v0 + 408);
      v11 = v4;
      v13 = *(_QWORD *)(v0 + 360);
      v12 = *(_QWORD *)(v0 + 368);
      v14 = *(uint64_t **)(v0 + 344);
      v16 = v5[1];
      v15 = v5[2];
      v17 = *v5;
      *(_QWORD *)(v0 + 264) = *((_QWORD *)v5 + 6);
      *(_OWORD *)(v0 + 232) = v16;
      *(_OWORD *)(v0 + 248) = v15;
      *v3 = v17;
      v44(v10, 1, 1, v45);
      v18 = swift_allocObject(&unk_13CD488, 104, 7);
      *(_QWORD *)(v18 + 16) = 0;
      v19 = (uint64_t *)(v18 + 16);
      *(_QWORD *)(v18 + 24) = 0;
      v20 = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v18 + 32) = *v3;
      *(_OWORD *)(v18 + 48) = v20;
      *(_OWORD *)(v18 + 64) = *(_OWORD *)(v0 + 248);
      *(_QWORD *)(v18 + 80) = *(_QWORD *)(v0 + 264);
      *(_QWORD *)(v18 + 88) = v13;
      v4 = v11;
      *(_QWORD *)(v18 + 96) = v12;
      v21 = *v14;
      sub_2B6E74(v0 + 216);
      sub_2B6E74(v0 + 216);
      swift_bridgeObjectRetain();
      if ((swift_taskGroup_addPending(v21, 0) & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 400);
        sub_5C238(*(_QWORD *)(v0 + 408), v22, &qword_15085D0);
        v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v22, 1, v45);
        v24 = *(_QWORD *)(v0 + 400);
        if ((_DWORD)v23 == 1)
        {
          sub_EC100C(*(_QWORD *)(v0 + 400));
          v25 = 0;
        }
        else
        {
          v26 = TaskPriority.rawValue.getter(v23);
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v24, v45);
          v25 = v26;
        }
        v8 = v46;
        v27 = *v19;
        if (*v19)
        {
          v28 = *(_QWORD *)(v18 + 24);
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v27);
          v30 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v28);
          v32 = v31;
          swift_unknownObjectRelease(v27);
        }
        else
        {
          v30 = 0;
          v32 = 0;
        }
        v33 = **(_QWORD **)(v0 + 344);
        v34 = swift_allocObject(&unk_13CD4B0, 32, 7);
        *(_QWORD *)(v34 + 16) = &unk_150DF08;
        *(_QWORD *)(v34 + 24) = v18;
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DED0);
        v36 = v32 | v30;
        if (v32 | v30)
        {
          v36 = v0 + 272;
          *(_QWORD *)(v0 + 272) = 0;
          *(_QWORD *)(v0 + 280) = 0;
          *(_QWORD *)(v0 + 288) = v30;
          *(_QWORD *)(v0 + 296) = v32;
        }
        *(_QWORD *)(v0 + 304) = 1;
        *(_QWORD *)(v0 + 312) = v36;
        *(_QWORD *)(v0 + 320) = v33;
        swift_task_create(v25 | 0x1100, v0 + 304, v35, &unk_150DF20, v34);
        swift_release();
        v4 = v42;
      }
      else
      {
        swift_release();
        v8 = v46;
      }
      v9 = *(_QWORD *)(v0 + 408);
      sub_2B6EC8(v0 + 216);
      sub_EC100C(v9);
      v5 = (__int128 *)((char *)v5 + 56);
      v2 = v8 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v37 = **(_QWORD **)(v0 + 344);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DED0);
  TaskGroup.makeAsyncIterator()(v37, v38);
  v39 = sub_EC104C();
  *(_QWORD *)(v0 + 416) = v39;
  v40 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 424) = v40;
  *v40 = v0;
  v40[1] = sub_EBF8BC;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, *(_QWORD *)(v0 + 376), v39);
}

uint64_t sub_EBF8BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 424));
  if (v0)
  {
    v4 = v2[48];
    v3 = v2[49];
    v5 = v2[47];
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
    v7 = (void (*)())UIScreen.Dimensions.size.getter;
  }
  else
  {
    v2[54] = 0;
    v2[55] = _swiftEmptyDictionarySingleton;
    v7 = sub_EBF954;
  }
  return swift_task_switch(v7, 0, 0);
}

void sub_EBF954()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  __int128 *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char **v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  _QWORD *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  id v86;
  void *v87;

  v1 = *(void **)(v0 + 104);
  if (!v1)
  {
    v31 = *(_QWORD *)(v0 + 440);
    v33 = *(_QWORD *)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 408);
    v34 = *(_QWORD *)(v0 + 392);
    v35 = *(_QWORD *)(v0 + 352);
    v36 = *(char ***)(v0 + 336);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 384) + 8))(v34, *(_QWORD *)(v0 + 376));
    sub_EC1098(*(_QWORD *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void **)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152));
    swift_bridgeObjectRetain();
    v37 = sub_EC1104(v35, v31);
    swift_bridgeObjectRelease_n(v31, 2);
    *v36 = v37;
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = *(void **)(v0 + 112);
  v3 = *(void **)(v0 + 120);
  v5 = *(void **)(v0 + 128);
  v4 = *(void **)(v0 + 136);
  v6 = *(void **)(v0 + 144);
  v87 = *(void **)(v0 + 152);
  v83 = *(_QWORD *)(v0 + 440);
  v71 = *(void **)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v0 + 160) = v72;
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 184) = v3;
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 200) = v4;
  *(_QWORD *)(v0 + 208) = v6;
  v7 = v1;
  v70 = v2;
  v8 = v2;
  v69 = v3;
  v9 = v3;
  v68 = v5;
  v10 = v5;
  v67 = v4;
  v11 = v4;
  v66 = v6;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  v19 = v87;
  v63 = v13;
  v64 = v14;
  v65 = v15;
  v20 = v16;
  v85 = v17;
  v86 = v18;
  PlaylistCovers.Cover.init(image:representation:)((uint64_t)v19, (unsigned __int8 *)(v0 + 160), v0 + 16);
  v73 = *(_QWORD *)(v0 + 16);
  v74 = *(_QWORD *)(v0 + 24);
  v75 = *(_QWORD *)(v0 + 32);
  v76 = *(_QWORD *)(v0 + 40);
  v77 = *(_QWORD *)(v0 + 48);
  v78 = *(_QWORD *)(v0 + 56);
  v79 = *(_QWORD *)(v0 + 64);
  v80 = *(_QWORD *)(v0 + 72);
  v81 = *(_QWORD *)(v0 + 80);
  v82 = *(_QWORD *)(v0 + 88);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v83);
  *(_QWORD *)(v0 + 328) = v83;
  v22 = (__int128 *)(v0 + 160);
  v24 = sub_DDFC7C(v0 + 160);
  v25 = *(_QWORD *)(v83 + 16);
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
    __break(1u);
  }
  else
  {
    v28 = v23;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 440) + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_DE18B0();
    }
    else
    {
      sub_DE0CB4(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_DDFC7C((uint64_t)v22);
      if ((v28 & 1) != (v30 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaylistCovers.Cover.Representation);
        return;
      }
      v24 = v29;
    }
    v84 = v19;
    v38 = *(_QWORD **)(v0 + 328);
    *(_QWORD *)(v0 + 448) = v38;
    if ((v28 & 1) != 0)
    {
      v39 = v38[7] + 120 * v24;
      v40 = *(_QWORD *)(v39 + 80);
      v41 = *(_QWORD *)(v39 + 88);
      v42 = *(_QWORD *)(v39 + 96);
      v43 = *(_QWORD *)(v39 + 104);
      v44 = *(_QWORD *)(v39 + 112);
      sub_1CBBB0(*(void **)v39, *(_QWORD *)(v39 + 8), *(void **)(v39 + 16), *(void **)(v39 + 24), *(void **)(v39 + 32), *(void **)(v39 + 40), *(void **)(v39 + 48), *(void **)(v39 + 56), *(_QWORD *)(v39 + 64), *(_QWORD *)(v39 + 72));
      sub_1CBB10(v40, v41, v42, v43, v44);
      *(_QWORD *)v39 = v73;
      *(_QWORD *)(v39 + 8) = v74;
      *(_QWORD *)(v39 + 16) = v75;
      *(_QWORD *)(v39 + 24) = v76;
      *(_QWORD *)(v39 + 32) = v77;
      *(_QWORD *)(v39 + 40) = v78;
      *(_QWORD *)(v39 + 48) = v79;
      *(_QWORD *)(v39 + 56) = v80;
      *(_QWORD *)(v39 + 64) = v81;
      *(_QWORD *)(v39 + 72) = v82;
      *(_OWORD *)(v39 + 80) = 0u;
      *(_OWORD *)(v39 + 96) = 0u;
      *(_QWORD *)(v39 + 112) = 0;
      v46 = v64;
      v45 = v65;
      v47 = v63;
LABEL_14:
      swift_bridgeObjectRelease();

      sub_EC1098(v72, v71, v70, v69, v68, v67, v66, v87);
      v62 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 456) = v62;
      *v62 = v0;
      v62[1] = sub_EBFE54;
      dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 416));
      return;
    }
    v38[(v24 >> 6) + 8] |= 1 << v24;
    v48 = v38[6] + 56 * v24;
    v49 = *v22;
    v50 = *(_OWORD *)(v0 + 176);
    v51 = *(_OWORD *)(v0 + 192);
    *(_QWORD *)(v48 + 48) = *(_QWORD *)(v0 + 208);
    *(_OWORD *)(v48 + 16) = v50;
    *(_OWORD *)(v48 + 32) = v51;
    *(_OWORD *)v48 = v49;
    v52 = v38[7] + 120 * v24;
    *(_QWORD *)v52 = v73;
    *(_QWORD *)(v52 + 8) = v74;
    *(_QWORD *)(v52 + 16) = v75;
    *(_QWORD *)(v52 + 24) = v76;
    *(_QWORD *)(v52 + 32) = v77;
    *(_QWORD *)(v52 + 40) = v78;
    *(_QWORD *)(v52 + 48) = v79;
    *(_QWORD *)(v52 + 56) = v80;
    *(_QWORD *)(v52 + 64) = v81;
    *(_QWORD *)(v52 + 72) = v82;
    *(_QWORD *)(v52 + 112) = 0;
    *(_OWORD *)(v52 + 80) = 0u;
    *(_OWORD *)(v52 + 96) = 0u;
    v53 = v38[2];
    v54 = __OFADD__(v53, 1);
    v55 = v53 + 1;
    if (!v54)
    {
      v38[2] = v55;
      v47 = v63;
      v56 = v63;
      v46 = v64;
      v57 = v64;
      v45 = v65;
      v58 = v65;
      v59 = v20;
      v60 = v85;
      v61 = v86;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_EBFE54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 456));
  v3 = v2[56];
  if (v0)
  {
    v5 = v2[48];
    v4 = v2[49];
    v6 = v2[47];
    v7 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
    v8 = (uint64_t (*)())UIScreen.Dimensions.size.getter;
  }
  else
  {
    v2[54] = 0;
    v2[55] = v3;
    v8 = sub_EBF954;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_EBFEE0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_150DEDC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_C3150;
  return sub_EBF4FC(a1, a2, v6, v7, v8);
}

unint64_t sub_EBFF60()
{
  unint64_t result;

  result = qword_150DEF0;
  if (!qword_150DEF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.CarouselItem, &type metadata for PlaylistCovers.CarouselItem);
    atomic_store(result, (unint64_t *)&qword_150DEF0);
  }
  return result;
}

double _s12CarouselItemVwxx(uint64_t a1)
{
  void *v2;
  double result;
  uint64_t v4;

  if (*(_QWORD *)a1)
  {

    v2 = *(void **)(a1 + 16);
    if (v2)
    {

    }
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  }
  v4 = *(_QWORD *)(a1 + 80);
  if (v4)
  {
    swift_release(v4);
    swift_release(*(_QWORD *)(a1 + 88));
    swift_release(*(_QWORD *)(a1 + 96));
    swift_release(*(_QWORD *)(a1 + 104));
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 112)).n128_u64[0];
  }
  return result;
}

uint64_t _s12CarouselItemVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = v4;
    v5 = (_OWORD *)(a1 + 8);
    v6 = *(void **)(a2 + 16);
    v7 = v4;
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v8 = *(void **)(a2 + 24);
      v9 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      v10 = *(void **)(a2 + 40);
      v11 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      v12 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      v13 = v6;
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 24);
      *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  v23 = *(_QWORD *)(a2 + 80);
  if (v23)
  {
    v24 = *(_QWORD *)(a2 + 88);
    v25 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v23;
    *(_QWORD *)(a1 + 88) = v24;
    v27 = *(_QWORD *)(a2 + 104);
    v26 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v25;
    *(_QWORD *)(a1 + 104) = v27;
    *(_QWORD *)(a1 + 112) = v26;
    swift_retain(v23);
    swift_retain(v24);
    swift_retain(v25);
    swift_retain(v27);
    swift_retain(v26);
  }
  else
  {
    v28 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v28;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  return a1;
}

uint64_t _s12CarouselItemVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _OWORD *v69;
  uint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (_OWORD *)(a1 + 8);
      v8 = (__int128 *)(a2 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          v11 = *(void **)(a2 + 16);
          *(_QWORD *)(a1 + 16) = v11;
          v12 = v11;

          v13 = *(void **)(a2 + 24);
          v14 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v13;
          v15 = v13;

          v16 = *(void **)(a2 + 32);
          v17 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;
          v18 = v16;

          v19 = *(void **)(a2 + 40);
          v20 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v19;
          v21 = v19;

          v22 = *(void **)(a2 + 48);
          v23 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v22;
          v24 = v22;

          v25 = *(void **)(a2 + 56);
          v26 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v25;
          v27 = v25;

        }
        else
        {
          sub_B19120((id *)(a1 + 8));
          v61 = *(_OWORD *)(a2 + 24);
          v60 = *(_OWORD *)(a2 + 40);
          v62 = *v8;
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v61;
          *(_OWORD *)(a1 + 40) = v60;
          *v7 = v62;
        }
      }
      else if (v10)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v45 = *(void **)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v45;
        v46 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v46;
        v47 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v47;
        v48 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v48;
        v49 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v49;
        v50 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v50;
        v51 = v45;
        v52 = v46;
        v53 = v47;
        v54 = v48;
        v55 = v49;
        v56 = v50;
      }
      else
      {
        v66 = *v8;
        v67 = *(_OWORD *)(a2 + 24);
        v68 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v67;
        *(_OWORD *)(a1 + 40) = v68;
        *v7 = v66;
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_EC04FC(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v42 = *(_OWORD *)(a2 + 64);
      v44 = *(_OWORD *)(a2 + 16);
      v43 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v42;
      *(_OWORD *)(a1 + 16) = v44;
      *(_OWORD *)(a1 + 32) = v43;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = v5;
    v28 = *(_QWORD *)(a2 + 16);
    v29 = v5;
    if (v28)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v30 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v30;
      v31 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v31;
      v32 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v32;
      v33 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v33;
      v34 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v34;
      v35 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v35;
      v36 = v30;
      v37 = v31;
      v38 = v32;
      v39 = v33;
      v40 = v34;
      v41 = v35;
    }
    else
    {
      v63 = *(_OWORD *)(a2 + 8);
      v64 = *(_OWORD *)(a2 + 24);
      v65 = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v64;
      *(_OWORD *)(a1 + 40) = v65;
      *(_OWORD *)(a1 + 8) = v63;
    }
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v57 = *(_OWORD *)(a2 + 16);
    v58 = *(_OWORD *)(a2 + 32);
    v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v59;
    *(_OWORD *)(a1 + 16) = v57;
    *(_OWORD *)(a1 + 32) = v58;
  }
  v69 = (_OWORD *)(a1 + 80);
  v71 = (_OWORD *)(a2 + 80);
  v70 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v70)
    {
      *(_QWORD *)(a1 + 80) = v70;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_EC0530((_QWORD *)(a1 + 80));
      v72 = *(_QWORD *)(a2 + 112);
      v73 = *(_OWORD *)(a2 + 96);
      *v69 = *v71;
      *(_OWORD *)(a1 + 96) = v73;
      *(_QWORD *)(a1 + 112) = v72;
    }
  }
  else if (v70)
  {
    *(_QWORD *)(a1 + 80) = v70;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v74 = *v71;
    v75 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *v69 = v74;
    *(_OWORD *)(a1 + 96) = v75;
  }
  return a1;
}

uint64_t sub_EC04FC(uint64_t a1)
{
  destroy for PlaylistCovers.Cover(a1);
  return a1;
}

_QWORD *sub_EC0530(_QWORD *a1)
{
  destroy for PageIndicator(a1);
  return a1;
}

__n128 __swift_memcpy120_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s12CarouselItemVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_7;
  if (!*(_QWORD *)a2)
  {
    sub_EC04FC(a1);
LABEL_7:
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_B19120((id *)(a1 + 8));
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_10:
  v15 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  v16 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
LABEL_15:
    v17 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v17;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    return a1;
  }
  if (!v16)
  {
    sub_EC0530((_QWORD *)(a1 + 80));
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 80) = v16;
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t _s12CarouselItemVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 120))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s12CarouselItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem()
{
  return &type metadata for PlaylistCovers.CarouselItem;
}

id *_s12CarouselItemV16CarouselItemTypeOwxx(id *result)
{
  id *v1;
  id v2;

  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    v1 = result;

    v2 = v1[2];
    if (v2)
    {

    }
    return (id *)swift_bridgeObjectRelease(v1[9]);
  }
  return result;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  else
  {
    *(_QWORD *)a1 = v4;
    v5 = (_OWORD *)(a1 + 8);
    v6 = *(void **)(a2 + 16);
    v7 = v4;
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v8 = *(void **)(a2 + 24);
      v9 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      v10 = *(void **)(a2 + 40);
      v11 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      v12 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      v13 = v6;
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 24);
      *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (_OWORD *)(a1 + 8);
      v8 = (__int128 *)(a2 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          v11 = *(void **)(a2 + 16);
          *(_QWORD *)(a1 + 16) = v11;
          v12 = v11;

          v13 = *(void **)(a2 + 24);
          v14 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v13;
          v15 = v13;

          v16 = *(void **)(a2 + 32);
          v17 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;
          v18 = v16;

          v19 = *(void **)(a2 + 40);
          v20 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v19;
          v21 = v19;

          v22 = *(void **)(a2 + 48);
          v23 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v22;
          v24 = v22;

          v25 = *(void **)(a2 + 56);
          v26 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v25;
          v27 = v25;

        }
        else
        {
          sub_B19120((id *)(a1 + 8));
          v62 = *(_OWORD *)(a2 + 24);
          v61 = *(_OWORD *)(a2 + 40);
          v63 = *v8;
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v62;
          *(_OWORD *)(a1 + 40) = v61;
          *v7 = v63;
        }
      }
      else if (v10)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v46 = *(void **)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v46;
        v47 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v47;
        v48 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v48;
        v49 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v49;
        v50 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v50;
        v51 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v51;
        v52 = v46;
        v53 = v47;
        v54 = v48;
        v55 = v49;
        v56 = v50;
        v57 = v51;
      }
      else
      {
        v64 = *v8;
        v65 = *(_OWORD *)(a2 + 24);
        v66 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v65;
        *(_OWORD *)(a1 + 40) = v66;
        *v7 = v64;
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }

    v42 = *(void **)(a1 + 16);
    if (v42)
    {

    }
    swift_bridgeObjectRelease();
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v43 = *(_OWORD *)(a2 + 16);
    v44 = *(_OWORD *)(a2 + 32);
    v45 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v45;
    *(_OWORD *)(a1 + 16) = v43;
    *(_OWORD *)(a1 + 32) = v44;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
    goto LABEL_12;
  *(_QWORD *)a1 = v5;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = v5;
  if (v28)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v30 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v30;
    v31 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v31;
    v32 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v32;
    v33 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v33;
    v34 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v34;
    v35 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v35;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
    v40 = v34;
    v41 = v35;
  }
  else
  {
    v58 = *(_OWORD *)(a2 + 8);
    v59 = *(_OWORD *)(a2 + 24);
    v60 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v59;
    *(_OWORD *)(a1 + 40) = v60;
    *(_OWORD *)(a1 + 8) = v58;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
  {
    if (*(_QWORD *)a2 >= 0xFFFFFFFFuLL)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;

      v5 = *(void **)(a1 + 16);
      if (v5)
      {
        v6 = *(_QWORD *)(a2 + 16);
        if (v6)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = v6;

          v7 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

          v8 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

          v9 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

          v10 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

          v11 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_12:
          v16 = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = v16;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_B19120((id *)(a1 + 8));
      }
      v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v15;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      goto LABEL_12;
    }

    v12 = *(void **)(a1 + 16);
    if (v12)
    {

    }
    swift_bridgeObjectRelease();
  }
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_EC0E14(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem.CarouselItemType()
{
  return &type metadata for PlaylistCovers.CarouselItem.CarouselItemType;
}

uint64_t sub_EC0E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_EC0E74, 0, 0);
}

uint64_t sub_EC0E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 *v8;
  CGFloat v9;
  CGFloat v10;
  void *v11;
  char **v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_OWORD *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)v4 = v5;
  sub_2B6E74(v3);
  v8 = PlaylistCovers.Specs.coverSize.unsafeMutableAddressor();
  v9 = *(double *)v8;
  v10 = *((double *)v8 + 1);
  v11 = *(void **)(v3 + 8);
  v12 = *(char ***)(v3 + 48);
  sub_EC13BC();
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  static PlaylistCovers.playlistCoverImage(size:backgroundImage:textColor:title:graphicsFormat:)(v11, v12, v1, v2, v13, v9, v10);
  v15 = v14;

  *(_QWORD *)(v4 + 56) = v15;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_EC0F3C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_EC0F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 32;
  v6 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v7 = (_QWORD *)swift_task_alloc(dword_150DF04);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_50F8C;
  v7[4] = v6;
  v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  return swift_task_switch(sub_EC0E74, 0, 0);
}

uint64_t sub_EC100C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_EC104C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DF10;
  if (!qword_150DF10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150DEF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for TaskGroup<A>.Iterator, v1);
    atomic_store(result, (unint64_t *)&qword_150DF10);
  }
  return result;
}

void sub_EC1098(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {

  }
}

char *sub_EC1104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  _OWORD v39[3];
  uint64_t v40;
  void *v41;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)_swiftEmptyArrayStorage;
  v4 = a1;
  v5 = (char *)_swiftEmptyArrayStorage;
  v6 = 32;
  v27 = swift_bridgeObjectRetain();
  do
  {
    v7 = *(_OWORD *)(v4 + v6 + 16);
    v39[0] = *(_OWORD *)(v4 + v6);
    v39[1] = v7;
    v39[2] = *(_OWORD *)(v4 + v6 + 32);
    v40 = *(_QWORD *)(v4 + v6 + 48);
    if (*(_QWORD *)(a2 + 16))
    {
      sub_2B6E74((uint64_t)v39);
      sub_2B6E74((uint64_t)v39);
      v8 = sub_DDFC7C((uint64_t)v39);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 120 * v8;
        v11 = *(_QWORD *)(v10 + 8);
        v12 = *(void **)(v10 + 16);
        v13 = *(void **)(v10 + 24);
        v14 = *(void **)(v10 + 32);
        v15 = *(void **)(v10 + 40);
        v16 = *(void **)(v10 + 48);
        v17 = *(void **)(v10 + 56);
        v18 = *(_QWORD *)(v10 + 80);
        v19 = *(_QWORD *)(v10 + 88);
        v20 = *(_QWORD *)(v10 + 96);
        v21 = *(_QWORD *)(v10 + 104);
        v22 = *(_QWORD *)(v10 + 112);
        v33 = *(_QWORD *)(v10 + 72);
        v34 = *(_QWORD *)(v10 + 64);
        v41 = *(void **)v10;
        v37 = v15;
        v38 = v11;
        v29 = v13;
        v30 = v12;
        v28 = v14;
        v35 = v17;
        v36 = v16;
        sub_1CB614(v41, v11, v12, v13, v14, v15, v16, v17);
        v31 = v19;
        v32 = v18;
        sub_1CB6F0(v18, v19, v20, v21, v22);
        sub_2B6EC8((uint64_t)v39);
        sub_2B6EC8((uint64_t)v39);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_DDE610(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v24 = *((_QWORD *)v5 + 2);
        v23 = *((_QWORD *)v5 + 3);
        if (v24 >= v23 >> 1)
          v5 = sub_DDE610((char *)(v23 > 1), v24 + 1, 1, v5);
        *((_QWORD *)v5 + 2) = v24 + 1;
        v25 = &v5[120 * v24];
        *((_QWORD *)v25 + 4) = v41;
        *((_QWORD *)v25 + 5) = v38;
        *((_QWORD *)v25 + 6) = v30;
        *((_QWORD *)v25 + 7) = v29;
        v4 = v27;
        *((_QWORD *)v25 + 8) = v28;
        *((_QWORD *)v25 + 9) = v37;
        *((_QWORD *)v25 + 10) = v36;
        *((_QWORD *)v25 + 11) = v35;
        *((_QWORD *)v25 + 12) = v34;
        *((_QWORD *)v25 + 13) = v33;
        *((_QWORD *)v25 + 14) = v32;
        *((_QWORD *)v25 + 15) = v31;
        *((_QWORD *)v25 + 16) = v20;
        *((_QWORD *)v25 + 17) = v21;
        *((_QWORD *)v25 + 18) = v22;
      }
      else
      {
        sub_2B6EC8((uint64_t)v39);
        sub_2B6EC8((uint64_t)v39);
      }
    }
    v6 += 56;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_EC1328()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_EC134C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_150DF1C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_150DF18 + dword_150DF18))(a1, v4);
}

unint64_t sub_EC13BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150DF28;
  if (!qword_150DF28)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_150DF28);
  }
  return result;
}

id ProgressiveBlur.makeUIView(context:)(double a1, uint64_t a2, char a3)
{
  objc_class *v5;
  _BYTE *v6;
  void *v7;
  void *v8;
  id v9;
  objc_super v11;

  v5 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  v6 = objc_allocWithZone(v5);
  *(double *)&v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a1;
  v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a3;
  sub_EC1D24(a3, 0.0, 0.0, 1.0, 1.0, a1);
  v8 = v7;
  v11.receiver = v6;
  v11.super_class = v5;
  v9 = objc_msgSendSuper2(&v11, "initWithEffect:", v7);

  return v9;
}

id ProgressiveBlurView.__allocating_init(blurRadius:edge:)(char a1, double a2)
{
  objc_class *v2;
  _BYTE *v5;
  void *v6;
  void *v7;
  id v8;
  objc_super v10;

  v5 = objc_allocWithZone(v2);
  *(double *)&v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  sub_EC1D24(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v7 = v6;
  v10.receiver = v5;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, "initWithEffect:", v6);

  return v8;
}

void ProgressiveBlur.updateUIView(_:context:)(_BYTE *a1, double a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;

  v5 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius;
  *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge;
  a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a4;
  objc_msgSend(a1, "bounds");
  sub_EC1D24(a1[v6], v7, v8, v9, v10, *(double *)&a1[v5]);
  v12 = v11;
  objc_msgSend(a1, "setEffect:", v11);

}

id sub_EC15B4()
{
  uint64_t v0;
  double v1;
  char v2;
  objc_class *v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  objc_super v9;

  v1 = *(double *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  v4 = objc_allocWithZone(v3);
  *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = v1;
  v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = v2;
  sub_EC1D24(v2, 0.0, 0.0, 1.0, 1.0, v1);
  v6 = v5;
  v9.receiver = v4;
  v9.super_class = v3;
  v7 = objc_msgSendSuper2(&v9, "initWithEffect:", v5);

  return v7;
}

void sub_EC1658(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius) = *(_QWORD *)v1;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge) = v2;
  ProgressiveBlurView.updateEffect()();
}

uint64_t sub_EC1698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_EC2140();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_EC16E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_EC2140();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_EC1738(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_EC2140();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_EC175C(char a1)
{
  __asm { BR              X10 }
}

double sub_EC1788(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;

  v2 = a2();
  swift_beginAccess(v2, &v4, 0, 0);
  return *(double *)v2;
}

id ProgressiveBlurView.init(blurRadius:edge:)(char a1, double a2)
{
  _BYTE *v2;
  void *v3;
  void *v4;
  id v5;
  objc_super v7;

  *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  sub_EC1D24(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v4 = v3;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  v5 = objc_msgSendSuper2(&v7, "initWithEffect:", v4);

  return v5;
}

uint64_t type metadata accessor for ProgressiveBlurView()
{
  return objc_opt_self(_TtC11MusicCoreUI19ProgressiveBlurView);
}

Swift::Void __swiftcall ProgressiveBlurView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  sub_EC1D24(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  v6 = v5;
  objc_msgSend(v0, "setEffect:", v5);

}

Swift::Void __swiftcall ProgressiveBlurView.updateEffect()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;

  objc_msgSend(v0, "bounds");
  sub_EC1D24(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  v6 = v5;
  objc_msgSend(v0, "setEffect:", v5);

}

void sub_EC19D4(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  Class isa;
  id v25;

  v12 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v12, "setBounds:", a3, a4, a5, a6);
  sub_EC175C(a2);
  objc_msgSend(v12, "setStartPoint:");
  sub_EC175C(a2);
  objc_msgSend(v12, "setEndPoint:");
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070C0);
  v14 = swift_allocObject(v13, 96, 7);
  *(_OWORD *)(v14 + 16) = xmmword_105F890;
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "whiteColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.3);

  v18 = objc_msgSend(v17, "CGColor");
  _s3__C7CGColorCMa_1(0);
  v20 = v19;
  *(_QWORD *)(v14 + 56) = v19;
  *(_QWORD *)(v14 + 32) = v18;
  v21 = objc_msgSend(v15, "whiteColor");
  v22 = objc_msgSend(v21, "colorWithAlphaComponent:", 0.0);

  v23 = objc_msgSend(v22, "CGColor");
  *(_QWORD *)(v14 + 88) = v20;
  *(_QWORD *)(v14 + 64) = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "setColors:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  v25 = objc_msgSend(a1, "CGContext");
  objc_msgSend(v12, "renderInContext:", v25);

}

id ProgressiveBlurView.__allocating_init(effect:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithEffect:", a1);

  return v3;
}

void ProgressiveBlurView.init(effect:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ProgressiveBlurView", 31, "init(effect:)", 13, 0);
  __break(1u);
}

id ProgressiveBlurView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_EC1D24(char a1, double a2, double a3, double a4, double a5, double a6)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD v20[5];
  uint64_t v21;

  if (!CGRectIsEmpty(*(CGRect *)&a2))
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
    objc_msgSend(v12, "setScale:", 1.0);
    objc_msgSend(v12, "setPreferredRange:", 2);
    v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithBounds:format:", v12, a2, a3, a4, a5);
    v14 = swift_allocObject(&unk_13CD628, 49, 7);
    *(double *)(v14 + 16) = a2;
    *(double *)(v14 + 24) = a3;
    *(double *)(v14 + 32) = a4;
    *(double *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = a1;
    v15 = swift_allocObject(&unk_13CD650, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_EC2194;
    *(_QWORD *)(v15 + 24) = v14;
    v20[4] = sub_103BD8;
    v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_23E9F0;
    v20[3] = &block_descriptor_356;
    v16 = _Block_copy(v20);
    v17 = v21;
    swift_retain(v15);
    v18 = objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

    _Block_release(v16);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v15, "", 128, 99, 78, 1, v19);
    swift_release(v14);
    swift_release(v15);
    if ((v12 & 1) != 0)
    {
      __break(1u);
    }
    else if (v18)
    {
      objc_msgSend((id)objc_opt_self(UIBlurEffect), "_effectWithVariableBlurRadius:imageMask:scale:", v18, a6, 1.0);

    }
  }
}

unint64_t sub_EC1F50()
{
  unint64_t result;

  result = qword_150DF40;
  if (!qword_150DF40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlur, &type metadata for ProgressiveBlur);
    atomic_store(result, (unint64_t *)&qword_150DF40);
  }
  return result;
}

unint64_t sub_EC1F98()
{
  unint64_t result;

  result = qword_150DF48;
  if (!qword_150DF48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlurView.Edge, &type metadata for ProgressiveBlurView.Edge);
    atomic_store(result, (unint64_t *)&qword_150DF48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlur(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlur()
{
  return &type metadata for ProgressiveBlur;
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlurView.Edge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_EC20C0 + 4 * byte_10B3909[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_EC20F4 + 4 * byte_10B3904[v4]))();
}

uint64_t sub_EC20F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_EC20FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xEC2104);
  return result;
}

uint64_t sub_EC2110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xEC2118);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_EC211C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_EC2124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlurView.Edge()
{
  return &type metadata for ProgressiveBlurView.Edge;
}

unint64_t sub_EC2140()
{
  unint64_t result;

  result = qword_150DF78;
  if (!qword_150DF78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlur, &type metadata for ProgressiveBlur);
    atomic_store(result, (unint64_t *)&qword_150DF78);
  }
  return result;
}

uint64_t sub_EC2184()
{
  uint64_t v0;

  return swift_deallocObject(v0, 49, 7);
}

void sub_EC2194(void *a1)
{
  uint64_t v1;

  sub_EC19D4(a1, *(_BYTE *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_EC21A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_350(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_350(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *QRCodeOverlayViewController.__allocating_init(qrCode:title:subtitle:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(a1);
}

void sub_EC222C()
{
  qword_1583F28 = Int.seconds.getter(10);
}

void sub_EC224C()
{
  qword_1583F30 = Int.seconds.getter(20);
}

void sub_EC226C()
{
  qword_1583F38 = Int.seconds.getter(22);
}

void sub_EC228C()
{
  qword_1583F40 = Int.seconds.getter(350);
}

void sub_EC22AC()
{
  qword_1583F48 = Int.seconds.getter(90);
}

void sub_EC22CC()
{
  qword_1583F50 = Int.seconds.getter(33);
}

void sub_EC22EC()
{
  qword_1583F58 = Int.seconds.getter(4);
}

void sub_EC230C()
{
  qword_1583F60 = Int.seconds.getter(10);
}

id sub_EC232C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 18);
  qword_1583F68 = (uint64_t)result;
  return result;
}

char *QRCodeOverlayViewController.init(qrCode:title:subtitle:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  NSString v32;
  id v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t ObjectType;
  objc_super v41;
  _QWORD v42[5];
  char v43[24];
  uint64_t v44;

  ObjectType = swift_getObjectType();
  v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  v4 = objc_allocWithZone((Class)UIVisualEffectView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v7 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
  *(_QWORD *)&v5[v8] = v11;
  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_15063B0 != -1)
    swift_once(&qword_15063B0, sub_EC232C);
  v14 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", qword_1583F68);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v14);

  *(_QWORD *)&v5[v13] = v15;
  v16 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(_QWORD *)&v5[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  v17 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(_QWORD *)&v5[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;
  if (a1[4] == 76)
  {
    QRCode.with(errorCorrectionLevel:)(77, (uint64_t)v42);
    v20 = v42[0];
    v19 = v42[1];
    v22 = v42[2];
    v21 = v42[3];
    v23 = v42[4];
    sub_EC52A0((uint64_t)v42, (uint64_t)v43);
    if (!v44)
    {
      v22 = a1[2];
      v21 = a1[3];
      v20 = *a1;
      v19 = a1[1];
      sub_E86584(a1);
      v23 = 76;
    }
    v24 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    *(_QWORD *)v24 = v20;
    *((_QWORD *)v24 + 1) = v19;
    *((_QWORD *)v24 + 2) = v22;
    *((_QWORD *)v24 + 3) = v21;
    *((_QWORD *)v24 + 4) = v23;
  }
  else
  {
    v25 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v26 = a1[4];
    v27 = *((_OWORD *)a1 + 1);
    *(_OWORD *)v25 = *(_OWORD *)a1;
    *((_OWORD *)v25 + 1) = v27;
    *((_QWORD *)v25 + 4) = v26;
    sub_E86584(a1);
  }

  v41.receiver = v5;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  v28 = (char *)objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v29 = *(void **)&v28[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  v30 = v28;
  v31 = v29;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setText:", v32, swift_bridgeObjectRelease().n128_f64[0]);

  v33 = *(id *)&v30[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setText:", v34, swift_bridgeObjectRelease().n128_f64[0]);

  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085E0);
  v36 = swift_allocObject(v35, 48, 7);
  *(_OWORD *)(v36 + 16) = xmmword_105B360;
  *(_QWORD *)(v36 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v36 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v37 = v30;
  v38 = UIViewController.registerForTraitChanges<A>(_:handler:)(v36, sub_EC5228, 0, ObjectType);
  sub_EC5270(a1);
  swift_unknownObjectRelease(v38);
  swift_bridgeObjectRelease();

  return v37;
}

uint64_t type metadata accessor for QRCodeOverlayViewController.ContainerView()
{
  return objc_opt_self(_TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  Class isa;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  objc_super v41;
  UIAction_optional v42;
  UIMenu_optional v43;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "clearColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v1, "navigationItem");
  sub_4E684(0, &qword_150DFE0, UIBarButtonItem_ptr);
  sub_4E684(0, &qword_15087A8, UIAction_ptr);
  v7 = swift_allocObject(&unk_13CD788, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v42.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_EC530C, v7);
  v42.is_nil = 0;
  isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v42, v43).super.super.isa;
  objc_msgSend(v6, "setLeftBarButtonItem:", isa);

  v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "dismissAnimated");
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  v39 = v9;
  objc_msgSend(v10, "addGestureRecognizer:", v9);

  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  v13 = *(char **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  v40 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  v14 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 24];
  v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v16 = *(void **)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(_QWORD *)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = v14;
  v17 = v14;
  v18 = v13;

  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "setImage:", *(_QWORD *)&v13[v15]);
  v38 = v12;
  objc_msgSend(*(id *)&v1[v12], "setAlpha:", 0.0);
  v37 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setContentMode:", 1);
  v19 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  sub_4E684(0, (unint64_t *)&qword_1506538, UIFont_ptr);
  v21 = v20;
  v22 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightBold);
  objc_msgSend(v21, "setFont:", v22);

  v23 = *(id *)&v1[v19];
  v24 = objc_msgSend(v4, "whiteColor");
  objc_msgSend(v23, "setTextColor:", v24);

  objc_msgSend(*(id *)&v1[v19], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v1[v19], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v1[v19], "setAdjustsFontForContentSizeCategory:", 1);
  v25 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  v26 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  v27 = (void *)objc_opt_self(UIFont);
  v28 = v26;
  v29 = objc_msgSend(v27, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v28, "setFont:", v29);

  objc_msgSend(*(id *)&v1[v25], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v1[v25], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v25], "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v1[v25], "setAdjustsFontForContentSizeCategory:", 1);
  v30 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  v31 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer];
  v32 = objc_msgSend(v4, "blackColor");
  v33 = objc_msgSend(v32, "CGColor");

  objc_msgSend(v31, "setFillColor:", v33);
  objc_msgSend(*(id *)&v1[v30], "setFillRule:", kCAFillRuleNonZero);
  objc_msgSend(*(id *)&v1[v30], "setCompositingFilter:", kCAFilterDestOut);
  if (*((_QWORD *)v40 + 4) != 76)
  {
    v34 = objc_msgSend(*(id *)&v1[v38], "layer");
    objc_msgSend(v34, "addSublayer:", *(_QWORD *)&v1[v30]);

    objc_msgSend(*(id *)&v1[v38], "addSubview:", *(_QWORD *)&v1[v37]);
  }
  v35 = objc_msgSend(v1, "view");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_EC2D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    QRCodeOverlayViewController.dismissAnimated()();

  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  objc_super v39;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E760);
  __chkstk_darwin();
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for QRCodeOverlayViewController();
  v39.receiver = v2;
  v39.super_class = v6;
  objc_msgSendSuper2(&v39, "viewIsAppearing:", a1);
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = (char *)objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 != (_BYTE *)&dword_0 + 3)
  {
    v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v21 = (void *)objc_opt_self(UIColor);
    v22 = objc_msgSend(v21, "whiteColor");
    objc_msgSend(v20, "setBackgroundColor:", v22);

    v23.n128_u64[0] = 12.0;
    static UIView.Corner.value(_:continuous:)(1, v23);
    v24 = type metadata accessor for UIView.Corner(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 0, 1, v24);
    UIView.corner.setter(v5);
    objc_msgSend(v20, "setClipsToBounds:", 1);
    objc_msgSend(v20, "setAlpha:", 0.0);
    v25 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    objc_msgSend(v20, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView]);
    v26 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = v20;
    v27 = v20;

    v28 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView], "contentView");
    v29 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(v28, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView]);

    v30 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    objc_msgSend(*(id *)&v2[v29], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView]);
    objc_msgSend(*(id *)&v2[v30], "addSubview:", v27);
    objc_msgSend(*(id *)&v2[v30], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel]);
    v31 = *(void **)&v2[v30];
    v32 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    objc_msgSend(v31, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView]);
    v33 = objc_msgSend(*(id *)&v2[v32], "contentView");
    objc_msgSend(v33, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel]);

    v34 = (char *)*(id *)&v2[v25];
    v35 = objc_msgSend(v21, "blackColor");
    v36 = *(void **)&v34[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(_QWORD *)&v34[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v35;
    v37 = v35;

    sub_EC4C70();
    v38 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
    v19 = objc_msgSend(v21, "blackColor");
    objc_msgSend(v38, "setTintColor:", v19);

    goto LABEL_5;
  }
  v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  v10 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "whiteColor");
  v14 = *(void **)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  *(_QWORD *)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
  v15 = v13;

  sub_EC4C70();
  v16 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
  v17 = objc_msgSend(v11, "whiteColor");
  objc_msgSend(v16, "setTintColor:", v17);

  v18 = objc_msgSend(v2, "view");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "addSubview:", *(_QWORD *)&v2[v9]);
LABEL_5:

    return;
  }
  __break(1u);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v15[6];
  objc_super v16;

  v2 = v1;
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager])
  {
LABEL_2:
    v5 = (void *)objc_opt_self(UIView);
    v6 = swift_allocObject(&unk_13CD7B0, 24, 7);
    *(_QWORD *)(v6 + 16) = v2;
    v15[4] = sub_EC5314;
    v15[5] = v6;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_42D124;
    v15[3] = &block_descriptor_357;
    v7 = _Block_copy(v15);
    v8 = v2;
    swift_release();
    objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.25);
    _Block_release(v7);
    return;
  }
  v9 = objc_msgSend(v2, "view");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "window");

    if (v11)
    {
      v12 = objc_msgSend(v11, "windowScene");

      if (v12)
      {
        v13 = type metadata accessor for BrightnessManager();
        swift_allocObject(v13, 64, 7);
        v14 = v12;
        *(_QWORD *)&v2[v4] = BrightnessManager.init(windowScene:)(v14);

        swift_release();
      }
    }
    goto LABEL_2;
  }
  __break(1u);
}

double sub_EC33E8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  double result;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel), "setAlpha:", 1.0);
  v2 = qword_15063B0;
  v3 = *(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView);
  if (v2 != -1)
    swift_once(&qword_15063B0, sub_EC232C);
  objc_msgSend(v3, "setEffect:", qword_1583F68);

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.increaseBrightnessIfNeeded()();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  __int128 v16;
  double v17;
  double Width;
  double Height;
  double v20;
  double v21;
  id v22;
  double v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  __int128 v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  double v44;
  double v45;
  double v46;
  id v47;
  void *v48;
  double v49;
  double v50;
  id v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  double v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  CGFloat v89;
  double v90;
  double v91;
  double v92;
  CGFloat v93;
  double v94;
  double v95;
  uint64_t v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  void *v108;
  double v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  double MinY;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  CGFloat v123;
  CGFloat v124;
  uint64_t v125;
  id v126;
  double v127;
  id v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  void *v136;
  id v137;
  id v138;
  void *v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  char *v148;
  uint64_t v149;
  double v150;
  id v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  uint64_t v159;
  CGFloat b;
  CGFloat a;
  CGFloat c;
  CGFloat d;
  CGFloat ty;
  CGFloat tx;
  __int128 v166;
  uint64_t v167;
  uint64_t inited;
  void *v169;
  double v170;
  CGFloat v171;
  double v172;
  CGFloat v173;
  double v174;
  CGFloat v175;
  double v176;
  CGFloat v177;
  CGFloat v178;
  CGFloat v179;
  CGFloat v180;
  CGFloat v181;
  CGMutablePathRef v182;
  uint64_t v183;
  void *v184;
  void *v185;
  id v186;
  double v187;
  double v188;
  double v189;
  double v190;
  double v191;
  double v192;
  double v193;
  CGRect recta;
  CGAffineTransform v195;
  objc_super v196;
  _OWORD v197[2];
  uint64_t v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;
  CGPoint v202;
  CGPoint v203;
  CGPoint v204;
  CGPoint v205;
  CGPoint v206;
  CGPoint v207;
  CGPoint v208;
  CGPoint v209;
  CGPoint v210;
  CGPoint v211;
  CGPoint v212;
  CGPoint v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;
  CGRect v223;

  v1 = v0;
  v196.receiver = v0;
  v196.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v196, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = (char *)objc_msgSend(v2, "userInterfaceIdiom");

  v4 = objc_msgSend(v1, "view");
  v5 = v4;
  if (v3 == (_BYTE *)&dword_0 + 3)
  {
    if (!v4)
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v6 = objc_msgSend(v4, "safeAreaLayoutGuide");

    objc_msgSend(v6, "layoutFrame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    if (qword_1506370 != -1)
      swift_once(&qword_1506370, sub_EC222C);
    v15 = *(double *)&qword_1583F28;
    v16 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    v199 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v200 = v16;
    v201 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_E86584(&v199);
    if (qword_1506388 != -1)
      swift_once(&qword_1506388, sub_EC228C);
    v17 = *(double *)&qword_1583F40;
    v214.origin.x = v8;
    v214.origin.y = v10;
    v214.size.width = v12;
    v214.size.height = v14;
    Width = CGRectGetWidth(v214);
    v215.origin.x = v8;
    v215.origin.y = v10;
    v215.size.width = v12;
    v215.size.height = v14;
    Height = CGRectGetHeight(v215);
    if (Height >= Width)
      Height = Width;
    v20 = Height - (v15 + v15);
    if (v20 >= v17)
      v21 = v17;
    else
      v21 = v20;
    v22 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v22, "displayScale");

    v23 = QRCode.dotAdjustedWidth(with:scale:)(v21);
    sub_EC5270(&v199);
    v24 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    v25 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v25, "displayScale");

    v187 = v23;
    v26 = CGRect.centeringAlong(axes:bounds:scale:)(3);
  }
  else
  {
    if (!v4)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    objc_msgSend(v4, "bounds");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;

    if (qword_1506378 != -1)
      swift_once(&qword_1506378, sub_EC224C);
    v35 = *(double *)&qword_1583F30;
    if (qword_1506380 != -1)
      swift_once(&qword_1506380, sub_EC226C);
    v36 = v35 + *(double *)&qword_1583F38;
    v37 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    v199 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v200 = v37;
    v201 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_E86584(&v199);
    if (qword_1506388 != -1)
      swift_once(&qword_1506388, sub_EC228C);
    v38 = *(double *)&qword_1583F40;
    v216.origin.x = v28;
    v216.origin.y = v30;
    v216.size.width = v32;
    v216.size.height = v34;
    v39 = CGRectGetWidth(v216);
    v217.origin.x = v28;
    v217.origin.y = v30;
    v217.size.width = v32;
    v217.size.height = v34;
    v40 = CGRectGetHeight(v217);
    if (v40 >= v39)
      v40 = v39;
    v41 = v40 - (v36 + v36);
    if (v41 >= v38)
      v42 = v38;
    else
      v42 = v41;
    v43 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v43, "displayScale");

    v44 = QRCode.dotAdjustedWidth(with:scale:)(v42);
    sub_EC5270(&v199);
    v45 = *(double *)&qword_1583F38;
    v218.origin.x = v28;
    v218.origin.y = v30;
    v218.size.width = v32;
    v218.size.height = v34;
    v46 = CGRectGetWidth(v218);
    v47 = objc_msgSend(v1, "view");
    if (!v47)
      goto LABEL_53;
    v48 = v47;
    objc_msgSend(v47, "safeAreaInsets");
    v50 = v49;

    v51 = objc_msgSend(v1, "view");
    if (!v51)
    {
LABEL_54:
      __break(1u);
      return;
    }
    v52 = v51;
    v193 = v44;
    v53 = v44 + v45 + v45;
    objc_msgSend(v51, "safeAreaInsets");

    v54 = UIEdgeInsetsInsetRect(v28, v30, v32, v34, v50, (v46 - v53) * 0.5);
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v61 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel], "sizeThatFits:", v57, v59);
    v189 = v62;
    v64 = v63;
    v65 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel], "sizeThatFits:", v58, v60);
    v192 = v66;
    v68 = v67;
    if (qword_1506398 != -1)
      swift_once(&qword_1506398, sub_EC22CC);
    v190 = v64;
    v69 = v64 + v53 + *(double *)&qword_1583F50;
    if (qword_15063A0 != -1)
      swift_once(&qword_15063A0, sub_EC22EC);
    v191 = v68;
    v70 = v68 + v69 + *(double *)&qword_1583F58;
    if (qword_15063A8 != -1)
      swift_once(&qword_15063A8, sub_EC230C);
    v71 = *(double *)&qword_1583F60;
    v72 = v70 + v71 + v71;
    v219.origin.x = v54;
    v219.origin.y = v56;
    v219.size.width = v58;
    v219.size.height = v60;
    v73 = CGRectGetWidth(v219);
    v74 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView], "setFrame:", v54, v56, v58, v60);
    objc_msgSend(*(id *)&v1[v74], "setContentSize:", v73, v72);
    v220.origin.x = v54;
    v220.origin.y = v56;
    v220.size.width = v58;
    v220.size.height = v60;
    v75 = CGRectGetHeight(v220);
    v76 = *(void **)&v1[v74];
    v77 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView];
    v78 = v76;
    if (v75 >= v72)
    {
      v80 = 0.0;
      v79 = 3;
    }
    else
    {
      v79 = 1;
      v80 = v71;
    }
    v81 = CGRect.centeringAlong(axes:in:)(v79, 0.0, v80, v73, v72);
    v83 = v82;
    v85 = v84;
    v87 = v86;

    objc_msgSend(v77, "setFrame:", v81, v83, v85, v87);
    v88 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView], "bounds");
    recta.origin.x = v89;
    v91 = v90;
    v93 = v92;
    v95 = v94;
    v96 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView;
    v97 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    if (v97)
    {
      v98 = *(void **)&v1[v88];
      v99 = v97;
      v100 = v98;
      v101 = CGRect.centeringAlong(axes:in:)(1, 0.0, 0.0, v53, v53);
      v103 = v102;
      v105 = v104;
      v107 = v106;

      objc_msgSend(v99, "setFrame:", v101, v103, v105, v107);
      v108 = *(void **)&v1[v96];
    }
    else
    {
      v108 = 0;
    }
    v109 = v91 + v53 + *(double *)&qword_1583F50;
    v110 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    v188 = v95 - (v53 + *(double *)&qword_1583F50);
    v111 = v110;
    if (v108)
      objc_msgSend(v108, "bounds");
    v112 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v112, "displayScale");

    objc_msgSend(v110, "setFrame:", CGRect.centeringAlong(axes:bounds:scale:)(3), *(_QWORD *)&v193);
    v113 = *(id *)&v1[v61];
    v221.origin.x = recta.origin.x;
    v221.origin.y = v109;
    v221.size.width = v93;
    v221.size.height = v188;
    MinY = CGRectGetMinY(v221);
    v115 = *(id *)&v1[v88];
    v116 = CGRect.centeringAlong(axes:in:)(1, 0.0, MinY, v189, v190);
    v118 = v117;
    v120 = v119;
    v122 = v121;

    objc_msgSend(v113, "setFrame:", v116, v118, v120, v122);
    v123 = v188 - (v190 + *(double *)&qword_1583F58);
    v124 = v109 + v190 + *(double *)&qword_1583F58;
    v125 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    v126 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView];
    v222.origin.x = recta.origin.x;
    v222.origin.y = v124;
    v222.size.width = v93;
    v222.size.height = v123;
    v127 = CGRectGetMinY(v222);
    v128 = *(id *)&v1[v88];
    v129 = CGRect.centeringAlong(axes:in:)(1, 0.0, v127, v192, v191);
    v131 = v130;
    v133 = v132;
    v135 = v134;

    objc_msgSend(v126, "setFrame:", v129, v131, v133, v135);
    v136 = *(void **)&v1[v125];
    v24 = *(id *)&v1[v65];
    objc_msgSend(v136, "bounds");
  }
  objc_msgSend(v24, "setFrame:", v26, *(_QWORD *)&v187);

  v137 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView];
  v138 = objc_msgSend(v1, "view");
  if (!v138)
  {
    __break(1u);
    goto LABEL_51;
  }
  v139 = v138;
  objc_msgSend(v138, "bounds");
  v141 = v140;
  v143 = v142;
  v145 = v144;
  v147 = v146;

  objc_msgSend(v137, "setFrame:", v141, v143, v145, v147);
  v148 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32] != 76)
  {
    v149 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView], "frame");
    v150 = CGRectGetWidth(v223) * 0.3;
    if (qword_1506390 != -1)
      swift_once(&qword_1506390, sub_EC22AC);
    if (*(double *)&qword_1583F48 < v150)
      v150 = *(double *)&qword_1583F48;
    v151 = *(id *)&v1[v149];
    v152 = CGRect.centeringAlong(axes:in:)(3, 0.0, 0.0, v150, v150);
    v154 = v153;
    v156 = v155;
    v158 = v157;

    v159 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setFrame:", v152, v154, v156, v158);
    CGAffineTransformMakeScale(&v195, v150 / *(double *)&qword_1583F48, v150 / *(double *)&qword_1583F48);
    a = v195.a;
    b = v195.b;
    c = v195.c;
    d = v195.d;
    tx = v195.tx;
    ty = v195.ty;
    v166 = *((_OWORD *)v148 + 1);
    v197[0] = *(_OWORD *)v148;
    v197[1] = v166;
    v198 = *((_QWORD *)v148 + 4);
    v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E000);
    inited = swift_initStackObject(v167, &recta.origin.y);
    *(_OWORD *)(inited + 16) = xmmword_10612C0;
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v202.x = 12.0;
    v202.y = 15.0;
    *(CGPoint *)(inited + 32) = CGPointApplyAffineTransform(v202, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v203.x = 12.0;
    v203.y = 6.0;
    *(CGPoint *)(inited + 48) = CGPointApplyAffineTransform(v203, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v204.y = 6.0;
    v204.x = 36.0;
    *(CGPoint *)(inited + 64) = CGPointApplyAffineTransform(v204, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v205.y = 0.0;
    v205.x = 36.0;
    *(CGPoint *)(inited + 80) = CGPointApplyAffineTransform(v205, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v206.y = 0.0;
    v206.x = 85.0;
    *(CGPoint *)(inited + 96) = CGPointApplyAffineTransform(v206, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v207.x = 85.0;
    v207.y = 90.0;
    *(CGPoint *)(inited + 112) = CGPointApplyAffineTransform(v207, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v208.x = 36.0;
    v208.y = 90.0;
    *(CGPoint *)(inited + 128) = CGPointApplyAffineTransform(v208, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v209.x = 36.0;
    v209.y = 95.0;
    *(CGPoint *)(inited + 144) = CGPointApplyAffineTransform(v209, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v210.x = 0.0;
    v210.y = 95.0;
    *(CGPoint *)(inited + 160) = CGPointApplyAffineTransform(v210, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v211.x = 0.0;
    v211.y = 57.0;
    *(CGPoint *)(inited + 176) = CGPointApplyAffineTransform(v211, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v212.x = 12.0;
    v212.y = 57.0;
    *(CGPoint *)(inited + 192) = CGPointApplyAffineTransform(v212, &v195);
    v195.a = a;
    v195.b = b;
    v195.c = c;
    v195.d = d;
    v195.tx = tx;
    v195.ty = ty;
    v213.x = 12.0;
    v213.y = 15.0;
    *(CGPoint *)(inited + 208) = CGPointApplyAffineTransform(v213, &v195);
    v169 = *(void **)&v1[v159];
    sub_E86584(v197);
    objc_msgSend(v169, "frame");
    v171 = v170;
    v173 = v172;
    v175 = v174;
    v177 = v176;
    objc_msgSend(*(id *)&v1[v149], "bounds");
    v182 = QRCode.dotAlignedPath(with:in:imageBounds:)(inited, v171, v173, v175, v177, v178, v179, v180, v181);
    swift_setDeallocating(inited);
    sub_EC5270(v197);
    v183 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer], "setPath:", v182);
    v184 = *(void **)&v1[v183];
    v185 = *(void **)&v1[v149];
    v186 = v184;
    objc_msgSend(v185, "bounds");
    objc_msgSend(v186, "setFrame:");

  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.dismissAnimated()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_13CD800, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v12 = sub_EC5334;
  v13 = v2;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_42D124;
  v11 = &block_descriptor_9_20;
  v3 = _Block_copy(&v8);
  v4 = v0;
  swift_release();
  v5 = swift_allocObject(&unk_13CD850, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v12 = sub_EC5360;
  v13 = v5;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_59BEF0;
  v11 = &block_descriptor_15_16;
  v6 = _Block_copy(&v8);
  v7 = v4;
  swift_release();
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v3, v6, 0.25);
  _Block_release(v6);
  _Block_release(v3);
}

double sub_EC448C(uint64_t a1)
{
  double result;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView), "setEffect:", 0);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.resetBrightnessToSystemDefault()();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void QRCodeOverlayViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.QRCodeOverlayViewController", 39, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id QRCodeOverlayViewController.__deallocating_deinit()
{
  return sub_1C53CC(type metadata accessor for QRCodeOverlayViewController);
}

char *sub_EC46D4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class isa;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v43[4];
  objc_super v44;

  v5 = v4;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  v10 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  v14 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v10] = v14;
  v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  v16 = (objc_class *)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v44.receiver = v12;
  v44.super_class = v16;
  v17 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  v18 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView];
  v20 = v17;
  objc_msgSend(v20, "addSubview:", v19);
  v21 = (void *)objc_opt_self(NSLayoutConstraint);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1063440;
  v24 = objc_msgSend(*(id *)&v17[v18], "leadingAnchor");
  v25 = objc_msgSend(v20, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(*(id *)&v17[v18], "trailingAnchor");
  v28 = objc_msgSend(v20, "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(*(id *)&v17[v18], "topAnchor");
  v31 = objc_msgSend(v20, "topAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(*(id *)&v17[v18], "bottomAnchor");
  v34 = objc_msgSend(v20, "bottomAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v23 + 56) = v35;
  specialized Array._endMutation()(v36);
  sub_4E684(0, &qword_1508328, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0], v23);

  sub_4E684(0, &qword_1507078, UITraitCollection_ptr);
  v38 = v20;
  v39 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v43[3] = v16;
  v43[0] = v38;
  v40 = v38;
  v41 = UIView.registerForTraitChanges(_:target:action:)(v39, v43, "updateColor");
  swift_unknownObjectRelease(v41);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v43);
  return v40;
}

Swift::Void __swiftcall QRCodeOverlayViewController.ContainerView.layoutSubviews()()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  sub_4E684(0, &qword_150E008, CATransaction_ptr);
  *(_QWORD *)(swift_allocObject(&unk_13CD8A0, 24, 7) + 16) = v0;
  v1 = v0;
  static CATransaction.performWithoutAnimation(_:)((void (*)(id))sub_EC5378);
  swift_release();
}

void sub_EC4B60(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView);
  v2 = *(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setFrame:");

}

void sub_EC4C70()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  if (v1)
  {
    v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
    v3 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    v4 = kCAFilterSourceIn;
    v12 = v1;
    objc_msgSend(v3, "setCompositingFilter:", v4);
    v5 = *(id *)&v0[v2];
    v6 = objc_msgSend(v0, "traitCollection");
    v7 = objc_msgSend(v12, "resolvedColorWithTraitCollection:", v6);

    v8 = objc_msgSend(v7, "CGColor");
    objc_msgSend(v5, "setBackgroundColor:", v8);

    v9 = objc_msgSend(*(id *)&v0[v2], "superlayer");
    if (!v9)
    {
      v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "layer");
      v11 = *(id *)&v0[v2];
      objc_msgSend(v10, "addSublayer:", v11);

    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer], "removeFromSuperlayer");
  }
}

id QRCodeOverlayViewController.ContainerView.__deallocating_deinit()
{
  return sub_1C53CC(type metadata accessor for QRCodeOverlayViewController.ContainerView);
}

uint64_t QRCodeOverlayViewController.ImageViewRepresentable.init(image:)()
{
  return swift_getKeyPath(&unk_10B3AA0);
}

char *QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  void *v14;
  id v15;

  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v7 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v9 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(_QWORD *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = a4;
  v10 = a4;

  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "setImage:", *(_QWORD *)&v7[v8]);
  j__swift_retain_0(a2);
  v11 = sub_E43558(a2, a3 & 1);
  j__swift_release_0(a2);
  if (v11)
  {
    sub_4E684(0, (unint64_t *)&qword_150EC20, UIColor_ptr);
    v12 = swift_retain();
    v13 = (void *)UIColor.init(_:)(v12);
    v14 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(_QWORD *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
    v15 = v13;

    sub_EC4C70();
    swift_release();

  }
  return v7;
}

void QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  void *v14;
  id v15;

  v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v9 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image);
  *(_QWORD *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image) = a5;
  v10 = a5;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView), "setImage:", *(_QWORD *)(a1 + v8));
  j__swift_retain_0(a3);
  v11 = sub_E43558(a3, a4 & 1);
  j__swift_release_0(a3);
  if (v11)
  {
    sub_4E684(0, (unint64_t *)&qword_150EC20, UIColor_ptr);
    v12 = swift_retain();
    v13 = (void *)UIColor.init(_:)(v12);
    v14 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor);
    *(_QWORD *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor) = v13;
    v15 = v13;

    sub_EC4C70();
    swift_release();

  }
}

char *sub_EC5114(uint64_t a1)
{
  uint64_t v1;

  return QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(void **)(v1 + 16));
}

void sub_EC512C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(a1, a2, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), *(void **)(v2 + 16));
}

uint64_t sub_EC5144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_EC584C();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_EC5194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_EC584C();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_EC51E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_EC584C();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t type metadata accessor for QRCodeOverlayViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI27QRCodeOverlayViewController);
}

void sub_EC5228(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_EC5270(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[3];
  sub_50C60(a1[1], a1[2]);

  return a1;
}

uint64_t sub_EC52A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150C150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_EC52E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_EC530C(uint64_t a1)
{
  uint64_t v1;

  sub_EC2D74(a1, v1);
}

double sub_EC5314()
{
  uint64_t v0;

  return sub_EC33E8(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_351(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_351(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_EC5334()
{
  uint64_t v0;

  return sub_EC448C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_EC533C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_EC5360()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 0, 0);
}

void sub_EC5378()
{
  uint64_t v0;

  sub_EC4B60(*(_QWORD *)(v0 + 16));
}

unint64_t sub_EC538C()
{
  unint64_t result;

  result = qword_150E010;
  if (!qword_150E010)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_150E010);
  }
  return result;
}

void destroy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1)
{
  j__swift_release_0(*(_QWORD *)a1);

}

uint64_t _s11MusicCoreUI27QRCodeOverlayViewControllerC22ImageViewRepresentableVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  id v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain_0(*a2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain_0(*a2);
  v6 = *a1;
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  j__swift_release_0(v6);
  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = (uint64_t)v7;
  v9 = v7;

  return a1;
}

uint64_t *assignWithTake for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  void *v6;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release_0(v5);
  v6 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for QRCodeOverlayViewController.ImageViewRepresentable()
{
  return &type metadata for QRCodeOverlayViewController.ImageViewRepresentable;
}

void sub_EC551C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v6);
  *(_QWORD *)&v0[v4] = v7;
  v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_15063B0 != -1)
    swift_once(&qword_15063B0, sub_EC232C);
  v10 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", qword_1583F68);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v10);

  *(_QWORD *)&v0[v9] = v11;
  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v14 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/QRCodeOverlayViewController.swift", 45, 2, 64, 0);
  __break(1u);
}

void sub_EC5774()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/QRCodeOverlayViewController.swift", 45, 2, 330, 0);
  __break(1u);
}

unint64_t sub_EC584C()
{
  unint64_t result;

  result = qword_150E070;
  if (!qword_150E070)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_150E070);
  }
  return result;
}

uint64_t Radiosity.ViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v32;
  char v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E078);
  __chkstk_darwin();
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[0] = v2[8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.getter(&v33, v9);
  v10 = v2[5];
  v12 = v2[3];
  v37 = v2[4];
  v11 = v37;
  v38 = v10;
  v13 = v2[5];
  v14 = v2[7];
  v39 = v2[6];
  v15 = v39;
  v40 = v14;
  v16 = v2[1];
  v17 = v2[3];
  v35 = v2[2];
  v18 = v35;
  v36 = v17;
  v19 = *v2;
  v20 = v2[1];
  v8[*(int *)(v6 + 40)] = v33;
  v21 = *v2;
  v34[0] = v19;
  v34[1] = v20;
  v22 = &v8[*(int *)(v6 + 36)];
  *((_OWORD *)v22 + 4) = v11;
  *((_OWORD *)v22 + 5) = v13;
  v23 = v2[7];
  *((_OWORD *)v22 + 6) = v15;
  *((_OWORD *)v22 + 7) = v23;
  *(_OWORD *)v22 = v21;
  *((_OWORD *)v22 + 1) = v16;
  *((_OWORD *)v22 + 2) = v18;
  *((_OWORD *)v22 + 3) = v12;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E080);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, a1, v24);
  v25 = (_OWORD *)swift_allocObject(&unk_13CDA28, 160, 7);
  v26 = v3[7];
  v25[7] = v3[6];
  v25[8] = v26;
  v25[9] = v3[8];
  v27 = v3[3];
  v25[3] = v3[2];
  v25[4] = v27;
  v28 = v3[5];
  v25[5] = v3[4];
  v25[6] = v28;
  v29 = v3[1];
  v25[1] = *v3;
  v25[2] = v29;
  sub_EC5A64((uint64_t)v8, a2);
  v30 = (_QWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150E088) + 36));
  *v30 = sub_EC5A60;
  v30[1] = v25;
  sub_726C68((uint64_t)v34);
  sub_EC5AAC((uint64_t)v3);
  return sub_56024((uint64_t)v8, &qword_150E078);
}

uint64_t sub_EC5A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_EC5AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(id *)(a1 + 56);
  sub_A9DEC(v2, v3);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_EC5B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[8];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E078);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[7];
  v8 = v2[8];
  v39 = v2[6];
  v40 = v9;
  v10 = v2[3];
  v35 = v2[2];
  v36 = v10;
  v11 = v2[5];
  v37 = v2[4];
  v38 = v11;
  v12 = v2[1];
  v33 = *v2;
  v34 = v12;
  v41 = v8;
  v42[0] = v8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.wrappedValue.getter(&v32, v13);
  v14 = v37;
  v15 = v38;
  v42[4] = v37;
  v42[5] = v38;
  v16 = v39;
  v17 = v40;
  v42[6] = v39;
  v42[7] = v40;
  v18 = v35;
  v19 = v36;
  v42[2] = v35;
  v42[3] = v36;
  v20 = v33;
  v21 = v34;
  v42[0] = v33;
  v42[1] = v34;
  v7[*(int *)(v5 + 40)] = v32;
  v22 = &v7[*(int *)(v5 + 36)];
  *((_OWORD *)v22 + 4) = v14;
  *((_OWORD *)v22 + 5) = v15;
  *((_OWORD *)v22 + 6) = v16;
  *((_OWORD *)v22 + 7) = v17;
  *(_OWORD *)v22 = v20;
  *((_OWORD *)v22 + 1) = v21;
  *((_OWORD *)v22 + 2) = v18;
  *((_OWORD *)v22 + 3) = v19;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E080);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v7, a1, v23);
  v24 = (_OWORD *)swift_allocObject(&unk_13CDEC0, 160, 7);
  v25 = v40;
  v24[7] = v39;
  v24[8] = v25;
  v24[9] = v41;
  v26 = v36;
  v24[3] = v35;
  v24[4] = v26;
  v27 = v38;
  v24[5] = v37;
  v24[6] = v27;
  v28 = v34;
  v24[1] = v33;
  v24[2] = v28;
  sub_EC5A64((uint64_t)v7, a2);
  v29 = (_QWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150E088) + 36));
  *v29 = sub_EC5A60;
  v29[1] = v24;
  sub_726C68((uint64_t)v42);
  sub_EC5AAC((uint64_t)&v33);
  return sub_56024((uint64_t)v7, &qword_150E078);
}

id Radiosity.UIView.__allocating_init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(a1, a2, a3);
}

id sub_EC5D30(uint64_t a1, uint64_t a2)
{
  return sub_EC7FFC(a2);
}

void sub_EC5D38(void *a1, uint64_t a2, uint64_t a3)
{
  sub_EC8108(a1, a3);
}

double sub_EC5D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_EC81F0(a5);
}

uint64_t sub_EC5D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10B3D78, a3);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_EC5DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10B3D78, a3);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void sub_EC5E14(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10B3D78, a1);
  UIViewRepresentable.body.getter(a1, WitnessTable);
  __break(1u);
}

id Radiosity.UIView.content.getter()
{
  uint64_t v0;

  return *(id *)(v0 + direct field offset for Radiosity.UIView.content);
}

void sub_EC5E54(char a1)
{
  char *v1;
  int v2;
  char *v3;
  double v4;
  char v5[24];

  v2 = a1 & 1;
  v3 = &v1[direct field offset for Radiosity.UIView.isRadiosityEnabled];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[direct field offset for Radiosity.UIView.isRadiosityEnabled], v5, 0, 0).n128_u64[0];
  if (*v3 != v2)
  {
    if (*v3)
    {
      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[qword_150E0A8], v4);
      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[qword_150E0B0]);
    }
    else
    {
      objc_msgSend(*(id *)&v1[qword_150E0A8], "removeFromSuperview", v4);
      objc_msgSend(*(id *)&v1[qword_150E0B0], "removeFromSuperview");
    }
  }
}

uint64_t Radiosity.UIView.isRadiosityEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v3, 0, 0);
  return *v1;
}

void Radiosity.UIView.isRadiosityEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v5[24];

  v3 = (char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_EC5E54(v4);
}

void (*Radiosity.UIView.isRadiosityEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_EC6014;
}

void sub_EC6014(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  Radiosity.UIView.isRadiosityEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void sub_EC6040(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE v6[24];
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 48);
  v8 = v2;
  v9 = *(_QWORD *)(a1 + 80);
  sub_EC7EE4((__int128 *)((char *)&v8 + 8), &v10);
  v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.specs, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 72);
  sub_EC7EE4(&v10, &v11);
  if ((_QWORD)v11)
    v5 = v4 == 0;
  else
    v5 = v4 != 0;
  sub_EC682C(v5);
  sub_EC6F54();
}

double Radiosity.UIView.specs.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_EC7E80((uint64_t)v7);
  sub_726C68((uint64_t)v7);
  v2 = v11;
  a1[4] = v10;
  a1[5] = v2;
  v3 = v13;
  a1[6] = v12;
  a1[7] = v3;
  v4 = v7[1];
  *a1 = v7[0];
  a1[1] = v4;
  result = *(double *)&v8;
  v6 = v9;
  a1[2] = v8;
  a1[3] = v6;
  return result;
}

uint64_t Radiosity.UIView.specs.setter(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v13[24];
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[9];

  v3 = (_OWORD *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.specs, v13, 1, 0);
  v4 = v3[5];
  v17 = v3[4];
  v18 = v4;
  v5 = v3[7];
  v19 = v3[6];
  v6 = v3[1];
  v14[0] = *v3;
  v14[1] = v6;
  v7 = v3[3];
  v15 = v3[2];
  v16 = v7;
  v20 = v5;
  v21[0] = v14[0];
  v21[1] = v6;
  v21[2] = v15;
  v21[3] = v7;
  v21[4] = v17;
  v21[5] = v4;
  v21[6] = v19;
  v21[7] = v5;
  v8 = a1[3];
  v3[2] = a1[2];
  v3[3] = v8;
  v9 = a1[1];
  *v3 = *a1;
  v3[1] = v9;
  v10 = a1[7];
  v3[6] = a1[6];
  v3[7] = v10;
  v11 = a1[5];
  v3[4] = a1[4];
  v3[5] = v11;
  sub_726C68((uint64_t)v14);
  sub_726C68((uint64_t)a1);
  sub_726CC8((uint64_t)v21);
  sub_EC6040((uint64_t)v14);
  sub_726CC8((uint64_t)a1);
  return sub_726CC8((uint64_t)v14);
}

void (*Radiosity.UIView.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  v4 = (__int128 *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess(v4, v3 + 80, 0, 0);
  v5 = v4[4];
  v6 = v4[5];
  *((_OWORD *)v3 + 4) = v5;
  *((_OWORD *)v3 + 5) = v6;
  v7 = v4[6];
  v8 = v4[7];
  *((_OWORD *)v3 + 6) = v7;
  *((_OWORD *)v3 + 7) = v8;
  v9 = *v4;
  v10 = v4[1];
  *(_OWORD *)v3 = *v4;
  *((_OWORD *)v3 + 1) = v10;
  v11 = v4[2];
  v12 = v4[3];
  *((_OWORD *)v3 + 2) = v11;
  *((_OWORD *)v3 + 3) = v12;
  *((_OWORD *)v3 + 24) = v9;
  *((_OWORD *)v3 + 25) = v10;
  *((_OWORD *)v3 + 26) = v11;
  *((_OWORD *)v3 + 27) = v12;
  *((_OWORD *)v3 + 28) = v5;
  *((_OWORD *)v3 + 29) = v6;
  *((_OWORD *)v3 + 30) = v7;
  *((_OWORD *)v3 + 31) = v8;
  sub_726C68((uint64_t)v3);
  return sub_EC6298;
}

void sub_EC6298(uint64_t a1, char a2)
{
  _OWORD *v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_OWORD **)a1;
  v3 = (_OWORD *)(*(_QWORD *)a1 + 384);
  v4 = *(_OWORD *)(*(_QWORD *)a1 + 464);
  if ((a2 & 1) != 0)
  {
    v2[12] = *(_OWORD *)(*(_QWORD *)a1 + 448);
    v2[13] = v4;
    v5 = v3[7];
    v2[14] = v3[6];
    v2[15] = v5;
    v6 = v3[1];
    v2[8] = *v3;
    v2[9] = v6;
    v7 = v3[3];
    v2[10] = v3[2];
    v2[11] = v7;
    sub_726C68((uint64_t)(v2 + 8));
    Radiosity.UIView.specs.setter(v2 + 8);
    v8 = v3[5];
    v2[36] = v3[4];
    v2[37] = v8;
    v9 = v3[7];
    v2[38] = v3[6];
    v2[39] = v9;
    v10 = v3[1];
    v2[32] = *v3;
    v2[33] = v10;
    v11 = v3[3];
    v2[34] = v3[2];
    v2[35] = v11;
    sub_726CC8((uint64_t)(v2 + 32));
  }
  else
  {
    v2[20] = *(_OWORD *)(*(_QWORD *)a1 + 448);
    v2[21] = v4;
    v12 = v3[7];
    v2[22] = v3[6];
    v2[23] = v12;
    v13 = v3[1];
    v2[16] = *v3;
    v2[17] = v13;
    v14 = v3[3];
    v2[18] = v3[2];
    v2[19] = v14;
    Radiosity.UIView.specs.setter(v2 + 16);
  }
  free(v2);
}

__int128 *Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (qword_15063B8 != -1)
    swift_once(&qword_15063B8, sub_EC78AC);
  return &static Radiosity.Specs.containerDetailHeaderArtwork;
}

id Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  objc_super v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  objc_super v44[2];
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = *v4;
  v10 = swift_isaMask;
  *(_QWORD *)((char *)v4 + direct field offset for Radiosity.UIView.content) = a1;
  v11 = (_OWORD *)((char *)v4 + direct field offset for Radiosity.UIView.specs);
  v12 = (objc_super)a3[3];
  v14 = a3[4];
  v13 = a3[5];
  v11[4] = v14;
  v11[5] = v13;
  v15 = a3[7];
  v11[6] = a3[6];
  v11[7] = v15;
  v16 = a3[1];
  *v11 = *a3;
  v11[1] = v16;
  v17 = a3[3];
  v11[2] = a3[2];
  v11[3] = v17;
  v18 = v10 & v9;
  *((_BYTE *)v4 + direct field offset for Radiosity.UIView.isRadiosityEnabled) = a2;
  v46 = *((_QWORD *)a3 + 10);
  v44[1] = v12;
  v45 = v14;
  sub_EC7EE4((__int128 *)((char *)&v45 + 8), &v47);
  sub_EC7EE4(&v47, &v48);
  if ((_QWORD)v48)
  {
    v19 = objc_allocWithZone((Class)UIView);
    v20 = v4;
    v21 = a1;
    sub_726C68((uint64_t)a3);
    v22 = objc_msgSend(v19, "init");
  }
  else
  {
    v23 = objc_allocWithZone((Class)_UIPortalView);
    v24 = v4;
    v25 = a1;
    sub_726C68((uint64_t)a3);
    v22 = objc_msgSend(v23, "initWithSourceView:", v25);
  }
  v26 = v22;
  *(_QWORD *)((char *)v4 + qword_150E0A8) = v22;
  v27 = objc_allocWithZone((Class)_UIPortalView);
  v28 = v26;
  v29 = objc_msgSend(v27, "initWithSourceView:", a1);
  *(_QWORD *)((char *)v4 + qword_150E0B0) = v29;
  v30 = v29;

  v33 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)(v18 + 80), v31, v32);
  v44[0].receiver = v4;
  v44[0].super_class = v33;
  v34 = -[objc_super initWithFrame:](v44, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v34, "addSubview:", a1);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v34, "addSubview:", v28);
    objc_msgSend(v34, "addSubview:", v30);
  }
  v35 = a1;
  objc_msgSend(v34, "bounds");
  objc_msgSend(v35, "setFrame:");

  objc_msgSend(v35, "setAutoresizingMask:", 18);
  sub_EC682C(0);
  sub_EC6F54();
  v36 = objc_msgSend(v34, "traitCollection");
  v37 = objc_msgSend(v36, "userInterfaceStyle");

  sub_EC73C4((uint64_t)v37);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085E0);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_105B360;
  *(_QWORD *)(v39 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v39 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v40 = swift_allocObject(&unk_13CDA50, 24, 7);
  *(_QWORD *)(v40 + 16) = ObjectType;
  v41 = v34;
  v42 = UIView.registerForTraitChanges<A>(_:handler:)(v39, sub_EC7F10, v40, ObjectType);
  sub_726CC8((uint64_t)a3);

  swift_unknownObjectRelease(v42);
  swift_bridgeObjectRelease();
  swift_release();

  return v41;
}

void sub_EC66F0()
{
  sub_EC828C();
}

uint64_t sub_EC671C(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

double sub_EC6734(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  Radiosity.UIView.intrinsicContentSize.getter();
  v3 = v2;

  return v3;
}

id Radiosity.UIView.intrinsicContentSize.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + direct field offset for Radiosity.UIView.content), "intrinsicContentSize");
}

Swift::Void __swiftcall Radiosity.UIView.layoutSubviews()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  objc_class *v3;
  objc_super v4;

  v3 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v2)), v0, v1);
  v4.receiver = v2;
  v4.super_class = v3;
  objc_msgSendSuper2(&v4, "layoutSubviews");
  sub_EC682C(0);
  sub_EC6F54();
}

void sub_EC67E4(void *a1)
{
  id v1;

  v1 = a1;
  Radiosity.UIView.layoutSubviews()();

}

void sub_EC6818(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_150E0A8);
  *(_QWORD *)(v1 + qword_150E0A8) = a1;

}

void sub_EC682C(char a1)
{
  char *v1;
  char *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  char *v7;
  double v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  __n128 v28;
  id v29;
  double *v30;
  id v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t (*v37)(uint64_t *, double, double, double, double, double);
  double *v38;
  double v39;
  uint64_t *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t (*v50)(double, double, double, double, double);
  uint64_t v51;
  id v52;
  double v53;
  double v54;
  double MinX;
  __int128 v56;
  __int128 v57;
  CGAffineTransform v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  CGAffineTransform v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _OWORD v81[2];
  __int128 v82;
  uint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91[24];
  char v92[24];
  char v93[24];
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  char v99[24];
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(*(id *)&v1[qword_150E0A8], "removeFromSuperview");
    v3 = &v1[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v91, 0, 0);
    v56 = *((_OWORD *)v3 + 4);
    v57 = *((_OWORD *)v3 + 5);
    v84[1] = *((_OWORD *)v3 + 3);
    v85 = v56;
    v86 = v57;
    sub_EC7EE4((__int128 *)((char *)&v85 + 8), &v87);
    sub_EC7EE4(&v87, &v88);
    if ((_QWORD)v88)
      v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    else
      v4 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), "initWithSourceView:", *(_QWORD *)&v2[direct field offset for Radiosity.UIView.content]);
    v5 = *(void **)&v2[qword_150E0A8];
    *(_QWORD *)&v2[qword_150E0A8] = v4;
    v6 = v4;

    v7 = &v2[direct field offset for Radiosity.UIView.isRadiosityEnabled];
    *(_QWORD *)&v8 = swift_beginAccess(&v2[direct field offset for Radiosity.UIView.isRadiosityEnabled], v92, 0, 0).n128_u64[0];
    if (*v7 == 1)
      objc_msgSend(v2, "addSubview:", v6, v8);

  }
  v9 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v93, 0, 0);
  v10 = *((_OWORD *)v9 + 5);
  v60 = *((_OWORD *)v9 + 4);
  v61 = v10;
  v11 = *((_OWORD *)v9 + 7);
  v62 = *((_OWORD *)v9 + 6);
  v63 = v11;
  v12 = *((_OWORD *)v9 + 1);
  *(_OWORD *)&v58.a = *(_OWORD *)v9;
  *(_OWORD *)&v58.c = v12;
  v13 = *((_OWORD *)v9 + 3);
  *(_OWORD *)&v58.tx = *((_OWORD *)v9 + 2);
  v59 = v13;
  sub_726C68((uint64_t)&v58);
  objc_msgSend(v2, "bounds");
  x = v100.origin.x;
  y = v100.origin.y;
  width = v100.size.width;
  height = v100.size.height;
  v72 = v58;
  v101 = CGRectApplyAffineTransform(v100, &v72);
  v18 = v101.origin.x;
  v19 = v101.origin.y;
  v20 = v101.size.width;
  v21 = v101.size.height;
  v101.origin.x = x;
  v101.origin.y = y;
  v101.size.width = width;
  v101.size.height = height;
  MinX = CGRectGetMinX(v101);
  v102.origin.x = x;
  v102.origin.y = y;
  v102.size.width = width;
  v102.size.height = height;
  v54 = CGRectGetWidth(v102);
  v103.origin.x = v18;
  v103.origin.y = v19;
  v103.size.width = v20;
  v103.size.height = v21;
  v53 = CGRectGetWidth(v103);
  v104.origin.x = x;
  v104.origin.y = y;
  v104.size.width = width;
  v104.size.height = height;
  v22 = CGRectGetHeight(v104);
  v105.origin.x = v18;
  v105.origin.y = v19;
  v105.size.width = v20;
  v105.size.height = v21;
  v23 = CGRectGetHeight(v105);
  sub_726CC8((uint64_t)&v58);
  v24 = *(id *)&v2[qword_150E0A8];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v24, "setFrame:");

  v25 = objc_msgSend(*(id *)&v2[qword_150E0A8], "layer");
  objc_msgSend(v25, "setShadowColor:", *(_QWORD *)&v2[direct field offset for Radiosity.UIView.specs + 56], swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v94, 0, 0).n128_f64[0]);

  v26 = objc_msgSend(*(id *)&v2[qword_150E0A8], "layer");
  v27 = &v2[direct field offset for Radiosity.UIView.specs];
  v28 = swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v95, 0, 0);
  v28.n128_u32[0] = *((_DWORD *)v27 + 12);
  objc_msgSend(v26, "setShadowOpacity:", v28.n128_f64[0]);

  v29 = objc_msgSend(*(id *)&v2[qword_150E0A8], "layer");
  v30 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v96, 0, 0);
  objc_msgSend(v29, "setShadowRadius:", v30[8]);

  v31 = objc_msgSend(*(id *)&v2[qword_150E0A8], "layer");
  v32 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v97, 0, 0);
  v33 = *((_OWORD *)v32 + 5);
  v68 = *((_OWORD *)v32 + 4);
  v69 = v33;
  v34 = *((_OWORD *)v32 + 7);
  v70 = *((_OWORD *)v32 + 6);
  v71 = v34;
  v35 = *((_OWORD *)v32 + 1);
  v64 = *(_OWORD *)v32;
  v65 = v35;
  v36 = *((_OWORD *)v32 + 3);
  v66 = *((_OWORD *)v32 + 2);
  v67 = v36;
  v81[1] = v36;
  v82 = v68;
  v83 = v33;
  sub_EC7EE4((__int128 *)((char *)&v82 + 8), v84);
  sub_EC7EE4(v84, &v89);
  v37 = (uint64_t (*)(uint64_t *, double, double, double, double, double))v89;
  if ((_QWORD)v89)
  {
    v38 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v98, 0, 0);
    v39 = v38[8];
    v40 = sub_EC9B50((uint64_t *)v84);
    v41 = (void *)v37(v40, MinX + (v54 - v53) * 0.5, v22 - v23, v20, v21, v39);
    v43 = v42;
    sub_EC9B7C((uint64_t *)v84);

  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v31, "setShadowPath:", v41);

  v44 = objc_msgSend(*(id *)&v2[qword_150E0A8], "layer");
  v45 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v99, 0, 0);
  v46 = *((_OWORD *)v45 + 5);
  v74 = *((_OWORD *)v45 + 4);
  v75 = v46;
  v47 = *((_OWORD *)v45 + 7);
  v76 = *((_OWORD *)v45 + 6);
  v77 = v47;
  v48 = *((_OWORD *)v45 + 1);
  *(_OWORD *)&v72.a = *(_OWORD *)v45;
  *(_OWORD *)&v72.c = v48;
  v49 = *((_OWORD *)v45 + 3);
  *(_OWORD *)&v72.tx = *((_OWORD *)v45 + 2);
  v73 = v49;
  v78 = v49;
  v79 = v74;
  v80 = v46;
  sub_EC7EE4((__int128 *)((char *)&v79 + 8), v81);
  sub_EC7EE4(v81, &v90);
  v50 = (uint64_t (*)(double, double, double, double, double))v90;
  if ((_QWORD)v90)
  {
    v51 = *((_QWORD *)&v90 + 1);
    sub_EC9B50((uint64_t *)v81);
    v52 = sub_EC6DE8(v50, v51, v2);
    sub_EC9B7C((uint64_t *)v81);
  }
  else
  {
    v52 = 0;
  }
  objc_msgSend(v44, "setMask:", v52);

}

id sub_EC6DE8(uint64_t (*a1)(double, double, double, double, double), uint64_t a2, char *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double *v18;
  void *v19;
  void *v20;
  void *v21;
  char v23[24];

  v5 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "blackColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v7, "setBackgroundColor:", v9);
  objc_msgSend(a3, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = (double *)&a3[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(v18, v23, 0, 0);
  v19 = (void *)a1(v11, v13, v15, v17, v18[8]);
  v21 = v20;

  objc_msgSend(v7, "setPath:", v21);
  objc_msgSend(v7, "setFillRule:", kCAFillRuleEvenOdd);
  return v7;
}

void sub_EC6F54()
{
  char *v0;
  char *v1;
  char *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(id);
  id v25;
  id v26;
  id v27;
  NSString v28;
  id v29;
  Class isa;
  unint64_t v31;
  id v32;
  Class v33;
  id v34;
  char *v35;
  float (*v36)(id);
  id v37;
  id v38;
  __n128 v39;
  _QWORD rect[9];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[32];
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v1 = v0;
  v2 = &v0[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(v2, v49, 0, 0);
  v3 = *((_OWORD *)v2 + 5);
  v45 = *((_OWORD *)v2 + 4);
  v46 = v3;
  v4 = *((_OWORD *)v2 + 7);
  v47 = *((_OWORD *)v2 + 6);
  v48 = v4;
  v5 = *((_OWORD *)v2 + 1);
  v41 = *(_OWORD *)v2;
  v42 = v5;
  v6 = *((_OWORD *)v2 + 3);
  v43 = *((_OWORD *)v2 + 2);
  v44 = v6;
  sub_726C68((uint64_t)&v41);
  objc_msgSend(v1, "bounds");
  x = v53.origin.x;
  y = v53.origin.y;
  width = v53.size.width;
  height = v53.size.height;
  *(_OWORD *)&rect[3] = v41;
  *(_OWORD *)&rect[5] = v42;
  *(_OWORD *)&rect[7] = v43;
  v54 = CGRectApplyAffineTransform(v53, (CGAffineTransform *)&rect[3]);
  v11 = v54.origin.x;
  rect[0] = *(_QWORD *)&v54.origin.x;
  rect[2] = *(_QWORD *)&v54.origin.y;
  v12 = v54.size.width;
  v13 = v54.size.height;
  v54.origin.x = x;
  v54.origin.y = y;
  v54.size.width = width;
  v54.size.height = height;
  rect[1] = CGRectGetMinX(v54);
  v55.origin.x = x;
  v55.origin.y = y;
  v55.size.width = width;
  v55.size.height = height;
  v14 = CGRectGetWidth(v55);
  v56.origin.x = v11;
  *(_QWORD *)&v56.origin.y = rect[2];
  v56.size.width = v12;
  v56.size.height = v13;
  v15 = *(double *)&rect[1] + (v14 - CGRectGetWidth(v56)) * 0.5;
  v57.origin.x = x;
  v57.origin.y = y;
  v57.size.width = width;
  v57.size.height = height;
  v16 = CGRectGetHeight(v57);
  *(_QWORD *)&v58.origin.x = rect[0];
  *(_QWORD *)&v58.origin.y = rect[2];
  v58.size.width = v12;
  v58.size.height = v13;
  v17 = CGRectGetHeight(v58);
  sub_726CC8((uint64_t)&v41);
  v18 = *(void **)&v1[qword_150E0B0];
  objc_msgSend(v18, "setFrame:", v15, v16 - v17, v12, v13);
  v19 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v50, 0, 0);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)&rect[3] = *(_OWORD *)v19;
  *(_OWORD *)&rect[5] = v20;
  *(_OWORD *)&rect[7] = *((_OWORD *)v19 + 2);
  objc_msgSend(v18, "setTransform:", &rect[3]);
  rect[2] = objc_msgSend(v18, "layer");
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070C0);
  v22 = swift_allocObject(v21, 96, 7);
  *(_OWORD *)(v22 + 16) = xmmword_105F890;
  v23 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v51, 0, 0);
  v24 = (void (*)(id))*((_QWORD *)v23 + 13);
  swift_retain();
  v25 = objc_msgSend(v1, "traitCollection", swift_retain().n128_f64[0]);
  v26 = objc_msgSend(v25, "userInterfaceStyle");

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v27 = objc_allocWithZone((Class)CAFilter);
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v27, "initWithType:", v28, swift_bridgeObjectRelease().n128_f64[0]);

  v24(v26);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v29, "setValue:forKey:", isa, kCAFilterInputAmount);
  swift_release();
  swift_release();

  v31 = sub_EC9B14();
  *(_QWORD *)(v22 + 56) = v31;
  *(_QWORD *)(v22 + 32) = v29;
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v52, 0, 0);
  v32 = sub_EC7F14();
  *(_QWORD *)(v22 + 88) = v31;
  *(_QWORD *)(v22 + 64) = v32;
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend((id)rect[2], "setFilters:", v33, swift_bridgeObjectRelease().n128_f64[0]);

  v34 = objc_msgSend(v18, "layer");
  v35 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], &rect[3], 0, 0);
  v36 = (float (*)(id))*((_QWORD *)v35 + 11);
  v37 = objc_msgSend(v1, "traitCollection", swift_retain().n128_f64[0]);
  v38 = objc_msgSend(v37, "userInterfaceStyle");

  LODWORD(v16) = v36(v38);
  v39 = swift_release();
  v39.n128_u32[0] = LODWORD(v16);
  objc_msgSend(v34, "setOpacity:", v39.n128_f64[0]);

}

void sub_EC73C4(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  id v7;

  sub_EC6F54();
  v3 = objc_msgSend(*(id *)(v1 + qword_150E0A8), "layer");
  v4 = v3;
  if (a1 == 2)
    v5 = -1.0;
  else
    v5 = -2.0;
  if (a1 == 2)
    v6 = -2.0;
  else
    v6 = -1.0;
  objc_msgSend(v3, "setZPosition:", v5);

  v7 = objc_msgSend(*(id *)(v1 + qword_150E0B0), "layer");
  objc_msgSend(v7, "setZPosition:", v6);

}

void Radiosity.UIView.init(frame:)()
{
  sub_EC82E4();
}

void sub_EC7490()
{
  sub_EC82E4();
}

id Radiosity.UIView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(uint64_t *)((char *)&stru_20.filesize + (swift_isaMask & *v4)), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_EC74F8(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[8];

  v2 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 80);
  v6[4] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 64);
  v6[5] = v2;
  v3 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 112);
  v6[6] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 96);
  v6[7] = v3;
  v4 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 16);
  v6[0] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs);
  v6[1] = v4;
  v5 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 48);
  v6[2] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 32);
  v6[3] = v5;
  sub_726CC8((uint64_t)v6);

}

__n128 Radiosity.Specs.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Radiosity.Specs.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

float Radiosity.Specs.Shadow.opacity.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t Radiosity.Specs.Shadow.drawMode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t Radiosity.Specs.Shadow.drawMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_5C198(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t Radiosity.Specs.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v3 = *(_DWORD *)(v1 + 48);
  v4 = *(void **)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v8 = v4;
  result = sub_A9DEC(v7, v6);
  *(_DWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  return result;
}

__n128 Radiosity.Specs.shadow.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  sub_5C198(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t Radiosity.Specs.radiosity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 88);
  v4 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain(v4);
  return swift_retain(v2);
}

__n128 Radiosity.Specs.radiosity.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  swift_release(*(_QWORD *)(v1 + 96));
  swift_release(*(_QWORD *)(v1 + 112));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t View.radiosity(specs:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  _OWORD v12[9];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[8];
  __int128 v22;

  v5 = a1[5];
  v17 = a1[4];
  v18 = v5;
  v6 = a1[7];
  v19 = a1[6];
  v20 = v6;
  v7 = a1[1];
  v13 = *a1;
  v14 = v7;
  v8 = a1[3];
  v15 = a1[2];
  v16 = v8;
  LOBYTE(v12[0]) = 1;
  sub_726C68((uint64_t)a1);
  State.init(wrappedValue:)(v21, v12, &type metadata for Bool);
  v9 = v21[0];
  v10 = *((_QWORD *)&v21[0] + 1);
  v21[4] = v17;
  v21[5] = v18;
  v21[6] = v19;
  v21[7] = v20;
  v21[0] = v13;
  v21[1] = v14;
  v21[2] = v15;
  v21[3] = v16;
  LOBYTE(v22) = v9;
  *((_QWORD *)&v22 + 1) = v10;
  v12[6] = v19;
  v12[7] = v20;
  v12[8] = v22;
  v12[2] = v15;
  v12[3] = v16;
  v12[4] = v17;
  v12[5] = v18;
  v12[0] = v13;
  v12[1] = v14;
  View.modifier<A>(_:)(v12, a2, &type metadata for Radiosity.ViewModifier, a3);
  return sub_EC8310((uint64_t)v21);
}

double Radiosity.Specs.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v5 = v2[5];
  v18 = v2[4];
  v19 = v5;
  v6 = v2[7];
  v20 = v2[6];
  v21 = v6;
  v7 = v2[1];
  v14 = *v2;
  v15 = v7;
  v8 = v2[3];
  v16 = v2[2];
  v17 = v8;
  sub_726C68((uint64_t)v2);
  a1(&v14);
  v9 = v19;
  a2[4] = v18;
  a2[5] = v9;
  v10 = v21;
  a2[6] = v20;
  a2[7] = v10;
  v11 = v15;
  *a2 = v14;
  a2[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a2[2] = v16;
  a2[3] = v13;
  return result;
}

__n128 sub_EC78AC()
{
  CGFloat tx;
  CGFloat ty;
  id v2;
  id v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v8.a = 1.0;
  v8.b = 0.0;
  v8.c = 0.0;
  v8.d = 1.0;
  v8.tx = 0.0;
  v8.ty = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.85, 0.85);
  v5 = *(__n128 *)&v7.c;
  v6 = *(_OWORD *)&v7.a;
  tx = v7.tx;
  ty = v7.ty;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "CGColor");

  result = v5;
  static Radiosity.Specs.containerDetailHeaderArtwork = v6;
  unk_1583F80 = v5;
  qword_1583F90 = *(_QWORD *)&tx;
  unk_1583F98 = *(_QWORD *)&ty;
  dword_1583FA0 = 1050253722;
  qword_1583FA8 = (uint64_t)v3;
  unk_1583FB0 = 0x402E000000000000;
  qword_1583FB8 = 0;
  unk_1583FC0 = 0;
  qword_1583FC8 = (uint64_t)sub_EC79A0;
  unk_1583FD0 = 0;
  qword_1583FD8 = (uint64_t)sub_EC79C8;
  unk_1583FE0 = 0;
  qword_1583FE8 = 0x4040000000000000;
  return result;
}

float sub_EC79A0(unint64_t a1)
{
  if (a1 > 2)
    return 0.42;
  else
    return flt_10B3E5C[a1];
}

double sub_EC79C8(unint64_t a1)
{
  if (a1 > 2)
    return 1.8;
  else
    return dbl_10B3E68[a1];
}

uint64_t static Radiosity.Specs.containerDetailHeaderArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_EC7B5C(&qword_15063B8, (uint64_t)&static Radiosity.Specs.containerDetailHeaderArtwork, (uint64_t)sub_EC78AC, a1);
}

__n128 sub_EC7A08()
{
  CGFloat tx;
  CGFloat ty;
  id v2;
  id v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v8.a = 1.0;
  v8.b = 0.0;
  v8.c = 0.0;
  v8.d = 1.0;
  v8.tx = 0.0;
  v8.ty = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.94, 0.94);
  v5 = *(__n128 *)&v7.c;
  v6 = *(_OWORD *)&v7.a;
  tx = v7.tx;
  ty = v7.ty;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "CGColor");

  result = v5;
  static Radiosity.Specs.nowPlaying = v6;
  unk_1584000 = v5;
  qword_1584010 = *(_QWORD *)&tx;
  unk_1584018 = *(_QWORD *)&ty;
  dword_1584020 = 1053609165;
  qword_1584028 = (uint64_t)v3;
  unk_1584030 = 0x402E000000000000;
  qword_1584038 = 0;
  unk_1584040 = 0;
  qword_1584048 = (uint64_t)variable initialization expression of VerticalToggleSlider._maxValue;
  unk_1584050 = 0;
  qword_1584058 = (uint64_t)sub_EC7AF8;
  unk_1584060 = 0;
  qword_1584068 = 0x4049000000000000;
  return result;
}

double sub_EC7AF8()
{
  return 1.5;
}

__int128 *Radiosity.Specs.nowPlaying.unsafeMutableAddressor()
{
  if (qword_15063C0 != -1)
    swift_once(&qword_15063C0, sub_EC7A08);
  return &static Radiosity.Specs.nowPlaying;
}

uint64_t static Radiosity.Specs.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_EC7B5C(&qword_15063C0, (uint64_t)&static Radiosity.Specs.nowPlaying, (uint64_t)sub_EC7A08, a1);
}

uint64_t sub_EC7B5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_EC837C(a2, a4);
}

double Radiosity.Specs.pathShadow(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  id (*v9)(double, double, double, double, double);
  uint64_t v10;
  uint64_t v13;
  double result;
  __int128 v15;

  v6 = *(_DWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = *(id (**)(double, double, double, double, double))(v4 + 72);
  v10 = *(_QWORD *)(v4 + 80);
  if ((a3 & 1) != 0)
  {
    sub_726C68(v4);
  }
  else
  {
    v13 = swift_allocObject(&unk_13CDA78, 32, 7);
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a1;
    sub_726C68(v4);
    sub_5C198((uint64_t)v9, v10);
    v9 = sub_EC83C0;
    v10 = v13;
  }
  result = *(double *)(v4 + 120);
  v15 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(_DWORD *)(a4 + 48) = v6;
  *(_QWORD *)(a4 + 56) = v7;
  *(_QWORD *)(a4 + 64) = v8;
  *(_QWORD *)(a4 + 72) = v9;
  *(_QWORD *)(a4 + 80) = v10;
  *(_OWORD *)(a4 + 88) = *(_OWORD *)(v4 + 88);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(v4 + 104);
  *(double *)(a4 + 120) = result;
  return result;
}

id sub_EC7C74(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  void *v14;
  id v15;
  id v16;
  id v17;
  __n128 v18;
  double v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[6];

  v14 = (void *)objc_opt_self(UIBezierPath);
  v15 = objc_msgSend(v14, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", a1, a2, a3, a4, a5, a7, a7);
  v16 = objc_msgSend(v15, "CGPath");

  v17 = objc_msgSend(v14, "bezierPathWithRoundedRect:cornerRadius:", a2, a3, a4, a5, a7);
  v18.n128_f64[0] = -(a7 + a7 + a6);
  v19 = UIEdgeInsets.init(edges:inset:)(15, v18);
  v21 = objc_msgSend(v14, "bezierPathWithRoundedRect:cornerRadius:", UIEdgeInsetsInsetRect(a2, a3, a4, a5, v19, v20));
  CGPathCreateMutable();
  v22 = objc_msgSend(v17, "CGPath");
  v33[0] = 0x3FF0000000000000;
  v33[1] = 0;
  v33[2] = 0;
  v33[3] = 0x3FF0000000000000;
  v33[4] = 0;
  v33[5] = 0;
  CGMutablePathRef.addPath(_:transform:)(v22, v33, v23, v24, v25, v26);

  v27 = objc_msgSend(v21, "CGPath");
  CGMutablePathRef.addPath(_:transform:)(v27, v33, v28, v29, v30, v31);

  return v16;
}

_BYTE *sub_EC7E2C(_BYTE *result, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _BYTE *v2;
  char v3;
  uint64_t v4;

  v2 = result;
  if (*result == 1)
  {
    result = a2(&v4);
    v3 = v4;
  }
  else
  {
    v3 = 0;
  }
  *v2 = v3;
  return result;
}

__n128 sub_EC7E80@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  _BYTE v9[24];

  v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  result = *(__n128 *)(v3 + 32);
  v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

_OWORD *sub_EC7EE4(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t type metadata accessor for Radiosity.UIView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Radiosity.UIView);
}

uint64_t sub_EC7F00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_EC7F14()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  Class isa;
  Class v6;

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v1 = v0;
  v2 = objc_allocWithZone((Class)CAFilter);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "initWithType:", v3);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setValue:forKey:", isa, kCAFilterInputRadius);

  v6 = Bool._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setValue:forKey:", v6, kCAFilterInputNormalizeEdges);

  return v4;
}

id sub_EC7FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20;
  _OWORD v22[8];

  v2 = v1;
  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for _UIHostingView(255, v4, *(_QWORD *)(v9 + 24), v6);
  v13 = (objc_class *)type metadata accessor for Radiosity.UIView(0, v10, v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  v14 = (void *)_UIHostingView.__allocating_init(rootView:)(v8);
  v15 = *(int *)(v3 + 36);
  LOBYTE(v3) = *(_BYTE *)(v2 + *(int *)(v3 + 40));
  v16 = *(_OWORD *)(v2 + v15 + 80);
  v22[4] = *(_OWORD *)(v2 + v15 + 64);
  v22[5] = v16;
  v17 = *(_OWORD *)(v2 + v15 + 112);
  v22[6] = *(_OWORD *)(v2 + v15 + 96);
  v22[7] = v17;
  v18 = *(_OWORD *)(v2 + v15 + 16);
  v22[0] = *(_OWORD *)(v2 + v15);
  v22[1] = v18;
  v19 = *(_OWORD *)(v2 + v15 + 48);
  v22[2] = *(_OWORD *)(v2 + v15 + 32);
  v22[3] = v19;
  sub_726C68((uint64_t)v22);
  v20 = objc_allocWithZone(v13);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(v14, v3, v22);
}

void sub_EC8108(void *a1, uint64_t a2)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[8];

  v5 = __chkstk_darwin();
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v8 + 16))(v7, v2, v5);
  dispatch thunk of _UIHostingView.rootView.setter(v7);
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  v9 = (_OWORD *)(v2 + *(int *)(a2 + 36));
  v10 = v9[5];
  v14[4] = v9[4];
  v14[5] = v10;
  v11 = v9[7];
  v14[6] = v9[6];
  v14[7] = v11;
  v12 = v9[1];
  v14[0] = *v9;
  v14[1] = v12;
  v13 = v9[3];
  v14[2] = v9[2];
  v14[3] = v13;
  sub_726C68((uint64_t)v14);
  Radiosity.UIView.specs.setter(v14);
  Radiosity.UIView.isRadiosityEnabled.setter(*(_BYTE *)(v2 + *(int *)(a2 + 40)));
}

double sub_EC81F0(void *a1)
{
  double result;

  objc_msgSend(a1, "intrinsicContentSize");
  return result;
}

void sub_EC8234(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  sub_EC73C4((uint64_t)v2);
}

void sub_EC828C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/Radiosity.swift", 27, 2, 142, 0);
  __break(1u);
}

void sub_EC82E4()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.UIView", 18, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_EC8310(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);

  sub_5C198(v2, v3);
  swift_release(v5);
  swift_release(v4);
  swift_release(v6);
  return a1;
}

uint64_t sub_EC837C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Radiosity.Specs(a2, a1);
  return a2;
}

uint64_t sub_EC83B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_EC83C0(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return sub_EC7C74(*(_QWORD *)(v5 + 16), a1, a2, a3, a4, a5, *(double *)(v5 + 24));
}

uint64_t sub_EC83CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Radiosity.ViewModifier.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Radiosity()
{
  return &type metadata for Radiosity;
}

double destroy for Radiosity.ViewModifier(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 72))
    swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));
  swift_release(*(_QWORD *)(a1 + 112));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 136)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  v9 = v5;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v14 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  swift_retain(v11);
  swift_retain(v13);
  swift_retain(v14);
  return a1;
}

uint64_t assignWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_56024(a1 + 72, qword_150E0B8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
  if (!v6)
  {
    sub_56024(a1 + 72, qword_150E0B8);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.ViewModifier()
{
  return &type metadata for Radiosity.ViewModifier;
}

uint64_t sub_EC87EC(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "\b";
  v2[1] = &unk_10B3CA8;
  v2[2] = &unk_10B3CC0;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 88);
}

double destroy for Radiosity.Specs(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 72))
    swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 112)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  v9 = v5;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v12;
  swift_retain(v11);
  swift_retain(v13);
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_56024(a1 + 72, qword_150E0B8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
  if (!v6)
  {
    sub_56024(a1 + 72, qword_150E0B8);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs()
{
  return &type metadata for Radiosity.Specs;
}

double destroy for Radiosity.Specs.Shadow(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 24))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v8)
  {
    sub_56024(a1 + 24, qword_150E0B8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_56024(a1 + 24, qword_150E0B8);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow()
{
  return &type metadata for Radiosity.Specs.Shadow;
}

double destroy for Radiosity.Specs.Shadow.DrawMode(_QWORD *a1)
{
  double result;

  if (*a1 >= 0xFFFFFFFFuLL)
    *(_QWORD *)&result = swift_release(a1[1]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI9RadiosityO5SpecsV6ShadowV8DrawModeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain(v3);
  }
  return a1;
}

unint64_t *assignWithCopy for Radiosity.Specs.Shadow.DrawMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v7 = a2[1];
      *a1 = v4;
      a1[1] = v7;
      swift_retain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v6);
  return a1;
}

_QWORD *assignWithTake for Radiosity.Specs.Shadow.DrawMode(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release(a1[1]);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow.DrawMode()
{
  return &type metadata for Radiosity.Specs.Shadow.DrawMode;
}

uint64_t initializeWithCopy for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for Radiosity.Specs.Radiosity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Radiosity()
{
  return &type metadata for Radiosity.Specs.Radiosity;
}

unint64_t sub_EC9058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E140;
  if (!qword_150E140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E088);
    sub_5C150(&qword_150E148, &qword_150E078, (uint64_t)&unk_10B3E08);
    sub_5C150(&qword_150E150, &qword_150E158, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E140);
  }
  return result;
}

uint64_t sub_EC90F4(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for Radiosity.ViewModifier);
  sub_EC9148();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_EC9148()
{
  unint64_t result;

  result = qword_150E160[0];
  if (!qword_150E160[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Radiosity.ViewModifier, &type metadata for Radiosity.ViewModifier);
    atomic_store(result, qword_150E160);
  }
  return result;
}

uint64_t sub_EC918C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10B3CC0;
    v4[2] = &unk_10B3CA8;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_EC920C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_OWORD *)(v11 + 32);
    v13 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)v10 = v13;
    *(_DWORD *)(v10 + 48) = *(_DWORD *)(v11 + 48);
    v14 = *(void **)(v11 + 56);
    *(_QWORD *)(v10 + 56) = v14;
    *(_QWORD *)(v10 + 64) = *(_QWORD *)(v11 + 64);
    v15 = *(_QWORD *)(v11 + 72);
    v16 = v14;
    if (v15)
    {
      v17 = *(_QWORD *)(v11 + 80);
      *(_QWORD *)(v10 + 72) = v15;
      *(_QWORD *)(v10 + 80) = v17;
      swift_retain(v17);
    }
    else
    {
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    }
    v18 = *(_QWORD *)(v11 + 96);
    *(_QWORD *)(v10 + 88) = *(_QWORD *)(v11 + 88);
    *(_QWORD *)(v10 + 96) = v18;
    v9 = *(_QWORD *)(v11 + 112);
    *(_QWORD *)(v10 + 104) = *(_QWORD *)(v11 + 104);
    *(_QWORD *)(v10 + 112) = v9;
    *(_QWORD *)(v10 + 120) = *(_QWORD *)(v11 + 120);
    *(_BYTE *)(v10 + 128) = *(_BYTE *)(v11 + 128);
    swift_retain(v18);
  }
  swift_retain(v9);
  return v4;
}

double sub_EC9338(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;

  if (*(_QWORD *)(v4 + 72))
    swift_release(*(_QWORD *)(v4 + 80));
  swift_release(*(_QWORD *)(v4 + 96));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v4 + 112)).n128_u64[0];
  return result;
}

uint64_t sub_EC9398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v10;
  *(_OWORD *)v7 = v9;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v11 = *(void **)(v8 + 56);
  *(_QWORD *)(v7 + 56) = v11;
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v8 + 72);
  v13 = v11;
  if (v12)
  {
    v14 = *(_QWORD *)(v8 + 80);
    *(_QWORD *)(v7 + 72) = v12;
    *(_QWORD *)(v7 + 80) = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
  }
  v15 = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = v15;
  v16 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = v16;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  swift_retain(v15);
  swift_retain(v16);
  return a1;
}

uint64_t sub_EC9474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v9 = *(void **)(v8 + 56);
  v10 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v9;
  v11 = v9;

  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v8 + 72);
  if (!*(_QWORD *)(v7 + 72))
  {
    if (v12)
    {
      v14 = *(_QWORD *)(v8 + 80);
      *(_QWORD *)(v7 + 72) = v12;
      *(_QWORD *)(v7 + 80) = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_8;
  }
  if (!v12)
  {
    sub_56024(v7 + 72, qword_150E0B8);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v7 + 72) = v12;
  *(_QWORD *)(v7 + 80) = v13;
  swift_retain();
  swift_release();
LABEL_8:
  v15 = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = v15;
  swift_retain();
  swift_release();
  v16 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = v16;
  swift_retain();
  swift_release();
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_EC95C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)(v8 + 48);
  v11 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  v12 = *(_OWORD *)(v8 + 112);
  v14 = *(_OWORD *)(v8 + 64);
  v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v7 + 112) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  *(_OWORD *)(v7 + 80) = v13;
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_EC9640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v9 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = *(_QWORD *)(v8 + 56);

  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v10 = *(_QWORD *)(v8 + 72);
  if (!*(_QWORD *)(v7 + 72))
    goto LABEL_5;
  if (!v10)
  {
    sub_56024(v7 + 72, qword_150E0B8);
LABEL_5:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = v11;
  swift_release();
LABEL_6:
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
  swift_release();
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
  swift_release();
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_EC9760(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)&stru_20.segname[((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 16];
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = (a2 - v6 + 255) >> (8 * (((v7 + 7) & 0xF8) - 127));
    if ((((_DWORD)v7 + 7) & 0xFFFFFFF8) + 129 < 4)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_EC97E8 + 4 * byte_10B3C00[v11]))();
  }
}

void sub_EC987C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * (((*(_BYTE *)(v5 + 64) + 7) & 0xF8) - 127))) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_EC9998()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0xEC9A34);
}

void sub_EC99A0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0xEC99A8);
  JUMPOUT(0xEC9A34);
}

void sub_EC99EC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0xEC9A34);
}

void sub_EC99F4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0xEC9A34);
}

uint64_t sub_EC99FC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0xEC9A08);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 56) = (a2 - 1);
LABEL_6:
    JUMPOUT(0xEC9A34);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Radiosity.View);
}

ValueMetadata *type metadata accessor for RadiosityEnabledPreferenceKey()
{
  return &type metadata for RadiosityEnabledPreferenceKey;
}

uint64_t sub_EC9A68(uint64_t a1)
{
  return swift_getWitnessTable(&unk_10B3E08, a1);
}

uint64_t objectdestroyTm_40()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

uint64_t sub_EC9AC8(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  __int128 v6;

  v2 = *a1;
  v6 = *(_OWORD *)(v1 + 144);
  v5 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(&v5, v3);
}

unint64_t sub_EC9B14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15070C8;
  if (!qword_15070C8)
  {
    v1 = objc_opt_self(CAFilter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_15070C8);
  }
  return result;
}

uint64_t *sub_EC9B50(uint64_t *a1)
{
  sub_A9DEC(*a1, a1[1]);
  return a1;
}

uint64_t *sub_EC9B7C(uint64_t *a1)
{
  sub_5C198(*a1, a1[1]);
  return a1;
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E7F0);
  return Published.init(initialValue:)(v4, v2);
}

uint64_t Reactions.StackView.Model.reaction.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10B3E80);
  v2 = swift_getKeyPath(&unk_10B3EA8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_EC9C5C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B3E80);
  v5 = swift_getKeyPath(&unk_10B3EA8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_EC9CDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10B3E80);
  v6 = swift_getKeyPath(&unk_10B3EA8);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t Reactions.StackView.Model.reaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_10B3E80);
  v6 = swift_getKeyPath(&unk_10B3EA8);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain(v2);
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*Reactions.StackView.Model.reaction.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10B3E80);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10B3EA8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t Reactions.StackView.Model.$reaction.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_150E200);
}

uint64_t Reactions.StackView.Model.$reaction.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_150E208, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_150E200);
}

void (*Reactions.StackView.Model.$reaction.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E208);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E200);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t Reactions.StackView.Model.count.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10B3EC8);
  v2 = swift_getKeyPath(&unk_10B3EF0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_EC9FB8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B3EC8);
  v5 = swift_getKeyPath(&unk_10B3EF0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_ECA038(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10B3EC8);
  v5 = swift_getKeyPath(&unk_10B3EF0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t Reactions.StackView.Model.count.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10B3EC8);
  v4 = swift_getKeyPath(&unk_10B3EF0);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*Reactions.StackView.Model.count.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10B3EC8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10B3EF0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t Reactions.StackView.Model.$count.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_150E218);
}

uint64_t Reactions.StackView.Model.$count.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_150E220, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_150E218);
}

void (*Reactions.StackView.Model.$count.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E220);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E218);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t Reactions.StackView.Model.userImage.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10B3F10);
  v2 = swift_getKeyPath(&unk_10B3F38);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_ECA2F8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10B3F10);
  v5 = swift_getKeyPath(&unk_10B3F38);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_ECA378(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10B3F10);
  v5 = swift_getKeyPath(&unk_10B3F38);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t Reactions.StackView.Model.userImage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10B3F10);
  v4 = swift_getKeyPath(&unk_10B3F38);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*Reactions.StackView.Model.userImage.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10B3F10);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10B3F38);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t Reactions.StackView.Model.$userImage.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_150CB50);
}

uint64_t Reactions.StackView.Model.$userImage.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_150E230, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_150CB50);
}

void (*Reactions.StackView.Model.$userImage.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E230);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t Reactions.StackView.Model.isReacting.getter()
{
  return sub_1EB9D4((uint64_t)&unk_10B3F58, (uint64_t)&unk_10B3F80);
}

uint64_t sub_ECA5E0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10B3F58, (uint64_t)&unk_10B3F80, a2);
}

uint64_t sub_ECA604(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10B3F58, (uint64_t)&unk_10B3F80);
}

uint64_t Reactions.StackView.Model.isReacting.setter(char a1)
{
  return sub_ECA81C(a1, (uint64_t)&unk_10B3F58, (uint64_t)&unk_10B3F80);
}

void (*Reactions.StackView.Model.isReacting.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10B3F58);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10B3F80);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t Reactions.StackView.Model.$isReacting.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_150B1B0);
}

uint64_t Reactions.StackView.Model.$isReacting.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_150E240, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_150B1B0);
}

void (*Reactions.StackView.Model.$isReacting.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E240);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.getter()
{
  return sub_1EB9D4((uint64_t)&unk_10B3FA0, (uint64_t)&unk_10B3FC8);
}

uint64_t sub_ECA7C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10B3FA0, (uint64_t)&unk_10B3FC8, a2);
}

uint64_t sub_ECA7E4(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10B3FA0, (uint64_t)&unk_10B3FC8);
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.setter(char a1)
{
  return sub_ECA81C(a1, (uint64_t)&unk_10B3FA0, (uint64_t)&unk_10B3FC8);
}

uint64_t sub_ECA81C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*Reactions.StackView.Model.hasAnimatedBackground.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10B3FA0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10B3FC8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_150B1B0);
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_150E240, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_150B1B0);
}

void (*Reactions.StackView.Model.$hasAnimatedBackground.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E240);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t Reactions.StackView.Model.__allocating_init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(a1, a2, a3, a4, a5);
  return v11;
}

uint64_t Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD v35[2];
  _QWORD v36[3];

  v34 = a5;
  v32 = a3;
  v33 = a4;
  v30 = a1;
  v31 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E200);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v36[0] = 0;
  v36[1] = 0;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E7F0);
  Published.init(initialValue:)(v36, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  v18 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v36[0] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E70);
  Published.init(initialValue:)(v36, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v9);
  v20 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  LOBYTE(v36[0]) = 0;
  Published.init(initialValue:)(v36, &type metadata for Bool);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v21(v20, v8, v6);
  v22 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  LOBYTE(v36[0]) = 1;
  Published.init(initialValue:)(v36, &type metadata for Bool);
  v21(v22, v8, v6);
  v23 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant;
  *(_BYTE *)(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) = 0;
  v24 = swift_beginAccess(v17, v36, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v17, v13, v24);
  v35[0] = v30;
  v35[1] = v31;
  Published.init(initialValue:)(v35, v28);
  swift_endAccess(v36);
  swift_beginAccess(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, v36, 33, 0);
  v35[0] = v32;
  Published.init(initialValue:)(v35, &type metadata for Int);
  swift_endAccess(v36);
  KeyPath = swift_getKeyPath(&unk_10B3F10);
  v26 = swift_getKeyPath(&unk_10B3F38);
  v36[0] = v33;
  swift_retain(v5);
  static Published.subscript.setter(v36, v5, KeyPath, v26);
  *(_BYTE *)(v5 + v23) = v34;
  return v5;
}

uint64_t Reactions.StackView.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E200);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E218);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return v0;
}

double Reactions.StackView.Model.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  double result;

  v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E200);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E218);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B1B0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_ECAF28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Reactions.StackView.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of Reactions.StackView.model(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Reactions.StackView.Model(0);
  v3 = sub_4DD24(&qword_150E250, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t type metadata accessor for Reactions.StackView.Model(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150E330, (uint64_t)&nominal type descriptor for Reactions.StackView.Model);
}

uint64_t Reactions.StackView.model.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

void Reactions.StackView.model.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t Reactions.StackView.$model.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = type metadata accessor for Reactions.StackView.Model(0);
  v4 = sub_4DD24(&qword_150E250, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  return ObservedObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t Reactions.StackView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = (int *)type metadata accessor for Reactions.StackView(0);
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath(&unk_10B3FE8);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  *v7 = swift_getKeyPath(&unk_10B4018);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (uint64_t *)((char *)a2 + v4[7]);
  *v9 = swift_getKeyPath(&unk_10B4048);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = type metadata accessor for Reactions.StackView.Model(0);
  v12 = sub_4DD24(&qword_150E250, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  result = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  *a2 = result;
  a2[1] = v14;
  return result;
}

uint64_t type metadata accessor for Reactions.StackView(uint64_t a1)
{
  return sub_6345C(a1, qword_150E2C8, (uint64_t)&nominal type descriptor for Reactions.StackView);
}

uint64_t sub_ECB174(uint64_t a1)
{
  return EnvironmentValues.colorScheme.getter(a1);
}

uint64_t Reactions.StackView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150E258);
  __chkstk_darwin();
  v4 = (double *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E260);
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_15063D0 != -1)
    swift_once(&qword_15063D0, sub_ECD600);
  v8 = *(double *)&qword_150E1F0;
  v9 = sub_ECB33C();
  v10 = v8 - v9;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v9);
  v4[1] = v10;
  *((_BYTE *)v4 + 16) = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E268);
  sub_ECB4E4(v1, (double *)((char *)v4 + *(int *)(v11 + 44)));
  v13 = static Edge.Set.all.getter(v12);
  v14 = v13;
  v15 = EdgeInsets.init(_all:)(v13, -2.0);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  sub_5C238((uint64_t)v4, (uint64_t)v7, &qword_150E258);
  v22 = &v7[*(int *)(v5 + 36)];
  *v22 = v14;
  *((double *)v22 + 1) = v15;
  *((_QWORD *)v22 + 2) = v17;
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v21;
  v22[40] = 0;
  sub_56024((uint64_t)v4, &qword_150E258);
  sub_5C238((uint64_t)v7, a1, &qword_150E260);
  return sub_56024((uint64_t)v7, &qword_150E260);
}

double sub_ECB33C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1507140);
  __chkstk_darwin();
  v1 = (char *)&v13 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_15063C8 != -1)
    swift_once(&qword_15063C8, sub_ECD5F0);
  v6 = *(double *)&qword_150E1E8;
  type metadata accessor for Reactions.StackView(0);
  sub_E42DEC((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v7 = (void *)UIContentSizeCategory.init(_:)(v1);
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v7);
  v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v9, "scaledValueForValue:compatibleWithTraitCollection:", v8, v6);
  v11 = v10;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

void sub_ECB4E4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  void (*v15)(__n128);
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD v59[2];

  v55 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E518);
  __chkstk_darwin();
  v56 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v47 - v4);
  v49 = *(_QWORD *)(type metadata accessor for Reactions.StackView(0) - 8);
  v6 = *(_QWORD *)(v49 + 64);
  __chkstk_darwin();
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E520);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v51 = (char *)&v47 - v9;
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  __chkstk_darwin();
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = __chkstk_darwin();
  v50 = a1;
  v58 = v14;
  v15 = *(void (**)(__n128))(v14 + 104);
  v57 = (char *)&v47 - v16;
  v15(v13);
  KeyPath = swift_getKeyPath(&unk_10B3EC8);
  swift_getKeyPath(&unk_10B3EF0);
  swift_retain();
  static Published.subscript.getter(v59, v18, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v19 = v59[0];
  if (v59[0] >= 3)
    v19 = 3;
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    v59[0] = 0;
    v59[1] = v21 & ~(v21 >> 63);
    v48 = swift_getKeyPath(&unk_10B4170);
    v22 = v50;
    sub_ECE4EC(v50, (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v23 = v57;
    v24 = v58;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v12, v57, v10);
    v25 = *(unsigned __int8 *)(v49 + 80);
    v26 = (v25 + 16) & ~v25;
    v27 = *(unsigned __int8 *)(v24 + 80);
    v28 = (v6 + v27 + v26) & ~v27;
    v29 = swift_allocObject(&unk_13CE040, v28 + v11, v25 | v27 | 7);
    sub_ECE6E0((uint64_t)v7, v29 + v26);
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v29 + v28, v12, v10);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150AE38);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E528);
    v32 = sub_ECE79C();
    v33 = sub_ECE808();
    v34 = v51;
    v35 = ForEach<>.init(_:id:content:)(v59, v48, sub_ECE724, v29, v30, v31, v32, &protocol witness table for Int, v33);
    *v5 = static Alignment.center.getter(v35);
    v5[1] = v36;
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E560);
    sub_ECC428(v22, v23, (uint64_t)v5 + *(int *)(v37 + 44));
    v50 = v10;
    v38 = v34;
    v39 = v52;
    v40 = v53;
    v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v42 = v54;
    v41(v53, v38, v54);
    v43 = v56;
    sub_5C238((uint64_t)v5, v56, &qword_150E518);
    v44 = v55;
    *v55 = 0;
    *((_BYTE *)v44 + 8) = 1;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E568);
    v41((char *)v44 + *(int *)(v45 + 48), v40, v42);
    sub_5C238(v43, (uint64_t)v44 + *(int *)(v45 + 64), &qword_150E518);
    sub_56024((uint64_t)v5, &qword_150E518);
    v46 = *(void (**)(char *, uint64_t))(v39 + 8);
    v46(v38, v42);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v50);
    sub_56024(v43, &qword_150E518);
    v46(v40, v42);
  }
}

uint64_t sub_ECB920@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v31 = a3;
  v5 = type metadata accessor for ScaleTransition(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E570);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v30 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E548);
  __chkstk_darwin();
  v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v16 = static Alignment.center.getter(v17);
  v16[1] = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E618);
  v20 = sub_ECBB64(a1, a2, (uint64_t)v16 + *(int *)(v19 + 44));
  v21 = static UnitPoint.center.getter(v20);
  ScaleTransition.init(_:anchor:)(0.00001, v21, v22);
  v23 = static Animation.easeInOut(duration:)(0.25);
  v24 = sub_4DD24(&qword_150E5B8, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
  Transition.animation(_:)(v23, v5, v24);
  v25 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v25);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v14, v9);
  v32[0] = v5;
  v32[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v27 = AnyTransition.init<A>(_:)(v12, v9, OpaqueTypeConformance2);
  v28 = v31;
  sub_5C238((uint64_t)v16, v31, &qword_150E548);
  *(_QWORD *)(v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150E528) + 36)) = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return sub_56024((uint64_t)v16, &qword_150E548);
}

uint64_t sub_ECBB64@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;

  v61 = a2;
  v63 = a3;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E578);
  __chkstk_darwin();
  v59 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E580);
  __chkstk_darwin();
  v56 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E620);
  __chkstk_darwin();
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v60 = (uint64_t)&v48 - v8;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E590);
  __chkstk_darwin();
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E598);
  __chkstk_darwin();
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E5A0);
  __chkstk_darwin();
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v65 = (uint64_t)&v48 - v18;
  v20 = static Color.clear.getter(v19);
  v53 = a1;
  v21 = sub_ECB33C() + 4.0;
  v22 = sub_ECB33C() + 4.0;
  v24 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(&v67, *(_QWORD *)&v21, 0, *(_QWORD *)&v22, 0, v24, v25);
  v26 = v67;
  LOBYTE(v21) = v68;
  v51 = v69;
  v50 = v70;
  v49 = v71;
  v48 = v72;
  v27 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BlendMode.destinationOut(_:), v64);
  v54 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v54(v15, v13, v27);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  sub_5C238((uint64_t)v15, (uint64_t)v10, &qword_150E598);
  *(_WORD *)&v10[*(int *)(v55 + 56)] = 256;
  sub_5C238((uint64_t)v10, (uint64_t)&v17[*(int *)(v52 + 36)], &qword_150E590);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v26;
  v17[16] = LOBYTE(v21);
  *((_QWORD *)v17 + 3) = v51;
  v17[32] = v50;
  v28 = v48;
  *((_QWORD *)v17 + 5) = v49;
  *((_QWORD *)v17 + 6) = v28;
  swift_retain();
  sub_56024((uint64_t)v10, &qword_150E590);
  sub_56024((uint64_t)v15, &qword_150E598);
  swift_release();
  v29 = sub_5C090((uint64_t)v17, v65, &qword_150E5A0);
  v30 = static Color.clear.getter(v29);
  v31 = sub_ECB33C();
  v32 = sub_ECB33C();
  v34 = static Alignment.center.getter(v33);
  _FrameLayout.init(width:height:alignment:)(&v73, *(_QWORD *)&v31, 0, *(_QWORD *)&v32, 0, v34, v35);
  v55 = v73;
  LODWORD(v52) = v74;
  v36 = v75;
  LOBYTE(v21) = v76;
  v37 = v77;
  v51 = v78;
  sub_ECC150(&v66);
  v38 = v66;
  v39 = v56;
  v54((char *)v56 + *(int *)(v58 + 36), v61, v64);
  *v39 = v38;
  v40 = v59;
  sub_5C238((uint64_t)v39, v59, &qword_150E580);
  *(_WORD *)(v40 + *(int *)(v62 + 56)) = 256;
  sub_5C238(v40, (uint64_t)&v7[*(int *)(v57 + 36)], &qword_150E578);
  v41 = v55;
  *(_QWORD *)v7 = v30;
  *((_QWORD *)v7 + 1) = v41;
  v7[16] = v52;
  *((_QWORD *)v7 + 3) = v36;
  v7[32] = LOBYTE(v21);
  v42 = v51;
  *((_QWORD *)v7 + 5) = v37;
  *((_QWORD *)v7 + 6) = v42;
  swift_retain();
  sub_56024(v40, &qword_150E578);
  sub_56024((uint64_t)v39, &qword_150E580);
  swift_release();
  v43 = v60;
  sub_5C090((uint64_t)v7, v60, &qword_150E620);
  v44 = v65;
  sub_5C238(v65, (uint64_t)v17, &qword_150E5A0);
  sub_5C238(v43, (uint64_t)v7, &qword_150E620);
  v45 = v63;
  sub_5C238((uint64_t)v17, v63, &qword_150E5A0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E628);
  sub_5C238((uint64_t)v7, v45 + *(int *)(v46 + 48), &qword_150E620);
  sub_56024(v43, &qword_150E620);
  sub_56024(v44, &qword_150E5A0);
  sub_56024((uint64_t)v7, &qword_150E620);
  return sub_56024((uint64_t)v17, &qword_150E5A0);
}

uint64_t sub_ECC150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v2 = v1;
  v26 = a1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E5C0);
  __chkstk_darwin();
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorSchemeContrast(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorScheme(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_E42FAC((uint64_t)v12);
  sub_E436F4((uint64_t)v8);
  v13 = &v4[*(int *)(v25 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v4, v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v8, v5);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v4, v9);
  if (v14 == enum case for ColorScheme.light(_:))
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v13, v5) == enum case for ColorSchemeContrast.increased(_:))
    {
      v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
      v27 = Color.init(_:)(v15);
      v16 = &type metadata for Color;
      v17 = &protocol witness table for Color;
LABEL_7:
      v18 = AnyShapeStyle.init<A>(_:)(&v27, v16, v17);
      *v26 = v18;
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v4, v9);
    }
  }
  else if (v14 == enum case for ColorScheme.dark(_:)
         && (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v13, v5) == enum case for ColorSchemeContrast.increased(_:))
  {
    LODWORD(v27) = static HierarchicalShapeStyle.quinary.getter();
    v16 = &type metadata for HierarchicalShapeStyle;
    v17 = &protocol witness table for HierarchicalShapeStyle;
    goto LABEL_7;
  }
  if (*(_BYTE *)(*(_QWORD *)(v2 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) == 1)
  {
    LODWORD(v27) = static HierarchicalShapeStyle.quaternary.getter();
    v20 = &type metadata for HierarchicalShapeStyle;
    v21 = &protocol witness table for HierarchicalShapeStyle;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v27 = Color.init(_:)(v22);
    v20 = &type metadata for Color;
    v21 = &protocol witness table for Color;
  }
  v23 = AnyShapeStyle.init<A>(_:)(&v27, v20, v21);
  *v26 = v23;
  return sub_56024((uint64_t)v4, &qword_150E5C0);
}

uint64_t sub_ECC428@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  char *v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t OpaqueTypeConformance2;
  uint64_t v93;
  double v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE v145[7];
  char v146;
  _BYTE v147[7];
  char v148;
  char v149;
  int v150;
  __int16 v151;
  char v152;
  _BYTE v153[147];
  _QWORD v154[19];
  _QWORD v155[2];
  __int16 v156;
  int v157;
  __int16 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  _BYTE v164[7];
  uint64_t v165;
  uint64_t v166;
  char v167;
  _BYTE v168[7];
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  _BYTE v173[7];
  uint64_t v174;
  char v175;
  _BYTE v176[7];
  __int128 v177;
  uint64_t v178;
  unsigned __int8 v179;
  uint64_t v180;
  unsigned __int8 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  unsigned __int8 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  char v193;
  __int128 v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unsigned __int8 v201;

  v133 = a2;
  v136 = a3;
  v117 = type metadata accessor for ScaleTransition(0);
  v114 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin();
  v113 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E570);
  v118 = *(_QWORD *)(v5 - 8);
  v119 = v5;
  __chkstk_darwin();
  v115 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v116 = (char *)&v109 - v7;
  v8 = type metadata accessor for Image.ResizingMode(0);
  v111 = *(_QWORD *)(v8 - 8);
  v112 = v8;
  __chkstk_darwin();
  v110 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E578);
  __chkstk_darwin();
  v142 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E580);
  __chkstk_darwin();
  v141 = (uint64_t *)((char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509DD8);
  __chkstk_darwin();
  v129 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E588);
  __chkstk_darwin();
  v135 = (uint64_t)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v109 - v14;
  __chkstk_darwin();
  v137 = (char *)&v109 - v16;
  v139 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_150E590);
  __chkstk_darwin();
  v18 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for BlendMode(0);
  v19 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin();
  v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E598);
  __chkstk_darwin();
  v23 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E5A0);
  __chkstk_darwin();
  v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v143 = (uint64_t)&v109 - v26;
  v28 = static Color.clear.getter(v27);
  v144 = a1;
  v29 = sub_ECB33C() + 4.0;
  v30 = sub_ECB33C() + 4.0;
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v178, *(_QWORD *)&v29, 0, *(_QWORD *)&v30, 0, v32, v33);
  v34 = v178;
  LODWORD(v134) = v179;
  v127 = v180;
  LODWORD(v126) = v181;
  v124 = v183;
  v125 = v182;
  v35 = v140;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for BlendMode.destinationOut(_:), v140);
  v128 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v128(v23, v21, v35);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v35);
  sub_5C238((uint64_t)v23, (uint64_t)v18, &qword_150E598);
  *(_WORD *)&v18[v139[14]] = 256;
  sub_5C238((uint64_t)v18, (uint64_t)&v25[*(int *)(v138 + 36)], &qword_150E590);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v34;
  v25[16] = (char)v134;
  *((_QWORD *)v25 + 3) = v127;
  v25[32] = v126;
  v36 = v124;
  *((_QWORD *)v25 + 5) = v125;
  *((_QWORD *)v25 + 6) = v36;
  swift_retain();
  sub_56024((uint64_t)v18, &qword_150E590);
  sub_56024((uint64_t)v23, &qword_150E598);
  swift_release();
  v134 = v25;
  sub_5C090((uint64_t)v25, v143, &qword_150E5A0);
  sub_ECD018((uint64_t)&v195);
  v139 = v195;
  v126 = v197;
  v127 = v196;
  v124 = v199;
  v125 = v198;
  v123 = v200;
  LODWORD(v138) = v201;
  v37 = sub_ECD2EC();
  v38 = type metadata accessor for Font.Design(0);
  v39 = (uint64_t)v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v129, 1, 1, v38);
  v122 = static Font.system(size:weight:design:)(0, 1, v39, v37);
  sub_56024(v39, &qword_1509DD8);
  KeyPath = swift_getKeyPath(&unk_10B4188);
  v41 = sub_ECB33C();
  v42 = sub_ECB33C();
  v44 = static Alignment.center.getter(v43);
  _FrameLayout.init(width:height:alignment:)(&v184, *(_QWORD *)&v41, 0, *(_QWORD *)&v42, 0, v44, v45);
  v46 = v184;
  LOBYTE(v19) = v185;
  v47 = v186;
  LODWORD(v129) = v187;
  v48 = v188;
  v121 = v189;
  sub_ECC150((uint64_t *)&v195);
  v49 = (uint64_t)v195;
  v50 = v141;
  v128((char *)v141 + *(int *)(v131 + 36), (char *)v133, v140);
  *v50 = v49;
  v51 = v142;
  sub_5C238((uint64_t)v50, v142, &qword_150E580);
  *(_WORD *)(v51 + *(int *)(v132 + 56)) = 256;
  sub_5C238(v51, (uint64_t)&v15[*(int *)(v130 + 36)], &qword_150E578);
  v52 = (uint64_t)v139;
  v54 = v126;
  v53 = v127;
  *(_QWORD *)v15 = v139;
  *((_QWORD *)v15 + 1) = v53;
  v56 = v124;
  v55 = v125;
  *((_QWORD *)v15 + 2) = v54;
  *((_QWORD *)v15 + 3) = v55;
  v57 = v122;
  v58 = v123;
  *((_QWORD *)v15 + 4) = v56;
  *((_QWORD *)v15 + 5) = v58;
  v59 = v138;
  v15[48] = v138;
  v120 = KeyPath;
  *((_QWORD *)v15 + 7) = KeyPath;
  *((_QWORD *)v15 + 8) = v57;
  *((_QWORD *)v15 + 9) = v46;
  v15[80] = v19;
  *((_QWORD *)v15 + 11) = v47;
  v15[96] = (char)v129;
  v60 = (uint64_t)v137;
  v61 = v121;
  *((_QWORD *)v15 + 13) = v48;
  *((_QWORD *)v15 + 14) = v61;
  v62 = v53;
  LOBYTE(v46) = v54;
  v63 = v55;
  v64 = v56;
  sub_ECE8AC(v52, v53, v54, v55, v56, v58, v59);
  swift_retain();
  swift_retain();
  sub_56024(v142, &qword_150E578);
  sub_56024((uint64_t)v141, &qword_150E580);
  sub_ECE944((uint64_t)v139, v62, v46, v63, v64, v58, v138);
  swift_release();
  swift_release();
  v65 = v60;
  sub_5C090((uint64_t)v15, v60, &qword_150E588);
  v66 = swift_getKeyPath(&unk_10B3F10);
  swift_getKeyPath(&unk_10B3F38);
  swift_retain();
  static Published.subscript.getter(&v195, v67, v66);
  swift_release();
  swift_release();
  swift_release();
  v68 = v195;
  if (!v195)
    goto LABEL_5;
  v69 = swift_getKeyPath(&unk_10B3F58);
  swift_getKeyPath(&unk_10B3F80);
  swift_retain();
  static Published.subscript.getter(&v195, v70, v69);
  swift_release();
  swift_release();
  swift_release();
  if (v195 != 1)
  {

LABEL_5:
    sub_1EA330((uint64_t)v155);
    goto LABEL_6;
  }
  v71 = v68;
  v72 = Image.init(uiImage:)(v71);
  v74 = v110;
  v73 = v111;
  v75 = v112;
  (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v110, enum case for Image.ResizingMode.stretch(_:), v112);
  v142 = Image.resizable(capInsets:resizingMode:)(v74, v72, 0.0, 0.0, 0.0, 0.0);
  v76 = swift_release();
  v77 = (*(uint64_t (**)(char *, uint64_t, __n128))(v73 + 8))(v74, v75, v76);
  v78 = static Alignment.center.getter(v77);
  v140 = v79;
  v141 = (uint64_t *)v78;
  static Color.black.getter(v78);
  v139 = (int *)Color.opacity(_:)(0.08);
  swift_release();
  v81 = static UnitPoint.center.getter(v80);
  v82 = v113;
  ScaleTransition.init(_:anchor:)(0.00001, v81, v83);
  v84 = static Animation.easeInOut(duration:)(0.25);
  v85 = sub_4DD24(&qword_150E5B8, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
  v87 = v116;
  v86 = v117;
  Transition.animation(_:)(v84, v117, v85);
  v88 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v82, v86, v88);
  v90 = v118;
  v89 = v119;
  v91 = v115;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v87, v119);
  v195 = (int *)v86;
  v196 = v85;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v195, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v93 = AnyTransition.init<A>(_:)(v91, v89, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v89);
  v94 = sub_ECB33C();
  v95 = sub_ECB33C();
  v97 = static Alignment.center.getter(v96);
  _FrameLayout.init(width:height:alignment:)(&v190, *(_QWORD *)&v94, 0, *(_QWORD *)&v95, 0, v97, v98);
  v99 = v190;
  LOBYTE(v94) = v191;
  v100 = v192;
  v101 = v193;

  v152 = 1;
  v149 = 1;
  v148 = LOBYTE(v94);
  v146 = v101;
  v155[0] = v142;
  v155[1] = 0;
  v156 = 257;
  v157 = v150;
  v158 = v151;
  v159 = (uint64_t)v141;
  v160 = v140;
  v161 = (uint64_t)v139;
  v162 = 0x3FE0000000000000;
  v163 = 0;
  *(_DWORD *)&v164[3] = *(_DWORD *)((char *)v154 + 3);
  *(_DWORD *)v164 = v154[0];
  v165 = 0;
  v166 = 0;
  v167 = 1;
  *(_DWORD *)v168 = *(_DWORD *)v153;
  *(_DWORD *)&v168[3] = *(_DWORD *)&v153[3];
  v169 = 0x3FF0000000000000;
  v170 = v93;
  v65 = (uint64_t)v137;
  v171 = v99;
  v172 = LOBYTE(v94);
  *(_DWORD *)v173 = *(_DWORD *)v147;
  *(_DWORD *)&v173[3] = *(_DWORD *)&v147[3];
  v174 = v100;
  v175 = v101;
  *(_DWORD *)&v176[3] = *(_DWORD *)&v145[3];
  *(_DWORD *)v176 = *(_DWORD *)v145;
  v177 = v194;
  UIScreen.Dimensions.size.getter(*(double *)&v194);
LABEL_6:
  sub_5C090((uint64_t)v155, (uint64_t)&v195, &qword_150E5A8);
  v102 = v143;
  v103 = (uint64_t)v134;
  sub_5C238(v143, (uint64_t)v134, &qword_150E5A0);
  v104 = v135;
  sub_5C238(v65, v135, &qword_150E588);
  sub_5C090((uint64_t)&v195, (uint64_t)v153, &qword_150E5A8);
  v105 = v136;
  sub_5C238(v103, v136, &qword_150E5A0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E5B0);
  sub_5C238(v104, v105 + *(int *)(v106 + 48), &qword_150E588);
  v107 = v105 + *(int *)(v106 + 64);
  sub_5C090((uint64_t)v153, (uint64_t)v154, &qword_150E5A8);
  sub_5C090((uint64_t)v154, v107, &qword_150E5A8);
  sub_1EADE4(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_ECE9C0);
  sub_56024(v65, &qword_150E588);
  sub_56024(v102, &qword_150E5A0);
  sub_5C090((uint64_t)v153, (uint64_t)v155, &qword_150E5A8);
  sub_1EADE4(v155, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_ECE9F8);
  sub_56024(v104, &qword_150E588);
  return sub_56024(v103, &qword_150E5A0);
}

double sub_ECD018@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  double result;
  __int128 v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _OWORD v49[3];
  char v50;

  v2 = type metadata accessor for ScaleTransition(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v41 - v6;
  KeyPath = swift_getKeyPath(&unk_10B3E80);
  swift_getKeyPath(&unk_10B3EA8);
  swift_retain();
  static Published.subscript.getter(v49, v9, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  if (*((_QWORD *)&v49[0] + 1))
  {
    v10 = sub_DD0BF8();
    v11 = Text.init<A>(_:)(v49, &type metadata for String, v10);
    v13 = v12;
    v15 = v14;
    v17 = v16 & 1;
    v18 = static Animation.easeInOut(duration:)(0.25);
    v19 = static UnitPoint.center.getter(v18);
    ScaleTransition.init(_:anchor:)(0.00001, v19, v20);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
    v21 = sub_4DD24(&qword_150E5B8, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
    v22 = AnyTransition.init<A>(_:)(v5, v2, v21);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    v42 = v11;
    v43 = v13;
    v44 = v17;
    v45 = v15;
    v46 = v18;
    v47 = v22;
    v48 = 0;
  }
  else
  {
    v23 = Image.init(_internalSystemName:)(0xD000000000000013, 0x800000000110F690);
    v24 = swift_getKeyPath(&unk_10B3FA0);
    swift_getKeyPath(&unk_10B3FC8);
    swift_retain();
    static Published.subscript.getter(v49, v25, v24);
    swift_release();
    swift_release();
    v27 = swift_release();
    if (LOBYTE(v49[0]) == 1)
      v28 = static Color.primary.getter(v27);
    else
      v28 = static Color.accentColor.getter(v26);
    v30 = v28;
    v31 = static Font.callout.getter(v29);
    v32 = swift_getKeyPath(&unk_10B4188);
    v42 = v23;
    v43 = v30;
    v44 = v32;
    v45 = v31;
    v46 = 0;
    v47 = 0;
    v48 = 1;
  }
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E5C8);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E5D0);
  v35 = sub_ECEA30();
  v36 = sub_ECEACC();
  _ConditionalContent<>.init(storage:)(&v42, v33, v34, v35, v36);
  result = *(double *)v49;
  v38 = v49[1];
  v39 = v49[2];
  v40 = v50;
  *(_OWORD *)a1 = v49[0];
  *(_OWORD *)(a1 + 16) = v38;
  *(_OWORD *)(a1 + 32) = v39;
  *(_BYTE *)(a1 + 48) = v40;
  return result;
}

double sub_ECD2EC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  double v9;
  double v10;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1507140);
  __chkstk_darwin();
  v1 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_E42DEC((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v6 = (void *)UIContentSizeCategory.init(_:)(v1);
  v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v6);
  v8 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v8, "scaledValueForValue:compatibleWithTraitCollection:", v7, 14.0);
  v10 = v9;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

double static Reactions.StackView.Specs.width(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507140);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_15063C8 != -1)
    swift_once(&qword_15063C8, sub_ECD5F0);
  v5 = *(double *)&qword_150E1E8;
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  v8 = (void *)UIContentSizeCategory.init(_:)(v4);
  v9 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v8);
  v10 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v10, "scaledValueForValue:compatibleWithTraitCollection:", v9, v5);
  v12 = v11;

  if (qword_15063D0 != -1)
    swift_once(&qword_15063D0, sub_ECD600);
  return v12 + *(double *)&qword_150E1F0 * 3.0;
}

void sub_ECD5F0()
{
  qword_150E1E8 = 0x403C000000000000;
}

void sub_ECD600()
{
  qword_150E1F0 = 0x4014000000000000;
}

uint64_t sub_ECD610(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Reactions.StackView.body>>, 1);
}

ValueMetadata *type metadata accessor for Reactions()
{
  return &type metadata for Reactions;
}

uint64_t *initializeBufferWithCopyOfBuffer for Reactions.StackView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
    v21 = a3[7];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = v22;
      v27 = v24;
      v28 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = v22;
      v27 = v24;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

double destroy for Reactions.StackView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_release();
  v4 = a1 + a2[5];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *initializeWithCopy for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  return a1;
}

_QWORD *assignWithCopy for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_56024((uint64_t)a1 + v6, &qword_15065E8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_56024((uint64_t)a1 + v12, (uint64_t *)&unk_1506550);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_56024((uint64_t)a1 + v18, &qword_1506570);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

_OWORD *initializeWithTake for Reactions.StackView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_56024((uint64_t)a1 + v7, &qword_15065E8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_56024((uint64_t)a1 + v12, (uint64_t *)&unk_1506550);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    sub_56024((uint64_t)a1 + v17, &qword_1506570);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_ECE054);
}

uint64_t sub_ECE054(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BA60);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_ECE130);
}

uint64_t sub_ECE130(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BA60);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B668);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_ECE1FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = &unk_10B4128;
  sub_4F1A3C(319, (unint64_t *)&unk_150BAD0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_4F1A3C(319, (unint64_t *)&unk_150A550, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_4F1A3C(319, &qword_150B6E8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_ECE2D8()
{
  return type metadata accessor for Reactions.StackView.Model(0);
}

void sub_ECE2E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  void *v13;

  sub_AEEF4(319, &qword_150E340, &qword_150E7F0);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1ECFF0(319, (unint64_t *)&unk_150E348, (uint64_t)&type metadata for Int);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_AEEF4(319, (unint64_t *)&unk_150CCC0, &qword_1506E70);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1ECFF0(319, (unint64_t *)&qword_150B308, (uint64_t)&type metadata for Bool);
        if (v9 <= 0x3F)
        {
          v11 = *(_QWORD *)(v8 - 8) + 64;
          v12 = v11;
          v13 = &unk_10B4148;
          swift_updateClassMetadata2(a1, 256, 6, v10, a1 + 80);
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for Reactions.StackView.Specs()
{
  return &type metadata for Reactions.StackView.Specs;
}

unint64_t sub_ECE3FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E4F8;
  if (!qword_150E4F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E500);
    sub_ECE468();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E4F8);
  }
  return result;
}

unint64_t sub_ECE468()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E508;
  if (!qword_150E508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E260);
    sub_5C150(&qword_150E510, &qword_150E258, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E508);
  }
  return result;
}

uint64_t sub_ECE4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_ECE530()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for Reactions.StackView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v23 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  swift_release();
  v10 = v0 + v4 + v1[5];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15065E8);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }
  v13 = v9 + v1[6];
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release();
  }
  v16 = v9 + v1[7];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506570);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    v19 = swift_release();
  }
  v20 = (v4 + v23 + v7) & ~v7;
  v21 = v20 + v8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v20, v5, v19);
  return swift_deallocObject(v0, v21, v3 | v7 | 7);
}

uint64_t sub_ECE6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_ECE724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Reactions.StackView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BlendMode(0) - 8) + 80);
  return sub_ECB920(v1 + v4, (char *)(v1 + ((v4 + v5 + v6) & ~v6)), a1);
}

unint64_t sub_ECE79C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E530;
  if (!qword_150E530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150AE38);
    sub_E6549C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_150E530);
  }
  return result;
}

unint64_t sub_ECE808()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E538;
  if (!qword_150E538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E528);
    sub_5C150(&qword_150E540, &qword_150E548, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_5C150(&qword_150E550, &qword_150E558, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E538);
  }
  return result;
}

void sub_ECE8AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    sub_AF8D8(a1, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
}

double sub_ECE944(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  double result;

  if ((a7 & 1) != 0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_AF8E8(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_ECE9C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (result)
  {
    swift_retain(result);
    swift_retain(a6);
    return swift_retain(a13);
  }
  return result;
}

double sub_ECE9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  double result;

  if (a1)
  {
    swift_release(a1);
    swift_release(a6);
    *(_QWORD *)&result = swift_release(a13).n128_u64[0];
  }
  return result;
}

unint64_t sub_ECEA30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E5D8;
  if (!qword_150E5D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E5C8);
    sub_5C150(&qword_150E5E0, &qword_150E5E8, (uint64_t)&protocol conformance descriptor for _AnimationView<A>);
    sub_5C150(&qword_150E550, &qword_150E558, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E5D8);
  }
  return result;
}

unint64_t sub_ECEACC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E5F0;
  if (!qword_150E5F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E5D0);
    sub_ECEB50();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E5F0);
  }
  return result;
}

unint64_t sub_ECEB50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E5F8;
  if (!qword_150E5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150E600);
    sub_5C150(&qword_150E608, &qword_150E610, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150E5F8);
  }
  return result;
}

id sub_ECECB8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  objc_super v14;
  _QWORD v15[3];
  uint64_t v16;

  sub_ED18E0(a1, (uint64_t)v15);
  v5 = v16;
  if (v16)
  {
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = __chkstk_darwin();
    v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v6 + 16))(v9, v7);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1(v15);
  }
  else
  {
    v10 = 0;
  }
  v11 = (objc_class *)type metadata accessor for SliderView.PanGestureRecognizer();
  v14.receiver = v2;
  v14.super_class = v11;
  v12 = objc_msgSendSuper2(&v14, "initWithTarget:action:", v10, a2);
  swift_unknownObjectRelease(v10);
  sub_DD4844(a1);
  return v12;
}

id sub_ECEE30()
{
  return sub_15A49C(0, type metadata accessor for SliderView.PanGestureRecognizer);
}

void sub_ECEE40()
{
  static SliderView.Specs.barHeight = Int.seconds.getter(7);
}

uint64_t *SliderView.Specs.barHeight.unsafeMutableAddressor()
{
  if (qword_15063D8 != -1)
    swift_once(&qword_15063D8, sub_ECEE40);
  return &static SliderView.Specs.barHeight;
}

double static SliderView.Specs.barHeight.getter()
{
  return sub_DC693C(&qword_15063D8, (uint64_t)&static SliderView.Specs.barHeight, (uint64_t)sub_ECEE40);
}

void sub_ECEEBC()
{
  static SliderView.Specs.expandedBarHeight = Int.seconds.getter(16);
}

uint64_t *SliderView.Specs.expandedBarHeight.unsafeMutableAddressor()
{
  if (qword_15063E0 != -1)
    swift_once(&qword_15063E0, sub_ECEEBC);
  return &static SliderView.Specs.expandedBarHeight;
}

double static SliderView.Specs.expandedBarHeight.getter()
{
  return sub_DC693C(&qword_15063E0, (uint64_t)&static SliderView.Specs.expandedBarHeight, (uint64_t)sub_ECEEBC);
}

CGFloat sub_ECEF38()
{
  CGFloat result;
  CGAffineTransform v1;

  CGAffineTransformMakeScale(&v1, 1.05, 1.05);
  result = v1.a;
  *(CGAffineTransform *)static SliderView.Specs.expandedTransform = v1;
  return result;
}

char *SliderView.Specs.expandedTransform.unsafeMutableAddressor()
{
  if (qword_15063E8 != -1)
    swift_once(&qword_15063E8, sub_ECEF38);
  return static SliderView.Specs.expandedTransform;
}

double static SliderView.Specs.expandedTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;

  if (qword_15063E8 != -1)
    swift_once(&qword_15063E8, sub_ECEF38);
  v2 = *(_OWORD *)&static SliderView.Specs.expandedTransform[16];
  *a1 = *(_OWORD *)static SliderView.Specs.expandedTransform;
  a1[1] = v2;
  result = *(double *)&static SliderView.Specs.expandedTransform[32];
  a1[2] = *(_OWORD *)&static SliderView.Specs.expandedTransform[32];
  return result;
}

void sub_ECF018()
{
  static SliderView.Specs.stretchLimit = Int.seconds.getter(12);
}

uint64_t *SliderView.Specs.stretchLimit.unsafeMutableAddressor()
{
  if (qword_15063F0 != -1)
    swift_once(&qword_15063F0, sub_ECF018);
  return &static SliderView.Specs.stretchLimit;
}

double static SliderView.Specs.stretchLimit.getter()
{
  return sub_DC693C(&qword_15063F0, (uint64_t)&static SliderView.Specs.stretchLimit, (uint64_t)sub_ECF018);
}

void sub_ECF094()
{
  static SliderView.Specs.escapeHeight = Int.seconds.getter(180);
}

uint64_t *SliderView.Specs.escapeHeight.unsafeMutableAddressor()
{
  if (qword_15063F8 != -1)
    swift_once(&qword_15063F8, sub_ECF094);
  return &static SliderView.Specs.escapeHeight;
}

double static SliderView.Specs.escapeHeight.getter()
{
  return sub_DC693C(&qword_15063F8, (uint64_t)&static SliderView.Specs.escapeHeight, (uint64_t)sub_ECF094);
}

id SliderView.panRecognizer.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SliderView.PanGestureRecognizer()), "initWithTarget:action:", v0, "panGestureRecognized:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t type metadata accessor for SliderView.PanGestureRecognizer()
{
  return objc_opt_self(_TtCC11MusicCoreUI10SliderViewP33_54515F1554A39BA10CF5FF24DBCB49D920PanGestureRecognizer);
}

void SliderView.panRecognizer.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = a1;

}

void (*SliderView.panRecognizer.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = SliderView.panRecognizer.getter();
  return sub_ECF1F8;
}

void sub_ECF1F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = v2;

}

id SliderView.trackLayoutGuide.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide, v3, 0, 0);
  return *v1;
}

void SliderView.trackLayoutGuide.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*SliderView.trackLayoutGuide.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide, a1, 33, 0);
  return j_j__swift_endAccess;
}

id SliderView.elapsedTrackColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v3, 0, 0);
  return *v1;
}

void SliderView.elapsedTrackColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v12, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v11, 0, 0).n128_u64[0];
  if (*v7 == 1)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
    v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, &v9, 0, 0).n128_u64[0];
  }
  objc_msgSend(v6, "setBackgroundColor:", *v3, *(double *)&v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v10, 0, 0).n128_f64[0]);

}

void (*SliderView.elapsedTrackColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_ECF498;
}

void sub_ECF498(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    v7 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0).n128_u64[0];
    if ((*v6 & 1) != 0)
    {
      v8 = (_QWORD *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
      v7 = swift_beginAccess(v8, v3 + 6, 0, 0).n128_u64[0];
      v9 = v3[9];
    }
    else
    {
      v9 = v3[9];
      v8 = (_QWORD *)(v9 + v3[10]);
    }
    objc_msgSend(v5, "setBackgroundColor:", *v8, *(double *)&v7);
    objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3 + 3, 0, 0).n128_f64[0]);
  }
  free(v3);
}

id SliderView.remainingTrackColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3, 0, 0);
  return *v1;
}

void SliderView.remainingTrackColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v11, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v10, 0, 0);
  if (*v7 == 1)
    v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  else
    v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  objc_msgSend(v6, "setBackgroundColor:", *(_QWORD *)(v1 + v8), swift_beginAccess(v1 + v8, v9, 0, 0).n128_f64[0]);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *v3);

}

void (*SliderView.remainingTrackColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_ECF730;
}

void sub_ECF730(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0);
    v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
    if (*v6)
      v8 = v3 + 6;
    else
      v8 = v3 + 3;
    if (!*v6)
      v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
    v10 = v3[9];
    v9 = v3[10];
    objc_msgSend(v5, "setBackgroundColor:", *(_QWORD *)(v10 + *v7), swift_beginAccess(v10 + *v7, v8, 0, 0).n128_f64[0]);
    objc_msgSend(*(id *)(v10 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v10 + v9));
  }
  free(v3);
}

id SliderView.trackingColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, v3, 0, 0);
  return *v1;
}

void SliderView.trackingColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, v12, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v11, 0, 0).n128_u64[0];
  if ((*v7 & 1) == 0)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
    v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v10, 0, 0).n128_u64[0];
  }
  objc_msgSend(v6, "setBackgroundColor:", *v3, *(double *)&v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, &v9, 0, 0).n128_f64[0]);

}

void (*SliderView.trackingColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_ECF9BC;
}

void sub_ECF9BC(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    v7 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0).n128_u64[0];
    if (*v6 == 1)
    {
      v8 = v3[9];
      v9 = (_QWORD *)(v8 + v3[10]);
    }
    else
    {
      v9 = (_QWORD *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
      v7 = swift_beginAccess(v9, v3 + 3, 0, 0).n128_u64[0];
      v8 = v3[9];
    }
    objc_msgSend(v5, "setBackgroundColor:", *v9, *(double *)&v7);
    objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3 + 6, 0, 0).n128_f64[0]);
  }
  free(v3);
}

double SliderView.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value, v3, 0, 0);
  return *(double *)v1;
}

uint64_t SliderView.isEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled, v3, 0, 0);
  return *v1;
}

void SliderView.isEnabled.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  id v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled, v5, 1, 0);
  *v3 = a1;
  v4 = SliderView.panRecognizer.getter();
  objc_msgSend(v4, "setEnabled:", *v3);

}

void (*SliderView.isEnabled.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_ECFC0C;
}

void sub_ECFC0C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = SliderView.panRecognizer.getter();
    objc_msgSend(v6, "setEnabled:", *(unsigned __int8 *)(v4 + v5));

  }
  free(v3);
}

uint64_t SliderView.isTracking.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0);
  return *v1;
}

uint64_t SliderView.valueChangedHandler.getter()
{
  return sub_3A3A10(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (void (*)(_QWORD, _QWORD))sub_A9DEC);
}

uint64_t SliderView.valueChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_723B8C(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, sub_5C198);
}

uint64_t (*SliderView.valueChangedHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SliderView.cancelledHandler.getter()
{
  return sub_3A3A10(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (void (*)(_QWORD, _QWORD))sub_A9DEC);
}

uint64_t SliderView.cancelledHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_723B8C(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, sub_5C198);
}

uint64_t (*SliderView.cancelledHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, a1, 33, 0);
  return j__swift_endAccess;
}

id SliderView.semanticContentAttribute.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SliderView();
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

uint64_t type metadata accessor for SliderView()
{
  return objc_opt_self(_TtC11MusicCoreUI10SliderView);
}

id SliderView.semanticContentAttribute.setter(uint64_t a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v4, "setSemanticContentAttribute:", a1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView], "setSemanticContentAttribute:", objc_msgSend(v1, "semanticContentAttribute"));
}

uint64_t sub_ECFF08(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  objc_class *v40;
  id v41;
  id v42;
  char *v43;
  id v44;
  id *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t result;
  void *v63;
  _QWORD *v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  Class isa;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  char v100[24];
  objc_super v101;

  v5 = v4;
  v10 = type metadata accessor for UIView.Corner.Radius(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (double *)((char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E760);
  __chkstk_darwin();
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v17 = objc_allocWithZone((Class)UIStackView);
  v18 = v5;
  v19 = objc_msgSend(v17, "init");
  v20 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v16] = v20;
  v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = UIView.forAutolayout.getter();

  *(_QWORD *)&v18[v21] = v23;
  v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v26 = UIView.forAutolayout.getter();

  *(_QWORD *)&v18[v24] = v26;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  v27 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(_QWORD *)&v18[v27] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  v28 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  v30 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(_QWORD *)&v18[v30] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v31 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v32 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v18[v31] = objc_msgSend(v32, "whiteColor");
  v33 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(_QWORD *)&v18[v33] = objc_msgSend(v32, "systemFillColor");
  v34 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_1506030 != -1)
    swift_once(&qword_1506030, sub_DD39E4);
  v35 = (void *)static UIColor.MusicTint.normal;
  *(_QWORD *)&v18[v34] = static UIColor.MusicTint.normal;
  v36 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v18[v36] = Int.seconds.getter(0);
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  v37 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v38 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v39 = v35;

  v40 = (objc_class *)type metadata accessor for SliderView();
  v101.receiver = v18;
  v101.super_class = v40;
  v41 = objc_msgSendSuper2(&v101, "initWithFrame:", a1, a2, a3, a4);
  v42 = SliderView.panRecognizer.getter();
  objc_msgSend(v42, "_setRequiresSystemGesturesToFail:", 0);

  v43 = (char *)v41;
  v44 = SliderView.panRecognizer.getter();
  objc_msgSend(v43, "addGestureRecognizer:", v44);

  v45 = (id *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide];
  objc_msgSend(v43, "addLayoutGuide:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide], swift_beginAccess(&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide], v100, 0, 0).n128_f64[0]);
  objc_msgSend(v43, "setExclusiveTouch:", 1);
  v46 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v47 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView];
  v48 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  objc_msgSend(v47, "addArrangedSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack]);
  objc_msgSend(v47, "addArrangedSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack]);
  objc_msgSend(v47, "setAxis:", 0);
  if (qword_15063D8 != -1)
    swift_once(&qword_15063D8, sub_ECEE40);
  *v13 = *(double *)&static SliderView.Specs.barHeight * 0.5;
  *((_BYTE *)v13 + 8) = 1;
  v49 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for UIView.Corner.Radius.value(_:), v10);
  v50 = static CACornerMask.all.getter(v49);
  UIView.Corner.init(radius:mask:)(v13, v50);
  v51 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v15, 0, 1, v51);
  UIView.corner.setter(v15);
  v52 = objc_msgSend(*(id *)&v43[v46], "layer");
  objc_msgSend(v52, "setMasksToBounds:", 1);

  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v43[v46]);
  v53 = objc_msgSend(*(id *)&v43[v48], "widthAnchor");
  v54 = objc_msgSend(v53, "constraintEqualToConstant:", 0.0);

  v55 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint;
  v56 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
  *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = v54;

  v57 = objc_msgSend(*(id *)&v43[v46], "heightAnchor");
  v58 = objc_msgSend(v57, "constraintEqualToConstant:", *(double *)&static SliderView.Specs.barHeight);

  v59 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint;
  v60 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = v58;

  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  result = swift_allocObject(v61, 120, 7);
  *(_OWORD *)(result + 16) = xmmword_107A7F0;
  v63 = *(void **)&v43[v55];
  if (v63)
  {
    v64 = (_QWORD *)result;
    *(_QWORD *)(result + 32) = v63;
    v65 = *(void **)&v43[v59];
    if (v65)
    {
      v98 = (id)objc_opt_self(NSLayoutConstraint);
      v64[5] = v65;
      v66 = *(void **)&v43[v46];
      v67 = v63;
      v68 = v65;
      v69 = objc_msgSend(v66, "leadingAnchor");
      v70 = objc_msgSend(v43, "leadingAnchor");
      v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

      v64[6] = v71;
      v72 = objc_msgSend(*(id *)&v43[v46], "trailingAnchor");
      v73 = objc_msgSend(v43, "trailingAnchor");
      v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

      v64[7] = v74;
      v75 = objc_msgSend(*(id *)&v43[v46], "topAnchor");
      v76 = objc_msgSend(v43, "topAnchor");
      v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

      v64[8] = v77;
      v78 = objc_msgSend(*(id *)&v43[v46], "bottomAnchor");
      v79 = objc_msgSend(v43, "bottomAnchor");
      v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

      v64[9] = v80;
      v81 = objc_msgSend(*(id *)&v43[v46], "centerYAnchor");
      v82 = objc_msgSend(v43, "centerYAnchor");
      v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

      v64[10] = v83;
      v84 = objc_msgSend(*v45, "leadingAnchor");
      v85 = objc_msgSend(v43, "leadingAnchor");
      v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

      v64[11] = v86;
      v87 = objc_msgSend(*v45, "trailingAnchor");
      v88 = objc_msgSend(v43, "trailingAnchor");
      v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

      v64[12] = v89;
      v90 = objc_msgSend(*v45, "centerYAnchor");
      v91 = objc_msgSend(v43, "centerYAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      v64[13] = v92;
      v93 = objc_msgSend(*v45, "heightAnchor");
      v94 = objc_msgSend(v93, "constraintEqualToConstant:", *(double *)&static SliderView.Specs.barHeight);

      v64[14] = v94;
      v99 = v64;
      specialized Array._endMutation()(v95);
      sub_4E684(0, &qword_1508328, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v98, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      return (uint64_t)v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall SliderView.layoutSubviews()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double Width;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[24];
  objc_super v11;
  CGRect v12;
  CGRect v13;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v11, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  if (!CGRectEqualToRect(v12, *(CGRect *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds]))
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v0, "bounds");
      Width = CGRectGetWidth(v13);
      v5 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v10, 0, 0);
      objc_msgSend(v3, "setConstant:", Width * *v5);

      objc_msgSend(v0, "bounds");
      *(_QWORD *)v1 = v6;
      *((_QWORD *)v1 + 1) = v7;
      *((_QWORD *)v1 + 2) = v8;
      *((_QWORD *)v1 + 3) = v9;
    }
    else
    {
      __break(1u);
    }
  }
}

void SliderView.setValue(_:animated:)(char a1, double a2)
{
  char *v2;
  double v4;
  double *v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD aBlock[6];
  char v16[24];
  CGRect v17;

  if (a2 < 0.0)
    a2 = 0.0;
  if (a2 <= 1.0)
    v4 = a2;
  else
    v4 = 1.0;
  v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v16, 1, 0);
  if (v4 != *v5)
  {
    v6 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v7, "setConstant:", v4 * CGRectGetWidth(v17));

      v8 = swift_allocObject(&unk_13CE0E0, 32, 7);
      *(_QWORD *)(v8 + 16) = v2;
      *(double *)(v8 + 24) = v4;
      if ((a1 & 1) != 0)
      {
        v9 = vabdd_f64(*v5, v4) * 0.25;
        if (v9 > 0.1)
          v10 = v9;
        else
          v10 = 0.1;
        v11 = (void *)objc_opt_self(UIView);
        v12 = swift_allocObject(&unk_13CE108, 32, 7);
        *(_QWORD *)(v12 + 16) = sub_ED0BF8;
        *(_QWORD *)(v12 + 24) = v8;
        aBlock[4] = sub_129E54;
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_42D124;
        aBlock[3] = &block_descriptor_358;
        v13 = _Block_copy(aBlock);
        v14 = v2;
        swift_retain();
        swift_release();
        objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 4, v13, 0, v10, 0.0);
        swift_release();
        _Block_release(v13);
      }
      else
      {
        *v5 = v4;
        objc_msgSend(v2, "layoutIfNeeded");
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_ED0BD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_ED0BF8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  double v4;
  char v6[24];

  v1 = *(char **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = v2;
  return objc_msgSend(v1, "layoutIfNeeded", v4);
}

void sub_ED0C5C(void *a1)
{
  char *v1;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char *v26;
  double v27;
  double v28;
  double Width;
  double v30;
  double v31;
  double v32;
  double *v33;
  char *v34;
  void (*v35)(uint64_t, double);
  uint64_t v36;
  double *v37;
  double v38;
  uint64_t v39;
  void *v40;
  char *v41;
  id v42;
  double v43;
  char v44[24];
  char v45[24];
  void **aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void (*v50)();
  uint64_t v51;
  _BYTE v52[24];
  CGRect v53;
  CGRect v54;

  switch((unint64_t)objc_msgSend(a1, "state"))
  {
    case 1uLL:
      v3 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0xED1230);
      }
      objc_msgSend(v3, "constant");
      v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
      *(_QWORD *)v4 = v5;
      v4[8] = 0;
      v6 = swift_allocObject(&unk_13CE288, 24, 7);
      *(_QWORD *)(v6 + 16) = v1;
      v7 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v52, 1, 0);
      if (*v7 == 1)
      {
        v8 = v1;
        goto LABEL_35;
      }
      *v7 = 1;
      v39 = swift_allocObject(&unk_13CE2B0, 48, 7);
      *(_BYTE *)(v39 + 16) = 1;
      *(_QWORD *)(v39 + 24) = v1;
      *(_QWORD *)(v39 + 32) = sub_ED19E0;
      *(_QWORD *)(v39 + 40) = v6;
      v40 = (void *)objc_opt_self(UIView);
      v50 = sub_ED1CA8;
      v51 = v39;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v48 = sub_42D124;
      v49 = &block_descriptor_34_6;
      v17 = _Block_copy(&aBlock);
      v41 = v1;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v40, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v17, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
      goto LABEL_34;
    case 2uLL:
      v19 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      *(_QWORD *)&v20 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], &aBlock, 0, 0).n128_u64[0];
      if (*v19 == 1 && (v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth + 8] & 1) == 0)
      {
        v21 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
        objc_msgSend(a1, "translationInView:", v1, v20);
        v23 = v22;
        v25 = fabs(v24);
        if (qword_15063F8 != -1)
        {
          v43 = v25;
          swift_once(&qword_15063F8, sub_ECF094);
          v25 = v43;
        }
        if (v25 >= *(double *)&static SliderView.Specs.escapeHeight)
        {
          v42 = SliderView.panRecognizer.getter();
          objc_msgSend(v42, "setState:", 4);

        }
        else
        {
          v26 = (char *)objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
          v27 = -v23;
          if (v26 != (_BYTE *)&dword_0 + 1)
            v27 = v23;
          v28 = v21 + v27;
          objc_msgSend(v1, "bounds", *(_QWORD *)&v43);
          Width = CGRectGetWidth(v53);
          if (Width >= v28)
            Width = v28;
          if (Width < 0.0)
            v30 = 0.0;
          else
            v30 = Width;
          objc_msgSend(v1, "bounds");
          v31 = v30 / CGRectGetWidth(v54);
          if (v31 < 0.0)
            v31 = 0.0;
          if (v31 <= 1.0)
            v32 = v31;
          else
            v32 = 1.0;
          if (v32 == 1.0 || v32 == 0.0)
          {
            v33 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v44, 0, 0);
            if (v32 != *v33)
              objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator], "impactOccurred");
          }
          SliderView.setValue(_:animated:)(0, v32);
          v34 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
          swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler], v52, 0, 0);
          v35 = *(void (**)(uint64_t, double))v34;
          if (*(_QWORD *)v34)
          {
            v36 = *((_QWORD *)v34 + 1);
            v37 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess(v37, v45, 0, 0);
            v38 = *v37;
            swift_retain();
            v35(1, v38);
            sub_5C198((uint64_t)v35, v36);
          }
        }
      }
      return;
    case 3uLL:
      v9 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v52, 1, 0);
      if (*v9 != 1)
        return;
      v10 = swift_allocObject(&unk_13CE210, 24, 7);
      *(_QWORD *)(v10 + 16) = v1;
      *v9 = 0;
      v11 = swift_allocObject(&unk_13CE238, 48, 7);
      *(_BYTE *)(v11 + 16) = 0;
      *(_QWORD *)(v11 + 24) = v1;
      *(_QWORD *)(v11 + 32) = sub_ED19C0;
      *(_QWORD *)(v11 + 40) = v10;
      v12 = (void *)objc_opt_self(UIView);
      v50 = sub_ED1CA8;
      v51 = v11;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v13 = &block_descriptor_24_10;
      break;
    case 4uLL:
      v14 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v52, 1, 0);
      if (*v14 != 1)
        return;
      v15 = swift_allocObject(&unk_13CE198, 24, 7);
      *(_QWORD *)(v15 + 16) = v1;
      *v14 = 0;
      v16 = swift_allocObject(&unk_13CE1C0, 48, 7);
      *(_BYTE *)(v16 + 16) = 0;
      *(_QWORD *)(v16 + 24) = v1;
      *(_QWORD *)(v16 + 32) = sub_ED1980;
      *(_QWORD *)(v16 + 40) = v15;
      v12 = (void *)objc_opt_self(UIView);
      v50 = sub_ED198C;
      v51 = v16;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v13 = &block_descriptor_14_13;
      break;
    default:
      return;
  }
  v48 = sub_42D124;
  v49 = v13;
  v17 = _Block_copy(&aBlock);
  v18 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v17, 0, 1.0, 0.0, 2.0, 500.0, 40.0, 0.0);
LABEL_34:
  swift_release();
  _Block_release(v17);
LABEL_35:
  swift_release();
}

void sub_ED1240(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  _BYTE v5[24];

  v1 = a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, v5, 0, 0);
  v2 = *(void (**)(__n128))v1;
  if (*(_QWORD *)v1)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = swift_retain();
    v2(v4);
    sub_5C198((uint64_t)v2, v3);
  }
}

void sub_ED12AC(uint64_t a1, char a2)
{
  uint64_t v4;
  void (*v5)(_QWORD, double);
  uint64_t v6;
  double *v7;
  double v8;
  uint64_t v9;
  _BYTE v10[24];

  v4 = a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, v10, 0, 0);
  v5 = *(void (**)(_QWORD, double))v4;
  if (*(_QWORD *)v4)
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = (double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
    swift_beginAccess(v7, &v9, 0, 0);
    v8 = *v7;
    swift_retain();
    v5(a2 & 1, v8);
    sub_5C198((uint64_t)v5, v6);
  }
}

void sub_ED139C(char a1, char *a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  char v25[24];
  char v26[24];
  char v27[24];

  v6 = type metadata accessor for UIView.Corner.Radius(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (double *)&v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_150E760);
  __chkstk_darwin();
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  if ((a1 & 1) == 0)
  {
    if (v12)
    {
      v16 = qword_15063D8;
      v14 = v12;
      if (v16 != -1)
        swift_once(&qword_15063D8, sub_ECEE40);
      v15 = &static SliderView.Specs.barHeight;
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if (!v12)
  {
    __break(1u);
    goto LABEL_17;
  }
  v13 = qword_15063E0;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_15063E0, sub_ECEEBC);
  v15 = &static SliderView.Specs.expandedBarHeight;
LABEL_10:
  objc_msgSend(v14, "setConstant:", *(double *)v15);

  *v9 = *(double *)v15 * 0.5;
  *((_BYTE *)v9 + 8) = 1;
  v17 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIView.Corner.Radius.value(_:), v6);
  v18 = static CACornerMask.all.getter(v17);
  UIView.Corner.init(radius:mask:)(v9, v18);
  v19 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 0, 1, v19);
  v20 = UIView.corner.setter(v11);
  if (a3)
    a3(v20);
  v21 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack];
  v22 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v27, 0, 0);
  if (*v22 == 1)
    v23 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  else
    v23 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  objc_msgSend(v21, "setBackgroundColor:", *(_QWORD *)&a2[v23], swift_beginAccess(&a2[v23], v26, 0, 0).n128_f64[0]);
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack], "setBackgroundColor:", *(_QWORD *)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor], swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor], v25, 0, 0).n128_f64[0]);
  objc_msgSend(a2, "layoutIfNeeded");
}

id SliderView.__deallocating_deinit(uint64_t a1)
{
  return sub_15A49C(a1, type metadata accessor for SliderView);
}

uint64_t sub_ED1754()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_352(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_352(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_ED1790@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;
  _BYTE v5[24];

  v3 = (double *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess(v3, v5, 0, 0);
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void sub_ED17E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

void sub_ED1834(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_ED1884(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

ValueMetadata *type metadata accessor for SliderView.Specs()
{
  return &type metadata for SliderView.Specs;
}

uint64_t sub_ED18E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_ED1928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150E718;
  if (!qword_150E718)
  {
    v1 = sub_4E684(255, &qword_150E710, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_150E718);
  }
  return result;
}

void sub_ED1980()
{
  uint64_t v0;

  sub_ED1240(*(_QWORD *)(v0 + 16));
}

void sub_ED198C()
{
  uint64_t v0;

  sub_ED139C(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_ED199C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_ED19C0()
{
  uint64_t v0;

  sub_ED12AC(*(_QWORD *)(v0 + 16), 0);
}

void sub_ED19E0()
{
  uint64_t v0;

  sub_ED12AC(*(_QWORD *)(v0 + 16), 1);
}

uint64_t objectdestroy_10Tm_1()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_ED1A34()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  id v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v5] = v7;
  v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v8] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *v13 = 0u;
  v13[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v15 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v16 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v1[v15] = objc_msgSend(v16, "whiteColor");
  v17 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(_QWORD *)&v1[v17] = objc_msgSend(v16, "systemFillColor");
  v18 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_1506030 != -1)
    swift_once(&qword_1506030, sub_DD39E4);
  v19 = (void *)static UIColor.MusicTint.normal;
  *(_QWORD *)&v1[v18] = static UIColor.MusicTint.normal;
  v20 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v1[v20] = Int.seconds.getter(0);
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *v21 = 0;
  v21[1] = 0;
  v22 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *v22 = 0;
  v22[1] = 0;
  v23 = v19;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/SliderView.swift", 28, 2, 115, 0);
  __break(1u);
}

__int128 *SymbolButton.Configuration.platterMinimumSize.unsafeMutableAddressor()
{
  if (qword_1506428 != -1)
    swift_once(&qword_1506428, sub_EDEDE4);
  return &static SymbolButton.Configuration.platterMinimumSize;
}

unint64_t SymbolButton.CustomView.init(view:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>, int64x2_t a3@<Q0>, int64x2_t a4@<Q1>)
{
  int8x16_t v4;
  int8x16_t v5;
  uint64_t v6;

  a3.i64[0] = 0;
  *(_QWORD *)a2 = result;
  a4.i64[0] = result;
  v4 = (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(a4, a3)).i64[0], 0);
  v5 = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.bottom, v4);
  v6 = 0x3FF0000000000000;
  *(int8x16_t *)(a2 + 8) = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.top, v4);
  if (!result)
    v6 = 0;
  *(int8x16_t *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

uint64_t SymbolButton.updateConfigurationIfNeeded(_:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  double v20;
  char *v21;
  char v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  char *v35;
  void *v36;
  id v37;
  id v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  void *v50;
  id v51;
  id v52;
  double v53;
  char *v54;
  void *v55;
  id v56;
  id v57;
  char *v58;
  uint64_t v59;
  id v60;
  char *v61;
  void *v62;
  id v63;
  id v64;
  uint64_t *v65;
  void (*v66)(char *, char *);
  uint64_t v67;
  char *v68;
  id v69;
  char *v70;
  id v72;
  char *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char v83[24];
  char v84[24];
  char v85[24];
  char v86[24];
  char v87[24];
  char v88[24];
  char v89[24];
  char v90[8];

  v6 = v5;
  v81 = a5;
  v82 = a2;
  v80 = type metadata accessor for UIViewConfigurationState(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SymbolButton.Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v13, &qword_150DDC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v18 = (uint64_t)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v90, 0, 0);
    sub_5BDB8(v18, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    sub_56024((uint64_t)v13, &qword_150DDC0);
  }
  else
  {
    sub_5C04C((uint64_t)v13, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
  }
  v19 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden];
  *(_QWORD *)&v20 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden], v89, 0, 0).n128_u64[0];
  if ((*v19 & 1) != 0 || (v20 = *(double *)&v17[*(int *)(v14 + 68)], v20 != 0.0))
  {
    objc_msgSend(v6, "state", v20);
    v21 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled], v88, 0, 0);
    v74 = v21;
    v22 = *v21;
    v76 = a4;
    v75 = a3;
    v77 = v14;
    if ((v22 & 1) != 0
      || (v23 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted],
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted], v87, 0, 0), (*v23 & 1) != 0)|| (v24 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], v86, 0, 0), *v24 == 1))
    {
      if (qword_1506448 != -1)
        swift_once(&qword_1506448, sub_EDFB14);
      v26 = static SymbolButton.Background.normal;
      v25 = (void *)qword_15841A8;
      v28 = qword_15841B0;
      v27 = qword_15841B8;
      v29 = *((_QWORD *)v17 + 24);
      v30 = (char *)*((_QWORD *)v17 + 25);
      v31 = *((_QWORD *)v17 + 26);
      v32 = *((_QWORD *)v17 + 27);
      swift_bridgeObjectRetain();
      v33 = v25;
      sub_CCEC0(v29, v30, v31, v32);
      *((_QWORD *)v17 + 24) = v26;
      *((_QWORD *)v17 + 25) = v25;
      *((_QWORD *)v17 + 26) = v28;
      *((_QWORD *)v17 + 27) = v27;
      v34 = objc_msgSend(v6, "traitCollection");
      v35 = (char *)objc_msgSend(v34, "userInterfaceIdiom");

      if (v35 == (_BYTE *)&dword_4 + 2)
      {
        v36 = (void *)objc_opt_self(UIColor);
        v37 = objc_msgSend(v36, "labelColor");

        *((_QWORD *)v17 + 14) = v37;
        v38 = objc_msgSend(v36, "labelColor");

        *((_QWORD *)v17 + 22) = v38;
      }
      v14 = v77;
      *(_QWORD *)&v17[*(int *)(v77 + 68)] = 0x3FF0000000000000;
      a4 = v76;
      a3 = v75;
    }
    if ((objc_msgSend(v6, "state") & 2) != 0 && *v74 == 1)
      *(_QWORD *)&v17[*(int *)(v14 + 68)] = 0x3FD0000000000000;
    if ((objc_msgSend(v6, "state") & 1) != 0)
    {
      v39 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted], v83, 0, 0);
      if (*v39 == 1)
      {
        if (qword_1506450 != -1)
          swift_once(&qword_1506450, sub_EDFC0C);
        v40 = (void *)qword_15841C8;
        v74 = (_BYTE *)static SymbolButton.Background.highlighted;
        v42 = qword_15841D0;
        v41 = qword_15841D8;
        v43 = *((_QWORD *)v17 + 24);
        v44 = (char *)*((_QWORD *)v17 + 25);
        v45 = *((_QWORD *)v17 + 26);
        v46 = *((_QWORD *)v17 + 27);
        swift_bridgeObjectRetain();
        v72 = v40;
        sub_CCEC0(v43, v44, v45, v46);
        *((_QWORD *)v17 + 24) = v74;
        v73 = v17 + 200;
        *((_QWORD *)v17 + 25) = v40;
        *((_QWORD *)v17 + 26) = v42;
        *((_QWORD *)v17 + 27) = v41;
        v74 = (_BYTE *)v41;
        v14 = v77;
        v47 = *(int *)(v77 + 68);
        *(_QWORD *)&v17[v47] = 0x3FE0000000000000;
        v48 = objc_msgSend(v6, "traitCollection");
        v49 = (char *)objc_msgSend(v48, "userInterfaceIdiom");

        a4 = v76;
        a3 = v75;
        if (v49 == (_BYTE *)&dword_4 + 2)
        {
          v50 = (void *)objc_opt_self(UIColor);
          v51 = objc_msgSend(v50, "labelColor");

          *((_QWORD *)v17 + 14) = v51;
          v14 = v77;
          v52 = objc_msgSend(v50, "labelColor");

          *((_QWORD *)v17 + 22) = v52;
          *(_QWORD *)&v17[v47] = 0x3FF0000000000000;
          if (objc_msgSend(v6, "showsMenuAsPrimaryAction"))
          {
            if (objc_msgSend(v6, "isContextMenuInteractionEnabled"))
            {

              *(_QWORD *)&v53 = swift_bridgeObjectRelease(v74).n128_u64[0];
              *((_QWORD *)v17 + 24) = 0x3FF0000000000000;
              v54 = v73;
              *((_QWORD *)v73 + 1) = 0;
              *((_QWORD *)v54 + 2) = 0;
              *(_QWORD *)v54 = 0;
              v55 = v52;
              v56 = objc_msgSend(v50, "blackColor", v53);

              *((_QWORD *)v17 + 14) = v56;
              v14 = v77;
              v57 = objc_msgSend(v50, "blackColor");

              *((_QWORD *)v17 + 22) = v57;
            }
          }
        }
      }
    }
    if ((objc_msgSend(v6, "state") & 4) != 0)
    {
      v58 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], v84, 0, 0);
      if (*v58 == 1)
      {
        sub_CCEC0(*((_QWORD *)v17 + 24), *((char **)v17 + 25), *((_QWORD *)v17 + 26), *((_QWORD *)v17 + 27));
        *((_QWORD *)v17 + 24) = 0x3FF0000000000000;
        *((_QWORD *)v17 + 25) = 0;
        *((_QWORD *)v17 + 26) = 0;
        *((_QWORD *)v17 + 27) = 0;
        v59 = *(int *)(v14 + 68);
        *(_QWORD *)&v17[v59] = 0x3FF0000000000000;
        v60 = objc_msgSend(v6, "traitCollection");
        v61 = (char *)objc_msgSend(v60, "userInterfaceIdiom");

        if (v61 == (_BYTE *)&dword_4 + 2)
        {
          v62 = (void *)objc_opt_self(UIColor);
          v63 = objc_msgSend(v62, "blackColor");

          *((_QWORD *)v17 + 14) = v63;
          v64 = objc_msgSend(v62, "blackColor");

          *((_QWORD *)v17 + 22) = v64;
        }
        else if ((objc_msgSend(v6, "state") & 1) != 0)
        {
          *(_QWORD *)&v17[v59] = 0x3FE0000000000000;
        }
      }
    }
  }
  v65 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v85, 0, 0);
  v66 = (void (*)(char *, char *))*v65;
  if (*v65)
  {
    v67 = v65[1];
    sub_A9DEC(*v65, v67);
    v68 = v6;
    v69 = objc_msgSend(v68, "traitCollection");
    v70 = v78;
    UIViewConfigurationState.init(traitCollection:)(v69);
    UIViewConfigurationState.isDisabled.setter(objc_msgSend(v68, "isEnabled") ^ 1);
    UIViewConfigurationState.isSelected.setter(objc_msgSend(v68, "isSelected"));
    UIViewConfigurationState.isHighlighted.setter(objc_msgSend(v68, "isHighlighted"));

    v66(v70, v17);
    sub_5C198((uint64_t)v66, v67);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v70, v80);
  }
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v17, v82, a3, a4, v81 & 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_5C0DC((uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
}

double static SymbolButton.Material.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  double result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  v7 = 0uLL;
  v8 = 0;
  v9 = 2;
  v10 = 0uLL;
  a1(&v7);
  v3 = v8;
  v4 = v9;
  result = *(double *)&v7;
  v6 = v10;
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = v6;
  return result;
}

double static SymbolButton.Symbol.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  NSString *v4;
  uint64_t v5;
  char v6;
  char v7;
  double result;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  double v22;
  uint64_t v23;

  v14 = 0uLL;
  *(_QWORD *)&v15 = 0;
  *((_QWORD *)&v15 + 1) = UIFontTextStyleSubheadline;
  v16 = 0;
  v17 = 1;
  v18 = xmmword_10683D0;
  v19 = 0uLL;
  v20 = -1;
  v21 = 0uLL;
  v22 = 1.0;
  v23 = 0;
  v4 = UIFontTextStyleSubheadline;
  a1(&v14);
  v5 = v16;
  v6 = v17;
  v7 = v20;
  result = v22;
  v9 = v23;
  v10 = v15;
  v11 = v18;
  v12 = v19;
  v13 = v21;
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 88) = v13;
  *(double *)(a2 + 104) = result;
  *(_QWORD *)(a2 + 112) = v9;
  return result;
}

double static SymbolButton.Title.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  NSString *v4;
  UIFontTextStyle v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  UIFontTextStyle v12;
  double v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v11 = 0uLL;
  v12 = UIFontTextStyleSubheadline;
  v13 = UIFontWeightSemibold;
  v14 = 0uLL;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  v4 = UIFontTextStyleSubheadline;
  a1(&v11);
  v5 = v12;
  result = v13;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v14;
  *(_OWORD *)a2 = v11;
  *(_QWORD *)(a2 + 16) = v5;
  *(double *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v8;
  *(_BYTE *)(a2 + 64) = v9;
  return result;
}

uint64_t UIView.Corner.roundedRect.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506468, (uint64_t (*)(_QWORD))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.roundedRect, (uint64_t)sub_EDFE60);
}

uint64_t static SymbolButton.Configuration.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  SymbolButton.Configuration.init()(a2);
  return a1(a2);
}

uint64_t static SymbolButton.Background.with(_:)(void (*a1)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 0x3FF0000000000000;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  a1(&v2);
  return v3;
}

char *SymbolButton.__allocating_init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SymbolButton.init(configuration:handler:)(a1, a2, a3);
}

char *SymbolButton.init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t ObjCClassFromMetadata;
  id v45;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  void *v55;
  UIAccessibilityTraits v56;
  char *v57;
  unint64_t v58;
  UIAccessibilityTraits v59;
  id v60;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t ObjectType;
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  objc_super v69;
  char v70[24];
  char v71[24];
  objc_super v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v67 = a3;
  v66 = a2;
  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E760);
  __chkstk_darwin(v5);
  v63 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SymbolButton.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v64 = (uint64_t *)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *v11 = 0;
  v11[1] = 0;
  v12 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *v12 = 0;
  v12[1] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  v14 = qword_1506430;
  v15 = v3;
  if (v14 != -1)
    swift_once(&qword_1506430, sub_EDEE28);
  *(_OWORD *)&v3[v13] = static SymbolButton.Configuration.hitRectMinimumSize;
  v16 = &v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *v16 = 0;
  v16[1] = 0;
  v17 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  v73 = 1;
  v19 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  v74 = 0u;
  v75 = 0u;
  v76 = 0;
  v72.receiver = objc_allocWithZone(v19);
  v72.super_class = v19;
  v20 = objc_msgSendSuper2(&v72, "initWithEffect:", 0);
  sub_EDD464((uint64_t)&v73);

  *(_QWORD *)&v15[v18] = v20;
  v21 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_1506408 != -1)
    swift_once(&qword_1506408, sub_ED822C);
  swift_beginAccess(&static SymbolButton.Background.clear, v71, 0, 0);
  v22 = *(double *)&static SymbolButton.Background.clear;
  v23 = (void *)qword_15840F8;
  v24 = qword_1584100;
  v25 = qword_1584108;
  v26 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  v27 = v23;
  *(_QWORD *)&v15[v21] = sub_EDD850(v23, v22, v24, v25);
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], 1, 1, v7);
  v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
  v28 = a1;
  sub_5BDB8(a1, (uint64_t)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess(v12, v70, 1, 0);
  v29 = *v12;
  v30 = v12[1];
  v31 = v66;
  v32 = v67;
  *v12 = v66;
  v12[1] = v32;
  sub_A9DEC(v31, v32);
  sub_5C198(v29, v30);

  v33 = (objc_class *)type metadata accessor for SymbolButton(0);
  v69.receiver = v15;
  v69.super_class = v33;
  v34 = (char *)objc_msgSendSuper2(&v69, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v35 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  v36 = *(void **)&v34[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
  v37 = v34;
  objc_msgSend(v36, "setAutoresizingMask:", 18);
  v38 = v36;
  objc_msgSend(v37, "bounds");
  objc_msgSend(v38, "setFrame:");

  v39 = *(void **)&v34[v35];
  objc_msgSend(v37, "addSubview:", v39);
  v40 = *(void **)&v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  objc_msgSend(v39, "addSubview:", v40);
  v41 = objc_msgSend(v40, "contentView");
  v42 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView]);

  v43 = *(void **)&v37[v42];
  type metadata accessor for SymbolButton.Label();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v45 = v43;
  if ((objc_msgSend(v45, "isKindOfClass:", ObjCClassFromMetadata) & 1) == 0)
  {
    v46 = &v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v68, 0, 0);
    v47 = type metadata accessor for SymbolButton.Configuration(0);
    v48 = v46[*(int *)(v47 + 76)];
    if (v48 == 2)
    {
      v49 = v63;
      sub_5C238((uint64_t)&v46[*(int *)(v47 + 36)], v63, &qword_150E760);
      v50 = type metadata accessor for UIView.Corner(0);
      v51 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50) != 1;
      sub_56024(v49, &qword_150E760);
    }
    else
    {
      v51 = v48 & 1;
    }
    objc_msgSend(v45, "setClipsToBounds:", v51);
  }

  sub_EDBC34(a1);
  v52 = v64;
  sub_EDB85C(v64);
  sub_EDC7D4((uint64_t)v52);
  sub_5C0DC((uint64_t)v52, type metadata accessor for SymbolButton.Metrics);
  sub_4E684(0, &qword_15087A8, UIAction_ptr);
  v53 = swift_allocObject(&unk_13CE300, 24, 7);
  *(_QWORD *)(v53 + 16) = ObjectType;
  v54 = v37;
  v55 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6E6F69746341, 0xE600000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_EE0130, v53);
  objc_msgSend(v54, "addAction:forControlEvents:", v55, 64);

  v56 = UIAccessibilityTraitButton;
  v57 = v54;
  v58 = (unint64_t)objc_msgSend(v57, "accessibilityTraits");
  if ((v56 & ~v58) != 0)
    v59 = v56;
  else
    v59 = 0;
  objc_msgSend(v57, "setAccessibilityTraits:", v59 | v58);

  v60 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v57);
  objc_msgSend(v57, "addInteraction:", v60);

  sub_5C198(v66, v67);
  sub_5C0DC(v28, type metadata accessor for SymbolButton.Configuration);
  return v57;
}

void sub_ED2F38(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  char *v6;
  void (*v7)(void *, __n128);
  uint64_t v8;
  __n128 v9;
  char *v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v3 = objc_msgSend(a1, "sender");
  if (v3)
  {
    v4 = v3;
    _bridgeAnyObjectToAny(_:)(v11, v3);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_5C090((uint64_t)v11, (uint64_t)v12, &qword_1508840);
  if (v13)
  {
    if ((swift_dynamicCast(&v10, v12, (char *)&type metadata for Any + 8, a2, 6) & 1) != 0)
    {
      v5 = v10;
      v6 = &v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
      swift_beginAccess(&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler], v12, 0, 0);
      v7 = *(void (**)(void *, __n128))v6;
      if (*(_QWORD *)v6)
      {
        v8 = *((_QWORD *)v6 + 1);
        v9 = swift_retain(v8);
        v7(v5, v9);

        sub_5C198((uint64_t)v7, v8);
      }
      else
      {

      }
    }
  }
  else
  {
    sub_56024((uint64_t)v12, &qword_1508840);
  }
}

uint64_t SymbolButton.debugLabel.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SymbolButton.debugLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*SymbolButton.debugLabel.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.configurationProvider.getter()
{
  return sub_3A3A10(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, (void (*)(_QWORD, _QWORD))sub_CD0E4);
}

uint64_t SymbolButton.configurationProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  __chkstk_darwin();
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, v13, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = a1;
  v7[1] = a2;
  sub_A9DEC(a1, a2);
  sub_5C198(v8, v9);
  v10 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  sub_56024((uint64_t)v6, &qword_150DDC0);
  return sub_5C198(a1, a2);
}

void (*SymbolButton.configurationProvider.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  v3[4] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, v3, 33, 0);
  return sub_ED3308;
}

void sub_ED3308(_QWORD *a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    v5 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_56024((uint64_t)v4, &qword_150DDC0);
  }
  free(v4);
  free(v3);
}

void SymbolButton.configurationState.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  UIViewConfigurationState.init(traitCollection:)(objc_msgSend(v1, "traitCollection"));
  UIViewConfigurationState.isDisabled.setter(objc_msgSend(v1, "isEnabled") ^ 1);
  UIViewConfigurationState.isSelected.setter(objc_msgSend(v1, "isSelected"));
  UIViewConfigurationState.isHighlighted.setter(objc_msgSend(v1, "isHighlighted"));

}

uint64_t SymbolButton.handler.getter()
{
  return sub_3A3A10(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (void (*)(_QWORD, _QWORD))sub_A9DEC);
}

uint64_t SymbolButton.handler.setter(uint64_t a1, uint64_t a2)
{
  return sub_723B8C(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, sub_5C198);
}

uint64_t (*SymbolButton.handler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(char a1)
{
  sub_ED35C4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_ED3570;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenSelected.setter(char a1)
{
  sub_ED35C4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
}

void sub_ED35C4(char a1, _QWORD *a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  int v9;
  uint64_t v10;
  _BYTE v12[24];

  v5 = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  __chkstk_darwin();
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (_BYTE *)(v2 + *a2);
  swift_beginAccess(v8, v12, 1, 0);
  v9 = *v8;
  *v8 = a1;
  if (v9 != v5)
  {
    v10 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v7, 0, 0, 0, 1);
    sub_56024((uint64_t)v7, &qword_150DDC0);
  }
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenSelected.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_ED3570;
}

void sub_ED3738(void ***a1)
{
  void **v1;
  _BYTE *v2;
  void *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = (*a1)[5];
  v3 = (*a1)[3];
  v4 = *((unsigned __int8 *)*a1 + 48);
  v5 = v2[(_QWORD)v3];
  v2[(_QWORD)v3] = v4;
  if (((v4 ^ v5) & 1) != 0)
  {
    v6 = (uint64_t)v1[4];
    v7 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)(v6, 0, 0, 0, 1);
    sub_56024(v6, &qword_150DDC0);
  }
  free(v1[4]);
  free(v1);
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenDisabled.setter(char a1)
{
  sub_ED35C4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenDisabled.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_ED3570;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHidden.setter(char a1)
{
  sub_ED35C4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHidden.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150DDC0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_ED3570;
}

uint64_t SymbolButton.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_5BDB8(v3, a1, type metadata accessor for SymbolButton.Configuration);
}

uint64_t SymbolButton.configuration.setter(uint64_t a1)
{
  SymbolButton.setConfiguration(_:animation:updates:)(a1, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_5C0DC(a1, type metadata accessor for SymbolButton.Configuration);
}

void (*SymbolButton.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v6, v3, 0, 0);
  sub_5BDB8(v6, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  return sub_ED3AD0;
}

void sub_ED3AD0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_5BDB8(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_5C0DC((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    SymbolButton.setConfiguration(_:animation:updates:)(*(_QWORD *)(*(_QWORD *)a1 + 40), 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  }
  sub_5C0DC((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *SymbolButton.Background.normal.unsafeMutableAddressor()
{
  if (qword_1506448 != -1)
    swift_once(&qword_1506448, sub_EDFB14);
  return &static SymbolButton.Background.normal;
}

uint64_t *SymbolButton.Background.highlighted.unsafeMutableAddressor()
{
  if (qword_1506450 != -1)
    swift_once(&qword_1506450, sub_EDFC0C);
  return &static SymbolButton.Background.highlighted;
}

void *SymbolButton.Background.selected.unsafeMutableAddressor()
{
  return &static SymbolButton.Background.selected;
}

void *SymbolButton.Animation.default.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.default;
}

uint64_t static SymbolButton.Animation.default.getter()
{
  return 3075;
}

void *SymbolButton.Animation.eased.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.eased;
}

uint64_t static SymbolButton.Animation.eased.getter()
{
  return 3075;
}

uint64_t SymbolButton.Update.alongside.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_A9DEC(*v0, v0[1]);
  return v1;
}

uint64_t SymbolButton.Update.alongside.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_5C198(*v2, v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double SymbolButton.Update.animationOptions.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t SymbolButton.Update.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_5C198(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t SymbolButton.Update.init(alongside:animationOptions:completion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(double *)(a5 + 24) = a7;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  return result;
}

void SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  id v58;
  id v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  char *v64;
  NSObject *v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  char *v77;
  NSObject *v78;
  int v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  __int128 *v88;
  char *v89;
  id v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  __int128 *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *);
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *);
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  __int128 v114;
  uint64_t v115;
  void *v116;
  _QWORD *v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  double v150;
  char *v151;
  char *v152;
  char *v153;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  BOOL v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BOOL4 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  char *v168;
  char *v169;
  __int128 *v170;
  id v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  void *v193;
  _QWORD *v194;
  int *v195;
  double v196;
  __n128 v197;
  double v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  _QWORD *v209;
  int *v210;
  _QWORD *v211;
  char *v212;
  uint64_t v213;
  void *v214;
  _QWORD *v215;
  int *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  double v220;
  uint64_t ObjectType;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  double v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  char *v238;
  char *v239;
  __int128 *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  __int128 v247;
  uint64_t v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  char v252;
  __int128 v253;
  uint64_t v254;
  __int128 v255;
  __int128 v256;
  uint64_t v257;
  char v258;
  _QWORD v259[6];
  __int128 v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  void *v265;
  __int128 v266;
  __int128 v267;
  void *v268;
  _QWORD *v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  __int128 v273;
  __int128 v274;
  _OWORD v275[7];
  uint64_t v276;

  v7 = v6;
  v242 = a6;
  v228 = a5;
  v222 = a4;
  v220 = *(double *)&a3;
  v226 = *(double *)&a2;
  ObjectType = swift_getObjectType();
  v238 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_150E7D0);
  __chkstk_darwin(v238);
  v10 = (char *)&v217 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for UUID(0);
  v236 = *((_QWORD *)v11 - 1);
  v237 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v217 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v223 = *((_QWORD *)v14 - 1);
  v15 = *(_QWORD *)(v223 + 64);
  v16 = __chkstk_darwin(v14);
  v227 = (uint64_t)&v217 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v234 = (char *)&v217 - v18;
  v19 = __chkstk_darwin(v17);
  v233 = (char *)&v217 - v20;
  v21 = __chkstk_darwin(v19);
  v235 = (uint64_t)&v217 - v22;
  v23 = __chkstk_darwin(v21);
  v232 = (uint64_t)&v217 - v24;
  v25 = __chkstk_darwin(v23);
  v231 = (uint64_t)&v217 - v26;
  v27 = __chkstk_darwin(v25);
  v230 = (uint64_t)&v217 - v28;
  v29 = __chkstk_darwin(v27);
  v229 = (uint64_t)&v217 - v30;
  v31 = __chkstk_darwin(v29);
  v239 = (char *)&v217 - v32;
  v33 = __chkstk_darwin(v31);
  v225 = (uint64_t)&v217 - v34;
  v35 = __chkstk_darwin(v33);
  v224 = (uint64_t)&v217 - v36;
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v217 - v38;
  __chkstk_darwin(v37);
  v41 = (__int128 *)((char *)&v217 - v40);
  v42 = (uint64_t)&v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v246, 0, 0);
  sub_5BDB8(v42, (uint64_t)v41, type metadata accessor for SymbolButton.Configuration);
  if ((_s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(a1, v41) & 1) != 0)
  {
LABEL_55:
    sub_5C0DC((uint64_t)v41, type metadata accessor for SymbolButton.Configuration);
    return;
  }
  sub_5BDB8(a1, (uint64_t)v39, type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess(v42, v275, 33, 0);
  v218 = v39;
  sub_12B528((uint64_t)v39, v42);
  swift_endAccess(v275);
  v43 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v219 = (char *)UUID.uuidString.getter(v43);
  v241 = v44;
  (*(void (**)(char *, int *))(v236 + 8))(v13, v237);
  v237 = v14;
  v45 = v14[9];
  v240 = (__int128 *)a1;
  v46 = a1 + v45;
  v47 = (uint64_t)&v10[*((int *)v238 + 12)];
  sub_5C238((uint64_t)v41 + v45, (uint64_t)v10, &qword_150E760);
  sub_5C238(v46, v47, &qword_150E760);
  v48 = type metadata accessor for UIView.Corner(0);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
  v50 = v49(v10, 1, v48);
  v51 = v49((char *)v47, 1, v48);
  if (v50 != 1)
  {
    v52 = (uint64_t)v239;
    if (v51 == 1)
      goto LABEL_6;
LABEL_7:
    sub_56024((uint64_t)v10, &qword_150E7D0);
    goto LABEL_8;
  }
  v52 = (uint64_t)v239;
  if (v51 == 1)
    goto LABEL_7;
  sub_56024(v47, &qword_150E760);
LABEL_6:
  sub_56024((uint64_t)v10, &qword_150E760);
  v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
LABEL_8:
  v53 = (uint64_t)v240;
  v54 = v241;
  objc_msgSend(v7, "invalidateIntrinsicContentSize");
  objc_msgSend(v7, "accessibilityUpdateSymbolButton");
  v55 = *(_OWORD *)(v53 + 80);
  v275[4] = *(_OWORD *)(v53 + 64);
  v275[5] = v55;
  v275[6] = *(_OWORD *)(v53 + 96);
  v276 = *(_QWORD *)(v53 + 112);
  v56 = *(_OWORD *)(v53 + 16);
  v275[0] = *(_OWORD *)v53;
  v275[1] = v56;
  v57 = *(_OWORD *)(v53 + 48);
  v275[2] = *(_OWORD *)(v53 + 32);
  v275[3] = v57;
  v58 = sub_ED5144();
  objc_msgSend(v7, "setLargeContentImage:", v58);

  v59 = objc_msgSend(v7, "window");
  if (!v59 || (v228 & 1) != 0 || (v60 = v226, v226 <= 0.0))
  {
    if (qword_1506028 != -1)
      swift_once(&qword_1506028, sub_DD1D78);
    v73 = type metadata accessor for Logger(0);
    v74 = __swift_project_value_buffer(v73, (uint64_t)qword_1583268);
    sub_5BDB8(v53, v52, type metadata accessor for SymbolButton.Configuration);
    v75 = v7;
    swift_bridgeObjectRetain_n(v54, 2);
    v76 = v52;
    v77 = v75;
    v238 = (char *)v74;
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.debug.getter();
    v80 = os_log_type_enabled(v78, (os_log_type_t)v79);
    v81 = v242;
    if (v80)
    {
      LODWORD(v236) = v79;
      v82 = swift_slowAlloc(32, -1);
      v83 = swift_slowAlloc(96, -1);
      *(_QWORD *)&v266 = v83;
      *(_DWORD *)v82 = 136446722;
      v84 = &v77[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
      swift_beginAccess(&v77[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v243, 0, 0);
      v85 = (char *)*((_QWORD *)v84 + 1);
      if (v85)
      {
        v86 = *(char **)v84;
        v87 = v85;
      }
      else
      {
        v88 = v41;
        v89 = v77;
        v90 = objc_msgSend(v89, "description");
        v86 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v87 = v91;

        v81 = v242;
        v41 = v88;
        v54 = v241;
      }
      swift_bridgeObjectRetain();
      *(_QWORD *)(v82 + 4) = sub_DCF730(v86, v87, (uint64_t *)&v266);
      swift_bridgeObjectRelease(v87);

      *(_WORD *)(v82 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v82 + 14) = sub_DCF730(v219, v54, (uint64_t *)&v266);
      swift_bridgeObjectRelease_n(v54, 3);
      *(_WORD *)(v82 + 22) = 2082;
      v92 = (uint64_t)v239;
      v93 = (char *)SymbolButton.Configuration.description.getter();
      v95 = v94;
      *(_QWORD *)(v82 + 24) = sub_DCF730(v93, v94, (uint64_t *)&v266);
      swift_bridgeObjectRelease(v95);
      sub_5C0DC(v92, type metadata accessor for SymbolButton.Configuration);
      _os_log_impl(&dword_0, v78, (os_log_type_t)v236, "[%{public}s] UpdateID=%{public}s — Applying new configuration=%{public}s", (uint8_t *)v82, 0x20u);
      swift_arrayDestroy(v83, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v82, -1, -1);

      v53 = (uint64_t)v240;
    }
    else
    {

      swift_bridgeObjectRelease_n(v54, 2);
      sub_5C0DC(v76, type metadata accessor for SymbolButton.Configuration);

    }
    sub_EDBC34(v53);
    v96 = *(_QWORD *)(v81 + 16);
    if (v96)
    {
      v97 = v41;
      swift_bridgeObjectRetain();
      v98 = (uint64_t *)(v81 + 72);
      while (1)
      {
        v101 = (void (*)(char *))*(v98 - 5);
        v102 = *(v98 - 4);
        v104 = (void (*)(char *))*(v98 - 1);
        v103 = *v98;
        v105 = *v98;
        if (v101)
        {
          sub_A9DEC((uint64_t)v104, v105);
          sub_A9DEC((uint64_t)v101, v102);
          v101(v77);
          if (v104)
            goto LABEL_32;
        }
        else
        {
          sub_A9DEC((uint64_t)v104, v105);
          if (v104)
          {
LABEL_32:
            v104(v77);
            sub_5C198((uint64_t)v101, v102);
            v99 = (uint64_t)v104;
            v100 = v103;
            goto LABEL_27;
          }
        }
        v99 = (uint64_t)v101;
        v100 = v102;
LABEL_27:
        sub_5C198(v99, v100);
        v98 += 6;
        if (!--v96)
        {
          swift_bridgeObjectRelease(v242);
          v41 = v97;
          break;
        }
      }
    }
    v106 = *((_QWORD *)v41 + 1);
    v107 = (void *)*((_QWORD *)v41 + 2);
    v108 = (void *)*((_QWORD *)v41 + 3);
    v109 = *((_QWORD *)v41 + 4);
    v110 = *((unsigned __int8 *)v41 + 40);
    v111 = *((unsigned __int8 *)v41 + 80);
    v112 = *((_QWORD *)v41 + 11);
    v113 = (void *)*((_QWORD *)v41 + 14);
    v259[0] = *(_QWORD *)v41;
    v259[1] = v106;
    v259[2] = v107;
    v259[3] = v108;
    v259[4] = v109;
    v259[5] = v110;
    v114 = v41[4];
    v260 = v41[3];
    v261 = v114;
    v262 = v111;
    v263 = v112;
    v264 = v41[6];
    v265 = v113;
    v115 = (uint64_t)v240;
    v116 = (void *)*((_QWORD *)v240 + 4);
    v117 = (_QWORD *)*((unsigned __int8 *)v240 + 40);
    v118 = *((unsigned __int8 *)v240 + 80);
    v119 = v240[1];
    v266 = *v240;
    v267 = v119;
    v268 = v116;
    v269 = v117;
    v120 = v240[4];
    v270 = v240[3];
    v271 = v120;
    v272 = v118;
    v273 = *(__int128 *)((char *)v240 + 88);
    v121 = v264;
    v274 = *(__int128 *)((char *)v240 + 104);
    v122 = v113;
    swift_bridgeObjectRetain();
    v123 = v107;
    v124 = v108;
    swift_bridgeObjectRetain();
    v125 = _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v259, (uint64_t)&v266);
    swift_bridgeObjectRelease(v106);

    swift_bridgeObjectRelease(v121);
    v126 = v229;
    sub_5BDB8((uint64_t)v41, v229, type metadata accessor for SymbolButton.Configuration);
    v127 = v230;
    sub_5BDB8(v115, v230, type metadata accessor for SymbolButton.Configuration);
    if ((v125 & 1) != 0)
    {
      sub_5C0DC(v126, type metadata accessor for SymbolButton.Configuration);
      sub_5C0DC(v127, type metadata accessor for SymbolButton.Configuration);
      v128 = v231;
      sub_5BDB8((uint64_t)v41, v231, type metadata accessor for SymbolButton.Configuration);
      v129 = v232;
      sub_5BDB8(v115, v232, type metadata accessor for SymbolButton.Configuration);
      v131 = (uint64_t)v233;
      v130 = (uint64_t)v234;
    }
    else
    {
      v247 = *(_OWORD *)(v126 + 120);
      v132 = *(_OWORD *)(v126 + 160);
      v249 = *(_OWORD *)(v126 + 144);
      v250 = v132;
      v253 = *(_OWORD *)(v127 + 120);
      v133 = *(_OWORD *)(v127 + 160);
      v255 = *(_OWORD *)(v127 + 144);
      v134 = *(_QWORD *)(v126 + 176);
      v135 = *(_BYTE *)(v126 + 184);
      v248 = *(_QWORD *)(v126 + 136);
      v251 = v134;
      v252 = v135;
      v136 = *(_QWORD *)(v127 + 136);
      v137 = *(_QWORD *)(v127 + 176);
      v138 = *(_BYTE *)(v127 + 184);
      v256 = v133;
      v254 = v136;
      v257 = v137;
      v258 = v138;
      v139 = sub_EE207C((uint64_t)&v247, (uint64_t)&v253);
      sub_5C0DC(v126, type metadata accessor for SymbolButton.Configuration);
      sub_5C0DC(v127, type metadata accessor for SymbolButton.Configuration);
      v128 = v231;
      sub_5BDB8((uint64_t)v41, v231, type metadata accessor for SymbolButton.Configuration);
      v129 = v232;
      sub_5BDB8(v115, v232, type metadata accessor for SymbolButton.Configuration);
      v131 = (uint64_t)v233;
      v130 = (uint64_t)v234;
      if ((v139 & 1) == 0)
      {
        v154 = (*(_QWORD *)(v128 + 128) != 0) & (*(unsigned __int8 *)(v128 + 184) ^ 1);
        v155 = v128;
        v156 = (*(_QWORD *)(v129 + 128) != 0) & (*(unsigned __int8 *)(v129 + 184) ^ 1);
        sub_5C0DC(v155, type metadata accessor for SymbolButton.Configuration);
        sub_5C0DC(v129, type metadata accessor for SymbolButton.Configuration);
        v157 = v235;
        sub_5BDB8((uint64_t)v41, v235, type metadata accessor for SymbolButton.Configuration);
        sub_5BDB8(v115, v131, type metadata accessor for SymbolButton.Configuration);
        v158 = v154 == v156;
        v140 = v157;
        v159 = v237;
        if (!v158)
          goto LABEL_38;
        v160 = v237[10];
        v161 = *(_QWORD *)(v140 + v160);
        v162 = *(_QWORD *)(v131 + v160);
        v163 = v162 == 0;
        if (v161)
        {
          v140 = v235;
          if (!v162)
            goto LABEL_38;
          v163 = v161 == v162;
        }
        sub_5C0DC(v235, type metadata accessor for SymbolButton.Configuration);
        sub_5C0DC(v131, type metadata accessor for SymbolButton.Configuration);
        sub_5BDB8((uint64_t)v41, v130, type metadata accessor for SymbolButton.Configuration);
        v141 = v227;
        sub_5BDB8(v115, v227, type metadata accessor for SymbolButton.Configuration);
        if (v163)
        {
          v164 = v159[11];
          v165 = *(_QWORD *)(v130 + v164 + 16);
          v166 = *(_QWORD *)(v141 + v164 + 16);
          if (v165 == 1)
          {
            if (v166 != 1)
              goto LABEL_39;
          }
          else if (v166 == 1)
          {
            goto LABEL_39;
          }
          sub_5C0DC(v141, type metadata accessor for SymbolButton.Configuration);
          sub_5C0DC(v130, type metadata accessor for SymbolButton.Configuration);
LABEL_40:
          v142 = v77;
          v143 = v241;
          v144 = swift_bridgeObjectRetain();
          v145 = Logger.logObject.getter(v144);
          v146 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v145, v146))
          {
            v147 = swift_slowAlloc(22, -1);
            v148 = swift_slowAlloc(64, -1);
            v245 = v148;
            *(_DWORD *)v147 = 136446466;
            v149 = &v142[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
            *(_QWORD *)&v150 = swift_beginAccess(&v142[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v244, 0, 0).n128_u64[0];
            v151 = (char *)*((_QWORD *)v149 + 1);
            if (v151)
            {
              v152 = *(char **)v149;
              v153 = v151;
            }
            else
            {
              v167 = objc_msgSend(v142, "description", v150);
              v152 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
              v153 = v168;

            }
            swift_bridgeObjectRetain();
            *(_QWORD *)(v147 + 4) = sub_DCF730(v152, v153, &v245);
            swift_bridgeObjectRelease(v153);

            *(_WORD *)(v147 + 12) = 2082;
            v169 = v241;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v147 + 14) = sub_DCF730(v219, v169, &v245);
            swift_bridgeObjectRelease_n(v169, 3);
            _os_log_impl(&dword_0, v145, v146, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v147, 0x16u);
            swift_arrayDestroy(v148, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v148, -1, -1);
            swift_slowDealloc(v147, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v143, 2);
          }
          goto LABEL_55;
        }
LABEL_39:
        sub_5C0DC(v141, type metadata accessor for SymbolButton.Configuration);
        sub_5C0DC(v130, type metadata accessor for SymbolButton.Configuration);
        objc_msgSend(v77, "setNeedsLayout");
        goto LABEL_40;
      }
    }
    sub_5C0DC(v128, type metadata accessor for SymbolButton.Configuration);
    sub_5C0DC(v129, type metadata accessor for SymbolButton.Configuration);
    v140 = v235;
    sub_5BDB8((uint64_t)v41, v235, type metadata accessor for SymbolButton.Configuration);
    sub_5BDB8(v115, v131, type metadata accessor for SymbolButton.Configuration);
LABEL_38:
    sub_5C0DC(v140, type metadata accessor for SymbolButton.Configuration);
    sub_5C0DC(v131, type metadata accessor for SymbolButton.Configuration);
    sub_5BDB8((uint64_t)v41, v130, type metadata accessor for SymbolButton.Configuration);
    v141 = v227;
    sub_5BDB8(v115, v227, type metadata accessor for SymbolButton.Configuration);
    goto LABEL_39;
  }
  if (qword_1506028 != -1)
    swift_once(&qword_1506028, sub_DD1D78);
  v61 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v61, (uint64_t)qword_1583268);
  v62 = v224;
  sub_5BDB8(v53, v224, type metadata accessor for SymbolButton.Configuration);
  v63 = v7;
  swift_bridgeObjectRetain_n(v54, 2);
  v64 = v63;
  v65 = Logger.logObject.getter(v64);
  v66 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v65, (os_log_type_t)v66))
  {
    LODWORD(v239) = v66;
    v67 = swift_slowAlloc(32, -1);
    v238 = (char *)swift_slowAlloc(96, -1);
    *(_QWORD *)&v266 = v238;
    *(_DWORD *)v67 = 136446722;
    v68 = &v64[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess(&v64[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], v259, 0, 0);
    v69 = (char *)*((_QWORD *)v68 + 1);
    if (v69)
    {
      v70 = *(char **)v68;
      v71 = v64;
      v72 = v69;
    }
    else
    {
      v237 = v64;
      v170 = v41;
      v171 = objc_msgSend(v237, "description");
      v70 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v171);
      v71 = v64;
      v72 = v172;

      v41 = v170;
      v53 = (uint64_t)v240;

    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v67 + 4) = sub_DCF730(v70, v72, (uint64_t *)&v266);
    swift_bridgeObjectRelease(v72);

    *(_WORD *)(v67 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v67 + 14) = sub_DCF730(v219, v54, (uint64_t *)&v266);
    swift_bridgeObjectRelease_n(v54, 3);
    *(_WORD *)(v67 + 22) = 2082;
    v173 = v224;
    v174 = (char *)SymbolButton.Configuration.description.getter();
    v176 = v175;
    *(_QWORD *)(v67 + 24) = sub_DCF730(v174, v175, (uint64_t *)&v266);
    swift_bridgeObjectRelease(v176);
    sub_5C0DC(v173, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl(&dword_0, v65, (os_log_type_t)v239, "[%{public}s] UpdateID=%{public}s — Animating to new configuration=%{public}s", (uint8_t *)v67, 0x20u);
    v177 = (uint64_t)v238;
    swift_arrayDestroy(v238, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v177, -1, -1);
    swift_slowDealloc(v67, -1, -1);

    v64 = v71;
  }
  else
  {

    swift_bridgeObjectRelease_n(v54, 2);
    sub_5C0DC(v62, type metadata accessor for SymbolButton.Configuration);

  }
  v178 = *(_QWORD *)&v64[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  v179 = v178 + 1;
  v180 = v225;
  v181 = (uint64_t)v218;
  if (__OFADD__(v178, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v64[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v179;
    if (v179 != v178)
      sub_EDC4E8();
    v182 = swift_allocObject(&unk_13CE328, 24, 7);
    v236 = v182;
    *(_QWORD *)(v182 + 16) = _swiftEmptyArrayStorage;
    v183 = v182 + 16;
    v239 = (char *)objc_opt_self(UIView);
    v237 = (int *)v64;
    sub_5BDB8((uint64_t)v41, v181, type metadata accessor for SymbolButton.Configuration);
    sub_5BDB8(v53, v180, type metadata accessor for SymbolButton.Configuration);
    v184 = *(unsigned __int8 *)(v223 + 80);
    v185 = v181;
    v186 = (v184 + 16) & ~v184;
    v234 = (char *)(v15 + v184);
    v235 = v184 | 7;
    v238 = (char *)v41;
    v187 = (v186 + v15 + v184) & ~v184;
    v233 = (char *)(v15 + 7);
    v188 = (v187 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v189 = (v188 + 15) & 0xFFFFFFFFFFFFFFF8;
    v190 = swift_allocObject(&unk_13CE350, v189 + 8, v184 | 7);
    sub_5C04C(v185, v190 + v186, type metadata accessor for SymbolButton.Configuration);
    sub_5C04C(v180, v190 + v187, type metadata accessor for SymbolButton.Configuration);
    v191 = v237;
    *(_QWORD *)(v190 + v188) = v237;
    *(_QWORD *)(v190 + v189) = v183;
    v192 = swift_allocObject(&unk_13CE378, 32, 7);
    *(_QWORD *)(v192 + 16) = sub_EE2958;
    *(_QWORD *)(v192 + 24) = v190;
    v268 = sub_62604;
    v269 = (_QWORD *)v192;
    *(_QWORD *)&v266 = _NSConcreteStackBlock;
    *((_QWORD *)&v266 + 1) = 1107296256;
    *(_QWORD *)&v267 = sub_3A1A94;
    *((_QWORD *)&v267 + 1) = &block_descriptor_359;
    v193 = _Block_copy(&v266);
    v194 = v269;
    v195 = v191;
    swift_retain(v192);
    *(_QWORD *)&v196 = swift_release(v194).n128_u64[0];
    objc_msgSend(v239, "performWithoutAnimation:", v193, v196);
    _Block_release(v193);
    LOBYTE(v193) = swift_isEscapingClosureAtFileLocation(v192, "", 121, 336, 40, 1, v197);
    swift_release(v192);
    if ((v193 & 1) == 0)
    {
      v198 = v220;
      v199 = (uint64_t)v218;
      sub_5BDB8((uint64_t)v240, (uint64_t)v218, type metadata accessor for SymbolButton.Configuration);
      v200 = v225;
      sub_5BDB8((uint64_t)v238, v225, type metadata accessor for SymbolButton.Configuration);
      v201 = (v184 + 24) & ~v184;
      v202 = (unint64_t)&v234[v201] & ~v184;
      v203 = (unint64_t)&v233[v202] & 0xFFFFFFFFFFFFFFF8;
      v204 = (v203 + 15) & 0xFFFFFFFFFFFFFFF8;
      v205 = swift_allocObject(&unk_13CE3C8, v204 + 8, v235);
      *(_QWORD *)(v205 + 16) = v195;
      sub_5C04C(v199, v205 + v201, type metadata accessor for SymbolButton.Configuration);
      sub_5C04C(v200, v205 + v202, type metadata accessor for SymbolButton.Configuration);
      v206 = v236;
      *(_QWORD *)(v205 + v203) = v236;
      v207 = v242;
      *(_QWORD *)(v205 + v204) = v242;
      v268 = sub_EE2CD4;
      v269 = (_QWORD *)v205;
      *(_QWORD *)&v266 = _NSConcreteStackBlock;
      *((_QWORD *)&v266 + 1) = 1107296256;
      *(_QWORD *)&v267 = sub_42D124;
      *((_QWORD *)&v267 + 1) = &block_descriptor_15_17;
      v208 = _Block_copy(&v266);
      v209 = v269;
      v210 = v195;
      swift_retain(v206);
      swift_bridgeObjectRetain();
      swift_release(v209);
      v211 = (_QWORD *)swift_allocObject(&unk_13CE418, 64, 7);
      v211[2] = v206;
      v211[3] = v210;
      v212 = v219;
      v211[4] = v207;
      v211[5] = v212;
      v213 = ObjectType;
      v211[6] = v241;
      v211[7] = v213;
      v268 = sub_EE2D70;
      v269 = v211;
      *(_QWORD *)&v266 = _NSConcreteStackBlock;
      *((_QWORD *)&v266 + 1) = 1107296256;
      *(_QWORD *)&v267 = sub_59BEF0;
      *((_QWORD *)&v267 + 1) = &block_descriptor_21_13;
      v214 = _Block_copy(&v266);
      v215 = v269;
      v216 = v210;
      swift_retain(v206);
      swift_bridgeObjectRetain();
      swift_release(v215);
      objc_msgSend(v239, "animateKeyframesWithDuration:delay:options:animations:completion:", v222, v208, v214, v60, v198);
      _Block_release(v214);
      _Block_release(v208);
      sub_5C0DC((uint64_t)v238, type metadata accessor for SymbolButton.Configuration);
      swift_release(v206);
      swift_release(v190);
      return;
    }
  }
  __break(1u);
}

id sub_ED5144()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;

  v1 = *(_QWORD *)(v0 + 8);
  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  v2 = String._bridgeToObjectiveC()();
  v3 = (void *)objc_opt_self(UIImage);
  v4 = objc_msgSend(v3, "_systemImageNamed:", v2);

  if (v4)
  {
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v5 = *(id *)(v0 + 16);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    v4 = objc_msgSend(v3, "imageNamed:inBundle:", v6, v5);

  }
  return v4;
}

BOOL static SymbolButton.CustomView.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  _QWORD v7[7];
  _QWORD v8[7];

  sub_5C090(a2, (uint64_t)v8, &qword_150E7D8);
  v3 = v8[0];
  sub_5C090(a1, (uint64_t)v7, &qword_150E7D8);
  if (v7[0])
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    v5 = (v7[0] | v3) == 0;
  else
    v5 = v7[0] == v3;
  return !v5;
}

void sub_ED52B4(uint64_t *a1, uint64_t a2, char *a3, char **a4)
{
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  id v22;
  objc_class *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char **v36;
  char *v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  BOOL v63;
  char **v64;
  char *v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  char *v82;
  char **v83;
  char *v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  char *v94;
  id *v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  objc_class *v104;
  id v105;
  id v106;
  char *v107;
  char *v108;
  id v109;
  char *v110;
  objc_class *v111;
  objc_class *v112;
  int *v113;
  char v114;
  void *v115;
  objc_class *v116;
  char *v117;
  uint64_t v118;
  _BOOL4 v119;
  id v120;
  uint64_t v121;
  _BOOL8 v122;
  char **v123;
  char *v124;
  id v125;
  id v126;
  char v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  objc_class *v134;
  __int128 v135;
  int *v136;
  char **v137;
  objc_super v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  __int128 v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  char v150;
  _OWORD v151[3];
  __int128 v152;
  char v153;
  _OWORD v154[4];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  _OWORD v169[2];
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;

  v137 = a4;
  v136 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v136);
  v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_OWORD *)a1 + 4);
  v164 = *((_OWORD *)a1 + 3);
  v165 = v9;
  v167 = *(_OWORD *)(a1 + 11);
  v168 = *(_OWORD *)(a1 + 13);
  v10 = *(_OWORD *)(a2 + 48);
  v11 = *(_OWORD *)(a2 + 80);
  v155 = *(_OWORD *)(a2 + 64);
  v156 = v11;
  v157 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 16);
  v154[0] = *(_OWORD *)a2;
  v154[1] = v12;
  v13 = *(_OWORD *)(a2 + 48);
  v154[2] = *(_OWORD *)(a2 + 32);
  v154[3] = v13;
  v14 = *a1;
  v15 = a1[3];
  v16 = a1[4];
  v17 = *((unsigned __int8 *)a1 + 40);
  v18 = *((unsigned __int8 *)a1 + 80);
  v169[0] = v154[0];
  v169[1] = v12;
  v135 = *(_OWORD *)(a1 + 1);
  v160 = v135;
  v159 = v14;
  v161 = v15;
  v162 = v16;
  v163 = v17;
  v166 = v18;
  v158 = *(_QWORD *)(a2 + 112);
  v19 = *(unsigned __int8 *)(a2 + 40);
  v20 = *(unsigned __int8 *)(a2 + 80);
  v170 = *(_QWORD *)(a2 + 32);
  v171 = v19;
  v172 = v10;
  v173 = v155;
  v174 = v20;
  v21 = *(_OWORD *)(a2 + 104);
  v175 = *(_OWORD *)(a2 + 88);
  v176 = v21;
  if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)&v159, (uint64_t)v169) & 1) != 0)
  {
    v22 = sub_EDAA3C();
    v23 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    v24 = objc_allocWithZone(v23);
    sub_EE6D5C((uint64_t)v154);
    v138.receiver = v24;
    v138.super_class = v23;
    v25 = objc_msgSendSuper2(&v138, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v25, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 0);
    objc_msgSend(v25, "setContentMode:", 4);
    sub_EDDD54((uint64_t)v154);
    sub_EE6DB8((uint64_t)v154);
    v26 = v25;
    v27 = objc_msgSend(v22, "preferredSymbolConfiguration");
    objc_msgSend(v26, "setPreferredSymbolConfiguration:", v27);

    v28 = v26;
    objc_msgSend(v22, "frame");
    objc_msgSend(v28, "setFrame:");

    v29 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = v28;

    v30 = sub_EDAA3C();
    objc_msgSend(v30, "setAlpha:", 0.0);

    v31 = sub_EDAA3C();
    v32 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if ((objc_msgSend(v31, "isDescendantOfView:", v32) & 1) == 0)
      objc_msgSend(v32, "addSubview:", v31);

    sub_5BDB8(a2, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    if ((_QWORD)v135)
    {
      sub_5C0DC((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      v33 = *((_QWORD *)v8 + 1);
      sub_5C0DC((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
      if (v33)
      {
        objc_msgSend(a3, "setNeedsLayout");
        objc_msgSend(a3, "layoutIfNeeded");
      }
    }
    v34 = sub_EDAA3C();
    v35 = *(_QWORD *)(a2 + 104);
    v36 = v137;
    v37 = *v137;
    v38 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
    *v36 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v37 = sub_DDE728(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
      *v137 = v37;
    }
    v41 = *((_QWORD *)v37 + 2);
    v40 = *((_QWORD *)v37 + 3);
    if (v41 >= v40 >> 1)
      v37 = sub_DDE728((char *)(v40 > 1), v41 + 1, 1, v37);
    *((_QWORD *)v37 + 2) = v41 + 1;
    v42 = &v37[88 * v41];
    *((_QWORD *)v42 + 4) = v34;
    *((_QWORD *)v42 + 5) = v35;
    *((_QWORD *)v42 + 6) = 0;
    *((_QWORD *)v42 + 7) = 0;
    *((_QWORD *)v42 + 8) = 0;
    *((_QWORD *)v42 + 9) = v38;
    *((_OWORD *)v42 + 5) = xmmword_1060DF0;
    *((_QWORD *)v42 + 12) = 0;
    *((_QWORD *)v42 + 13) = 0;
    v42[112] = 0;
    *v137 = v37;

  }
  v43 = a1[17];
  v44 = a1[22];
  v45 = *((_BYTE *)a1 + 184);
  v139 = *(_OWORD *)(a1 + 15);
  v140 = v43;
  v46 = *((_OWORD *)a1 + 10);
  v141 = *((_OWORD *)a1 + 9);
  v142 = v46;
  v143 = v44;
  v144 = v45;
  v47 = *(_OWORD *)(a2 + 136);
  v48 = *(_OWORD *)(a2 + 168);
  v151[2] = *(_OWORD *)(a2 + 152);
  v152 = v48;
  v153 = *(_BYTE *)(a2 + 184);
  v151[0] = *(_OWORD *)(a2 + 120);
  v151[1] = v47;
  v49 = *(_QWORD *)(a2 + 136);
  v50 = *(_QWORD *)(a2 + 176);
  v51 = *(_BYTE *)(a2 + 184);
  v145 = *(_OWORD *)(a2 + 120);
  v146 = v49;
  v147 = *(_OWORD *)(a2 + 144);
  v148 = *(_OWORD *)(a2 + 160);
  v149 = v50;
  v150 = v51;
  if ((sub_EE207C((uint64_t)&v139, (uint64_t)&v145) & 1) != 0)
  {
    v52 = sub_EDABA0();
    v53 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_EE6CC4((uint64_t)v151);
    v54 = sub_EDDF34((uint64_t)v151);
    v55 = objc_msgSend(v52, "font");
    objc_msgSend(v54, "setFont:", v55);

    v56 = v54;
    objc_msgSend(v52, "frame");
    objc_msgSend(v56, "setFrame:");

    v57 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = v56;

    v58 = sub_EDABA0();
    objc_msgSend(v58, "setAlpha:", 0.0);

    v59 = sub_EDABA0();
    v60 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if ((objc_msgSend(v59, "isDescendantOfView:", v60) & 1) == 0)
      objc_msgSend(v60, "addSubview:", v59);

    *(_QWORD *)&v135 = v152;
    v61 = sub_EDABA0();
    v62 = v52;
    v63 = sub_EE2EDC((uint64_t)&v139, (uint64_t)&v145);
    v64 = v137;
    v65 = *v137;
    v66 = swift_isUniquelyReferenced_nonNull_native(*v137);
    *v64 = v65;
    if ((v66 & 1) == 0)
    {
      v65 = sub_DDE728(0, *((_QWORD *)v65 + 2) + 1, 1, v65);
      *v137 = v65;
    }
    v68 = *((_QWORD *)v65 + 2);
    v67 = *((_QWORD *)v65 + 3);
    if (v68 >= v67 >> 1)
      v65 = sub_DDE728((char *)(v67 > 1), v68 + 1, 1, v65);
    *((_QWORD *)v65 + 2) = v68 + 1;
    v69 = &v65[88 * v68];
    v70 = v135;
    *((_QWORD *)v69 + 4) = v61;
    *((_QWORD *)v69 + 5) = v70;
    *((_QWORD *)v69 + 6) = 0;
    *((_QWORD *)v69 + 7) = 0;
    *((_QWORD *)v69 + 8) = 0;
    *((_QWORD *)v69 + 9) = v62;
    *((_OWORD *)v69 + 5) = xmmword_1060DF0;
    *((_QWORD *)v69 + 12) = 0;
    *((_QWORD *)v69 + 13) = 0;
    v69[112] = v63;
    *v137 = v65;

  }
  v71 = v136[10];
  v72 = *(void **)((char *)a1 + v71);
  v73 = a2 + v71;
  v74 = *(void **)v73;
  v75 = *(_QWORD *)(v73 + 40);
  if (v72)
  {
    if (v74 && v72 == v74)
      goto LABEL_40;
    if (!v74)
    {
      v76 = 0;
      goto LABEL_28;
    }
  }
  else if (!v74)
  {
    goto LABEL_40;
  }
  v77 = v74;
  v76 = v74;
LABEL_28:
  sub_EE1CE4(v76);

  v78 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v79 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView];
  if (v79)
    objc_msgSend(v79, "setAlpha:", 0.0);
  sub_EDAC9C();
  objc_msgSend(*(id *)&a3[v78], "layoutIfNeeded");
  if (!v74)
  {
    v75 = 0;
    if (v72)
      goto LABEL_32;
LABEL_34:
    *(_QWORD *)&v135 = 0;
    goto LABEL_35;
  }
  v80 = v74;
  if (!v72)
    goto LABEL_34;
LABEL_32:
  v81 = v72;
  *(_QWORD *)&v135 = 1;
LABEL_35:
  v82 = a3;
  v83 = v137;
  v84 = *v137;
  v85 = swift_isUniquelyReferenced_nonNull_native(*v137);
  *v83 = v84;
  v86 = v75;
  if ((v85 & 1) == 0)
  {
    v84 = sub_DDE728(0, *((_QWORD *)v84 + 2) + 1, 1, v84);
    *v137 = v84;
  }
  v88 = *((_QWORD *)v84 + 2);
  v87 = *((_QWORD *)v84 + 3);
  if (v88 >= v87 >> 1)
    v84 = sub_DDE728((char *)(v87 > 1), v88 + 1, 1, v84);
  *((_QWORD *)v84 + 2) = v88 + 1;
  v89 = &v84[88 * v88];
  *((_QWORD *)v89 + 4) = v74;
  *((_QWORD *)v89 + 5) = v86;
  *((_QWORD *)v89 + 6) = 0;
  *((_QWORD *)v89 + 7) = 0;
  *((_QWORD *)v89 + 8) = 0;
  *((_QWORD *)v89 + 9) = v72;
  v90 = v135;
  *((_QWORD *)v89 + 10) = 0;
  *((_QWORD *)v89 + 11) = v90;
  *((_QWORD *)v89 + 12) = 0;
  *((_QWORD *)v89 + 13) = 0;
  v89[112] = 0;
  *v137 = v84;
  a3 = v82;
LABEL_40:
  v91 = v136[11];
  v92 = *(uint64_t *)((char *)a1 + v91 + 16);
  v93 = (uint64_t *)(a2 + v91);
  v94 = (char *)v93[2];
  if (v92 != 1)
  {
    if (v94 != (_BYTE *)&dword_0 + 1)
      return;
    v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
    v97 = v96;
    if (v96)
    {
      v98 = v97;
      objc_msgSend(v97, "removeFromSuperview");
      if (*v95)
      {
        v99 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        v100 = *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
        v101 = *v95;
        objc_msgSend(v99, "insertSubview:aboveSubview:", v101, v100);
        sub_EDAE54();

      }
      v102 = 0;
    }
    else
    {
      v102 = 0;
    }
    goto LABEL_63;
  }
  if (v94 == (_BYTE *)&dword_0 + 1)
    return;
  v103 = *v93;
  v102 = v93[1];
  v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  v104 = (objc_class *)type metadata accessor for SymbolButton.BadgeView();
  v105 = objc_allocWithZone(v104);
  sub_EE2E84(v103, v102, v94);
  v134 = v104;
  if (v96)
  {
    v106 = v96;
    sub_EE2E84(v103, v102, v94);
  }
  else
  {
    v107 = v94;
  }
  v108 = sub_EDE23C(v94, *(double *)&v103, *(double *)&v102);
  v109 = *v95;
  *v95 = v108;
  v110 = v108;
  *(_QWORD *)&v135 = v103;
  v136 = (int *)v110;
  if (v108)
  {
    if (!v109)
      goto LABEL_57;
    v111 = (objc_class *)v109;
    v132 = 1;
    v112 = v111;
    v113 = v136;
    v114 = static NSObject.== infix(_:_:)(v113, v112);
    v134 = v112;

    v92 = v132;
    if ((v114 & 1) != 0)
    {
      v109 = v134;
LABEL_59:

      goto LABEL_60;
    }
LABEL_56:
    objc_msgSend(v109, "removeFromSuperview");
    v108 = (char *)*v95;
    if (!*v95)
    {
LABEL_58:
      v113 = v136;
      goto LABEL_59;
    }
LABEL_57:
    v115 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    v116 = *(objc_class **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
    v133 = v109;
    v134 = v116;
    v117 = v108;
    objc_msgSend(v115, "insertSubview:aboveSubview:", v117, v134);
    sub_EDAE54();

    v109 = v133;
    goto LABEL_58;
  }
  if (v109)
    goto LABEL_56;
LABEL_60:
  v118 = v135;

  if (*v95)
    objc_msgSend(*v95, "setAlpha:", 0.0);
  sub_EDAE54();
  sub_846BC0(v118, v102, v94);
LABEL_63:
  v119 = v92 != 1;
  v120 = *v95;
  if (*v95)
    v121 = v102;
  else
    v121 = 0;
  if (*v95)
    v122 = v119;
  else
    v122 = 0;
  v123 = v137;
  v124 = *v137;
  v125 = v120;
  v126 = v96;
  v127 = swift_isUniquelyReferenced_nonNull_native(v124);
  *v123 = v124;
  if ((v127 & 1) == 0)
  {
    v124 = sub_DDE728(0, *((_QWORD *)v124 + 2) + 1, 1, v124);
    *v137 = v124;
  }
  v129 = *((_QWORD *)v124 + 2);
  v128 = *((_QWORD *)v124 + 3);
  if (v129 >= v128 >> 1)
    v124 = sub_DDE728((char *)(v128 > 1), v129 + 1, 1, v124);
  *((_QWORD *)v124 + 2) = v129 + 1;
  v130 = &v124[88 * v129];
  *((_QWORD *)v130 + 4) = v120;
  *((_QWORD *)v130 + 5) = v121;
  *((_QWORD *)v130 + 6) = v122;
  *((_QWORD *)v130 + 7) = 0;
  *((_QWORD *)v130 + 8) = 0;
  *((_QWORD *)v130 + 9) = v96;
  *((_QWORD *)v130 + 10) = 0;
  *((_QWORD *)v130 + 11) = v96 != 0;
  *((_QWORD *)v130 + 12) = 0;
  *((_QWORD *)v130 + 13) = 0;
  v130[112] = 0;
  *v137 = v124;

}

uint64_t sub_ED5D5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  const void *v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  _QWORD *v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  char v91[24];
  void **aBlock;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  void *v95;
  void *v96;
  _QWORD *v97;
  _BYTE v98[7];
  char v99;
  _BYTE v100[7];
  char v101;

  v90 = a5;
  v9 = type metadata accessor for SymbolButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v76 - v14;
  v83 = (id)objc_opt_self(UIView);
  sub_5BDB8(a2, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
  sub_5BDB8(a3, (uint64_t)v13, type metadata accessor for SymbolButton.Configuration);
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = (v11 + v16 + v17) & ~v16;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_13CEE08, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = a1;
  sub_5C04C((uint64_t)v15, v20 + v17, type metadata accessor for SymbolButton.Configuration);
  sub_5C04C((uint64_t)v13, v20 + v18, type metadata accessor for SymbolButton.Configuration);
  *(_QWORD *)(v20 + v19) = a4;
  v96 = sub_EE7164;
  v97 = (_QWORD *)v20;
  aBlock = _NSConcreteStackBlock;
  v93 = 1107296256;
  v94 = sub_42D124;
  v95 = &block_descriptor_70_4;
  v21 = _Block_copy(&aBlock);
  v22 = v97;
  v23 = a1;
  v89 = a4;
  swift_retain(a4);
  swift_release(v22);
  objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v21, 0.0, 1.0);
  _Block_release(v21);
  v24 = *(_QWORD *)(v90 + 16);
  if (v24)
  {
    v25 = (uint64_t *)(v90 + 72);
    swift_bridgeObjectRetain();
    v26 = 1;
    while (1)
    {
      v27 = *(v25 - 5);
      if (v27)
      {
        v28 = *(v25 - 4);
        v29 = *((double *)v25 - 3);
        v30 = *((double *)v25 - 2);
        v31 = *(v25 - 1);
        v32 = *v25;
        v33 = (_QWORD *)swift_allocObject(&unk_13CEEF8, 40, 7);
        v33[2] = v27;
        v33[3] = v28;
        v33[4] = v23;
        v96 = sub_1EB3AC;
        v97 = v33;
        aBlock = _NSConcreteStackBlock;
        v93 = 1107296256;
        v94 = sub_42D124;
        v95 = &block_descriptor_88_4;
        v34 = _Block_copy(&aBlock);
        v35 = v97;
        sub_A9DEC(v27, v28);
        sub_A9DEC(v27, v28);
        v36 = v23;
        sub_A9DEC(v27, v28);
        sub_A9DEC(v31, v32);
        swift_release(v35);
        objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v34, v29, v30);
        _Block_release(v34);
        sub_5C198(v27, v28);
        sub_5C198(v27, v28);
        sub_5C198(v31, v32);
      }
      if (v24 == v26)
        break;
      v25 += 6;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease(v90);
  }
  v38 = (uint64_t *)(v89 + 16);
  swift_beginAccess(v89 + 16, v91, 0, 0);
  result = *v38;
  v78 = *(_QWORD *)(*v38 + 16);
  if (!v78)
    return result;
  v40 = result + 56;
  v77 = result;
  swift_bridgeObjectRetain_n(result, 2);
  v41 = 1;
  do
  {
    v43 = *(void **)(v40 - 24);
    v42 = *(_QWORD *)(v40 - 16);
    v44 = *(_QWORD *)(v40 - 8);
    v45 = *(_QWORD *)v40;
    v46 = *(_QWORD *)(v40 + 8);
    v47 = *(void **)(v40 + 16);
    v48 = *(_QWORD *)(v40 + 24);
    v49 = *(_QWORD *)(v40 + 32);
    v51 = *(_QWORD *)(v40 + 40);
    v50 = *(_QWORD *)(v40 + 48);
    v52 = *(unsigned __int8 *)(v40 + 56);
    if ((v44 & 1) != 0)
      v53 = 1.0;
    else
      v53 = *(double *)(v40 - 16);
    v90 = *(_QWORD *)(v40 + 32);
    v89 = v48;
    v88 = v47;
    v87 = v46;
    v86 = v42;
    v85 = v45;
    v84 = v41;
    LODWORD(v82) = v52;
    if (v47)
    {
      v101 = v49 & 1;
      if (v52)
        v54 = 1.0;
      else
        v54 = 0.5;
      v81 = v44;
      v55 = v42;
      v56 = swift_allocObject(&unk_13CEEA8, 56, 7);
      *(_QWORD *)(v56 + 16) = v47;
      *(_QWORD *)(v56 + 24) = v48;
      *(_BYTE *)(v56 + 32) = v101;
      *(_DWORD *)(v56 + 33) = *(_DWORD *)v100;
      *(_DWORD *)(v56 + 36) = *(_DWORD *)&v100[3];
      *(_QWORD *)(v56 + 40) = v51;
      *(_QWORD *)(v56 + 48) = v50;
      v96 = sub_EE721C;
      v97 = (_QWORD *)v56;
      aBlock = _NSConcreteStackBlock;
      v93 = 1107296256;
      v94 = sub_42D124;
      v95 = &block_descriptor_82_2;
      v80 = _Block_copy(&aBlock);
      v79 = v97;
      v57 = v55;
      v44 = v81;
      sub_EE6E14(v43, v57, v81, v45, v46);
      sub_EE6E14(v47, v48, v49, v51, v50);
      sub_EE6E14(v47, v48, v49, v51, v50);
      v58 = v47;
      sub_A9DEC(v51, v50);
      swift_release(v79);
      v59 = v80;
      objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v80, 0.0, v54);
      _Block_release(v59);

      sub_5C198(v51, v50);
      if (!v43)
      {
LABEL_28:
        sub_EE6E48(0, v86, v44, v85, v87);
        v71 = v88;
        v72 = v89;
        v73 = v90;
        v74 = v51;
        v75 = v50;
        goto LABEL_29;
      }
    }
    else
    {
      sub_EE6E14(v43, v42, v44, v45, v46);
      sub_EE6E14(0, v48, v49, v51, v50);
      if (!v43)
        goto LABEL_28;
    }
    v99 = v44 & 1;
    if ((_DWORD)v82)
      v60 = 1.0;
    else
      v60 = 0.5;
    if ((_DWORD)v82)
      v61 = 0.0;
    else
      v61 = 0.5;
    v62 = swift_allocObject(&unk_13CEE58, 64, 7);
    v63 = v86;
    *(_QWORD *)(v62 + 16) = v43;
    *(_QWORD *)(v62 + 24) = v63;
    *(_BYTE *)(v62 + 32) = v99;
    *(_DWORD *)(v62 + 33) = *(_DWORD *)v98;
    *(_DWORD *)(v62 + 36) = *(_DWORD *)&v98[3];
    v64 = v85;
    v65 = v43;
    v66 = v87;
    *(_QWORD *)(v62 + 40) = v85;
    *(_QWORD *)(v62 + 48) = v66;
    *(double *)(v62 + 56) = v53;
    v96 = sub_EE71C0;
    v97 = (_QWORD *)v62;
    aBlock = _NSConcreteStackBlock;
    v93 = 1107296256;
    v94 = sub_42D124;
    v95 = &block_descriptor_76_3;
    v67 = _Block_copy(&aBlock);
    v82 = v50;
    v68 = v67;
    v69 = v97;
    sub_EE6E14(v65, v63, v44, v64, v66);
    v70 = v65;
    sub_A9DEC(v64, v66);
    swift_release(v69);
    objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v68, v61, v60);
    _Block_release(v68);

    sub_5C198(v64, v66);
    sub_EE6E48(v65, v63, v44, v64, v66);
    v71 = v88;
    v72 = v89;
    v73 = v90;
    v74 = v51;
    v75 = v82;
LABEL_29:
    sub_EE6E48(v71, v72, v73, v74, v75);
    if (v78 == v84)
      return swift_bridgeObjectRelease_n(v77, 2);
    v40 += 88;
    v41 = v84 + 1;
  }
  while (!__OFADD__(v84, 1));
  __break(1u);
  return swift_bridgeObjectRelease_n(v77, 2);
}

void sub_ED64A8(char *a1, uint64_t ObjCClassFromMetadata, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  char *v16;
  uint64_t v17;
  double v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSString v23;
  int *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char *v36;
  id v37;
  uint64_t v38;
  NSString v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  void *v60;
  char *v61;
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  _QWORD *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  int v79;
  unsigned __int8 *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t i;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void (*v93)(double, double, double, double);
  char *v94;
  void *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  void (*v112)(double, double, double, double);
  uint64_t v113;
  uint64_t v114;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  void *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  int *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _OWORD v140[4];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  _OWORD v145[2];
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  _OWORD v153[2];
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  _OWORD v161[4];
  char v162;
  __int128 v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  char v168;
  __int128 v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  char v174;
  _BYTE v175[48];
  _BYTE v176[16];
  uint64_t v177;
  unint64_t v178;

  v130 = a4;
  v132 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E760);
  __chkstk_darwin(v7);
  v133 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v134);
  v10 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(a1, "traitCollection");
  sub_EDB85C(v13);
  sub_5C0DC((uint64_t)v13, type metadata accessor for SymbolButton.Metrics);
  sub_5BDB8(ObjCClassFromMetadata, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  sub_EDAF9C((uint64_t)v10, v14, v13);
  v136 = (uint64_t)v13;
  sub_EDBA68((uint64_t)v13);
  v15 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_5C090(ObjCClassFromMetadata + 224, (uint64_t)v175, &qword_150E7E0);
  v131 = v15;
  sub_EDD464((uint64_t)v175);
  v135 = *(char **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v17 = *(_QWORD *)(ObjCClassFromMetadata + 192);
  v16 = *(char **)(ObjCClassFromMetadata + 200);
  if (v16 != (_BYTE *)&dword_0 + 1)
  {
    v18 = *(double *)(ObjCClassFromMetadata + 192);
    v20 = *(_QWORD *)(ObjCClassFromMetadata + 216);
    v19 = *(void **)(ObjCClassFromMetadata + 200);
    goto LABEL_5;
  }
  if (qword_1506408 == -1)
    goto LABEL_3;
  while (1)
  {
    swift_once(&qword_1506408, sub_ED822C);
LABEL_3:
    swift_beginAccess(&static SymbolButton.Background.clear, &v139, 0, 0);
    v18 = *(double *)&static SymbolButton.Background.clear;
    v19 = (void *)qword_15840F8;
    v20 = qword_1584108;
    swift_bridgeObjectRetain();
    v21 = v19;
LABEL_5:
    sub_EE2E50(v17, v16);
    v22 = objc_msgSend(v135, "layer");
    if (v20)
      v23 = String._bridgeToObjectiveC()();
    else
      v23 = 0;
    v24 = v134;
    objc_msgSend(v22, "setCompositingFilter:", v23);
    swift_unknownObjectRelease(v23);

    v25 = v19;
    sub_EDDA38(v19, v18);

    swift_bridgeObjectRelease(v20);
    v26 = *(_QWORD *)(a3 + 136);
    v27 = *(_QWORD *)(a3 + 176);
    v28 = *(_BYTE *)(a3 + 184);
    v163 = *(_OWORD *)(a3 + 120);
    v29 = *(_OWORD *)(a3 + 160);
    v165 = *(_OWORD *)(a3 + 144);
    v166 = v29;
    v164 = v26;
    v167 = v27;
    v168 = v28;
    v30 = *(_OWORD *)(ObjCClassFromMetadata + 136);
    v31 = *(_OWORD *)(ObjCClassFromMetadata + 168);
    v161[2] = *(_OWORD *)(ObjCClassFromMetadata + 152);
    v161[3] = v31;
    v162 = *(_BYTE *)(ObjCClassFromMetadata + 184);
    v161[0] = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v161[1] = v30;
    v32 = *(_QWORD *)(ObjCClassFromMetadata + 136);
    v33 = *(_QWORD *)(ObjCClassFromMetadata + 176);
    v34 = *(_BYTE *)(ObjCClassFromMetadata + 184);
    v169 = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v171 = *(_OWORD *)(ObjCClassFromMetadata + 144);
    v172 = *(_OWORD *)(ObjCClassFromMetadata + 160);
    v170 = v32;
    v173 = v33;
    v174 = v34;
    v35 = sub_EE207C((uint64_t)&v163, (uint64_t)&v169);
    v36 = v132;
    if ((v35 & 1) == 0)
    {
      v37 = sub_EDABA0();
      sub_5C090((uint64_t)v161, (uint64_t)v176, &qword_150E7F0);
      sub_EDE0B4((uint64_t)v161);

      sub_5C090((uint64_t)v176, (uint64_t)&v177, &qword_150E7F0);
      if (v178)
      {
        v38 = HIBYTE(v178) & 0xF;
        if ((v178 & 0x2000000000000000) == 0)
          v38 = v177 & 0xFFFFFFFFFFFFLL;
        if (v38)
        {
          v39 = String._bridgeToObjectiveC()();
          objc_msgSend(v36, "setAccessibilityLabel:", v39);

        }
      }
    }
    v40 = *(_OWORD *)(a3 + 16);
    v145[0] = *(_OWORD *)a3;
    v145[1] = v40;
    v41 = *(_OWORD *)(a3 + 64);
    v148 = *(_OWORD *)(a3 + 48);
    v149 = v41;
    v151 = *(_OWORD *)(a3 + 88);
    v152 = *(_OWORD *)(a3 + 104);
    v42 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v43 = *(_OWORD *)(ObjCClassFromMetadata + 80);
    v141 = *(_OWORD *)(ObjCClassFromMetadata + 64);
    v142 = v43;
    v143 = *(_OWORD *)(ObjCClassFromMetadata + 96);
    v44 = *(_OWORD *)(ObjCClassFromMetadata + 16);
    v140[0] = *(_OWORD *)ObjCClassFromMetadata;
    v140[1] = v44;
    v45 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v140[2] = *(_OWORD *)(ObjCClassFromMetadata + 32);
    v140[3] = v45;
    v153[0] = v140[0];
    v153[1] = v44;
    v46 = *(unsigned __int8 *)(a3 + 40);
    v47 = *(unsigned __int8 *)(a3 + 80);
    v146 = *(_QWORD *)(a3 + 32);
    v147 = v46;
    v150 = v47;
    v144 = *(_QWORD *)(ObjCClassFromMetadata + 112);
    v48 = *(unsigned __int8 *)(ObjCClassFromMetadata + 40);
    v49 = *(unsigned __int8 *)(ObjCClassFromMetadata + 80);
    v154 = *(_QWORD *)(ObjCClassFromMetadata + 32);
    v155 = v48;
    v156 = v42;
    v157 = v141;
    v158 = v49;
    v159 = *(_OWORD *)(ObjCClassFromMetadata + 88);
    v160 = *(_OWORD *)(ObjCClassFromMetadata + 104);
    if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v145, (uint64_t)v153) & 1) == 0)
    {
      v50 = sub_EDAA3C();
      sub_EDDD54((uint64_t)v140);

    }
    v51 = v24[11];
    v52 = (uint64_t *)(ObjCClassFromMetadata + v51);
    v53 = *(char **)(ObjCClassFromMetadata + v51 + 16);
    if (v53 != (_BYTE *)&dword_0 + 1 && *(_QWORD *)(a3 + v51 + 16) != 1)
    {
      v54 = *(char **)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
      if (v54)
      {
        v56 = *v52;
        v55 = v52[1];
        if (v53)
        {
          v57 = v54;
          v58 = v53;
          v59 = v53;
        }
        else
        {
          v60 = (void *)objc_opt_self(UIColor);
          v61 = v54;
          sub_EE2E84(v56, v55, 0);
          v59 = (char *)objc_msgSend(v60, "tintColor");
          v58 = 0;
        }
        v62 = v58;
        objc_msgSend(v54, "setBackgroundColor:", v59);

        objc_msgSend(v54, "setAlpha:", *(double *)&v55);
        objc_msgSend(*(id *)&v54[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", *(double *)&v55);
        sub_EDE70C();
        sub_846BC0(v56, v55, v53);

      }
    }
    v63 = objc_msgSend(v131, "contentView");
    v64 = *(_QWORD *)(ObjCClassFromMetadata + 272);
    v65 = *(_QWORD *)(ObjCClassFromMetadata + 280);
    v66 = *(void **)(ObjCClassFromMetadata + 288);
    v67 = v66;
    UIView.border.setter(v64, v65, v66);

    objc_msgSend(v36, "setAlpha:", *(double *)(ObjCClassFromMetadata + v24[17]));
    v68 = (_QWORD *)v136;
    sub_EDB85C((_QWORD *)v136);
    sub_EDC924((uint64_t)v68);
    sub_5C0DC((uint64_t)v68, type metadata accessor for SymbolButton.Metrics);
    v69 = objc_msgSend(v36, "superview");
    objc_msgSend(v69, "layoutIfNeeded");

    objc_msgSend(v36, "layoutIfNeeded");
    if (v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] != 1)
      break;
    v129 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    v70 = v131;
    objc_msgSend(v131, "_setAllowsGroupFiltering:", 1);
    v71 = objc_msgSend(v70, "contentView");
    v72 = objc_msgSend(v71, "subviews");

    v73 = sub_4E684(0, (unint64_t *)&qword_150B080, UIView_ptr);
    v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);

    v136 = v74;
    if (v74 >> 62)
    {
      if (v136 < 0)
        v85 = v136;
      else
        v85 = v136 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v75 = _CocoaArrayWrapper.endIndex.getter(v85);
      if (!v75)
      {
LABEL_44:
        swift_bridgeObjectRelease_n(v136, 2);
        v132[v129] = 0;
        break;
      }
    }
    else
    {
      v75 = *(_QWORD *)((char *)&dword_10 + (v136 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v75)
        goto LABEL_44;
    }
    type metadata accessor for SymbolButton.Label();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v76 = v136 & 0xC000000000000001;
    v135 = &v132[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v132[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v137, 0, 0);
    v17 = 4;
    v77 = 0;
    if (v76)
    {
LABEL_27:
      v78 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v77, v136);
      goto LABEL_29;
    }
    while (1)
    {
      v78 = (char *)*(id *)(v136 + 8 * v17);
LABEL_29:
      v16 = v78;
      a3 = v77 + 1;
      if (__OFADD__(v77, 1))
        break;
      if (!objc_msgSend(v78, "isKindOfClass:", ObjCClassFromMetadata))
      {
        v79 = v135[v24[19]];
        if (v79 == 2)
        {
          v80 = (unsigned __int8 *)&v135[v24[9]];
          v81 = v133;
          sub_5C238((uint64_t)v80, v133, &qword_150E760);
          v82 = type metadata accessor for UIView.Corner(0);
          v83 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v81, 1, v82) != 1;
          v84 = v81;
          v24 = v134;
          sub_56024(v84, &qword_150E760);
        }
        else
        {
          v83 = v79 & 1;
        }
        objc_msgSend(v16, "setClipsToBounds:", v83);
      }

      if (a3 == v75)
        goto LABEL_44;
      v77 = ++v17 - 4;
      if (v76)
        goto LABEL_27;
    }
    __break(1u);
  }
  v86 = v130 + 16;
  swift_beginAccess(v130 + 16, &v138, 0, 0);
  v87 = *(_QWORD *)(*(_QWORD *)v86 + 16);
  if (!v87)
    return;
  v88 = v87 - 1;
  v129 = swift_bridgeObjectRetain();
  for (i = v129 + 56; ; i += 88)
  {
    v91 = *(void **)(i - 24);
    v90 = *(_QWORD *)(i - 16);
    v92 = *(_QWORD *)(i - 8);
    v93 = *(void (**)(double, double, double, double))i;
    v94 = *(char **)(i + 8);
    v95 = *(void **)(i + 16);
    v96 = *(_QWORD **)(i + 24);
    v97 = *(_QWORD *)(i + 32);
    v135 = v94;
    v136 = (uint64_t)v96;
    v98 = *(_QWORD *)(i + 40);
    v99 = *(_QWORD *)(i + 48);
    v133 = v92;
    v134 = (int *)v93;
    v132 = (char *)v90;
    if (v91)
    {
      if (v93)
      {
        sub_EE6E14(v91, v90, v92, (uint64_t)v93, (uint64_t)v94);
        sub_EE6E14(v95, v136, v97, v98, v99);
        v100 = objc_msgSend(v131, "contentView");
        v130 = v99;
        v101 = v97;
        v102 = v88;
        v103 = v100;
        objc_msgSend(v100, "bounds");
        v105 = v104;
        v107 = v106;
        v109 = v108;
        v111 = v110;

        v112 = (void (*)(double, double, double, double))v98;
        v93(v105, v107, v109, v111);
        v88 = v102;
        v97 = v101;
        v99 = v130;
        objc_msgSend(v91, "setFrame:");
        if (!v95)
          goto LABEL_55;
      }
      else
      {
        sub_EE6E14(v91, v90, v92, 0, (uint64_t)v94);
        v112 = (void (*)(double, double, double, double))v98;
        sub_EE6E14(v95, v136, v97, v98, v99);
        if (!v95)
        {
LABEL_55:
          sub_EE6E48(v91, (uint64_t)v132, v133, (uint64_t)v134, (uint64_t)v135);
          v124 = 0;
          v125 = (_QWORD *)v136;
          v126 = v97;
          v127 = (uint64_t)v112;
          goto LABEL_57;
        }
      }
    }
    else
    {
      sub_EE6E14(0, v90, v92, (uint64_t)v93, (uint64_t)v94);
      sub_EE6E14(v95, v136, v97, v98, v99);
      v112 = (void (*)(double, double, double, double))v98;
      if (!v95)
        goto LABEL_55;
    }
    if (v112)
    {
      v113 = v97;
      v114 = v88;
      v115 = objc_msgSend(v131, "contentView");
      objc_msgSend(v115, "bounds");
      v117 = v116;
      v119 = v118;
      v121 = v120;
      v123 = v122;

      v112(v117, v119, v121, v123);
      v88 = v114;
      objc_msgSend(v95, "setFrame:");
      sub_EE6E48(v91, (uint64_t)v132, v133, (uint64_t)v134, (uint64_t)v135);
      v124 = v95;
      v125 = (_QWORD *)v136;
      v126 = v113;
      v127 = (uint64_t)v112;
    }
    else
    {
      sub_EE6E48(v91, (uint64_t)v132, v133, (uint64_t)v134, (uint64_t)v135);
      v124 = v95;
      v125 = (_QWORD *)v136;
      v126 = v97;
      v127 = 0;
    }
LABEL_57:
    sub_EE6E48(v124, (uint64_t)v125, v126, v127, v99);
    if (!v88)
      break;
    --v88;
  }
  swift_bridgeObjectRelease(v129);
}

