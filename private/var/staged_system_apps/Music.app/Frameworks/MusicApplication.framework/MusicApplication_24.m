double sub_CDE738()
{
  uint64_t v0;

  return sub_CDED48(v0, 0);
}

void sub_CDE754(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unsigned int v5;
  void *Strong;
  void *v7;
  id v8;
  double v9;
  double v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  NSObject *oslog;
  char v49;
  uint64_t v50;
  uint64_t v51[3];

  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v3 = (void *)objc_opt_self(UIApplication);
    v4 = objc_msgSend(v3, "sharedApplication");
    v5 = objc_msgSend(v4, "isProtectedDataAvailable");

    if (v5)
    {
      swift_beginAccess(v1 + 16, v51, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (Strong
        && (v7 = Strong,
            v8 = objc_msgSend(Strong, "screen"),
            v7,
            objc_msgSend(v8, "brightness"),
            v10 = v9,
            v8,
            v10 > 0.0))
      {
        v11 = *(unsigned __int8 *)(v1 + 64);
        *(_BYTE *)(v1 + 64) = 0;
        if (v11 == 1)
        {
          *(_QWORD *)(v1 + 72) = 0;
          *(_BYTE *)(v1 + 80) = 1;
        }
        if (qword_14F9F90 != -1)
          swift_once(&qword_14F9F90, sub_CF9B0C);
        v12 = type metadata accessor for Logger(0);
        v13 = __swift_project_value_buffer(v12, (uint64_t)qword_15822C0);
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter(v14);
        if (os_log_type_enabled(v14, v15))
        {
          v16 = swift_slowAlloc(22, -1);
          v17 = swift_slowAlloc(32, -1);
          v50 = v17;
          *(_DWORD *)v16 = 134349314;
          *(double *)(v16 + 4) = v10;
          *(_WORD *)(v16 + 12) = 2080;
          v18 = objc_msgSend(v3, "sharedApplication");
          v19 = objc_msgSend(v18, "isProtectedDataAvailable");

          if (v19)
            v20 = 0x64656B636F6C6E75;
          else
            v20 = 0x64656B636F6CLL;
          if (v19)
            v21 = (char *)0xE800000000000000;
          else
            v21 = (char *)0xE600000000000000;
          *(_QWORD *)(v16 + 14) = sub_BA95EC((char *)v20, v21, &v50);
          swift_bridgeObjectRelease(v21);
          _os_log_impl(&dword_0, v14, v15, "[üì∏] Brightness is at %{public}f, device is %s", (uint8_t *)v16, 0x16u);
          swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v17, -1, -1);
          swift_slowDealloc(v16, -1, -1);
        }

        v23 = Logger.logObject.getter(v22);
        v24 = static os_log_type_t.default.getter(v23);
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc(12, -1);
          v26 = swift_slowAlloc(32, -1);
          v50 = v26;
          *(_DWORD *)v25 = 136446210;
          v49 = a1;
          v27 = (char *)String.init<A>(describing:)(&v49, &_s18SnapshotControllerC6ReasonON);
          v29 = v28;
          *(_QWORD *)(v25 + 4) = sub_BA95EC(v27, v28, &v50);
          swift_bridgeObjectRelease(v29);
          _os_log_impl(&dword_0, v23, v24, "[üì∏‚úÖ:%{public}s] Taking Snapshot!", (uint8_t *)v25, 0xCu);
          swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v26, -1, -1);
          swift_slowDealloc(v25, -1, -1);
        }

        v30 = objc_msgSend(v3, "sharedApplication");
        objc_msgSend(v30, "_updateSnapshotForBackgroundApplication:", 0);

      }
      else
      {
        if (qword_14F9F90 != -1)
          swift_once(&qword_14F9F90, sub_CF9B0C);
        v39 = type metadata accessor for Logger(0);
        v40 = __swift_project_value_buffer(v39, (uint64_t)qword_15822C0);
        v41 = Logger.logObject.getter(v40);
        v42 = static os_log_type_t.default.getter(v41);
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc(12, -1);
          v44 = swift_slowAlloc(32, -1);
          v50 = v44;
          *(_DWORD *)v43 = 136446210;
          v49 = a1;
          v45 = (char *)String.init<A>(describing:)(&v49, &_s18SnapshotControllerC6ReasonON);
          v47 = v46;
          *(_QWORD *)(v43 + 4) = sub_BA95EC(v45, v46, &v50);
          swift_bridgeObjectRelease(v47);
          _os_log_impl(&dword_0, v41, v42, "[üì∏‚ùå:%{public}s] Skipping: Screen brightness is 0", (uint8_t *)v43, 0xCu);
          swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v44, -1, -1);
          swift_slowDealloc(v43, -1, -1);
        }

      }
    }
    else
    {
      if (qword_14F9F90 != -1)
        swift_once(&qword_14F9F90, sub_CF9B0C);
      v31 = type metadata accessor for Logger(0);
      v32 = __swift_project_value_buffer(v31, (uint64_t)qword_15822C0);
      oslog = Logger.logObject.getter(v32);
      v33 = static os_log_type_t.default.getter(oslog);
      if (os_log_type_enabled(oslog, v33))
      {
        v34 = swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v51[0] = v35;
        *(_DWORD *)v34 = 136446210;
        LOBYTE(v50) = a1;
        v36 = (char *)String.init<A>(describing:)(&v50, &_s18SnapshotControllerC6ReasonON);
        v38 = v37;
        *(_QWORD *)(v34 + 4) = sub_BA95EC(v36, v37, v51);
        swift_bridgeObjectRelease(v38);
        _os_log_impl(&dword_0, oslog, v33, "[üì∏‚ùå:%{public}s] Skipping Snapshot Request: Device is locked", (uint8_t *)v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

      }
      else
      {

      }
    }
  }
}

double sub_CDED48(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_CDE754(a2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_CDEDA4()
{
  uint64_t v0;

  return sub_CDED48(v0, 1);
}

void sub_CDEDC0(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + 48);
  v33 = v8;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v2 + 48) = a1;
    v9 = a1;

    return;
  }
  if (v8)
  {
    v10 = objc_msgSend(v8, "tracklist");
    v11 = objc_msgSend(v10, "playingItem");

    if (!a1)
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
      if (!v11)
        goto LABEL_25;
      goto LABEL_9;
    }
  }
  else
  {
    v11 = 0;
    v13 = 0;
    v14 = 0;
    if (!a1)
      goto LABEL_25;
  }
  v15 = objc_msgSend(a1, "tracklist");
  v12 = objc_msgSend(v15, "playingItem");

  if (!v11)
  {
    v13 = 0;
    v19 = 0;
    v17 = 0;
    v14 = 0;
    if (!v12)
      goto LABEL_25;
    goto LABEL_12;
  }
LABEL_9:
  v16 = objc_msgSend(v11, "contentItemIdentifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  if (!v12)
  {
    v14 = 0;
    v13 = v11;
    if (!v19)
      goto LABEL_25;
    goto LABEL_22;
  }
  v13 = v11;
LABEL_12:
  v20 = objc_msgSend(v12, "contentItemIdentifier");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (!v19)
  {
    v14 = v12;
    if (!v23)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (!v23)
  {
    v11 = v13;
LABEL_22:
    v23 = v19;
    v13 = v11;
LABEL_23:
    v24 = swift_bridgeObjectRelease(v23);
    goto LABEL_27;
  }
  if (v17 == v21 && v19 == v23)
  {
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    v14 = v12;
    goto LABEL_25;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
  swift_bridgeObjectRelease(v19);
  v24 = swift_bridgeObjectRelease(v23);
  v14 = v12;
  if ((v25 & 1) == 0)
  {
LABEL_27:
    static TaskPriority.userInitiated.getter(v24);
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 1, v26);
    v27 = swift_allocObject(&unk_13B77F0, 32, 7);
    *(_QWORD *)(v27 + 16) = &unk_15007A0;
    *(_QWORD *)(v27 + 24) = v2;
    swift_retain(v2);
    v28 = static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_15007B0, v27, (uint64_t)&type metadata for () + 8, 1.0);
    swift_release(v27);
    sub_56024((uint64_t)v7, (uint64_t *)&unk_1500E30);
    v29 = *(_QWORD *)(v2 + 56);
    *(_QWORD *)(v2 + 56) = v28;
    swift_retain(v28);
    if (v29)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      Task.cancel()();
      swift_release(v29);
    }
    swift_release(v28);

    goto LABEL_31;
  }
LABEL_25:
  if ((sub_CDF1A0(v13, v14) & 1) != 0)
  {
    v12 = v14;
    goto LABEL_27;
  }

LABEL_31:
  v30 = *(void **)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  v31 = a1;

}

double sub_CDF140(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_CDEDC0(v2, 0);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_CDF1A0(void *a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  unsigned int v8;
  id v10;
  void *v11;

  if (a1)
  {
    v3 = objc_msgSend(a1, "metadataObject");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "innermostModelObject");

      if (!a2)
        goto LABEL_4;
LABEL_8:
      v10 = objc_msgSend(a2, "metadataObject");
      if (v10)
      {
        v11 = v10;
        a2 = objc_msgSend(v10, "innermostModelObject");

        if (v5)
          goto LABEL_5;
      }
      else
      {
        a2 = 0;
        if (v5)
          goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
  v5 = 0;
  if (a2)
    goto LABEL_8;
LABEL_4:
  if (v5)
  {
LABEL_5:
    if (a2)
    {
      v6 = objc_msgSend(v5, "identifiers");
      v7 = objc_msgSend(a2, "identifiers");
      v8 = objc_msgSend(v6, "intersectsSet:", v7);

      return v8 ^ 1;
    }

    return 1;
  }
LABEL_10:
  if (a2)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_CDF2E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_CDF350, v4, v5);
}

uint64_t sub_CDF350()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release();
  if ((static Task<>.isCancelled.getter(v1) & 1) == 0)
    sub_CDF394(2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_CDF394(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t aBlock[6];

  if ((*(_BYTE *)(v1 + 64) & 1) == 0)
  {
    v2 = v1;
    *(_BYTE *)(v1 + 64) = 1;
    *(_QWORD *)(v1 + 72) = 0;
    *(_BYTE *)(v1 + 80) = 1;
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v4 = type metadata accessor for Logger(0);
    v5 = __swift_project_value_buffer(v4, (uint64_t)qword_15822C0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      aBlock[0] = v9;
      *(_DWORD *)v8 = 136446210;
      v15 = a1;
      v10 = (char *)String.init<A>(describing:)(&v15, &_s18SnapshotControllerC6ReasonON);
      *(_QWORD *)(v8 + 4) = sub_BA95EC(v10, v11, aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v6, v7, "[üì∏] Set Needs Snapshot for Reason=%{public}s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }

    v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v13 = swift_allocObject(&unk_13B7818, 25, 7);
    *(_QWORD *)(v13 + 16) = v2;
    *(_BYTE *)(v13 + 24) = a1;
    aBlock[4] = (uint64_t)sub_CDF89C;
    aBlock[5] = v13;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_42D124;
    aBlock[3] = (uint64_t)&block_descriptor_305;
    v14 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend(v12, "_performBlockAfterCATransactionCommits:", v14, swift_release().n128_f64[0]);
    _Block_release(v14);

  }
}

uint64_t Player.SnapshotController.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t Player.SnapshotController.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 81, 7);
}

uint64_t sub_CDF650@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

double sub_CDF69C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + 16;
  swift_beginAccess(v3, v5, 1, 0);
  *(_QWORD *)&result = swift_unknownObjectWeakAssign(v3, v2).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for Player.SnapshotController()
{
  return objc_opt_self(_TtCC9MusicCore6Player18SnapshotController);
}

unint64_t sub_CDF710()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1500770;
  if (!qword_1500770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1500EA0);
    sub_950D0(&qword_1500778, &qword_1500780, MPCPlayerResponse_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1500770);
  }
  return result;
}

double sub_CDF794(void **a1)
{
  uint64_t v1;

  return sub_CDF140(a1, v1);
}

uint64_t sub_CDF79C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_150079C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_50F8C;
  return sub_CDF2E4(v0);
}

uint64_t sub_CDF7E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CDF808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_15007AC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_15007A8 + dword_15007A8))(a1, v4);
}

uint64_t sub_CDF878()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_CDF89C()
{
  uint64_t v0;

  sub_CDE754(*(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper_301(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_301(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t _s18SnapshotControllerC6ReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_CDF928 + 4 * byte_10A26E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_CDF95C + 4 * byte_10A26E0[v4]))();
}

uint64_t sub_CDF95C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CDF964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCDF96CLL);
  return result;
}

uint64_t sub_CDF978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCDF980);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_CDF984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CDF98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18SnapshotControllerC6ReasonOMa()
{
  return &_s18SnapshotControllerC6ReasonON;
}

unint64_t sub_CDF9AC()
{
  unint64_t result;

  result = qword_15007B8;
  if (!qword_15007B8)
  {
    result = swift_getWitnessTable(&unk_10A27D8, &_s18SnapshotControllerC6ReasonON);
    atomic_store(result, (unint64_t *)&qword_15007B8);
  }
  return result;
}

uint64_t PlaybackController.insert(_:location:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[20] = v5;
  v3[21] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v3[22] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[23] = v8;
  v3[24] = v9;
  return swift_task_switch(sub_CDFA88, v8, v9);
}

uint64_t sub_CDFA88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t KeyPath;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  _QWORD *v34;
  uint64_t v36;

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  v4 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v5 = (char *)UUID.uuidString.getter(v4);
  v7 = v6;
  v0[25] = v5;
  v0[26] = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v8 = (void *)v0[16];
  v9 = type metadata accessor for Logger(0);
  v0[27] = __swift_project_value_buffer(v9, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v7, 2);
  v10 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = os_log_type_enabled(v10, v11);
  v13 = (void *)v0[16];
  if (v12)
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v36 = v15;
    *(_DWORD *)v14 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v14 + 4) = sub_BA95EC(v5, v7, &v36);
    swift_bridgeObjectRelease_n(v7, 3);
    *(_WORD *)(v14 + 12) = 2082;
    v16 = v13;
    v17 = objc_msgSend(v16, "description", v36);
    v18 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    *(_QWORD *)(v14 + 14) = sub_BA95EC(v18, v20, &v36);
    swift_bridgeObjectRelease(v20);

    _os_log_impl(&dword_0, v10, v11, "‚§µÔ∏è Inserting new intent with ID=%{public}s, intent=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v7, 2);

  }
  v21 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v21, v0 + 7, 0, 0);
  v22 = *v21;
  v24 = (void *)v0[16];
  v23 = (void *)v0[17];
  if (!v22)
  {
    v30 = v24;
    sub_1D81FC(v23);
    goto LABEL_10;
  }
  KeyPath = swift_getKeyPath(&unk_10A2810);
  v26 = swift_getKeyPath(&unk_10A2838);
  v27 = v24;
  swift_retain(v22);
  sub_1D81FC(v23);
  static Published.subscript.getter(v0 + 14, v22, KeyPath, v26);
  swift_release(v26);
  swift_release(KeyPath);
  swift_release(v22);
  v28 = (void *)v0[14];
  if (!v28)
  {
LABEL_10:
    v29 = 0;
    goto LABEL_11;
  }

  v29 = 1;
LABEL_11:
  v32 = (void *)v0[16];
  v31 = (void *)v0[17];
  MPCPlaybackIntent.isInGroupSession.setter(v29);
  v0[5] = &type metadata for Player.InsertCommand;
  v0[6] = &protocol witness table for Player.InsertCommand;
  v0[2] = v32;
  v0[3] = v31;
  v33 = v32;
  sub_1D81FC(v31);
  v34 = (_QWORD *)swift_task_alloc(dword_15007EC);
  v0[28] = v34;
  *v34 = v0;
  v34[1] = sub_CDFDD4;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)(v0 + 2), 0, 0, (uint64_t)v32);
}

uint64_t sub_CDFDD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[23];
    v7 = v4[24];
    v8 = sub_CDFFD0;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_1(v4 + 2);
    v6 = v4[23];
    v7 = v4[24];
    v8 = sub_CDFE54;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_CDFE54()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 176));
  v1 = swift_bridgeObjectRetain();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 208);
  if (v4)
  {
    v6 = *(char **)(v0 + 200);
    v8 = *(void **)(v0 + 128);
    v7 = *(void **)(v0 + 136);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v13 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v6, v5, &v13);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl(&dword_0, v2, v3, "‚úÖ Successfully inserted intent with ID=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    sub_DB514(v7);
  }
  else
  {
    v11 = *(void **)(v0 + 136);

    sub_DB514(v11);
    swift_bridgeObjectRelease_n(v5, 2);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CDFFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  void *v31;
  void *v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 232);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 120) = v1;
  swift_errorRetain(v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if (!swift_dynamicCast(v0 + 80, v0 + 120, v2, &type metadata for Player.PlaybackError, 0))
  {
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(void **)(v0 + 136);

    sub_DB514(v17);
    swift_release(v16);
    swift_bridgeObjectRelease(v15);
LABEL_12:
    v36 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 232));
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 240) = v4;
  *(_QWORD *)(v0 + 248) = v3;
  v5 = (void *)_convertErrorToNSError(_:)(v4);
  v6 = (char *)objc_msgSend(v5, "code");

  if (v6 != (_BYTE *)&dword_0 + 3)
  {
    swift_release(*(_QWORD *)(v0 + 176));
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain(v4);
    v18 = swift_bridgeObjectRetain();
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = os_log_type_enabled(v19, v20);
    v22 = *(char **)(v0 + 208);
    if (v21)
    {
      v23 = *(char **)(v0 + 200);
      v24 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      v37[0] = v25;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v24 + 4) = sub_BA95EC(v23, v22, v37);
      swift_bridgeObjectRelease_n(v22, 3);
      *(_WORD *)(v24 + 12) = 2082;
      *(_QWORD *)(v0 + 96) = v4;
      *(_QWORD *)(v0 + 104) = v3;
      swift_errorRetain(v4);
      swift_bridgeObjectRetain();
      v26 = (char *)String.init<A>(describing:)(v0 + 96, &type metadata for Player.PlaybackError);
      v28 = v27;
      *(_QWORD *)(v24 + 14) = sub_BA95EC(v26, v27, v37);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      _os_log_impl(&dword_0, v19, v20, "‚ùå Insert failed for intent with ID=%{public}s, error=%{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 208), 2);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
    }

    v32 = *(void **)(v0 + 128);
    v31 = *(void **)(v0 + 136);
    v33 = sub_CF4974();
    swift_allocError(&type metadata for Player.PlaybackError, v33, 0, 0);
    *v34 = v4;
    v34[1] = v3;
    swift_errorRetain(v4);
    v35 = swift_bridgeObjectRetain();
    swift_willThrow(v35);

    sub_DB514(v31);
    swift_errorRelease(v4);
    swift_bridgeObjectRelease(v3);
    goto LABEL_12;
  }
  v7 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 208), 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(char **)(v0 + 208);
  if (v10)
  {
    v12 = *(char **)(v0 + 200);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v37[0] = v14;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v12, v11, v37);
    swift_bridgeObjectRelease_n(v11, 3);
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v13 + 14) = sub_BA95EC((char *)0xD00000000000001FLL, (char *)0x8000000001107B90, v37);
    _os_log_impl(&dword_0, v8, v9, "‚ùå Insert failed for intent with ID=%{public}s, error=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 208), 2);
  }

  v29 = (_QWORD *)swift_task_alloc(dword_1500804);
  *(_QWORD *)(v0 + 256) = v29;
  *v29 = v0;
  v29[1] = sub_CE0460;
  return sub_CE30D0(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
}

uint64_t sub_CE0460()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  v3 = v2[26];
  if (v0)
  {
    swift_errorRelease(v0);
    swift_bridgeObjectRelease(v3);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_CF7518;
  }
  else
  {
    swift_bridgeObjectRelease(v2[26]);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_CE04E4;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_CE04E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 176));
  v5 = sub_CF49B8();
  v6 = swift_allocError(&type metadata for PlaybackController.CommandError, v5, 0, 0);
  *(_QWORD *)v7 = 3;
  *(_BYTE *)(v7 + 8) = 2;
  swift_willThrow(v6);

  sub_DB514(v3);
  swift_errorRelease(v1);
  swift_bridgeObjectRelease(v2);
  v8 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaybackController.add(_:route:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  v4 = type metadata accessor for CocoaError.Code(0);
  v3[21] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[22] = v5;
  v3[23] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3[24] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[25] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[26] = swift_task_alloc(v8);
  v3[27] = swift_task_alloc(v8);
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v3[28] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[29] = swift_task_alloc(v10);
  v3[30] = swift_task_alloc(v10);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v3[31] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v12);
  v3[33] = swift_task_alloc(v12);
  v13 = type metadata accessor for UUID(0);
  v3[34] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[35] = v14;
  v3[36] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v3[37] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v3[38] = v17;
  v3[39] = v18;
  return swift_task_switch(sub_CE0700, v17, v18);
}

uint64_t sub_CE0700()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v50;
  uint64_t v51;

  v2 = v0[35];
  v1 = v0[36];
  v3 = v0[34];
  v4 = (uint64_t *)(v0[20] + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
  swift_beginAccess(v4, v0 + 2, 1, 0);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[4] = 0;
  sub_CF49FC(v5, v6, v7, v8, v9);
  v10 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  v0[40] = v11;
  v0[41] = v12;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v14 = v0 + 5;
  v15 = v0[33];
  v16 = v0[18];
  v17 = type metadata accessor for Logger(0);
  v0[42] = v17;
  v0[43] = __swift_project_value_buffer(v17, (uint64_t)static Logger.playbackController);
  sub_5BDB8(v16, v15, type metadata accessor for PlaybackIntentDescriptor);
  v18 = swift_bridgeObjectRetain_n(v13, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v22 = v0[33];
  if (v21)
  {
    v23 = v0[31];
    v24 = v0[32];
    v25 = swift_slowAlloc(22, -1);
    v50 = (char *)v11;
    v51 = swift_slowAlloc(64, -1);
    v26 = v51;
    *(_DWORD *)v25 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v25 + 4) = sub_BA95EC(v50, v13, &v51);
    swift_bridgeObjectRelease_n(v13, 3);
    *(_WORD *)(v25 + 12) = 2082;
    sub_5BDB8(v22, v24, type metadata accessor for PlaybackIntentDescriptor);
    v27 = v24;
    v14 = v0 + 5;
    v28 = (char *)String.init<A>(describing:)(v27, v23);
    v30 = v29;
    *(_QWORD *)(v25 + 14) = sub_BA95EC(v28, v29, &v51);
    swift_bridgeObjectRelease(v30);
    sub_5C0DC(v22, type metadata accessor for PlaybackIntentDescriptor);
    _os_log_impl(&dword_0, v19, v20, "‚ûï Adding new playback intent with ID=%{public}s, descriptor=%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    v31 = v26;
    v11 = (uint64_t)v50;
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v13, 2);
    sub_5C0DC(v22, type metadata accessor for PlaybackIntentDescriptor);
  }

  v32 = v0[30];
  v33 = v0[28];
  sub_5BDB8(v0[18], v32, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v32, v33);
  v35 = (void **)v0[30];
  if (EnumCaseMultiPayload == 1)
  {
    v36 = v0[27];
    v37 = v0[24];
    v38 = v0[25];
    v39 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v38 + 32))(v36, v35, v37);
    v40 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v39);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
  }
  else
  {
    v40 = *v35;
  }
  v41 = (uint64_t *)(v0[20] + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v41, v14, 0, 0);
  v42 = *v41;
  if (!*v41)
    goto LABEL_12;
  KeyPath = swift_getKeyPath(&unk_10A2810);
  v44 = swift_getKeyPath(&unk_10A2838);
  v45 = swift_retain(v42);
  static Published.subscript.getter(v0 + 14, v45, KeyPath, v44);
  swift_release(v44);
  swift_release(KeyPath);
  swift_release(v42);
  v46 = (void *)v0[14];
  if (v46)
  {

    v47 = 1;
  }
  else
  {
LABEL_12:
    v47 = 0;
  }
  MPCPlaybackIntent.isInGroupSession.setter(v47);

  v48 = (_QWORD *)swift_task_alloc(dword_1500824);
  v0[44] = v48;
  *v48 = v0;
  v48[1] = sub_CE0ACC;
  return sub_CE42A0(v0[18], v11, (uint64_t)v13, v0[19]);
}

uint64_t sub_CE0ACC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_CE1214;
  else
    v4 = sub_CE0B2C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_CE0B2C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 328), 2);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 328);
  if (v4)
  {
    v6 = *(char **)(v0 + 320);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v27 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v7 + 4) = sub_BA95EC(v6, v5, &v27);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl(&dword_0, v2, v3, "‚úÖ Successfully added intent with ID=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
  }

  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 144);
  _s9MusicCore9AppReviewO16recordSongPlayedyyFZ_0();
  if (*(_BYTE *)(v10 + *(int *)(v9 + 32)) == 1)
  {
    v11 = (_QWORD *)swift_task_alloc(dword_150083C);
    *(_QWORD *)(v0 + 368) = v11;
    *v11 = v0;
    v11[1] = sub_CE0DF0;
    return sub_CE913C();
  }
  v13 = *(_QWORD *)(v0 + 144);
  if ((*(_BYTE *)(v13 + *(int *)(*(_QWORD *)(v0 + 248) + 36)) & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 328);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 232);
    sub_5BDB8(v13, v16, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v16, v15) == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));
      v17 = (_QWORD *)swift_task_alloc(async function pointer to MusicPlaybackIntentDescriptor.donate()[1]);
      *(_QWORD *)(v0 + 376) = v17;
      *v17 = v0;
      v17[1] = sub_CE0FA4;
      return MusicPlaybackIntentDescriptor.donate()();
    }
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v18);
    sub_5C0DC(v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  }
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 232);
  v22 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE0DF0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 368));
  return swift_task_switch(sub_CE0E3C, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_CE0E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 144);
  if ((*(_BYTE *)(v1 + *(int *)(*(_QWORD *)(v0 + 248) + 36)) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 328);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 232);
    sub_5BDB8(v1, v4, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v4, v3) == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));
      v5 = (_QWORD *)swift_task_alloc(async function pointer to MusicPlaybackIntentDescriptor.donate()[1]);
      *(_QWORD *)(v0 + 376) = v5;
      *v5 = v0;
      v5[1] = sub_CE0FA4;
      return MusicPlaybackIntentDescriptor.donate()();
    }
    v7 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v7);
    sub_5C0DC(v8, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  }
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE0FA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(v2[41]);
    v4 = v2[38];
    v5 = v2[39];
    v6 = sub_CE1B84;
  }
  else
  {
    v4 = v2[38];
    v5 = v2[39];
    v6 = sub_CE1010;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_CE1010()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  swift_release(*(_QWORD *)(v0 + 296));
  if (qword_14F9F88 != -1)
    swift_once(&qword_14F9F88, sub_CF3F20);
  __swift_project_value_buffer(*(_QWORD *)(v0 + 336), (uint64_t)static Logger.siriIntents);
  v1 = swift_bridgeObjectRetain();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 328);
  if (v4)
  {
    v6 = *(char **)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v23 = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v6, v5, &v23);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl(&dword_0, v2, v3, "Successfully donated intent with ID=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 192);

    swift_bridgeObjectRelease_n(v5, 2);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v15 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE1214()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  id v58;
  os_log_type_t v59;
  _BOOL4 v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  os_log_type_t v69;
  _BOOL4 v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85[2];

  v1 = *(_QWORD *)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 296));
  *(_QWORD *)(v0 + 96) = v1;
  v2 = (_QWORD *)(v0 + 96);
  swift_errorRetain(v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if (swift_dynamicCast(v0 + 80, v0 + 96, v3, &type metadata for PlaybackController.CommandError, 0))
  {
    v4 = *(char **)(v0 + 80);
    v5 = *(unsigned __int8 *)(v0 + 88);
    if (*(_BYTE *)(v0 + 88))
    {
      if (v5 != 3)
      {
LABEL_7:
        sub_CF4A2C(*(id *)(v0 + 80), v5);
        goto LABEL_8;
      }
      if (v4)
      {
        if (v4 == (_BYTE *)&dword_0 + 2)
        {
          swift_errorRelease(*v2);
          goto LABEL_9;
        }
        goto LABEL_7;
      }
      v68 = swift_bridgeObjectRetain();
      v37 = Logger.logObject.getter(v68);
      v69 = static os_log_type_t.error.getter();
      v70 = os_log_type_enabled(v37, v69);
      v71 = *(char **)(v0 + 328);
      if (v70)
      {
        v72 = *(char **)(v0 + 320);
        v73 = swift_slowAlloc(12, -1);
        v74 = swift_slowAlloc(32, -1);
        v85[0] = v74;
        *(_DWORD *)v73 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v73 + 4) = sub_BA95EC(v72, v71, v85);
        swift_bridgeObjectRelease_n(v71, 3);
        _os_log_impl(&dword_0, v37, v69, "‚ùå Intent id=%{public}s) ‚Äî Missing player", (uint8_t *)v73, 0xCu);
        swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v74, -1, -1);
        swift_slowDealloc(v73, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
      }
    }
    else
    {
      sub_CF4A60(*(id *)(v0 + 80), v5);
      swift_bridgeObjectRetain();
      v36 = sub_CF4A60(v4, 0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter();
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(char **)(v0 + 328);
      if (v39)
      {
        v41 = *(char **)(v0 + 320);
        v42 = swift_slowAlloc(22, -1);
        v43 = swift_slowAlloc(64, -1);
        v85[0] = v43;
        *(_DWORD *)v42 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v42 + 4) = sub_BA95EC(v41, v40, v85);
        swift_bridgeObjectRelease_n(v40, 3);
        *(_WORD *)(v42 + 12) = 2082;
        *(_QWORD *)(v0 + 128) = v4;
        sub_CF4A84(v4);
        v44 = (char *)String.init<A>(describing:)(v0 + 128, &type metadata for PlaybackController.CommandError.AlertKind);
        v46 = v45;
        *(_QWORD *)(v42 + 14) = sub_BA95EC(v44, v45, v85);
        swift_bridgeObjectRelease(v46);
        sub_CF4A2C(v4, 0);
        sub_CF4A2C(v4, 0);
        _os_log_impl(&dword_0, v37, v38, "‚ùå Intent id=%{public}s) ‚Äî Could not present alertKind=%{public}s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        sub_CF4A2C(v4, 0);
LABEL_35:
        v75 = *v2;
LABEL_38:
        v57 = swift_errorRelease(v75);
        goto LABEL_39;
      }
      sub_CF4A2C(v4, 0);
      swift_bridgeObjectRelease_n(v40, 2);
      sub_CF4A2C(v4, 0);
      sub_CF4A2C(v4, 0);
    }

    goto LABEL_35;
  }
LABEL_8:
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v10 = swift_errorRetain(v6);
  static CocoaError.userCancelled.getter(v10);
  v11 = sub_4DD24(&qword_1500828, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  v12 = static _ErrorCodeProtocol.~= infix(_:_:)(v7, v6, v9, v11);
  swift_errorRelease(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if ((v12 & 1) == 0)
  {
    v24 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 104) = v24;
    swift_errorRetain(v24);
    if (swift_dynamicCast(v0 + 64, v0 + 104, v3, &type metadata for PlaybackController.CommandError, 0))
    {
      v25 = *(char **)(v0 + 64);
      v26 = *(unsigned __int8 *)(v0 + 72);
      if (v26 == 1)
      {
        swift_bridgeObjectRetain();
        v58 = sub_CF4A60(v25, 1);
        v28 = Logger.logObject.getter(v58);
        v59 = static os_log_type_t.error.getter();
        v60 = os_log_type_enabled(v28, v59);
        v61 = *(char **)(v0 + 328);
        if (!v60)
        {
          swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
          sub_CF4A2C(v25, 1);
          sub_CF4A2C(v25, 1);
          goto LABEL_37;
        }
        v62 = *(char **)(v0 + 320);
        v33 = swift_slowAlloc(22, -1);
        v63 = swift_slowAlloc(64, -1);
        v85[0] = v63;
        *(_DWORD *)v33 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_BA95EC(v62, v61, v85);
        swift_bridgeObjectRelease_n(v61, 3);
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
        v65 = (char *)Array.description.getter(v25, v64);
        v67 = v66;
        sub_CF4A2C(v25, 1);
        *(_QWORD *)(v33 + 14) = sub_BA95EC(v65, v67, v85);
        swift_bridgeObjectRelease(v67);
        sub_CF4A2C(v25, 1);
        sub_CF4A2C(v25, 1);
        _os_log_impl(&dword_0, v28, v59, "‚ùå Intent id=%{public}s) ‚Äî Could not produce playback commands=%{public}s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
        v35 = v63;
LABEL_29:
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v33, -1, -1);
LABEL_37:

        v75 = *(_QWORD *)(v0 + 104);
        goto LABEL_38;
      }
      if (v26 == 3 && v25 == (_BYTE *)&dword_0 + 1)
      {
        v27 = swift_bridgeObjectRetain();
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.error.getter();
        v30 = os_log_type_enabled(v28, v29);
        v31 = *(char **)(v0 + 328);
        if (!v30)
        {
          swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
          goto LABEL_37;
        }
        v32 = *(char **)(v0 + 320);
        v33 = swift_slowAlloc(12, -1);
        v34 = swift_slowAlloc(32, -1);
        v85[0] = v34;
        *(_DWORD *)v33 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_BA95EC(v32, v31, v85);
        swift_bridgeObjectRelease_n(v31, 3);
        _os_log_impl(&dword_0, v28, v29, "‚ùå Intent id=%{public}s) ‚Äî Could not playback, subscription needed", (uint8_t *)v33, 0xCu);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        v35 = v34;
        goto LABEL_29;
      }
      sub_CF4A2C(*(id *)(v0 + 64), v26);
    }
    v47 = *(_QWORD *)(v0 + 360);
    swift_errorRelease(*(_QWORD *)(v0 + 104));
    swift_errorRetain(v47);
    swift_bridgeObjectRetain();
    v48 = swift_errorRetain(v47);
    v14 = Logger.logObject.getter(v48);
    v49 = static os_log_type_t.error.getter();
    v50 = os_log_type_enabled(v14, v49);
    v51 = *(_QWORD *)(v0 + 360);
    v52 = *(char **)(v0 + 328);
    if (!v50)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
      swift_errorRelease(v51);
      swift_errorRelease(v51);
      goto LABEL_25;
    }
    v53 = *(char **)(v0 + 320);
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    v85[0] = v20;
    *(_DWORD *)v19 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_BA95EC(v53, v52, v85);
    swift_bridgeObjectRelease_n(v52, 3);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 120) = v51;
    swift_errorRetain(v51);
    v54 = (char *)String.init<A>(describing:)(v0 + 120, v3);
    v56 = v55;
    *(_QWORD *)(v19 + 14) = sub_BA95EC(v54, v55, v85);
    swift_bridgeObjectRelease(v56);
    swift_errorRelease(v51);
    swift_errorRelease(v51);
    _os_log_impl(&dword_0, v14, v49, "‚ùå Intent id=%{public}s) ‚Äî Failed to add with error=%{public}s", (uint8_t *)v19, 0x16u);
    v21 = (char *)&type metadata for Any + 8;
    v22 = v20;
    v23 = 2;
    goto LABEL_23;
  }
LABEL_9:
  v13 = swift_bridgeObjectRetain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(char **)(v0 + 328);
  if (v16)
  {
    v18 = *(char **)(v0 + 320);
    v19 = swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v85[0] = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_BA95EC(v18, v17, v85);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl(&dword_0, v14, v15, "‚ùå Intent id=%{public}s) ‚Äî User cancelled", (uint8_t *)v19, 0xCu);
    v21 = (char *)&type metadata for Any + 8;
    v22 = v20;
    v23 = 1;
LABEL_23:
    swift_arrayDestroy(v22, v23, v21);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
LABEL_25:

LABEL_39:
  v76 = *(_QWORD *)(v0 + 288);
  v78 = *(_QWORD *)(v0 + 256);
  v77 = *(_QWORD *)(v0 + 264);
  v80 = *(_QWORD *)(v0 + 232);
  v79 = *(_QWORD *)(v0 + 240);
  v82 = *(_QWORD *)(v0 + 208);
  v81 = *(_QWORD *)(v0 + 216);
  v83 = *(_QWORD *)(v0 + 184);
  swift_willThrow(v57);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE1B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  swift_release(*(_QWORD *)(v0 + 296));
  if (qword_14F9F88 != -1)
    swift_once(&qword_14F9F88, sub_CF3F20);
  v1 = *(_QWORD *)(v0 + 384);
  __swift_project_value_buffer(*(_QWORD *)(v0 + 336), (uint64_t)static Logger.siriIntents);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 192);
  if (v5)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v24 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 136) = v6;
    swift_errorRetain(v6);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v13 = (char *)String.init<A>(describing:)(v0 + 136, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v13, v14, &v24);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v3, v4, "Donation error=%{public}s)", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
  }
  swift_errorRelease(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v16 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_CE1DB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  void *v40;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_4E684(0, &qword_1500B48, UISceneSession_ptr);
    v7 = sub_CF6E98();
    v8 = Set.Iterator.init(_cocoa:)(v39, v5, v6, v7);
    v3 = v39[0];
    v36 = v39[1];
    v9 = v39[2];
    v10 = v39[3];
    v11 = v39[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v36 = a1 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v9 = v13;
    v10 = 0;
  }
  v34 = v9;
  v35 = (unint64_t)(v9 + 64) >> 6;
  v37 = *a2;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v16 = __CocoaSet.Iterator.next()(v8);
  if (!v16)
    goto LABEL_39;
  v17 = v16;
  v38 = v16;
  v18 = sub_4E684(0, &qword_1500B48, UISceneSession_ptr);
  swift_unknownObjectRetain(v17);
  swift_dynamicCast(&v40, &v38, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
  v19 = v40;
  *(_QWORD *)&v20 = swift_unknownObjectRelease(v17).n128_u64[0];
  v21 = v10;
  v22 = v11;
  if (!v19)
    goto LABEL_39;
  while (1)
  {
    v27 = objc_msgSend(v19, "role", v20, v34);
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    if (v28 == v32 && v30 == v31)
    {

      swift_bridgeObjectRelease_n(v30, 2);
      goto LABEL_39;
    }
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      goto LABEL_39;

    v10 = v21;
    v11 = v22;
    if (v3 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v11)
      break;
    v22 = (v11 - 1) & v11;
    v23 = __clz(__rbit64(v11)) | (v10 << 6);
    v21 = v10;
LABEL_32:
    v19 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v23);
    if (!v19)
      goto LABEL_39;
  }
  v24 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    return;
  }
  if (v24 >= v35)
    goto LABEL_39;
  v25 = *(_QWORD *)(v36 + 8 * v24);
  v21 = v10 + 1;
  if (v25)
    goto LABEL_31;
  v21 = v10 + 2;
  if (v10 + 2 >= v35)
    goto LABEL_39;
  v25 = *(_QWORD *)(v36 + 8 * v21);
  if (v25)
    goto LABEL_31;
  v21 = v10 + 3;
  if (v10 + 3 >= v35)
    goto LABEL_39;
  v25 = *(_QWORD *)(v36 + 8 * v21);
  if (v25)
    goto LABEL_31;
  v21 = v10 + 4;
  if (v10 + 4 >= v35)
    goto LABEL_39;
  v25 = *(_QWORD *)(v36 + 8 * v21);
  if (v25)
    goto LABEL_31;
  v21 = v10 + 5;
  if (v10 + 5 >= v35)
    goto LABEL_39;
  v25 = *(_QWORD *)(v36 + 8 * v21);
  if (v25)
  {
LABEL_31:
    v22 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_32;
  }
  v26 = v10 + 6;
  while (v35 != v26)
  {
    v25 = *(_QWORD *)(v36 + 8 * v26++);
    if (v25)
    {
      v21 = v26 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_55D68(v3);
}

id PlaybackController.__allocating_init(coordinator:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PlaybackController.init(coordinator:)(a1);
}

id PlaybackController.init(coordinator:)(_QWORD *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_player] = 0;
  v4 = &v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper] = 0;
  v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented] = 0;
  v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented] = 0;
  sub_55D1C((uint64_t)a1, (uint64_t)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator]);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "init");
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t PlaybackController.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_55D1C(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, a1);
}

double sub_CE2248(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double result;
  char v24[24];
  char v25[24];
  _BYTE v26[24];
  char v27[24];
  char v28[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    swift_beginAccess(a1 + 24, v25, 0, 0);
    v8 = *(char **)(a1 + 24);
    if (v8 && v8 == v2)
    {
      swift_beginAccess(a1 + 24, v24, 1, 0);
      v10 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = 0;
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(a1 + 24), swift_unknownObjectRelease(v10).n128_f64[0]);
    }
  }
  v11 = &v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v28, 0, 0);
  v12 = *(_QWORD *)v11;
  if (!*(_QWORD *)v11)
    goto LABEL_11;
  swift_beginAccess(v12 + 24, v27, 1, 0);
  v13 = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v12 + 24) = v2;
  v14 = v2;
  swift_retain(v12);
  objc_msgSend(*(id *)(v12 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(v12 + 24), swift_unknownObjectRelease(v13).n128_f64[0]);
  swift_release(v12);

  v15 = *(_QWORD *)v11;
  if (*(_QWORD *)v11)
  {
    swift_beginAccess(v15 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v26, 33, 0);
    swift_retain(v15);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
    Published.projectedValue.getter(v16);
    swift_endAccess(v26);
    swift_release(v15);
    v17 = swift_allocObject(&unk_13B7D98, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    v18 = sub_CF6DA0();
    v19 = Publisher<>.sink(receiveValue:)(sub_CF6D98, v17, v4, v18);
    v20 = swift_release(v17);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  }
  else
  {
LABEL_11:
    v19 = 0;
  }
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription] = v19;
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_CE2484(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v18[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v11 = v7;
    v12 = v9;
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_13B8160, 48, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v12;
    v15[5] = v7;
    v16 = sub_C51ED8((uint64_t)v6, (uint64_t)&unk_1500AD8, (uint64_t)v15);
    swift_release(v16);

  }
}

uint64_t sub_CE25A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_CE2614, v8, v9);
}

uint64_t sub_CE2614()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_release();
  sub_CE2650(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_CE2650(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  double v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  void *v68;
  void *v69;
  double v70;
  id v71;
  void *v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v78;
  void *v79;
  id v80;
  _QWORD v81[7];
  char v82;
  __objc2_prot *v83;
  char v84[24];

  v2 = v1;
  if (!a1)
    goto LABEL_8;
  v4 = objc_msgSend(a1, "tracklist");
  if (!v4)
    goto LABEL_8;
  v5 = v4;
  v6 = objc_msgSend(v4, "playingItem");
  if (!v6)
  {
    v7 = v5;
    goto LABEL_7;
  }
  v7 = v6;
  if ((objc_msgSend(v6, "isPlaceholder") & 1) != 0)
  {

LABEL_7:
LABEL_8:
    v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
    swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor, v81, 1, 0);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    v13 = v8[4];
    *(_OWORD *)v8 = 0u;
    *((_OWORD *)v8 + 1) = 0u;
    v8[4] = 0;
    sub_CF49FC(v9, v10, v11, v12, v13);
    return;
  }
  v14 = objc_msgSend(v5, "uniqueIdentifier");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor, v84, 1, 0);
  if (!v18[2])
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_16:
    v23 = objc_msgSend(v7, "contentItemIdentifier", v21);
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = objc_msgSend(v5, "uniqueIdentifier");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = *v18;
    v32 = v18[1];
    v33 = v18[2];
    v34 = v18[3];
    v35 = v18[4];
    *v18 = 1;
    v18[1] = v24;
    v18[2] = v26;
    v18[3] = v28;
    v18[4] = v30;
    sub_CF49FC(v31, v32, v33, v34, v35);
    goto LABEL_17;
  }
  v19 = v18[3];
  v20 = v18[4];
  if (v15 == v19 && v17 == v20)
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_17;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v20, 0);
  *(_QWORD *)&v21 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v22 & 1) == 0)
    goto LABEL_16;
LABEL_17:
  v36 = objc_msgSend(v7, "contentItemIdentifier", v21);
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40 = v18[2];
  if (v40)
  {
    v41 = v18[1];
    if (v37 == v41 && v39 == v40)
      v42 = 1;
    else
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  }
  else
  {
    v42 = 0;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess(v18, v81, 32, 0);
  if (v18[2])
    v43 = *(_BYTE *)v18;
  else
    v43 = 0;
  swift_endAccess(v81);
  v44 = a1;
  v45 = objc_msgSend(v44, "videoOutput");
  if (!v45)
  {

    return;
  }
  v46 = v45;
  v83 = &OBJC_PROTOCOL___MPCVideoOutput_0;
  v47 = swift_dynamicCastObjCProtocolConditional(v45, 1, &v83);
  if (!v47)
    goto LABEL_38;
  v48 = (void *)v47;
  ObjectType = swift_getObjectType();
  v50 = sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if (!swift_dynamicCastMetatype(ObjectType, v50))
    v48 = 0;
  if (!v48)
  {
LABEL_38:

    swift_unknownObjectRelease(v46);
    return;
  }
  v51 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v52 = MPCPlayerResponse.VideoContext.init(output:)(v48);

  if ((v43 & 1) == 0 || (v42 & 1) == 0 || objc_msgSend(v44, "state") != (char *)&dword_0 + 2)
  {
    swift_release();
    goto LABEL_41;
  }
  v80 = (id)objc_opt_self(UIApplication);
  v53 = objc_msgSend(v80, "sharedApplication");
  v54 = objc_msgSend(v53, "openSessions");

  v55 = sub_4E684(0, &qword_1500B48, UISceneSession_ptr);
  v56 = sub_CF6E98();
  v57 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v54, v55, v56);

  sub_CE1DB8(v57, (uint64_t *)&UIWindowSceneSessionRoleApplication);
  v59 = v58;
  *(_QWORD *)&v60 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v59)
  {

    swift_release();
    return;
  }
  v61 = objc_msgSend(v59, "scene", v60);
  v62 = v59;
  if (!v61)
  {
    swift_release();

    goto LABEL_41;
  }
  v63 = v61;
  v79 = v62;
  v64 = objc_msgSend(v61, "activationState");

  if (v64)
  {
    swift_release();

LABEL_41:
    return;
  }
  v65 = objc_msgSend(v80, "sharedApplication");
  v66 = objc_msgSend(v65, "openSessions");

  v67 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v66, v55, v56);
  sub_CE1DB8(v67, (uint64_t *)&_UIWindowSceneSessionRoleCarPlay);
  v69 = v68;
  *(_QWORD *)&v70 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v69
    || (v71 = objc_msgSend(v69, "scene", v70)) != 0
    && (v72 = v71, v73 = objc_msgSend(v71, "activationState"), v72, v73 == (id)-1))
  {
    swift_beginAccess(v18, v81, 33, 0);
    if (v18[2])
      *(_BYTE *)v18 = 0;
    swift_endAccess(v81);
    v74 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v75 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v76 = v74[4];
    __swift_project_boxed_opaque_existential_1(v74, v75);
    v81[0] = v52;
    v82 = 1;
    v77 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v76 + 8);
    v78 = swift_retain();
    v77(v81, v75, v76, v78);
    swift_release();

    sub_CF4F78(v81);
  }
  else
  {
    swift_release();

  }
}

uint64_t PlaybackController.player.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v3, 0, 0);
  return swift_retain(*v1);
}

double PlaybackController.player.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  sub_CE2248(v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*PlaybackController.player.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  swift_retain();
  return sub_CE2D94;
}

void sub_CE2D94(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(v5 + v4);
  *(_QWORD *)(v5 + v4) = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_CE2248(v6);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_CE2248(v6);
  }
  swift_release();
  swift_release();
  free(v2);
}

uint64_t Logger.playbackController.unsafeMutableAddressor()
{
  return sub_C7B42C(&qword_14F9F78, (uint64_t)static Logger.playbackController, (uint64_t)sub_CF3E04);
}

uint64_t PlaybackController.perform(_:options:route:intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v8;
  v5[9] = v9;
  return swift_task_switch(sub_CE2EB8, v8, v9);
}

{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  v6 = type metadata accessor for Player.CommandOptions(0);
  v5[21] = v6;
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[23] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[24] = v9;
  v5[25] = v10;
  return swift_task_switch(sub_CEA1C4, v9, v10);
}

uint64_t sub_CE2EB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
  v3 = swift_allocObject(v2, 72, 7);
  v0[10] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  sub_55D1C(v1, v3 + 32);
  v4 = (_QWORD *)swift_task_alloc(dword_1500874);
  v0[11] = v4;
  *v4 = v0;
  v4[1] = sub_CE2F44;
  return PlaybackController.perform(_:options:route:intent:)(v3, v0[3], v0[4], v0[5]);
}

uint64_t sub_CE2F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[8];
    v6 = v3[9];
    v7 = sub_CE3090;
  }
  else
  {
    swift_bridgeObjectRelease(v3[10]);
    v5 = v3[8];
    v6 = v3[9];
    v7 = sub_CE2FB8;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_CE2FB8()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 56));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 96);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 96);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 96));
    v3 = *(_QWORD *)(v0 + 96);
    goto LABEL_6;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_CE3090()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_CE30D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[25] = a3;
  v4[26] = v3;
  v4[23] = a1;
  v4[24] = a2;
  v5 = type metadata accessor for CocoaError.Code(0);
  v4[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[28] = v6;
  v4[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Player.CommandOptions(0);
  v4[30] = v7;
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_CE3158, 0, 0);
}

uint64_t sub_CE3158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v1 = v0[25];
  v2 = type metadata accessor for Logger(0);
  v0[32] = __swift_project_value_buffer(v2, (uint64_t)static Logger.playbackController);
  v3 = swift_bridgeObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = (char *)v0[25];
  if (v6)
  {
    v8 = (char *)v0[24];
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v16 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v8, v7, &v16);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl(&dword_0, v4, v5, "Intent id=%{public}s) ‚Äî Offering play local option to user", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v0[25], 2);
  }

  v11 = type metadata accessor for MainActor(0);
  v0[33] = v11;
  v0[34] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v0[35] = v13;
  v0[36] = v14;
  return swift_task_switch(sub_CE3324, v13, v14);
}

uint64_t sub_CE3324(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 296) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_CE338C, v4, v6);
}

uint64_t sub_CE338C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)v0[26];
  v0[7] = (char *)v0 + 153;
  v0[2] = v0;
  v0[3] = sub_CE33E4;
  v2 = swift_continuation_init(v0 + 2, 0);
  sub_CEC634(v2, v1);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_CE33E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 296);
  *(_BYTE *)(*v0 + 154) = *(_BYTE *)(*v0 + 153);
  swift_release(v2);
  return swift_task_switch(sub_CE3438, *(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 288));
}

uint64_t sub_CE3438()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 272));
  return swift_task_switch(sub_CE3474, 0, 0);
}

uint64_t sub_CE3474()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52[2];

  if (*(_BYTE *)(v0 + 154) == 1)
  {
    v1 = (_QWORD *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v2 = v1[3];
    v3 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v2);
    *(_QWORD *)(v0 + 304) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
    v4 = (_QWORD *)swift_task_alloc(dword_15031A4);
    *(_QWORD *)(v0 + 312) = v4;
    *v4 = v0;
    v4[1] = sub_CE3AAC;
    return GroupActivitiesManager.leave(performLeaveCommand:)(0);
  }
  v6 = (_QWORD *)(v0 + 176);
  v7 = sub_CF49B8();
  v8 = swift_allocError(&type metadata for PlaybackController.CommandError, v7, 0, 0);
  *(_QWORD *)v9 = 2;
  *(_BYTE *)(v9 + 8) = 3;
  swift_willThrow(v8);
  *(_QWORD *)(v0 + 176) = v8;
  swift_errorRetain(v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if (swift_dynamicCast(v0 + 144, v0 + 176, v10, &type metadata for PlaybackController.CommandError, 0))
  {
    v11 = *(char **)(v0 + 144);
    v12 = *(unsigned __int8 *)(v0 + 152);
    if (!*(_BYTE *)(v0 + 152))
    {
      swift_bridgeObjectRetain();
      sub_CF4A60(v11, 0);
      swift_bridgeObjectRetain();
      v41 = sub_CF4A60(v11, 0);
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.error.getter();
      v44 = os_log_type_enabled(v42, v43);
      v45 = *(char **)(v0 + 200);
      if (v44)
      {
        v46 = *(char **)(v0 + 192);
        v47 = swift_slowAlloc(22, -1);
        v48 = swift_slowAlloc(64, -1);
        v52[0] = v48;
        *(_DWORD *)v47 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v47 + 4) = sub_BA95EC(v46, v45, v52);
        swift_bridgeObjectRelease_n(v45, 3);
        *(_WORD *)(v47 + 12) = 2082;
        *(_QWORD *)(v0 + 168) = v11;
        sub_CF4A84(v11);
        v49 = (char *)String.init<A>(describing:)(v0 + 168, &type metadata for PlaybackController.CommandError.AlertKind);
        v51 = v50;
        *(_QWORD *)(v47 + 14) = sub_BA95EC(v49, v50, v52);
        swift_bridgeObjectRelease(v51);
        sub_CF4A2C(v11, 0);
        sub_CF4A2C(v11, 0);
        _os_log_impl(&dword_0, v42, v43, "Intent id=%{public}s) ‚Äî Could not present alertKind=%{public}s", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v47, -1, -1);

        sub_CF4A2C(v11, 0);
      }
      else
      {
        sub_CF4A2C(v11, 0);
        swift_bridgeObjectRelease_n(v45, 2);
        sub_CF4A2C(v11, 0);
        sub_CF4A2C(v11, 0);

      }
      v38 = swift_errorRelease(*v6);
      goto LABEL_18;
    }
    if (v12 == 3 && v11 == (_BYTE *)&dword_0 + 2)
    {
      swift_errorRelease(*v6);
      goto LABEL_10;
    }
    sub_CF4A2C(*(id *)(v0 + 144), v12);
  }
  v14 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 216);
  swift_errorRelease(*(_QWORD *)(v0 + 176));
  v16 = swift_errorRetain(v8);
  static CocoaError.userCancelled.getter(v16);
  v17 = sub_4DD24(&qword_1500828, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  v18 = static _ErrorCodeProtocol.~= infix(_:_:)(v13, v8, v15, v17);
  swift_errorRelease(v8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_errorRetain(v8);
    swift_bridgeObjectRetain();
    v28 = swift_errorRetain(v8);
    v20 = Logger.logObject.getter(v28);
    v29 = static os_log_type_t.error.getter();
    v30 = os_log_type_enabled(v20, v29);
    v31 = *(char **)(v0 + 200);
    if (!v30)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      goto LABEL_17;
    }
    v32 = *(char **)(v0 + 192);
    v33 = swift_slowAlloc(22, -1);
    v34 = swift_slowAlloc(64, -1);
    v52[0] = v34;
    *(_DWORD *)v33 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v33 + 4) = sub_BA95EC(v32, v31, v52);
    swift_bridgeObjectRelease_n(v31, 3);
    *(_WORD *)(v33 + 12) = 2082;
    *(_QWORD *)(v0 + 160) = v8;
    swift_errorRetain(v8);
    v35 = (char *)String.init<A>(describing:)(v0 + 160, v10);
    v37 = v36;
    *(_QWORD *)(v33 + 14) = sub_BA95EC(v35, v36, v52);
    swift_bridgeObjectRelease(v37);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl(&dword_0, v20, v29, "Intent id=%{public}s) ‚Äî Failed to insert with error=%{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    v27 = v33;
    goto LABEL_14;
  }
LABEL_10:
  v19 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(char **)(v0 + 200);
  if (!v22)
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
    goto LABEL_17;
  }
  v24 = *(char **)(v0 + 192);
  v25 = swift_slowAlloc(12, -1);
  v26 = swift_slowAlloc(32, -1);
  v52[0] = v26;
  *(_DWORD *)v25 = 136446210;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v25 + 4) = sub_BA95EC(v24, v23, v52);
  swift_bridgeObjectRelease_n(v23, 3);
  _os_log_impl(&dword_0, v20, v21, "Intent id=%{public}s) ‚Äî User cancelled", (uint8_t *)v25, 0xCu);
  swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v26, -1, -1);
  v27 = v25;
LABEL_14:
  swift_slowDealloc(v27, -1, -1);
LABEL_17:

LABEL_18:
  v39 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 232);
  swift_willThrow(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE3AAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));
  swift_release(v1);
  return swift_task_switch(sub_CE3B08, 0, 0);
}

uint64_t sub_CE3B08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 120, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 320) = v2;
  if (v2)
  {
    v4 = *(int **)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 248);
    v5 = *(void **)(v0 + 184);
    *(_QWORD *)(v0 + 104) = &type metadata for Player.ReplaceCommand;
    *(_QWORD *)(v0 + 112) = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = 3;
    v6 = v5;
    swift_retain(v2);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v7 = (_QWORD *)(v3 + v4[5]);
    *v7 = 0;
    v7[1] = 0;
    *(_QWORD *)(v3 + v4[6]) = 0;
    *(_BYTE *)(v3 + v4[7]) = 0;
    *(_QWORD *)(v3 + v4[8]) = 0;
    v8 = (_QWORD *)swift_task_alloc(dword_150106C);
    *(_QWORD *)(v0 + 328) = v8;
    *v8 = v0;
    v8[1] = sub_CE3C24;
    return sub_CFF1FC(v0 + 80, *(_QWORD *)(v0 + 248));
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 248));
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_CE3C24(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 328);
  *(_QWORD *)(*(_QWORD *)v2 + 336) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[40];
    sub_5C0DC(v4[31], type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v7 = sub_CE3D24;
  }
  else
  {
    v8 = v4 + 10;
    v9 = v4[40];
    v10 = v4[31];
    swift_release(v9);

    sub_5C0DC(v10, type metadata accessor for Player.CommandOptions);
    __swift_destroy_boxed_opaque_existential_1(v8);
    v7 = sub_CE3CDC;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_CE3CDC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE3D24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45[2];

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = (_QWORD *)(v0 + 176);
  swift_errorRetain(v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if (!swift_dynamicCast(v0 + 144, v0 + 176, v3, &type metadata for PlaybackController.CommandError, 0))
    goto LABEL_7;
  v4 = *(char **)(v0 + 144);
  v5 = *(unsigned __int8 *)(v0 + 152);
  if (*(_BYTE *)(v0 + 152))
  {
    if (v5 == 3 && v4 == (_BYTE *)&dword_0 + 2)
    {
      swift_errorRelease(*v2);
      goto LABEL_8;
    }
    sub_CF4A2C(*(id *)(v0 + 144), v5);
LABEL_7:
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    v9 = swift_errorRetain(v1);
    static CocoaError.userCancelled.getter(v9);
    v10 = sub_4DD24(&qword_1500828, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v6, v1, v8, v10);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if ((v11 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_errorRetain(v1);
      swift_bridgeObjectRetain();
      v21 = swift_errorRetain(v1);
      v13 = Logger.logObject.getter(v21);
      v22 = static os_log_type_t.error.getter();
      v23 = os_log_type_enabled(v13, v22);
      v24 = *(char **)(v0 + 200);
      if (!v23)
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
        swift_errorRelease(v1);
        swift_errorRelease(v1);
        goto LABEL_15;
      }
      v25 = *(char **)(v0 + 192);
      v18 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(64, -1);
      v45[0] = v26;
      *(_DWORD *)v18 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v18 + 4) = sub_BA95EC(v25, v24, v45);
      swift_bridgeObjectRelease_n(v24, 3);
      *(_WORD *)(v18 + 12) = 2082;
      *(_QWORD *)(v0 + 160) = v1;
      swift_errorRetain(v1);
      v27 = (char *)String.init<A>(describing:)(v0 + 160, v3);
      v29 = v28;
      *(_QWORD *)(v18 + 14) = sub_BA95EC(v27, v28, v45);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, v13, v22, "Intent id=%{public}s) ‚Äî Failed to insert with error=%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      v20 = v26;
      goto LABEL_12;
    }
LABEL_8:
    v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(char **)(v0 + 200);
    if (!v15)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
      goto LABEL_15;
    }
    v17 = *(char **)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v45[0] = v19;
    *(_DWORD *)v18 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 4) = sub_BA95EC(v17, v16, v45);
    swift_bridgeObjectRelease_n(v16, 3);
    _os_log_impl(&dword_0, v13, v14, "Intent id=%{public}s) ‚Äî User cancelled", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v20 = v19;
LABEL_12:
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v18, -1, -1);
LABEL_15:

    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  sub_CF4A60(v4, 0);
  swift_bridgeObjectRetain();
  v34 = sub_CF4A60(v4, 0);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter();
  v37 = os_log_type_enabled(v35, v36);
  v38 = *(char **)(v0 + 200);
  if (v37)
  {
    v39 = *(char **)(v0 + 192);
    v40 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v45[0] = v41;
    *(_DWORD *)v40 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v40 + 4) = sub_BA95EC(v39, v38, v45);
    swift_bridgeObjectRelease_n(v38, 3);
    *(_WORD *)(v40 + 12) = 2082;
    *(_QWORD *)(v0 + 168) = v4;
    sub_CF4A84(v4);
    v42 = (char *)String.init<A>(describing:)(v0 + 168, &type metadata for PlaybackController.CommandError.AlertKind);
    v44 = v43;
    *(_QWORD *)(v40 + 14) = sub_BA95EC(v42, v43, v45);
    swift_bridgeObjectRelease(v44);
    sub_CF4A2C(v4, 0);
    sub_CF4A2C(v4, 0);
    _os_log_impl(&dword_0, v35, v36, "Intent id=%{public}s) ‚Äî Could not present alertKind=%{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    sub_CF4A2C(v4, 0);
  }
  else
  {
    sub_CF4A2C(v4, 0);
    swift_bridgeObjectRelease_n(v38, 2);
    sub_CF4A2C(v4, 0);
    sub_CF4A2C(v4, 0);

  }
  v30 = swift_errorRelease(*v2);
LABEL_16:
  v31 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 232);
  swift_willThrow(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE42A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v5[109] = v4;
  v5[108] = a4;
  v5[107] = a3;
  v5[106] = a2;
  v5[105] = a1;
  v6 = type metadata accessor for UUID(0);
  v5[110] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[111] = v7;
  v5[112] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v5[113] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v5[114] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[115] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[116] = swift_task_alloc(v11);
  v5[117] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5[118] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[119] = v13;
  v5[120] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v5[121] = v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[122] = swift_task_alloc(v15);
  v5[123] = swift_task_alloc(v15);
  v5[124] = swift_task_alloc(v15);
  v5[125] = swift_task_alloc(v15);
  v5[126] = swift_task_alloc(v15);
  v5[127] = swift_task_alloc(v15);
  v5[128] = swift_task_alloc(v15);
  v5[129] = swift_task_alloc(v15);
  v5[130] = swift_task_alloc(v15);
  v16 = type metadata accessor for PlaybackIntentDescriptor(0);
  v5[131] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[132] = swift_task_alloc(v17);
  v5[133] = swift_task_alloc(v17);
  v5[134] = swift_task_alloc(v17);
  v5[135] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v5[136] = v18;
  v5[137] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  v5[138] = v20;
  v5[139] = v21;
  return swift_task_switch(sub_CE44A0, v20, v21);
}

uint64_t sub_CE44A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 872);
  v2 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  *(_QWORD *)(v0 + 1120) = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 536, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 1128) = *v3;
  if (v4)
  {
    v5 = (_BYTE *)(v4 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    swift_beginAccess(v4 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v0 + 560, 0, 0);
    if (*v5 == 2)
    {
      swift_retain(v4);
    }
    else
    {
      v18 = qword_14F9F78;
      swift_retain(v4);
      if (v18 != -1)
        swift_once(&qword_14F9F78, sub_CF3E04);
      v19 = *(_QWORD *)(v0 + 856);
      v20 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v20, (uint64_t)static Logger.playbackController);
      v21 = swift_bridgeObjectRetain_n(v19, 2);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter(v22);
      v24 = os_log_type_enabled(v22, v23);
      v25 = *(char **)(v0 + 856);
      if (v24)
      {
        v26 = *(char **)(v0 + 848);
        v27 = swift_slowAlloc(12, -1);
        v28 = swift_slowAlloc(32, -1);
        v39 = v28;
        *(_DWORD *)v27 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v27 + 4) = sub_BA95EC(v26, v25, &v39);
        swift_bridgeObjectRelease_n(v25, 3);
        _os_log_impl(&dword_0, v22, v23, "Intent id=%{public}s) ‚Äî Awaiting for engine to start", (uint8_t *)v27, 0xCu);
        swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v28, -1, -1);
        swift_slowDealloc(v27, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
      }

    }
    v29 = (_QWORD *)swift_task_alloc(dword_1500F84);
    *(_QWORD *)(v0 + 1136) = v29;
    *v29 = v0;
    v29[1] = sub_CE4810;
    return Player.startEngineIfNeeded()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 1096));
    v6 = sub_CF49B8();
    v38 = swift_allocError(&type metadata for PlaybackController.CommandError, v6, 0, 0);
    *(_QWORD *)v7 = 0;
    *(_BYTE *)(v7 + 8) = 3;
    swift_willThrow(v38);
    v8 = *(_QWORD *)(v0 + 1072);
    v9 = *(_QWORD *)(v0 + 1064);
    v10 = *(_QWORD *)(v0 + 1056);
    v11 = *(_QWORD *)(v0 + 1040);
    v12 = *(_QWORD *)(v0 + 1032);
    v13 = *(_QWORD *)(v0 + 1024);
    v14 = *(_QWORD *)(v0 + 1016);
    v15 = *(_QWORD *)(v0 + 1008);
    v16 = *(_QWORD *)(v0 + 1000);
    v30 = *(_QWORD *)(v0 + 992);
    v31 = *(_QWORD *)(v0 + 984);
    v32 = *(_QWORD *)(v0 + 976);
    v33 = *(_QWORD *)(v0 + 960);
    v34 = *(_QWORD *)(v0 + 936);
    v35 = *(_QWORD *)(v0 + 928);
    v36 = *(_QWORD *)(v0 + 904);
    v37 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_CE4810()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1136));
  return swift_task_switch(sub_CE4860, *(_QWORD *)(v1 + 1104), *(_QWORD *)(v1 + 1112));
}

uint64_t sub_CE4860()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  double v5;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  int v14;
  id v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(id *)(v0 + 864);
  if (!v1)
  {
    v2 = *(_QWORD *)(v0 + 1128);
    KeyPath = swift_getKeyPath(&unk_10A29D0);
    v4 = swift_getKeyPath(&unk_10A29F8);
    static Published.subscript.getter((_QWORD *)(v0 + 832), v2, KeyPath, v4);
    swift_release(v4);
    *(_QWORD *)&v5 = swift_release(KeyPath).n128_u64[0];
    v6 = *(void **)(v0 + 832);
    v1 = objc_msgSend(v6, "route", v5);

  }
  *(_QWORD *)(v0 + 1144) = v1;
  v7 = *(_QWORD *)(v0 + 1080);
  v8 = *(int **)(v0 + 1048);
  v9 = *(_QWORD *)(v0 + 840);
  *(_QWORD *)(v0 + 1152) = *(_QWORD *)(v9 + v8[5]);
  v10 = *(_QWORD *)(v9 + v8[6]);
  v11 = *(unsigned __int8 *)(v9 + v8[9]);
  sub_5BDB8(v9, v7, type metadata accessor for PlaybackIntentDescriptor);
  v12 = *(_QWORD *)(v0 + 1080);
  if (v11 == 1)
  {
    v13 = *(id *)(v0 + 864);
    sub_5C0DC(v12, type metadata accessor for PlaybackIntentDescriptor);
LABEL_6:
    v10 = 1;
    goto LABEL_7;
  }
  v14 = *(unsigned __int8 *)(v12 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
  v15 = *(id *)(v0 + 864);
  sub_5C0DC(v12, type metadata accessor for PlaybackIntentDescriptor);
  if (v14 == 1)
    goto LABEL_6;
LABEL_7:
  *(_QWORD *)(v0 + 1160) = v10;
  v16 = *(_QWORD *)(v0 + 1088);
  v17 = v1;
  *(_QWORD *)(v0 + 1168) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 1176) = v19;
  *(_QWORD *)(v0 + 1184) = v20;
  return swift_task_switch(sub_CE49DC, v19, v20);
}

uint64_t sub_CE49DC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 1192) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_CE4A44, v4, v6);
}

uint64_t sub_CE4A44()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[143];
  v2 = v0[109];
  v0[23] = (char *)v0 + 265;
  v0[18] = v0;
  v0[19] = sub_CE4AAC;
  v3 = swift_continuation_init(v0 + 18, 1);
  sub_CECBD0(v3, v2, v1);
  return swift_continuation_await(v0 + 18);
}

uint64_t sub_CE4AAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 1200) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = *(_QWORD *)(v2 + 1184);
    v5 = *(_QWORD *)(v2 + 1176);
    v6 = sub_CE5658;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 1192);
    *(_BYTE *)(v2 + 267) = *(_BYTE *)(v2 + 265);
    swift_release(v7);
    v4 = *(_QWORD *)(v2 + 1184);
    v5 = *(_QWORD *)(v2 + 1176);
    v6 = sub_CE4B30;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_CE4B30()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[143];
  swift_release(v0[146]);

  return swift_task_switch(sub_CE4B74, v0[138], v0[139]);
}

uint64_t sub_CE4B74()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  char *v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  double v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  uint32_t *v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  _BOOL4 v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  unsigned __int8 v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v1 = *(unsigned __int8 *)(v0 + 267);
  if (v1 == 2)
  {
    v2 = *(void **)(v0 + 1144);
    v3 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));

    swift_release(v3);
    v4 = *(_QWORD *)(v0 + 1072);
    v5 = *(_QWORD *)(v0 + 1064);
    v6 = *(_QWORD *)(v0 + 1056);
    v7 = *(_QWORD *)(v0 + 1040);
    v8 = *(_QWORD *)(v0 + 1032);
    v9 = *(_QWORD *)(v0 + 1024);
    v10 = *(_QWORD *)(v0 + 1016);
    v11 = *(_QWORD *)(v0 + 1008);
    v12 = *(_QWORD *)(v0 + 1000);
    v125 = *(_QWORD *)(v0 + 992);
    v126 = *(_QWORD *)(v0 + 984);
    v127 = *(_QWORD *)(v0 + 976);
    v128 = *(_QWORD *)(v0 + 960);
    v129 = *(_QWORD *)(v0 + 936);
    v130 = *(_QWORD *)(v0 + 928);
    v131 = *(_QWORD *)(v0 + 904);
    v132 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v14 = *(_QWORD *)(v0 + 856);
  v15 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 1208) = __swift_project_value_buffer(v15, (uint64_t)static Logger.playbackController);
  v16 = swift_bridgeObjectRetain_n(v14, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = os_log_type_enabled(v17, v18);
  v20 = *(char **)(v0 + 856);
  if (v19)
  {
    v21 = v1 & 1;
    v22 = *(char **)(v0 + 848);
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v133 = v24;
    *(_DWORD *)v23 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v23 + 4) = sub_BA95EC(v22, v20, &v133);
    swift_bridgeObjectRelease_n(v20, 3);
    *(_WORD *)(v23 + 12) = 2082;
    *(_BYTE *)(v0 + 266) = v21;
    v25 = (char *)String.init<A>(describing:)(v0 + 266, &type metadata for PlaybackController.PlayabilityOption);
    v27 = v26;
    *(_QWORD *)(v23 + 14) = sub_BA95EC(v25, v26, &v133);
    swift_bridgeObjectRelease(v27);
    _os_log_impl(&dword_0, v17, v18, "Intent id=%{public}s) ‚Äî Resolved Playability Options=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
  }

  v28 = *(_QWORD *)(v0 + 1040);
  v29 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 840), v28, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v29);
  v31 = *(void ***)(v0 + 1040);
  if (EnumCaseMultiPayload == 1)
  {
    v32 = *(_QWORD *)(v0 + 960);
    v33 = *(_QWORD *)(v0 + 952);
    v34 = *(_QWORD *)(v0 + 944);
    v35 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v33 + 32))(v32, v31, v34);
    v36 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v35);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  }
  else
  {
    v36 = *v31;
  }
  v37 = objc_msgSend(v36, "sharedListeningProperties");

  if (v37)
  {
    v38 = *(_QWORD *)(v0 + 1128);
    KeyPath = swift_getKeyPath(&unk_10A2A18);
    v40 = swift_getKeyPath(&unk_10A2A40);
    static Published.subscript.getter((_QWORD *)(v0 + 816), v38, KeyPath, v40);
    swift_release(v40);
    *(_QWORD *)&v41 = swift_release(KeyPath).n128_u64[0];
    v42 = *(void **)(v0 + 816);
    v43 = *(_QWORD *)(v0 + 1072);
    v44 = *(_QWORD *)(v0 + 840);
    if (v42)
    {
      v45 = objc_msgSend(*(id *)(v0 + 816), "isSharedListeningSession", v41);

      sub_5BDB8(v44, v43, type metadata accessor for PlaybackIntentDescriptor);
      if (v45)
      {
        v46 = *(_QWORD *)(v0 + 1024);
        v47 = *(_QWORD *)(v0 + 968);
        sub_5BDB8(*(_QWORD *)(v0 + 1072), v46, type metadata accessor for PlaybackIntentDescriptor.IntentType);
        v48 = swift_getEnumCaseMultiPayload(v46, v47);
        v49 = *(void ***)(v0 + 1024);
        if (v48 == 1)
        {
          v50 = *(_QWORD *)(v0 + 960);
          v51 = *(_QWORD *)(v0 + 952);
          v52 = *(_QWORD *)(v0 + 944);
          v53 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v51 + 32))(v50, v49, v52);
          v54 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v53);
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
        }
        else
        {
          v54 = *v49;
        }
        v95 = *(_QWORD *)(v0 + 1072);
        v96 = (uint32_t *)objc_msgSend(v54, "tracklistSource");

        sub_5C0DC(v95, type metadata accessor for PlaybackIntentDescriptor);
        if (v96 != &stru_20.flags)
        {
          v97 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
          v98 = Logger.logObject.getter(v97);
          v99 = static os_log_type_t.default.getter(v98);
          v100 = os_log_type_enabled(v98, v99);
          v101 = *(char **)(v0 + 856);
          if (v100)
          {
            v102 = *(char **)(v0 + 848);
            v103 = swift_slowAlloc(12, -1);
            v104 = swift_slowAlloc(32, -1);
            v133 = v104;
            *(_DWORD *)v103 = 136446210;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v103 + 4) = sub_BA95EC(v102, v101, &v133);
            swift_bridgeObjectRelease_n(v101, 3);
            _os_log_impl(&dword_0, v98, v99, "Intent id=%{public}s) ‚Äî Offering Shared Listening options", (uint8_t *)v103, 0xCu);
            swift_arrayDestroy(v104, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v104, -1, -1);
            swift_slowDealloc(v103, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
          }

          v105 = (_QWORD *)swift_task_alloc(dword_1500B8C);
          *(_QWORD *)(v0 + 1240) = v105;
          *v105 = v0;
          v105[1] = sub_CE6048;
          return sub_CEAD38(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
        }
LABEL_20:
        *(int8x16_t *)(v0 + 1272) = vextq_s8(*(int8x16_t *)(v0 + 1152), *(int8x16_t *)(v0 + 1152), 8uLL);
        v64 = *(_QWORD *)(v0 + 1128);
        v65 = swift_getKeyPath(&unk_10A29D0);
        v66 = swift_getKeyPath(&unk_10A29F8);
        static Published.subscript.getter((_QWORD *)(v0 + 808), v64, v65, v66);
        swift_release(v66);
        *(_QWORD *)&v67 = swift_release(v65).n128_u64[0];
        v68 = *(void **)(v0 + 808);
        v69 = objc_msgSend(v68, "route", v67);
        *(_QWORD *)(v0 + 1288) = v69;

        if (!v69)
        {
          v76 = *(void **)(v0 + 1144);
          goto LABEL_27;
        }
        objc_opt_self(MPAVEndpointRoute);
        v70 = (void *)swift_dynamicCastObjCClass(v69);
        *(_QWORD *)(v0 + 1296) = v70;
        if (!v70)
          goto LABEL_24;
        v71 = v70;
        if (objc_msgSend(v70, "isDeviceRoute"))
          goto LABEL_24;
        v72 = *(_QWORD *)(v0 + 1128);
        v73 = swift_getKeyPath(&unk_10A2810);
        v74 = swift_getKeyPath(&unk_10A2838);
        static Published.subscript.getter((_QWORD *)(v0 + 824), v72, v73, v74);
        swift_release(v74);
        swift_release(v73);
        v75 = *(void **)(v0 + 824);

        if (v75)
        {
LABEL_24:
          v76 = *(void **)(v0 + 1144);
LABEL_25:

LABEL_27:
          *(_QWORD *)(v0 + 1328) = v76;
          v77 = *(_QWORD *)(v0 + 1008);
          v78 = *(_QWORD *)(v0 + 968);
          sub_5BDB8(*(_QWORD *)(v0 + 840), v77, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v79 = swift_getEnumCaseMultiPayload(v77, v78);
          v80 = *(uint64_t **)(v0 + 1008);
          if (v79 == 1)
          {
            v81 = *(_QWORD *)(v0 + 960);
            v82 = *(_QWORD *)(v0 + 952);
            v83 = *(_QWORD *)(v0 + 944);
            v84 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v82 + 32))(v81, v80, v83);
            v85 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v84);
            (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
          }
          else
          {
            v85 = *v80;
          }
          *(_QWORD *)(v0 + 1336) = v85;
          v86 = dword_1500B5C;
          v87 = v76;
          v88 = (_QWORD *)swift_task_alloc(v86);
          *(_QWORD *)(v0 + 1344) = v88;
          *v88 = v0;
          v88[1] = sub_CE67D0;
          return sub_CF4A94(v85, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v76);
        }
        v106 = *(unsigned __int8 *)(v0 + 267);
        sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v107 = *(_QWORD *)(v0 + 1064);
        if ((v106 & 1) != 0)
        {
          sub_5C0DC(v107, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v108 = *(_QWORD *)(v0 + 1016);
          v109 = *(_QWORD *)(v0 + 968);
          sub_5BDB8(v107, v108, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v110 = swift_getEnumCaseMultiPayload(v108, v109);
          v111 = *(void ***)(v0 + 1016);
          if (v110 == 1)
          {
            v112 = *(_QWORD *)(v0 + 960);
            v113 = *(_QWORD *)(v0 + 952);
            v114 = *(_QWORD *)(v0 + 944);
            v115 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v113 + 32))(v112, v111, v114);
            v116 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v115);
            (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v114);
          }
          else
          {
            v116 = *v111;
          }
          v117 = *(_QWORD *)(v0 + 1064);
          v118 = objc_msgSend(v116, "prefersEnqueuingUsingAirPlay");

          sub_5C0DC(v117, type metadata accessor for PlaybackIntentDescriptor);
          if ((v118 & 1) == 0)
          {
            v120 = *(_QWORD *)(v0 + 1056);
            v121 = *(_QWORD *)(v0 + 840);
            v122 = objc_msgSend(v71, "supportsRemoteControl");
            sub_5BDB8(v121, v120, type metadata accessor for PlaybackIntentDescriptor);
            if ((v122 & 1) != 0)
            {
              v123 = *(_QWORD *)(v0 + 1056);
              v124 = *(_BYTE *)(v123 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_5C0DC(v123, type metadata accessor for PlaybackIntentDescriptor);
              if ((v124 & 1) == 0)
              {
                v76 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_25;
              }
LABEL_47:
              v119 = (_QWORD *)swift_task_alloc(dword_1500F9C);
              *(_QWORD *)(v0 + 1304) = v119;
              *v119 = v0;
              v119[1] = sub_CE6628;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_46:
            sub_5C0DC(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_47;
          }
        }
        sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_46;
      }
    }
    else
    {
      sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    }
    sub_5C0DC(*(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_20;
  }
  v55 = *(_QWORD *)(v0 + 1032);
  v56 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 840), v55, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v57 = swift_getEnumCaseMultiPayload(v55, v56);
  v58 = *(void ***)(v0 + 1032);
  if (v57 == 1)
  {
    v59 = *(_QWORD *)(v0 + 960);
    v60 = *(_QWORD *)(v0 + 952);
    v61 = *(_QWORD *)(v0 + 944);
    v62 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v60 + 32))(v59, v58, v61);
    v63 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v62);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  }
  else
  {
    v63 = *v58;
  }
  *(_QWORD *)(v0 + 1216) = v63;
  v89 = (_QWORD *)(*(_QWORD *)(v0 + 872) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v90 = v89[3];
  v91 = v89[4];
  __swift_project_boxed_opaque_existential_1(v89, v90);
  *(_QWORD *)(v0 + 1224) = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 40))(v90, v91);
  v92 = dword_150317C;
  v93 = v63;
  v94 = (_QWORD *)swift_task_alloc(v92);
  *(_QWORD *)(v0 + 1232) = v94;
  *v94 = v0;
  v94[1] = sub_CE57FC;
  return GroupActivitiesManager.initiateSession(with:)((uint64_t)v63);
}

uint64_t sub_CE5658()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[149];
  v2 = (void *)v0[143];
  swift_release(v0[146]);
  swift_release(v1);

  return swift_task_switch(sub_CE56A8, v0[138], v0[139]);
}

uint64_t sub_CE56A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE57FC(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1232);
  v4 = *(_QWORD *)(*v1 + 1224);
  v5 = *(void **)(*v1 + 1216);
  *(_BYTE *)(*v1 + 268) = a1;
  swift_task_dealloc(v3);

  swift_release(v4);
  return swift_task_switch(sub_CE5874, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_CE5874()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  uint32_t *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unsigned __int8 v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v1 = *(unsigned __int8 *)(v0 + 268);

  if (v1 == 1)
  {
    v2 = *(void **)(v0 + 1144);
    v3 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));

    swift_release(v3);
    v4 = *(_QWORD *)(v0 + 1072);
    v5 = *(_QWORD *)(v0 + 1064);
    v6 = *(_QWORD *)(v0 + 1056);
    v7 = *(_QWORD *)(v0 + 1040);
    v8 = *(_QWORD *)(v0 + 1032);
    v9 = *(_QWORD *)(v0 + 1024);
    v10 = *(_QWORD *)(v0 + 1016);
    v11 = *(_QWORD *)(v0 + 1008);
    v12 = *(_QWORD *)(v0 + 1000);
    v86 = *(_QWORD *)(v0 + 992);
    v87 = *(_QWORD *)(v0 + 984);
    v88 = *(_QWORD *)(v0 + 976);
    v89 = *(_QWORD *)(v0 + 960);
    v90 = *(_QWORD *)(v0 + 936);
    v91 = *(_QWORD *)(v0 + 928);
    v92 = *(_QWORD *)(v0 + 904);
    v93 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 1128);
  KeyPath = swift_getKeyPath(&unk_10A2A18);
  v16 = swift_getKeyPath(&unk_10A2A40);
  static Published.subscript.getter((_QWORD *)(v0 + 816), v14, KeyPath, v16);
  swift_release(v16);
  *(_QWORD *)&v17 = swift_release(KeyPath).n128_u64[0];
  v18 = *(void **)(v0 + 816);
  v19 = *(_QWORD *)(v0 + 1072);
  v20 = *(_QWORD *)(v0 + 840);
  if (!v18)
  {
    sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_8;
  }
  v21 = objc_msgSend(*(id *)(v0 + 816), "isSharedListeningSession", v17);

  sub_5BDB8(v20, v19, type metadata accessor for PlaybackIntentDescriptor);
  if (!v21)
  {
LABEL_8:
    sub_5C0DC(*(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_9;
  }
  v22 = *(_QWORD *)(v0 + 1024);
  v23 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 1072), v22, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v23);
  v25 = *(void ***)(v0 + 1024);
  if (EnumCaseMultiPayload == 1)
  {
    v26 = *(_QWORD *)(v0 + 960);
    v27 = *(_QWORD *)(v0 + 952);
    v28 = *(_QWORD *)(v0 + 944);
    v29 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v27 + 32))(v26, v25, v28);
    v30 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v29);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  else
  {
    v30 = *v25;
  }
  v56 = *(_QWORD *)(v0 + 1072);
  v57 = (uint32_t *)objc_msgSend(v30, "tracklistSource");

  sub_5C0DC(v56, type metadata accessor for PlaybackIntentDescriptor);
  if (v57 != &stru_20.flags)
  {
    v58 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter(v59);
    v61 = os_log_type_enabled(v59, v60);
    v62 = *(char **)(v0 + 856);
    if (v61)
    {
      v63 = *(char **)(v0 + 848);
      v64 = swift_slowAlloc(12, -1);
      v65 = swift_slowAlloc(32, -1);
      v94 = v65;
      *(_DWORD *)v64 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v64 + 4) = sub_BA95EC(v63, v62, &v94);
      swift_bridgeObjectRelease_n(v62, 3);
      _os_log_impl(&dword_0, v59, v60, "Intent id=%{public}s) ‚Äî Offering Shared Listening options", (uint8_t *)v64, 0xCu);
      swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v64, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
    }

    v66 = (_QWORD *)swift_task_alloc(dword_1500B8C);
    *(_QWORD *)(v0 + 1240) = v66;
    *v66 = v0;
    v66[1] = sub_CE6048;
    return sub_CEAD38(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
  }
LABEL_9:
  *(int8x16_t *)(v0 + 1272) = vextq_s8(*(int8x16_t *)(v0 + 1152), *(int8x16_t *)(v0 + 1152), 8uLL);
  v31 = *(_QWORD *)(v0 + 1128);
  v32 = swift_getKeyPath(&unk_10A29D0);
  v33 = swift_getKeyPath(&unk_10A29F8);
  static Published.subscript.getter((_QWORD *)(v0 + 808), v31, v32, v33);
  swift_release(v33);
  *(_QWORD *)&v34 = swift_release(v32).n128_u64[0];
  v35 = *(void **)(v0 + 808);
  v36 = objc_msgSend(v35, "route", v34);
  *(_QWORD *)(v0 + 1288) = v36;

  if (!v36)
  {
    v43 = *(void **)(v0 + 1144);
    goto LABEL_16;
  }
  objc_opt_self(MPAVEndpointRoute);
  v37 = (void *)swift_dynamicCastObjCClass(v36);
  *(_QWORD *)(v0 + 1296) = v37;
  if (v37)
  {
    v38 = v37;
    if (!objc_msgSend(v37, "isDeviceRoute"))
    {
      v39 = *(_QWORD *)(v0 + 1128);
      v40 = swift_getKeyPath(&unk_10A2810);
      v41 = swift_getKeyPath(&unk_10A2838);
      static Published.subscript.getter((_QWORD *)(v0 + 824), v39, v40, v41);
      swift_release(v41);
      swift_release(v40);
      v42 = *(void **)(v0 + 824);

      if (!v42)
      {
        v67 = *(unsigned __int8 *)(v0 + 267);
        sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v68 = *(_QWORD *)(v0 + 1064);
        if ((v67 & 1) != 0)
        {
          sub_5C0DC(v68, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v69 = *(_QWORD *)(v0 + 1016);
          v70 = *(_QWORD *)(v0 + 968);
          sub_5BDB8(v68, v69, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v71 = swift_getEnumCaseMultiPayload(v69, v70);
          v72 = *(void ***)(v0 + 1016);
          if (v71 == 1)
          {
            v73 = *(_QWORD *)(v0 + 960);
            v74 = *(_QWORD *)(v0 + 952);
            v75 = *(_QWORD *)(v0 + 944);
            v76 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v74 + 32))(v73, v72, v75);
            v77 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v76);
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
          }
          else
          {
            v77 = *v72;
          }
          v78 = *(_QWORD *)(v0 + 1064);
          v79 = objc_msgSend(v77, "prefersEnqueuingUsingAirPlay");

          sub_5C0DC(v78, type metadata accessor for PlaybackIntentDescriptor);
          if ((v79 & 1) == 0)
          {
            v81 = *(_QWORD *)(v0 + 1056);
            v82 = *(_QWORD *)(v0 + 840);
            v83 = objc_msgSend(v38, "supportsRemoteControl");
            sub_5BDB8(v82, v81, type metadata accessor for PlaybackIntentDescriptor);
            if ((v83 & 1) != 0)
            {
              v84 = *(_QWORD *)(v0 + 1056);
              v85 = *(_BYTE *)(v84 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_5C0DC(v84, type metadata accessor for PlaybackIntentDescriptor);
              if ((v85 & 1) == 0)
              {
                v43 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_14;
              }
LABEL_34:
              v80 = (_QWORD *)swift_task_alloc(dword_1500F9C);
              *(_QWORD *)(v0 + 1304) = v80;
              *v80 = v0;
              v80[1] = sub_CE6628;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_33:
            sub_5C0DC(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_34;
          }
        }
        sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_33;
      }
    }
  }
  v43 = *(void **)(v0 + 1144);
LABEL_14:

LABEL_16:
  *(_QWORD *)(v0 + 1328) = v43;
  v44 = *(_QWORD *)(v0 + 1008);
  v45 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 840), v44, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v46 = swift_getEnumCaseMultiPayload(v44, v45);
  v47 = *(uint64_t **)(v0 + 1008);
  if (v46 == 1)
  {
    v48 = *(_QWORD *)(v0 + 960);
    v49 = *(_QWORD *)(v0 + 952);
    v50 = *(_QWORD *)(v0 + 944);
    v51 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v49 + 32))(v48, v47, v50);
    v52 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v51);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  }
  else
  {
    v52 = *v47;
  }
  *(_QWORD *)(v0 + 1336) = v52;
  v53 = dword_1500B5C;
  v54 = v43;
  v55 = (_QWORD *)swift_task_alloc(v53);
  *(_QWORD *)(v0 + 1344) = v55;
  *v55 = v0;
  v55[1] = sub_CE67D0;
  return sub_CF4A94(v52, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v43);
}

uint64_t sub_CE6048(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();

  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 1240);
  *(_QWORD *)(*v4 + 1248) = v3;
  swift_task_dealloc(v9);
  if (v3)
  {
    v10 = *(_QWORD *)(v8 + 1112);
    v11 = *(_QWORD *)(v8 + 1104);
    v12 = sub_CE7EC8;
  }
  else
  {
    *(_BYTE *)(v8 + 269) = a3;
    *(_QWORD *)(v8 + 1256) = a2;
    *(_QWORD *)(v8 + 1264) = a1;
    v10 = *(_QWORD *)(v8 + 1112);
    v11 = *(_QWORD *)(v8 + 1104);
    v12 = sub_CE60DC;
  }
  return swift_task_switch(v12, v11, v10);
}

uint64_t sub_CE60DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unsigned __int8 v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  if ((*(_BYTE *)(v0 + 269) & 1) != 0)
  {
    v14 = *(void **)(v0 + 1144);
    v15 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v16 = sub_CF49B8();
    v67 = swift_allocError(&type metadata for PlaybackController.CommandError, v16, 0, 0);
    *(_QWORD *)v17 = 2;
    *(_BYTE *)(v17 + 8) = 3;
    swift_willThrow(v67);
    swift_release(v15);

    v18 = *(_QWORD *)(v0 + 1072);
    v19 = *(_QWORD *)(v0 + 1064);
    v20 = *(_QWORD *)(v0 + 1056);
    v21 = *(_QWORD *)(v0 + 1040);
    v22 = *(_QWORD *)(v0 + 1032);
    v23 = *(_QWORD *)(v0 + 1024);
    v24 = *(_QWORD *)(v0 + 1016);
    v25 = *(_QWORD *)(v0 + 1008);
    v26 = *(_QWORD *)(v0 + 1000);
    v59 = *(_QWORD *)(v0 + 992);
    v60 = *(_QWORD *)(v0 + 984);
    v61 = *(_QWORD *)(v0 + 976);
    v62 = *(_QWORD *)(v0 + 960);
    v63 = *(_QWORD *)(v0 + 936);
    v64 = *(_QWORD *)(v0 + 928);
    v65 = *(_QWORD *)(v0 + 904);
    v66 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_OWORD *)(v0 + 1272) = *(_OWORD *)(v0 + 1256);
  v1 = *(_QWORD *)(v0 + 1128);
  KeyPath = swift_getKeyPath(&unk_10A29D0);
  v3 = swift_getKeyPath(&unk_10A29F8);
  static Published.subscript.getter((_QWORD *)(v0 + 808), v1, KeyPath, v3);
  swift_release(v3);
  *(_QWORD *)&v4 = swift_release(KeyPath).n128_u64[0];
  v5 = *(void **)(v0 + 808);
  v6 = objc_msgSend(v5, "route", v4);
  *(_QWORD *)(v0 + 1288) = v6;

  if (!v6)
  {
    v13 = *(void **)(v0 + 1144);
    goto LABEL_10;
  }
  objc_opt_self(MPAVEndpointRoute);
  v7 = (void *)swift_dynamicCastObjCClass(v6);
  *(_QWORD *)(v0 + 1296) = v7;
  if (v7)
  {
    v8 = v7;
    if (!objc_msgSend(v7, "isDeviceRoute"))
    {
      v9 = *(_QWORD *)(v0 + 1128);
      v10 = swift_getKeyPath(&unk_10A2810);
      v11 = swift_getKeyPath(&unk_10A2838);
      static Published.subscript.getter((_QWORD *)(v0 + 824), v9, v10, v11);
      swift_release(v11);
      swift_release(v10);
      v12 = *(void **)(v0 + 824);

      if (!v12)
      {
        v40 = *(unsigned __int8 *)(v0 + 267);
        sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v41 = *(_QWORD *)(v0 + 1064);
        if ((v40 & 1) != 0)
        {
          sub_5C0DC(v41, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v42 = *(_QWORD *)(v0 + 1016);
          v43 = *(_QWORD *)(v0 + 968);
          sub_5BDB8(v41, v42, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42, v43);
          v45 = *(void ***)(v0 + 1016);
          if (EnumCaseMultiPayload == 1)
          {
            v46 = *(_QWORD *)(v0 + 960);
            v47 = *(_QWORD *)(v0 + 952);
            v48 = *(_QWORD *)(v0 + 944);
            v49 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v47 + 32))(v46, v45, v48);
            v50 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v49);
            (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
          }
          else
          {
            v50 = *v45;
          }
          v51 = *(_QWORD *)(v0 + 1064);
          v52 = objc_msgSend(v50, "prefersEnqueuingUsingAirPlay");

          sub_5C0DC(v51, type metadata accessor for PlaybackIntentDescriptor);
          if ((v52 & 1) == 0)
          {
            v54 = *(_QWORD *)(v0 + 1056);
            v55 = *(_QWORD *)(v0 + 840);
            v56 = objc_msgSend(v8, "supportsRemoteControl");
            sub_5BDB8(v55, v54, type metadata accessor for PlaybackIntentDescriptor);
            if ((v56 & 1) != 0)
            {
              v57 = *(_QWORD *)(v0 + 1056);
              v58 = *(_BYTE *)(v57 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_5C0DC(v57, type metadata accessor for PlaybackIntentDescriptor);
              if ((v58 & 1) == 0)
              {
                v13 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_7;
              }
LABEL_22:
              v53 = (_QWORD *)swift_task_alloc(dword_1500F9C);
              *(_QWORD *)(v0 + 1304) = v53;
              *v53 = v0;
              v53[1] = sub_CE6628;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_21:
            sub_5C0DC(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_22;
          }
        }
        sub_5BDB8(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_21;
      }
    }
  }
  v13 = *(void **)(v0 + 1144);
LABEL_7:

LABEL_10:
  *(_QWORD *)(v0 + 1328) = v13;
  v28 = *(_QWORD *)(v0 + 1008);
  v29 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 840), v28, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v30 = swift_getEnumCaseMultiPayload(v28, v29);
  v31 = *(uint64_t **)(v0 + 1008);
  if (v30 == 1)
  {
    v32 = *(_QWORD *)(v0 + 960);
    v33 = *(_QWORD *)(v0 + 952);
    v34 = *(_QWORD *)(v0 + 944);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v33 + 32))(v32, v31, v34);
    v36 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v35);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  }
  else
  {
    v36 = *v31;
  }
  *(_QWORD *)(v0 + 1336) = v36;
  v37 = dword_1500B5C;
  v38 = v13;
  v39 = (_QWORD *)swift_task_alloc(v37);
  *(_QWORD *)(v0 + 1344) = v39;
  *v39 = v0;
  v39[1] = sub_CE67D0;
  return sub_CF4A94(v36, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v13);
}

uint64_t sub_CE6628(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 1304);
  *(_QWORD *)(*(_QWORD *)v2 + 1312) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[139];
    v7 = v4[138];
    v8 = sub_CE801C;
  }
  else
  {
    v4[165] = a1;
    v6 = v4[139];
    v7 = v4[138];
    v8 = sub_CE66A4;
  }
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_CE66A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v1 = *(void **)(v0 + 1320);
  if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
    objc_msgSend(*(id *)(v0 + 1296), "establishGroup");

  *(_QWORD *)(v0 + 1328) = v1;
  v2 = *(_QWORD *)(v0 + 1008);
  v3 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 840), v2, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  v5 = *(uint64_t **)(v0 + 1008);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 944);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v6, v5, v8);
    v10 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    v10 = *v5;
  }
  *(_QWORD *)(v0 + 1336) = v10;
  v11 = dword_1500B5C;
  v12 = v1;
  v13 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 1344) = v13;
  *v13 = v0;
  v13[1] = sub_CE67D0;
  return sub_CF4A94(v10, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v1);
}

uint64_t sub_CE67D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1344);
  *(_QWORD *)(*v1 + 1352) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1112);
    v5 = *(_QWORD *)(v2 + 1104);
    v6 = sub_CE6998;
  }
  else
  {
    v7 = *(void **)(v2 + 1328);

    v4 = *(_QWORD *)(v2 + 1112);
    v5 = *(_QWORD *)(v2 + 1104);
    v6 = sub_CE684C;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_CE684C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1328);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE6998()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  _OWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  void *v133;
  id v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(void);
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  _BOOL4 v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236[2];

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(void **)(v0 + 1328);

  *(_QWORD *)(v0 + 800) = v1;
  swift_errorRetain(v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if (!swift_dynamicCast(v0 + 584, v0 + 800, v3, &type metadata for Player.PlaybackError, 0))
  {
    v20 = *(void **)(v0 + 1328);
    v21 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v22 = swift_errorRelease(*(_QWORD *)(v0 + 800));
    swift_willThrow(v22);
    swift_release(v21);

LABEL_75:
    v138 = *(_QWORD *)(v0 + 1072);
    v139 = *(_QWORD *)(v0 + 1064);
    v140 = *(_QWORD *)(v0 + 1056);
    v141 = *(_QWORD *)(v0 + 1040);
    v142 = *(_QWORD *)(v0 + 1032);
    v143 = *(_QWORD *)(v0 + 1024);
    v144 = *(_QWORD *)(v0 + 1016);
    v145 = *(_QWORD *)(v0 + 1008);
    v146 = *(_QWORD *)(v0 + 1000);
    v208 = *(_QWORD *)(v0 + 992);
    v211 = *(_QWORD *)(v0 + 984);
    v214 = *(_QWORD *)(v0 + 976);
    v217 = *(_QWORD *)(v0 + 960);
    v221 = *(_QWORD *)(v0 + 936);
    v224 = *(_QWORD *)(v0 + 928);
    v228 = *(_QWORD *)(v0 + 904);
    v231 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v138);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    swift_task_dealloc(v143);
    swift_task_dealloc(v144);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v208);
    swift_task_dealloc(v211);
    swift_task_dealloc(v214);
    swift_task_dealloc(v217);
    swift_task_dealloc(v221);
    swift_task_dealloc(v224);
    swift_task_dealloc(v228);
    swift_task_dealloc(v231);
    v147 = *(uint64_t (**)(void))(v0 + 8);
    return v147();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 1352));
  v4 = *(_QWORD *)(v0 + 584);
  *(_QWORD *)(v0 + 1360) = v4;
  v5 = *(_QWORD *)(v0 + 592);
  *(_QWORD *)(v0 + 1368) = v5;
  v6 = (void *)_convertErrorToNSError(_:)(v4);
  *(_QWORD *)(v0 + 1376) = v6;
  _s3__C4CodeOMa_1(0);
  v8 = v7;
  *(_QWORD *)(v0 + 760) = 1;
  v9 = sub_4DD24(&qword_14FAE30, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_109B540);
  v10 = v6;
  v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 760, v10, v8, v9);

  if ((v11 & 1) != 0)
  {
    v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(char **)(v0 + 856);
    if (v15)
    {
      v17 = *(char **)(v0 + 848);
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v236[0] = v19;
      *(_DWORD *)v18 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v18 + 4) = sub_BA95EC(v17, v16, v236);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl(&dword_0, v13, v14, "Intent id=%{public}s) ‚Äî Offering replace intent options to user", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
    }

    v35 = *(_QWORD *)(v0 + 1088);
    *(_QWORD *)(v0 + 1384) = static MainActor.shared.getter(v36);
    v37 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 1392) = v37;
    *(_QWORD *)(v0 + 1400) = v38;
    return swift_task_switch(sub_CE8178, v37, v38);
  }
  *(_QWORD *)(v0 + 728) = 5;
  v23 = v10;
  v24 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 728, v23, v8, v9);

  if ((v24 & 1) != 0)
  {
    v226 = *(void **)(v0 + 1328);
    v229 = v5;
    v25 = *(_QWORD *)(v0 + 1128);
    v26 = *(_QWORD *)(v0 + 1048);
    v27 = *(_QWORD *)(v0 + 872);
    v28 = *(_QWORD *)(v0 + 840);
    swift_release(*(_QWORD *)(v0 + 1096));
    v29 = v4;
    v30 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v31 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v30);
    sub_CF6F00(v28 + *(int *)(v26 + 28), v0 + 272);
    *(_BYTE *)(v0 + 328) = 2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8))(v0 + 272, v30, v31);
    sub_CF4F78((_QWORD *)(v0 + 272));
    v32 = sub_CF49B8();
    v33 = swift_allocError(&type metadata for PlaybackController.CommandError, v32, 0, 0);
    *(_QWORD *)v34 = 1;
    *(_BYTE *)(v34 + 8) = 3;
    swift_willThrow(v33);
    swift_release(v25);
    swift_errorRelease(v29);
    swift_bridgeObjectRelease(v229);

LABEL_74:
    swift_errorRelease(*(_QWORD *)(v0 + 800));
    goto LABEL_75;
  }
  *(_QWORD *)(v0 + 720) = 3;
  v40 = v23;
  v41 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 720, v40, v8, v9);

  if ((v41 & 1) != 0)
  {
    v42 = *(_QWORD *)(v0 + 992);
    v43 = *(_QWORD *)(v0 + 968);
    sub_5BDB8(*(_QWORD *)(v0 + 840), v42, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42, v43);
    v45 = *(uint64_t **)(v0 + 992);
    if (EnumCaseMultiPayload == 1)
    {
      v46 = *(_QWORD *)(v0 + 960);
      v47 = *(_QWORD *)(v0 + 952);
      v48 = *(_QWORD *)(v0 + 944);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v47 + 32))(v46, v45, v48);
      v50 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v49);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    }
    else
    {
      v50 = *v45;
    }
    *(_QWORD *)(v0 + 1448) = v50;
    v65 = (_QWORD *)swift_task_alloc(dword_1500804);
    *(_QWORD *)(v0 + 1456) = v65;
    *v65 = v0;
    v65[1] = sub_CE88B8;
    return sub_CE30D0(v50, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
  }
  _s3__C4CodeOMa_0(0);
  v52 = v51;
  *(_QWORD *)(v0 + 680) = 1001;
  v53 = sub_4DD24(&qword_14FAE58, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_109B504);
  v54 = v40;
  v55 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 680, v54, v52, v53);

  if ((v55 & 1) == 0)
  {
    v66 = *(void **)(v0 + 1328);
    v67 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_73:
    v135 = sub_CF4974();
    swift_allocError(&type metadata for Player.PlaybackError, v135, 0, 0);
    *v136 = v4;
    v136[1] = v5;
    swift_errorRetain(v4);
    v137 = swift_bridgeObjectRetain();
    swift_willThrow(v137);
    swift_release(v67);
    swift_errorRelease(v4);
    swift_bridgeObjectRelease(v5);

    goto LABEL_74;
  }
  v56 = *(_QWORD *)(v0 + 984);
  v57 = *(_QWORD *)(v0 + 968);
  sub_5BDB8(*(_QWORD *)(v0 + 840), v56, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v58 = swift_getEnumCaseMultiPayload(v56, v57);
  v59 = *(void ***)(v0 + 984);
  if (v58 == 1)
  {
    v60 = *(_QWORD *)(v0 + 960);
    v61 = *(_QWORD *)(v0 + 952);
    v62 = *(_QWORD *)(v0 + 944);
    v63 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v61 + 32))(v60, v59, v62);
    v64 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v63);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  }
  else
  {
    v64 = *v59;
  }
  v68 = objc_msgSend(v64, "sharedListeningProperties");

  if (!v68)
    goto LABEL_31;
  v69 = objc_msgSend(v54, "userInfo");
  v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v69, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v73 = v72;
  if (*(_QWORD *)(v70 + 16) && (v74 = sub_21BAD0(v71, v72), (v75 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v70 + 56) + 32 * v74, v0 + 504);
  }
  else
  {
    *(_OWORD *)(v0 + 504) = 0u;
    *(_OWORD *)(v0 + 520) = 0u;
  }
  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v73);
  if (!*(_QWORD *)(v0 + 528))
  {
    swift_release(*(_QWORD *)(v0 + 1096));
    sub_56024(v0 + 504, &qword_14FF2A0);
    goto LABEL_45;
  }
  type metadata accessor for MPCPlayerRequestError(0);
  v77 = v76;
  if ((swift_dynamicCast(v0 + 736, v0 + 504, (char *)&type metadata for Any + 8, v76, 6) & 1) == 0)
  {
LABEL_31:
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_45:
    v99 = *(_QWORD *)(*(_QWORD *)(v0 + 872) + *(_QWORD *)(v0 + 1120));
    if (!v99)
      goto LABEL_72;
    KeyPath = swift_getKeyPath(&unk_10A2810);
    v101 = swift_getKeyPath(&unk_10A2838);
    v102 = swift_retain(v99);
    static Published.subscript.getter((_QWORD *)(v0 + 640), v102, KeyPath, v101);
    swift_release(v101);
    swift_release(KeyPath);
    swift_release(v99);
    v103 = *(void **)(v0 + 640);
    if (!v103)
      goto LABEL_72;

    v104 = objc_msgSend(v54, "userInfo");
    v105 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v104, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    v108 = v107;
    if (*(_QWORD *)(v105 + 16) && (v109 = sub_21BAD0(v106, v107), (v110 & 1) != 0))
    {
      sub_95094(*(_QWORD *)(v105 + 56) + 32 * v109, v0 + 376);
    }
    else
    {
      *(_OWORD *)(v0 + 376) = 0u;
      *(_OWORD *)(v0 + 392) = 0u;
    }
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v108);
    if (!*(_QWORD *)(v0 + 400))
    {
      sub_56024(v0 + 376, &qword_14FF2A0);
      goto LABEL_72;
    }
    v111 = (void **)(v0 + 616);
    type metadata accessor for MPCMusicBehaviorError(0);
    v113 = v112;
    if ((swift_dynamicCast(v0 + 616, v0 + 376, (char *)&type metadata for Any + 8, v112, 6) & 1) != 0)
    {
      v114 = *v111;
      *(_QWORD *)(v0 + 632) = *v111;
      v115 = sub_4DD24(&qword_14FADA0, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_109B3F4);
      _BridgedStoredNSError.code.getter(v113, v115);
      if (*(_QWORD *)(v0 + 624) != 6)
      {

        goto LABEL_72;
      }
      v234 = v4;
      v116 = (_OWORD *)(v0 + 408);
      v223 = v114;
      v227 = v0;
      *(_QWORD *)(v0 + 648) = v114;
      v117 = _BridgedStoredNSError.userInfo.getter(v113, v115);
      v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
      v120 = v119;
      if (*(_QWORD *)(v117 + 16) && (v121 = sub_21BAD0(v118, v119), (v122 & 1) != 0))
      {
        sub_95094(*(_QWORD *)(v117 + 56) + 32 * v121, v0 + 408);
      }
      else
      {
        *v116 = 0u;
        *(_OWORD *)(v0 + 424) = 0u;
      }
      swift_bridgeObjectRelease(v117);
      swift_bridgeObjectRelease(v120);
      if (!*(_QWORD *)(v0 + 432))
      {

        sub_56024((uint64_t)v116, &qword_14FF2A0);
        goto LABEL_72;
      }
      v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B68);
      if ((swift_dynamicCast(v0 + 656, v116, (char *)&type metadata for Any + 8, v123, 6) & 1) != 0)
      {
        v124 = *(_QWORD *)(v0 + 656);
        if (*(_QWORD *)(v124 + 16))
        {
          v125 = *(id *)(v124 + 32);
          swift_bridgeObjectRelease(v124);
          *(_QWORD *)(v0 + 672) = v125;
          _BridgedStoredNSError.code.getter(v113, v115);
          if (*(_QWORD *)(v0 + 664) != 4)
          {
LABEL_88:

            goto LABEL_72;
          }
          v126 = (_OWORD *)(v0 + 440);
          *(_QWORD *)(v0 + 688) = v125;
          v127 = _BridgedStoredNSError.userInfo.getter(v113, v115);
          v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
          v130 = v129;
          v220 = v125;
          v230 = v5;
          if (*(_QWORD *)(v127 + 16) && (v131 = sub_21BAD0(v128, v129), (v132 & 1) != 0))
          {
            sub_95094(*(_QWORD *)(v127 + 56) + 32 * v131, v0 + 440);
          }
          else
          {
            *v126 = 0u;
            *(_OWORD *)(v0 + 456) = 0u;
          }
          swift_bridgeObjectRelease(v127);
          swift_bridgeObjectRelease(v130);
          if (*(_QWORD *)(v0 + 464))
          {
            v148 = (_QWORD *)(v0 + 696);
            v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500B70);
            if ((swift_dynamicCast(v0 + 696, v126, (char *)&type metadata for Any + 8, v149, 6) & 1) != 0)
            {
              v150 = *v148;
              if (*(_QWORD *)(*v148 + 16))
              {
                v151 = *(id *)(v150 + 32);
                swift_bridgeObjectRelease(v150);
                *(_QWORD *)(v0 + 712) = v151;
                type metadata accessor for MPCError(0);
                v153 = v152;
                v154 = sub_4DD24(&qword_14FAE00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_109B5A8);
                _BridgedStoredNSError.code.getter(v153, v154);

                if (*(_QWORD *)(v0 + 704) == 61)
                {
                  v155 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
                  v156 = Logger.logObject.getter(v155);
                  v157 = static os_log_type_t.default.getter(v156);
                  v158 = os_log_type_enabled(v156, v157);
                  v159 = *(char **)(v0 + 856);
                  if (v158)
                  {
                    v160 = *(char **)(v0 + 848);
                    v161 = swift_slowAlloc(12, -1);
                    v162 = swift_slowAlloc(32, -1);
                    v236[0] = v162;
                    *(_DWORD *)v161 = 136446210;
                    swift_bridgeObjectRetain();
                    *(_QWORD *)(v161 + 4) = sub_BA95EC(v160, v159, v236);
                    swift_bridgeObjectRelease_n(v159, 3);
                    _os_log_impl(&dword_0, v156, v157, "Intent id=%{public}s) ‚Äî SharePlayTogether content not available in host's storefront", (uint8_t *)v161, 0xCu);
                    swift_arrayDestroy(v162, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v162, -1, -1);
                    swift_slowDealloc(v161, -1, -1);
                  }
                  else
                  {
                    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
                  }

                  v163 = *(_QWORD *)(v0 + 936);
                  v164 = *(_QWORD *)(v0 + 928);
                  v165 = *(_QWORD *)(v0 + 920);
                  v166 = *(_QWORD *)(v227 + 912);
                  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000001107DD0);
                  v167 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
                  v167(v164, v163, v166);
                  if (qword_14F9C80 != -1)
                    swift_once(&qword_14F9C80, sub_B9BF10);
                  v215 = *(_QWORD *)(v227 + 1128);
                  v218 = *(void **)(v227 + 1328);
                  v168 = *(_QWORD *)(v227 + 936);
                  v169 = *(_QWORD *)(v227 + 928);
                  v170 = *(_QWORD *)(v227 + 920);
                  v171 = *(_QWORD *)(v227 + 912);
                  v172 = *(_QWORD *)(v227 + 904);
                  v204 = *(_QWORD *)(v227 + 896);
                  v207 = *(_QWORD *)(v227 + 888);
                  v209 = *(_QWORD *)(v227 + 880);
                  v212 = *(_QWORD *)(v227 + 872);
                  v173 = qword_1581E30;
                  static Locale.current.getter((id)qword_1581E30);
                  v174 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v173, v172, 0, 0, 256);
                  v205 = v175;
                  v206 = v174;
                  v176 = *(void (**)(uint64_t, uint64_t))(v170 + 8);
                  v176(v168, v171);
                  String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x8000000001107DF0);
                  v167(v169, v168, v171);
                  v177 = qword_1581E30;
                  static Locale.current.getter((id)qword_1581E30);
                  v178 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v177, v172, 0, 0, 256);
                  v202 = v179;
                  v203 = v178;
                  v176(v168, v171);
                  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
                  v181 = swift_allocObject(v180, 88, 7);
                  *(_OWORD *)(v181 + 16) = xmmword_105B360;
                  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
                  v167(v169, v168, v171);
                  v182 = qword_1581E30;
                  static Locale.current.getter((id)qword_1581E30);
                  v183 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v182, v172, 0, 0, 256);
                  v185 = v184;
                  v176(v168, v171);
                  v186 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
                  v187 = UUID.uuidString.getter(v186);
                  v189 = v188;
                  (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v204, v209);
                  *(_QWORD *)(v181 + 32) = v187;
                  *(_QWORD *)(v181 + 40) = v189;
                  *(_QWORD *)(v181 + 48) = v183;
                  *(_QWORD *)(v181 + 56) = v185;
                  *(_BYTE *)(v181 + 64) = 2;
                  *(_QWORD *)(v181 + 72) = 0;
                  *(_QWORD *)(v181 + 80) = 0;
                  v190 = *(_QWORD *)(v212 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
                  v191 = *(_QWORD *)(v212 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
                  __swift_project_boxed_opaque_existential_1((_QWORD *)(v212 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v190);
                  *(_QWORD *)(v227 + 208) = v206;
                  *(_QWORD *)(v227 + 216) = v205;
                  *(_QWORD *)(v227 + 224) = v203;
                  *(_QWORD *)(v227 + 232) = v202;
                  *(_BYTE *)(v227 + 240) = 0;
                  *(_QWORD *)(v227 + 248) = v181;
                  *(_QWORD *)(v227 + 256) = 0;
                  *(_BYTE *)(v227 + 264) = 0;
                  v192 = *(void (**)(uint64_t, uint64_t, uint64_t))(v191 + 8);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v192(v227 + 208, v190, v191);
                  swift_release(v215);
                  swift_bridgeObjectRelease(v205);
                  swift_bridgeObjectRelease(v202);
                  swift_bridgeObjectRelease(v181);

                  swift_errorRelease(v234);
                  swift_bridgeObjectRelease(v230);

                  sub_CF4F78((_QWORD *)(v227 + 208));
                  swift_errorRelease(*(_QWORD *)(v227 + 800));
                  v193 = *(_QWORD *)(v227 + 1072);
                  v194 = *(_QWORD *)(v227 + 1064);
                  v195 = *(_QWORD *)(v227 + 1056);
                  v196 = *(_QWORD *)(v227 + 1040);
                  v197 = *(_QWORD *)(v227 + 1032);
                  v198 = *(_QWORD *)(v227 + 1024);
                  v199 = *(_QWORD *)(v227 + 1016);
                  v200 = *(_QWORD *)(v227 + 1008);
                  v201 = *(_QWORD *)(v227 + 1000);
                  v210 = *(_QWORD *)(v227 + 992);
                  v213 = *(_QWORD *)(v227 + 984);
                  v216 = *(_QWORD *)(v227 + 976);
                  v219 = *(_QWORD *)(v227 + 960);
                  v222 = *(_QWORD *)(v227 + 936);
                  v225 = *(_QWORD *)(v227 + 928);
                  v232 = *(_QWORD *)(v227 + 904);
                  v235 = *(_QWORD *)(v227 + 896);
                  swift_task_dealloc(*(_QWORD *)(v227 + 1080));
                  swift_task_dealloc(v193);
                  swift_task_dealloc(v194);
                  swift_task_dealloc(v195);
                  swift_task_dealloc(v196);
                  swift_task_dealloc(v197);
                  swift_task_dealloc(v198);
                  swift_task_dealloc(v199);
                  swift_task_dealloc(v200);
                  swift_task_dealloc(v201);
                  swift_task_dealloc(v210);
                  swift_task_dealloc(v213);
                  swift_task_dealloc(v216);
                  swift_task_dealloc(v219);
                  swift_task_dealloc(v222);
                  swift_task_dealloc(v225);
                  swift_task_dealloc(v232);
                  swift_task_dealloc(v235);
                  v147 = *(uint64_t (**)(void))(v227 + 8);
                  return v147();
                }
              }
              else
              {
                swift_bridgeObjectRelease(*v148);
              }
            }
            goto LABEL_88;
          }

          sub_56024((uint64_t)v126, &qword_14FF2A0);
          goto LABEL_72;
        }
        swift_bridgeObjectRelease(v124);
      }

    }
LABEL_72:
    v66 = *(void **)(v0 + 1328);
    v67 = *(_QWORD *)(v0 + 1128);
    goto LABEL_73;
  }
  v233 = v4;
  v78 = *(void **)(v0 + 736);
  *(_QWORD *)(v0 + 1472) = v78;
  *(_QWORD *)(v0 + 752) = v78;
  v79 = sub_4DD24(&qword_14FADB0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_109B7AC);
  _BridgedStoredNSError.code.getter(v77, v79);
  if (*(_QWORD *)(v0 + 744) != 1000)
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    v4 = v233;
    goto LABEL_45;
  }
  v80 = (_OWORD *)(v0 + 472);
  *(_QWORD *)(v0 + 768) = v78;
  v81 = _BridgedStoredNSError.userInfo.getter(v77, v79);
  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v84 = v83;
  if (*(_QWORD *)(v81 + 16))
  {
    v85 = sub_21BAD0(v82, v83);
    if ((v86 & 1) != 0)
    {
      sub_95094(*(_QWORD *)(v81 + 56) + 32 * v85, v0 + 472);
    }
    else
    {
      *v80 = 0u;
      *(_OWORD *)(v0 + 488) = 0u;
    }
  }
  else
  {
    *v80 = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
  }
  v4 = v233;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v84);
  if (!*(_QWORD *)(v0 + 496))
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    sub_56024(v0 + 472, &qword_14FF2A0);
    goto LABEL_45;
  }
  type metadata accessor for MPCError(0);
  v88 = v87;
  if ((swift_dynamicCast(v0 + 776, v0 + 472, (char *)&type metadata for Any + 8, v87, 6) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_44:

    goto LABEL_45;
  }
  v89 = *(void **)(v0 + 776);
  *(_QWORD *)(v0 + 1480) = v89;
  *(_QWORD *)(v0 + 792) = v89;
  v90 = sub_4DD24(&qword_14FAE00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_109B5A8);
  _BridgedStoredNSError.code.getter(v88, v90);
  if (*(_QWORD *)(v0 + 784) != 58)
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    goto LABEL_44;
  }
  v91 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
  v92 = Logger.logObject.getter(v91);
  v93 = static os_log_type_t.default.getter(v92);
  v94 = os_log_type_enabled(v92, v93);
  v95 = *(char **)(v0 + 856);
  if (v94)
  {
    v96 = *(char **)(v0 + 848);
    v97 = swift_slowAlloc(12, -1);
    v98 = swift_slowAlloc(32, -1);
    v236[0] = v98;
    *(_DWORD *)v97 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v97 + 4) = sub_BA95EC(v96, v95, v236);
    swift_bridgeObjectRelease_n(v95, 3);
    _os_log_impl(&dword_0, v92, v93, "Intent id=%{public}s) ‚Äî SharedListening requires system route", (uint8_t *)v97, 0xCu);
    swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v98, -1, -1);
    swift_slowDealloc(v97, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
  }

  v133 = (void *)objc_opt_self(MPAVRoutingController);
  *(_QWORD *)(v0 + 1488) = v133;
  v134 = objc_msgSend(v133, "systemRoute");
  *(_QWORD *)(v0 + 1496) = v134;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_CE8924;
  *(_QWORD *)(v0 + 368) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 336) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 344) = 0x40000000;
  *(_QWORD *)(v0 + 352) = sub_C31018;
  *(_QWORD *)(v0 + 360) = &block_descriptor_162_2;
  objc_msgSend(v133, "setActiveRoute:completion:", v134, v0 + 336);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_CE7EC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE801C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 1288);
  v2 = *(void **)(v0 + 1144);
  v3 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v3);
  v4 = *(_QWORD *)(v0 + 1072);
  v5 = *(_QWORD *)(v0 + 1064);
  v6 = *(_QWORD *)(v0 + 1056);
  v7 = *(_QWORD *)(v0 + 1040);
  v8 = *(_QWORD *)(v0 + 1032);
  v9 = *(_QWORD *)(v0 + 1024);
  v10 = *(_QWORD *)(v0 + 1016);
  v11 = *(_QWORD *)(v0 + 1008);
  v12 = *(_QWORD *)(v0 + 1000);
  v14 = *(_QWORD *)(v0 + 992);
  v15 = *(_QWORD *)(v0 + 984);
  v16 = *(_QWORD *)(v0 + 976);
  v17 = *(_QWORD *)(v0 + 960);
  v18 = *(_QWORD *)(v0 + 936);
  v19 = *(_QWORD *)(v0 + 928);
  v20 = *(_QWORD *)(v0 + 904);
  v21 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE8178(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 1408) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_CE81E0, v4, v6);
}

uint64_t sub_CE81E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[109];
  v0[15] = v0 + 75;
  v0[10] = v0;
  v0[11] = sub_CE8238;
  v2 = swift_continuation_init(v0 + 10, 0);
  sub_CEBD78(v2, v1);
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_CE8238()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1408);
  *(_QWORD *)(v1 + 1416) = *(_QWORD *)(v1 + 600);
  *(_BYTE *)(v1 + 270) = *(_BYTE *)(v1 + 608);
  swift_release(v2);
  return swift_task_switch(sub_CE8298, *(_QWORD *)(v1 + 1392), *(_QWORD *)(v1 + 1400));
}

uint64_t sub_CE8298()
{
  _QWORD *v0;

  swift_release(v0[173]);
  return swift_task_switch(sub_CE82D4, v0[138], v0[139]);
}

uint64_t sub_CE82D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if ((*(_BYTE *)(v0 + 270) & 1) != 0)
  {
    v1 = *(void **)(v0 + 1376);
    v2 = *(_QWORD *)(v0 + 1368);
    v3 = *(_QWORD *)(v0 + 1360);
    v4 = *(void **)(v0 + 1328);
    v5 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v6 = sub_CF49B8();
    v36 = swift_allocError(&type metadata for PlaybackController.CommandError, v6, 0, 0);
    *(_QWORD *)v7 = 2;
    *(_BYTE *)(v7 + 8) = 3;
    swift_willThrow(v36);
    swift_release(v5);
    swift_errorRelease(v3);
    swift_bridgeObjectRelease(v2);

    swift_errorRelease(*(_QWORD *)(v0 + 800));
    v8 = *(_QWORD *)(v0 + 1072);
    v9 = *(_QWORD *)(v0 + 1064);
    v10 = *(_QWORD *)(v0 + 1056);
    v11 = *(_QWORD *)(v0 + 1040);
    v12 = *(_QWORD *)(v0 + 1032);
    v13 = *(_QWORD *)(v0 + 1024);
    v14 = *(_QWORD *)(v0 + 1016);
    v15 = *(_QWORD *)(v0 + 1008);
    v16 = *(_QWORD *)(v0 + 1000);
    v28 = *(_QWORD *)(v0 + 992);
    v29 = *(_QWORD *)(v0 + 984);
    v30 = *(_QWORD *)(v0 + 976);
    v31 = *(_QWORD *)(v0 + 960);
    v32 = *(_QWORD *)(v0 + 936);
    v33 = *(_QWORD *)(v0 + 928);
    v34 = *(_QWORD *)(v0 + 904);
    v35 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 1000);
    v19 = *(_QWORD *)(v0 + 968);
    sub_5BDB8(*(_QWORD *)(v0 + 840), v18, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    v21 = *(uint64_t **)(v0 + 1000);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = *(_QWORD *)(v0 + 960);
      v23 = *(_QWORD *)(v0 + 952);
      v24 = *(_QWORD *)(v0 + 944);
      v25 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v23 + 32))(v22, v21, v24);
      v26 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v25);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    else
    {
      v26 = *v21;
    }
    *(_QWORD *)(v0 + 1424) = v26;
    v27 = (_QWORD *)swift_task_alloc(dword_1500B5C);
    *(_QWORD *)(v0 + 1432) = v27;
    *v27 = v0;
    v27[1] = sub_CE855C;
    return sub_CF4A94(v26, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1416), 0);
  }
}

uint64_t sub_CE855C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1432);
  *(_QWORD *)(*v1 + 1440) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_CE873C;
  else
    v4 = sub_CE85C8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_CE85C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE873C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE88B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1456);
  *(_QWORD *)(*v1 + 1464) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_CE8E24;
  else
    v4 = sub_CF7514;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_CE8924()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 1504) = v2;
  if (v2)
    v3 = sub_CE8FA0;
  else
    v3 = sub_CE8984;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 1104), *(_QWORD *)(v1 + 1112));
}

uint64_t sub_CE8984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 976);
  v2 = *(_QWORD *)(v0 + 968);
  v3 = *(_QWORD *)(v0 + 840);

  sub_5BDB8(v3, v1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  v5 = *(uint64_t **)(v0 + 976);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 944);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v6, v5, v8);
    v10 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    v10 = *v5;
  }
  *(_QWORD *)(v0 + 1512) = v10;
  v11 = objc_msgSend(*(id *)(v0 + 1488), "systemRoute");
  *(_QWORD *)(v0 + 1520) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1500B5C);
  *(_QWORD *)(v0 + 1528) = v12;
  *v12 = v0;
  v12[1] = sub_CE8A98;
  return sub_CF4A94(v10, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v11);
}

uint64_t sub_CE8A98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1528);
  *(_QWORD *)(*v1 + 1536) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 1512);

  if (v0)
    v5 = sub_CE8C98;
  else
    v5 = sub_CE8B14;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_CE8B14()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 1480);
  v2 = *(void **)(v0 + 1472);
  v3 = *(void **)(v0 + 1376);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1360);
  v6 = *(void **)(v0 + 1328);
  v7 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v7);
  swift_errorRelease(v5);
  swift_bridgeObjectRelease(v4);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v8 = *(_QWORD *)(v0 + 1072);
  v9 = *(_QWORD *)(v0 + 1064);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 1040);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  v14 = *(_QWORD *)(v0 + 1016);
  v15 = *(_QWORD *)(v0 + 1008);
  v16 = *(_QWORD *)(v0 + 1000);
  v18 = *(_QWORD *)(v0 + 992);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 960);
  v22 = *(_QWORD *)(v0 + 936);
  v23 = *(_QWORD *)(v0 + 928);
  v24 = *(_QWORD *)(v0 + 904);
  v25 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE8C98()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 1480);
  v2 = *(void **)(v0 + 1472);
  v3 = *(void **)(v0 + 1376);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1360);
  v6 = *(void **)(v0 + 1328);
  v7 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v7);
  swift_errorRelease(v5);
  swift_bridgeObjectRelease(v4);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v8 = *(_QWORD *)(v0 + 1072);
  v9 = *(_QWORD *)(v0 + 1064);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 1040);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  v14 = *(_QWORD *)(v0 + 1016);
  v15 = *(_QWORD *)(v0 + 1008);
  v16 = *(_QWORD *)(v0 + 1000);
  v18 = *(_QWORD *)(v0 + 992);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 960);
  v22 = *(_QWORD *)(v0 + 936);
  v23 = *(_QWORD *)(v0 + 928);
  v24 = *(_QWORD *)(v0 + 904);
  v25 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE8E24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE8FA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 1496);
  v2 = *(void **)(v0 + 1480);
  v3 = *(void **)(v0 + 1472);
  v4 = *(void **)(v0 + 1376);
  v5 = *(_QWORD *)(v0 + 1368);
  v6 = *(_QWORD *)(v0 + 1360);
  v7 = *(void **)(v0 + 1328);
  v8 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_willThrow(v9);
  swift_release(v8);

  swift_errorRelease(v6);
  swift_bridgeObjectRelease(v5);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v10 = *(_QWORD *)(v0 + 1072);
  v11 = *(_QWORD *)(v0 + 1064);
  v12 = *(_QWORD *)(v0 + 1056);
  v13 = *(_QWORD *)(v0 + 1040);
  v14 = *(_QWORD *)(v0 + 1032);
  v15 = *(_QWORD *)(v0 + 1024);
  v16 = *(_QWORD *)(v0 + 1016);
  v17 = *(_QWORD *)(v0 + 1008);
  v18 = *(_QWORD *)(v0 + 1000);
  v20 = *(_QWORD *)(v0 + 992);
  v21 = *(_QWORD *)(v0 + 984);
  v22 = *(_QWORD *)(v0 + 976);
  v23 = *(_QWORD *)(v0 + 960);
  v24 = *(_QWORD *)(v0 + 936);
  v25 = *(_QWORD *)(v0 + 928);
  v26 = *(_QWORD *)(v0 + 904);
  v27 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE913C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1[29] = v0;
  v2 = type metadata accessor for Player.CommandOptions(0);
  v1[30] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v3);
  v1[32] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[33] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[34] = v6;
  v1[35] = v7;
  return swift_task_switch(sub_CE91DC, v6, v7);
}

uint64_t sub_CE91DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t DynamicType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  int *v29;
  _QWORD *v30;
  _QWORD *v31;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 200, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 288) = *v1;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 264));
    v21 = *(_QWORD *)(v0 + 248);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 104) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 112) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 84) = 1;
  *(_DWORD *)(v0 + 80) = 0;
  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), (uint64_t)&type metadata for Player.VocalsCommand);
  DynamicType = swift_getDynamicType(v3, &type metadata for Player.VocalsCommand, 1);
  v5 = *(_QWORD *)(v0 + 112);
  swift_retain(v2);
  v6 = sub_D01B94(DynamicType, v5);
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
    goto LABEL_11;
  }
  v7 = (void *)v6;
  v8 = MPCPlayerResponse.canPerform(_:)(v0 + 80);

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  if (!v8)
  {
LABEL_11:
    if (qword_14F9F78 != -1)
      swift_once(&qword_14F9F78, sub_CF3E04);
    v23 = type metadata accessor for Logger(0);
    v24 = __swift_project_value_buffer(v23, (uint64_t)static Logger.playbackController);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "[Auto-Sing] Preparing VA‚Ä¶", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }
    v28 = *(_QWORD *)(v0 + 256);
    v29 = *(int **)(v0 + 240);

    *(_QWORD *)(v0 + 144) = &type metadata for Player.VocalsCommand.Prepare;
    *(_QWORD *)(v0 + 152) = &protocol witness table for Player.VocalsCommand.Prepare;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v30 = (_QWORD *)(v28 + v29[5]);
    *v30 = 0;
    v30[1] = 0;
    *(_QWORD *)(v28 + v29[6]) = 0;
    *(_BYTE *)(v28 + v29[7]) = 0;
    *(_QWORD *)(v28 + v29[8]) = 0;
    v31 = (_QWORD *)swift_task_alloc(dword_1501064);
    *(_QWORD *)(v0 + 296) = v31;
    *v31 = v0;
    v31[1] = sub_CE954C;
    v18 = *(_QWORD *)(v0 + 256);
    v19 = 5.0;
    v20 = v0 + 120;
    return sub_CFDB58(v20, v18, v19);
  }
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v9 = type metadata accessor for Logger(0);
  v10 = __swift_project_value_buffer(v9, (uint64_t)static Logger.playbackController);
  *(_QWORD *)(v0 + 312) = v10;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "[Auto-Sing] Awaiting for Vocals Command‚Ä¶", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  v15 = *(int **)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 248);

  *(_QWORD *)(v0 + 184) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 192) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 164) = 1;
  *(_DWORD *)(v0 + 160) = 0;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v16 = (_QWORD *)(v14 + v15[5]);
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)(v14 + v15[6]) = 0;
  *(_BYTE *)(v14 + v15[7]) = 0;
  *(_QWORD *)(v14 + v15[8]) = 0;
  v17 = (_QWORD *)swift_task_alloc(dword_1501064);
  *(_QWORD *)(v0 + 320) = v17;
  *v17 = v0;
  v17[1] = sub_CE9758;
  v18 = *(_QWORD *)(v0 + 248);
  v19 = 5.0;
  v20 = v0 + 160;
  return sub_CFDB58(v20, v18, v19);
}

uint64_t sub_CE954C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 296);
  *(_QWORD *)(*(_QWORD *)v2 + 304) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_5C0DC(v4[32], type metadata accessor for Player.CommandOptions);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_CE9914;
  }
  else
  {
    v9 = v4[32];

    sub_5C0DC(v9, type metadata accessor for Player.CommandOptions);
    __swift_destroy_boxed_opaque_existential_1(v4 + 15);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_CE95F0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_CE95F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  _QWORD *v9;

  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.playbackController);
  *(_QWORD *)(v0 + 312) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "[Auto-Sing] Awaiting for Vocals Command‚Ä¶", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = *(int **)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);

  *(_QWORD *)(v0 + 184) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 192) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 164) = 1;
  *(_DWORD *)(v0 + 160) = 0;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v8 = (_QWORD *)(v6 + v7[5]);
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)(v6 + v7[6]) = 0;
  *(_BYTE *)(v6 + v7[7]) = 0;
  *(_QWORD *)(v6 + v7[8]) = 0;
  v9 = (_QWORD *)swift_task_alloc(dword_1501064);
  *(_QWORD *)(v0 + 320) = v9;
  *v9 = v0;
  v9[1] = sub_CE9758;
  return sub_CFDB58(v0 + 160, *(_QWORD *)(v0 + 248), 5.0);
}

uint64_t sub_CE9758(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 320);
  *(_QWORD *)(*(_QWORD *)v2 + 328) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_5C0DC(v4[31], type metadata accessor for Player.CommandOptions);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_CE9B4C;
  }
  else
  {
    v9 = v4[31];

    sub_5C0DC(v9, type metadata accessor for Player.CommandOptions);
    __swift_destroy_boxed_opaque_existential_1(v4 + 20);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_CE97FC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_CE97FC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 264));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "[Auto-Sing] Vocals command performed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 288);
  v6 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v7 = v6[3];
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v0 + 16, v7, v8);
  swift_release(v5);
  sub_CF4F78((_QWORD *)(v0 + 16));
  v9 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE9914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  swift_release(*(_QWORD *)(v0 + 264));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 304);
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.playbackController);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 224) = v1;
    swift_errorRetain(v1);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 224, v8);
    v11 = v10;
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v18);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v4, v5, "[Auto-Sing] Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v12 = *(_QWORD *)(v0 + 288);
  v13 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v14 = v13[3];
  v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(v0 + 16, v14, v15);
  swift_release(v12);
  sub_CF4F78((_QWORD *)(v0 + 16));
  v16 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CE9B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  swift_release(*(_QWORD *)(v0 + 264));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 328);
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.playbackController);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 224) = v1;
    swift_errorRetain(v1);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = (char *)String.init<A>(describing:)(v0 + 224, v8);
    v11 = v10;
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v18);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v4, v5, "[Auto-Sing] Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v12 = *(_QWORD *)(v0 + 288);
  v13 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v14 = v13[3];
  v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(v0 + 16, v14, v15);
  swift_release(v12);
  sub_CF4F78((_QWORD *)(v0 + 16));
  v16 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Logger.siriIntents.unsafeMutableAddressor()
{
  return sub_C7B42C(&qword_14F9F88, (uint64_t)static Logger.siriIntents, (uint64_t)sub_CF3F20);
}

BOOL PlaybackController.canPerform(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  _BYTE v10[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v10, 0, 0);
  v4 = *v3;
  if (v4)
  {
    v5 = a1[3];
    v6 = a1[4];
    v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
    swift_retain(v4);
    v8 = sub_D0B4A4((uint64_t)v7, v4, v5, v6);
    swift_release(v4);
  }
  else
  {
    return 0;
  }
  return v8;
}

uint64_t PlaybackController.canPerform(anyOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v13[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v13, 0, 0);
  if (!*v5)
    goto LABEL_13;
  swift_retain();
  v6 = sub_D01B94(a1, a2);
  if (!v6)
  {
    swift_release();
LABEL_13:
    v11 = 0;
    return v11 & 1;
  }
  v7 = (void *)v6;
  v8 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
  if (v8)
    v9 = v8;
  else
    v9 = 0;
  if (v8)
    v10 = a1;
  else
    v10 = 0;
  if (!v10)
  {
    swift_release();

    goto LABEL_13;
  }
  v11 = (*(uint64_t (**)(void *))(v9 + 16))(v7);
  swift_release();

  return v11 & 1;
}

uint64_t PlaybackController.performWhenAvailable(_:options:timeout:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 64) = v3;
  *(double *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 72) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 80) = v7;
  *(_QWORD *)(v4 + 88) = v8;
  return swift_task_switch(sub_CE9F8C, v7, v8);
}

uint64_t sub_CE9F8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v6;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v3 = dword_1501064;
    swift_retain(v2);
    v4 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_CEA038;
    return sub_CFDB58(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(double *)(v0 + 56));
  }
  else
  {
    v6 = swift_release(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v6);
  }
}

uint64_t sub_CEA038(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  *(_QWORD *)(*(_QWORD *)v2 + 112) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_CEA0EC;
  }
  else
  {
    swift_release(v4[12]);
    v4[15] = a1;
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_CEA0B4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_CEA0B4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 120), v1);
}

uint64_t sub_CEA0EC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_CEA1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 80, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 216) = v4;
  if (v4)
  {
    v6 = *(int **)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 136);
    v7 = *(void **)(v0 + 144);
    swift_retain(v4);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v9 = (_QWORD *)(v5 + v6[5]);
    *v9 = 0;
    v9[1] = 0;
    v10 = v6[6];
    *(_QWORD *)(v5 + v10) = 0;
    v11 = v6[7];
    *(_BYTE *)(v5 + v11) = 0;
    v12 = v6[8];
    *(_QWORD *)(v5 + v10) = v8;
    *(_BYTE *)(v5 + v11) = 1;
    *(_QWORD *)(v5 + v12) = v7;
    v13 = dword_1501074;
    v14 = v7;
    v15 = (_QWORD *)swift_task_alloc(v13);
    *(_QWORD *)(v0 + 224) = v15;
    *v15 = v0;
    v15[1] = sub_CEA2DC;
    return sub_CFF480(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 176));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_CEA2DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  v6 = v4[27];
  v7 = v4[22];
  if (v1)
  {
    sub_5C0DC(v7, type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v8 = v4[24];
    v9 = v4[25];
    v10 = sub_CEA75C;
  }
  else
  {
    v4[30] = a1;
    sub_5C0DC(v7, type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v8 = v4[24];
    v9 = v4[25];
    v10 = sub_CEA380;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_CEA380()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 184));
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(void **)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v1);
    goto LABEL_18;
  }
  if (v1 >= 0)
    v33 = v1 & 0xFFFFFFFFFFFFFF8;
  else
    v33 = v1;
  swift_bridgeObjectRetain();
  v2 = (void *)_CocoaArrayWrapper.endIndex.getter(v33);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_22;
    }
    v3 = *(id *)(v1 + 32);
  }
  v2 = v3;
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "dialog");
  if (!v4)
  {

LABEL_18:
    sub_CF4F4C(0, 0);
    goto LABEL_19;
  }
  v38 = (uint64_t *)(v0 + 16);
  v39 = v4;
  if (qword_14F9F78 != -1)
LABEL_22:
    swift_once(&qword_14F9F78, sub_CF3E04);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v5, 2);
  v7 = v2;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 128);
  v37 = v7;
  if (v10)
  {
    v12 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v40 = v35;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
    v14 = (char *)Array.description.getter(v11, v13);
    v16 = v15;
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v12 + 4) = sub_BA95EC(v14, v16, &v40);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease_n(v11, 2);
    *(_WORD *)(v12 + 12) = 2082;
    v17 = v7;
    v18 = objc_msgSend(v17, "description");
    v19 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v12 + 14) = sub_BA95EC(v19, v21, &v40);
    swift_bridgeObjectRelease(v21);

    _os_log_impl(&dword_0, v8, v9, "‚§µÔ∏è üõë Commands %{public}s ‚Äî Perform error -> Presenting dialog for status=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v11, 2);

  }
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(void **)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 160);
  v25 = (_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v26 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v27 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v26);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 40);
  v36 = v23;
  v29 = v28(v26, v27);
  v30 = *(_QWORD *)(v24 + v22);
  v32 = v25[3];
  v31 = v25[4];
  __swift_project_boxed_opaque_existential_1(v25, v32);
  swift_retain(v30);
  MPCPlayerCommandDialog.alert(context:completion:)(v23, v29, v30, 0, 0, v38);
  *(_BYTE *)(v0 + 72) = 0;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v31 + 8))(v38, v32, v31);
  sub_CF4F78(v38);

  swift_release(v29);
  swift_release(v30);

LABEL_19:
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_CEA75C()
{
  uint64_t v0;
  uint64_t v1;
  char **v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  id v29;
  id v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v53;
  id v54;
  uint64_t *v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59[2];

  v3 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(v0 + 120) = v3;
  v4 = (_QWORD *)(v0 + 120);
  swift_errorRetain(v3);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if ((swift_dynamicCast(v0 + 104, v0 + 120, v5, &type metadata for Player.PlaybackError, 0) & 1) == 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
LABEL_29:
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 232));
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = (void *)((unint64_t)v6 >> 62);
  if (!((unint64_t)v6 >> 62))
  {
    v9 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_4;
LABEL_27:
    swift_bridgeObjectRelease(v6);
    goto LABEL_28;
  }
  if (v6 < 0)
    v48 = *(_QWORD *)(v0 + 112);
  else
    v48 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v48))
    goto LABEL_27;
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_32;
    }
    v10 = *(id *)(v6 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease(v6);
  v2 = &selRef_isAirPlayingToDevice;
  v12 = objc_msgSend(v11, "dialog");

  if (!v12)
  {
LABEL_28:
    v49 = sub_CF4974();
    v50 = swift_allocError(&type metadata for Player.PlaybackError, v49, 0, 0);
    *v51 = v7;
    v51[1] = v6;
    swift_willThrow(v50);
    swift_errorRelease(*v4);
    goto LABEL_29;
  }

  v13 = *v4;
  swift_bridgeObjectRetain();
  swift_errorRelease(v13);
  v1 = v6 & 0xFFFFFFFFFFFFFF8;
  if (!v8)
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_10;
LABEL_36:
    swift_bridgeObjectRelease(v6);
    goto LABEL_37;
  }
LABEL_32:
  if (v6 >= 0)
    v53 = v1;
  else
    v53 = v6;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v53))
    goto LABEL_36;
LABEL_10:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_41;
    }
    v15 = *(id *)(v6 + 32);
  }
  v8 = v15;
  swift_bridgeObjectRelease(v6);
  v58 = objc_msgSend(v8, v2[157]);
  if (!v58)
  {

LABEL_37:
    sub_CF4F4C(v7, v6);
    goto LABEL_38;
  }
  v55 = (uint64_t *)(v0 + 16);
  if (qword_14F9F78 != -1)
LABEL_41:
    swift_once(&qword_14F9F78, sub_CF3E04);
  v16 = *(_QWORD *)(v0 + 128);
  v17 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v17, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v16, 2);
  v18 = v8;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 128);
  v56 = v18;
  v57 = v7;
  if (v21)
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v59[0] = v24;
    *(_DWORD *)v23 = 136446466;
    swift_bridgeObjectRetain();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
    v26 = (char *)Array.description.getter(v22, v25);
    v28 = v27;
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)(v23 + 4) = sub_BA95EC(v26, v28, v59);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease_n(v22, 2);
    *(_WORD *)(v23 + 12) = 2082;
    v29 = v18;
    v30 = objc_msgSend(v29, "description");
    v31 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    *(_QWORD *)(v23 + 14) = sub_BA95EC(v31, v33, v59);
    swift_bridgeObjectRelease(v33);

    _os_log_impl(&dword_0, v19, v20, "‚§µÔ∏è üõë Commands %{public}s ‚Äî Perform error -> Presenting dialog for status=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v22, 2);

  }
  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(void **)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 160);
  v37 = (_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v38 = *(_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v39 = *(_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v38);
  v40 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 40);
  v54 = v35;
  v41 = v40(v38, v39);
  v42 = *(_QWORD *)(v36 + v34);
  v43 = v37[3];
  v44 = v37[4];
  __swift_project_boxed_opaque_existential_1(v37, v43);
  swift_retain(v42);
  MPCPlayerCommandDialog.alert(context:completion:)(v35, v41, v42, 0, 0, v55);
  *(_BYTE *)(v0 + 72) = 0;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 8))(v55, v43, v44);
  sub_CF4F78(v55);
  if (v57)
  {
    v45 = sub_CF4974();
    swift_allocError(&type metadata for Player.PlaybackError, v45, 0, 0);
    *v46 = v57;
    v46[1] = v6;
    swift_errorRetain(v57);
    v47 = swift_bridgeObjectRetain();
    swift_willThrow(v47);

    swift_errorRelease(v57);
    swift_release(v41);
    swift_release(v42);

    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_29;
  }

  swift_release(v41);
  swift_release(v42);

LABEL_38:
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_CEAD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  v5 = type metadata accessor for Locale(0);
  v4[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[43] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[44] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[45] = swift_task_alloc(v8);
  v4[46] = swift_task_alloc(v8);
  v9 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4[47] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[48] = v10;
  v4[49] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v4[50] = v11;
  v4[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v4[52] = v12;
  v4[53] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v4[54] = v14;
  v4[55] = v15;
  return swift_task_switch(sub_CEAE50, v14, v15);
}

uint64_t sub_CEAE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t DynamicType;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v47;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = type metadata accessor for PlaybackIntentDescriptor(0);
  sub_CF6F00(v1 + *(int *)(v2 + 28), v0 + 160);
  sub_CF6F00(v0 + 160, v0 + 240);
  v3 = *(_QWORD *)(v0 + 264);
  if (!v3)
  {
    sub_56024(v0 + 240, &qword_1500B80);
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_QWORD *)(v0 + 152) = 0;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(v0 + 272);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
  sub_CED4C0(v3, v4, v0 + 120);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 240));
  if (!*(_QWORD *)(v0 + 144))
  {
LABEL_12:
    sub_56024(v0 + 120, &qword_1500B80);
    goto LABEL_13;
  }
  sub_8B15C((__int128 *)(v0 + 120), v0 + 80);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v5);
  DynamicType = swift_getDynamicType(v6, v5, 1);
  if (qword_14FA080 != -1)
    swift_once(&qword_14FA080, sub_D5DDF4);
  v8 = *(_QWORD *)((char *)off_1503BE8[0] + (unint64_t)&dword_10);
  if (!v8)
  {
LABEL_9:
    v10 = *(_QWORD *)(v0 + 400);
    v11 = *(_QWORD *)(v0 + 408);
    sub_5BDB8(*(_QWORD *)(v0 + 304), v11, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v10);
    v13 = *(uint64_t **)(v0 + 408);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *(_QWORD *)(v0 + 384);
      v14 = *(_QWORD *)(v0 + 392);
      v16 = *(_QWORD *)(v0 + 376);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v15 + 32))(v14, v13, v16);
      v18 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v17);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    else
    {
      v18 = *v13;
    }
    *(_QWORD *)(v0 + 448) = v18;
    v47 = (_QWORD *)swift_task_alloc(dword_1500804);
    *(_QWORD *)(v0 + 456) = v47;
    *v47 = v0;
    v47[1] = sub_CEB288;
    return sub_CE30D0(v18, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
  }
  v9 = off_1503BE8[0] + 8;
  while (*(_QWORD *)v9 != DynamicType)
  {
    v9 += 4;
    if (!--v8)
      goto LABEL_9;
  }
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
LABEL_13:
  if (qword_14FA088 != -1)
    swift_once(&qword_14FA088, sub_D5E434);
  v19 = type metadata accessor for Logger(0);
  v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.sharedListening);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_0, v21, v22, "Offering SharePlay options (Play Now/Next/Last)", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  sub_CF6F00(v0 + 160, v0 + 200);
  v24 = *(_QWORD *)(v0 + 224);
  if (v24)
  {
    v25 = *(_QWORD *)(v0 + 232);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 224));
    v26 = sub_CED7E0(v24, v25);
    v28 = v27;
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 200));
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 360);
    v31 = *(_QWORD *)(v0 + 368);
    v32 = *(_QWORD *)(v0 + 344);
    v33 = *(_QWORD *)(v0 + 352);
    sub_56024(v0 + 200, &qword_1500B80);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000030, 0x8000000001107E40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v30, v31, v32);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v34 = *(_QWORD *)(v0 + 360);
    v35 = *(_QWORD *)(v0 + 368);
    v36 = *(_QWORD *)(v0 + 344);
    v37 = *(_QWORD *)(v0 + 352);
    v38 = *(_QWORD *)(v0 + 336);
    v39 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v26 = String.init(localized:table:bundle:locale:comment:)(v34, 0, 0, v39, v38, 0, 0, 256);
    v28 = v40;
    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  }
  *(_QWORD *)(v0 + 472) = v28;
  *(_QWORD *)(v0 + 480) = v26;
  v41 = static MainActor.shared.getter(v29);
  *(_QWORD *)(v0 + 488) = v41;
  if (v41)
  {
    ObjectType = swift_getObjectType();
    v43 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v45 = v44;
  }
  else
  {
    v43 = 0;
    v45 = 0;
  }
  return swift_task_switch(sub_CEB390, v43, v45);
}

uint64_t sub_CEB288()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 448);
  v3 = *(_QWORD *)(*v1 + 456);
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_CEB520;
  else
    v5 = sub_CEB2F4;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 432), *(_QWORD *)(v2 + 440));
}

uint64_t sub_CEB2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 424));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  sub_56024(v0 + 160, &qword_1500B80);
  v1 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v0 + 8))(0, 0, 1);
}

uint64_t sub_CEB390()
{
  _QWORD *v0;
  uint64_t v1;
  ValueMetadata *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (ValueMetadata *)v0[59];
  v1 = v0[60];
  v3 = v0[41];
  v4 = v0[38];
  v0[7] = v0 + 35;
  v0[2] = v0;
  v0[3] = sub_CEB40C;
  v5 = swift_continuation_init(v0 + 2, 0);
  sub_CEE0E8(v5, v4, v3, v1, v2);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_CEB40C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *v0 + 280;
  v3 = *(_QWORD *)(*v0 + 488);
  v4 = *(_QWORD *)(*v0 + 472);
  *(_OWORD *)(v1 + 496) = *(_OWORD *)v2;
  *(_BYTE *)(v1 + 297) = *(_BYTE *)(v2 + 16);
  swift_release(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_CEB478, *(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440));
}

uint64_t sub_CEB478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 424));
  sub_56024(v0 + 160, &qword_1500B80);
  v1 = *(unsigned __int8 *)(v0 + 297);
  v3 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 392);
  v6 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v3, v2, v1);
}

uint64_t sub_CEB520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 424));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  sub_56024(v0 + 160, &qword_1500B80);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_CEB5C4(id a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *result;
  id v10;
  _QWORD *v11;
  uint64_t DynamicType;
  _UNKNOWN **v13;
  id v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  id v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _UNKNOWN **v25;
  id v26;
  uint64_t v27;
  void *v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t inited;
  _QWORD *v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  void *v39;
  BOOL v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  BOOL v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  unint64_t v53;
  id v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  BOOL v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  __int128 v72;
  ValueMetadata *v73;
  _UNKNOWN **v74;
  _QWORD v75[5];
  uint64_t v76;
  __int128 v77;
  ValueMetadata *v78;
  _UNKNOWN **v79;
  _QWORD *v80;
  char v81[32];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v7, v81, 0, 0);
  v8 = *v7;
  result = _swiftEmptyArrayStorage;
  if (*v7)
  {
    v80 = _swiftEmptyArrayStorage;
    if ((a2 & 2) != 0)
    {
      v78 = &type metadata for Player.ReplaceCommand;
      v79 = &protocol witness table for Player.ReplaceCommand;
      *(_QWORD *)&v77 = a1;
      *((_QWORD *)&v77 + 1) = a3;
      v11 = __swift_project_boxed_opaque_existential_1(&v77, (uint64_t)&type metadata for Player.ReplaceCommand);
      DynamicType = swift_getDynamicType(v11, &type metadata for Player.ReplaceCommand, 1);
      v13 = v79;
      v14 = a1;
      swift_retain(v8);
      v15 = sub_D01B94(DynamicType, (uint64_t)v13);
      if (v15)
      {
        v16 = (void *)v15;
        v17 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

        __swift_destroy_boxed_opaque_existential_1(&v77);
        if (v17)
        {
          v18 = v14;
          v19 = _swiftEmptyArrayStorage;
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            v19 = sub_BCCE58(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
          v21 = v19[2];
          v20 = v19[3];
          v22 = v21 + 1;
          if (v21 >= v20 >> 1)
            v19 = sub_BCCE58((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
          v78 = &type metadata for Player.ReplaceCommand;
          v79 = &protocol witness table for Player.ReplaceCommand;
          *(_QWORD *)&v77 = v18;
          *((_QWORD *)&v77 + 1) = a3;
          goto LABEL_36;
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1(&v77);

      }
    }
    else
    {
      v10 = a1;
      swift_retain(v8);
    }
    if ((a2 & 1) == 0)
    {
      if ((a2 & 4) != 0)
      {
        v78 = &type metadata for Player.InsertCommand;
        v79 = &protocol witness table for Player.InsertCommand;
        v77 = (unint64_t)a1;
        v23 = __swift_project_boxed_opaque_existential_1(&v77, (uint64_t)&type metadata for Player.InsertCommand);
        v24 = swift_getDynamicType(v23, &type metadata for Player.InsertCommand, 1);
        v25 = v79;
        v26 = a1;
        v27 = sub_D01B94(v24, (uint64_t)v25);
        if (v27)
        {
          v28 = (void *)v27;
          v29 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          __swift_destroy_boxed_opaque_existential_1(&v77);
          if (v29)
          {
            v18 = v26;
            v19 = _swiftEmptyArrayStorage;
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              v19 = sub_BCCE58(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
            v31 = v19[2];
            v30 = v19[3];
            if (v31 >= v30 >> 1)
              v19 = sub_BCCE58((_QWORD *)(v30 > 1), v31 + 1, 1, v19);
            v78 = &type metadata for Player.InsertCommand;
            v79 = &protocol witness table for Player.InsertCommand;
            v77 = (unint64_t)v18;
            v19[2] = v31 + 1;
            v32 = &v19[5 * v31];
            goto LABEL_37;
          }
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1(&v77);

        }
      }
      if ((a2 & 8) != 0)
      {
        v78 = &type metadata for Player.InsertCommand;
        v79 = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)&v77 = a1;
        *((_QWORD *)&v77 + 1) = 1;
        v47 = __swift_project_boxed_opaque_existential_1(&v77, (uint64_t)&type metadata for Player.InsertCommand);
        v48 = swift_getDynamicType(v47, &type metadata for Player.InsertCommand, 1);
        v49 = v79;
        a1 = a1;
        v50 = sub_D01B94(v48, (uint64_t)v49);
        if (v50)
        {
          v51 = (void *)v50;
          v52 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          __swift_destroy_boxed_opaque_existential_1(&v77);
          if (v52)
          {
            v18 = a1;
            v19 = _swiftEmptyArrayStorage;
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              v19 = sub_BCCE58(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
            v21 = v19[2];
            v53 = v19[3];
            v22 = v21 + 1;
            if (v21 >= v53 >> 1)
              v19 = sub_BCCE58((_QWORD *)(v53 > 1), v21 + 1, 1, v19);
            v78 = &type metadata for Player.InsertCommand;
            v79 = &protocol witness table for Player.InsertCommand;
            *(_QWORD *)&v77 = v18;
            *((_QWORD *)&v77 + 1) = 1;
LABEL_36:
            v19[2] = v22;
            v32 = &v19[5 * v21];
LABEL_37:
            sub_8B15C(&v77, (uint64_t)(v32 + 4));
            swift_release(v8);

            return v19;
          }
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1(&v77);

        }
      }
LABEL_53:
      swift_release(v8);

      return v80;
    }
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
    inited = swift_initStackObject(v33, &v76);
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    *(_QWORD *)(inited + 56) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(inited + 64) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 96) = &type metadata for Player.ChangeCommand;
    *(_QWORD *)(inited + 104) = &protocol witness table for Player.ChangeCommand;
    *(_BYTE *)(inited + 72) = 1;
    v78 = &type metadata for Player.InsertCommand;
    v79 = &protocol witness table for Player.InsertCommand;
    v77 = (unint64_t)a1;
    v35 = __swift_project_boxed_opaque_existential_1(&v77, (uint64_t)&type metadata for Player.InsertCommand);
    v36 = swift_getDynamicType(v35, &type metadata for Player.InsertCommand, 1);
    v37 = v79;
    a1 = a1;
    v38 = sub_D01B94(v36, (uint64_t)v37);
    if (v38)
    {
      v39 = (void *)v38;
      v40 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

      __swift_destroy_boxed_opaque_existential_1(&v77);
      if (v40)
      {
        v78 = &type metadata for Player.ChangeCommand;
        v79 = &protocol witness table for Player.ChangeCommand;
        LOBYTE(v77) = 1;
        v41 = __swift_project_boxed_opaque_existential_1(&v77, (uint64_t)&type metadata for Player.ChangeCommand);
        v42 = swift_getDynamicType(v41, &type metadata for Player.ChangeCommand, 1);
        v43 = sub_D01B94(v42, (uint64_t)v79);
        if (v43)
        {
          v44 = (void *)v43;
          v45 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          __swift_destroy_boxed_opaque_existential_1(&v77);
          if (v45)
          {
            sub_C1861C((_QWORD *)inited);
            v78 = &type metadata for Player.ReplaceCommand;
            v79 = &protocol witness table for Player.ReplaceCommand;
            *(_QWORD *)&v77 = a1;
            *((_QWORD *)&v77 + 1) = a3;
            v46 = a1;
            goto LABEL_45;
          }
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1(&v77);
        }
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(&v77);

    }
    swift_bridgeObjectRelease(inited);
    v78 = &type metadata for Player.ReplaceCommand;
    v79 = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)&v77 = a1;
    *((_QWORD *)&v77 + 1) = a3;
    sub_55D1C((uint64_t)&v77, (uint64_t)v75);
    v54 = a1;
    v55 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    {
      v55 = sub_BCCE58(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      v80 = v55;
    }
    v57 = v55[2];
    v56 = v55[3];
    if (v57 >= v56 >> 1)
    {
      v55 = sub_BCCE58((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
      v80 = v55;
    }
    v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v75, v75[3]);
    __chkstk_darwin(v58);
    v60 = (uint64_t *)((char *)&v72 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v61 + 16))(v60);
    v62 = *v60;
    v63 = v60[1];
    v73 = &type metadata for Player.ReplaceCommand;
    v74 = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)&v72 = v62;
    *((_QWORD *)&v72 + 1) = v63;
    v55[2] = v57 + 1;
    sub_8B15C(&v72, (uint64_t)&v55[5 * v57 + 4]);
    __swift_destroy_boxed_opaque_existential_1(v75);
LABEL_45:
    __swift_destroy_boxed_opaque_existential_1(&v77);
    v78 = &type metadata for Player.PlaybackCommand;
    v79 = &protocol witness table for Player.PlaybackCommand;
    LOBYTE(v77) = 0;
    v64 = __swift_project_boxed_opaque_existential_1(&v77, (uint64_t)&type metadata for Player.PlaybackCommand);
    v65 = swift_getDynamicType(v64, &type metadata for Player.PlaybackCommand, 1);
    v66 = sub_D01B94(v65, (uint64_t)v79);
    if (v66)
    {
      v67 = (void *)v66;
      v68 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

      __swift_destroy_boxed_opaque_existential_1(&v77);
      if (v68)
      {
        v69 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
          v69 = sub_BCCE58(0, v69[2] + 1, 1, v69);
        v71 = v69[2];
        v70 = v69[3];
        if (v71 >= v70 >> 1)
          v69 = sub_BCCE58((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
        v78 = &type metadata for Player.PlaybackCommand;
        v79 = &protocol witness table for Player.PlaybackCommand;
        LOBYTE(v77) = 0;
        v69[2] = v71 + 1;
        sub_8B15C(&v77, (uint64_t)&v69[5 * v71 + 4]);
        swift_release(v8);

        return v69;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(&v77);
    }
    goto LABEL_53;
  }
  return result;
}

_QWORD *sub_CEBD78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[4];
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v60 = (char *)a2;
  v56 = a1;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v49 - v14;
  String.LocalizationValue.init(stringLiteral:)(1885693259, 0xE400000000000000);
  v62 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v62(v13, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v16 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v57 = (_QWORD *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v16, v8, 0, 0, 256);
  v65 = v17;
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  v59 = swift_allocObject(&unk_13B8240, 24, 7);
  v19 = v56;
  *(_QWORD *)(v59 + 16) = v56;
  v20 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v20);
  v61 = v21;
  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v5, v2);
  String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
  v62(v13, v15, v9);
  v23 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v54 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v23, v8, 0, 0, 256);
  v64 = v24;
  v18(v15, v9);
  v58 = swift_allocObject(&unk_13B8268, 24, 7);
  *(_QWORD *)(v58 + 16) = v19;
  v25 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v53 = UUID.uuidString.getter(v25);
  v63 = v26;
  v22(v5, v2);
  v27 = v2;
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v28 = qword_1582D20;
  v52 = static String.cancelButtonTitle;
  v51 = swift_allocObject(&unk_13B8290, 24, 7);
  *(_QWORD *)(v51 + 16) = v19;
  swift_bridgeObjectRetain();
  v29 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v56 = UUID.uuidString.getter(v29);
  v31 = v30;
  v22(v5, v27);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000001107FC0);
  v62(v13, v15, v9);
  v32 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v62 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v32, v8, 0, 0, 256);
  v49 = v33;
  v18(v15, v9);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v35 = swift_allocObject(v34, 200, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1060460;
  v36 = v61;
  *(_QWORD *)(v35 + 32) = v55;
  *(_QWORD *)(v35 + 40) = v36;
  v37 = v65;
  *(_QWORD *)(v35 + 48) = v57;
  *(_QWORD *)(v35 + 56) = v37;
  *(_BYTE *)(v35 + 64) = 2;
  v39 = v58;
  v38 = v59;
  *(_QWORD *)(v35 + 72) = &unk_1500BE8;
  *(_QWORD *)(v35 + 80) = v38;
  v40 = v63;
  *(_QWORD *)(v35 + 88) = v53;
  *(_QWORD *)(v35 + 96) = v40;
  v41 = v64;
  *(_QWORD *)(v35 + 104) = v54;
  *(_QWORD *)(v35 + 112) = v41;
  *(_BYTE *)(v35 + 120) = 2;
  *(_QWORD *)(v35 + 128) = &unk_1500BF8;
  *(_QWORD *)(v35 + 136) = v39;
  *(_QWORD *)(v35 + 144) = v56;
  *(_QWORD *)(v35 + 152) = v31;
  *(_QWORD *)(v35 + 160) = v52;
  *(_QWORD *)(v35 + 168) = v28;
  v50 = v28;
  *(_BYTE *)(v35 + 176) = 2;
  v42 = v51;
  *(_QWORD *)(v35 + 184) = &unk_1500C08;
  *(_QWORD *)(v35 + 192) = v42;
  v43 = &v60[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator];
  v44 = *(_QWORD *)&v60[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32];
  v60 = *(char **)&v60[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24];
  v57 = __swift_project_boxed_opaque_existential_1(v43, (uint64_t)v60);
  v66[0] = 0;
  v66[1] = 0;
  v45 = v49;
  v66[2] = v62;
  v66[3] = v49;
  v67 = 0;
  v68 = v35;
  v69 = 0;
  v70 = 0;
  v62 = *(void (**)(char *, char *, uint64_t))(v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v65;
  swift_bridgeObjectRetain();
  swift_retain(v38);
  swift_bridgeObjectRetain();
  v47 = v64;
  swift_bridgeObjectRetain();
  swift_retain(v39);
  swift_bridgeObjectRetain();
  swift_retain(v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62((char *)v66, v60, v44);
  swift_release(v38);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v61);
  swift_release(v39);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v63);
  swift_release(v42);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(0);
  return sub_CF4F78(v66);
}

uint64_t sub_CEC30C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_CEC324, 0, 0);
}

uint64_t sub_CEC324()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 2;
  *(_BYTE *)(v0 + 24) = 0;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500C10);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CEC37C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_CEC394, 0, 0);
}

uint64_t sub_CEC394()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 1;
  *(_BYTE *)(v0 + 24) = 0;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500C10);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CEC3EC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_CEC404, 0, 0);
}

uint64_t sub_CEC404()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500C10);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CEC45C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v18[-v10];
  if (!a1)
    goto LABEL_6;
  if (objc_msgSend(a1, "isHomePodRoute"))
  {
    v12 = 0x8000000001108140;
    v13 = 0xD000000000000056;
    goto LABEL_8;
  }
  if (objc_msgSend(a1, "isAppleTVRoute"))
  {
    v13 = 0xD000000000000057;
    v14 = "If you AirPlay this, Apple TV will stop playing when your (device) is no longer nearby.";
  }
  else
  {
LABEL_6:
    v13 = 0xD00000000000005ALL;
    v14 = "If you AirPlay this, this device will stop playing when your (device) is no longer nearby.";
  }
  v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
LABEL_8:
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v16 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v16;
}

_QWORD *sub_CEC634(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD v59[4];
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v55 = a2;
  v57 = (_QWORD *)type metadata accessor for UUID(0);
  v3 = *(v57 - 1);
  __chkstk_darwin(v57);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v44 - v14;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000000011081A0);
  v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v16(v13, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v17 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v52 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v17, v8, 0, 0, 256);
  v54 = v18;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v15, v9);
  v53 = swift_allocObject(&unk_13B8308, 24, 7);
  *(_QWORD *)(v53 + 16) = a1;
  v20 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v51 = UUID.uuidString.getter(v20);
  v58 = v21;
  v22 = a1;
  v23 = *(void (**)(char *, _QWORD *))(v3 + 8);
  v23(v5, v57);
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v50 = static String.cancelButtonTitle;
  v56 = qword_1582D20;
  v49 = swift_allocObject(&unk_13B8330, 24, 7);
  *(_QWORD *)(v49 + 16) = v22;
  swift_bridgeObjectRetain();
  v24 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v48 = UUID.uuidString.getter(v24);
  v26 = v25;
  v23(v5, v57);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000001107DD0);
  v16(v13, v15, v9);
  v27 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v57 = (_QWORD *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v27, v8, 0, 0, 256);
  v47 = v28;
  v19(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x8000000001107DF0);
  v16(v13, v15, v9);
  v29 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v46 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v29, v8, 0, 0, 256);
  v31 = v30;
  v19(v15, v9);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v33 = swift_allocObject(v32, 144, 7);
  *(_OWORD *)(v33 + 16) = xmmword_105F890;
  v34 = v58;
  *(_QWORD *)(v33 + 32) = v51;
  *(_QWORD *)(v33 + 40) = v34;
  v35 = v53;
  v36 = v54;
  *(_QWORD *)(v33 + 48) = v52;
  *(_QWORD *)(v33 + 56) = v36;
  *(_BYTE *)(v33 + 64) = 2;
  *(_QWORD *)(v33 + 72) = &unk_1500C48;
  *(_QWORD *)(v33 + 80) = v35;
  *(_QWORD *)(v33 + 88) = v48;
  *(_QWORD *)(v33 + 96) = v26;
  v45 = v26;
  v37 = v49;
  v38 = v56;
  *(_QWORD *)(v33 + 104) = v50;
  *(_QWORD *)(v33 + 112) = v38;
  *(_BYTE *)(v33 + 120) = 2;
  *(_QWORD *)(v33 + 128) = &unk_1500C58;
  *(_QWORD *)(v33 + 136) = v37;
  v39 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v40 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  v55 = __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v55 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v39);
  v41 = v47;
  v59[0] = v57;
  v59[1] = v47;
  v59[2] = v46;
  v59[3] = v31;
  v60 = 0;
  v61 = v33;
  v62 = 0;
  v63 = 0;
  v57 = *(_QWORD **)(v40 + 8);
  swift_bridgeObjectRetain();
  v42 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v35);
  swift_bridgeObjectRetain();
  swift_retain(v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(_QWORD *, uint64_t, uint64_t))v57)(v59, v39, v40);
  swift_release(v35);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v42);
  swift_release(v37);
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v41);
  return sub_CF4F78(v59);
}

uint64_t sub_CECB24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_CECB3C, 0, 0);
}

uint64_t sub_CECB3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  **(_BYTE **)(*(_QWORD *)(v1 + 64) + 40) = 1;
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CECB7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_CECB94, 0, 0);
}

uint64_t sub_CECB94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  **(_BYTE **)(*(_QWORD *)(v1 + 64) + 40) = 0;
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_CECBD0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  void *v56;
  void *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(id *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80[4];
  char v81;
  char *v82;
  uint64_t v83;
  char v84;
  char v85[32];

  v78 = a1;
  v79 = a3;
  v4 = type metadata accessor for UUID(0);
  v76 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v77 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v71 - v14;
  v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v85, 0, 0);
  v17 = *v16;
  if (!v17)
    goto LABEL_4;
  KeyPath = swift_getKeyPath(&unk_10A2810);
  v19 = swift_getKeyPath(&unk_10A2838);
  v20 = swift_retain(v17);
  static Published.subscript.getter(v80, v20, KeyPath, v19);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v19);
  v21 = v80[0];

  if (v21)
  {
    v22 = 0;
  }
  else
  {
LABEL_4:
    v23 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
    v22 = sub_CED314((uint64_t)v79);

  }
  v24 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v25 = (char *)objc_msgSend(v24, "applicationState");

  if (!v22)
  {
LABEL_12:
    LOBYTE(v80[0]) = 0;
    v31 = v78;
    sub_5C090((uint64_t)v80, *(_QWORD *)(*(_QWORD *)(v78 + 64) + 40), &qword_1500C38);
    return (_QWORD *)swift_continuation_throwingResume(v31);
  }
  if (v25 == (_BYTE *)&dword_0 + 2)
  {
    if (qword_14F9F78 != -1)
      swift_once(&qword_14F9F78, sub_CF3E04);
    v26 = type metadata accessor for Logger(0);
    v27 = __swift_project_value_buffer(v26, (uint64_t)static Logger.playbackController);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "Music is background so bypass the requires subscription alert and use buffered AirPlay", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    goto LABEL_12;
  }
  v74 = v10;
  v75 = a2;
  v73 = v9;
  if (v79)
  {
    String.LocalizationValue.init(stringLiteral:)(0x776F4E2079616C50, 0xE800000000000000);
    v33 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v13, v15, v10);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v34 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v72 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v34, v9, 0, 0, 256);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v10);
    v37 = swift_allocObject(&unk_13B82E0, 24, 7);
    *(_QWORD *)(v37 + 16) = v78;
    v38 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v71 = UUID.uuidString.getter(v38);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v6, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v37);
    v41 = sub_BCC868(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v43 = *((_QWORD *)v41 + 2);
    v42 = *((_QWORD *)v41 + 3);
    if (v43 >= v42 >> 1)
      v41 = sub_BCC868((char *)(v42 > 1), v43 + 1, 1, v41);
    *((_QWORD *)v41 + 2) = v43 + 1;
    v44 = &v41[56 * v43];
    *((_QWORD *)v44 + 4) = v71;
    *((_QWORD *)v44 + 5) = v40;
    *((_QWORD *)v44 + 6) = v72;
    *((_QWORD *)v44 + 7) = v36;
    v44[64] = 2;
    *((_QWORD *)v44 + 9) = &unk_1500C30;
    *((_QWORD *)v44 + 10) = v37;
    swift_release(v37);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v40);
  }
  else
  {
    v41 = (char *)_swiftEmptyArrayStorage;
  }
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v45 = static String.cancelButtonTitle;
  v46 = (void *)qword_1582D20;
  v47 = swift_allocObject(&unk_13B82B8, 24, 7);
  *(_QWORD *)(v47 + 16) = v78;
  swift_bridgeObjectRetain();
  v48 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v49 = UUID.uuidString.getter(v48);
  v50 = v6;
  v52 = v51;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v50, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v47);
  if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
    v41 = sub_BCC868(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
  v54 = *((_QWORD *)v41 + 2);
  v53 = *((_QWORD *)v41 + 3);
  if (v54 >= v53 >> 1)
    v41 = sub_BCC868((char *)(v53 > 1), v54 + 1, 1, v41);
  *((_QWORD *)v41 + 2) = v54 + 1;
  v55 = &v41[56 * v54];
  *((_QWORD *)v55 + 4) = v49;
  *((_QWORD *)v55 + 5) = v52;
  *((_QWORD *)v55 + 6) = v45;
  *((_QWORD *)v55 + 7) = v46;
  v55[64] = 2;
  *((_QWORD *)v55 + 9) = &unk_1500C20;
  *((_QWORD *)v55 + 10) = v47;
  v56 = (void *)sub_CEC45C(v79);
  v58 = v57;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000005ELL, 0x8000000001108020);
  v79 = v46;
  v59 = v15;
  v60 = v77;
  v61 = v74;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v13, v59, v74);
  v78 = v52;
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v62 = qword_1581E30;
  v63 = (id)qword_1581E30;
  v64 = v73;
  static Locale.current.getter(v63);
  v65 = (void *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v62, v64, 0, 0, 256);
  v67 = v66;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
  v68 = *(_QWORD *)(v75 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v69 = *(_QWORD *)(v75 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v75 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v68);
  v80[0] = v56;
  v80[1] = v58;
  v80[2] = v65;
  v80[3] = v67;
  v81 = 0;
  v82 = v41;
  v83 = 0;
  v84 = 0;
  v70 = *(void (**)(id *, uint64_t, uint64_t))(v69 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70(v80, v68, v69);
  swift_release(v47);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v78);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v58);
  return sub_CF4F78(v80);
}

uint64_t sub_CED314(uint64_t result)
{
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  id v6;
  unsigned int v7;

  if (result)
  {
    if ((objc_msgSend((id)result, "isDeviceRoute") & 1) != 0)
    {
      return 0;
    }
    else
    {
      v2 = objc_msgSend(v1, "musicSubscriptionStatus");
      if (!v2
        || (v3 = v2,
            v4 = objc_msgSend(v2, "capabilities"),
            v5 = objc_msgSend(v3, "capabilities"),
            v3,
            result = (v5 & 2) == 0,
            (v5 & 2) == 0)
        && (v4 & 1) != 0)
      {
        v6 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v7 = objc_msgSend(v6, "isCloudLibraryEnabled");

        if (v7)
          return 0;
        else
          return 2;
      }
    }
  }
  return result;
}

uint64_t sub_CED3E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_CED400, 0, 0);
}

uint64_t sub_CED400()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 24) = 1;
  sub_5C090(v0 + 24, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500C38);
  swift_continuation_throwingResume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CED454(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_CED46C, 0, 0);
}

uint64_t sub_CED46C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 24) = 2;
  sub_5C090(v0 + 24, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500C38);
  swift_continuation_throwingResume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CED4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *boxed_opaque_existential_1Tm;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v4 = v3;
  v42 = a2;
  v53 = (_QWORD *)a3;
  v51 = type metadata accessor for GenericMusicItem(0);
  v43 = *(_QWORD *)(v51 - 8);
  v6 = __chkstk_darwin(v51);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v50 = (char *)&v40 - v8;
  v9 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  __chkstk_darwin(v9);
  v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Playlist.Entry(0);
  v46 = *(_QWORD *)(v52 - 8);
  v11 = __chkstk_darwin(v52);
  v45 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v40 - v21;
  v23 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v20);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v44 = v4;
  v26(v25, v4, a1);
  if (swift_dynamicCast(v22, v25, a1, v15, 0))
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v22, v15);
    Track.musicItem.getter((uint64_t)v53);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    v28 = v52;
    v27 = v53;
    if (swift_dynamicCast(v14, v25, a1, v52, 0))
    {
      v30 = v45;
      v29 = v46;
      v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v45, v14, v28);
      v32 = v47;
      Playlist.Entry.internalItem.getter(v31);
      Playlist.Entry.InternalItem.musicItem.getter(v27);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
    else
    {
      v34 = v50;
      v33 = v51;
      if (swift_dynamicCast(v50, v25, a1, v51, 0))
      {
        v35 = v43;
        v36 = v41;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v34, v33);
        GenericMusicItem.innerMusicItem.getter((uint64_t)v27);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v33);
      }
      else
      {
        v37 = v42;
        v27[3] = a1;
        v27[4] = v37;
        boxed_opaque_existential_1Tm = (char *)__swift_allocate_boxed_opaque_existential_1Tm(v27);
        v26(boxed_opaque_existential_1Tm, v44, a1);
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, a1);
}

uint64_t sub_CED7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD v73[6];
  _BYTE v74[24];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v58 = type metadata accessor for Station(0);
  v56[0] = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for MusicMovie(0);
  v56[1] = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TVEpisode(0);
  v59 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for Playlist(0);
  v64 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Album(0);
  v65 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v72 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)v56 - v18;
  v20 = type metadata accessor for Song(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_CED4C0(a1, a2, (uint64_t)v74);
  if (!v75)
    goto LABEL_31;
  v24 = v17;
  sub_CF6F00((uint64_t)v74, (uint64_t)v73);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
  if (swift_dynamicCast(v23, v73, v25, v20, 0))
  {
    v26 = v19;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000035, 0x8000000001107F80);
    v27 = v24;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v26, v13);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v28 = qword_1581E30;
    v29 = (id)qword_1581E30;
    v30 = v72;
    static Locale.current.getter(v29);
    v31 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v30, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    goto LABEL_20;
  }
  v32 = v71;
  if (swift_dynamicCast(v10, v73, v25, v71, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x8000000001107EC0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v33 = qword_1581E30;
    v34 = (id)qword_1581E30;
    v35 = v72;
    static Locale.current.getter(v34);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v33, v35, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v36 = v68;
    goto LABEL_19;
  }
  v10 = v69;
  v32 = v70;
  if (swift_dynamicCast(v69, v73, v25, v70, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x8000000001107F40);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v37 = qword_1581E30;
    v38 = (id)qword_1581E30;
    v39 = v72;
    static Locale.current.getter(v38);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v37, v39, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v36 = v65;
    goto LABEL_19;
  }
  v10 = v66;
  v32 = v67;
  if (swift_dynamicCast(v66, v73, v25, v67, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x8000000001107F00);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v40 = qword_1581E30;
    v41 = (id)qword_1581E30;
    v42 = v72;
    static Locale.current.getter(v41);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v40, v42, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v43 = &v79;
LABEL_18:
    v36 = *(v43 - 32);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v32);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1(v73);
    sub_56024((uint64_t)v74, &qword_1500B80);
    return v31;
  }
  v44 = v62;
  v45 = v63;
  if (!swift_dynamicCast(v62, v73, v25, v63, 0))
  {
    v44 = v60;
    v45 = v61;
    if (swift_dynamicCast(v60, v73, v25, v61, 0))
    {
      v46 = &v77;
      goto LABEL_25;
    }
    v10 = v57;
    v32 = v58;
    if (swift_dynamicCast(v57, v73, v25, v58, 0))
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x8000000001107E80);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v49 = qword_1581E30;
      v50 = (id)qword_1581E30;
      v51 = v72;
      static Locale.current.getter(v50);
      v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v49, v51, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v43 = &v76;
      goto LABEL_18;
    }
    __swift_destroy_boxed_opaque_existential_1(v73);
LABEL_31:
    sub_56024((uint64_t)v74, &qword_1500B80);
    v48 = 0xD000000000000030;
    v47 = 0x8000000001107E40;
    goto LABEL_32;
  }
  v46 = &v78;
LABEL_25:
  (*(void (**)(char *, uint64_t))(*(v46 - 32) + 8))(v44, v45);
  __swift_destroy_boxed_opaque_existential_1(v73);
  sub_56024((uint64_t)v74, &qword_1500B80);
  v47 = 0x8000000001107EC0;
  v48 = 0xD000000000000036;
LABEL_32:
  String.LocalizationValue.init(stringLiteral:)(v48, v47);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v52 = qword_1581E30;
  v53 = (id)qword_1581E30;
  v54 = v72;
  static Locale.current.getter(v53);
  v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v52, v54, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  return v31;
}

_QWORD *sub_CEE0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  uint64_t DynamicType;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  void **v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  void *v81;
  BOOL v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  ValueMetadata *v112;
  void (*v113)(id *, uint64_t, uint64_t);
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  uint64_t v119;
  void **v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  ValueMetadata *v125;
  char *v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  ValueMetadata *v138;
  _UNKNOWN **v139;
  char *v140;
  uint64_t v141;
  char v142;
  char v143[24];

  v125 = a5;
  v124 = a4;
  v132 = a2;
  v133 = a3;
  v134 = a1;
  v123 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v6 = __chkstk_darwin(v131);
  v120 = (void **)((char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v9 = (id *)((char *)&v115 - v8);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v115 - v22;
  String.LocalizationValue.init(stringLiteral:)(0x776F4E2079616C50, 0xE800000000000000);
  v117 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v117(v21, v23, v17);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v24 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v126 = v21;
  v118 = v16;
  v130 = (id)String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v24, v16, 0, 0, 256);
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v127 = v23;
  v119 = v17;
  v116 = v27;
  v27(v23, v17);
  v28 = swift_allocObject(&unk_13B81A0, 24, 7);
  *(_QWORD *)(v28 + 16) = v134;
  v29 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  v128 = *(void (**)(char *, uint64_t))(v11 + 8);
  v129 = v10;
  v128(v13, v10);
  v33 = sub_BCC868(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v35 = *((_QWORD *)v33 + 2);
  v34 = *((_QWORD *)v33 + 3);
  v36 = v13;
  if (v35 >= v34 >> 1)
    v33 = sub_BCC868((char *)(v34 > 1), v35 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v35 + 1;
  v37 = &v33[56 * v35];
  *((_QWORD *)v37 + 4) = v30;
  *((_QWORD *)v37 + 5) = v32;
  *((_QWORD *)v37 + 6) = v130;
  *((_QWORD *)v37 + 7) = v26;
  v37[64] = 2;
  *((_QWORD *)v37 + 9) = &unk_1500BA0;
  *((_QWORD *)v37 + 10) = v28;
  sub_5BDB8(v132, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v9, v131) == 1)
  {
    v38 = v122;
    v39 = v121;
    v40 = v123;
    v41 = (*(uint64_t (**)(char *, id *, uint64_t))(v122 + 32))(v121, v9, v123);
    v130 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(v41);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
  else
  {
    v130 = *v9;
  }
  v42 = v127;
  v43 = (uint64_t *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v143, 0, 0);
  v44 = *v43;
  if (*v43)
  {
    v138 = &type metadata for Player.InsertCommand;
    v139 = &protocol witness table for Player.InsertCommand;
    v45 = v130;
    v135 = v130;
    v136 = 0;
    v46 = __swift_project_boxed_opaque_existential_1(&v135, (uint64_t)&type metadata for Player.InsertCommand);
    DynamicType = swift_getDynamicType(v46, &type metadata for Player.InsertCommand, 1);
    v48 = (uint64_t)v139;
    v49 = v45;
    swift_retain(v44);
    v50 = sub_D01B94(DynamicType, v48);
    if (v50)
    {
      v51 = (void *)v50;
      v52 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v135);

      __swift_destroy_boxed_opaque_existential_1(&v135);
      swift_release(v44);
      v53 = v126;
      if (!v52)
        goto LABEL_16;
      String.LocalizationValue.init(stringLiteral:)(0x78654E2079616C50, 0xE900000000000074);
      v54 = v119;
      v117(v53, v42, v119);
      v55 = qword_1581E30;
      v56 = (id)qword_1581E30;
      v57 = v53;
      v58 = v118;
      static Locale.current.getter(v56);
      v115 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v55, v58, 0, 0, 256);
      v60 = v59;
      v116(v42, v54);
      v61 = swift_allocObject(&unk_13B8218, 24, 7);
      *(_QWORD *)(v61 + 16) = v134;
      v62 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v63 = UUID.uuidString.getter(v62);
      v65 = v64;
      v128(v13, v129);
      v67 = *((_QWORD *)v33 + 2);
      v66 = *((_QWORD *)v33 + 3);
      if (v67 >= v66 >> 1)
        v33 = sub_BCC868((char *)(v66 > 1), v67 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v67 + 1;
      v68 = &v33[56 * v67];
      *((_QWORD *)v68 + 4) = v63;
      *((_QWORD *)v68 + 5) = v65;
      *((_QWORD *)v68 + 6) = v115;
      *((_QWORD *)v68 + 7) = v60;
      v68[64] = 2;
      *((_QWORD *)v68 + 9) = &unk_1500BD0;
      *((_QWORD *)v68 + 10) = v61;
      v42 = v127;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(&v135);

      swift_release(v44);
    }
  }
  v53 = v126;
LABEL_16:
  v69 = v120;
  sub_5BDB8(v132, (uint64_t)v120, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v69, v131) == 1)
  {
    v70 = v122;
    v71 = v121;
    v72 = v123;
    v73 = (*(uint64_t (**)(char *, void **, uint64_t))(v122 + 32))(v121, v69, v123);
    v74 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v73);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    v75 = *v43;
    if (!v75)
      goto LABEL_26;
  }
  else
  {
    v74 = *v69;
    v75 = *v43;
    if (!v75)
      goto LABEL_26;
  }
  v138 = &type metadata for Player.InsertCommand;
  v139 = &protocol witness table for Player.InsertCommand;
  v135 = v74;
  v136 = 1;
  v76 = __swift_project_boxed_opaque_existential_1(&v135, (uint64_t)&type metadata for Player.InsertCommand);
  v77 = swift_getDynamicType(v76, &type metadata for Player.InsertCommand, 1);
  v78 = (uint64_t)v139;
  v79 = v74;
  swift_retain(v75);
  v80 = sub_D01B94(v77, v78);
  if (v80)
  {
    v81 = (void *)v80;
    v82 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v135);

    __swift_destroy_boxed_opaque_existential_1(&v135);
    swift_release(v75);
    if (v82)
    {
      String.LocalizationValue.init(stringLiteral:)(0x73614C2079616C50, 0xE900000000000074);
      v83 = v53;
      v84 = v53;
      v85 = v119;
      v117(v83, v42, v119);
      v86 = qword_1581E30;
      v87 = (id)qword_1581E30;
      v88 = v118;
      static Locale.current.getter(v87);
      v89 = String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v86, v88, 0, 0, 256);
      v91 = v90;
      v116(v42, v85);
      v92 = swift_allocObject(&unk_13B81F0, 24, 7);
      *(_QWORD *)(v92 + 16) = v134;
      v93 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v94 = UUID.uuidString.getter(v93);
      v96 = v95;
      v128(v13, v129);
      v98 = *((_QWORD *)v33 + 2);
      v97 = *((_QWORD *)v33 + 3);
      if (v98 >= v97 >> 1)
        v33 = sub_BCC868((char *)(v97 > 1), v98 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v98 + 1;
      v99 = &v33[56 * v98];
      *((_QWORD *)v99 + 4) = v94;
      *((_QWORD *)v99 + 5) = v96;
      *((_QWORD *)v99 + 6) = v89;
      *((_QWORD *)v99 + 7) = v91;
      v99[64] = 2;
      *((_QWORD *)v99 + 9) = &unk_1500BC0;
      *((_QWORD *)v99 + 10) = v92;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(&v135);

    swift_release(v75);
  }
LABEL_26:
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v101 = static String.cancelButtonTitle;
  v100 = qword_1582D20;
  v102 = swift_allocObject(&unk_13B81C8, 24, 7);
  *(_QWORD *)(v102 + 16) = v134;
  swift_bridgeObjectRetain();
  v103 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v104 = UUID.uuidString.getter(v103);
  v106 = v105;
  v128(v36, v129);
  v108 = *((_QWORD *)v33 + 2);
  v107 = *((_QWORD *)v33 + 3);
  if (v108 >= v107 >> 1)
    v33 = sub_BCC868((char *)(v107 > 1), v108 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v108 + 1;
  v109 = &v33[56 * v108];
  *((_QWORD *)v109 + 4) = v104;
  *((_QWORD *)v109 + 5) = v106;
  *((_QWORD *)v109 + 6) = v101;
  *((_QWORD *)v109 + 7) = v100;
  v109[64] = 2;
  *((_QWORD *)v109 + 9) = &unk_1500BB0;
  *((_QWORD *)v109 + 10) = v102;
  v110 = *(_QWORD *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v111 = *(_QWORD *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v110);
  v135 = 0;
  v136 = 0;
  v112 = v125;
  v137 = v124;
  v138 = v125;
  LOBYTE(v139) = 0;
  v140 = v33;
  v141 = 0;
  v142 = 0;
  v113 = *(void (**)(id *, uint64_t, uint64_t))(v111 + 8);
  swift_bridgeObjectRetain_n(v125, 2);
  swift_bridgeObjectRetain();
  v113(&v135, v110, v111);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v112);
  swift_bridgeObjectRelease(0);

  return sub_CF4F78(&v135);
}

uint64_t sub_CEEACC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_CEEAE4, 0, 0);
}

uint64_t sub_CEEAE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(int64x2_t *)(v0 + 16) = vdupq_n_s64(2uLL);
  *(_BYTE *)(v0 + 32) = 0;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500BD8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CEEB40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_CEEB58, 0, 0);
}

uint64_t sub_CEEB58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 16) = xmmword_1099340;
  *(_BYTE *)(v0 + 32) = 0;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500BD8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CEEBB4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_CEEBCC, 0, 0);
}

uint64_t sub_CEEBCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 16) = xmmword_1099350;
  *(_BYTE *)(v0 + 32) = 0;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500BD8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CEEC28(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_CEEC40, 0, 0);
}

uint64_t sub_CEEC40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_5C090(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1500BD8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id PlaybackController.requestedPropertySet(for:)()
{
  if (qword_14FA070 != -1)
    swift_once(&qword_14FA070, sub_D5D8DC);
  return (id)static SharedListening.Event.properties;
}

uint64_t PlaybackController.engine(_:didReceive:)(uint64_t a1, void *a2)
{
  return sub_CF4FA4(a2);
}

double PlaybackController.engine(_:didEndSharedListeningSessionWithError:)(uint64_t a1, uint64_t a2)
{
  return sub_CF5234(a2);
}

uint64_t sub_CEEDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v7;
  v4[5] = v8;
  return swift_task_switch(sub_CEEE3C, v7, v8);
}

uint64_t sub_CEEE3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v0[6] = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
  v4 = (_QWORD *)swift_task_alloc(dword_15031A4);
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_CEEEC8;
  return GroupActivitiesManager.leave(performLeaveCommand:)(0);
}

uint64_t sub_CEEEC8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_release();
  return swift_task_switch(sub_2B4254, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

_QWORD *sub_CEEF1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v41 = a1;
  v1 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000010E08E0);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v38 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000001107D70);
  v14(v10, v13, v7);
  v19 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v37 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
  v21 = v20;
  v18(v13, v7);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v23 = swift_allocObject(v22, 88, 7);
  *(_OWORD *)(v23 + 16) = xmmword_105B360;
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v14(v10, v13, v7);
  v24 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v24, v6, 0, 0, 256);
  v27 = v26;
  v18(v13, v7);
  v28 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v40);
  *(_QWORD *)(v23 + 32) = v29;
  *(_QWORD *)(v23 + 40) = v31;
  *(_QWORD *)(v23 + 48) = v25;
  *(_QWORD *)(v23 + 56) = v27;
  *(_BYTE *)(v23 + 64) = 0;
  *(_QWORD *)(v23 + 72) = 0;
  *(_QWORD *)(v23 + 80) = 0;
  v32 = *(_QWORD *)(v41 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v33 = *(_QWORD *)(v41 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v41 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v32);
  v42[0] = v38;
  v42[1] = v17;
  v42[2] = v37;
  v42[3] = v21;
  v43 = 0;
  v44 = v23;
  v45 = 0;
  v46 = 0;
  v34 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v42, v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_CF4F78(v42);
}

double PlaybackController.engine(_:didPauseForLeaseEndWithError:)(uint64_t a1, void *a2)
{
  return sub_CF54DC(a2);
}

void sub_CEF2FC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];

  v16 = &type metadata for String;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(a3 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v5 = a3 + 16 * a1;
  v6 = *(_QWORD *)(v5 + 40);
  v7 = a4 + 16;
  *(_QWORD *)&v15 = *(_QWORD *)(v5 + 32);
  *((_QWORD *)&v15 + 1) = v6;
  sub_50CA4(&v15, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v18 = a2;
  sub_C27918(v19, 0x79546E6F69746361, 0xEA00000000006570, isUniquelyReferenced_nonNull_native);
  v9 = v18;
  swift_bridgeObjectRelease();
  swift_beginAccess(v7, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_55D1C(Strong + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)&v15);

    v12 = v16;
    v13 = v17;
    __swift_project_boxed_opaque_existential_1(&v15, (uint64_t)v16);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v13 + 24))(v9, v12, v13);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(&v15);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess(v7, &v15, 0, 0);
  v14 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v7);
  if (v14)
  {
    v14[OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented] = 0;

  }
}

void sub_CEF470(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char *v34;
  double v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BOOL4 v58;

  v4 = v3;
  v56 = a1;
  v57 = a2;
  v6 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  v7 = __chkstk_darwin(v6);
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v3, "buttons", v7);
  v10 = sub_4E684(0, &qword_15009B0, ICStoreDialogResponseButton_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v36 = v11;
    else
      v36 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_3;
LABEL_21:
    *(_QWORD *)&v35 = swift_bridgeObjectRelease().n128_u64[0];
    v14 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  v12 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
  if (!v12)
    goto LABEL_21;
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  v48 = v4;
  v49 = a3;
  v13 = 0;
  v50 = v11 & 0xC000000000000001;
  v14 = (char *)_swiftEmptyArrayStorage;
  v51 = v12;
  v52 = v11;
  do
  {
    if (v50)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    else
      v15 = *(id *)(v11 + 8 * v13 + 32);
    v16 = v15;
    v58 = objc_msgSend(v15, "type") != (char *)&dword_0 + 2;
    v17 = objc_msgSend(v16, "title");
    if (v17)
    {
      v18 = v17;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v21 = v20;

    }
    else
    {
      v19 = 0;
      v21 = 0xE000000000000000;
    }
    v22 = (_QWORD *)swift_allocObject(&unk_13B7F28, 48, 7);
    v24 = v56;
    v23 = v57;
    v22[2] = v16;
    v22[3] = v24;
    v22[4] = v23;
    v22[5] = v13;
    v25 = v16;
    sub_A9DEC(v24, v23);
    v26 = v53;
    v27 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v28 = UUID.uuidString.getter(v27);
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v55);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_BCC868(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v32 = *((_QWORD *)v14 + 2);
    v31 = *((_QWORD *)v14 + 3);
    if (v32 >= v31 >> 1)
      v14 = sub_BCC868((char *)(v31 > 1), v32 + 1, 1, v14);
    ++v13;
    v33 = 2 * v58;
    *((_QWORD *)v14 + 2) = v32 + 1;
    v34 = &v14[56 * v32];
    *((_QWORD *)v34 + 4) = v28;
    *((_QWORD *)v34 + 5) = v30;
    *((_QWORD *)v34 + 6) = v19;
    *((_QWORD *)v34 + 7) = v21;
    v34[64] = v33;
    *((_QWORD *)v34 + 9) = &unk_15009C0;
    *((_QWORD *)v34 + 10) = v22;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v11 = v52;
  }
  while (v51 != v13);
  *(_QWORD *)&v35 = swift_bridgeObjectRelease().n128_u64[0];
  v4 = v48;
  a3 = v49;
LABEL_22:
  v37 = objc_msgSend(v4, "message", v35);
  if (v37)
  {
    v38 = v37;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v41 = v40;

  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  v42 = objc_msgSend(v4, "explanation");
  if (v42)
  {
    v43 = v42;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  *(_QWORD *)a3 = v39;
  *(_QWORD *)(a3 + 8) = v41;
  *(_QWORD *)(a3 + 16) = v44;
  *(_QWORD *)(a3 + 24) = v46;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = v14;
  *(_QWORD *)(a3 + 48) = 0;
}

_QWORD *sub_CEF7FC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_OWORD *, uint64_t, uint64_t);
  _OWORD v13[3];
  uint64_t v14;
  char v15;
  _OWORD v16[3];
  uint64_t v17;

  if ((*((_BYTE *)result + OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented) & 1) == 0)
  {
    v6 = result;
    *((_BYTE *)result + OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented) = 1;
    v7 = swift_allocObject(&unk_13B7D98, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v8 = (_QWORD *)swift_allocObject(&unk_13B80E8, 40, 7);
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_CEF470((uint64_t)sub_CF6BB4, (uint64_t)v8, (uint64_t)v16);
    swift_release();
    swift_release();
    v9 = (_QWORD *)((char *)v6 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v10 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v11 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v13[0] = v16[0];
    v13[1] = v16[1];
    v13[2] = v16[2];
    v14 = v17;
    v15 = 0;
    v12 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v11 + 8);
    sub_8074BC((uint64_t)v16);
    v12(v13, v10, v11);
    sub_281298(v16);
    return sub_CF4F78(v13);
  }
  return result;
}

double PlaybackController.engine(_:didFailToPlayFirstItem:withError:)(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  _QWORD *v6;
  id v7;
  id v8;
  double result;

  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v6 = (_QWORD *)swift_allocObject(&unk_13B7940, 40, 7);
  v6[2] = a3;
  v6[3] = v3;
  v6[4] = a2;
  swift_errorRetain(a3);
  v7 = a2;
  v8 = v3;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CF597C, (uint64_t)v6);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_CEFA2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char **v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  id v39;
  Class isa;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  void *v72;
  id v73;
  __n128 v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  void *v78;
  id v79;
  __n128 v80;
  int v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  _BYTE *v90;
  id v91;
  char *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  id v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  _QWORD *v113;
  id v114;
  _BYTE *v115;
  char *v116;
  uint64_t *v117;
  void *v118;
  uint64_t v119;
  unsigned __int8 *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  char *v131;
  _BYTE *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(_QWORD, _QWORD, _QWORD);
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  char v148;
  void *v149;
  id v150;
  void *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  id v159;
  id v160;
  id v161;
  void *v162;
  id v163;
  uint64_t v164;
  id v165;
  void *v166;
  char *v167;
  id v168;
  id v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD v185[2];
  uint64_t v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  id v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  uint64_t v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  unsigned __int8 *v205;
  _BYTE *v206;
  id v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  char *v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD v217[4];
  unsigned __int8 v218;
  uint64_t v219;
  void *v220;
  _QWORD v221[4];
  unsigned __int8 v222;
  void *v223;
  void *v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  _DWORD v232[5];

  v196 = a3;
  v201 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500980);
  __chkstk_darwin(v4);
  v6 = (char *)v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCA08);
  __chkstk_darwin(v7);
  v9 = (char *)v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v10 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v10, (uint64_t)static Logger.playbackController);
  swift_errorRetain(a1);
  v11 = swift_errorRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v207 = v9;
  if (v14)
  {
    v15 = swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v208 = v16;
    *(_DWORD *)v15 = 136446210;
    v225 = (void *)a1;
    swift_errorRetain(a1);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v18 = (char *)String.init<A>(describing:)(&v225, v17);
    *(_QWORD *)(v15 + 4) = sub_BA95EC(v18, v19, (uint64_t *)&v208);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v12, v13, "didFailToPlayFirstItem with error=%{public}s", (uint8_t *)v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  if ((*(_BYTE *)(v201 + OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented) & 1) == 0)
  {
    v186 = OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented;
    v20 = &selRef_sharedPreferences;
    v192 = (id)_convertErrorToNSError(_:)(a1);
    v21 = objc_msgSend(v192, "userInfo");
    v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    if (*(_QWORD *)(v22 + 16) && (v23 = sub_21BAD0(0x676F6C616964, 0xE600000000000000), (v24 & 1) != 0))
    {
      sub_95094(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease();
    v204 = a1;
    if (*((_QWORD *)&v209 + 1))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE260);
      if ((swift_dynamicCast(&v225, &v208, (char *)&type metadata for Any + 8, v25, 6) & 1) != 0)
      {
        v26 = (uint64_t)v225;
        v27 = swift_bridgeObjectRetain_n(v225, 2);
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc(12, -1);
          v31 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v208 = v31;
          *(_DWORD *)v30 = 136446210;
          v32 = swift_bridgeObjectRetain();
          v33 = v6;
          v34 = Dictionary.description.getter(v32, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
          v36 = v35;
          swift_bridgeObjectRelease();
          v37 = (char *)v34;
          v6 = v33;
          *(_QWORD *)(v30 + 4) = sub_BA95EC(v37, v36, (uint64_t *)&v208);
          swift_bridgeObjectRelease_n(v26, 2);
          a1 = v204;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v28, v29, "Found an error dialog=%{public}s", (uint8_t *)v30, 0xCu);
          swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
          v38 = v31;
          v20 = &selRef_sharedPreferences;
          swift_slowDealloc(v38, -1, -1);
          swift_slowDealloc(v30, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v26, 2);
        }
        v39 = objc_allocWithZone((Class)ICStoreDialogResponse);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        v41 = objc_msgSend(v39, "initWithResponseDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

        sub_CEF470(0, 0, (uint64_t)v217);
        v199 = v217[3];
        v200 = v217[1];
        v193 = v218;
        v194 = v217[0];
        v197 = v217[2];
        v198 = (id)v219;
        v195 = v220;

        goto LABEL_19;
      }
    }
    else
    {
      sub_56024((uint64_t)&v208, &qword_14FF2A0);
    }
    v193 = 0;
    v194 = 0;
    v199 = 0;
    v200 = 0;
    v197 = 0;
    v198 = 0;
    v195 = 0;
LABEL_19:
    v42 = objc_msgSend(v192, v20[157]);
    v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v42, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    if (*(_QWORD *)(v43 + 16) && (v46 = sub_21BAD0(v44, v45), (v47 & 1) != 0))
    {
      sub_95094(*(_QWORD *)(v43 + 56) + 32 * v46, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v202 = v6;
    if (*((_QWORD *)&v209 + 1))
    {
      v48 = sub_4E684(0, (unint64_t *)&qword_14FF320, NSError_ptr);
      if (swift_dynamicCast(&v225, &v208, (char *)&type metadata for Any + 8, v48, 6))
      {
        v49 = v225;
        goto LABEL_28;
      }
    }
    else
    {
      sub_56024((uint64_t)&v208, &qword_14FF2A0);
    }
    v49 = 0;
LABEL_28:
    v50 = swift_allocObject(&unk_13B7E38, 17, 7);
    *(_BYTE *)(v50 + 16) = 0;
    v51 = (unsigned __int8 *)(v50 + 16);
    v52 = swift_allocObject(&unk_13B7E38, 17, 7);
    *(_BYTE *)(v52 + 16) = 0;
    v206 = (_BYTE *)(v52 + 16);
    v53 = swift_allocObject(&unk_13B7E38, 17, 7);
    *(_BYTE *)(v53 + 16) = 0;
    v203 = (char *)(v53 + 16);
    sub_CF0F44(a1, v52, v53, v50);
    if (v49)
    {
      v54 = v49;
      sub_CF0F44((uint64_t)v54, v52, v53, v50);

    }
    v190 = v50;
    v191 = v49;
    v188 = v52;
    v189 = v53;
    if (!v196)
    {
      v61 = 0;
      goto LABEL_54;
    }
    v205 = (unsigned __int8 *)(v50 + 16);
    v55 = v196;
    v56 = objc_msgSend(v55, "stationStringID");
    if (v56)
    {
      v57 = v56;
      v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v60 = v59;

    }
    else
    {
      v58 = 0;
      v60 = 0;
    }
    v62 = (unint64_t)objc_msgSend(v55, "stationID");
    v63 = objc_msgSend(v55, "stationHash");
    if (v63)
    {
      v64 = v63;
      v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
      v61 = v66;

      if (v60)
        goto LABEL_37;
    }
    else
    {
      v65 = 0;
      v61 = 0;
      if (v60)
      {
LABEL_37:
        v67 = HIBYTE(v60) & 0xF;
        if ((v60 & 0x2000000000000000) == 0)
          v67 = v58 & 0xFFFFFFFFFFFFLL;
        if (v67 | v62)
        {
LABEL_47:
          sub_4E684(0, &qword_1503210, MPModelRadioStationKind_ptr);
          v69 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "identityKind");
          __chkstk_darwin(v69);
          v185[-6] = v58;
          v185[-5] = v60;
          v185[-4] = v62;
          v185[-3] = v65;
          v185[-2] = v61;
          v70 = objc_allocWithZone((Class)MPIdentifierSet);
          v71 = swift_allocObject(&unk_13B7E88, 32, 7);
          *(_QWORD *)(v71 + 16) = sub_CF66FC;
          *(_QWORD *)(v71 + 24) = &v185[-8];
          v210 = sub_103BD8;
          v211 = (char *)v71;
          *(_QWORD *)&v208 = _NSConcreteStackBlock;
          *((_QWORD *)&v208 + 1) = 1107296256;
          *(_QWORD *)&v209 = sub_23E9F0;
          *((_QWORD *)&v209 + 1) = &block_descriptor_83_1;
          v72 = _Block_copy(&v208);
          v73 = objc_msgSend(v70, "initWithModelKind:block:", v69, v72, swift_retain().n128_f64[0]);

          _Block_release(v72);
          v74 = swift_release();
          LOBYTE(v69) = swift_isEscapingClosureAtFileLocation(v71, "", 0, 0, 0, 1, v74);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v69 & 1) != 0)
          {
            __break(1u);
          }
          else
          {
            __chkstk_darwin(v75);
            v185[-2] = v55;
            v76 = objc_allocWithZone((Class)MPModelRadioStation);
            v77 = swift_allocObject(&unk_13B7ED8, 32, 7);
            *(_QWORD *)(v77 + 16) = sub_CF6718;
            *(_QWORD *)(v77 + 24) = &v185[-4];
            v210 = sub_103BD8;
            v211 = (char *)v77;
            *(_QWORD *)&v208 = _NSConcreteStackBlock;
            *((_QWORD *)&v208 + 1) = 1107296256;
            *(_QWORD *)&v209 = sub_23E9F0;
            *((_QWORD *)&v209 + 1) = &block_descriptor_89_4;
            v78 = _Block_copy(&v208);
            v79 = objc_msgSend(v76, "initWithIdentifiers:block:", v73, v78, swift_retain().n128_f64[0]);

            _Block_release(v78);
            v80 = swift_release();
            LOBYTE(v76) = swift_isEscapingClosureAtFileLocation(v77, "", 0, 0, 0, 1, v80);

            swift_release();
            if ((v76 & 1) == 0)
            {
              v50 = v190;
              v49 = v191;
              v52 = v188;
              v53 = v189;
              v61 = (unint64_t)v79;
LABEL_53:
              v51 = v205;
LABEL_54:
              swift_beginAccess(v51, &v216, 0, 0);
              v81 = *v51;
              v82 = (void *)v61;
              v187 = (void *)v61;
              if (v81 == 1)
              {
                if (v61)
                {
                  sub_55D1C(v201 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)&v225);
                  v83 = (void *)v61;
                  v84 = v228;
                  v85 = v229;
                  __swift_project_boxed_opaque_existential_1(&v225, v228);
                  v86 = type metadata accessor for Station(0);
                  v87 = v83;
                  v88 = v207;
                  dispatch thunk of LegacyModelObjectConvertible.init(_:)(v87);
                  v89 = *(_QWORD *)(v86 - 8);
                  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v89 + 48))(v88, 1, v86) == 1)
                  {
                    sub_56024((uint64_t)v88, &qword_14FCA08);
                    v208 = 0u;
                    v209 = 0u;
                    v210 = 0;
                  }
                  else
                  {
                    *((_QWORD *)&v209 + 1) = v86;
                    v210 = &protocol witness table for Station;
                    v113 = __swift_allocate_boxed_opaque_existential_1Tm(&v208);
                    (*(void (**)(_QWORD *, id, uint64_t))(v89 + 32))(v113, v88, v86);
                  }
                  v95 = v194;
                  v99 = v195;
                  v213 = 2;
                  (*(void (**)(__int128 *, uint64_t, uint64_t))(v85 + 8))(&v208, v84, v85);
                  sub_CF4F78(&v208);
                  __swift_destroy_boxed_opaque_existential_1(&v225);
LABEL_68:
                  v104 = v198;
                  v49 = v191;
LABEL_69:
                  if (!v104)
                  {
                    v198 = 0;
                    if (v49)
                      goto LABEL_81;
                    goto LABEL_92;
                  }
                  v114 = v99;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v198 = v104;
                  v100 = (uint64_t)v104;
LABEL_71:
                  v115 = *(_BYTE **)(v100 + 16);
                  v195 = v99;
                  if (v115)
                  {
                    v194 = v95;
                    swift_bridgeObjectRetain();
                    v116 = (char *)_swiftEmptyArrayStorage;
                    v185[1] = v100;
                    v117 = (uint64_t *)(v100 + 80);
                    do
                    {
                      v206 = v115;
                      v118 = (void *)*(v117 - 6);
                      v119 = *(v117 - 5);
                      v120 = (unsigned __int8 *)*(v117 - 4);
                      v202 = (char *)*(v117 - 3);
                      v203 = v116;
                      v121 = *((unsigned __int8 *)v117 - 16);
                      v123 = *(v117 - 1);
                      v122 = *v117;
                      v124 = swift_allocObject(&unk_13B7D98, 24, 7);
                      swift_unknownObjectWeakInit(v124 + 16);
                      v125 = swift_allocObject(&unk_13B7E60, 80, 7);
                      v207 = v118;
                      *(_QWORD *)(v125 + 16) = v118;
                      *(_QWORD *)(v125 + 24) = v119;
                      v205 = v120;
                      *(_QWORD *)(v125 + 32) = v120;
                      v126 = v123;
                      v127 = v202;
                      *(_QWORD *)(v125 + 40) = v202;
                      LODWORD(v204) = v121;
                      *(_BYTE *)(v125 + 48) = v121;
                      *(_DWORD *)(v125 + 49) = v232[0];
                      *(_DWORD *)(v125 + 52) = *(_DWORD *)((char *)v232 + 3);
                      *(_QWORD *)(v125 + 56) = v126;
                      *(_QWORD *)(v125 + 64) = v122;
                      *(_QWORD *)(v125 + 72) = v124;
                      v128 = v203;
                      swift_bridgeObjectRetain_n(v119, 2);
                      swift_bridgeObjectRetain_n(v127, 2);
                      sub_A9DEC(v126, v122);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      sub_A9DEC(v126, v122);
                      if ((swift_isUniquelyReferenced_nonNull_native(v128) & 1) == 0)
                        v128 = sub_BCC868(0, *((_QWORD *)v128 + 2) + 1, 1, v128);
                      v130 = *((_QWORD *)v128 + 2);
                      v129 = *((_QWORD *)v128 + 3);
                      v131 = v128;
                      v132 = v206;
                      if (v130 >= v129 >> 1)
                        v131 = sub_BCC868((char *)(v129 > 1), v130 + 1, 1, v128);
                      v117 += 7;
                      *((_QWORD *)v131 + 2) = v130 + 1;
                      v116 = v131;
                      v133 = &v131[56 * v130];
                      *((_QWORD *)v133 + 4) = v207;
                      *((_QWORD *)v133 + 5) = v119;
                      *((_QWORD *)v133 + 6) = v205;
                      *((_QWORD *)v133 + 7) = v127;
                      v133[64] = v204;
                      *((_QWORD *)v133 + 9) = &unk_1500998;
                      *((_QWORD *)v133 + 10) = v125;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_5C198(v126, v122);
                      v115 = v132 - 1;
                    }
                    while (v115);
                    swift_bridgeObjectRelease();
                    v95 = v194;
                  }
                  else
                  {
                    v116 = (char *)_swiftEmptyArrayStorage;
                  }
                  v134 = v201;
                  *(_BYTE *)(v201 + v186) = 1;
                  v135 = *(_QWORD *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
                  v136 = *(_QWORD *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
                  __swift_project_boxed_opaque_existential_1((_QWORD *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v135);
                  v138 = v199;
                  v137 = v200;
                  *(_QWORD *)&v208 = v95;
                  *((_QWORD *)&v208 + 1) = v200;
                  *(_QWORD *)&v209 = v197;
                  *((_QWORD *)&v209 + 1) = v199;
                  LOBYTE(v210) = 0;
                  v211 = v116;
                  v212 = 0;
                  v213 = 0;
                  v139 = *(void (**)(_QWORD, _QWORD, _QWORD))(v136 + 8);
                  swift_bridgeObjectRetain_n(v199, 2);
                  swift_bridgeObjectRetain_n(v137, 2);
                  swift_bridgeObjectRetain();
                  v139(&v208, v135, v136);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n(v138, 2);
                  swift_bridgeObjectRelease_n(v137, 2);
                  v99 = v195;

                  sub_CF4F78(&v208);
                  v49 = v191;
                  if (v191)
                  {
LABEL_81:
                    v140 = objc_msgSend(v49, "domain");
                    v141 = static String._unconditionallyBridgeFromObjectiveC(_:)(v140);
                    v143 = v142;

                    v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
                    if (v143)
                    {
                      if (v141 == v144 && v143 == v145)
                      {
                        v146 = swift_bridgeObjectRelease_n(v143, 2).n128_u64[0];
                        v147 = (uint64_t)v198;
LABEL_86:
                        if (objc_msgSend(v49, "code", *(double *)&v146) == stru_20.segname)
                        {
                          v149 = v187;
                          if (!v196)
                          {
                            v154 = 0;
                            v156 = 0;
                            v152 = 0;
                            v153 = v193;
LABEL_113:
                            sub_CF2BD8(v154, v156, 0, 0);

                            swift_bridgeObjectRelease();
                            sub_6A5858(v95, v200, v197, v199, v153, (uint64_t)v198, v99);
                            swift_release();
                            swift_release();

                            v49 = v191;
                            goto LABEL_95;
                          }
                          v150 = objc_msgSend(v196, "modelGenericObject");
                          if (v150)
                          {
                            v151 = v150;
                            v152 = objc_msgSend(v150, "flattenedGenericObject");

                            v153 = v193;
                            if (v152)
                            {
                              v154 = MPModelObject.bestIdentifier(for:)(2, 1u);
                              v156 = v155;
                            }
                            else
                            {
                              v154 = 0;
                              v156 = 0;
                            }
                            goto LABEL_113;
                          }
LABEL_131:
                          __break(1u);
                          return;
                        }

                        sub_6A5858(v95, v200, v197, v199, v193, v147, v99);
                        swift_release();
                        swift_release();
                        v149 = v187;
LABEL_95:

                        swift_release();
                        return;
                      }
                      v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v141, v143, v144, v145, 0);
                      swift_bridgeObjectRelease();
                      v146 = swift_bridgeObjectRelease().n128_u64[0];
                      v147 = (uint64_t)v198;
                      if ((v148 & 1) != 0)
                        goto LABEL_86;

                      v157 = v193;
LABEL_94:
                      v149 = v187;
                      sub_6A5858(v95, v200, v197, v199, v157, v147, v99);
                      swift_release();
                      swift_release();
                      goto LABEL_95;
                    }
LABEL_93:

                    swift_bridgeObjectRelease();
                    v157 = v193;
                    v147 = (uint64_t)v198;
                    goto LABEL_94;
                  }
LABEL_92:
                  static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
                  goto LABEL_93;
                }
                v82 = 0;
              }
              v90 = v206;
              swift_beginAccess(v206, &v215, 0, 0);
              if ((*v90 & 1) != 0)
              {
                v91 = (id)v61;
                sub_C6A33C(v82, &v225);
LABEL_63:
                v95 = (uint64_t)v225;
                v94 = v226;
                v96 = v227;
                v97 = v228;
                v98 = v229;
                v100 = v230;
                v99 = v231;

                sub_6A5858(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
                sub_8074BC((uint64_t)&v225);
                v199 = v97;
                v200 = v94;
                v197 = v96;
                v198 = (id)v100;
                v193 = v98;
                goto LABEL_71;
              }
              v92 = v203;
              swift_beginAccess(v203, &v214, 0, 0);
              if (*v92 == 1)
              {
                v93 = (id)v61;
                sub_C6AEFC((uint64_t)v82, (uint64_t *)&v225);
                goto LABEL_63;
              }
              v205 = v51;
              v207 = (id)v61;

              v101 = v204;
              swift_errorRetain(v204);
              v102 = v196;
              v103 = (void *)_convertErrorToNSError(_:)(v101);
              swift_errorRelease(v101);
              v104 = objc_msgSend((id)objc_opt_self(MPUPlaybackAlertController), "playbackAlertControllerForItem:contentType:error:dismissalBlock:", v102, 0, v103, 0);

              v105 = v102;
              if (v104)
              {
                sub_CF1294((uint64_t)v221);
                v106 = v221[0];
                v107 = v221[1];
                v108 = v221[2];
                v109 = v221[3];
                v110 = v222;
                v112 = v223;
                v111 = v224;
                sub_6A5858(v194, v200, v197, v199, v193, (uint64_t)v198, v195);

                v193 = v110;
                v194 = v106;
                v199 = v109;
                v200 = v107;
                v197 = v108;
                v52 = v188;
                v53 = v189;
                v50 = v190;
                v49 = v191;
                v104 = v112;
                v101 = v204;
                v195 = v111;
              }
              else
              {
                sub_6A5858(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
                v193 = 0;
                v194 = 0;
                v199 = 0;
                v200 = 0;
                v197 = 0;
                v195 = 0;
              }
              sub_CF1638(v101, v50, v53, v52);
              if (v49)
              {
                v158 = v104;
                v159 = v49;
                sub_CF1638((uint64_t)v159, v50, v53, v52);

                v104 = v158;
              }
              v95 = v194;
              v99 = v195;
              if (!v196)
                goto LABEL_69;
              v198 = v104;
              v160 = v105;
              v161 = objc_msgSend(v160, "modelGenericObject");
              if (v161)
              {
                v162 = v161;
                v163 = objc_msgSend(v161, "innermostModelObject");

                v164 = (uint64_t)v202;
                if ((*v205 & 1) != 0)
                {
                  v165 = objc_msgSend(v160, "modelPlayEvent");
                  if (!v165)
                  {
LABEL_122:
                    sub_55D1C(v201 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)&v225);
                    v179 = v228;
                    v180 = v229;
                    __swift_project_boxed_opaque_existential_1(&v225, v228);
                    v181 = v163;
                    GenericMusicItem.init(_:)(v181);
                    v182 = type metadata accessor for GenericMusicItem(0);
                    v183 = *(_QWORD *)(v182 - 8);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48))(v164, 1, v182) == 1)
                    {
                      sub_56024(v164, (uint64_t *)&unk_1500980);
                      v208 = 0u;
                      v209 = 0u;
                      v210 = 0;
                    }
                    else
                    {
                      *((_QWORD *)&v209 + 1) = v182;
                      v210 = (void *)sub_4DD24((unint64_t *)&unk_15009A0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                      v184 = __swift_allocate_boxed_opaque_existential_1Tm(&v208);
                      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v183 + 32))(v184, v164, v182);
                    }
                    v213 = 2;
                    (*(void (**)(__int128 *, uint64_t, uint64_t))(v180 + 8))(&v208, v179, v180);

                    sub_CF4F78(&v208);
                    __swift_destroy_boxed_opaque_existential_1(&v225);
                    v95 = v194;
                    v99 = v195;
                    goto LABEL_68;
                  }
                  v166 = v165;
                  v167 = (char *)objc_msgSend(v165, "itemType");
                  if (v167 == (_BYTE *)&dword_0 + 3)
                  {
                    v168 = objc_msgSend(v166, "playlist");
                  }
                  else
                  {
                    if (v167 != (_BYTE *)&dword_0 + 1)
                    {

                      goto LABEL_122;
                    }
                    v168 = objc_msgSend(v166, "album");
                  }
                  v178 = v168;

                  if (v178)
                  {
                    v163 = v178;
                    goto LABEL_122;
                  }

LABEL_127:
                  v95 = v194;
                  v99 = v195;
                  v104 = v198;
                  goto LABEL_69;
                }
                if (*v206 == 1)
                {
                  v169 = v163;
                  sub_C6A33C(v163, &v225);
                }
                else
                {
                  if (*v203 != 1)
                  {

                    goto LABEL_127;
                  }
                  v170 = v163;
                  sub_C6AEFC((uint64_t)v163, (uint64_t *)&v225);
                }
                v172 = (uint64_t)v225;
                v171 = v226;
                v174 = v227;
                v173 = v228;
                v175 = v229;
                v100 = v230;
                v176 = v231;

                sub_6A5858(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
                v177 = v176;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v95 = v172;
                v199 = v173;
                v200 = v171;
                v197 = v174;
                v198 = (id)v100;
                v193 = v175;
                v99 = v176;
                goto LABEL_71;
              }
LABEL_130:

              sub_6A5858(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
              __break(1u);
              goto LABEL_131;
            }
          }
          __break(1u);
          goto LABEL_130;
        }
LABEL_43:
        if (v61)
        {
          v68 = HIBYTE(v61) & 0xF;
          if ((v61 & 0x2000000000000000) == 0)
            v68 = v65 & 0xFFFFFFFFFFFFLL;
          if (v68)
            goto LABEL_47;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v61 = 0;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        v53 = v189;
        v50 = v190;
        v52 = v188;
        goto LABEL_53;
      }
    }
    if (v62)
      goto LABEL_47;
    goto LABEL_43;
  }
}

void sub_CF0F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  uint64_t Category;
  _BYTE *v10;
  _BYTE v11[24];

  v7 = (void *)_convertErrorToNSError(_:)(a1);
  v8 = (void *)_convertErrorToNSError(_:)(v7);
  Category = MPCRadioPlaybackErrorGetCategory();

  switch(Category)
  {
    case 3:
      v10 = (_BYTE *)(a4 + 16);
      break;
    case 2:
      v10 = (_BYTE *)(a3 + 16);
      break;
    case 1:
      v10 = (_BYTE *)(a2 + 16);
      break;
    default:
      return;
  }
  swift_beginAccess(v10, v11, 1, 0);
  *v10 = 1;
}

void sub_CF0FE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  _QWORD v16[6];

  v12 = (_QWORD *)swift_allocObject(&unk_13B7FD0, 56, 7);
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v13 = swift_allocObject(&unk_13B7FF8, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_CF6998;
  *(_QWORD *)(v13 + 24) = v12;
  v16[4] = sub_129E54;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_9AA80C;
  v16[3] = &block_descriptor_112_0;
  v14 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  objc_msgSend(a1, "setRadioIdentifiersWithBlock:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v13, "", 128, 848, 61, 1, v15);
  swift_release();
  swift_release();
  if ((a1 & 1) != 0)
    __break(1u);
}

void sub_CF1140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v9;
  NSString v10;
  id v11;

  if (a3)
    v9 = String._bridgeToObjectiveC()();
  else
    v9 = 0;
  objc_msgSend(a1, "setStationStringID:", v9);

  objc_msgSend(a1, "setStationID:", a4);
  if (a6)
    v10 = String._bridgeToObjectiveC()();
  else
    v10 = 0;
  v11 = v10;
  objc_msgSend(a1, "setStationHash:");

}

void sub_CF11FC(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v4 = objc_opt_self(MPModelRadioStation);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
  v6 = a1;
  v7 = objc_msgSend(a2, "stationName");
  objc_msgSend(v5, "setName:", v7);

}

void sub_CF1294(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t (*v15)();
  uint64_t v16;
  id v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  double v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  v5 = __chkstk_darwin(v4);
  v50 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "actions", v5);
  v8 = sub_4E684(0, &qword_1500A58, UIAlertAction_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_24:
    *(_QWORD *)&v33 = swift_bridgeObjectRelease().n128_u64[0];
    v54 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  v10 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
  if (!v10)
    goto LABEL_24;
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  v45 = v2;
  v46 = a1;
  v11 = 0;
  v12 = (char *)_swiftEmptyArrayStorage;
  v47 = v9 & 0xC000000000000001;
  v48 = v10;
  v49 = v9;
  do
  {
    if (v47)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
    else
      v13 = *(id *)(v9 + 8 * v11 + 32);
    v14 = v13;
    v15 = (uint64_t (*)())objc_msgSend(v13, "handler", v45, v46);
    if (v15)
    {
      v16 = swift_allocObject(&unk_13B8070, 24, 7);
      *(_QWORD *)(v16 + 16) = v15;
      v15 = sub_50BEC;
    }
    else
    {
      v16 = 0;
    }
    v17 = objc_msgSend(v14, "title");
    if (v17)
    {
      v18 = v17;
      v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

    }
    else
    {
      v53 = 0;
      v20 = 0xE000000000000000;
    }
    v21 = (_QWORD *)swift_allocObject(&unk_13B8048, 40, 7);
    v21[2] = v15;
    v21[3] = v16;
    v21[4] = v14;
    sub_A9DEC((uint64_t)v15, v16);
    v22 = v14;
    v23 = v50;
    v24 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v25 = UUID.uuidString.getter(v24);
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v52);
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_BCC868(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v29 = *((_QWORD *)v12 + 2);
    v28 = *((_QWORD *)v12 + 3);
    v54 = v12;
    if (v29 >= v28 >> 1)
      v54 = sub_BCC868((char *)(v28 > 1), v29 + 1, 1, v54);
    ++v11;
    v31 = v53;
    v30 = v54;
    *((_QWORD *)v54 + 2) = v29 + 1;
    v12 = v30;
    v32 = &v30[56 * v29];
    *((_QWORD *)v32 + 4) = v25;
    *((_QWORD *)v32 + 5) = v27;
    *((_QWORD *)v32 + 6) = v31;
    *((_QWORD *)v32 + 7) = v20;
    v32[64] = 2;
    *((_QWORD *)v32 + 9) = &unk_1500A68;
    *((_QWORD *)v32 + 10) = v21;
    sub_5C198((uint64_t)v15, v16);

    v9 = v49;
  }
  while (v48 != v11);
  *(_QWORD *)&v33 = swift_bridgeObjectRelease().n128_u64[0];
  v2 = v45;
  a1 = v46;
LABEL_25:
  v35 = objc_msgSend(v2, "title", v33);
  if (v35)
  {
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = objc_msgSend(v2, "message");
  if (v40)
  {
    v41 = v40;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v44 = v43;

  }
  else
  {
    v42 = 0;
    v44 = 0;
  }
  *(_QWORD *)a1 = v37;
  *(_QWORD *)(a1 + 8) = v39;
  *(_QWORD *)(a1 + 16) = v42;
  *(_QWORD *)(a1 + 24) = v44;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v54;
  *(_QWORD *)(a1 + 48) = 0;
}

void sub_CF1638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD v13[3];
  char *v14;

  v13[0] = a1;
  swift_errorRetain(a1);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  type metadata accessor for MPCError(0);
  v9 = v8;
  if (swift_dynamicCast(&v14, v13, v7, v8, 6))
  {
    v10 = v14;
    v13[0] = v14;
    v11 = sub_4DD24(&qword_14FAE00, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_109B5A8);
    _BridgedStoredNSError.code.getter(v9, v11);

    if (v14 == (_BYTE *)&dword_8 + 2)
    {
      v12 = (_BYTE *)(a4 + 16);
    }
    else if (v14 == (_BYTE *)&dword_8 + 3)
    {
      v12 = (_BYTE *)(a3 + 16);
    }
    else
    {
      if (v14 != (_BYTE *)&dword_10 + 1)
        return;
      v12 = (_BYTE *)(a2 + 16);
    }
    swift_beginAccess(v12, v13, 1, 0);
    *v12 = 1;
  }
}

uint64_t sub_CF173C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_CF1798, 0, 0);
}

uint64_t sub_CF1798()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *Strong;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(__int128 **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80) + 16;
  v4 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = swift_allocObject(&unk_13B8098, 88, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  *(_QWORD *)(v5 + 80) = *((_QWORD *)v2 + 6);
  *(_OWORD *)(v5 + 48) = v7;
  *(_OWORD *)(v5 + 64) = v8;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v0 + 40) = *v2;
  *(_OWORD *)(v0 + 56) = v2[1];
  v9 = *((_QWORD *)v2 + 5);
  v10 = *((_QWORD *)v2 + 6);
  sub_1391E0(v0 + 40);
  sub_1391E0(v0 + 56);
  sub_A9DEC(v9, v10);
  sub_C51EF8(v1, (uint64_t)&unk_1500A78, v5);
  swift_release();
  swift_beginAccess(v3, v0 + 16, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented] = 0;

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF18C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_CF18E0, 0, 0);
}

uint64_t sub_CF18E0()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 24) + 40);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_CF1964;
    return v4();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_CF1964()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_CF19B8, 0, 0);
}

uint64_t sub_CF19B8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double PlaybackController.engine(_:requiresAuthorizationToPlay:reason:authorizationHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  _QWORD *v10;
  id v11;
  id v12;
  double result;

  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v10 = (_QWORD *)swift_allocObject(&unk_13B7968, 56, 7);
  v10[2] = a3;
  v10[3] = v5;
  v10[4] = a2;
  v10[5] = a4;
  v10[6] = a5;
  v11 = v5;
  v12 = a2;
  swift_retain();
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_CF598C, (uint64_t)v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_CF1B58(uint64_t a1, uint64_t a2, void *a3, void (*a4)(_QWORD, _QWORD), void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void (*v41)(_QWORD, _QWORD);
  void *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t *, uint64_t, uint64_t);
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  id v88;
  id v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(_QWORD *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(_QWORD, _QWORD);
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  id v123;
  _QWORD v124[3];
  uint64_t v125;
  uint64_t v126;
  void (*v127)(_QWORD, _QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(_QWORD, _QWORD);
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;

  v123 = a3;
  v9 = type metadata accessor for UUID(0);
  v120 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v118 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v106 - v17;
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v19 = type metadata accessor for Logger(0);
  v20 = __swift_project_value_buffer(v19, (uint64_t)static Logger.playbackController);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter(v21);
  v23 = os_log_type_enabled(v21, v22);
  v122 = v9;
  v121 = v11;
  v116 = v14;
  if (v23)
  {
    v24 = swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v125 = v25;
    *(_DWORD *)v24 = 136446210;
    v124[0] = a1;
    type metadata accessor for MPCExplicitContentAuthorizationReason(0);
    v27 = (char *)String.init<A>(describing:)(v124, v26);
    *(_QWORD *)(v24 + 4) = sub_BA95EC(v27, v28, &v125);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, v22, "requiresAuthorizationToPlay with reason=%{public}s", (uint8_t *)v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  if (a1 == 2)
  {
    v29 = objc_msgSend(v123, "modelGenericObject");
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v29, "flattenedGenericObject");

      if (v31)
      {
        v32 = MPModelObject.bestIdentifier(for:)(2, 1u);
        v34 = v33;
      }
      else
      {
        v32 = 0;
        v34 = 0;
      }
      sub_CF2BD8(v32, v34, a4, (uint64_t)a5);

      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    return;
  }
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v35 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10A2978);
  v37 = swift_getKeyPath(&unk_10A29A0);
  static Published.subscript.getter(&v125, v35, KeyPath, v37);
  swift_release();
  swift_release();
  v38 = v132;
  v39 = v134;
  v40 = v135;
  v114 = v128;
  v113 = v129;
  v112 = v136;
  v111 = v137;
  if (!v132 || !v134)
  {
    v110 = a2;
    v107 = a4;
    v108 = v134;
    v115 = v132;
    v109 = v135;
    v123 = a5;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    v48 = v116;
    v49 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
    v50 = v117;
    v51 = v119;
    v49(v117, v18, v119);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v52 = qword_1581E30;
    v53 = (id)qword_1581E30;
    v54 = v118;
    static Locale.current.getter(v53);
    v106 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v52, v54, 0, 0, 256);
    v56 = v55;
    v57 = *(void (**)(char *, uint64_t))(v48 + 8);
    v57(v18, v51);
    v58 = v121;
    v59 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v60 = UUID.uuidString.getter(v59);
    v62 = v61;
    (*(void (**)(_QWORD *, uint64_t))(v120 + 8))(v58, v122);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x80000000010D3110);
    v49(v50, v18, v51);
    v63 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v64 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v63, v54, 0, 0, 256);
    v66 = v65;
    v57(v18, v51);
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
    v68 = swift_allocObject(v67, 88, 7);
    *(_OWORD *)(v68 + 16) = xmmword_105B360;
    *(_QWORD *)(v68 + 32) = v60;
    *(_QWORD *)(v68 + 40) = v62;
    *(_QWORD *)(v68 + 48) = v106;
    *(_QWORD *)(v68 + 56) = v56;
    *(_BYTE *)(v68 + 64) = 2;
    *(_QWORD *)(v68 + 72) = 0;
    *(_QWORD *)(v68 + 80) = 0;
    v69 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v70 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v69);
    v125 = v64;
    v126 = v66;
    v127 = 0;
    v128 = 0;
    LOBYTE(v129) = 0;
    v130 = v68;
    v131 = 0;
    LOBYTE(v132) = 0;
    v71 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v70 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71(&v125, v69, v70);
    sub_CF4F78(&v125);
    v107(0, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v106 = v131;
  v41 = v133;
  v42 = (void *)objc_opt_self(NSUserDefaults);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43 = objc_msgSend(v42, "standardUserDefaults");
  v124[0] = 0xD000000000000012;
  v124[1] = 0x80000000010C2D20;
  v44 = sub_B9DEC0();
  NSUserDefaults.subscript.getter((uint64_t)v124, (uint64_t)&type metadata for String, v44, (uint64_t)&v125);

  v107 = v41;
  if (!v128)
  {
    sub_56024((uint64_t)&v125, &qword_14FF2A0);
    goto LABEL_22;
  }
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  if (!swift_dynamicCast(v124, &v125, (char *)&type metadata for Any + 8, v45, 6))
  {
LABEL_22:
    v47 = v123;
    v46 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  v46 = (_QWORD *)v124[0];
  v47 = v123;
LABEL_23:
  v72 = v47;
  v73 = objc_msgSend(v47, "cloudUniversalLibraryID");
  if (v73)
  {
    v108 = v39;

    v74 = objc_msgSend(v72, "cloudUniversalLibraryID");
    if (!v74)
      goto LABEL_34;
    v75 = v74;
    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
    v78 = v77;

    LOBYTE(v75) = sub_68B47C(v76, v78, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v108;
    if ((v75 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v79 = swift_bridgeObjectRelease();
      ((void (*)(uint64_t, _QWORD, __n128))a4)(1, 0, v79);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v115 = v38;
  v109 = v40;
  v110 = a2;
  String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
  v80 = v116;
  v81 = v117;
  v82 = v119;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v117, v18, v119);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v83 = qword_1581E30;
  v84 = (id)qword_1581E30;
  v85 = v118;
  static Locale.current.getter(v84);
  v117 = (char *)String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v83, v85, 0, 0, 256);
  v118 = v86;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v18, v82);
  v87 = (_QWORD *)swift_allocObject(&unk_13B7DE8, 40, 7);
  v88 = v123;
  v87[2] = v123;
  v87[3] = a4;
  v87[4] = a5;
  v89 = v88;
  swift_retain();
  v90 = v121;
  v91 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v116 = UUID.uuidString.getter(v91);
  v119 = v92;
  v93 = *(void (**)(_QWORD *, uint64_t))(v120 + 8);
  v94 = v122;
  v93(v90, v122);
  if (qword_14FA560 != -1)
    swift_once(&qword_14FA560, sub_D73CDC);
  v120 = static String.cancelButtonTitle;
  v123 = (id)qword_1582D20;
  v95 = swift_allocObject(&unk_13B7E10, 32, 7);
  *(_QWORD *)(v95 + 16) = a4;
  *(_QWORD *)(v95 + 24) = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  v96 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v97 = UUID.uuidString.getter(v96);
  v99 = v98;
  v93(v90, v94);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v101 = swift_allocObject(v100, 144, 7);
  *(_OWORD *)(v101 + 16) = xmmword_105F890;
  v102 = v119;
  *(_QWORD *)(v101 + 32) = v116;
  *(_QWORD *)(v101 + 40) = v102;
  v103 = v118;
  *(_QWORD *)(v101 + 48) = v117;
  *(_QWORD *)(v101 + 56) = v103;
  *(_BYTE *)(v101 + 64) = 2;
  *(_QWORD *)(v101 + 72) = &unk_1500960;
  *(_QWORD *)(v101 + 80) = v87;
  *(_QWORD *)(v101 + 88) = v97;
  *(_QWORD *)(v101 + 96) = v99;
  v104 = v123;
  *(_QWORD *)(v101 + 104) = v120;
  *(_QWORD *)(v101 + 112) = v104;
  *(_BYTE *)(v101 + 120) = 2;
  *(_QWORD *)(v101 + 128) = &unk_1500970;
  *(_QWORD *)(v101 + 136) = v95;
  v105 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  v122 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v121 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v122);
  v125 = v106;
  v126 = v115;
  v127 = v107;
  v128 = v39;
  LOBYTE(v129) = 0;
  v130 = v101;
  v131 = 0;
  LOBYTE(v132) = 0;
  v120 = *(_QWORD *)(v105 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(uint64_t *, uint64_t, uint64_t))v120)(&v125, v122, v105);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n(v39, 2);
  swift_bridgeObjectRelease_n(v115, 2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_CF4F78(&v125);
}

uint64_t sub_CF27D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch(sub_CF27EC, 0, 0);
}

uint64_t sub_CF27EC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  id v15;
  char *v17;
  _QWORD v18[4];

  v1 = objc_msgSend(*(id *)(v0 + 64), "cloudUniversalLibraryID");
  if (!v1)
    goto LABEL_14;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults");
  *(_QWORD *)(v0 + 48) = 0xD000000000000012;
  *(_QWORD *)(v0 + 56) = 0x80000000010C2D20;
  v8 = sub_B9DEC0();
  NSUserDefaults.subscript.getter(v0 + 48, (uint64_t)&type metadata for String, v8, v0 + 16);

  if (!*(_QWORD *)(v0 + 40))
  {
    sub_56024(v0 + 16, &qword_14FF2A0);
    goto LABEL_6;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  if (!swift_dynamicCast(v0 + 48, v0 + 16, (char *)&type metadata for Any + 8, v9, 6))
  {
LABEL_6:
    v10 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_7;
  }
  v10 = *(char **)(v0 + 48);
LABEL_7:
  v17 = v10;
  v11 = *((_QWORD *)v10 + 2);
  if (v11 >= 0x3E8)
    sub_BCF104(0, v11 - 999);
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_BCC9AC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v13 = *((_QWORD *)v10 + 2);
  v12 = *((_QWORD *)v10 + 3);
  if (v13 >= v12 >> 1)
    v10 = sub_BCC9AC((char *)(v12 > 1), v13 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v13 + 1;
  v14 = &v10[16 * v13];
  *((_QWORD *)v14 + 4) = v3;
  *((_QWORD *)v14 + 5) = v5;
  v15 = objc_msgSend(v6, "standardUserDefaults", v17);
  v18[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
  v18[0] = v10;
  *(_QWORD *)(v0 + 16) = 0xD000000000000012;
  *(_QWORD *)(v0 + 24) = 0x80000000010C2D20;
  NSUserDefaults.subscript.setter((uint64_t)v18, v0 + 16, (uint64_t)&type metadata for String, v8);

LABEL_14:
  (*(void (**)(uint64_t, _QWORD))(v0 + 72))(1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF2A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_CF2A40, 0, 0);
}

uint64_t sub_CF2A40()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_CF2B80(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_CF2BD8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  const char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t inited;
  unint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(void *, char);
  uint64_t v79;
  uint64_t v80;
  void (**v81)(void *, char);
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_QWORD, _QWORD);
  char v101[64];
  uint64_t v102[7];
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;

  v5 = v4;
  v98 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  __chkstk_darwin(v9);
  v94 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v93 = (char *)&v91 - v19;
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v99 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v99, (uint64_t)static Logger.playbackController);
  v20 = swift_bridgeObjectRetain_n(a2, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  v23 = os_log_type_enabled(v21, v22);
  v100 = a3;
  v96 = v14;
  v97 = v5;
  v95 = v15;
  v92 = v17;
  if (v23)
  {
    v24 = swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v102[0] = v25;
    *(_DWORD *)v24 = 136446210;
    swift_bridgeObjectRetain();
    v26 = (char *)Optional<A>.description.getter(a1, a2);
    v28 = v27;
    swift_bridgeObjectRelease(a2);
    *(_QWORD *)(v24 + 4) = sub_BA95EC(v26, v28, v102);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v28);
    _os_log_impl(&dword_0, v21, v22, "Presenting Age Verification with model identifier=%{public}s", (uint8_t *)v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v29 = a1;
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v30 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10A2978);
  v32 = swift_getKeyPath(&unk_10A29A0);
  static Published.subscript.getter(v102, v30, KeyPath, v32);
  swift_release(KeyPath);
  swift_release(v32);
  v33 = BYTE1(v102[0]);
  v34 = v102[3];
  v35 = v102[4];
  v36 = v103;
  v37 = v104;
  v38 = v105;
  v39 = v106;
  swift_bridgeObjectRelease(v107);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v37);

  if (v33 != 1)
  {
    v50 = *(_QWORD *)(v97 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v51 = *(_QWORD *)(v97 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v97 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v50);
    sub_C6B3C0((uint64_t)v102);
    LOBYTE(v103) = 0;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v51 + 8))(v102, v50, v51);
    sub_CF4F78(v102);
    if (qword_14F9F80 != -1)
      swift_once(&qword_14F9F80, sub_CF3EA0);
    v52 = __swift_project_value_buffer(v99, (uint64_t)qword_15007C0);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.error.getter(v53);
    if (!os_log_type_enabled(v53, v54))
      goto LABEL_26;
    v55 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v55 = 0;
    v56 = "Device is offline. Age Verification cannot proceed.¬†Displaying fallback alert instead.";
    goto LABEL_25;
  }
  if (qword_14FA648 != -1)
    swift_once(&qword_14FA648, sub_D779E0);
  v40 = static ExplicitRestrictionsController.shared;
  v41 = swift_beginAccess(static ExplicitRestrictionsController.shared + 24, v102, 0, 0);
  v42 = *(void **)(v40 + 24);
  v43 = v96;
  v44 = v95;
  if (!v42)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v95 + 56))(v13, 1, 1, v96, v41);
    goto LABEL_21;
  }
  v45 = v29;
  v46 = objc_msgSend(v42, "verificationURL", v41.n128_f64[0]);
  if (v46)
  {
    v47 = v46;
    v48 = (uint64_t)v94;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v46);

    v49 = 0;
  }
  else
  {
    v49 = 1;
    v48 = (uint64_t)v94;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v48, v49, 1, v43);
  sub_5C090(v48, (uint64_t)v13, &qword_14FAC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v43) == 1)
  {
LABEL_21:
    sub_56024((uint64_t)v13, &qword_14FAC20);
    if (qword_14F9F80 != -1)
      swift_once(&qword_14F9F80, sub_CF3EA0);
    v57 = __swift_project_value_buffer(v99, (uint64_t)qword_15007C0);
    v53 = Logger.logObject.getter(v57);
    v54 = static os_log_type_t.error.getter(v53);
    if (!os_log_type_enabled(v53, v54))
      goto LABEL_26;
    v55 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v55 = 0;
    v56 = "accountVerificationURL is missing. Age Verification cannot proceed.";
LABEL_25:
    _os_log_impl(&dword_0, v53, v54, v56, v55, 2u);
    swift_slowDealloc(v55, -1, -1);
LABEL_26:

    if (v100)
      v100(0, 0);
    return;
  }
  v58 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  v59 = v93;
  v58(v93, v13, v43);
  v60 = qword_14F9F80;
  if (a2)
  {
    swift_bridgeObjectRetain();
    if (v60 != -1)
      swift_once(&qword_14F9F80, sub_CF3EA0);
    v61 = __swift_project_value_buffer(v99, (uint64_t)qword_15007C0);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_0, v62, v63, "modelObjectIdentifier parameters found for age verification context", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
    }

    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDBD8);
    inited = swift_initStackObject(v65, v101);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 32) = 0x64496D616461;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 48) = v45;
    *(_QWORD *)(inited + 56) = a2;
    v67 = sub_C262C0(inited);
    v68 = (uint64_t)v92;
    URL.parametrize(_:)(v67, (uint64_t)v92);
    v69 = swift_bridgeObjectRelease(v67);
    (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v59, v43, v69);
    v58(v59, (char *)v68, v43);
  }
  else
  {
    if (qword_14F9F80 != -1)
      swift_once(&qword_14F9F80, sub_CF3EA0);
    v70 = __swift_project_value_buffer(v99, (uint64_t)qword_15007C0);
    v71 = Logger.logObject.getter(v70);
    v72 = static os_log_type_t.error.getter(v71);
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v73 = 0;
      _os_log_impl(&dword_0, v71, v72, "modelObjectIdentifier parameters missing for age verification context", v73, 2u);
      swift_slowDealloc(v73, -1, -1);
    }

  }
  v74 = v59;
  v75 = (char *)objc_msgSend(objc_allocWithZone((Class)_s22AgeVerificationWrapperCMa()), "init");
  v76 = swift_allocObject(&unk_13B7D98, 24, 7);
  v77 = v97;
  swift_unknownObjectWeakInit(v76 + 16, v97);
  v78 = (void (*)(void *, char))swift_allocObject(&unk_13B7DC0, 40, 7);
  v79 = (uint64_t)v100;
  v80 = v98;
  *((_QWORD *)v78 + 2) = v100;
  *((_QWORD *)v78 + 3) = v80;
  *((_QWORD *)v78 + 4) = v76;
  v81 = (void (**)(void *, char))&v75[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion];
  v82 = *(_QWORD *)&v75[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion];
  v83 = *(_QWORD *)&v75[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion
                      + 8];
  *v81 = sub_CF6530;
  v81[1] = v78;
  sub_A9DEC(v79, v80);
  sub_5C198(v82, v83);
  v84 = *(void **)(v77 + OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper);
  *(_QWORD *)(v77 + OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper) = v75;
  v85 = v75;

  v86 = (_QWORD *)(v77 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v87 = *(_QWORD *)(v77 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v88 = *(_QWORD *)(v77 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  __swift_project_boxed_opaque_existential_1(v86, v87);
  v89 = *(void (**)(char *, char *, uint64_t, uint64_t))(v88 + 16);
  v90 = v85;
  v89(v74, v90, v87, v88);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v74, v43);
}

void sub_CF350C(id a1, char a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  char *v12;
  void *v13;
  uint64_t v14;
  char v15[24];

  if (a3)
    a3(a2 & 1, 0);
  if (a1)
  {
    v7 = a5 + 16;
    swift_beginAccess(a5 + 16, v15, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = *(void **)(Strong + OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper);
      v11 = v10;

      if (v10)
      {

        if (a1 == v11)
        {
          swift_beginAccess(v7, &v14, 0, 0);
          v12 = (char *)swift_unknownObjectWeakLoadStrong(v7);
          if (v12)
          {
            v13 = *(void **)&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper];
            *(_QWORD *)&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper] = 0;

          }
        }
      }
    }
  }
}

double PlaybackController.displayAgeVerification(modelObject:completion:)(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double result;

  if (a1)
  {
    a1 = MPModelObject.bestIdentifier(for:)(2, 1u);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  sub_CF2BD8(a1, v6, a2, a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t PlaybackController.displayAgeVerification(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v5;
  v2[7] = v6;
  return swift_task_switch(sub_CF36BC, v5, v6);
}

uint64_t sub_CF36BC()
{
  __n128 *v0;
  uint64_t v1;
  int8x16_t *v2;
  __n128 **v3;
  __n128 v5;

  v5 = v0[1];
  v1 = static MainActor.shared.getter(v5);
  v0[4].n128_u64[0] = v1;
  v2 = (int8x16_t *)swift_task_alloc(32);
  v0[4].n128_u64[1] = (unint64_t)v2;
  v2[1] = vextq_s8((int8x16_t)v5, (int8x16_t)v5, 8uLL);
  v3 = (__n128 **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[5].n128_u64[0] = (unint64_t)v3;
  *v3 = v0;
  v3[1] = (__n128 *)sub_CF377C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, v1, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x8000000001107BB0, sub_CF5990, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_CF377C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_CF37F0;
  }
  else
  {
    v7 = v2[9];
    swift_release();
    swift_task_dealloc(v7);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_BCB100;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_CF37F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_CF3838(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED60);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = a3[3];
  v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  v10 = dispatch thunk of MusicItem.id.getter(v8, v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_13B7D70, v14 + v7, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_CF2BD8(v10, v12, (void (*)(_QWORD, _QWORD))sub_CF6480, v15);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void PlaybackController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.PlaybackController", 28, "init()", 6, 0);
  __break(1u);
}

id sub_CF3A28()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  void (*v3)(_QWORD, _QWORD, __n128);
  uint64_t v4;
  __n128 v5;
  objc_super v7;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(void (**)(_QWORD, _QWORD, __n128))&v0[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion];
  if (v3)
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion
                      + 8];
    v5 = swift_retain();
    v3(0, 0, v5);
    sub_5C198((uint64_t)v3, v4);
  }
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "dealloc");
}

double sub_CF3B50(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v8;
  id v9;
  id v10;
  double result;

  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v8 = (_QWORD *)swift_allocObject(&unk_13B7CD0, 48, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain();
  v9 = a4;
  v10 = a1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_CF6350, (uint64_t)v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_CF3BEC(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v1 = (_QWORD *)(result
                + OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion);
  v2 = *(_QWORD *)(result
                 + OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion);
  if (v2)
  {
    v3 = (void *)result;
    v4 = v1[1];
    *v1 = 0;
    v1[1] = 0;
    swift_retain();
    sub_5C198(v2, v4);
    v5 = objc_msgSend((id)objc_opt_self(ICAgeVerificationManager), "defaultManager");
    v6 = (_QWORD *)swift_allocObject(&unk_13B7C80, 40, 7);
    v6[2] = v2;
    v6[3] = v4;
    v6[4] = v3;
    v9[4] = sub_CF62F8;
    v9[5] = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_5FEBC;
    v9[3] = &block_descriptor_306;
    v7 = _Block_copy(v9);
    sub_A9DEC(v2, v4);
    v8 = v3;
    objc_msgSend(v5, "getAgeVerificationStateWithCompletion:", v7, swift_release().n128_f64[0]);
    _Block_release(v7);

    return sub_5C198(v2, v4);
  }
  return result;
}

uint64_t sub_CF3E04()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.playbackController);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.playbackController);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0xD000000000000012, 0x80000000010A28A0);
}

uint64_t static Logger.playbackController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C7B520(&qword_14F9F78, (uint64_t)static Logger.playbackController, (uint64_t)sub_CF3E04, a1);
}

uint64_t sub_CF3EA0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_15007C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_15007C0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x6669726556656741, 0xEF6E6F6974616369);
}

uint64_t sub_CF3F20()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.siriIntents);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.siriIntents);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x65746E4969726953, 0xEB0000000073746ELL);
}

uint64_t static Logger.siriIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_C7B520(&qword_14F9F88, (uint64_t)static Logger.siriIntents, (uint64_t)sub_CF3F20, a1);
}

uint64_t sub_CF3FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_CF3FD4, 0, 0);
}

uint64_t sub_CF3FD4()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  if (v1)
    v1(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF400C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v4[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[9] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v4[10] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[11] = swift_task_alloc(v10);
  v4[12] = swift_task_alloc(v10);
  return swift_task_switch(sub_CF40CC, 0, 0);
}

uint64_t sub_CF40CC()
{
  uint64_t v0;
  id v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  __n128 v20;
  void (*v21)(_QWORD, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;

  v1 = objc_msgSend(*(id *)(v0 + 16), "action");
  v2 = (char *)objc_msgSend(v1, "type");

  if (v2 == (_BYTE *)&dword_0 + 2)
  {
    v3 = objc_msgSend(*(id *)(v0 + 16), "action");
    v4 = objc_msgSend(v3, "URLString");

    if (v4)
    {
      v5 = *(_QWORD *)(v0 + 64);
      v6 = *(_QWORD *)(v0 + 72);
      v7 = *(_QWORD *)(v0 + 56);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v10 = v9;

      URL.init(string:)(v8, v10);
      v11 = swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v7, 1, v5, v11) != 1)
      {
        v27 = *(_QWORD *)(v0 + 88);
        v26 = *(_QWORD *)(v0 + 96);
        v29 = *(_QWORD *)(v0 + 72);
        v28 = *(_QWORD *)(v0 + 80);
        v30 = *(_QWORD *)(v0 + 64);
        v31 = *(_QWORD *)(v0 + 48);
        v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
        v32(v26, *(_QWORD *)(v0 + 56), v30);
        v33 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 1, 1, v33);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v26, v30);
        v34 = *(unsigned __int8 *)(v29 + 80);
        v35 = (v34 + 32) & ~v34;
        v36 = swift_allocObject(&unk_13B7F78, v35 + v28, v34 | 7);
        *(_QWORD *)(v36 + 16) = 0;
        *(_QWORD *)(v36 + 24) = 0;
        v32(v36 + v35, v27, v30);
        sub_C51F14(v31, (uint64_t)&unk_15009E8, v36);
        v37 = swift_release();
        (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v26, v30, v37);
        v21 = *(void (**)(_QWORD, __n128))(v0 + 24);
        if (!v21)
          goto LABEL_7;
        goto LABEL_6;
      }
      sub_56024(*(_QWORD *)(v0 + 56), &qword_14FAC20);
    }
  }
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(void **)(v0 + 16);
  v14 = objc_msgSend(objc_allocWithZone((Class)ICStoreDialogResponseHandler), "init");
  v15 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v16 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:", v15);

  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject(&unk_13B7F50, 56, 7);
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v14;
  v18[5] = v13;
  v18[6] = v16;
  v19 = v13;
  sub_C52080(v12, (uint64_t)&unk_15009D8, (uint64_t)v18);
  v20 = swift_release();
  v21 = *(void (**)(_QWORD, __n128))(v0 + 24);
  if (v21)
LABEL_6:
    v21(*(_QWORD *)(v0 + 40), v20);
LABEL_7:
  v22 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 48);
  v23 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF43A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a1;
  *(_QWORD *)(v4 + 128) = a4;
  return swift_task_switch(sub_CF43BC, 0, 0);
}

uint64_t sub_CF43BC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 136) = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_CF4434, v3, v4);
}

uint64_t sub_CF4434()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = objc_msgSend(*(id *)(v0 + 136), "sharedApplication", swift_release().n128_f64[0]);
  return swift_task_switch(sub_CF448C, 0, 0);
}

uint64_t sub_CF448C@<X0>(NSURL *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;

  v2 = v1;
  v3 = v1 + 2;
  v4 = (void *)v2[19];
  URL._bridgeToObjectiveC()(a1);
  v6 = v5;
  v2[20] = v5;
  sub_C26514((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_4DD24((unint64_t *)&qword_15009F0, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_109B6B8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v2[21] = isa;
  swift_bridgeObjectRelease();
  v2[7] = v2 + 22;
  v2[2] = v2;
  v2[3] = sub_CF45B0;
  v8 = swift_continuation_init(v3, 0);
  v2[10] = _NSConcreteStackBlock;
  v2 += 10;
  v2[1] = 0x40000000;
  v2[2] = sub_3F1980;
  v2[3] = &block_descriptor_102_2;
  v2[4] = v8;
  objc_msgSend(v4, "openURL:options:completionHandler:", v6, isa, v2);
  return swift_continuation_await(v3);
}

uint64_t sub_CF45B0()
{
  return swift_task_switch(sub_CF45FC, 0, 0);
}

uint64_t sub_CF45FC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  **(_BYTE **)(v0 + 120) = *(_BYTE *)(v0 + 176);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF4644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a1;
  v6[16] = a4;
  return swift_task_switch(sub_CF4660, 0, 0);
}

uint64_t sub_CF4660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void **)(v0 + 128);
  v4 = objc_msgSend(*(id *)(v0 + 136), "action");
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 56) = v0 + 168;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_CF472C;
  v5 = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_CF481C;
  v6[3] = &block_descriptor_103_1;
  v6[4] = v5;
  objc_msgSend(v3, "handleButtonAction:usingRequestContext:withCompletionHandler:", v4, v2, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_CF472C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 160) = v1;
  if (v1)
    v2 = sub_CF47C8;
  else
    v2 = sub_CF478C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_CF478C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 168);

  **(_BYTE **)(v0 + 120) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF47C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v1 + 152);
  v3 = *(_QWORD *)(v1 + 160);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  **(_BYTE **)(v1 + 120) = 2;
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_CF481C(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume(v3);
  }
}

void sub_CF489C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A2810);
  v5 = swift_getKeyPath(&unk_10A2838);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

void sub_CF4918(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_CFBFDC(v1);
}

void sub_CF4948(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_CFBFDC(v1);
}

unint64_t sub_CF4974()
{
  unint64_t result;

  result = qword_15007F8;
  if (!qword_15007F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.PlaybackError, &type metadata for Player.PlaybackError);
    atomic_store(result, &qword_15007F8);
  }
  return result;
}

unint64_t sub_CF49B8()
{
  unint64_t result;

  result = qword_1500808;
  if (!qword_1500808)
  {
    result = swift_getWitnessTable(&unk_10A2938, &type metadata for PlaybackController.CommandError);
    atomic_store(result, (unint64_t *)&qword_1500808);
  }
  return result;
}

uint64_t sub_CF49FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a5);
  }
  return result;
}

void sub_CF4A2C(id a1, char a2)
{
  if (a2 == 2)
  {
LABEL_4:
    sub_CF4A50(a1);
    return;
  }
  if (a2 != 1)
  {
    if (a2)
      return;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease(a1);
}

void sub_CF4A50(id a1)
{
  if ((unint64_t)a1 >= 5)

}

id sub_CF4A60(id result, char a2)
{
  if (a2 == 2)
    return sub_CF4A84(result);
  if (a2 != 1)
  {
    if (a2)
      return result;
    return sub_CF4A84(result);
  }
  return (id)swift_bridgeObjectRetain();
}

id sub_CF4A84(id result)
{
  if ((unint64_t)result >= 5)
    return result;
  return result;
}

uint64_t sub_CF4A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v7[10] = a6;
  v7[11] = v6;
  v7[8] = a4;
  v7[9] = a5;
  v7[6] = a2;
  v7[7] = a3;
  v7[5] = a1;
  v8 = type metadata accessor for MainActor(0);
  v7[12] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[13] = v10;
  v7[14] = v11;
  return swift_task_switch(sub_CF4B0C, v10, v11);
}

uint64_t sub_CF4B0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31[2];

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 120) = *v1;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v21 = sub_CF49B8();
    v22 = swift_allocError(&type metadata for PlaybackController.CommandError, v21, 0, 0);
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 3;
    swift_willThrow(v22);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v24);
  }
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(void **)(v0 + 40);
  swift_retain(v2);
  v6 = sub_CEB5C4(v5, v4, v3);
  *(_QWORD *)(v0 + 128) = v6;
  if (!v6[2])
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v25 = sub_CF49B8();
    v26 = swift_allocError(&type metadata for PlaybackController.CommandError, v25, 0, 0);
    *(_QWORD *)v27 = v6;
    *(_BYTE *)(v27 + 8) = 1;
    swift_willThrow(v26);
    v24 = swift_release(v2);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v24);
  }
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v8, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v7, 2);
  v9 = swift_bridgeObjectRetain_n(v6, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(char **)(v0 + 56);
  if (v12)
  {
    v14 = *(char **)(v0 + 48);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v31[0] = v16;
    *(_DWORD *)v15 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 4) = sub_BA95EC(v14, v13, v31);
    swift_bridgeObjectRelease_n(v13, 3);
    *(_WORD *)(v15 + 12) = 2082;
    swift_bridgeObjectRetain();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
    v18 = (char *)Array.description.getter(v6, v17);
    v20 = v19;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v15 + 14) = sub_BA95EC(v18, v20, v31);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease_n(v6, 2);
    _os_log_impl(&dword_0, v10, v11, "Intent id=%{public}s) ‚Äî Performing the following commands: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 56), 2);
    swift_bridgeObjectRelease_n(v6, 2);
  }

  v29 = *(_QWORD *)(v0 + 40);
  v30 = (_QWORD *)swift_task_alloc(dword_1500874);
  *(_QWORD *)(v0 + 136) = v30;
  *v30 = v0;
  v30[1] = sub_CF4E40;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)v6, 0x10000, *(_QWORD *)(v0 + 80), v29);
}

uint64_t sub_CF4E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[13];
    v7 = v4[14];
    v8 = sub_CF4F04;
  }
  else
  {
    v9 = v4[16];
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v9);
    v6 = v4[13];
    v7 = v4[14];
    v8 = sub_CF4EC4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_CF4EC4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 96));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_CF4F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(v2);
  v3 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_CF4F4C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_errorRelease(result);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

_QWORD *sub_CF4F78(_QWORD *a1)
{
  destroy for PresentationKind(a1);
  return a1;
}

uint64_t sub_CF4FA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  char *v23;
  char *v24;
  _BYTE v25[56];
  _BYTE v26[56];
  uint64_t v27[8];

  v2 = v1;
  if (qword_14FA088 != -1)
    swift_once(&qword_14FA088, sub_D5E434);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.sharedListening);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v27[0] = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = v5;
    v11 = objc_msgSend(v10, "description");
    v12 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    *(_QWORD *)(v8 + 4) = sub_BA95EC(v12, v14, v27);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v6, v7, "Received MPCSharedListeningEvent=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v15 = v5;
  sub_D5ED24(v15, (uint64_t)v25);
  result = sub_5C090((uint64_t)v25, (uint64_t)v26, (uint64_t *)&unk_1500AB0);
  if (v26[48] != 255)
  {
    sub_CF6C84((uint64_t)v26, (uint64_t)v27);
    v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v19 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
    v20 = objc_msgSend(v15, "participant");
    v21 = objc_msgSend(v20, "externalIdentifier");

    v22 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    GroupActivitiesManager.postEvent(_:participantID:)((uint64_t)v27, v22, v24);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_CF6CC0((uint64_t)v25);
  }
  return result;
}

double sub_CF5234(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  double result;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA088 != -1)
    swift_once(&qword_14FA088, sub_D5E434);
  v7 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v7, (uint64_t)static Logger.sharedListening);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v24 = a1;
    v25 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_errorRetain(a1);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15018A0);
    v14 = (char *)String.init<A>(describing:)(&v24, v13);
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v14, v15, &v25);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v9, v10, "Receiving didEndSharedListeningSessionWithError=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = v2;
  v19 = static MainActor.shared.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_13B8110, 40, 7);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v17;
  sub_C51ED8((uint64_t)v6, (uint64_t)&unk_1500AA8, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    v22 = swift_allocObject(&unk_13B8138, 24, 7);
    *(_QWORD *)(v22 + 16) = v17;
    v23 = v17;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CF6C7C, v22);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_CF54DC(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  double result;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  id v38;
  id v39;
  id v40;
  __int128 v41;
  __int128 v42;

  v2 = v1;
  if (qword_14F9F78 != -1)
    swift_once(&qword_14F9F78, sub_CF3E04);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.playbackController);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v40 = a1;
    *(_QWORD *)&v41 = v9;
    *(_DWORD *)v8 = 136446210;
    swift_errorRetain(a1);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15018A0);
    v11 = (char *)String.init<A>(describing:)(&v40, v10);
    *(_QWORD *)(v8 + 4) = sub_BA95EC(v11, v12, (uint64_t *)&v41);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v6, v7, "didPauseForLeaseEndWithError with error=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    if (!a1)
      return result;
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    if (!a1)
      return result;
  }
  v14 = (void *)_convertErrorToNSError(_:)(a1);
  v15 = objc_msgSend(v14, "userInfo");
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorUserInfoKeyLeaseStatus);
  if (*(_QWORD *)(v16 + 16) && (v19 = sub_21BAD0(v17, v18), (v20 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v16 + 56) + 32 * v19, (uint64_t)&v41);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v42 + 1))
  {
    v21 = sub_4E684(0, &qword_1500A88, ICMusicSubscriptionLeaseStatus_ptr);
    if ((swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
    {

      return result;
    }
    v22 = v40;
    v23 = objc_msgSend(v40, "stateReasonDialog");
    if (!v23)
    {

      return result;
    }
    v24 = v23;
    v25 = objc_msgSend(v14, "userInfo");
    v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorUserInfoKeyMetricsDictionary);
    if (*(_QWORD *)(v26 + 16) && (v29 = sub_21BAD0(v27, v28), (v30 & 1) != 0))
    {
      sub_95094(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v41);
    }
    else
    {
      v41 = 0u;
      v42 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v42 + 1))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500A90);
      if ((swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v31, 6) & 1) != 0)
      {
        v32 = v40;
        if (!*((_QWORD *)v40 + 2) || (v33 = sub_21BAD0(0x736E6F6974706FLL, 0xE700000000000000), (v34 & 1) == 0))
        {

          *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
          return result;
        }
        sub_95094(v32[7] + 32 * v33, (uint64_t)&v41);
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB868);
        if ((swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v35, 6) & 1) != 0)
        {
          v36 = v40;
          sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
          v37 = (_QWORD *)swift_allocObject(&unk_13B80C0, 48, 7);
          v37[2] = v2;
          v37[3] = v24;
          v37[4] = v32;
          v37[5] = v36;
          v38 = v2;
          v39 = v24;
          static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_CF6B74, (uint64_t)v37);

          *(_QWORD *)&result = swift_release().n128_u64[0];
          return result;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      return result;
    }

  }
  sub_56024((uint64_t)&v41, &qword_14FF2A0);
  return result;
}

void sub_CF597C()
{
  uint64_t v0;

  sub_CEFA2C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

double sub_CF5990(uint64_t a1)
{
  uint64_t v1;

  return sub_CF3838(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void destroy for PresentationKind(_QWORD *a1)
{
  unsigned int v2;

  v2 = *((unsigned __int8 *)a1 + 56);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2 == 2)
  {
    if (a1[3] >= 0xFFFFFFFFuLL)
      __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v2 == 1)
  {
    swift_release(*a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[5]);

  }
}

uint64_t initializeWithCopy for PresentationKind(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;

  v3 = *((unsigned __int8 *)a2 + 56);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v5 = a2[3];
    if (v5 < 0xFFFFFFFF)
    {
      v11 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    else
    {
      v6 = a2[4];
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v6;
      (**(void (***)(uint64_t))(v5 - 8))(a1);
    }
    *(_BYTE *)(a1 + 56) = 2;
  }
  else if (v3 == 1)
  {
    v4 = *a2;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 56) = 1;
    swift_retain(v4);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = (void *)a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v9;
  }
  return a1;
}

uint64_t assignWithCopy for PresentationKind(uint64_t a1, __int128 *a2, __n128 a3)
{
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;

  if ((__int128 *)a1 != a2)
  {
    v5 = *(unsigned __int8 *)(a1 + 56);
    if (v5 >= 3)
      v5 = *(_DWORD *)a1 + 3;
    if (v5 == 2)
    {
      if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    }
    else if (v5 == 1)
    {
      a3 = swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v6 = *((unsigned __int8 *)a2 + 56);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      v7 = *((_QWORD *)a2 + 3);
      if (v7 < 0xFFFFFFFF)
      {
        v10 = *a2;
        v11 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v10;
        *(_OWORD *)(a1 + 16) = v11;
      }
      else
      {
        *(_QWORD *)(a1 + 24) = v7;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *, __n128))(v7 - 8))(a1, a2, a3);
      }
      *(_BYTE *)(a1 + 56) = 2;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      if (v6 == 1)
      {
        *(_BYTE *)(a1 + 56) = 1;
        swift_retain();
      }
      else
      {
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
        *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v8 = (void *)*((_QWORD *)a2 + 6);
        *(_QWORD *)(a1 + 48) = v8;
        *(_BYTE *)(a1 + 56) = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = v8;
      }
    }
  }
  return a1;
}

__n128 __swift_memcpy57_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PresentationKind(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {
      if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    }
    else if (v4 == 1)
    {
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v6 = 2;
    }
    else if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PresentationKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_CF5E3C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_CF5E58(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentationKind()
{
  return &type metadata for PresentationKind;
}

uint64_t *initializeBufferWithCopyOfBuffer for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t *assignWithTake for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for PresentationKind.NowPlayingDestination()
{
  return &type metadata for PresentationKind.NowPlayingDestination;
}

uint64_t type metadata accessor for PlaybackController()
{
  return objc_opt_self(_TtC9MusicCore18PlaybackController);
}

uint64_t _s22AgeVerificationWrapperCMa()
{
  return objc_opt_self(_TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper);
}

uint64_t initializeWithCopy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t assignWithTake for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.NowPlayingPresentationDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.NowPlayingPresentationDescriptor()
{
  return &type metadata for PlaybackController.NowPlayingPresentationDescriptor;
}

uint64_t getEnumTagSinglePayload for PlaybackController.CommandError.AlertKind(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlaybackController.CommandError.AlertKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError.AlertKind()
{
  return &type metadata for PlaybackController.CommandError.AlertKind;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_CF4A60(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for PlaybackController.CommandError(uint64_t a1)
{
  sub_CF4A2C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_CF4A60(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_CF4A2C(v5, v6);
  return a1;
}

uint64_t assignWithTake for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_CF4A2C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError()
{
  return &type metadata for PlaybackController.CommandError;
}

uint64_t sub_CF62C4()
{
  uint64_t v0;

  return sub_CF3BEC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_CF62CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_CF62F8(void *a1)
{
  uint64_t v1;

  return sub_CF3B50(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t block_copy_helper_302(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_302(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_CF631C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_CF6350()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, id))(v0 + 16))(*(_QWORD *)(v0 + 32), objc_msgSend(*(id *)(v0 + 40), "isExplicitContentAllowed"));
}

void sub_CF6394(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_CF2B80(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t objectdestroy_17Tm_2()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_CF63D4()
{
  uint64_t v0;

  sub_CF1B58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(_QWORD, _QWORD))(v0 + 40), *(void **)(v0 + 48));
}

uint64_t objectdestroyTm_27()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_CF641C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED60);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CF6480(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FED60);
  return sub_C5768C(a1, a2);
}

uint64_t sub_CF64D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF64FC()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_CF6530(void *a1, char a2)
{
  uint64_t v2;

  sub_CF350C(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_CF653C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_CF6568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_150095C);
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_C3150;
  *(_QWORD *)(v3 + 80) = v2;
  *(_OWORD *)(v3 + 64) = v4;
  return swift_task_switch(sub_CF27EC, 0, 0);
}

uint64_t sub_CF65D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CF65F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_150096C);
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_C3150;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_CF2A40, 0, 0);
}

uint64_t sub_CF6654()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_CF6664()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_CF66A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)swift_task_alloc(dword_1500994);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_C3150;
  return sub_CF173C(v2, v3);
}

uint64_t sub_CF66FC(uint64_t a1)
{
  return sub_CF69A4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF0FE8);
}

uint64_t sub_CF6708()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_CF6718(void *a1)
{
  uint64_t v1;

  sub_CF11FC(a1, *(void **)(v1 + 16));
}

uint64_t sub_CF6720()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CF6730()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_CF6764()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_15009BC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_C3150;
  return sub_CF400C(v2, v3, v5, v4);
}

uint64_t sub_CF67C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_CF6804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_15009D4);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_C3150;
  *(_QWORD *)(v5 + 144) = v4;
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 120) = a1;
  return swift_task_switch(sub_CF4660, 0, 0);
}

uint64_t sub_CF687C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_CF68F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_15009E4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_C3150;
  v6[15] = a1;
  v6[16] = v5;
  return swift_task_switch(sub_CF43BC, 0, 0);
}

uint64_t sub_CF696C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_CF6998(uint64_t a1)
{
  return sub_CF69A4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF1140);
}

uint64_t sub_CF69A4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_CF69B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_CF69C8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_CF69FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1500A64);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_C3150;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch(sub_CF3FD4, 0, 0);
}

uint64_t sub_CF6A6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF6A90()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  if (v0[9])
    swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_CF6AD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1500A74);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_C3150;
  v4[2] = a1;
  v4[3] = v1 + 32;
  return swift_task_switch(sub_CF18E0, 0, 0);
}

uint64_t sub_CF6B38()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

_QWORD *sub_CF6B74()
{
  uint64_t v0;

  return sub_CEF7FC(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_CF6B80()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_CF6BB4(unint64_t a1)
{
  uint64_t *v1;

  sub_CEF2FC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_CF6BC0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_CF6BEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1500AA4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_CEEDD0(a1, v4, v5, v6);
}

uint64_t sub_CF6C58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_CF6C7C()
{
  uint64_t v0;

  return sub_CEEF1C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_CF6C84(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8_0(a2, a1);
  return a2;
}

uint64_t sub_CF6CC0(uint64_t a1)
{
  sub_CF6CF8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

void sub_CF6CF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1)
    sub_CF6D0C(a1, a2, a3, a4, a5, a6, a7);
}

void sub_CF6D0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 3:

      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 4:
      sub_5B8898((uint64_t)a1, a2, a3, a4);
      break;
    default:
      return;
  }
}

void sub_CF6D98(void **a1)
{
  uint64_t v1;

  sub_CE2484(a1, v1);
}

unint64_t sub_CF6DA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1500760;
  if (!qword_1500760)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1500FE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1500760);
  }
  return result;
}

uint64_t sub_CF6DEC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_CF6E20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1500AD4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_CE25A8(a1, v4, v5, v7, v6);
}

unint64_t sub_CF6E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1500B50;
  if (!qword_1500B50)
  {
    v1 = sub_4E684(255, &qword_1500B48, UISceneSession_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, &qword_1500B50);
  }
  return result;
}

uint64_t sub_CF6F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_CF6F48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF6F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500B9C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[5] = v2;
  return swift_task_switch(sub_CEEAE4, 0, 0);
}

uint64_t sub_CF6FB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF6FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500BAC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[5] = v2;
  return swift_task_switch(sub_CEEC40, 0, 0);
}

uint64_t sub_CF7028()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF7038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500BBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[5] = v2;
  return swift_task_switch(sub_CEEBCC, 0, 0);
}

uint64_t sub_CF7098()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF70A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500BCC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[5] = v2;
  return swift_task_switch(sub_CEEB58, 0, 0);
}

uint64_t sub_CF7108()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF7118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500BE4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[4] = v2;
  return swift_task_switch(sub_CEC324, 0, 0);
}

uint64_t sub_CF7178()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF7188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500BF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[4] = v2;
  return swift_task_switch(sub_CEC394, 0, 0);
}

uint64_t sub_CF71E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF71F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500C04);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[4] = v2;
  return swift_task_switch(sub_CEC404, 0, 0);
}

uint64_t sub_CF7258()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF7268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500C1C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[2] = v2;
  return swift_task_switch(sub_CED46C, 0, 0);
}

uint64_t sub_CF72C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF72D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500C2C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[2] = v2;
  return swift_task_switch(sub_CED400, 0, 0);
}

uint64_t sub_CF7338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF7348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500C44);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[2] = v2;
  return swift_task_switch(sub_CECB3C, 0, 0);
}

uint64_t sub_CF73A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_CF73B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1500C54);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  v3[2] = v2;
  return swift_task_switch(sub_CECB94, 0, 0);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.PlayabilityOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_CF7464 + 4 * byte_10A280A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_CF7498 + 4 * byte_10A2805[v4]))();
}

uint64_t sub_CF7498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_CF74A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xCF74A8);
  return result;
}

uint64_t sub_CF74B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xCF74BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_CF74C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_CF74C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.PlayabilityOption()
{
  return &type metadata for PlaybackController.PlayabilityOption;
}

void MusicPlaybackIntentDescriptor.playActivityFeatureName.setter(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, "setPlayActivityFeatureName:", v4);

}

void MusicPlaybackIntentDescriptor.playActivityRecommendationData.setter(uint64_t a1, unint64_t a2)
{
  void *v4;
  Class isa;

  v4 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  if (a2 >> 60 == 15)
  {
    isa = 0;
    objc_msgSend(v4, "setPlayActivityRecommendationData:", 0);
  }
  else
  {
    sub_50CB4(a1, a2);
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_50C4C(a1, a2);
    objc_msgSend(v4, "setPlayActivityRecommendationData:", isa);
  }
  sub_50C4C(a1, a2);

}

uint64_t PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, objc_class *a10)
{
  int *v17;
  uint64_t v18;
  UIViewController_optional v22;

  v17 = (int *)type metadata accessor for PlaybackIntentDescriptor(0);
  v18 = a9 + v17[7];
  *(_QWORD *)(v18 + 32) = 0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_BYTE *)(a9 + v17[8]) = 0;
  *(_BYTE *)(a9 + v17[9]) = 0;
  sub_5BDB8(a1, a9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if ((a6 & 1) == 0)
    sub_CF79B4(a5, 0, (SEL *)&selRef_setShuffleMode_);
  if ((a8 & 1) == 0)
    sub_CF79B4(a7, 0, (SEL *)&selRef_setRepeatMode_);
  sub_BF2F00(a2, v18);
  *(_QWORD *)(a9 + v17[5]) = a3;
  *(_QWORD *)(a9 + v17[6]) = a4;
  v22.value.super.super.isa = a10;
  PlaybackIntentDescriptor.configureForPlayActivity(using:)(v22);

  sub_56024(a2, &qword_1500B80);
  return sub_5C0DC(a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
}

uint64_t type metadata accessor for PlaybackIntentDescriptor(uint64_t a1)
{
  return sub_6345C(a1, qword_1500D28, (uint64_t)&nominal type descriptor for PlaybackIntentDescriptor);
}

uint64_t type metadata accessor for PlaybackIntentDescriptor.IntentType(uint64_t a1)
{
  return sub_6345C(a1, qword_1500DE0, (uint64_t)&nominal type descriptor for PlaybackIntentDescriptor.IntentType);
}

uint64_t PlaybackIntentDescriptor.intent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
    return *(_QWORD *)v8;
  v10 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v11 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

id sub_CF7880(SEL *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;

  v3 = v1;
  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5BDB8(v3, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v12 = (*(uint64_t (**)(char *, id *, uint64_t))(v5 + 32))(v7, v10, v4);
    v13 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v12);
    v14 = objc_msgSend(v13, *a1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v15 = *v10;
    v14 = objc_msgSend(*v10, *a1);

  }
  return v14;
}

void sub_CF79B4(uint64_t a1, char a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  unint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;

  v5 = v3;
  v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v12);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (id *)((char *)&v21 - v15);
  if ((a2 & 1) != 0)
    v17 = -1;
  else
    v17 = a1;
  sub_5BDB8(v5, (uint64_t)&v21 - v15, v13);
  if (swift_getEnumCaseMultiPayload(v16, v12) == 1)
  {
    v18 = (*(uint64_t (**)(char *, id *, uint64_t))(v9 + 32))(v11, v16, v8);
    v19 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v18);
    objc_msgSend(v19, *a3, v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v20 = *v16;
    objc_msgSend(*v16, *a3, v17);

  }
}

Swift::Void __swiftcall PlaybackIntentDescriptor.configureForPlayActivity(using:)(UIViewController_optional using)
{
  uint64_t v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  objc_class *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  objc_class *v20;
  uint64_t v21;
  NSString v22;
  Class v23;
  objc_class *v24;
  uint64_t v25;

  isa = using.value.super.super.isa;
  v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (isa)
  {
    v10 = isa;
    v11 = -[objc_class combinedPlayActivityFeatureName](v10, "combinedPlayActivityFeatureName");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v24 = v10;
    v14 = UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(1);
    v16 = v15;
    sub_5BDB8(v1, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
    {
      v17 = (*(uint64_t (**)(char *, void **, uint64_t))(v4 + 32))(v6, v9, v3);
      v18 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v17);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v18 = *v9;
    }
    v20 = v24;
    v19 = v25;
    swift_bridgeObjectRetain();
    sub_1390D8(v14, v16);
    sub_50C4C(v14, v16);
    swift_bridgeObjectRelease(v13);
    v21 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v21 = v19 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1390D8(v14, v16);
      sub_50C4C(v14, v16);
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v18, "setPlayActivityFeatureName:", v22);

    swift_bridgeObjectRetain();
    sub_1390D8(v14, v16);
    swift_bridgeObjectRelease(v13);
    if (v16 >> 60 == 15)
    {
      v23 = 0;
    }
    else
    {
      v23 = Data._bridgeToObjectiveC()().super.isa;
      sub_50C4C(v14, v16);
    }
    objc_msgSend(v18, "setPlayActivityRecommendationData:", v23);
    swift_bridgeObjectRelease(v13);

    sub_50C4C(v14, v16);
  }
}

uint64_t PlaybackIntentDescriptor.intentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5BDB8(v1, a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
}

uint64_t PlaybackIntentDescriptor.intentOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 20));
}

uint64_t PlaybackIntentDescriptor.intentOptions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*PlaybackIntentDescriptor.intentOptions.modify())(double)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackIntentDescriptor.replaceIntent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 24));
}

uint64_t PlaybackIntentDescriptor.replaceIntent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

double (*PlaybackIntentDescriptor.replaceIntent.modify())(double)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackIntentDescriptor.representedObject.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 28);
  return sub_CF6F00(v3, a1);
}

uint64_t PlaybackIntentDescriptor.representedObject.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 28);
  return sub_CF8B50(a1, v3);
}

double (*PlaybackIntentDescriptor.representedObject.modify())(double)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackIntentDescriptor.autoSing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 32));
}

uint64_t PlaybackIntentDescriptor.autoSing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

double (*PlaybackIntentDescriptor.autoSing.modify())(double)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackIntentDescriptor.isSiriIntent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 36));
}

uint64_t PlaybackIntentDescriptor.isSiriIntent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

double (*PlaybackIntentDescriptor.isSiriIntent.modify())(double)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MusicPlaybackIntentDescriptor.playActivityFeatureName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
  v1 = objc_msgSend(v0, "playActivityFeatureName");

  if (!v1)
    return 0;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

void (*MusicPlaybackIntentDescriptor.playActivityFeatureName.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v4 = objc_msgSend(v3, "playActivityFeatureName");

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_CF80E8;
}

void sub_CF80E8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v3);
    v7 = v4;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      v4 = v7;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, "setPlayActivityFeatureName:", v5);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v6 = (void *)((uint64_t (*)(void))MusicPlaybackIntentDescriptor.playbackIntent.getter)();
    v7 = v6;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      v6 = v7;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v6, "setPlayActivityFeatureName:", v5);
  }

}

uint64_t MusicPlaybackIntentDescriptor.playActivityRecommendationData.getter(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v2 = objc_msgSend(v1, "playActivityRecommendationData");

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

void (*MusicPlaybackIntentDescriptor.playActivityRecommendationData.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  a1[2] = v1;
  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v4 = objc_msgSend(v3, "playActivityRecommendationData");

  if (v4)
  {
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_CF82A8;
}

void sub_CF82A8(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  Class v7;
  id v8;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    v4 = sub_1390D8(*a1, v3);
    v5 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v4);
    if (v3 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      sub_50CB4(v2, v3);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_50C4C(v2, v3);
    }
    objc_msgSend(v5, "setPlayActivityRecommendationData:", isa);
    sub_50C4C(v2, v3);

    sub_50C4C(v2, v3);
  }
  else
  {
    v8 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
    if (v3 >> 60 == 15)
    {
      v7 = 0;
    }
    else
    {
      sub_50CB4(v2, v3);
      v7 = Data._bridgeToObjectiveC()().super.isa;
      sub_50C4C(v2, v3);
    }
    objc_msgSend(v8, "setPlayActivityRecommendationData:", v7);
    sub_50C4C(v2, v3);

  }
}

unint64_t PlaybackIntentDescriptor.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  int *v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  unint64_t v41;
  unint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = 0xD000000000000019;
  v42 = 0x80000000011081C0;
  strcpy((char *)&v40, "intent=");
  v40._object = (void *)0xE700000000000000;
  sub_5BDB8(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = (*(uint64_t (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v11 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v11 = *v8;
  }
  v12 = objc_msgSend(v11, "description");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);

  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "shuffleMode=");
  BYTE5(v40._object) = 0;
  HIWORD(v40._object) = -5120;
  v38._countAndFlagsBits = (uint64_t)sub_CF7880((SEL *)&selRef_shuffleMode);
  LOBYTE(v38._object) = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500CC0);
  v19._countAndFlagsBits = String.init<A>(describing:)(&v38, v18);
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "repeatMode=");
  HIDWORD(v40._object) = -352321536;
  v38._countAndFlagsBits = (uint64_t)sub_CF7880((SEL *)&selRef_repeatMode);
  LOBYTE(v38._object) = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500CC8);
  v22._countAndFlagsBits = String.init<A>(describing:)(&v38, v21);
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "options=");
  BYTE1(v40._object) = 0;
  WORD1(v40._object) = 0;
  HIDWORD(v40._object) = -402653184;
  v24 = (int *)type metadata accessor for PlaybackIntentDescriptor(0);
  v38._countAndFlagsBits = *(_QWORD *)(v1 + v24[5]);
  type metadata accessor for MPCPlaybackIntentOptions(0);
  v26._countAndFlagsBits = String.init<A>(describing:)(&v38, v25);
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 8236;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0x206563616C706572;
  v40._object = (void *)0xEF3D746E65746E69;
  v38._countAndFlagsBits = *(_QWORD *)(v1 + v24[6]);
  type metadata accessor for MPCPlayerTracklistReplaceIntent(0);
  v29._countAndFlagsBits = String.init<A>(describing:)(&v38, v28);
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 8236;
  v30._object = (void *)0xE200000000000000;
  String.append(_:)(v30);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v31._object = (void *)0x80000000011081E0;
  v31._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v31);
  sub_CF6F00(v1 + v24[7], (uint64_t)&v38);
  if (v39)
  {
    sub_8B15C((__int128 *)&v38._countAndFlagsBits, (uint64_t)&v40);
    sub_55D1C((uint64_t)&v40, (uint64_t)&v38);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B90);
    v38._countAndFlagsBits = String.init<A>(describing:)(&v38, v32);
    v38._object = v33;
    v34._countAndFlagsBits = 8236;
    v34._object = (void *)0xE200000000000000;
    String.append(_:)(v34);
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(&v40);
  }
  else
  {
    sub_56024((uint64_t)&v38, &qword_1500B80);
    v35._countAndFlagsBits = 0x2C20656E6F6ELL;
    v35._object = (void *)0xE600000000000000;
    String.append(_:)(v35);
  }
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return v41;
}

uint64_t _s9MusicCore24PlaybackIntentDescriptorV0D4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  void *v29;
  char *v31;
  uint64_t v32;

  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v32 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v31 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - v7;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (void **)((char *)&v31 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E18);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void **)&v17[*(int *)(v18 + 48)];
  sub_5BDB8(a1, (uint64_t)v17, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_5BDB8(a2, (uint64_t)v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v17, v9) == 1)
  {
    sub_5BDB8((uint64_t)v17, (uint64_t)v11, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v19, v9) == 1)
    {
      v20 = v32;
      v21 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v21(v8, v11, v4);
      v22 = v31;
      v21(v31, (char *)v19, v4);
      v23 = sub_C3CFB4();
      v24 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v23);
      v25 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v24);
      v26 = static NSObject.== infix(_:_:)(v24, v25);

      v27 = *(void (**)(char *, uint64_t))(v20 + 8);
      v27(v22, v4);
      v27(v8, v4);
LABEL_9:
      sub_5C0DC((uint64_t)v17, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      return v26 & 1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v4);
  }
  else
  {
    sub_5BDB8((uint64_t)v17, (uint64_t)v14, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v28 = *v14;
    if (swift_getEnumCaseMultiPayload(v19, v9) != 1)
    {
      v29 = *v19;
      sub_C3CFB4();
      v26 = static NSObject.== infix(_:_:)(v28, v29);

      goto LABEL_9;
    }

  }
  sub_56024((uint64_t)v17, &qword_1500E18);
  v26 = 0;
  return v26 & 1;
}

uint64_t sub_CF8B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s9MusicCore24PlaybackIntentDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v22;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - v14;
  v16 = _s9MusicCore24PlaybackIntentDescriptorV0D4TypeO2eeoiySbAE_AEtFZ_0(a1, a2);
  sub_5BDB8(a1, (uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
  sub_5BDB8(a2, (uint64_t)v12, type metadata accessor for PlaybackIntentDescriptor);
  if ((v16 & 1) == 0)
  {
    sub_5C0DC((uint64_t)v12, type metadata accessor for PlaybackIntentDescriptor);
    sub_5C0DC((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
    sub_5BDB8(a1, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor);
    sub_5BDB8(a2, (uint64_t)v6, type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_5;
  }
  v17 = *(int *)(v4 + 20);
  v18 = *(_QWORD *)&v15[v17];
  v19 = *(_QWORD *)&v12[v17];
  sub_5C0DC((uint64_t)v12, type metadata accessor for PlaybackIntentDescriptor);
  sub_5C0DC((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
  sub_5BDB8(a1, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor);
  sub_5BDB8(a2, (uint64_t)v6, type metadata accessor for PlaybackIntentDescriptor);
  if (v18 != v19)
  {
LABEL_5:
    v20 = 0;
    goto LABEL_6;
  }
  v20 = *(_QWORD *)&v9[*(int *)(v4 + 24)] == *(_QWORD *)&v6[*(int *)(v4 + 24)];
LABEL_6:
  sub_5C0DC((uint64_t)v6, type metadata accessor for PlaybackIntentDescriptor);
  sub_5C0DC((uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor);
  return v20;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntentDescriptor(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *(_QWORD *)a1 = *a2;
      v14 = v13;
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v15 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(char **)((char *)a2 + a3[5]);
    *(_QWORD *)&a1[v15] = *(char **)((char *)a2 + v15);
    v16 = a3[7];
    v17 = &a1[v16];
    v18 = (char *)a2 + v16;
    v19 = *(uint64_t *)((char *)a2 + v16 + 24);
    if (v19)
    {
      v20 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v19;
      *((_QWORD *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    }
    v22 = a3[9];
    a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
    a1[v22] = *((_BYTE *)a2 + v22);
  }
  return a1;
}

_QWORD *destroy for PlaybackIntentDescriptor(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {

  }
  result = (id *)((char *)a1 + *(int *)(a2 + 28));
  if (result[3])
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

void **initializeWithCopy for PlaybackIntentDescriptor(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    v12 = v11;
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v13 = a3[6];
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + v13) = *(void **)((char *)a2 + v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(uint64_t *)((char *)a2 + v14 + 24);
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

void **assignWithCopy for PlaybackIntentDescriptor(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v11;
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(uint64_t *)((char *)a2 + v13 + 24);
  if (!*(void **)((char *)a1 + v13 + 24))
  {
    if (v16)
    {
      *((_QWORD *)v14 + 3) = v16;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      (**(void (***)(char *, char *))(v16 - 8))(v14, v15);
      goto LABEL_13;
    }
LABEL_12:
    v17 = *(_OWORD *)v15;
    v18 = *((_OWORD *)v15 + 1);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *(_OWORD *)v14 = v17;
    *((_OWORD *)v14 + 1) = v18;
    goto LABEL_13;
  }
  if (!v16)
  {
    __swift_destroy_boxed_opaque_existential_1(v14);
    goto LABEL_12;
  }
  __swift_assign_boxed_opaque_existential_1(v14, v15);
LABEL_13:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

char *initializeWithTake for PlaybackIntentDescriptor(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = a3[8];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *(_OWORD *)v12;
  v14 = *((_OWORD *)v12 + 1);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  a1[v10] = a2[v10];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *assignWithTake for PlaybackIntentDescriptor(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  if (*(_QWORD *)&a1[v9 + 24])
    __swift_destroy_boxed_opaque_existential_1(&a1[v9]);
  v11 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)v10 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v10 + 1) = v11;
  *((_QWORD *)v10 + 4) = *(_QWORD *)&a2[v9 + 32];
  v12 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v12] = a2[v12];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntentDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CF9368);
}

uint64_t sub_CF9368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackIntentDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CF9400);
}

uint64_t sub_CF9400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = a2;
  return result;
}

uint64_t sub_CF947C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for PlaybackIntentDescriptor.IntentType(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = "(";
    v4[4] = &unk_10A2B38;
    v4[5] = &unk_10A2B38;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntentDescriptor.IntentType(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void destroy for PlaybackIntentDescriptor.IntentType(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **initializeWithCopy for PlaybackIntentDescriptor.IntentType(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **assignWithCopy for PlaybackIntentDescriptor.IntentType(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *initializeWithTake for PlaybackIntentDescriptor.IntentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PlaybackIntentDescriptor.IntentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_CF987C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MusicPlaybackIntentDescriptor(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *Player.state<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v3;
  v8 = MPCPlaybackEngine.state<A>(for:)();
  type metadata accessor for MusicItemState(0, a2, a3, v9);
  swift_retain(v3);
  v11 = sub_D0BD2C(a1, v8, v3, v10);
  swift_release(v8);
  swift_release(v4);
  return v11;
}

uint64_t type metadata accessor for MusicItemState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MusicItemState);
}

uint64_t sub_CF998C(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_C327C4((uint64_t)a1);
      if ((v8 & 1) != 0)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
        swift_unknownObjectRetain(v6);
        return v6;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = __CocoaDictionary.lookup(_:)();

  if (!v4)
    return 0;
  v10 = v4;
  swift_unknownObjectRetain(v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15017F8);
  swift_dynamicCast(&v11, &v10, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
  v6 = v11;
  swift_unknownObjectRelease(v4);
  return v6;
}

uint64_t sub_CF9A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v3 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

uint64_t sub_CF9B0C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_15822C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_15822C0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x726579616C50, 0xE600000000000000);
}

uint64_t Player.configuration.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engine);
  v2 = objc_msgSend(v1, "playerID");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  sub_CDD564(v1);
  v4 = objc_msgSend(v1, "fallbackPlaybackIntent");

  return v3;
}

id Player.audioAnalyzer.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engine), "audioAnalyzer");
}

_QWORD *Player.sampleReceiver.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v2 = type metadata accessor for SampleReceiver();
    v1 = (_QWORD *)swift_allocObject(v2, 40, 7);
    v1[3] = 0;
    v1[4] = 0;
    v1[2] = 0;
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

double Player.sampleReceiver.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

double (*Player.sampleReceiver.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = Player.sampleReceiver.getter();
  return sub_CF9CE4;
}

double sub_CF9CE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t Player.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  Player.init()();
  return v1;
}

_QWORD *Player.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  NSString v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  void *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  NSString v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  void **aBlock;
  uint64_t v140;
  void *v141;
  void *v142;
  void *v143;
  uint64_t v144;

  v1 = v0;
  v127 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v2);
  v138 = (char *)&v116 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  __chkstk_darwin(v4);
  v137 = (char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E40);
  v129 = *(_QWORD *)(v6 - 8);
  v130 = v6;
  __chkstk_darwin(v6);
  v128 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E48);
  v132 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E50);
  v135 = *(_QWORD *)(v9 - 8);
  v136 = v9;
  __chkstk_darwin(v9);
  v133 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v12 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E60);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E68);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
  v116 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v16 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E78);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  v0[3] = 0;
  v126 = (id)objc_opt_self(MPAVRoutingController);
  v21 = objc_msgSend(v126, "systemRoute");
  v22 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_14F9F68 != -1)
    swift_once(&qword_14F9F68, sub_CDAB10);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "systemMusicPathWithRoute:playerID:", v21, v23);

  if (objc_msgSend(v21, "isDeviceRoute"))
    v25 = v24;
  else
    v25 = objc_msgSend(v22, "pathWithRoute:bundleID:playerID:", v21, 0, 0);

  v26 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__path;
  aBlock = (void **)v24;
  v27 = sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
  Published.init(initialValue:)(&aBlock, v27);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v20, v17);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver) = 0;
  v28 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
  aBlock = 0;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500EA0);
  Published.init(initialValue:)(&aBlock, v29);
  v30 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  v31 = v125;
  v30(v28, v16, v125);
  v32 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath;
  aBlock = 0;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500EB0);
  v34 = v117;
  Published.init(initialValue:)(&aBlock, v33);
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v32, v34, v119);
  v35 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession;
  aBlock = 0;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500EC0);
  v37 = v120;
  Published.init(initialValue:)(&aBlock, v36);
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v35, v37, v122);
  v38 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession;
  LOBYTE(aBlock) = 0;
  Published.init(initialValue:)(&aBlock, &type metadata for Bool);
  v39 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
  v40 = v124;
  v39(v38, v12, v124);
  v41 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession;
  LOBYTE(aBlock) = 0;
  Published.init(initialValue:)(&aBlock, &type metadata for Bool);
  v39(v41, v12, v40);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken) = 0;
  v42 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  if (qword_14F9F98 != -1)
    swift_once(&qword_14F9F98, sub_D07498);
  v43 = (void *)qword_1500E20;
  *v42 = qword_1500E20;
  v42[1] = v43;
  v42[2] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_routingController) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engineState) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady) = _swiftEmptyArrayStorage;
  v44 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__playerResponse;
  aBlock = 0;
  v45 = v43;
  Published.init(initialValue:)(&aBlock, v29);
  v30(v44, v16, v31);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver) = 0;
  v46 = OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers;
  *(_QWORD *)((char *)v1 + v46) = sub_C26CA4((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription) = 0;
  v47 = OBJC_IVAR____TtC9MusicCore6Player_lock;
  v48 = type metadata accessor for UnfairLock();
  swift_allocObject(v48, 24, 7);
  *(_QWORD *)((char *)v1 + v47) = UnfairLock.init()();
  v49 = *(_QWORD *)algn_1582268;
  v50 = qword_1582270;
  v51 = (void *)unk_1582278;
  v52 = objc_allocWithZone((Class)MPCPlaybackEngine);
  v53 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v52, "initWithPlayerID:", v54);

  v56 = v55;
  sub_CDD648(v50, (uint64_t)v51);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v50);

  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engine) = v56;
  objc_msgSend(v56, "becomeActive");
  v57 = v56;

  v58 = sub_CDD564(v57);
  v59 = objc_msgSend(v57, "fallbackPlaybackIntent");

  LOBYTE(v57) = sub_A33084(4u, (uint64_t)v58);
  swift_bridgeObjectRelease(v58);
  if ((v57 & 1) != 0)
  {
    v60 = *(void **)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engine);
    v143 = sub_CFAB9C;
    v144 = 0;
    aBlock = _NSConcreteStackBlock;
    v140 = 1107296256;
    v141 = sub_995FDC;
    v142 = &block_descriptor_15_12;
    v61 = _Block_copy(&aBlock);
    v62 = v60;
    objc_msgSend(v62, "restoreStateWithCompletion:", v61);
    _Block_release(v61);

  }
  v63 = v126;
  v64 = objc_msgSend(v126, "systemRoute");
  v65 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v64, 0);
  v66 = objc_msgSend((id)objc_opt_self(MPVolumeHardwareButtonController), "sharedController");
  objc_msgSend(v66, "setActiveDataSource:", v65);

  v67 = swift_allocObject(&unk_13B8448, 32, 7);
  v68 = v127;
  *(_QWORD *)(v67 + 16) = v1;
  *(_QWORD *)(v67 + 24) = v68;
  v69 = swift_allocObject(&unk_13B8470, 32, 7);
  *(_QWORD *)(v69 + 16) = sub_D0BDA8;
  *(_QWORD *)(v69 + 24) = v67;
  v143 = sub_D0BDB0;
  v144 = v69;
  aBlock = _NSConcreteStackBlock;
  v140 = 1107296256;
  v141 = sub_153944;
  v142 = &block_descriptor_307;
  v70 = _Block_copy(&aBlock);
  v71 = v144;
  swift_retain(v1);
  swift_retain(v67);
  swift_release(v71);
  objc_msgSend(v63, "getActiveRouteWithTimeout:completion:", v70, 1.0);
  swift_release(v67);
  _Block_release(v70);
  v72 = (void *)MPAVRoutingControllerActiveSystemRouteDidChangeNotification;
  v73 = swift_allocObject(&unk_13B84C0, 24, 7);
  swift_weakInit(v73 + 16, v1);
  v74 = type metadata accessor for NotificationObserver();
  swift_allocObject(v74, 64, 7);
  v75 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v72, 0, 1, 1, (uint64_t)sub_D0BDD0, v73);
  v76 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver) = v75;
  swift_release(v76);
  v77 = (void *)MRAVEndpointGroupSessionInfoDidChangeNotification;
  v78 = swift_allocObject(&unk_13B84C0, 24, 7);
  swift_weakInit(v78 + 16, v1);
  swift_allocObject(v74, 64, 7);
  v79 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v77, 0, 1, 1, (uint64_t)sub_D0BDE8, v78);
  v80 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver) = v79;
  swift_release(v80);
  v81 = (void *)MRAVEndpointGroupSessionHostingEligibilityDidChangeNotification;
  v82 = swift_allocObject(&unk_13B84C0, 24, 7);
  swift_weakInit(v82 + 16, v1);
  swift_allocObject(v74, 64, 7);
  v83 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v81, 0, 1, 1, (uint64_t)sub_D0BE10, v82);
  v84 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver) = v83;
  swift_release(v84);
  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  swift_beginAccess(static ApplicationCapabilities.Controller.shared+ OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, &aBlock, 33, 0);
  v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE030);
  v86 = v128;
  Published.projectedValue.getter(v85);
  swift_endAccess(&aBlock);
  v87 = sub_5C150((unint64_t *)&unk_1500F48, &qword_1500E40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v88 = v130;
  v89 = v131;
  Publisher.map<A>(_:)(sub_CFB110, 0, v130, &type metadata for ApplicationCapabilities.RatingWarning, v87);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v86, v88);
  v90 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  aBlock = (void **)static OS_dispatch_queue.main.getter(v90, v91, v92, v93, v94, v95, v96, v97, v116, v117, v118, v119, v120, v121, v122);
  v98 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v99 = (uint64_t)v137;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v137, 1, 1, v98);
  v100 = sub_5C150(&qword_1500F58, &qword_1500E48, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v101 = sub_D0BE38();
  v103 = v133;
  v102 = v134;
  Publisher.receive<A>(on:options:)(&aBlock, v99, v134, v90, v100, v101);
  sub_56024(v99, (uint64_t *)&unk_15039E0);

  (*(void (**)(char *, uint64_t))(v132 + 8))(v89, v102);
  v104 = sub_5C150(&qword_1500F68, (uint64_t *)&unk_1500E50, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v105 = v136;
  v106 = Publisher<>.sink(receiveValue:)(sub_CFB14C, 0, v136, v104);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v103, v105);
  v107 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription) = v106;
  v108 = swift_release(v107);
  v109 = (uint64_t)v138;
  static TaskPriority.userInitiated.getter(v108);
  v110 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v109, 0, 1, v110);
  type metadata accessor for MainActor(0);
  swift_retain(v1);
  v112 = static MainActor.shared.getter(v111);
  v113 = (_QWORD *)swift_allocObject(&unk_13B84E8, 40, 7);
  v113[2] = v112;
  v113[3] = &protocol witness table for MainActor;
  v113[4] = v1;
  v114 = sub_BBDAAC(v109, (uint64_t)&unk_1500F78, (uint64_t)v113);
  swift_release(v114);
  sub_56024(v109, (uint64_t *)&unk_1500E30);
  return v1;
}

uint64_t property wrapper backing initializer of Player.path(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t property wrapper backing initializer of Player.playerResponse(uint64_t a1)
{
  return sub_CFAB5C(a1, &qword_1500EA0);
}

uint64_t property wrapper backing initializer of Player.nowPlayingPath(uint64_t a1)
{
  return sub_CFAB5C(a1, &qword_1500EB0);
}

uint64_t property wrapper backing initializer of Player.sharePlayTogetherSession(uint64_t a1)
{
  return sub_CFAB5C(a1, &qword_1500EC0);
}

uint64_t sub_CFAB5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  return Published.init(initialValue:)(&v4, v2);
}

void sub_CFAB9C(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  NSObject *oslog;
  uint64_t v13;
  uint64_t v14;

  if ((a1 & 1) == 0)
  {
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v3 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v3, (uint64_t)qword_15822C0);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v13 = a2;
      v14 = v7;
      *(_DWORD *)v6 = 136446210;
      swift_errorRetain(a2);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_15018A0);
      v9 = (char *)String.init<A>(describing:)(&v13, v8);
      v11 = v10;
      *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v14);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, oslog, v5, "Restoration Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

uint64_t sub_CFAD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_CFADB8, v7, v8);
}

uint64_t sub_CFADB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  swift_release();
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.sharePlayTogether);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "Got MRAVEndpointGroupSessionInfoDidChange notification", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 16);

  if (v6)
    sub_D06864();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_CFAEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  _BYTE v18[24];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = Strong;
  v15 = sub_C51ED8((uint64_t)v9, a4, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_CFAFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_CFB01C, v7, v8);
}

uint64_t sub_CFB01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  swift_release();
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.sharePlayTogether);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "Got MRAVEndpointGroupSessionHostingEligibilityDidChangeNotification notification", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 16);

  if (v6)
    sub_D06864();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CFB110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_CFB14C(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = *a1;
  v2 = (void *)objc_opt_self(MPRestrictionsMonitor);
  v3 = objc_msgSend(v2, "sharedRestrictionsMonitor");
  objc_msgSend(v3, "setMaximumMovieRatingForAgeGate:", v1);

  v4 = objc_msgSend(v2, "sharedRestrictionsMonitor");
  objc_msgSend(v4, "setMaximumTVShowRatingForAgeGate:", v1);

}

uint64_t sub_CFB1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  __n128 v5;
  _QWORD *v6;

  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_1500F84);
  v4[5] = v6;
  *v6 = v4;
  v6[1] = sub_CFB248;
  return Player.startEngineIfNeeded()();
}

uint64_t sub_CFB248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_CFB2B8, v2, v3);
}

uint64_t sub_CFB2B8()
{
  uint64_t v0;

  swift_release();
  sub_D06864();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.startEngineIfNeeded()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[13] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[14] = v2;
  v1[15] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[16] = v4;
  v1[17] = v5;
  return swift_task_switch(sub_CFB360, v4, v5);
}

uint64_t sub_CFB360()
{
  uint64_t v0;
  _BYTE *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  v2 = swift_beginAccess(v1, v0 + 80, 1, 0);
  if (*v1 == 2)
  {
    v8 = swift_release(*(_QWORD *)(v0 + 120));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
  else
  {
    if (!*v1)
    {
      *v1 = 1;
      v2.n128_f64[0] = sub_D036A4(0);
    }
    v3 = static MainActor.shared.getter(v2);
    *(_QWORD *)(v0 + 144) = v3;
    if (v3)
    {
      ObjectType = swift_getObjectType();
      v5 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v7 = v6;
    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    return swift_task_switch(sub_CFB42C, v5, v7);
  }
}

uint64_t sub_CFB42C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = v0 + 2;
  v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_CFB52C;
  v3 = swift_continuation_init(v0 + 2, 0);
  v4 = swift_allocObject(&unk_13B8538, 24, 7);
  *(_QWORD *)(v4 + 16) = v3;
  v5 = OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady;
  v6 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  *(_QWORD *)(v2 + v5) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_BCCE4C(0, v6[2] + 1, 1, v6);
    *(_QWORD *)(v2 + v5) = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_BCCE4C((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *(_QWORD *)(v2 + v5) = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = sub_D0BF10;
  v10[5] = v4;
  return swift_continuation_await(v1);
}

uint64_t sub_CFB52C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_CFB578, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_CFB578()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t Player.engineDelegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 24));
}

double Player.engineDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  swift_beginAccess(v1 + 24, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  swift_unknownObjectRetain(a1);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(v1 + 24), swift_unknownObjectRelease(v3).n128_f64[0]);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

id (*Player.engineDelegate.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 24, a1, 33, 0);
  return sub_CFB698;
}

id sub_CFB698(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(*(_QWORD *)(a1 + 24) + 24));
  return result;
}

void sub_CFB6E8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v5 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

double sub_CFB764(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v5 = swift_getKeyPath(&unk_10A2BA8);
  v8 = v2;
  v6 = v2;
  swift_retain();
  static Published.subscript.setter(&v8, v3, KeyPath, v5);
  return sub_CFB7DC();
}

double sub_CFB7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  void *v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_D03D04();
  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v7 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter(&v15, v1, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  sub_D071AC(v15);

  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  type metadata accessor for MainActor(0);
  swift_retain(v1);
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_13B8BC8, 40, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  v12 = sub_C51ED8((uint64_t)v4, (uint64_t)&unk_1501898, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_CFB91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_CFB988, v7, v8);
}

uint64_t sub_CFB988()
{
  uint64_t v0;

  swift_release();
  sub_D06864();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.path.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v2 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t Player.$path.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore6Player__path, &qword_1500E78);
}

uint64_t Player.nowPlayingObserver.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for Player.NowPlayingObserver(0);
    v2 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    swift_retain();
    Player.NowPlayingObserver.init(player:)(v5);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t Player.NowPlayingObserver.__allocating_init(player:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  Player.NowPlayingObserver.init(player:)(a1);
  return v3;
}

uint64_t Player.nowPlaying.getter()
{
  return sub_1EB958((uint64_t)&unk_10A2BC8, (uint64_t)&unk_10A2BF0);
}

uint64_t Player.$nowPlaying.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1500AC0);
}

void sub_CFBB24(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A2C10);
  v5 = swift_getKeyPath(&unk_10A2C38);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_CFBBA0(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A2C10);
  v5 = swift_getKeyPath(&unk_10A2C38);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t Player.nowPlayingPath.getter()
{
  return sub_1EB958((uint64_t)&unk_10A2C10, (uint64_t)&unk_10A2C38);
}

uint64_t Player.$nowPlayingPath.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_1500E68);
}

uint64_t sub_CFBC3C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE *v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_8;
  KeyPath = swift_getKeyPath(&unk_10A2C58);
  v8 = swift_getKeyPath(&unk_10A2C80);
  v9 = a1;
  static Published.subscript.getter(&v25, v2, KeyPath, v8);
  swift_release();
  swift_release();
  v10 = v25;
  if (v25)
  {
    type metadata accessor for SharePlayTogetherSession(0);
    v11 = v9;
    v12 = static NSObject.== infix(_:_:)(v11, v10);

    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  else
  {

  }
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = v9;
  v15 = swift_retain();
  v16 = static MainActor.shared.getter(v15);
  v17 = (_QWORD *)swift_allocObject(&unk_13B8A88, 48, 7);
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v2;
  v17[5] = v14;
  sub_C51ED8((uint64_t)v6, (uint64_t)&unk_15017E8, (uint64_t)v17);
  swift_release();
LABEL_7:

LABEL_8:
  v18 = swift_getKeyPath(&unk_10A2C58);
  v19 = swift_getKeyPath(&unk_10A2C80);
  static Published.subscript.getter(&v25, v2, v18, v19);
  swift_release();
  swift_release();
  if (v25)
  {
    v20 = v25[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost];

  }
  else
  {
    v20 = 0;
  }
  v21 = swift_getKeyPath(&unk_10A2CA0);
  v22 = swift_getKeyPath(&unk_10A2CC8);
  LOBYTE(v25) = v20;
  swift_retain();
  return static Published.subscript.setter(&v25, v2, v21, v22);
}

uint64_t sub_CFBE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_CFBEDC, v8, v9);
}

uint64_t sub_CFBEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_10A2C58);
  v3 = swift_getKeyPath(&unk_10A2C80);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release();
  swift_release();
  v4 = *(void **)(v0 + 16);
  if (!v4)
    goto LABEL_5;
  if ((SharePlayTogetherSession.isEquivalent(to:)(*(_QWORD *)(v0 + 16)) & 1) == 0)
  {

LABEL_5:
    SharePlayTogetherSession.cleanup(notifyObservers:)(1);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
  v5 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers) = _swiftEmptyArrayStorage;

  v6 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t Player.sharePlayTogetherSession.getter()
{
  return sub_1EB958((uint64_t)&unk_10A2C58, (uint64_t)&unk_10A2C80);
}

void sub_CFBFDC(void *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  KeyPath = swift_getKeyPath(&unk_10A2C58);
  v4 = swift_getKeyPath(&unk_10A2C80);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release();
  swift_release();
  v5 = v9;
  v6 = swift_getKeyPath(&unk_10A2C58);
  v7 = swift_getKeyPath(&unk_10A2C80);
  v9 = a1;
  v8 = a1;
  swift_retain();
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_CFBC3C(v5);

}

uint64_t Player.$sharePlayTogetherSession.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_1500E60);
}

uint64_t sub_CFC0C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10A2CA0, (uint64_t)&unk_10A2CC8, a2);
}

uint64_t sub_CFC0D8(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10A2CA0, (uint64_t)&unk_10A2CC8);
}

uint64_t Player.isHostingSharePlayTogetherSession.getter()
{
  return sub_1EB9D4((uint64_t)&unk_10A2CA0, (uint64_t)&unk_10A2CC8);
}

uint64_t Player.$isHostingSharePlayTogetherSession.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_15004B0);
}

uint64_t sub_CFC114@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1F6468(a1, (uint64_t)&unk_10A2CE8, (uint64_t)&unk_10A2D10, a2);
}

uint64_t sub_CFC128(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_10A2CE8, (uint64_t)&unk_10A2D10);
}

uint64_t Player.isEligibleForHostingSharePlayTogetherSession.getter()
{
  return sub_1EB9D4((uint64_t)&unk_10A2CE8, (uint64_t)&unk_10A2D10);
}

double sub_CFC150(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v6;
  double result;
  _BYTE v8[24];

  swift_beginAccess(*a1 + *a4, v8, 33, 0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(a5);
  Published.projectedValue.getter(v6);
  *(_QWORD *)&result = swift_endAccess(v8).n128_u64[0];
  return result;
}

uint64_t sub_CFC1BC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, uint64_t *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  _BYTE v25[24];

  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = __chkstk_darwin(v15);
  v18 = &v25[-v17 - 8];
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v12 + 16);
  v19(&v25[-v17 - 8], a1, v11, v16);
  v20 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v19)(v14, v18, v11);
  swift_beginAccess(v20 + *a6, v25, 33, 0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(a7);
  Published.projectedValue.setter(v14, v21);
  v22 = swift_endAccess(v25);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v12 + 8))(v18, v11, v22);
}

uint64_t Player.$isEligibleForHostingSharePlayTogetherSession.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_15004B0);
}

id Player.supportsDelegation.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  id result;
  void *v8;
  id v9;
  id v10;
  int *v11;
  id v13;

  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v2 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter(&v13, v0, KeyPath, v2);
  swift_release(v2);
  *(_QWORD *)&v3 = swift_release(KeyPath).n128_u64[0];
  v4 = v13;
  v5 = objc_msgSend(v13, "route", v3);

  if (!v5)
    return 0;
  objc_opt_self(MPAVEndpointRoute);
  v6 = (void *)swift_dynamicCastObjCClass(v5);
  if (!v6)
    goto LABEL_12;
  result = objc_msgSend(v6, "endpointObject");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v8 = result;
  v9 = objc_msgSend(result, "externalDevice");

  if (!v9 || (v10 = objc_msgSend(v9, "deviceInfo"), v9, !v10))
  {
LABEL_12:

    return 0;
  }
  v11 = (int *)objc_msgSend(v10, "deviceClass");

  return (id)(v11 == (int *)((char *)&dword_4 + 3) || v11 == &dword_4);
}

void *Player.isInAnySharePlaySession.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  void *result;
  uint64_t v11;
  uint64_t v12;
  id v13;

  KeyPath = swift_getKeyPath(&unk_10A2BC8);
  v2 = swift_getKeyPath(&unk_10A2BF0);
  static Published.subscript.getter(&v13, v0, KeyPath, v2);
  swift_release(v2);
  *(_QWORD *)&v3 = swift_release(KeyPath).n128_u64[0];
  v4 = v13;
  if (!v13
    || (v5 = objc_msgSend(v13, "isSharedListeningSession", v3), v4, (v5 & 1) == 0))
  {
    v6 = swift_getKeyPath(&unk_10A2C58);
    v7 = swift_getKeyPath(&unk_10A2C80);
    static Published.subscript.getter(&v13, v0, v6, v7);
    swift_release(v7);
    *(_QWORD *)&v8 = swift_release(v6).n128_u64[0];
    v9 = v13;
    if (!v13)
      return 0;
    result = *(void **)((char *)v13 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
    if (!result)
    {
      __break(1u);
      return result;
    }
    if (objc_msgSend(result, "isPlaceholder", v8))
    {

      return 0;
    }
    if (*((_BYTE *)v9 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      v11 = swift_getKeyPath(&unk_10A2D30);
      v12 = swift_getKeyPath(&unk_10A2D58);
      static Published.subscript.getter(&v13, v9, v11, v12);
      swift_release(v12);
      swift_release(v11);

      return (void *)((uint64_t)v13 > 0);
    }

  }
  return &dword_0 + 1;
}

void Player.sharePlayTogether(with:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  __n128 v13;
  _QWORD v14[6];

  v4 = v3;
  v7 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken) = a1;
  v8 = a1;

  v9 = swift_allocObject(&unk_13B84C0, 24, 7);
  swift_weakInit(v9 + 16);
  v10 = (_QWORD *)swift_allocObject(&unk_13B8560, 48, 7);
  v10[2] = v9;
  v10[3] = v8;
  v10[4] = a2;
  v10[5] = a3;
  v14[4] = sub_D0BFA0;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_CFC7BC;
  v14[3] = &block_descriptor_63_9;
  v11 = _Block_copy(v14);
  v12 = v8;
  sub_A9DEC(a2, a3);
  v13 = swift_release();
  MRGroupSessionJoinSessionWithToken(v12, v11, v13);
  _Block_release(v11);
}

double sub_CFC6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t))
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  _BYTE v19[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken;
    v14 = *(void **)(Strong + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken);
    if (v14)
    {
      sub_4E684(0, &qword_1501888, MRGroupSessionToken_ptr);
      v15 = a5;
      v16 = v14;
      v17 = static NSObject.== infix(_:_:)(v15, v16);

      if ((v17 & 1) != 0)
      {
        v18 = *(void **)(v12 + v13);
        *(_QWORD *)(v12 + v13) = 0;

        if (a6)
          a6(a3);
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_CFC7BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);

}

void Player.requestSharePlayTogether(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26[6];

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v7 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter(v26, v3, KeyPath, v7);
  swift_release();
  *(_QWORD *)&v8 = swift_release().n128_u64[0];
  v9 = v26[0];
  v10 = objc_msgSend(v26[0], "route", v8);

  if (v10)
  {
    objc_opt_self(MPAVEndpointRoute);
    v11 = (void *)swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = objc_msgSend(v11, "endpointObject");
      if (!v12)
      {
        __break(1u);
        return;
      }
      v13 = v12;
      v14 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
      v22 = (void *)static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
      v23 = swift_allocObject(&unk_13B84C0, 24, 7);
      swift_weakInit(v23 + 16);
      v24 = (_QWORD *)swift_allocObject(&unk_13B85B0, 40, 7);
      v24[2] = v23;
      v24[3] = a1;
      v24[4] = a2;
      v26[4] = sub_D0BFE0;
      v26[5] = v24;
      v26[0] = _NSConcreteStackBlock;
      v26[1] = (id)1107296256;
      v26[2] = sub_4DB4D8;
      v26[3] = &block_descriptor_70_3;
      v25 = _Block_copy(v26);
      sub_A9DEC(a1, a2);
      objc_msgSend(v13, "requestGroupSessionWithQueue:completion:", v22, v25, swift_release().n128_f64[0]);
      _Block_release(v25);

    }
  }
}

double sub_CFCA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  double result;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE v23[24];

  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v12);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v23, 0, 0);
  Strong = swift_weakLoadStrong(a4);
  if (Strong)
  {
    v17 = Strong;
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
    type metadata accessor for MainActor(0);
    swift_retain();
    sub_A9DEC(a5, a6);
    swift_bridgeObjectRetain();
    swift_errorRetain(a3);
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_13B8BA0, 80, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v17;
    v21[5] = a5;
    v21[6] = a6;
    v21[7] = a1;
    v21[8] = a2;
    v21[9] = a3;
    sub_C51ED8((uint64_t)v14, (uint64_t)&unk_1501880, (uint64_t)v21);
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_CFCB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[6] = a8;
  v8[7] = v14;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[8] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_CFCBEC, v11, v12);
}

uint64_t sub_CFCBEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_D06864();
  if (v1)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 24))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.getNowPlaying()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[17] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[18] = v2;
  v1[19] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[20] = v4;
  v1[21] = v5;
  return swift_task_switch(sub_CFCCA8, v4, v5);
}

uint64_t sub_CFCCA8()
{
  uint64_t v0;
  char *v1;
  void *v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_D053BC();
  v2 = *(void **)&v1[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];
  *(_QWORD *)(v0 + 176) = v2;
  v3 = v2;

  v5 = static MainActor.shared.getter(v4);
  *(_QWORD *)(v0 + 184) = v5;
  if (v5)
  {
    ObjectType = swift_getObjectType();
    v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  return swift_task_switch(sub_CFCD34, v7, v9);
}

uint64_t sub_CFCD34()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;

  v1 = v0 + 2;
  v2 = (void *)v0[22];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_CFCE24;
  v3 = swift_continuation_init(v0 + 2, 1);
  v4 = swift_allocObject(&unk_13B8600, 24, 7);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  *(_QWORD *)(v4 + 16) = v3;
  v5[4] = sub_D0BFFC;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_21B54C;
  v5[3] = &block_descriptor_76_1;
  v6 = _Block_copy(v5);
  v7 = objc_msgSend(v2, "performWithCompletion:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  swift_unknownObjectRelease(v7);
  return swift_continuation_await(v1);
}

uint64_t sub_CFCE24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_CFD078;
  }
  else
  {
    v2[25] = v2[16];
    swift_release();
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_CFCEA0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_CFCEA0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  unsigned int v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 152));
  if (v1)
  {
    v2 = *(id *)(v0 + 200);
    v3 = objc_msgSend(v2, "playerPath");
    v4 = objc_msgSend(v3, "isSystemMusicPath");

    if (v4
      || (v5 = objc_msgSend(v2, "playerPath"),
          v6 = objc_msgSend(v5, "representedBundleID"),
          v5,
          !v6))
    {
      v7 = *(_QWORD *)(v0 + 200);
    }
    else
    {

      v7 = 0;
    }
    v8 = *(_QWORD *)(v0 + 136);
    KeyPath = swift_getKeyPath(&unk_10A2BC8);
    v10 = swift_getKeyPath(&unk_10A2BF0);
    *(_QWORD *)(v0 + 80) = v7;
    swift_retain(v8);
    static Published.subscript.setter(v0 + 80, v8, KeyPath, v10);
    v11 = objc_msgSend(v2, "playerPath");
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 136);
    v13 = swift_getKeyPath(&unk_10A2BC8);
    v14 = swift_getKeyPath(&unk_10A2BF0);
    *(_QWORD *)(v0 + 80) = 0;
    swift_retain(v12);
    static Published.subscript.setter(v0 + 80, v12, v13, v14);
    v11 = 0;
  }
  v15 = *(void **)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = swift_getKeyPath(&unk_10A2C10);
  v18 = swift_getKeyPath(&unk_10A2C38);
  *(_QWORD *)(v0 + 80) = v11;
  swift_retain(v16);
  static Published.subscript.setter(v0 + 80, v16, v17, v18);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
}

uint64_t sub_CFD078()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 152));

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_CFD0BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  id v10;
  void *v11;

  if (a2)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a2;
    swift_errorRetain(a2);
    return swift_continuation_throwingResumeWithError(a3, v6);
  }
  else
  {
    v11 = a1;
    v9 = *(_QWORD *)(*(_QWORD *)(a3 + 64) + 40);
    v10 = a1;
    sub_5C090((uint64_t)&v11, v9, &qword_1500EA0);
    return swift_continuation_throwingResume(a3);
  }
}

void sub_CFD168()
{
  uint64_t v0;
  char *v1;
  id v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unsigned int v14;
  id v15;
  void *v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  char *v20;
  id v21;
  _BYTE *v22;
  char *v23;
  id v24;
  char **v25;
  uint64_t v26;
  _BYTE v27[24];

  v1 = sub_D053BC();
  v2 = *(id *)&v1[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];

  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v27, 0, 0);
  v4 = (void *)v3[1];
  v5 = v3[2];
  v6 = (id)*v3;
  v7 = v4;
  v8 = swift_bridgeObjectRetain();
  v9 = (id)sub_D0C004(v8);
  v11 = v10;

  swift_bridgeObjectRelease(v5);
  v12 = objc_msgSend(v2, "playingItemProperties");
  if (v12
    && (v13 = v12, v14 = objc_msgSend(v12, "containsPropertySet:", *v3), v13, v14)
    && (v15 = objc_msgSend(v2, "queueSectionProperties")) != 0)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, "containsPropertySet:", v3[1]);

    v18 = v17 ^ 1;
  }
  else
  {
    v18 = 1;
  }
  if (objc_msgSend(v2, "tracklistRange") != v9 || (v18 & 1) != 0 || v19 != v11)
  {
    objc_msgSend(v2, "setPlayingItemProperties:", *v3);
    objc_msgSend(v2, "setQueueItemProperties:", *v3);
    objc_msgSend(v2, "setQueueSectionProperties:", v3[1]);
    objc_msgSend(v2, "setTracklistRange:", v9, v11);
    v20 = sub_D03D04();
    v21 = *(id *)&v20[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];

    objc_msgSend(v21, "setPlayingItemProperties:", *v3);
    v22 = (_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState, &v26, 0, 0);
    if (*v22 == 2)
    {
      v23 = sub_D053BC();
      v24 = *(id *)&v23[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller];

      v25 = &selRef_setNeedsReloadForSignificantRequestChange;
      if (!v18)
        v25 = &selRef_setNeedsReload;
      objc_msgSend(v24, *v25);

    }
  }

}

uint64_t Player.NowPlayingConfiguration.tracklistRange.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D0C004(a3);
}

id Player.nowPlayingConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  _BYTE v7[24];

  v1 = v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v7, 0, 0);
  v2 = *(id *)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(id *)v1;
  v5 = v3;
  swift_bridgeObjectRetain();
  return v2;
}

double Player.nowPlayingConfiguration.setter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  double result;
  _BYTE v13[24];

  v7 = v3 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v3 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v13, 1, 0);
  v8 = *(void **)v7;
  v9 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
  v10 = a1;
  v11 = a2;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  sub_CFD168();

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void (*Player.nowPlayingConfiguration.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, a1, 33, 0);
  return sub_CFD52C;
}

void sub_CFD52C(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_CFD168();
}

Swift::Void __swiftcall Player.NowPlayingConfiguration.insert(_:)(__C::MPCPlayerRequestTracklistRange a1)
{
  sub_CFD584(a1.reverseCount, a1.forwardCount);
}

void sub_CFD584(Swift::UInt a1, Swift::UInt a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_6;
  v7 = sub_21C2C4(a1, a2);
  if ((v8 & 1) == 0)
  {
    v6 = *v3;
LABEL_6:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v14 = *v3;
    *v3 = 0x8000000000000000;
    v12 = 1;
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  v10 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v14 = *v3;
    *v3 = 0x8000000000000000;
    v12 = v10;
LABEL_7:
    sub_C27A48(v12, a1, a2, isUniquelyReferenced_nonNull_native);
    v13 = *v3;
    *v3 = v14;
    swift_bridgeObjectRelease(v13);
    return;
  }
  __break(1u);
}

uint64_t Player.NowPlayingConfiguration.BadCountedSet.insert(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  Dictionary.subscript.getter(&v16, v6, *v2, v4, &type metadata for Int, v10);
  if ((v17 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    v12 = 1;
LABEL_4:
    v16 = v12;
    v17 = 0;
    v15 = type metadata accessor for Dictionary(0, v4, &type metadata for Int, v10, v11);
    return Dictionary.subscript.setter(&v16, v8, v15);
  }
  v13 = v16;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v12 = v13 + 1;
  if (!__OFADD__(v13, 1))
    goto LABEL_4;
  __break(1u);
  return result;
}

Swift::Void __swiftcall Player.NowPlayingConfiguration.remove(_:)(__C::MPCPlayerRequestTracklistRange a1)
{
  sub_CFD784(a1.reverseCount, a1.forwardCount);
}

double sub_CFD784(Swift::UInt a1, Swift::UInt a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  Swift::UInt v5;
  unint64_t v7;
  double result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = a2;
    v7 = sub_21C2C4(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v7);
      v11 = v10 - 1;
      if (__OFSUB__(v10, 1))
      {
        __break(1u);
      }
      else
      {
        if (v11 > 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
          v19 = *v3;
          *v3 = 0x8000000000000000;
          sub_C27A48(v11, a1, v5, isUniquelyReferenced_nonNull_native);
          v13 = *v3;
          *v3 = v19;
LABEL_9:
          *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
          return result;
        }
        v14 = sub_21C2C4(a1, v5);
        if ((v15 & 1) == 0)
          return result;
        v5 = v14;
        v16 = swift_isUniquelyReferenced_nonNull_native(*v3);
        v17 = *v3;
        v18 = *v3;
        *v3 = 0x8000000000000000;
        if ((v16 & 1) != 0)
        {
LABEL_8:
          sub_D0AFFC(v5, v17);
          v13 = *v3;
          *v3 = v17;
          goto LABEL_9;
        }
      }
      sub_D3E560();
      v17 = v18;
      goto LABEL_8;
    }
  }
  return result;
}

_QWORD *Player.NowPlayingConfiguration.BadCountedSet.remove(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  result = Dictionary.subscript.getter(&v15, v6, *v2, v4, &type metadata for Int, v10);
  if (v16 != 1)
  {
    v12 = v15 - 1;
    if (__OFSUB__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      if (v12 < 1)
      {
        v15 = 0;
        v16 = 1;
      }
      else
      {
        v15 = v12;
        v16 = 0;
      }
      v14 = type metadata accessor for Dictionary(0, v4, &type metadata for Int, v10, v13);
      return (_QWORD *)Dictionary.subscript.setter(&v15, v8, v14);
    }
  }
  return result;
}

__n128 Player.NowPlayingConfiguration.BadCountedSet.makeIterator()@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  _OWORD v9[2];
  uint64_t v10;

  v6 = swift_bridgeObjectRetain();
  _NativeDictionary.makeIterator()(v9, v6, a1, &type metadata for Int, a2);
  v7 = v10;
  result = (__n128)v9[1];
  *(_OWORD *)a3 = v9[0];
  *(__n128 *)(a3 + 16) = result;
  *(_QWORD *)(a3 + 32) = v7;
  return result;
}

double sub_CFD9F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  Player.NowPlayingConfiguration.BadCountedSet.makeIterator()(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)v5);
  swift_bridgeObjectRelease();
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_CFDA48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = j___ss30_copySequenceToContiguousArrayys0dE0Vy7ElementQzGxSTRzlF(v2, a1, a2);
  swift_bridgeObjectRelease(*v2);
  return v3;
}

uint64_t sub_CFDA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

BOOL Player.canPerform(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_D0B4A4((uint64_t)v4, v1, v2, v3);
}

uint64_t Player.canPerform(anyOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = sub_D01B94(a1, a2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
    if (v5)
      v6 = v5;
    else
      v6 = 0;
    if (v5)
      v7 = a1;
    else
      v7 = 0;
    if (v7)
      v8 = (*(uint64_t (**)(void *))(v6 + 16))(v4);
    else
      v8 = 0;

  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_CFDB58(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v4 + 360) = v3;
  *(double *)(v4 + 352) = a3;
  *(_QWORD *)(v4 + 336) = a1;
  *(_QWORD *)(v4 + 344) = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  *(_QWORD *)(v4 + 368) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE0);
  *(_QWORD *)(v4 + 376) = v6;
  *(_QWORD *)(v4 + 384) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501858);
  *(_QWORD *)(v4 + 392) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 400) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 408) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 416) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 424) = swift_task_alloc(v10);
  v11 = *(_QWORD *)(type metadata accessor for Player.CommandOptions(0) - 8);
  *(_QWORD *)(v4 + 432) = v11;
  v12 = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v4 + 440) = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 448) = swift_task_alloc(v13);
  *(_QWORD *)(v4 + 456) = swift_task_alloc(v13);
  v14 = type metadata accessor for UUID(0);
  *(_QWORD *)(v4 + 464) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 472) = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 480) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 488) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 496) = swift_task_alloc(v16);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 504) = v17;
  *(_QWORD *)(v4 + 512) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 520) = v19;
  *(_QWORD *)(v4 + 528) = v20;
  return swift_task_switch(sub_CFDCDC, v19, v20);
}

uint64_t sub_CFDCDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD **)(v0 + 336);
  v3 = v2[3];
  v4 = v2[4];
  v5 = __swift_project_boxed_opaque_existential_1(v2, v3);
  if (sub_D0B4A4((uint64_t)v5, v1, v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 336);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
    v8 = swift_allocObject(v7, 72, 7);
    *(_QWORD *)(v0 + 576) = v8;
    *(_OWORD *)(v8 + 16) = xmmword_105B360;
    sub_55D1C(v6, v8 + 32);
    v9 = (_QWORD *)swift_task_alloc(dword_1501074);
    *(_QWORD *)(v0 + 584) = v9;
    *v9 = v0;
    v9[1] = sub_CFE868;
    return sub_CFF480(v8, *(_QWORD *)(v0 + 344));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 496);
    v12 = *(_QWORD *)(v0 + 464);
    v13 = *(_QWORD *)(v0 + 344);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
    *(_QWORD *)(v0 + 536) = v14;
    v14(v11, v13, v12);
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v15 = type metadata accessor for Logger(0);
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_15822C0);
    *(_QWORD *)(v0 + 544) = v16;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "‚ï≠ ‚è±Ô∏è Await for command", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }
    v75 = v0 + 80;
    v20 = *(_QWORD *)(v0 + 336);

    v21 = sub_55D1C(v20, v0 + 160);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v77 = v25;
      *(_DWORD *)v24 = 136446210;
      sub_55D1C(v0 + 160, v0 + 240);
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
      v27 = (char *)String.init<A>(describing:)(v0 + 240, v26);
      v29 = v28;
      *(_QWORD *)(v24 + 4) = sub_BA95EC(v27, v28, &v77);
      swift_bridgeObjectRelease(v29);
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 160));
      _os_log_impl(&dword_0, v22, v23, "| %{public}s", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 160));
    }

    v30 = sub_D0D3E8(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 456));
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    v33 = os_log_type_enabled(v31, v32);
    v34 = *(_QWORD *)(v0 + 456);
    if (v33)
    {
      v35 = swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v77 = v36;
      *(_DWORD *)v35 = 136446210;
      v37 = (char *)Player.CommandOptions.description.getter(v36);
      v39 = v38;
      *(_QWORD *)(v35 + 4) = sub_BA95EC(v37, v38, &v77);
      swift_bridgeObjectRelease(v39);
      sub_D0D42C(v34);
      _os_log_impl(&dword_0, v31, v32, "‚ï∞ options=%{public}s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      sub_D0D42C(*(_QWORD *)(v0 + 456));
    }

    sub_55D1C(*(_QWORD *)(v0 + 336), v75);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_15018F0);
    v42 = swift_dynamicCast(v0 + 120, v75, v40, v41, 6);
    v43 = *(_QWORD *)(v0 + 360);
    if (v42)
    {
      v44 = v0 + 304;
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 120));
      v45 = OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
    }
    else
    {
      v44 = v0 + 280;
      v45 = OBJC_IVAR____TtC9MusicCore6Player__playerResponse;
    }
    swift_beginAccess(v43 + v45, v44, 33, 0);
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
    Published.projectedValue.getter(v46);
    swift_endAccess(v44);
    v47 = *(_QWORD *)(v0 + 448);
    v72 = v47;
    v48 = *(_QWORD *)(v0 + 424);
    v74 = *(_QWORD *)(v0 + 432);
    v49 = *(_QWORD *)(v0 + 416);
    v73 = *(_QWORD *)(v0 + 408);
    v50 = *(_QWORD *)(v0 + 392);
    v51 = *(_QWORD *)(v0 + 400);
    v70 = v50;
    v71 = v49;
    v52 = *(_QWORD *)(v0 + 376);
    v53 = *(_QWORD *)(v0 + 384);
    v54 = *(_QWORD *)(v0 + 360);
    v55 = *(_QWORD *)(v0 + 368);
    v76 = *(_QWORD *)(v0 + 440);
    v68 = *(_QWORD *)(v0 + 336);
    v69 = *(_QWORD *)(v0 + 344);
    v56 = sub_5C150((unint64_t *)&qword_1500760, &qword_1500FE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    AsyncPublisher.init(_:)(v53, v52, v56);
    v57 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v55, 1, 1, v57);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v49, v48, v50);
    sub_55D1C(v68, v0 + 200);
    sub_D0D3E8(v69, v47);
    v58 = v54;
    swift_retain(v54);
    v60 = static MainActor.shared.getter(v59);
    v61 = *(unsigned __int8 *)(v51 + 80);
    v62 = (v61 + 32) & ~v61;
    v63 = (v73 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = (v63 + 47) & 0xFFFFFFFFFFFFFFF8;
    v65 = *(unsigned __int8 *)(v74 + 80);
    v66 = (v65 + v64 + 8) & ~v65;
    v67 = swift_allocObject(&unk_13B8D08, v66 + v76, v61 | v65 | 7);
    *(_QWORD *)(v67 + 16) = v60;
    *(_QWORD *)(v67 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v67 + v62, v71, v70);
    sub_8B15C((__int128 *)(v0 + 200), v67 + v63);
    *(_QWORD *)(v67 + v64) = v58;
    sub_5C04C(v72, v67 + v66, type metadata accessor for Player.CommandOptions);
    *(_QWORD *)(v0 + 552) = sub_D352F8(v55, (uint64_t)&unk_1501900, v67);
    return swift_task_switch(sub_CFE2F8, 0, 0);
  }
}

uint64_t sub_CFE2F8()
{
  double *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;

  v1 = *((_QWORD *)v0 + 69);
  v2 = v0[44];
  *((_QWORD *)v0 + 7) = v0 + 41;
  *((_QWORD *)v0 + 2) = v0;
  *((_QWORD *)v0 + 3) = sub_CFE360;
  v3 = swift_continuation_init(v0 + 2, 1);
  sub_D08FD0(v3, v1, v2);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_CFE360(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 560) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[66];
    v5 = v2[65];
    v6 = sub_CFE638;
  }
  else
  {
    v2[71] = v2[41];
    v4 = v2[66];
    v5 = v2[65];
    v6 = sub_CFE3DC;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_CFE3DC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 536);
  v3 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = swift_release(*(_QWORD *)(v0 + 512));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 552);
  v11 = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 464);
  v14 = *(_QWORD *)(v0 + 472);
  v15 = *(_QWORD *)(v0 + 424);
  v36 = *(_QWORD *)(v0 + 400);
  v37 = *(_QWORD *)(v0 + 392);
  if (v9)
  {
    v35 = *(_QWORD *)(v0 + 424);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v38 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v13, v18);
    v34 = v12;
    v21 = v20;
    *(_QWORD *)(v16 + 4) = sub_BA95EC(v19, v20, &v38);
    swift_bridgeObjectRelease(v21);
    v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(v11, v13);
    _os_log_impl(&dword_0, v7, v8, "‚è±Ô∏è‚úÖ Awaiting for command succeeded (%{public}s)", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release(v10);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    v22(v34, v13);
  }
  else
  {
    swift_release(v10);

    v23 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v23(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v15, v37);
    v23(v12, v13);
  }
  v24 = *(_QWORD *)(v0 + 568);
  v25 = *(_QWORD *)(v0 + 488);
  v26 = *(_QWORD *)(v0 + 480);
  v28 = *(_QWORD *)(v0 + 448);
  v27 = *(_QWORD *)(v0 + 456);
  v30 = *(_QWORD *)(v0 + 416);
  v29 = *(_QWORD *)(v0 + 424);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
}

uint64_t sub_CFE638()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 536);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 552));
  v6 = swift_release(v2);
  v7 = v1(v4, v3, v5, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 464);
  if (v10)
  {
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v36 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v17 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    v19 = v18;
    *(_QWORD *)(v14 + 4) = sub_BA95EC(v17, v18, &v36);
    swift_bridgeObjectRelease(v19);
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);
    _os_log_impl(&dword_0, v8, v9, "‚åõÔ∏è‚ùå Timed out waiting for command (%{public}s)", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 464));
  }

  v21 = *(_QWORD *)(v0 + 496);
  v22 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 424);
  v24 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 400);
  swift_willThrow(v26);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  v20(v21, v22);
  v27 = *(_QWORD *)(v0 + 488);
  v28 = *(_QWORD *)(v0 + 480);
  v30 = *(_QWORD *)(v0 + 448);
  v29 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 416);
  v31 = *(_QWORD *)(v0 + 424);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CFE868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 584);
  v3[74] = a1;
  v3[75] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[66];
    v6 = v3[65];
    v7 = sub_CFEA34;
  }
  else
  {
    swift_bridgeObjectRelease(v3[72]);
    v5 = v3[66];
    v6 = v3[65];
    v7 = sub_CFE8E8;
  }
  return swift_task_switch(v7, v6, v5);
}

void sub_CFE8E8()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 592);
  swift_release(*(_QWORD *)(v0 + 512));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 592);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 592);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 592);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 592));
    v3 = *(_QWORD *)(v0 + 592);
    goto LABEL_6;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
  {
    v3 = *(_QWORD *)(v0 + 592);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    v7 = *(_QWORD *)(v0 + 488);
    v8 = *(_QWORD *)(v0 + 480);
    v10 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 456);
    v12 = *(_QWORD *)(v0 + 416);
    v11 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 384);
    v14 = *(_QWORD *)(v0 + 368);
    swift_task_dealloc(*(_QWORD *)(v0 + 496));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_CFEA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 576);
  swift_release(*(_QWORD *)(v0 + 512));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CFEAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v7[19] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501860);
  v7[24] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[25] = v9;
  v7[26] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[27] = v10;
  v7[28] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[29] = v12;
  v7[30] = v13;
  return swift_task_switch(sub_CFEB94, v12, v13);
}

uint64_t sub_CFEB94()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501858);
  AsyncPublisher.makeAsyncIterator()(v1);
  v0[31] = static MainActor.shared.getter(v2);
  v3 = sub_5C150(&qword_1501868, &qword_1501860, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[32] = v4;
  *v4 = v0;
  v4[1] = sub_CFEC44;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v0[24], v3);
}

uint64_t sub_CFEC44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 248);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_CFEFAC;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_CFED08;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_CFED08()
{
  _QWORD *v0;

  swift_release();
  v0[34] = v0[17];
  return swift_task_switch(sub_CFED48, v0[29], v0[30]);
}

uint64_t sub_CFED48(__n128 a1)
{
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = *(char **)(v1 + 272);
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v15 = *(_QWORD **)(v1 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 192));
    swift_release();
    *v15 = 0;
    swift_task_dealloc(*(_QWORD *)(v1 + 208));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    if (v2)
    {
      sub_55D1C(*(_QWORD *)(v1 + 168), v1 + 56);
      v3 = v2;
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501938);
      if (swift_dynamicCast(v1 + 96, v1 + 56, v4, v5, 6))
      {
        sub_8B15C((__int128 *)(v1 + 96), v1 + 16);
        v6 = *(_QWORD *)(v1 + 40);
        v7 = *(_QWORD *)(v1 + 48);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v6);
        v8 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 24))(v3, v6, v7);
        v9 = *(void **)(v1 + 272);
        if (v8)
        {
          v10 = *(_QWORD *)(v1 + 168);

          __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v1 + 16));
          sub_15C188(v9);
          v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
          v12 = swift_allocObject(v11, 72, 7);
          *(_QWORD *)(v1 + 280) = v12;
          *(_OWORD *)(v12 + 16) = xmmword_105B360;
          sub_55D1C(v10, v12 + 32);
          v13 = (_QWORD *)swift_task_alloc(dword_1501074);
          *(_QWORD *)(v1 + 288) = v13;
          *v13 = v1;
          v13[1] = sub_CFF00C;
          return sub_CFF480(v12, *(_QWORD *)(v1 + 184));
        }
        __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v1 + 16));
        sub_15C188(v9);
        v17 = v9;
      }
      else
      {
        v16 = *(void **)(v1 + 272);
        *(_OWORD *)(v1 + 96) = 0u;
        *(_OWORD *)(v1 + 112) = 0u;
        *(_QWORD *)(v1 + 128) = 0;
        sub_56024(v1 + 96, &qword_1501940);
        sub_15C188(v16);
        v17 = v16;
      }
      sub_15C188(v17);
    }
    *(_QWORD *)(v1 + 248) = static MainActor.shared.getter(a1);
    v18 = sub_5C150(&qword_1501868, &qword_1501860, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v1 + 256) = v19;
    *v19 = v1;
    v19[1] = sub_CFEC44;
    return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 136, *(_QWORD *)(v1 + 192), v18);
  }
}

uint64_t sub_CFEFAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 264);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v2 = swift_dynamicCast(v1, v0 + 144, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_CFF00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease();
  if (v1)
    v5 = sub_CFF194;
  else
    v5 = sub_CFF084;
  return swift_task_switch(v5, v3[29], v3[30]);
}

void sub_CFF084()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release();
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_3;
LABEL_11:
    sub_15C188(*(id *)(v0 + 272));
    v3 = swift_bridgeObjectRelease();
    v2 = 0;
    goto LABEL_12;
  }
  if (*(uint64_t *)(v0 + 296) < 0)
    v4 = *(_QWORD *)(v0 + 296);
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 296));
    goto LABEL_6;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 296) + 32);
LABEL_6:
    sub_15C188(*(id *)(v0 + 272));
    v3 = swift_bridgeObjectRelease();
LABEL_12:
    v7 = *(_QWORD *)(v0 + 200);
    v6 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 192);
    **(_QWORD **)(v0 + 152) = v2;
    (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v6, v8, v3);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

uint64_t sub_CFF194()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  swift_release();
  sub_15C188(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CFF1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[6] = v6;
  v3[7] = v7;
  return swift_task_switch(sub_CFF26C, v6, v7);
}

uint64_t sub_CFF26C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
  v3 = swift_allocObject(v2, 72, 7);
  v0[8] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_105B360;
  sub_55D1C(v1, v3 + 32);
  v4 = (_QWORD *)swift_task_alloc(dword_1501074);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_CFF2F4;
  return sub_CFF480(v3, v0[3]);
}

uint64_t sub_CFF2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  v3[10] = a1;
  v3[11] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[6];
    v6 = v3[7];
    v7 = sub_CFF440;
  }
  else
  {
    swift_bridgeObjectRelease(v3[8]);
    v5 = v3[6];
    v6 = v3[7];
    v7 = sub_CFF368;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_CFF368()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 40));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 80);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 80);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 80);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 80));
    v3 = *(_QWORD *)(v0 + 80);
    goto LABEL_6;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
  {
    v3 = *(_QWORD *)(v0 + 80);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_CFF440()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_CFF480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v4 = type metadata accessor for Player.CommandOptions(0);
  v3[28] = v4;
  v3[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v3[30] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[31] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[32] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v8);
  v3[34] = swift_task_alloc(v8);
  v3[35] = swift_task_alloc(v8);
  v3[36] = swift_task_alloc(v8);
  v3[37] = swift_task_alloc(v8);
  v3[38] = swift_task_alloc(v8);
  v3[39] = swift_task_alloc(v8);
  v3[40] = swift_task_alloc(v8);
  v3[41] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v3[42] = v9;
  v3[43] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v3[44] = v11;
  v3[45] = v12;
  return swift_task_switch(sub_CFF5A8, v11, v12);
}

uint64_t sub_CFF5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  _BYTE *v53;
  __n128 v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _DWORD *v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  _QWORD *v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 200) + 16))
  {
    v1 = *(_QWORD *)(v0 + 328);
    v2 = *(_QWORD *)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 208);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
    *(_QWORD *)(v0 + 368) = v4;
    v4(v1, v3, v2);
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v6 = *(_QWORD *)(v0 + 320);
    v5 = *(_QWORD *)(v0 + 328);
    v7 = *(_QWORD *)(v0 + 240);
    v8 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 376) = __swift_project_value_buffer(v8, (uint64_t)qword_15822C0);
    v77 = v4;
    v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v4)(v6, v5, v7);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 320);
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 248);
    if (v12)
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v79 = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = (char *)UUID.uuidString.getter(v17);
      v20 = v19;
      *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, &v79);
      swift_bridgeObjectRelease(v20);
      v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v13, v14);
      _os_log_impl(&dword_0, v10, v11, "‚ï≠ Will perform commands %{public}s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {
      v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v21(v13, v14);

    }
    *(_QWORD *)(v0 + 384) = v21;
    v32 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter();
    v35 = os_log_type_enabled(v33, v34);
    v36 = *(_QWORD *)(v0 + 200);
    v78 = v21;
    if (v35)
    {
      v37 = swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v79 = v38;
      *(_DWORD *)v37 = 136446210;
      swift_bridgeObjectRetain();
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
      v40 = (char *)Array.description.getter(v36, v39);
      v42 = v41;
      swift_bridgeObjectRelease(v36);
      *(_QWORD *)(v37 + 4) = sub_BA95EC(v40, v42, &v79);
      swift_bridgeObjectRelease_n(v36, 2);
      swift_bridgeObjectRelease(v42);
      _os_log_impl(&dword_0, v33, v34, "| %{public}s", (uint8_t *)v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v36, 2);
    }
    v43 = sub_D0D3E8(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232));
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter();
    v46 = os_log_type_enabled(v44, v45);
    v47 = *(_QWORD *)(v0 + 232);
    if (v46)
    {
      v48 = swift_slowAlloc(12, -1);
      v49 = swift_slowAlloc(32, -1);
      v79 = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = (char *)Player.CommandOptions.description.getter(v49);
      v52 = v51;
      *(_QWORD *)(v48 + 4) = sub_BA95EC(v50, v51, &v79);
      swift_bridgeObjectRelease(v52);
      sub_D0D42C(v47);
      _os_log_impl(&dword_0, v44, v45, "‚ï∞ options=%{public}s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      sub_D0D42C(*(_QWORD *)(v0 + 232));
    }

    v53 = (_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    v54 = swift_beginAccess(v53, v0 + 128, 0, 0);
    if (*v53 != 2)
    {
      v55 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))v77)(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240), v54);
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.default.getter();
      v58 = os_log_type_enabled(v56, v57);
      v59 = *(_QWORD *)(v0 + 312);
      v60 = *(_QWORD *)(v0 + 240);
      if (v58)
      {
        v61 = swift_slowAlloc(12, -1);
        v62 = swift_slowAlloc(32, -1);
        v79 = v62;
        *(_DWORD *)v61 = 136446210;
        v63 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v64 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v60, v63);
        v66 = v65;
        *(_QWORD *)(v61 + 4) = sub_BA95EC(v64, v65, &v79);
        swift_bridgeObjectRelease(v66);
        v78(v59, v60);
        _os_log_impl(&dword_0, v56, v57, "‚ï≠ Commands (%{public}s)", (uint8_t *)v61, 0xCu);
        swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v61, -1, -1);
      }
      else
      {
        v78(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 240));
      }

      v67 = swift_retain_n(*(_QWORD *)(v0 + 216), 2);
      v68 = Logger.logObject.getter(v67);
      v69 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (_DWORD *)swift_slowAlloc(12, -1);
        v79 = swift_slowAlloc(32, -1);
        *v70 = 136446210;
        __asm { BR              X10 }
      }
      v71 = *(_QWORD *)(v0 + 216);

      v72 = swift_release_n(v71, 2);
      v73 = Logger.logObject.getter(v72);
      v74 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v75 = 0;
        _os_log_impl(&dword_0, v73, v74, "‚ï∞ Awaiting on engine to be ready", v75, 2u);
        swift_slowDealloc(v75, -1, -1);
      }

    }
    v76 = (_QWORD *)swift_task_alloc(dword_1500F84);
    *(_QWORD *)(v0 + 392) = v76;
    *v76 = v0;
    v76[1] = sub_CFFDCC;
    return Player.startEngineIfNeeded()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 344));
    v22 = *(_QWORD *)(v0 + 320);
    v24 = *(_QWORD *)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 288);
    v25 = *(_QWORD *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 272);
    v27 = *(_QWORD *)(v0 + 280);
    v29 = *(_QWORD *)(v0 + 264);
    v30 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 328));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_CFFDCC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  return swift_task_switch(sub_CFFE18, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_CFFE18()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  void *v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, __n128);
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  NSString v51;
  id v52;
  __n128 v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107[2];

  v1 = *(void **)(*(_QWORD *)(v0 + 208) + *(int *)(*(_QWORD *)(v0 + 224) + 32));
  *(_QWORD *)(v0 + 400) = v1;
  if (v1)
  {
    v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
    v3 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 304);
    v5 = *(_QWORD *)(v0 + 240);
    v6 = objc_allocWithZone((Class)MPCPlayerRequest);
    v7 = v1;
    v8 = objc_msgSend(v6, "init");
    *(_QWORD *)(v0 + 408) = v8;
    v9 = v2(v4, v3, v5);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 240);
    if (v12)
    {
      v105 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v15 = swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v107[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v18 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v14, v17);
      v19 = v8;
      v20 = v7;
      v22 = v21;
      *(_QWORD *)(v15 + 4) = sub_BA95EC(v18, v21, v107);
      v23 = v22;
      v7 = v20;
      v8 = v19;
      swift_bridgeObjectRelease(v23);
      v105(v13, v14);
      _os_log_impl(&dword_0, v10, v11, "‚ï≠ Commands (%{public}s)", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 240));
    }

    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_0, v44, v45, "‚ï∞ üîä Resolving specified route", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    v47 = (void *)objc_opt_self(MPCPlayerPath);
    v48 = qword_14F9F68;
    v49 = v7;
    if (v48 != -1)
      swift_once(&qword_14F9F68, sub_CDAB10);
    v50 = *(_QWORD *)(v0 + 216);
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v47, "systemMusicPathWithRoute:playerID:", v49, v51);

    objc_msgSend(v8, "setPlayerPath:", v52);
    objc_msgSend(v8, "setPlayingItemProperties:", *(_QWORD *)(v50 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration), swift_beginAccess(v50 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v0 + 152, 0, 0).n128_f64[0]);
    v54 = static MainActor.shared.getter(v53);
    *(_QWORD *)(v0 + 416) = v54;
    if (v54)
    {
      ObjectType = swift_getObjectType();
      v56 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v58 = v57;
    }
    else
    {
      v56 = 0;
      v58 = 0;
    }
    return swift_task_switch(sub_D0071C, v56, v58);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 216);
    KeyPath = swift_getKeyPath(&unk_10A3188);
    v26 = swift_getKeyPath(&unk_10A31B0);
    static Published.subscript.getter((_QWORD *)(v0 + 192), v24, KeyPath, v26);
    swift_release(KeyPath);
    v27 = swift_release(v26);
    v28 = *(void **)(v0 + 192);
    *(_QWORD *)(v0 + 440) = v28;
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
    if (v28)
    {
      v29(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240), v27);
      v30 = v28;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      v33 = os_log_type_enabled(v31, v32);
      v34 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v35 = *(_QWORD *)(v0 + 288);
      v36 = *(_QWORD *)(v0 + 240);
      if (v33)
      {
        v37 = swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v107[0] = v38;
        *(_DWORD *)v37 = 136446210;
        v39 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v40 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
        v42 = v41;
        *(_QWORD *)(v37 + 4) = sub_BA95EC(v40, v41, v107);
        swift_bridgeObjectRelease(v42);
        v34(v35, v36);
        _os_log_impl(&dword_0, v31, v32, "‚ï≠ Performing Commands (%{public}s)", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);
      }
      else
      {
        v34(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
      }

      v77 = v30;
      v78 = Logger.logObject.getter(v77);
      v79 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = swift_slowAlloc(12, -1);
        v81 = swift_slowAlloc(32, -1);
        v107[0] = v81;
        *(_DWORD *)v80 = 136446210;
        v82 = objc_msgSend(v77, "playerPath");
        v83 = objc_msgSend(v82, "description");
        v84 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
        v86 = v85;

        *(_QWORD *)(v80 + 4) = sub_BA95EC(v84, v86, v107);
        swift_bridgeObjectRelease(v86);
        _os_log_impl(&dword_0, v78, v79, "‚ï∞ playerPath=%{public}s", (uint8_t *)v80, 0xCu);
        swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v81, -1, -1);
        swift_slowDealloc(v80, -1, -1);

      }
      else
      {

      }
      v87 = (_QWORD *)swift_task_alloc(dword_1501A04);
      *(_QWORD *)(v0 + 448) = v87;
      *v87 = v0;
      v87[1] = sub_D00F70;
      return MPCPlayerResponse.perform(_:options:)(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    }
    else
    {
      v60 = *(_QWORD *)(v0 + 328);
      v61 = *(_QWORD *)(v0 + 272);
      v62 = *(_QWORD *)(v0 + 240);
      v63 = swift_release(*(_QWORD *)(v0 + 344));
      v64 = v29(v61, v60, v62, v63);
      v65 = Logger.logObject.getter(v64);
      v66 = static os_log_type_t.error.getter();
      v67 = os_log_type_enabled(v65, v66);
      v68 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v69 = *(_QWORD *)(v0 + 272);
      v70 = *(_QWORD *)(v0 + 240);
      if (v67)
      {
        v71 = swift_slowAlloc(12, -1);
        v72 = swift_slowAlloc(32, -1);
        v107[0] = v72;
        *(_DWORD *)v71 = 136446210;
        v73 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v74 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v70, v73);
        v76 = v75;
        *(_QWORD *)(v71 + 4) = sub_BA95EC(v74, v75, v107);
        swift_bridgeObjectRelease(v76);
        v68(v69, v70);
        _os_log_impl(&dword_0, v65, v66, "‚ï≠ Commands (%{public}s)", (uint8_t *)v71, 0xCu);
        swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v72, -1, -1);
        swift_slowDealloc(v71, -1, -1);
      }
      else
      {
        v68(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
      }

      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v91 = 0;
        _os_log_impl(&dword_0, v89, v90, "‚ï∞ ‚ùå Unavailable Commands (nil Response)", v91, 2u);
        swift_slowDealloc(v91, -1, -1);
      }
      v92 = *(_QWORD *)(v0 + 200);

      v93 = sub_D0D468();
      swift_allocError(&_s12CommandErrorON, v93, 0, 0);
      *(_QWORD *)v94 = v92;
      *(_BYTE *)(v94 + 40) = 1;
      v95 = swift_bridgeObjectRetain();
      swift_willThrow(v95);
      v97 = *(_QWORD *)(v0 + 320);
      v96 = *(_QWORD *)(v0 + 328);
      v99 = *(_QWORD *)(v0 + 304);
      v98 = *(_QWORD *)(v0 + 312);
      v101 = *(_QWORD *)(v0 + 288);
      v100 = *(_QWORD *)(v0 + 296);
      v103 = *(_QWORD *)(v0 + 272);
      v102 = *(_QWORD *)(v0 + 280);
      v104 = *(_QWORD *)(v0 + 264);
      v106 = *(_QWORD *)(v0 + 232);
      (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v96, *(_QWORD *)(v0 + 240));
      swift_task_dealloc(v96);
      swift_task_dealloc(v97);
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v106);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_D0071C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v1 = v0;
  v2 = (void *)v0[51];
  v3 = v1 + 2;
  v4 = (void (*)(uint64_t, uint64_t, uint64_t))v1[46];
  v5 = v1[41];
  v6 = v1[37];
  v8 = v1[31];
  v7 = v1[32];
  v9 = v1[30];
  v1[7] = v1 + 23;
  v1[2] = v1;
  v1[3] = sub_D0087C;
  v10 = swift_continuation_init(v1 + 2, 1);
  v4(v6, v5, v9);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_13B8CB8, v13 + 8, v11 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v14 + v12, v6, v9);
  *(_QWORD *)(v14 + v13) = v10;
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[4] = sub_D0D518;
  v1[5] = v14;
  v1[1] = 1107296256;
  v1[2] = sub_21B54C;
  v1[3] = &block_descriptor_207_0;
  v15 = _Block_copy(v1);
  v16 = objc_msgSend(v2, "performWithCompletion:", v15, swift_release(v1[5]).n128_f64[0]);
  _Block_release(v15);
  swift_unknownObjectRelease(v16);
  return swift_continuation_await(v3);
}

uint64_t sub_D0087C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2[53] = v3;
  v4 = v2[52];
  if (v3)
  {
    swift_willThrow(a1);
    swift_release(v4);
    v5 = v2[44];
    v6 = v2[45];
    v7 = sub_D00E90;
  }
  else
  {
    v2[54] = v2[23];
    swift_release(v4);
    v5 = v2[44];
    v6 = v2[45];
    v7 = sub_D00904;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_D00904()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66[2];

  v1 = *(void **)(v0 + 400);

  v2 = *(void **)(v0 + 432);
  *(_QWORD *)(v0 + 440) = v2;
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  if (v2)
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v3)(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240));
    v4 = v2;
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v9 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 240);
    if (v7)
    {
      v64 = v4;
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v66[0] = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v14 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v13);
      v16 = v15;
      *(_QWORD *)(v11 + 4) = sub_BA95EC(v14, v15, v66);
      swift_bridgeObjectRelease(v16);
      v8(v9, v10);
      _os_log_impl(&dword_0, v5, v6, "‚ï≠ Performing Commands (%{public}s)", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      v17 = v11;
      v4 = v64;
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      v8(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
    }

    v35 = v4;
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v66[0] = v39;
      *(_DWORD *)v38 = 136446210;
      v40 = objc_msgSend(v35, "playerPath");
      v41 = objc_msgSend(v40, "description");
      v42 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      *(_QWORD *)(v38 + 4) = sub_BA95EC(v42, v44, v66);
      swift_bridgeObjectRelease(v44);

      _os_log_impl(&dword_0, v36, v37, "‚ï∞ playerPath=%{public}s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

    }
    v45 = (_QWORD *)swift_task_alloc(dword_1501A04);
    *(_QWORD *)(v0 + 448) = v45;
    *v45 = v0;
    v45[1] = sub_D00F70;
    return MPCPlayerResponse.perform(_:options:)(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = swift_release(*(_QWORD *)(v0 + 344));
    v22 = v3(v19, v18, v20, v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v27 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 240);
    if (v25)
    {
      v29 = swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v66[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v28, v31);
      v34 = v33;
      *(_QWORD *)(v29 + 4) = sub_BA95EC(v32, v33, v66);
      swift_bridgeObjectRelease(v34);
      v26(v27, v28);
      _os_log_impl(&dword_0, v23, v24, "‚ï≠ Commands (%{public}s)", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      v26(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
    }

    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_0, v48, v49, "‚ï∞ ‚ùå Unavailable Commands (nil Response)", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }
    v51 = *(_QWORD *)(v0 + 200);

    v52 = sub_D0D468();
    swift_allocError(&_s12CommandErrorON, v52, 0, 0);
    *(_QWORD *)v53 = v51;
    *(_BYTE *)(v53 + 40) = 1;
    v54 = swift_bridgeObjectRetain();
    swift_willThrow(v54);
    v56 = *(_QWORD *)(v0 + 320);
    v55 = *(_QWORD *)(v0 + 328);
    v58 = *(_QWORD *)(v0 + 304);
    v57 = *(_QWORD *)(v0 + 312);
    v60 = *(_QWORD *)(v0 + 288);
    v59 = *(_QWORD *)(v0 + 296);
    v62 = *(_QWORD *)(v0 + 272);
    v61 = *(_QWORD *)(v0 + 280);
    v63 = *(_QWORD *)(v0 + 264);
    v65 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v55, *(_QWORD *)(v0 + 240));
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_D00E90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 344);

  swift_release(v2);
  v4 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 272);
  v9 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v3, *(_QWORD *)(v0 + 240));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D00F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 448);
  v3[57] = a1;
  v3[58] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_D0132C;
  else
    v5 = sub_D00FD8;
  return swift_task_switch(v5, v3[44], v3[45]);
}

uint64_t sub_D00FD8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = swift_release(*(_QWORD *)(v0 + 344));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v43 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v16, v17, &v43);
    swift_bridgeObjectRelease(v18);
    v10(v11, v12);
    _os_log_impl(&dword_0, v7, v8, "‚ï≠ Commands (%{public}s)", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v10(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 240));
  }

  v19 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 456), 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 456);
  v24 = *(void **)(v0 + 440);
  if (v22)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v43 = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = sub_4E684(0, (unint64_t *)&unk_15018E0, MPCPlayerCommandStatus_ptr);
    v28 = swift_bridgeObjectRetain();
    v29 = (char *)Array.description.getter(v28, v27);
    v31 = v30;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v25 + 4) = sub_BA95EC(v29, v31, &v43);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease_n(v23, 2);
    _os_log_impl(&dword_0, v20, v21, "‚ï∞ ‚úÖ Successfully performed with statuses=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 456), 2);
  }

  (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240));
  v42 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 320);
  v34 = *(_QWORD *)(v0 + 304);
  v33 = *(_QWORD *)(v0 + 312);
  v36 = *(_QWORD *)(v0 + 288);
  v35 = *(_QWORD *)(v0 + 296);
  v38 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 280);
  v39 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v42);
}

uint64_t sub_D0132C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44[2];

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = swift_release(*(_QWORD *)(v0 + 344));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v11 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v44[0] = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_BA95EC(v16, v17, v44);
    swift_bridgeObjectRelease(v18);
    v10(v11, v12);
    _os_log_impl(&dword_0, v7, v8, "‚ï≠ Commands (%{public}s)", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v10(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  }

  v19 = *(_QWORD *)(v0 + 464);
  swift_errorRetain(v19);
  v20 = swift_errorRetain(v19);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v0 + 464);
  if (v23)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v44[0] = v26;
    *(_DWORD *)v25 = 136446210;
    *(_QWORD *)(v0 + 176) = v24;
    swift_errorRetain(v24);
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v28 = (char *)String.init<A>(describing:)(v0 + 176, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 4) = sub_BA95EC(v28, v29, v44);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(v24);
    swift_errorRelease(v24);
    _os_log_impl(&dword_0, v21, v22, "‚ï∞ ‚ùå Failed to perform command with error=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 464));
    swift_errorRelease(v24);
  }

  v31 = *(void **)(v0 + 440);
  swift_willThrow(v32);

  v34 = *(_QWORD *)(v0 + 320);
  v33 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 312);
  v38 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 296);
  v40 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 280);
  v41 = *(_QWORD *)(v0 + 264);
  v43 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v33, *(_QWORD *)(v0 + 240));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D01678(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - v13;
  if (a1)
  {
    v15 = qword_14F9F90;
    v16 = a1;
    if (v15 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v17 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v17, (uint64_t)qword_15822C0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v56 = a4;
      v22 = v21;
      v23 = swift_slowAlloc(32, -1);
      v57 = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v24);
      v27 = v26;
      *(_QWORD *)(v22 + 4) = sub_BA95EC(v25, v26, &v57);
      swift_bridgeObjectRelease(v27);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      _os_log_impl(&dword_0, v19, v20, "‚ï≠ Commands (%{public}s)", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      v28 = v22;
      a4 = v56;
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }

    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_0, v42, v43, "‚ï∞ üîä‚úÖ Successfully resolved specified route", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    v57 = (uint64_t)a1;
    sub_5C090((uint64_t)&v57, *(_QWORD *)(*(_QWORD *)(a4 + 64) + 40), &qword_1500EA0);
    return swift_continuation_throwingResume(a4);
  }
  else
  {
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v29 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v29, (uint64_t)qword_15822C0);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a3, v8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc(12, -1);
      v56 = a4;
      v34 = v33;
      v35 = swift_slowAlloc(32, -1);
      v57 = v35;
      *(_DWORD *)v34 = 136446210;
      v36 = sub_4DD24(&qword_15018D8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v37 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v36);
      v39 = v38;
      *(_QWORD *)(v34 + 4) = sub_BA95EC(v37, v38, &v57);
      swift_bridgeObjectRelease(v39);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      _os_log_impl(&dword_0, v31, v32, "‚ï≠ Commands (%{public}s)", (uint8_t *)v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      v40 = v34;
      a4 = v56;
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }

    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_0, v47, v48, "‚ï∞ üîä‚ùå Failed to resolve specified route", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }

    if (a2)
    {
      v50 = a2;
    }
    else
    {
      v51 = sub_D0D468();
      v50 = swift_allocError(&_s12CommandErrorON, v51, 0, 0);
      *(_OWORD *)v52 = 0u;
      *(_OWORD *)(v52 + 16) = 0u;
      *(_QWORD *)(v52 + 32) = 0;
      *(_BYTE *)(v52 + 40) = 2;
    }
    v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v54 = swift_allocError(v53, &protocol self-conformance witness table for Error, 0, 0);
    *v55 = v50;
    swift_errorRetain(a2);
    return swift_continuation_throwingResumeWithError(a4, v54);
  }
}

uint64_t sub_D01B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  void *v6;
  uint64_t v7;
  _QWORD v9[5];
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501948);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15018F0);
  if (swift_dynamicCast(v9, v10, v3, v4, 6))
  {
    __swift_destroy_boxed_opaque_existential_1(v9);
    KeyPath = swift_getKeyPath(&unk_10A2BC8);
    v6 = &unk_10A2BF0;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_10A3188);
    v6 = &unk_10A31B0;
  }
  v7 = swift_getKeyPath(v6);
  static Published.subscript.getter(v9, v2, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  return v9[0];
}

uint64_t Player.prepareForBufferedAirPlay()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1[54] = v0;
  v1[55] = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v1[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[57] = v3;
  v1[58] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[59] = v5;
  v1[60] = v6;
  return swift_task_switch(sub_D01D00, v5, v6);
}

uint64_t sub_D01D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v19;
  _UNKNOWN **v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 432);
  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v3 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter((_QWORD *)(v0 + 424), v1, KeyPath, v3);
  swift_release(KeyPath);
  *(_QWORD *)&v4 = swift_release(v3).n128_u64[0];
  v5 = *(void **)(v0 + 424);
  v6 = objc_msgSend(v5, "route", v4);
  *(_QWORD *)(v0 + 488) = v6;

  if (!v6)
  {
    v11 = *(_QWORD *)(v0 + 432);
    swift_release(*(_QWORD *)(v0 + 464));
    v12 = swift_getKeyPath(&unk_10A2B80);
    v13 = swift_getKeyPath(&unk_10A2BA8);
    static Published.subscript.getter((_QWORD *)(v0 + 408), v11, v12, v13);
    swift_release(v12);
    swift_release(v13);
    v14 = *(_QWORD *)(v0 + 408);
    v15 = sub_D0C138();
    v16 = swift_allocError(&type metadata for Player.BufferedAirPlayError, v15, 0, 0);
    *v17 = v14;
    swift_willThrow(v16);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  objc_opt_self(MPAVEndpointRoute);
  v7 = swift_dynamicCastObjCClass(v6);
  if (!v7)
  {
    v10 = *(_QWORD *)(v0 + 464);
    goto LABEL_7;
  }
  v8 = (void *)v7;
  v9 = v6;
  if ((objc_msgSend(v8, "isDeviceRoute") & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 464);

LABEL_7:
    swift_release(v10);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    return (*(uint64_t (**)(id))(v0 + 8))(v6);
  }
  v19 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
  v20 = &MPModelPropertyMovieDownloadedDate_ptr;
  v21 = objc_allocWithZone((Class)MPAVRoutingController);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "initWithDataSource:name:", v19, v22);
  *(_QWORD *)(v0 + 496) = v23;

  if (qword_14F9F90 != -1)
    swift_once(&qword_14F9F90, sub_CF9B0C);
  v24 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 504) = __swift_project_value_buffer(v24, (uint64_t)qword_15822C0);
  v25 = v9;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v41 = v29;
    *(_DWORD *)v28 = 136446210;
    v30 = v25;
    v31 = objc_msgSend(v30, "description");
    v32 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    *(_QWORD *)(v28 + 4) = sub_BA95EC(v32, v34, &v41);
    swift_bridgeObjectRelease(v34);
    _os_log_impl(&dword_0, v26, v27, "üöè Switching to buffered AirPlay onto route=%{public}s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    v35 = v29;
    v20 = &MPModelPropertyMovieDownloadedDate_ptr;
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
  v36 = *(_QWORD *)(v0 + 432);
  v37 = OBJC_IVAR____TtC9MusicCore6Player_routingController;
  *(_QWORD *)(v0 + 512) = OBJC_IVAR____TtC9MusicCore6Player_routingController;
  v38 = *(void **)(v36 + v37);
  *(_QWORD *)(v36 + v37) = v23;
  v39 = v23;

  v40 = (void *)objc_opt_self(v20[487]);
  *(_QWORD *)(v0 + 520) = v40;
  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_D02174;
  *(_QWORD *)(v0 + 352) = swift_continuation_init(v0 + 144, 1);
  *(_QWORD *)(v0 + 320) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 328) = 0x40000000;
  *(_QWORD *)(v0 + 336) = sub_C31018;
  *(_QWORD *)(v0 + 344) = &block_descriptor_79_9;
  objc_msgSend(v40, "setActiveRoute:completion:", 0, v0 + 320);
  return swift_continuation_await(v0 + 144);
}

uint64_t sub_D02174()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(*v0 + 528) = v2;
  if (v2)
    v3 = sub_D02BC8;
  else
    v3 = sub_D021D0;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_D021D0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v2 = v0[61];
  v1 = (void *)v0[62];
  v0[2] = v0;
  v0[3] = sub_D02270;
  v0[49] = swift_continuation_init(v0 + 2, 1);
  v0[45] = _NSConcreteStackBlock;
  v0[46] = 0x40000000;
  v0[47] = sub_C31018;
  v0[48] = &block_descriptor_80_5;
  objc_msgSend(v1, "selectRoute:operation:completion:", v2, 0, v0 + 45);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_D02270()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 536) = v2;
  if (v2)
    v3 = sub_D02E28;
  else
    v3 = sub_D022CC;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_D022CC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 544) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_D02334, v4, v6);
}

uint64_t sub_D02334()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = (void *)v0[65];
  v0[15] = v0 + 50;
  v0[10] = v0;
  v0[11] = sub_D02418;
  v2 = swift_continuation_init(v0 + 10, 1);
  v3 = swift_allocObject(&unk_13B8680, 24, 7);
  *(_QWORD *)(v3 + 16) = v2;
  v0[38] = sub_D0C18C;
  v0[39] = v3;
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 1107296256;
  v0[36] = sub_153944;
  v0[37] = &block_descriptor_86_4;
  v4 = _Block_copy(v0 + 34);
  swift_release(v0[39]);
  objc_msgSend(v1, "getActiveRouteWithTimeout:completion:", v4, 2.0);
  _Block_release(v4);
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_D02418(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[59];
    v5 = v2[60];
    v6 = sub_D026BC;
  }
  else
  {
    v7 = v2[68];
    v2[70] = v2[50];
    swift_release(v7);
    v4 = v2[59];
    v5 = v2[60];
    v6 = sub_D02494;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_D02494()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v1 = Logger.logObject.getter(*(id *)(v0 + 560));
  v2 = static os_log_type_t.default.getter(v1);
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 560);
  if (v3)
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v20 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v4;
    v8 = objc_msgSend(v7, "description");
    v9 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    *(_QWORD *)(v5 + 4) = sub_BA95EC(v9, v11, &v20);
    swift_bridgeObjectRelease(v11);
    _os_log_impl(&dword_0, v1, v2, "üöè Awaiting updated player response for route=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 448);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(id *)(v0 + 560);
  swift_retain(v13);
  sub_D0621C(v14);

  swift_release(v13);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
  swift_retain(v13);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_13B86D0, 40, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v13;
  *(_QWORD *)(v0 + 568) = sub_C51ED8(v12, (uint64_t)&unk_1500FB8, (uint64_t)v18);
  return swift_task_switch(sub_D02750, 0, 0);
}

uint64_t sub_D026BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 464));
  swift_release(v1);
  v4 = *(void **)(v3 + v2);
  v5 = *(void **)(v0 + 496);
  if (v4 && v5 == v4)
  {
    v6 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v6 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D02750()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[71];
  v0[26] = v0;
  v0[27] = sub_D027A4;
  v2 = swift_continuation_init(v0 + 26, 1);
  sub_D08DF8(v2, v1, 5.0);
  return swift_continuation_await(v0 + 26);
}

uint64_t sub_D027A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 576) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = *(_QWORD *)(v2 + 472);
    v5 = *(_QWORD *)(v2 + 480);
    v6 = sub_D029E4;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 472);
    v5 = *(_QWORD *)(v2 + 480);
    v6 = sub_D02810;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_D02810()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(void **)(v0 + 560);
  swift_release(*(_QWORD *)(v0 + 464));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 568);
  v6 = *(void **)(v0 + 560);
  if (v4)
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v21 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = v6;
    v10 = objc_msgSend(v9, "description", v21);
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v7 + 4) = sub_BA95EC(v11, v13, &v21);
    swift_bridgeObjectRelease(v13);

    _os_log_impl(&dword_0, v2, v3, "üöè‚úÖ Successfully switched to buffered AirPlay onto route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  swift_release(v5);

  v14 = *(_QWORD *)(v0 + 512);
  v15 = *(_QWORD *)(v0 + 432);
  v16 = *(void **)(v15 + v14);
  v17 = *(void **)(v0 + 496);
  if (v16)
  {
    v18 = *(void **)(v0 + 488);
    if (v17 == v16)
    {
      *(_QWORD *)(v15 + v14) = 0;

    }
  }
  else
  {
    v18 = *(void **)(v0 + 488);
  }

  v19 = *(_QWORD *)(v0 + 560);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_D029E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v22;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 568));
  swift_release(v2);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.error.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(void **)(v0 + 560);
  if (v5)
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v22 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = v6;
    v10 = objc_msgSend(v9, "description", v22);
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v7 + 4) = sub_BA95EC(v11, v13, &v22);
    swift_bridgeObjectRelease(v13);

    _os_log_impl(&dword_0, v3, v4, "üöè‚ùå Timed out waiting for a valid ReplaceCommand on route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 560);
  v15 = *(_QWORD *)(v0 + 512);
  v16 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v17);

  v18 = *(void **)(v16 + v15);
  v19 = *(void **)(v0 + 496);
  if (v18 && v19 == v18)
  {
    v20 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v20 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D02BC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29[2];

  swift_release(*(_QWORD *)(v0 + 464));
  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(void **)(v0 + 488);
  swift_willThrow(v3);
  v4 = v2;
  swift_errorRetain(v1);
  v5 = v4;
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 488);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = v9;
    v13 = objc_msgSend(v12, "description");
    v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v10 + 4) = sub_BA95EC(v14, v16, v29);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 416) = v1;
    swift_errorRetain(v1);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v18 = (char *)String.init<A>(describing:)(v0 + 416, v17);
    v20 = v19;
    *(_QWORD *)(v10 + 14) = sub_BA95EC(v18, v19, v29);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v7, v8, "üöè‚ùå Failed switching to route=%{public}s with error=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v21 = *(void **)(v0 + 488);

    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v24);
  v25 = *(void **)(v23 + v22);
  v26 = *(void **)(v0 + 496);
  if (v25 && v26 == v25)
  {
    v27 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v27 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D02E28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29[2];

  swift_release(*(_QWORD *)(v0 + 464));
  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(void **)(v0 + 488);
  swift_willThrow(v3);
  v4 = v2;
  swift_errorRetain(v1);
  v5 = v4;
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 488);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = v9;
    v13 = objc_msgSend(v12, "description");
    v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v10 + 4) = sub_BA95EC(v14, v16, v29);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 416) = v1;
    swift_errorRetain(v1);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v18 = (char *)String.init<A>(describing:)(v0 + 416, v17);
    v20 = v19;
    *(_QWORD *)(v10 + 14) = sub_BA95EC(v18, v19, v29);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v7, v8, "üöè‚ùå Failed switching to route=%{public}s with error=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v21 = *(void **)(v0 + 488);

    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v24);
  v25 = *(void **)(v23 + v22);
  v26 = *(void **)(v0 + 496);
  if (v25 && v26 == v25)
  {
    v27 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v27 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D03088(void *a1, uint64_t a2)
{
  id v3;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  if (a1)
  {
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    v3 = a1;
    return swift_continuation_throwingResume(a2);
  }
  else
  {
    v5 = sub_D0C138();
    v6 = swift_allocError(&type metadata for Player.BufferedAirPlayError, v5, 0, 0);
    *v7 = 1;
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v9 = swift_allocError(v8, &protocol self-conformance witness table for Error, 0, 0);
    *v10 = v6;
    return swift_continuation_throwingResumeWithError(a2, v9);
  }
}

uint64_t sub_D03120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v4[7] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE0);
  v4[8] = v5;
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501858);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501860);
  v4[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[14] = v9;
  v4[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v4[16] = v10;
  v4[17] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[18] = v12;
  v4[19] = v13;
  return swift_task_switch(sub_D03210, v12, v13);
}

uint64_t sub_D03210()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[8];
  swift_beginAccess(v0[7] + OBJC_IVAR____TtC9MusicCore6Player__playerResponse, v0 + 2, 33, 0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
  Published.projectedValue.getter(v6);
  swift_endAccess(v0 + 2);
  v7 = sub_5C150((unint64_t *)&qword_1500760, &qword_1500FE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  AsyncPublisher.init(_:)(v4, v5, v7);
  AsyncPublisher.makeAsyncIterator()(v3);
  v8.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[20] = static MainActor.shared.getter(v8);
  v9 = sub_5C150(&qword_1501868, &qword_1501860, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[21] = v10;
  *v10 = v0;
  v10[1] = sub_D0335C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 5, v0[13], v9);
}

uint64_t sub_D0335C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_D03644;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_D03420;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_D03420()
{
  _QWORD *v0;

  swift_release();
  v0[23] = v0[5];
  return swift_task_switch(sub_D03460, v0[18], v0[19]);
}

uint64_t sub_D03460(__n128 a1)
{
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t (*v4)(void);
  char *v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(char **)(v1 + 184);
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 112) + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 104));
    swift_release();
    goto LABEL_9;
  }
  if (!v2)
    goto LABEL_11;
  result = swift_conformsToProtocol2(&type metadata for Player.ReplaceCommand, &protocol descriptor for _PlayerCommand);
  if (result)
  {
    v4 = *(uint64_t (**)(void))(result + 16);
    v5 = v2;
    v6 = v4();
    sub_15C188(v2);
    if ((v6 & 1) != 0
      && (v7 = objc_msgSend(v5, "playerPath"),
          v8 = objc_msgSend(v7, "route"),
          v7,
          v8))
    {
      v9 = *(void **)(v1 + 184);
      v10 = objc_msgSend(v8, "isDeviceRoute");
      sub_15C188(v9);

      if (v10)
      {
        v12 = *(_QWORD *)(v1 + 112);
        v11 = *(_QWORD *)(v1 + 120);
        v13 = *(_QWORD *)(v1 + 104);
        v14 = swift_release();
        (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v11, v13, v14);
LABEL_9:
        v15 = *(_QWORD *)(v1 + 96);
        v16 = *(_QWORD *)(v1 + 72);
        swift_task_dealloc(*(_QWORD *)(v1 + 120));
        swift_task_dealloc(v15);
        swift_task_dealloc(v16);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
    }
    else
    {
      sub_15C188(*(id *)(v1 + 184));
    }
LABEL_11:
    *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
    v17 = sub_5C150(&qword_1501868, &qword_1501860, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v1 + 168) = v18;
    *v18 = v1;
    v18[1] = sub_D0335C;
    return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 40, *(_QWORD *)(v1 + 104), v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_D03644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 176);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v2 = swift_dynamicCast(v1, v0 + 48, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

double sub_D036A4(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _DWORD *v14;
  _BYTE v15[24];

  v2 = v1;
  v4 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  *(_QWORD *)&result = swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v15, 0, 0).n128_u64[0];
  if (*v4 != a1)
  {
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v6 = type metadata accessor for Logger(0);
    v7 = __swift_project_value_buffer(v6, (uint64_t)qword_15822C0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "‚ï≠ Updated Engine State", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = swift_retain_n(v2, 2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (_DWORD *)swift_slowAlloc(12, -1);
      swift_slowAlloc(32, -1);
      *v14 = 136446210;
      __asm { BR              X10 }
    }
    swift_release_n(v2, 2);

    __asm { BR              X10 }
  }
  return result;
}

uint64_t Player.engineState.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v3, 0, 0);
  return *v1;
}

uint64_t Player.EngineState.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_D03B9C + 4 * byte_10A2B6C[a1]))(0x66664F208C9DE2, 0xA700000000000000);
}

uint64_t sub_D03B9C()
{
  return 0x61745320809A9FF0;
}

uint64_t sub_D03BC0()
{
  return 0x6461655220859CE2;
}

uint64_t sub_D03BDC()
{
  return 0x53208FB8EFA09AE2;
}

uint64_t sub_D03C00()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_D03C30 + 4 * byte_10A2B70[*v0]))(0x66664F208C9DE2, 0xA700000000000000);
}

uint64_t sub_D03C30()
{
  return 0x61745320809A9FF0;
}

uint64_t sub_D03C54()
{
  return 0x6461655220859CE2;
}

uint64_t sub_D03C70()
{
  return 0x53208FB8EFA09AE2;
}

uint64_t sub_D03C94()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A3188);
  v2 = swift_getKeyPath(&unk_10A31B0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

char *sub_D03D04()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v13;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource);
  }
  else
  {
    v4 = v0;
    KeyPath = swift_getKeyPath(&unk_10A2B80);
    v6 = swift_getKeyPath(&unk_10A2BA8);
    static Published.subscript.getter(&v13, v4, KeyPath, v6);
    swift_release(v6);
    swift_release(KeyPath);
    v7 = v13;
    v8 = swift_allocObject(&unk_13B84C0, 24, 7);
    swift_weakInit(v8 + 16, v4);
    objc_allocWithZone((Class)type metadata accessor for Player.DataSource());
    swift_retain(v4);
    v9 = sub_D06F10(0x6B63616279616C50, (void *)0xEF646E616D6D6F43, v7, (uint64_t)sub_D0CF78, v8, (uint64_t)sub_D0CF80, v4);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

double sub_D03E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore6Player_lock);
    __chkstk_darwin(Strong);
    swift_retain(v7);
    UnfairLock.locked<A>(_:)(sub_D0CFD4);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_D03F0C(uint64_t a1, id a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  _BYTE v14[24];

  v5 = objc_msgSend(a2, "playerPath");
  if (v5)
  {
    v6 = v5;
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers, v14, 33, 0);
    v7 = sub_D0A7B8((unint64_t)v6);
    swift_endAccess(v14);

    if (v7)
    {
      if (qword_14F9F90 != -1)
        swift_once(&qword_14F9F90, sub_CF9B0C);
      v8 = type metadata accessor for Logger(0);
      v9 = __swift_project_value_buffer(v8, (uint64_t)qword_15822C0);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_0, v10, v11, "| Cancelling ongoing timer for switching back to system route", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      swift_getObjectType();
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease(v7);
    }
    v13 = a3;
    sub_D0CC5C(a3);

  }
  else
  {
    __break(1u);
  }
}

void sub_D04094(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v3 = objc_msgSend(a1, "playerPath");
  if (v3)
  {
    v4 = v3;
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v5 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v5, (uint64_t)qword_15822C0);
    swift_errorRetain(a2);
    v6 = swift_errorRetain(a2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v29 = v10;
      *(_DWORD *)v9 = 136446210;
      v28 = a2;
      swift_errorRetain(a2);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v12 = (char *)String.init<A>(describing:)(&v28, v11);
      v14 = v13;
      *(_QWORD *)(v9 + 4) = sub_BA95EC(v12, v13, &v29);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v7, v8, "‚ï≠ Player Response failed to load with error=%{public}s", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v15 = (void *)_convertErrorToNSError(_:)(a2);
    v16 = sub_D04404();

    if ((v16 & 1) != 0)
    {
      __chkstk_darwin(v17);
      UnfairLock.locked<A>(_:)((void (*)(void))sub_D0CF88);

    }
    else
    {
      v18 = v4;
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        v29 = v22;
        *(_DWORD *)v21 = 136446210;
        v23 = v18;
        v24 = objc_msgSend(v23, "description");
        v25 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v27 = v26;

        *(_QWORD *)(v21 + 4) = sub_BA95EC(v25, v27, &v29);
        swift_bridgeObjectRelease(v27);

        _os_log_impl(&dword_0, v19, v20, "‚ï∞ playerPath=%{public}s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_D04404()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;

  v1 = v0;
  v2 = objc_msgSend(v0, "domain");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = (char *)objc_msgSend(v1, "code");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPAVRouteConnectionErrorDomain);
  if (v7 == v3 && v8 == v5)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    if (v6 == (_BYTE *)&dword_0 + 2)
      return 1;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v5, 0);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) != 0 && v6 == (_BYTE *)&dword_0 + 2)
      return 1;
  }
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  v13 = objc_msgSend(v1, "userInfo");
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
  v17 = v16;
  if (*(_QWORD *)(v14 + 16) && (v18 = sub_21BAD0(v15, v16), (v19 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v14 + 56) + 32 * v18, (uint64_t)&v43);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
    if (*((_QWORD *)&v44 + 1))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF328);
      if ((swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, v20, 6) & 1) != 0)
        sub_C18C10((uint64_t)v42);
      goto LABEL_16;
    }
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
  }
  sub_56024((uint64_t)&v43, &qword_14FF2A0);
LABEL_16:
  v21 = objc_msgSend(v1, "userInfo");
  v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v25 = v24;
  if (*(_QWORD *)(v22 + 16) && (v26 = sub_21BAD0(v23, v24), (v27 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v22 + 56) + 32 * v26, (uint64_t)&v43);
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  if (*((_QWORD *)&v44 + 1))
  {
    v28 = sub_4E684(0, (unint64_t *)&qword_14FF320, NSError_ptr);
    if ((swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
    {
      v29 = v42;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFFF8));
      v30 = *(_QWORD *)((char *)&dword_18 + (v45 & 0xFFFFFFFFFFFFFF8));
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);

    }
  }
  else
  {
    sub_56024((uint64_t)&v43, &qword_14FF2A0);
  }
  v33 = v45;
  if (v45 >> 62)
    goto LABEL_44;
  v34 = *(_QWORD *)((char *)&dword_10 + (v45 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n(v45, 2);
  if (v34)
  {
    while (1)
    {
      v35 = (v33 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33)
          : *(id *)(v33 + 32);
      v36 = v35;
      if ((sub_D04404() & 1) != 0)
        break;

      if (v34 != 1)
      {
        v37 = 5;
        while (1)
        {
          v38 = (v33 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v33)
              : *(id *)(v33 + 8 * v37);
          v36 = v38;
          v39 = v37 - 3;
          if (__OFADD__(v37 - 4, 1))
            break;
          if ((sub_D04404() & 1) != 0)
            goto LABEL_31;

          ++v37;
          if (v39 == v34)
            goto LABEL_40;
        }
        __break(1u);
LABEL_44:
        v41 = v33 < 0 ? v33 : v33 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v33, 2);
        v34 = _CocoaArrayWrapper.endIndex.getter(v41);
        if (v34)
          continue;
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n(v33, 2);

    v12 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n(v33, 2);
    v12 = 0;
  }
  swift_bridgeObjectRelease(v33);
  return v12;
}

double sub_D04828(void *a1, char *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _DWORD *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint8_t *v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  double result;
  NSObject *v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t ObjectType;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  __n128 v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t);
  uint64_t v72;
  char *v73;
  void (*v74)(_QWORD *, uint64_t);
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  char *v99;
  uint64_t aBlock[5];
  uint64_t v101;
  char v102[24];
  char v103[32];

  v90 = type metadata accessor for DispatchTimeInterval(0);
  v4 = *(uint64_t **)(v90 - 8);
  v5 = __chkstk_darwin(v90);
  v98 = (uint64_t *)((char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v97 = (uint64_t *)((char *)&v81 - v7);
  v96 = type metadata accessor for DispatchTime(0);
  v94 = *(_QWORD *)(v96 - 8);
  v8 = __chkstk_darwin(v96);
  v93 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v95 = (char *)&v81 - v10;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v92 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for DispatchQoS(0);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v88 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14F9F90 != -1)
    swift_once(&qword_14F9F90, sub_CF9B0C);
  v16 = type metadata accessor for Logger(0);
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_15822C0);
  v18 = a1;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v84 = v4;
    v22 = (_DWORD *)v21;
    v81 = v21;
    v82 = swift_slowAlloc(32, -1);
    aBlock[0] = v82;
    *v22 = 136446210;
    v23 = v18;
    v83 = v17;
    v99 = a2;
    v24 = v23;
    v25 = v12;
    v26 = objc_msgSend(v23, "description");
    v27 = v18;
    v28 = v11;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v31 = v30;

    v12 = v25;
    v32 = (char *)v29;
    v11 = v28;
    v18 = v27;
    v33 = sub_BA95EC(v32, v31, aBlock);
    v34 = (uint8_t *)v81;
    *(_QWORD *)(v81 + 4) = v33;
    swift_bridgeObjectRelease(v31);

    a2 = v99;
    _os_log_impl(&dword_0, v19, v20, "| Invalid playerPath=%{public}s", v34, 0xCu);
    v35 = v82;
    swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v36 = v34;
    v4 = v84;
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {

  }
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_0, v38, v39, "‚ï∞ Stalling engine while attempting to reload", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }

  v41 = &a2[OBJC_IVAR____TtC9MusicCore6Player_engineState];
  v42 = swift_beginAccess(&a2[OBJC_IVAR____TtC9MusicCore6Player_engineState], v103, 1, 0);
  v43 = *v41;
  *v41 = 3;
  sub_D036A4(v43, v42);
  v44 = (uint64_t *)&a2[OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers], v102, 0, 0);
  v45 = *v44;
  v46 = v18;
  swift_bridgeObjectRetain();
  v47 = sub_CF998C(v46, v45);
  swift_bridgeObjectRelease(v45);

  *(_QWORD *)&result = swift_unknownObjectRelease(v47).n128_u64[0];
  if (!v47)
  {
    v84 = v44;
    v99 = a2;
    v50 = Logger.logObject.getter(v48);
    v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, (os_log_type_t)v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_0, v50, (os_log_type_t)v51, "‚ï∞ Switching back to system route in 5seconds.", v52, 2u);
      swift_slowDealloc(v52, -1, -1);
    }

    sub_4E684(0, &qword_15017F0, OS_dispatch_source_ptr);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v53 = sub_4DD24(&qword_14FF8A8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF8B0);
    v55 = sub_5C150(&qword_14FF8B8, &qword_14FF8B0, (uint64_t)&protocol conformance descriptor for [A]);
    v56 = v85;
    v57 = v54;
    v58 = v87;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v57, v55, v87, v53);
    sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    v59 = (void *)static OS_dispatch_queue.main.getter();
    v60 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v56, v59);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v56, v58);
    v83 = v60;
    ObjectType = swift_getObjectType();
    v62 = swift_allocObject(&unk_13B84C0, 24, 7);
    swift_weakInit(v62 + 16, v99);
    v63 = swift_allocObject(&unk_13B8AB0, 32, 7);
    *(_QWORD *)(v63 + 16) = v62;
    *(_QWORD *)(v63 + 24) = v46;
    aBlock[4] = (uint64_t)sub_D0CFCC;
    v101 = v63;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_42D124;
    aBlock[3] = (uint64_t)&block_descriptor_141_1;
    v64 = _Block_copy(aBlock);
    v99 = (char *)v46;
    swift_retain(v62);
    v65 = v88;
    static DispatchQoS.unspecified.getter(v66);
    v67 = v92;
    v87 = ObjectType;
    sub_CF9A58();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v65, v67, v64, ObjectType);
    _Block_release(v64);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v67, v11);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v65, v91);
    swift_release(v101);
    swift_release(v62);
    v68 = v93;
    static DispatchTime.now()(v69);
    v70 = v97;
    *v97 = 5;
    v71 = (void (*)(_QWORD *, _QWORD, uint64_t))v4[13];
    v72 = v90;
    v71(v70, enum case for DispatchTimeInterval.seconds(_:), v90);
    v73 = v95;
    + infix(_:_:)(v68, v70);
    v74 = (void (*)(_QWORD *, uint64_t))v4[1];
    v74(v70, v72);
    v75 = *(void (**)(char *, uint64_t))(v94 + 8);
    v76 = v96;
    v75(v68, v96);
    v71(v70, enum case for DispatchTimeInterval.never(_:), v72);
    v77 = v98;
    *v98 = 0;
    v71(v77, enum case for DispatchTimeInterval.nanoseconds(_:), v72);
    v78 = v83;
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v73, v70, v77, v87);
    v74(v77, v72);
    v74(v70, v72);
    v75(v73, v76);
    OS_dispatch_source.resume()();
    swift_beginAccess(v84, aBlock, 33, 0);
    v79 = v99;
    v80 = swift_unknownObjectRetain(v78);
    sub_D0AA48(v80, v79);
    swift_endAccess(aBlock);

    *(_QWORD *)&result = swift_unknownObjectRelease(v78).n128_u64[0];
  }
  return result;
}

void sub_D050B0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  id v26;
  void *v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v29, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers, v28, 33, 0);
    v6 = a2;
    v7 = sub_D0A7B8((unint64_t)v6);
    swift_endAccess(v28);

    swift_release(v5);
    swift_unknownObjectRelease(v7);
  }
  swift_beginAccess(v3, v28, 0, 0);
  v8 = swift_weakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    KeyPath = swift_getKeyPath(&unk_10A2B80);
    v11 = swift_getKeyPath(&unk_10A2BA8);
    static Published.subscript.getter(&v27, v9, KeyPath, v11);
    swift_release(v11);
    swift_release(KeyPath);
    swift_release(v9);
    v12 = v27;
    sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
    v13 = a2;
    LOBYTE(v9) = static NSObject.== infix(_:_:)(v13, v12);

    if ((v9 & 1) != 0)
    {
      if (qword_14F9F90 != -1)
        swift_once(&qword_14F9F90, sub_CF9B0C);
      v14 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v14, (uint64_t)qword_15822C0);
      v15 = v13;
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc(12, -1);
        v19 = swift_slowAlloc(32, -1);
        v27 = (void *)v19;
        *(_DWORD *)v18 = 136446210;
        v20 = v15;
        v21 = objc_msgSend(v20, "description");
        v22 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        *(_QWORD *)(v18 + 4) = sub_BA95EC(v22, v24, (uint64_t *)&v27);
        swift_bridgeObjectRelease(v24);

        _os_log_impl(&dword_0, v16, v17, "Engine stalled for too long trying to resolve playerPath=%{public}s. Switching back to system route.", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v19, -1, -1);
        swift_slowDealloc(v18, -1, -1);
      }
      else
      {

      }
      v25 = (void *)objc_opt_self(MPAVRoutingController);
      v26 = objc_msgSend(v25, "systemRoute");
      objc_msgSend(v25, "setActiveRoute:completion:", v26, 0);

    }
  }
}

char *sub_D053BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  id v22;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource);
  }
  else
  {
    v4 = v0;
    KeyPath = swift_getKeyPath(&unk_10A2B80);
    v6 = swift_getKeyPath(&unk_10A2BA8);
    static Published.subscript.getter(&v22, v4, KeyPath, v6);
    swift_release(v6);
    *(_QWORD *)&v7 = swift_release(KeyPath).n128_u64[0];
    v8 = v22;
    v9 = objc_msgSend(v22, "route", v7);

    if (!v9)
      v9 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
    v10 = (void *)objc_opt_self(MPCPlayerPath);
    if (qword_14F9F68 != -1)
      swift_once(&qword_14F9F68, sub_CDAB10);
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "systemMusicPathWithRoute:playerID:", v9, v11);

    if (objc_msgSend(v9, "isDeviceRoute"))
      v13 = v12;
    else
      v13 = objc_msgSend(v10, "pathWithRoute:bundleID:playerID:", v9, 0, 0);
    v14 = v13;

    v15 = swift_allocObject(&unk_13B84C0, 24, 7);
    swift_weakInit(v15 + 16, v4);
    v16 = swift_allocObject(&unk_13B84C0, 24, 7);
    swift_weakInit(v16 + 16, v4);
    v17 = objc_allocWithZone((Class)type metadata accessor for Player.DataSource());
    v18 = sub_D06F10(0x6979616C50776F4ELL, (void *)0xEA0000000000676ELL, v14, (uint64_t)sub_D0D140, v15, (uint64_t)sub_D0D148, v16);
    v19 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v18;
    v3 = v18;

    v2 = 0;
  }
  v20 = v2;
  return v3;
}

double sub_D0560C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore6Player_lock);
    __chkstk_darwin(Strong);
    swift_retain(v7);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_D0D150);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_D056E0(id a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  id v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  id v36;
  id v37;
  int v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  id v47;
  unsigned __int8 v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v61;
  uint64_t v62;
  id v63;

  if (a1)
    v6 = objc_msgSend(a1, "tracklist");
  else
    v6 = 0;
  KeyPath = swift_getKeyPath(&unk_10A2BC8);
  v8 = swift_getKeyPath(&unk_10A2BF0);
  static Published.subscript.getter(&v63, a2, KeyPath, v8);
  swift_release(v8);
  *(_QWORD *)&v9 = swift_release(KeyPath).n128_u64[0];
  v10 = v63;
  if (!v63)
  {
    if (!v6)
      goto LABEL_18;
LABEL_11:
    v11 = v6;
    goto LABEL_13;
  }
  v11 = objc_msgSend(v63, "tracklist", v9);

  if (v6)
  {
    if (v11)
    {
      sub_4E684(0, &qword_1501870, MPCPlayerResponseTracklist_ptr);
      v12 = v6;
      v13 = static NSObject.== infix(_:_:)(v12, v11);

      if ((v13 & 1) == 0)
      {
        if (!a1)
          goto LABEL_19;
        goto LABEL_14;
      }
LABEL_18:
      if (a1)
        goto LABEL_34;
      goto LABEL_19;
    }
    goto LABEL_11;
  }
  if (!v11)
    goto LABEL_18;
LABEL_13:

  if (!a1)
  {
LABEL_19:
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v28 = type metadata accessor for Logger(0);
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_15822C0);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_0, v30, v31, "‚ï≠ Nil Now Playing Response", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }
    goto LABEL_30;
  }
LABEL_14:
  v62 = a2;
  v14 = qword_14F9F90;
  v15 = a1;
  if (v14 != -1)
    swift_once(&qword_14F9F90, sub_CF9B0C);
  v16 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v16, (uint64_t)qword_15822C0);
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v21 = (void *)swift_slowAlloc(32, -1);
    v63 = v21;
    *(_DWORD *)v20 = 136446210;
    v61 = a3;
    v22 = objc_msgSend(v17, "tracklist");
    v23 = objc_msgSend(v22, "uniqueIdentifier");

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = (char *)v24;
    a3 = v61;
    *(_QWORD *)(v20 + 4) = sub_BA95EC(v27, v26, (uint64_t *)&v63);
    swift_bridgeObjectRelease(v26);

    _os_log_impl(&dword_0, v18, v19, "‚ï≠ Received Now Playing response with tracklistID=%{public}s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {

  }
  v30 = v17;
  v33 = Logger.logObject.getter(v30);
  v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc(8, -1);
    *(_DWORD *)v35 = 67240192;
    v36 = -[NSObject playerPath](v30, "playerPath");
    v37 = objc_msgSend(v36, "representedBundleID");

    if (v37)
    {

      v38 = 1;
    }
    else
    {
      v38 = 0;
    }
    *(_DWORD *)(v35 + 4) = v38;

    _os_log_impl(&dword_0, v33, v34, "| is Music App=%{BOOL,public}d", (uint8_t *)v35, 8u);
    swift_slowDealloc(v35, -1, -1);

    a2 = v62;
  }
  else
  {

    v30 = v33;
    a2 = v62;
  }
LABEL_30:

  if (qword_14F9F90 != -1)
    swift_once(&qword_14F9F90, sub_CF9B0C);
  v39 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v39, (uint64_t)qword_15822C0);
  v40 = a3;
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc(12, -1);
    v44 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v43 = 138543362;
    v45 = objc_msgSend(v40, "playerPath");
    *(_QWORD *)(v43 + 4) = v45;
    *v44 = v45;

    _os_log_impl(&dword_0, v41, v42, "‚ï∞ playerPath=%{public}@", (uint8_t *)v43, 0xCu);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v44, 1, v46);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v43, -1, -1);

    if (a1)
      goto LABEL_34;
LABEL_40:
    v56 = swift_getKeyPath(&unk_10A2BC8);
    v57 = swift_getKeyPath(&unk_10A2BF0);
    v63 = 0;
    swift_retain(a2);
    static Published.subscript.setter(&v63, a2, v56, v57);
    v55 = 0;
    goto LABEL_41;
  }

  if (!a1)
    goto LABEL_40;
LABEL_34:
  v47 = objc_msgSend(a1, "playerPath");
  v48 = objc_msgSend(v47, "isSystemMusicPath");

  if ((v48 & 1) != 0
    || (v49 = objc_msgSend(a1, "playerPath"),
        v50 = objc_msgSend(v49, "representedBundleID"),
        v49,
        !v50))
  {
    v52 = a1;
    v51 = a1;
  }
  else
  {

    v51 = 0;
  }
  v53 = swift_getKeyPath(&unk_10A2BC8);
  v54 = swift_getKeyPath(&unk_10A2BF0);
  v63 = v51;
  swift_retain(a2);
  static Published.subscript.setter(&v63, a2, v53, v54);
  v55 = objc_msgSend(a1, "playerPath");
LABEL_41:
  v58 = swift_getKeyPath(&unk_10A2C10);
  v59 = swift_getKeyPath(&unk_10A2C38);
  v63 = v55;
  swift_retain(a2);
  return static Published.subscript.setter(&v63, a2, v58, v59);
}

void sub_D05E08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    if (qword_14F9F90 != -1)
      swift_once(&qword_14F9F90, sub_CF9B0C);
    v8 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v8, (uint64_t)qword_15822C0);
    swift_errorRetain(a2);
    v9 = swift_errorRetain(a2);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v25 = a2;
      v26 = v13;
      *(_DWORD *)v12 = 136446210;
      swift_errorRetain(a2);
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v15 = (char *)String.init<A>(describing:)(&v25, v14);
      v17 = v16;
      *(_QWORD *)(v12 + 4) = sub_BA95EC(v15, v16, &v26);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v10, v11, "‚ï≠ Now Playing failed to load with error=%{public}s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v18 = a1;
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v22 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v21 = 138543362;
      v23 = objc_msgSend(v18, "playerPath");
      *(_QWORD *)(v21 + 4) = v23;
      *v22 = v23;

      _os_log_impl(&dword_0, v19, v20, "‚ï∞ playerPath=%{public}@", (uint8_t *)v21, 0xCu);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
      swift_arrayDestroy(v22, 1, v24);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_release(v7);
    }
    else
    {

      swift_release(v7);
    }
  }
}

void sub_D060CC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v3 = *v1;
  v4 = swift_allocObject(&unk_13B8C40, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  if (a1)
  {
    swift_retain(v1);
    v9 = a1;
    sub_D0621C();
    swift_release(v4);

  }
  else
  {
    v5 = (void *)objc_opt_self(MPAVRoutingController);
    v6 = swift_allocObject(&unk_13B8C68, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_D0E03C;
    *(_QWORD *)(v6 + 24) = v4;
    aBlock[4] = sub_D0E040;
    v11 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_153944;
    aBlock[3] = &block_descriptor_198;
    v7 = _Block_copy(aBlock);
    v8 = v11;
    swift_retain(v1);
    swift_retain(v4);
    swift_release(v8);
    objc_msgSend(v5, "getActiveRouteWithTimeout:completion:", v7, 1.0);
    swift_release(v4);
    _Block_release(v7);
  }
}

void sub_D0621C(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_14F9F90 != -1)
    swift_once(&qword_14F9F90, sub_CF9B0C);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_15822C0);
  v3 = a1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v14 = v13;
    *(_DWORD *)v6 = 136446210;
    v7 = v3;
    v8 = objc_msgSend(v7, "description");
    v9 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v11, &v14);
    swift_bridgeObjectRelease(v11);

    _os_log_impl(&dword_0, v4, v5, "Updating playerPaths with route=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  __chkstk_darwin(v12);
  UnfairLock.locked<A>(_:)(sub_D0D3A8);
}

void sub_D06428(uint64_t a1, void *a2)
{
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  NSString v14;
  id v15;
  id v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;

  v4 = sub_D053BC();
  v5 = *(id *)&v4[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path];

  v6 = objc_msgSend(v5, "route");
  if (!v6)
    goto LABEL_5;
  sub_4E684(0, &qword_15018C8, MPAVRoute_ptr);
  v7 = a2;
  v8 = v6;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) == 0)
    goto LABEL_5;
  v10 = objc_msgSend(v8, "connection");
  if (!v10 || (v11 = v10, v12 = objc_msgSend(v10, "isInvalidated"), v11, (v12 & 1) == 0))
  {

  }
  else
  {
LABEL_5:
    v13 = (void *)objc_opt_self(MPCPlayerPath);
    if (qword_14F9F68 != -1)
      swift_once(&qword_14F9F68, sub_CDAB10);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "systemMusicPathWithRoute:playerID:", a2, v14);

    if (objc_msgSend(a2, "isDeviceRoute"))
      v16 = v15;
    else
      v16 = objc_msgSend(v13, "pathWithRoute:bundleID:playerID:", a2, 0, 0);
    v17 = v16;
    KeyPath = swift_getKeyPath(&unk_10A2B80);
    v19 = swift_getKeyPath(&unk_10A2BA8);
    v33 = v15;
    v20 = v15;
    swift_retain(a1);
    static Published.subscript.setter(&v33, a1, KeyPath, v19);
    sub_CFB7DC();
    v21 = sub_D053BC();
    v22 = v17;
    sub_D071AC(v22);

    v23 = (void *)_MPAVRouteConnectionDidInvalidateNotification;
    v24 = swift_allocObject(&unk_13B84C0, 24, 7);
    swift_weakInit(v24 + 16, a1);
    v25 = type metadata accessor for NotificationObserver();
    swift_allocObject(v25, 64, 7);
    v26 = v20;
    v27 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v23, (uint64_t)v20, 1, 1, (uint64_t)sub_D0BDD0, v24);
    v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver) = v27;
    v29 = objc_msgSend(v22, "route", swift_release(v28).n128_f64[0]);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v29, 0);
      v32 = objc_msgSend((id)objc_opt_self(MPVolumeHardwareButtonController), "sharedController");
      objc_msgSend(v32, "setActiveDataSource:", v31);

    }
    else
    {

    }
  }
}

double sub_D06798(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_D060CC(0);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_D067F0(void *a1, void (*a2)(id))
{
  id v4;
  id v5;

  if (a1)
    v5 = a1;
  else
    v5 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v4 = a1;
  a2(v5);

}

void sub_D06864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_10A2B80);
  v3 = swift_getKeyPath(&unk_10A2BA8);
  static Published.subscript.getter(&v39, v1, KeyPath, v3);
  swift_release();
  *(_QWORD *)&v4 = swift_release().n128_u64[0];
  v5 = v39;
  v6 = objc_msgSend(v39, "route", v4);

  if (v6)
  {
    objc_opt_self(MPAVEndpointRoute);
    v7 = (void *)swift_dynamicCastObjCClass(v6);
    if (!v7)
    {
LABEL_15:

      return;
    }
    v8 = v7;
    v9 = objc_msgSend(v7, "endpointObject");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "isEligibleForHostingGroupSessionExcludingAcknowledgements");

      v12 = swift_getKeyPath(&unk_10A2CE8);
      v13 = swift_getKeyPath(&unk_10A2D10);
      LOBYTE(v39) = v11;
      swift_retain();
      static Published.subscript.setter(&v39, v1, v12, v13);
      v14 = objc_msgSend(v8, "endpointObject");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "groupSessionInfo");

        if (!v16)
        {
          v24 = swift_getKeyPath(&unk_10A2C58);
          v25 = swift_getKeyPath(&unk_10A2C80);
          static Published.subscript.getter(&v39, v1, v24, v25);
          swift_release();
          swift_release();
          v26 = v39;
          v27 = swift_getKeyPath(&unk_10A2C58);
          v28 = swift_getKeyPath(&unk_10A2C80);
          v39 = 0;
          swift_retain();
          static Published.subscript.setter(&v39, v1, v27, v28);
          sub_CFBC3C(v26);
LABEL_14:

          v6 = v26;
          goto LABEL_15;
        }
        if (qword_14FA020 != -1)
          swift_once(&qword_14FA020, sub_D3B530);
        v17 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v17, (uint64_t)static Logger.sharePlayTogether);
        v18 = v6;
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc(12, -1);
          v22 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v21 = 138543362;
          *(_QWORD *)(v21 + 4) = v8;
          *v22 = v8;
          _os_log_impl(&dword_0, v19, v20, "Getting session from %{public}@", (uint8_t *)v21, 0xCu);
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
          swift_arrayDestroy(v22, 1, v23);
          swift_slowDealloc(v22, -1, -1);
          swift_slowDealloc(v21, -1, -1);
        }
        else
        {

        }
        v29 = objc_msgSend(v8, "endpointObject");
        if (v29)
        {
          v30 = v29;
          v31 = objc_allocWithZone((Class)type metadata accessor for SharePlayTogetherSession(0));
          v6 = v16;
          sub_D36BCC(v6, v30);
          v33 = v32;
          v34 = swift_getKeyPath(&unk_10A2C58);
          v35 = swift_getKeyPath(&unk_10A2C80);
          static Published.subscript.getter(&v39, v1, v34, v35);
          swift_release();
          swift_release();
          v26 = v39;
          v36 = swift_getKeyPath(&unk_10A2C58);
          v37 = swift_getKeyPath(&unk_10A2C80);
          v39 = v33;
          swift_retain();
          v38 = v33;
          static Published.subscript.setter(&v39, v1, v36, v37);
          sub_CFBC3C(v26);

          goto LABEL_14;
        }
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t Player.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, __n128);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;
  __n128 v15;

  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC9MusicCore6Player__path;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
  v5 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 8) + 8);
  ((void (*)(uint64_t, uint64_t))v5)(v3, v4);
  v6 = v0 + OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v0 + OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, v11);

  v13 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration + 8);
  swift_bridgeObjectRelease();

  v15 = swift_bridgeObjectRelease();
  v5(v0 + OBJC_IVAR____TtC9MusicCore6Player__playerResponse, v4, v15);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Player.__deallocating_deinit()
{
  return sub_D08D94((void (*)(void))Player.deinit);
}

uint64_t sub_D06ED4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Player(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

char *sub_D06F10(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  Swift::String v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  id v33;
  objc_super v37;

  v13 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request;
  v14 = objc_allocWithZone((Class)MPCPlayerRequest);
  v15 = v7;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "init");
  v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_automaticallyReloads] = 0;
  v16 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path] = a3;
  v17 = &v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onResponseChanged];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  v18 = &v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onError];
  *(_QWORD *)v18 = a6;
  *((_QWORD *)v18 + 1) = a7;
  v19 = a3;
  swift_retain(a5);
  swift_retain(a7);

  v37.receiver = v15;
  v37.super_class = (Class)type metadata accessor for Player.DataSource();
  v20 = (char *)objc_msgSendSuper2(&v37, "init");
  v21 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller;
  v22 = *(void **)&v20[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller];
  v23 = v20;
  objc_msgSend(v22, "setDelegate:", v23);
  v24 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request;
  v25 = qword_14F9F98;
  v26 = *(id *)&v23[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];
  if (v25 != -1)
    swift_once(&qword_14F9F98, sub_D07498);
  objc_msgSend(v26, "setPlayingItemProperties:", qword_1500E20);

  v27 = *(void **)&v23[v24];
  objc_msgSend(v27, "setTracklistRange:", 0, 0);
  objc_msgSend(v27, "setPlayerPath:", v19);
  v28._countAndFlagsBits = a1;
  v28._object = a2;
  String.append(_:)(v28);
  v29 = v27;
  swift_bridgeObjectRelease(a2);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x8000000001108670);
  objc_msgSend(v29, "setLabel:", v30);

  v31 = *(void **)&v23[v24];
  v32 = *(id *)&v20[v21];
  v33 = v31;
  objc_msgSend(v32, "setRequest:", v33);
  swift_release(a7);
  swift_release(a5);

  return v23;
}

void sub_D071AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path;
  v5 = *(void **)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path) = a1;
  sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
  v9 = v3;
  LOBYTE(v3) = static NSObject.== infix(_:_:)(v9, v5);

  if ((v3 & 1) == 0)
  {
    v6 = *(void **)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller);
    v7 = objc_msgSend(v6, "request");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setPlayerPath:", *(_QWORD *)(v2 + v4));

    }
    objc_msgSend(v6, "setNeedsReloadForSignificantRequestChange");
  }

}

id sub_D073F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Player.DataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_D07498()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  Class isa;
  Class v14;
  id v15;
  unint64_t v16;
  id v17;
  Class v18;
  Class v19;
  id v20;
  uint64_t v21;
  _BYTE v22[136];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v0, v22);
  *(_OWORD *)(inited + 16) = xmmword_1060470;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)objc_opt_self(MPPropertySet);
  *(_QWORD *)(inited + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylistEntry);
  *(_QWORD *)(inited + 112) = v6;
  v7 = swift_initStackObject(v0, &v21);
  *(_OWORD *)(v7 + 16) = xmmword_1060460;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(v7 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryTVEpisode);
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(v7 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryMovie);
  *(_QWORD *)(v7 + 88) = v10;
  *(_QWORD *)(v7 + 96) = objc_msgSend(v3, "emptyPropertySet");
  v11 = sub_C26530(v7);
  v12 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v15 = objc_msgSend(v12, "initWithProperties:relationships:", isa, v14);

  *(_QWORD *)(inited + 120) = v15;
  v16 = sub_C26530(inited);
  v17 = objc_allocWithZone((Class)MPPropertySet);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  v19 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v20 = objc_msgSend(v17, "initWithProperties:relationships:", v18, v19);

  qword_1500E20 = (uint64_t)v20;
}

uint64_t Player.with(_:)(void (*a1)(id *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, &v20, 1, 0);
  v5 = *(void **)(v4 + 8);
  v6 = *(_QWORD *)(v4 + 16);
  v21 = *(id *)v4;
  v22 = v5;
  v23 = v6;
  v7 = v21;
  v8 = v5;
  swift_bridgeObjectRetain();
  a1(&v21);
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v12 = *(id *)v4;
  v13 = *(void **)(v4 + 8);
  v14 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)v4 = v21;
  *(_QWORD *)(v4 + 8) = v10;
  *(_QWORD *)(v4 + 16) = v11;
  v15 = v9;
  v16 = v10;
  swift_bridgeObjectRetain_n(v11, 2);
  v17 = v15;
  v18 = v16;
  swift_bridgeObjectRelease(v14);

  sub_CFD168();
  swift_bridgeObjectRelease_n(v11, 2);

  return swift_retain(v2);
}

double sub_D07868(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  double result;
  char v12[24];

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(a1);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1[2];
  v8 = (char *)v1 + *(_QWORD *)(v7 + 120);
  v9 = swift_beginAccess(v8, v12, 0, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v5, v8, v2, v9);
  swift_retain(v6);
  dispatch thunk of MusicPlayer.ItemState.item.setter(v5);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t MusicItemState.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  v5 = swift_beginAccess(v4, v7, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4, v5);
}

uint64_t MusicItemState.item.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _BYTE v11[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  v5 = swift_beginAccess(v4, v11, 33, 0);
  v6 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 24))(v4, a1, v6, v5);
  swift_endAccess(v11);
  v9 = sub_D07868(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, double))(v7 + 8))(a1, v6, v9);
}

double (*MusicItemState.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1, 33, 0);
  return sub_D07A54;
}

double sub_D07A54(uint64_t a1, char a2)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = swift_endAccess(a1).n128_u64[0];
  if ((a2 & 1) == 0)
    return sub_D07868(v3);
  return result;
}

uint64_t property wrapper backing initializer of MusicItemState.playabilityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D07A9C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus);
}

uint64_t property wrapper backing initializer of MusicItemState.previewCapabilityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D07A9C(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus);
}

uint64_t sub_D07A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = a4(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, v5);
  Published.init(initialValue:)(v8, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t MusicItemState.previewCapabilityStatus.setter(uint64_t a1)
{
  return sub_D0853C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t)&unk_10A2D78, (uint64_t)&unk_10A2DB0);
}

double sub_D07B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_D07C50();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_D07BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v10[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    MusicItemState.previewCapabilityStatus.setter((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_D07C50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  unsigned int v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(char *, char *, uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  __n128 v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  __n128 v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  void (*v115)(char *, char *, uint64_t, __n128);
  uint64_t v116;
  char *v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  char v121[24];
  char v122[24];
  uint64_t v123;
  uint64_t v124;

  v1 = *v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v95 - v7;
  v103 = type metadata accessor for MusicMovie(0);
  v99 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v102 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for TVEpisode(0);
  v101 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v106 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for Track(0);
  v105 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v110 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = (void (*)(char *, char *, uint64_t, __n128))type metadata accessor for Song(0);
  v109 = *((_QWORD *)v115 - 1);
  __chkstk_darwin(v115);
  v114 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = *(_QWORD *)(v1 + 80);
  __chkstk_darwin(v13);
  v112 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v100 = (uint64_t)&v95 - v16;
  __chkstk_darwin(v17);
  v104 = (uint64_t)&v95 - v18;
  __chkstk_darwin(v19);
  v108 = (uint64_t)&v95 - v20;
  __chkstk_darwin(v21);
  v113 = (char *)&v95 - v22;
  v23 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v117 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v95 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v95 - v30;
  v32 = v0;
  v33 = v0[2];
  swift_retain(v33);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v34);
  v35 = swift_release(v33);
  v36 = *(void (**)(char *, char *, uint64_t, __n128))(v24 + 16);
  v36(v28, v31, v23, v35);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v28, v23);
  if (v37 != enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    v98 = v3;
    if (v37 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    {
      v64 = (uint64_t)v117;
      ((void (*)(char *, char *, uint64_t))v36)(v117, v31, v23);
      MusicItemState.playabilityStatus.setter(v64);
      v65 = *(void (**)(char *, uint64_t))(v24 + 8);
      v65(v31, v23);
      return ((uint64_t (*)(char *, uint64_t))v65)(v28, v23);
    }
    v96 = v37;
    v48 = (void (*)(char *, char *, uint64_t))v36;
    v97 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
    v49 = v32;
    v50 = v32[3];
    KeyPath = swift_getKeyPath(&unk_10A2C58);
    v52 = swift_getKeyPath(&unk_10A2C80);
    swift_retain(v50);
    static Published.subscript.getter(&v118, v53, KeyPath, v52);
    swift_release(v50);
    swift_release(KeyPath);
    swift_release(v52);
    v54 = v118;

    if (!v54)
      goto LABEL_9;
    v55 = v32[3];
    v56 = swift_getKeyPath(&unk_10A2CA0);
    v57 = swift_getKeyPath(&unk_10A2CC8);
    swift_retain(v55);
    static Published.subscript.getter(&v118, v58, v56, v57);
    swift_release(v55);
    swift_release(v56);
    swift_release(v57);
    if ((v118 & 1) != 0)
      goto LABEL_9;
    v59 = v32[3];
    swift_retain(v59);
    v60 = Player.supportsDelegation.getter();
    swift_release(v59);
    if ((v60 & 1) != 0)
      goto LABEL_9;
    v66 = *v32;
    v67 = (char *)v32 + *(_QWORD *)(*v32 + 120);
    v68 = swift_beginAccess(v67, v121, 0, 0);
    v69 = v113;
    (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v66 + 80) - 8) + 16))(v113, v67, v68);
    v71 = v114;
    v70 = v115;
    v72 = v69;
    v73 = v116;
    if (swift_dynamicCast(v114, v72, v116, v115, 6))
    {
      v74 = v109;
    }
    else
    {
      v75 = v108;
      MusicItemState.item.getter(v108);
      v71 = v110;
      v76 = v75;
      v70 = (_QWORD *)v111;
      if (swift_dynamicCast(v110, v76, v73, v111, 6))
      {
        v77 = &v124;
      }
      else
      {
        v78 = v104;
        MusicItemState.item.getter(v104);
        v71 = v106;
        v79 = v78;
        v70 = (_QWORD *)v107;
        if (!swift_dynamicCast(v106, v79, v73, v107, 6))
        {
          v94 = v100;
          MusicItemState.item.getter(v100);
          if (!swift_dynamicCast(v102, v94, v73, v103, 6))
          {
LABEL_9:
            v61 = v117;
            v48(v117, v31, v23);
            v62 = (uint64_t)v61;
LABEL_10:
            MusicItemState.playabilityStatus.setter(v62);
            return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v31, v23);
          }
          (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v103);
          v80 = v2;
          v81 = v98;
          v73 = v116;
LABEL_23:
          v82 = v112;
          v83 = *v49;
          v84 = (char *)v49 + *(_QWORD *)(*v49 + 120);
          v85 = swift_beginAccess(v84, v122, 0, 0);
          (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v83 + 80) - 8) + 16))(v82, v84, v85);
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB990);
          if (swift_dynamicCast(&v118, v82, v73, v86, 6))
          {
            v87 = *((_QWORD *)&v119 + 1);
            v88 = v120;
            __swift_project_boxed_opaque_existential_1(&v118, *((uint64_t *)&v119 + 1));
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v88);
            v90 = v89;
            __swift_destroy_boxed_opaque_existential_1(&v118);
            v91 = v117;
            if (v90)
            {
              v92 = swift_bridgeObjectRelease(v90);
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v24 + 104))(v91, v96, v23, v92);
LABEL_28:
              v62 = (uint64_t)v91;
              goto LABEL_10;
            }
          }
          else
          {
            v120 = 0;
            v118 = 0u;
            v119 = 0u;
            sub_56024((uint64_t)&v118, (uint64_t *)&unk_15017D0);
            v91 = v117;
          }
          (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v91, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v80);
          (*(void (**)(char *, _QWORD, uint64_t, __n128))(v24 + 104))(v91, v97, v23, v93);
          goto LABEL_28;
        }
        v77 = &v123;
      }
      v74 = *(v77 - 32);
    }
    (*(void (**)(char *, _QWORD *))(v74 + 8))(v71, v70);
    v80 = v2;
    v81 = v98;
    goto LABEL_23;
  }
  v115 = v36;
  v116 = v24;
  (*(void (**)(char *, uint64_t))(v24 + 96))(v28, v23);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v28, v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
  v38 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v8, v5);
  v39 = *(void (**)(char *, uint64_t))(v3 + 8);
  v39(v5, v2);
  if ((v38 & 1) == 0)
    goto LABEL_11;
  v40 = v32[3];
  v41 = swift_getKeyPath(&unk_10A2C58);
  v42 = swift_getKeyPath(&unk_10A2C80);
  swift_retain(v40);
  static Published.subscript.getter(&v118, v43, v41, v42);
  swift_release(v40);
  swift_release(v41);
  swift_release(v42);
  v44 = v118;

  if (v44)
  {
    v45 = v116;
    v46 = (uint64_t)v117;
    (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v117, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v23);
    MusicItemState.playabilityStatus.setter(v46);
    v39(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v31, v23);
  }
  else
  {
LABEL_11:
    v63 = (uint64_t)v117;
    ((void (*)(char *, char *, uint64_t))v115)(v117, v31, v23);
    MusicItemState.playabilityStatus.setter(v63);
    v39(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v31, v23);
  }
}

double MusicItemState.playabilityStatus.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_D088A4((uint64_t)&unk_10A2DD0, (uint64_t)&unk_10A2E08, a1);
}

double sub_D084EC@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.playabilityStatus.getter(a1);
}

uint64_t sub_D0850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_D08960(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(char *))MusicItemState.playabilityStatus.setter);
}

uint64_t MusicItemState.playabilityStatus.setter(uint64_t a1)
{
  return sub_D0853C(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&unk_10A2DD0, (uint64_t)&unk_10A2E08);
}

uint64_t sub_D0853C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v18[4];

  v8 = *v4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v18 - v11;
  v14 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 88);
  v18[2] = v14;
  v18[3] = v13;
  KeyPath = swift_getKeyPath(a3);
  v18[0] = v14;
  v18[1] = v13;
  v16 = swift_getKeyPath(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain(v4);
  static Published.subscript.setter(v12, v4, KeyPath, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

void (*MusicItemState.playabilityStatus.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A2DD0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A2E08);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

double MusicItemState.$playabilityStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128), v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FC0);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t MusicItemState.$playabilityStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC860);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), v12, 33, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FC0);
  Published.projectedValue.setter(v7, v8);
  v9 = swift_endAccess(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 8))(a1, v3, v9);
}

void (*MusicItemState.$playabilityStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC860);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  MusicItemState.$playabilityStatus.getter();
  return sub_D08884;
}

void sub_D08884(uint64_t a1, char a2)
{
  sub_D08C44(a1, a2, (void (*)(void *))MusicItemState.$playabilityStatus.setter);
}

double MusicItemState.previewCapabilityStatus.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_D088A4((uint64_t)&unk_10A2D78, (uint64_t)&unk_10A2DB0, a1);
}

double sub_D088A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  double result;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_D0892C@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.previewCapabilityStatus.getter(a1);
}

uint64_t sub_D0894C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_D08960(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t (*)(char *))MusicItemState.previewCapabilityStatus.setter);
}

uint64_t sub_D08960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

void (*MusicItemState.previewCapabilityStatus.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A2D78);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A2DB0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

double MusicItemState.$previewCapabilityStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136), v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FD0);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t MusicItemState.$previewCapabilityStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC858);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136), v12, 33, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FD0);
  Published.projectedValue.setter(v7, v8);
  v9 = swift_endAccess(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 8))(a1, v3, v9);
}

void (*MusicItemState.$previewCapabilityStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC858);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  MusicItemState.$previewCapabilityStatus.getter();
  return sub_D08C38;
}

void sub_D08C38(uint64_t a1, char a2)
{
  sub_D08C44(a1, a2, (void (*)(void *))MusicItemState.$previewCapabilityStatus.setter);
}

void sub_D08C44(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v7 = v4[1];
    v8 = v4[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 32));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t *MusicItemState.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  swift_release();
  swift_release();
  v2 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120), v2);
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 128);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (uint64_t)v0 + *(_QWORD *)(*v0 + 136);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t MusicItemState.__deallocating_deinit()
{
  return sub_D08D94((void (*)(void))MusicItemState.deinit);
}

uint64_t sub_D08D94(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

uint64_t sub_D08DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for MusicItemState(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a3 = result;
  return result;
}

void sub_D08DF8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject(&unk_13B8B00, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (uint64_t *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(double *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_56024((uint64_t)v8, (uint64_t *)&unk_1500E30);
    v14 = 7168;
LABEL_6:
    v22 = 0;
    goto LABEL_7;
  }
  v15 = TaskPriority.rawValue.getter(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  v14 = v15 | 0x1C00;
  v16 = *v12;
  if (!*v12)
    goto LABEL_6;
  v17 = *(_QWORD *)(v11 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v16);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
  v21 = v20;
  swift_unknownObjectRelease(v16);
  if (!(v21 | v19))
    goto LABEL_6;
  v24[0] = 0;
  v24[1] = 0;
  v22 = v24;
  v24[2] = v19;
  v24[3] = v21;
LABEL_7:
  v23 = swift_task_create(v14, v22, (char *)&type metadata for () + 8, &unk_1501840, v11);
  swift_release(v23);
}

void sub_D08FD0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject(&unk_13B8D30, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (uint64_t *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(double *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_56024((uint64_t)v8, (uint64_t *)&unk_1500E30);
    v14 = 0;
    v15 = 0;
    v16 = 7168;
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v16 = v17 | 0x1C00;
    v18 = *v12;
    if (*v12)
    {
      v19 = *(_QWORD *)(v11 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v18);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v19);
      v15 = v21;
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
  }
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501918);
  if (v15 | v14)
  {
    v25[0] = 0;
    v25[1] = 0;
    v23 = v25;
    v25[2] = v14;
    v25[3] = v15;
  }
  else
  {
    v23 = 0;
  }
  v24 = swift_task_create(v16, v23, v22, &unk_1501910, v11);
  swift_release(v24);
}

uint64_t sub_D091A0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v6 + 136) = a6;
  *(double *)(v6 + 128) = a1;
  *(_QWORD *)(v6 + 120) = a5;
  v7 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v6 + 144) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 152) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 160) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 168) = swift_task_alloc(v9);
  v11 = type metadata accessor for DispatchQoS.QoSClass(0, v10);
  *(_QWORD *)(v6 + 176) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 184) = v12;
  *(_QWORD *)(v6 + 192) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v6 + 200) = v13;
  *(_QWORD *)(v6 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D09264, 0, 0);
}

uint64_t sub_D09264()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  double **v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *((_QWORD *)v0 + 25);
  v2 = *((_QWORD *)v0 + 26);
  v3 = *((_QWORD *)v0 + 24);
  v20 = *((_QWORD *)v0 + 23);
  v21 = *((_QWORD *)v0 + 22);
  v4 = *((_QWORD *)v0 + 20);
  v22 = *((_QWORD *)v0 + 21);
  v23 = *((_QWORD *)v0 + 19);
  v24 = *((_QWORD *)v0 + 18);
  v5 = v0[16];
  v6 = *((_QWORD *)v0 + 15);
  v7 = swift_allocObject(&unk_13B8B28, 17, 7);
  *((_QWORD *)v0 + 27) = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_13B8B50, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *((_QWORD *)v0 + 6) = sub_D0D118;
  *((_QWORD *)v0 + 7) = v8;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_42D124;
  *((_QWORD *)v0 + 5) = &block_descriptor_164_0;
  v9 = _Block_copy(v0 + 2);
  *((_QWORD *)v0 + 14) = _swiftEmptyArrayStorage;
  v10 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v12 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v1, v10);
  v13 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DispatchWorkItem.init(flags:block:)(v2, v9);
  *((_QWORD *)v0 + 28) = v14;
  swift_release();
  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v21);
  v15 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v3, v21);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v4, v5);
  v17 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v17(v4, v24);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v22, v14);

  v17(v22, v24);
  v18 = (double **)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *((_QWORD *)v0 + 29) = v18;
  *v18 = v0;
  v18[1] = (double *)sub_D094F8;
  return Task.value.getter();
}

uint64_t sub_D094F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_D09724;
  else
    v3 = sub_D0955C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_D0955C()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[27];
  v2 = swift_beginAccess(v1 + 16, v0 + 11, 0, 0);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501848);
    v4 = sub_5C150(&qword_1501850, &qword_1501848, (uint64_t)&unk_10A31E8);
    v5 = swift_allocError(v3, v4, 0, 0);
    swift_willThrow(v5);
    v6 = v0[27];
    v8 = swift_beginAccess(v6 + 16, v0 + 8, 0, 0);
    if ((*(_BYTE *)(v6 + 16) & 1) == 0)
    {
      v9 = v0[15];
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v11 = swift_allocError(v10, &protocol self-conformance witness table for Error, 0, 0);
      *v12 = v5;
      swift_errorRetain(v5);
      v7 = swift_continuation_throwingResumeWithError(v9, v11);
    }
    v13 = v0[26];
    v14 = v0[24];
    v16 = v0[20];
    v15 = v0[21];
    swift_willThrow(v7);
    swift_release();
    swift_release();
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    v17 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v18 = v0[26];
    v19 = v0[24];
    v21 = v0[20];
    v20 = v0[21];
    v22 = v0[15];
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    swift_continuation_throwingResume(v22);
    swift_release();
    swift_release();
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    v17 = (uint64_t (*)(void))v0[1];
  }
  return v17();
}

uint64_t sub_D09724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = swift_beginAccess(v2 + 16, v0 + 64, 0, 0);
  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 120);
    dispatch thunk of DispatchWorkItem.cancel()(v4);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = v1;
    swift_errorRetain(v1);
    v3 = swift_continuation_throwingResumeWithError(v5, v7);
  }
  v9 = *(_QWORD *)(v0 + 208);
  v10 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 168);
  swift_willThrow(v3);
  swift_release();
  swift_release();
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D09824(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _BYTE v15[24];

  swift_beginAccess(a1 + 16, v15, 1, 0);
  *(_BYTE *)(a1 + 16) = 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = sub_5C150(a4, a3, (uint64_t)&unk_10A31E8);
  v10 = swift_allocError(v8, v9, 0, 0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
  *v13 = v10;
  return swift_continuation_throwingResumeWithError(a2, v12);
}

uint64_t Player.NowPlayingObserver.init(player:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  int v21;
  unsigned int v22;
  char v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[3];
  _QWORD v61[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE8);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FF0);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  __chkstk_darwin(v11);
  v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = &_swiftEmptySetSingleton;
  v56 = v1 + 32;
  _s9MusicCore6PlayerC18NowPlayingObserverC22__observationRegistrar33_031AD420BBF8BBF113A2662767DAC2BBLL11Observation0oH0Vvpfi_0();
  KeyPath = swift_getKeyPath(&unk_10A2BC8);
  v14 = swift_getKeyPath(&unk_10A2BF0);
  v59 = a1;
  static Published.subscript.getter(v61, a1, KeyPath, v14);
  swift_release();
  swift_release();
  v15 = (void *)v61[0];
  v16 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v61[0];
  v17 = v15;

  v18 = swift_getKeyPath(&off_10A2E28);
  v61[0] = v1;
  v19 = sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v61, v18, v19);
  swift_release();
  *(_QWORD *)&v20 = swift_beginAccess(v1 + 16, v61, 0, 0).n128_u64[0];
  v21 = *(unsigned __int8 *)(v1 + 16);
  v52 = v17;
  if (v15)
  {
    v22 = objc_msgSend(v17, "isSharedListeningSession", v20);
    v23 = v22;
    v24 = v50;
    if (v21 == v22)
      goto LABEL_7;
    goto LABEL_6;
  }
  v24 = v50;
  if ((v21 & 1) != 0)
  {
    v23 = 0;
LABEL_6:
    v25 = swift_getKeyPath(&off_10A2E28);
    v26 = __chkstk_darwin(v25);
    *(&v49 - 2) = v1;
    *((_BYTE *)&v49 - 8) = v23;
    v60[0] = (id)v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v60, v25, sub_D0C2F0, v26);
    swift_release();
  }
LABEL_7:
  swift_beginAccess(v59 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v60, 33, 0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
  Published.projectedValue.getter(v27);
  swift_endAccess(v60);
  v28 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v60[0] = (id)static OS_dispatch_queue.main.getter(v28, v29, v30, v31, v32, v33, v34, v35);
  v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 1, 1, v36);
  v37 = sub_5C150((unint64_t *)&qword_1500760, &qword_1500FE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v38 = sub_D0BE38();
  v39 = v54;
  Publisher.receive<A>(on:options:)(v60, v6, v54, v28, v37, v38);
  sub_56024((uint64_t)v6, (uint64_t *)&unk_15039E0);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v39);
  v40 = sub_5C150(&qword_1501010, &qword_1500FE8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v41 = v55;
  Publisher.dropFirst(_:)(1, v55, v40);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v41);
  v42 = swift_allocObject(&unk_13B86F8, 24, 7);
  swift_weakInit(v42 + 16);
  v43 = sub_5C150(&qword_1501018, &qword_1500FF0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v44 = v58;
  Publisher<>.sink(receiveValue:)(sub_D0C2E8, v42, v58, v43);
  v45 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v24, v44, v45);
  v46 = v56;
  v47 = swift_beginAccess(v56, v60, 33, 0);
  AnyCancellable.store(in:)(v46, v47);
  swift_endAccess(v60);
  swift_release();
  swift_release();

  return v2;
}

double Player.NowPlayingObserver.isSharedListeningSession.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  double v2;
  double result;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_10A2E28);
  v4 = v0;
  sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v4, KeyPath, sub_D0C2F0, v2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_D09E84(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  id v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = *(void **)(Strong + 24);
    *(_QWORD *)(Strong + 24) = v2;
    v7 = v2;

    sub_D0A23C();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t Player.NowPlayingObserver.isSharedListeningSession.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&off_10A2E28);
  v4[0] = v0;
  v2 = sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 16, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_D09F98(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&off_10A2E28);
  v6[0] = v3;
  v5 = sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release();
  swift_beginAccess(v3 + 16, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_D0A038(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double v4;
  double result;
  uint64_t v6;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&off_10A2E28);
  v6 = v2;
  sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_D0C2F0, v4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void (*Player.NowPlayingObserver.isSharedListeningSession.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  KeyPath = swift_getKeyPath(&off_10A2E28);
  v4[4] = OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  *v4 = v2;
  v6 = sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  v4[5] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release();
  *v4 = v2;
  v7 = swift_getKeyPath(&off_10A2E28);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release();
  swift_beginAccess(v2 + 16, v4, 33, 0);
  return sub_D0A1D4;
}

void sub_D0A1D4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;

  v1 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  v2 = v1[5];
  *v1 = v1[3];
  KeyPath = swift_getKeyPath(&off_10A2E28);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v1, KeyPath, v2);
  swift_release(KeyPath);
  free(v1);
}

void sub_D0A23C()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  double v5;
  int v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD v10[3];

  v1 = *(void **)(v0 + 24);
  KeyPath = swift_getKeyPath(&off_10A2E28);
  v10[0] = v0;
  v3 = sub_4DD24((unint64_t *)&unk_1501000, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  v4 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v10, KeyPath, v3);
  swift_release();
  *(_QWORD *)&v5 = swift_beginAccess(v0 + 16, v10, 0, 0).n128_u64[0];
  v6 = *(unsigned __int8 *)(v0 + 16);
  if (v1)
  {
    if (v6 == objc_msgSend(v4, "isSharedListeningSession", v5))
    {

      return;
    }
  }
  else if ((v6 & 1) == 0)
  {
    return;
  }
  v7 = swift_getKeyPath(&off_10A2E28);
  v8 = __chkstk_darwin(v7);
  v9 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, v7, sub_D0C2F0, v8);
  swift_release();

}

uint64_t Player.NowPlayingObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t Player.NowPlayingObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_D0A44C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A2D30);
  v5 = swift_getKeyPath(&unk_10A2D58);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_D0A4C8(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A2D30);
  v5 = swift_getKeyPath(&unk_10A2D58);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_D0A534(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A3188);
  v5 = swift_getKeyPath(&unk_10A31B0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_D0A5B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21BAD0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_D3DF00();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_708C84(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_D0A67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_C32760(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_D3E0B4();
      v9 = v19;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_5C04C(v12 + *(_QWORD *)(v14 + 72) * v6, a2, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    sub_D0AD28(v6, v9);
    *v3 = v9;
    v15 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v14 + 56))(a2, 0, 1, v13, v15);
  }
  else
  {
    v17 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17, v18);
  }
}

uint64_t sub_D0A7B8(unint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_C327C4(a1);
    v12 = v11;
    swift_bridgeObjectRelease(v4);
    if ((v12 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v4 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_D3E6F0();
        v4 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = __CocoaDictionary.lookup(_:)();

  if (!v7)
  {
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  swift_unknownObjectRelease(v7);
  v8 = __CocoaDictionary.count.getter(v5);
  v4 = sub_D0AAE8(v5, v8);
  swift_retain(v4);
  a1 = sub_C327C4((uint64_t)v6);
  v10 = v9;
  swift_release(v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * a1);
  sub_708924(a1, v4);
  v15 = *v2;
  *v2 = v4;
  swift_bridgeObjectRelease(v15);
  return v14;
}

uint64_t sub_D0A904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_C32760(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_D3E898();
      v9 = v19;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_D0B1CC(v6, v9);
    *v3 = v9;
    v15 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v14 + 56))(a2, 0, 1, v13, v15);
  }
  else
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17, v18);
  }
}

uint64_t sub_D0AA48(uint64_t a1, void *a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v10;
  Swift::Int v11;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = __CocoaDictionary.count.getter(v7);
  if (!__OFADD__(result, 1))
  {
    v6 = sub_D0AAE8(v7, result + 1);
    *v3 = v6;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_C27B80(a1, a2, isUniquelyReferenced_nonNull_native);
    v10 = *v3;
    *v3 = v11;
    return swift_bridgeObjectRelease(v10);
  }
  __break(1u);
  return result;
}

Swift::Int sub_D0AAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAC0);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_4E684(0, &qword_14FDA78, MPCPlayerPath_ptr);
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_15017F8);
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_D3CC68(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v4;
}

void sub_D0AD28(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v44 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v45 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v43(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_4DD24(&qword_1501830, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v44)
        {
          if (v21 >= v44 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25, v26);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            v31 = v27 + v29 * a1;
            v32 = v29 * v9;
            v33 = v27 + v29 * v9;
            v34 = v33 + v29;
            if (v30 < v32 || v31 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack(v31, v33, 1, v28);
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v30 != v32)
              {
                swift_arrayInitWithTakeBackToFront(v31, v33);
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v44 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v36;
    v38 = (-1 << a1) - 1;
  }
  else
  {
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v38 = *v36;
    v37 = (-1 << a1) - 1;
  }
  *v36 = v38 & v37;
  v39 = *(_QWORD *)(a2 + 16);
  v40 = __OFSUB__(v39, 1);
  v41 = v39 - 1;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v41;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_D0AFFC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt *v9;
  Swift::UInt v10;
  Swift::UInt v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (Swift::UInt *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v25);
        Hasher._combine(_:)(v10);
        Hasher._combine(_:)(v11);
        result = Hasher._finalize()();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_D0B1CC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v44 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v45 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v43(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_4DD24(&qword_1501830, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v44)
        {
          if (v21 >= v44 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25, v26);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            v31 = v27 + v29 * a1;
            v32 = v29 * v9;
            v33 = v27 + v29 * v9;
            v34 = v33 + v29;
            if (v30 < v32 || v31 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack(v31, v33, 1, v28);
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v30 != v32)
              {
                swift_arrayInitWithTakeBackToFront(v31, v33);
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v44 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v36;
    v38 = (-1 << a1) - 1;
  }
  else
  {
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v38 = *v36;
    v37 = (-1 << a1) - 1;
  }
  *v36 = v38 & v37;
  v39 = *(_QWORD *)(a2 + 16);
  v40 = __OFSUB__(v39, 1);
  v41 = v39 - 1;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v41;
    ++*(_DWORD *)(a2 + 36);
  }
}

BOOL sub_D0B4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v7;
  _QWORD *v8;
  uint64_t DynamicType;
  uint64_t v10;
  void *v11;
  BOOL v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v15 = a3;
  v16 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v14);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  v7 = v15;
  v8 = __swift_project_boxed_opaque_existential_1(v14, v15);
  DynamicType = swift_getDynamicType(v8, v7, 1);
  v10 = sub_D01B94(DynamicType, v16);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = MPCPlayerResponse.canPerform(_:)((uint64_t)v14);

  }
  else
  {
    v12 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v12;
}

uint64_t sub_D0B548(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = (_QWORD *)swift_task_alloc(dword_1501924);
  *(_QWORD *)(v6 + 24) = v10;
  *v10 = v6;
  v10[1] = sub_1C3724;
  return sub_D0D834(a5, a6, a2);
}

_QWORD *sub_D0B5B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  char *v118;
  uint64_t v119;
  id v120[4];

  v105 = a1;
  v106 = a3;
  v119 = a2;
  v4 = *v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC858);
  v112 = *(_QWORD *)(v5 - 8);
  v113 = v5;
  __chkstk_darwin(v5);
  v111 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501950);
  v115 = *(_QWORD *)(v7 - 8);
  v116 = v7;
  __chkstk_darwin(v7);
  v114 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  __chkstk_darwin(v9);
  v118 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC860);
  v12 = *(_QWORD *)(v11 - 8);
  v107 = v11;
  v108 = v12;
  __chkstk_darwin(v11);
  v103 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC868);
  v15 = *(_QWORD *)(v14 - 8);
  v109 = v14;
  v110 = v15;
  __chkstk_darwin(v14);
  v104 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FD0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500FC0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[4] = _swiftEmptyArrayStorage;
  v29 = v3 + 4;
  v30 = (char *)v3 + *(_QWORD *)(v4 + 128);
  (*(void (**)(char *, _QWORD, double))(v31 + 104))(v28, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v26);
  v117 = *(_OWORD *)(v4 + 80);
  property wrapper backing initializer of MusicItemState.playabilityStatus((uint64_t)v28, v32, v33);
  v34 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v35 = v3;
  v34(v30, v24, v21);
  v36 = (char *)v3 + *(_QWORD *)(*v3 + 136);
  v37 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v38 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v20, v37, v38);
  (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v100);
  property wrapper backing initializer of MusicItemState.previewCapabilityStatus((uint64_t)v20, v39, v40);
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v36, v18, v102);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16))((char *)v3 + *(_QWORD *)(*v3 + 120), v105);
  v41 = v106;
  v42 = v119;
  v3[2] = v119;
  v3[3] = v41;
  swift_retain(v41);
  swift_retain(v42);
  v43 = sub_D07C50();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter(v43);
  v44 = MusicItemState.previewCapabilityStatus.setter((uint64_t)v20);
  v45 = v103;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter(v44);
  v46 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  v120[0] = (id)static OS_dispatch_queue.main.getter(v46, v47, v48, v49, v50, v51, v52, v53, v99, v100, v101, v102, v103, v104, v105);
  v54 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
  v56 = v118;
  v55(v118, 1, 1, v54);
  v57 = sub_5C150((unint64_t *)&unk_1501960, &qword_14FC860, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v58 = sub_D0BE38();
  v59 = v104;
  v60 = v56;
  v61 = (uint64_t)v56;
  v62 = v107;
  v106 = v58;
  Publisher.receive<A>(on:options:)(v120, v60, v107, v46, v57, v58);
  sub_56024(v61, (uint64_t *)&unk_15039E0);

  (*(void (**)(char *, uint64_t))(v108 + 8))(v45, v62);
  v63 = swift_allocObject(&unk_13B8DA8, 24, 7);
  swift_weakInit(v63 + 16);
  v64 = swift_allocObject(&unk_13B8DD0, 40, 7);
  *(_OWORD *)(v64 + 16) = v117;
  *(_QWORD *)(v64 + 32) = v63;
  v65 = sub_5C150(&qword_14FC870, &qword_14FC868, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v66 = v109;
  v67 = Publisher<>.sink(receiveValue:)(sub_D0DF88, v64, v109, v65);
  v68 = swift_release(v64);
  (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v59, v66, v68);
  swift_beginAccess(v29, v120, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
  v71 = *(_QWORD *)((char *)&dword_10 + (*v29 & 0xFFFFFFFFFFFFFF8));
  v70 = *(_QWORD *)((char *)&dword_18 + (*v29 & 0xFFFFFFFFFFFFFF8));
  if (v71 >= v70 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
  v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v67);
  specialized Array._endMutation()(v72);
  v73 = swift_endAccess(v120);
  v74 = v111;
  v75 = v119;
  v76 = dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter(v73);
  v120[0] = (id)static OS_dispatch_queue.main.getter(v76, v77, v78, v79, v80, v81, v82, v83, v99, v100, v101, v102, v103, v104, v105);
  v84 = (uint64_t)v118;
  v55(v118, 1, 1, v54);
  v85 = sub_5C150(qword_1501970, &qword_14FC858, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v86 = v113;
  v87 = v114;
  Publisher.receive<A>(on:options:)(v120, v84, v113, v46, v85, v106);
  sub_56024(v84, (uint64_t *)&unk_15039E0);

  (*(void (**)(char *, uint64_t))(v112 + 8))(v74, v86);
  v88 = swift_allocObject(&unk_13B8DA8, 24, 7);
  swift_weakInit(v88 + 16);
  v89 = swift_allocObject(&unk_13B8DF8, 32, 7);
  *(_QWORD *)(v89 + 16) = v88;
  *(_QWORD *)(v89 + 24) = v75;
  v90 = sub_5C150(&qword_14FC878, (uint64_t *)&unk_1501950, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v75);
  v91 = v116;
  v92 = Publisher<>.sink(receiveValue:)(sub_D0DFC0, v89, v116, v90);
  v93 = swift_release(v89);
  (*(void (**)(char *, uint64_t, __n128))(v115 + 8))(v87, v91, v93);
  swift_beginAccess(v29, v120, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v94);
  v96 = *(_QWORD *)((char *)&dword_10 + (v35[4] & 0xFFFFFFFFFFFFFF8));
  v95 = *(_QWORD *)((char *)&dword_18 + (v35[4] & 0xFFFFFFFFFFFFFF8));
  if (v96 >= v95 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v95 > 1, v96 + 1, 1);
  v97 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v92);
  specialized Array._endMutation()(v97);
  swift_endAccess(v120);
  return v35;
}

_QWORD *sub_D0BD2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;

  v8 = type metadata accessor for MusicItemState(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return sub_D0B5B4(a1, a2, a3);
}

uint64_t sub_D0BD84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_D0BDA8(void *a1)
{
  sub_D0621C(a1);
}

void sub_D0BDB0(void *a1)
{
  uint64_t v1;

  sub_D067F0(a1, *(void (**)(id))(v1 + 16));
}

uint64_t block_copy_helper_303(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_303(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_D0BDD0(uint64_t a1)
{
  uint64_t v1;

  return sub_D06798(a1, v1);
}

double sub_D0BDE8(uint64_t a1)
{
  uint64_t v1;

  return sub_CFAEAC(a1, v1, (uint64_t)&unk_13B8C18, (uint64_t)&unk_15018C0);
}

double sub_D0BE10(uint64_t a1)
{
  uint64_t v1;

  return sub_CFAEAC(a1, v1, (uint64_t)&unk_13B8BF0, (uint64_t)&unk_15018B0);
}

unint64_t sub_D0BE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1500F60;
  if (!qword_1500F60)
  {
    v1 = sub_4E684(255, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1500F60);
  }
  return result;
}

uint64_t sub_D0BE94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1500F74);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_CFB1E0(a1, v4, v5, v6);
}

uint64_t sub_D0BF00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D0BF10()
{
  uint64_t v0;

  return swift_continuation_throwingResume(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for Player.NowPlayingObserver(uint64_t a1)
{
  return sub_6345C(a1, qword_1501728, (uint64_t)&nominal type descriptor for Player.NowPlayingObserver);
}

uint64_t sub_D0BF64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_D0BFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_CFC6C4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(void (**)(uint64_t))(v3 + 32));
}

uint64_t sub_D0BFAC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_D0BFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_CFCA10(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_D0BFEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D0BFFC(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_CFD0BC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_D0C004(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64x2_t i;
  unint64_t v8;
  unint64_t v9;
  int64x2_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v1 = 0;
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  for (i = 0uLL; ; i = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v10, i), (int8x16_t)v10, (int8x16_t)i))
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v1 << 6);
      goto LABEL_5;
    }
    v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6)
      return i.i64[0];
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v1;
    if (!v12)
    {
      v1 = v11 + 1;
      if (v11 + 1 >= v6)
        return i.i64[0];
      v12 = *(_QWORD *)(v2 + 8 * v1);
      if (!v12)
      {
        v1 = v11 + 2;
        if (v11 + 2 >= v6)
          return i.i64[0];
        v12 = *(_QWORD *)(v2 + 8 * v1);
        if (!v12)
        {
          v1 = v11 + 3;
          if (v11 + 3 >= v6)
            return i.i64[0];
          v12 = *(_QWORD *)(v2 + 8 * v1);
          if (!v12)
          {
            v1 = v11 + 4;
            if (v11 + 4 >= v6)
              return i.i64[0];
            v12 = *(_QWORD *)(v2 + 8 * v1);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v1 << 6);
LABEL_5:
    v10 = *(int64x2_t *)(*(_QWORD *)(result + 48) + 16 * v9);
  }
  v13 = v11 + 5;
  if (v13 >= v6)
    return i.i64[0];
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v1 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v1 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v1 >= v6)
      return i.i64[0];
    v12 = *(_QWORD *)(v2 + 8 * v1);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_D0C138()
{
  unint64_t result;

  result = qword_1500FA0;
  if (!qword_1500FA0)
  {
    result = swift_getWitnessTable(&unk_10A3148, &type metadata for Player.BufferedAirPlayError);
    atomic_store(result, (unint64_t *)&qword_1500FA0);
  }
  return result;
}

uint64_t sub_D0C17C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D0C18C(void *a1)
{
  uint64_t v1;

  return sub_D03088(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_D0C198(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1500FB4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_D03120(a1, v4, v5, v6);
}

double sub_D0C204@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.previewCapabilityStatus.getter(a1);
}

uint64_t sub_D0C224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_D08960(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t (*)(char *))MusicItemState.previewCapabilityStatus.setter);
}

uint64_t sub_D0C248()
{
  return 16;
}

__n128 sub_D0C254(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_D0C260@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.playabilityStatus.getter(a1);
}

uint64_t sub_D0C280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_D08960(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(char *))MusicItemState.playabilityStatus.setter);
}

uint64_t sub_D0C2A4()
{
  return 16;
}

__n128 sub_D0C2B0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_D0C2C4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_D0C2E8(void **a1)
{
  uint64_t v1;

  return sub_D09E84(a1, v1);
}

void sub_D0C2F0()
{
  sub_D0D030();
}

uint64_t sub_D0C304(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for [A : B].Keys.Iterator, a1);
}

unint64_t sub_D0C318()
{
  unint64_t result;

  result = qword_1501020;
  if (!qword_1501020)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.EngineState, &type metadata for Player.EngineState);
    atomic_store(result, (unint64_t *)&qword_1501020);
  }
  return result;
}

double sub_D0C35C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__path, &qword_1500E78);
}

uint64_t sub_D0C380(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, (uint64_t *)&unk_1501820, &OBJC_IVAR____TtC9MusicCore6Player__path, &qword_1500E78);
}

uint64_t sub_D0C3AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Player.nowPlayingObserver.getter();
  *a1 = result;
  return result;
}

double sub_D0C3D4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v3 = *(_QWORD *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver) = v2;
  swift_retain(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

double sub_D0C414(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1500AC0);
}

uint64_t sub_D0C438(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_1500FE0, &OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1500AC0);
}

double sub_D0C464(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_1500E68);
}

uint64_t sub_D0C488(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_1501818, &OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_1500E68);
}

double sub_D0C4BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_1500E60);
}

uint64_t sub_D0C4E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_1501810, &OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_1500E60);
}

double sub_D0C50C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_15004B0);
}

uint64_t sub_D0C530(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_15004B8, &OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_15004B0);
}

double sub_D0C55C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_15004B0);
}

uint64_t sub_D0C580(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_15004B8, &OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_15004B0);
}

void sub_D0C5AC(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

double sub_D0C5FC(unsigned __int8 *a1, _QWORD *a2)
{
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  return sub_D036A4(v4);
}

uint64_t sub_D0C658()
{
  return type metadata accessor for Player(0);
}

uint64_t type metadata accessor for Player(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1501050, (uint64_t)&nominal type descriptor for Player);
}

void sub_D0C674(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[7];
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  const char *v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  const char *v25;
  const char *v26;
  const char *v27;
  const char *v28;
  char *v29;
  const char *v30;
  char *v31;

  v13[0] = "\b";
  v13[1] = "\b";
  sub_D0C7E4(319);
  if (v3 <= 0x3F)
  {
    v13[2] = *(_QWORD *)(v2 - 8) + 64;
    v13[3] = "\b";
    sub_AEEF4(319, &qword_1501080, &qword_1500EA0);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v13[4] = v6;
      sub_AEEF4(319, &qword_1501088, &qword_1500EB0);
      if (v8 <= 0x3F)
      {
        v13[5] = *(_QWORD *)(v7 - 8) + 64;
        sub_AEEF4(319, qword_1501090, &qword_1500EC0);
        if (v10 <= 0x3F)
        {
          v13[6] = *(_QWORD *)(v9 - 8) + 64;
          sub_CDDC2C();
          if (v12 <= 0x3F)
          {
            v14 = *(_QWORD *)(v11 - 8) + 64;
            v15 = v14;
            v16 = "\b";
            v17 = &unk_10A3018;
            v18 = "\b";
            v19 = (char *)&value witness table for Builtin.UnknownObject + 64;
            v20 = &unk_10A3030;
            v21 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v22 = v6;
            v23 = "\b";
            v24 = "\b";
            v25 = "\b";
            v26 = "\b";
            v27 = "\b";
            v28 = "\b";
            v29 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v30 = "\b";
            v31 = (char *)&value witness table for Builtin.NativeObject + 64;
            swift_updateClassMetadata2(a1, 256, 25, v13, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_D0C7E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1501078)
  {
    v2 = sub_4E684(255, &qword_14FDA78, MPCPlayerPath_ptr);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1501078);
  }
}

uint64_t destroy for Player.NowPlayingConfiguration(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9MusicCore6PlayerC23NowPlayingConfigurationVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Player.NowPlayingConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for Player.NowPlayingConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Player.NowPlayingConfiguration()
{
  return &type metadata for Player.NowPlayingConfiguration;
}

uint64_t type metadata accessor for Player.NowPlayingConfiguration.BadCountedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Player.NowPlayingConfiguration.BadCountedSet);
}

uint64_t storeEnumTagSinglePayload for Player.EngineState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_D0C9E4 + 4 * byte_10A2B79[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_D0CA18 + 4 * byte_10A2B74[v4]))();
}

uint64_t sub_D0CA18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D0CA20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD0CA28);
  return result;
}

uint64_t sub_D0CA34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD0CA3CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_D0CA40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D0CA48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.EngineState()
{
  return &type metadata for Player.EngineState;
}

uint64_t type metadata accessor for Player.DataSource()
{
  return objc_opt_self(_TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource);
}

void sub_D0CA84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_D0CB68(319, &qword_15016F0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_D0CB68(319, &qword_15016F8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        swift_initClassMetadata2(a1, 0, 6, v8, a1 + 96);
      }
    }
  }
}

void sub_D0CB68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_D0CBB4()
{
  return type metadata accessor for Player.NowPlayingObserver(0);
}

uint64_t sub_D0CBBC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10A3118;
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.BufferedAirPlayError()
{
  return &type metadata for Player.BufferedAirPlayError;
}

void sub_D0CC5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  __n128 v13;
  uint64_t v14;
  _QWORD v15[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_10A3188);
  v5 = swift_getKeyPath(&unk_10A31B0);
  v15[0] = a1;
  v6 = a1;
  swift_retain(v2);
  static Published.subscript.setter(v15, v2, KeyPath, v5);
  v7 = swift_getKeyPath(&unk_10A3188);
  v8 = swift_getKeyPath(&unk_10A31B0);
  static Published.subscript.getter(v15, v2, v7, v8);
  swift_release(v8);
  swift_release(v7);
  v9 = (void *)v15[0];
  if (v15[0])
  {
    v10 = swift_conformsToProtocol2(&type metadata for Player.ReplaceCommand, &protocol descriptor for _PlayerCommand);
    if (v10)
    {
      v11 = (*(uint64_t (**)(void *))(v10 + 16))(v9);

      if ((v11 & 1) != 0)
      {
        v12 = (_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
        v13 = swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v15, 1, 0);
        v14 = *v12;
        *v12 = 2;
        sub_D036A4(v14, v13);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_D0CD9C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;

  (*(void (**)(uint64_t))(a3 + 16))(a3);
  v5 = objc_msgSend(a1, "request");
  if (v5)
  {
    v6 = v5;
    objc_opt_self(MPCPlayerRequest);
    v7 = swift_dynamicCastObjCClass(v6);
    if (!v7)
    {
      swift_unknownObjectRelease(v6);
      return;
    }
    v8 = v7;
    v9 = *(void (**)(uint64_t))(a2
                                        + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onResponseChanged);
    v10 = objc_msgSend(a1, "response");
    if (v10)
    {
      v11 = v10;
      objc_opt_self(MPCPlayerResponse);
      v12 = swift_dynamicCastObjCClass(v11);
      if (v12)
      {
        v13 = (void *)v12;
LABEL_10:
        v14 = v13;
        v9(v8);
        swift_unknownObjectRelease(v6);

        return;
      }
      swift_unknownObjectRelease(v11);
    }
    v13 = 0;
    goto LABEL_10;
  }
}

uint64_t sub_D0CECC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D0CF00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_15017E4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_CFBE70(a1, v4, v5, v7, v6);
}

double sub_D0CF78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_D03E38(a1, a2, v2);
}

void sub_D0CF80(void *a1, uint64_t a2)
{
  sub_D04094(a1, a2);
}

double sub_D0CF88()
{
  uint64_t v0;

  return sub_D04828(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_D0CFA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_D0CFCC()
{
  uint64_t v0;

  sub_D050B0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_D0CFD4()
{
  uint64_t v0;

  sub_D03F0C(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_D0CFF4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_D0CC5C(v1);

}

void sub_D0D030()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  swift_beginAccess(v1 + 16, v3, 1, 0);
  *(_BYTE *)(v1 + 16) = v2;
}

uint64_t sub_D0D084(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = *((_QWORD *)v1 + 6);
  v9 = (_QWORD *)swift_task_alloc(dword_150183C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return sub_D091A0(v7, a1, v4, v5, v6, v8);
}

uint64_t sub_D0D108()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_D0D118()
{
  uint64_t v0;

  return sub_D09824(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1501848, &qword_1501850);
}

double sub_D0D140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_D0560C(a1, a2, v2);
}

void sub_D0D148(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_D05E08(a1, a2, v2);
}

uint64_t sub_D0D150()
{
  uint64_t v0;

  return sub_D056E0(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_D0D16C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  if (v0[5])
    swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_errorRelease(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_D0D1B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_150187C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_50F8C;
  return sub_CFCB70(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_D0D25C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1501894);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_CFB91C(a1, v4, v5, v6);
}

uint64_t sub_D0D2CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_15018AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_CFAFB0(a1, v4, v5, v6);
}

uint64_t sub_D0D33C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_15018BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_CFAD4C(a1, v4, v5, v6);
}

void sub_D0D3A8()
{
  uint64_t v0;

  sub_D06428(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_D0D3C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D0D3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Player.CommandOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D0D42C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Player.CommandOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_D0D468()
{
  unint64_t result;

  result = qword_15018D0;
  if (!qword_15018D0)
  {
    atomic_store(result, (unint64_t *)&qword_15018D0);
  }
  return result;
}

uint64_t sub_D0D4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_D0D518(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_D01678(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_D0D578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501858);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for Player.CommandOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + ((v5 + 47) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  v12 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v5));
  swift_release();
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v9, v13);
  swift_bridgeObjectRelease();

  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_D0D688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1501858) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Player.CommandOptions(0) - 8) + 80);
  v9 = v8 + v7 + 8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = v1 + v6;
  v14 = *(_QWORD *)(v1 + v7);
  v15 = v1 + (v9 & ~v8);
  v16 = (_QWORD *)swift_task_alloc(dword_15018FC);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_50F8C;
  return sub_CFEAF0(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t objectdestroy_153Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_D0D79C(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = *((_QWORD *)v1 + 6);
  v9 = (_QWORD *)swift_task_alloc(dword_150190C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1501908
                                                                                      + dword_1501908))(a1, v7, v4, v5, v6, v8);
}

uint64_t sub_D0D834(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v3 + 152) = a2;
  *(double *)(v3 + 144) = a3;
  *(_QWORD *)(v3 + 136) = a1;
  v4 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v3 + 160) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 168) = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 176) = swift_task_alloc(v6);
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v6);
  v8 = type metadata accessor for DispatchQoS.QoSClass(0, v7);
  *(_QWORD *)(v3 + 192) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 200) = v9;
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v3 + 216) = v10;
  *(_QWORD *)(v3 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D0D8F8, 0, 0);
}

uint64_t sub_D0D8F8()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  double **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *((_QWORD *)v0 + 27);
  v2 = *((_QWORD *)v0 + 28);
  v3 = *((_QWORD *)v0 + 26);
  v22 = *((_QWORD *)v0 + 25);
  v23 = *((_QWORD *)v0 + 24);
  v4 = *((_QWORD *)v0 + 22);
  v24 = *((_QWORD *)v0 + 23);
  v25 = *((_QWORD *)v0 + 21);
  v26 = *((_QWORD *)v0 + 20);
  v5 = v0[18];
  v6 = *((_QWORD *)v0 + 17);
  v7 = swift_allocObject(&unk_13B8B28, 17, 7);
  *((_QWORD *)v0 + 29) = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_13B8D58, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *((_QWORD *)v0 + 6) = sub_D0DF3C;
  *((_QWORD *)v0 + 7) = v8;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_42D124;
  *((_QWORD *)v0 + 5) = &block_descriptor_226_0;
  v9 = _Block_copy(v0 + 2);
  *((_QWORD *)v0 + 14) = _swiftEmptyArrayStorage;
  v10 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v12 = sub_5C150((unint64_t *)&qword_14FF8D0, &qword_14FDF48, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v1, v10);
  v13 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DispatchWorkItem.init(flags:block:)(v2, v9);
  *((_QWORD *)v0 + 30) = v14;
  swift_release();
  sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v23);
  v15 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v3, v23);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v4, v5);
  v17 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v17(v4, v26);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v24, v14);

  v17(v24, v26);
  v18 = (double **)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *((_QWORD *)v0 + 31) = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501918);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  *((_QWORD *)v0 + 32) = v20;
  *v18 = v0;
  v18[1] = (double *)sub_D0DBAC;
  return Task.value.getter(v0 + 15, *((_QWORD *)v0 + 19), v19, v20, &protocol self-conformance witness table for Error);
}

uint64_t sub_D0DBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_D0DE40;
  else
    v3 = sub_D0DC10;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_D0DC10()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = swift_beginAccess(v1 + 16, v0 + 88, 0, 0);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501928);
    v4 = sub_5C150(&qword_1501930, &qword_1501928, (uint64_t)&unk_10A31E8);
    v5 = swift_allocError(v3, v4, 0, 0);
    swift_willThrow(v5);

    v6 = *(_QWORD *)(v0 + 232);
    v8 = swift_beginAccess(v6 + 16, v0 + 64, 0, 0);
    if ((*(_BYTE *)(v6 + 16) & 1) == 0)
    {
      v9 = *(_QWORD *)(v0 + 256);
      v10 = *(_QWORD *)(v0 + 136);
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v11 = swift_allocError(v9, &protocol self-conformance witness table for Error, 0, 0);
      *v12 = v5;
      swift_errorRetain(v5);
      v7 = swift_continuation_throwingResumeWithError(v10, v11);
    }
    v13 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 184);
    swift_willThrow(v7);
    swift_release();
    swift_release();
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 208);
    v24 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 136);
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    v21 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 128) = v21;
    v22 = *(_QWORD *)(*(_QWORD *)(v20 + 64) + 40);
    v23 = v21;
    sub_5C090(v0 + 128, v22, &qword_1501918);
    swift_continuation_throwingResume(v20);
    swift_release();

    swift_release();
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(void *))(v0 + 8))(v21);
  }
}

uint64_t sub_D0DE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = swift_beginAccess(v2 + 16, v0 + 64, 0, 0);
  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 136);
    dispatch thunk of DispatchWorkItem.cancel()(v4);
    v7 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = v1;
    swift_errorRetain(v1);
    v3 = swift_continuation_throwingResumeWithError(v6, v7);
  }
  v10 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 224);
  v12 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  swift_willThrow(v3);
  swift_release(v9);
  swift_release(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D0DF3C()
{
  uint64_t v0;

  return sub_D09824(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_1501928, &qword_1501930);
}

uint64_t sub_D0DF64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_D0DF88(uint64_t a1)
{
  uint64_t v1;

  return sub_D07B54(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_D0DF94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_D0DFC0(uint64_t a1)
{
  uint64_t v1;

  return sub_D07BA8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t _s7TimeoutVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7TimeoutVMn);
}

uint64_t Player.InsertCommand.init(location:playbackIntent:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

int *Player.CommandOptions.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  _QWORD *v3;

  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  result = (int *)type metadata accessor for Player.CommandOptions(0);
  v3 = (_QWORD *)(a1 + result[5]);
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)(a1 + result[6]) = 0;
  *(_BYTE *)(a1 + result[7]) = 0;
  *(_QWORD *)(a1 + result[8]) = 0;
  return result;
}

uint64_t static Player.CommandOptions.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;

  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v4 = (int *)type metadata accessor for Player.CommandOptions(0);
  v5 = (_QWORD *)(a2 + v4[5]);
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)(a2 + v4[6]) = 0;
  *(_BYTE *)(a2 + v4[7]) = 0;
  *(_QWORD *)(a2 + v4[8]) = 0;
  return a1(a2);
}

BOOL MPCPlayerResponse.canPerform(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BOOL8 v7;
  __int128 v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_55D1C(a1, (uint64_t)v11);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501938);
  if (swift_dynamicCast(v9, v11, v2, v3, 6))
  {
    sub_8B15C(v9, (uint64_t)v12);
    v4 = v13;
    v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v1, v4, v5);
    v7 = v6 != 0;
    if (v6)

    __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_D11710((uint64_t)v9);
    return 0;
  }
  return v7;
}

uint64_t MPCPlayerResponse.canPerform(anyOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = a1;
  else
    v5 = 0;
  if (v5)
    return (*(uint64_t (**)(uint64_t))(v4 + 16))(v1) & 1;
  else
    return 0;
}

uint64_t MPCPlayerResponse.perform(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  return swift_task_switch(sub_D0E250, 0, 0);
}

{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch(sub_D1109C, 0, 0);
}

_QWORD *sub_D0E250()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  _QWORD *result;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v1 = (_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(id *)(v0 + 216);
  v4 = (uint64_t)sub_D1186C(v2, (uint64_t)v3);

  v5 = *(_QWORD **)(v0 + 200);
  if (!((unint64_t)v4 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    if (v6 == v5[2])
    {
      swift_bridgeObjectRetain();
      v7 = v6;
      goto LABEL_4;
    }
LABEL_28:
    v32 = v1;
    v33 = (void *)v1[27];
    swift_bridgeObjectRelease(v4);
    v34 = sub_D0D468();
    swift_allocError(&_s12CommandErrorON, v34, 0, 0);
    v36 = v35;
    v37 = v33;
    v38 = swift_bridgeObjectRetain();
    v39 = sub_D119D8(v38, (uint64_t)v37);

    v40 = swift_bridgeObjectRelease(v5);
    *(_QWORD *)v36 = v39;
    *(_BYTE *)(v36 + 40) = 1;
    swift_willThrow(v40);
    return (_QWORD *)((uint64_t (*)(void))v32[1])();
  }
LABEL_22:
  if (v4 < 0)
    v30 = v4;
  else
    v30 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v31 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v4);
  if (v31 != v5[2])
  {
    v5 = (_QWORD *)v1[25];
    goto LABEL_28;
  }
  v5 = (_QWORD *)v31;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v30);
  v6 = (unint64_t)v5;
LABEL_4:
  v41 = v1 + 18;
  if (v7)
  {
    v8 = 0;
    v45 = kMRMediaRemoteOptionCommandID;
    v46 = v4 & 0xC000000000000001;
    v42 = (void *)kMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
    v43 = v7;
    v44 = v4;
    while (1)
    {
      if (v46)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
      else
        v9 = *(id *)(v4 + 8 * v8 + 32);
      v10 = v9;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_22;
      }
      v12 = v1;
      UUID.uuidString.getter(v9);
      v14 = v13;
      v15 = v6;
      if (v6 < 2)
      {
        v19 = 0;
        v20 = (void *)0xE000000000000000;
      }
      else
      {
        *v41 = v8;
        v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v16._object;
        String.append(_:)(v16);
        swift_bridgeObjectRelease(object);
        v18._countAndFlagsBits = 93;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        v19 = 23341;
        v20 = (void *)0xE200000000000000;
      }
      swift_bridgeObjectRetain();
      v21._countAndFlagsBits = v19;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v14);
      v5 = String._bridgeToObjectiveC()();
      result = (_QWORD *)swift_bridgeObjectRelease(v14);
      if (!v45)
        break;
      v1 = v12;
      v23 = v12[26];
      objc_msgSend(v10, "setCommandOptionValue:forKey:", v5);

      v4 = v44;
      v6 = v15;
      if (*(_QWORD *)(v23 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20) + 8))
      {
        result = String._bridgeToObjectiveC()();
        if (!v42)
          goto LABEL_30;
        v5 = result;
        v24 = v42;
        objc_msgSend(v10, "setCommandOptionValue:forKey:", v5, v24);

      }
      ++v8;
      if (v11 == v43)
        goto LABEL_18;
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease(v4);
    v25 = v1[26];
    v26 = objc_allocWithZone((Class)MPCPlayerChangeRequest);
    sub_4E684(0, &qword_1501A08, MPCPlayerCommandRequest_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v28 = objc_msgSend(v26, "initWithCommandRequests:", isa);
    v1[28] = v28;

    v29 = type metadata accessor for Player.CommandOptions(0);
    objc_msgSend(v28, "setOptions:", *(_QWORD *)(v25 + *(int *)(v29 + 24)));
    if (*(_BYTE *)(v25 + *(int *)(v29 + 28)) == 1)
    {
      return (_QWORD *)swift_task_switch(sub_D0E6EC, 0, 0);
    }
    else
    {
      v1[2] = v1;
      v1[3] = sub_D0E8AC;
      v1[22] = swift_continuation_init(v1 + 2, 1);
      v1[18] = _NSConcreteStackBlock;
      v1[19] = 0x40000000;
      v1[20] = sub_C31018;
      v1[21] = &block_descriptor_308;
      objc_msgSend(v28, "performWithCompletion:", v41);
      return (_QWORD *)swift_continuation_await(v1 + 2);
    }
  }
  return result;
}

uint64_t sub_D0E6EC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;

  v1 = v0 + 10;
  v2 = (void *)v0[28];
  v0[15] = v0 + 24;
  v0[10] = v0;
  v0[11] = sub_D0E7C8;
  v3 = swift_continuation_init(v0 + 10, 1);
  v4 = swift_allocObject(&unk_13B8F40, 24, 7);
  v0[18] = _NSConcreteStackBlock;
  v5 = v0 + 18;
  *(_QWORD *)(v4 + 16) = v3;
  v5[4] = sub_D11B9C;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_D11454;
  v5[3] = &block_descriptor_2_0;
  v6 = _Block_copy(v5);
  objc_msgSend(v2, "performWithExtendedStatusCompletion:", v6, swift_release(v5[5]).n128_f64[0]);
  _Block_release(v6);
  return swift_continuation_await(v1);
}

uint64_t sub_D0E7C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 232) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = sub_D0E878;
  }
  else
  {
    *(_QWORD *)(v2 + 240) = *(_QWORD *)(v2 + 192);
    v4 = sub_D0E83C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_D0E83C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_D0E878()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D0E8AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 248) = v1;
  if (v1)
    v2 = sub_D0E948;
  else
    v2 = sub_D0E90C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_D0E90C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_D0E948(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 224);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t Player.CommandOptions.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Player.CommandOptions.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t Player.CommandOptions.userInterfaceArea.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

void Player.CommandOptions.userInterfaceArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Player.CommandOptions.userInterfaceArea.modify())(double)
{
  type metadata accessor for Player.CommandOptions(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Player.CommandOptions.execution.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 24));
}

uint64_t Player.CommandOptions.execution.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Player.CommandOptions(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

double (*Player.CommandOptions.execution.modify())(double)
{
  type metadata accessor for Player.CommandOptions(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Player.CommandOptions.extendedStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 28));
}

uint64_t Player.CommandOptions.extendedStatus.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Player.CommandOptions(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

double (*Player.CommandOptions.extendedStatus.modify())(double)
{
  type metadata accessor for Player.CommandOptions(0);
  return UIScreen.Dimensions.size.getter;
}

void *Player.CommandOptions.route.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 32));
  v2 = v1;
  return v1;
}

void Player.CommandOptions.route.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Player.CommandOptions(0) + 32);

  *(_QWORD *)(v1 + v3) = a1;
}

double (*Player.CommandOptions.route.modify())(double)
{
  type metadata accessor for Player.CommandOptions(0);
  return UIScreen.Dimensions.size.getter;
}

unint64_t Player.CommandOptions.description.getter(uint64_t a1)
{
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  unint64_t v31;

  v30 = 0xD000000000000016;
  v31 = 0x8000000001108690;
  v29._countAndFlagsBits = 0x3D44495555;
  v29._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = UUID.uuidString.getter(a1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x3D44495555;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xE500000000000000);
  v5 = (int *)type metadata accessor for Player.CommandOptions(0);
  v6 = (uint64_t *)(v1 + v5[5]);
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    String.append(_:)(*(Swift::String *)(&v7 - 1));
    v9._countAndFlagsBits = (uint64_t)strcpy((char *)&v29, ", area=");
    v9._object = (void *)0xE700000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  strcpy((char *)&v29, ", execution=");
  BYTE5(v29._object) = 0;
  HIWORD(v29._object) = -5120;
  v28 = *(_QWORD *)(v1 + v5[6]);
  type metadata accessor for MPCPlayerChangeRequestOptions(0);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v28, v10);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v13);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v29._object);
  v29._countAndFlagsBits = 0xD000000000000016;
  v29._object = (void *)0x80000000011086B0;
  if (*(_BYTE *)(v1 + v5[7]))
    v14 = 7562585;
  else
    v14 = 28494;
  if (*(_BYTE *)(v1 + v5[7]))
    v15 = 0xE300000000000000;
  else
    v15 = 0xE200000000000000;
  v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease(v15);
  v17 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v17);
  v18 = *(void **)(v1 + v5[8]);
  if (v18)
  {
    strcpy((char *)&v29, ", route=");
    BYTE1(v29._object) = 0;
    WORD1(v29._object) = 0;
    HIDWORD(v29._object) = -402653184;
    v19 = v18;
    v20 = objc_msgSend(v19, "description");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(v23);
    v25 = v29._object;
    String.append(_:)(v29);

    swift_bridgeObjectRelease(v25);
  }
  v26._countAndFlagsBits = 62;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  return v30;
}

void Player.PlaybackCommand.request(from:)(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

id sub_D0EEDC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;

  return objc_msgSend(v12, "stop");
}

_UNKNOWN **static Player.PlaybackCommand.allCases.getter()
{
  return &off_13A71E8;
}

void sub_D0EF4C(_QWORD *a1@<X8>)
{
  *a1 = &off_13A7210;
}

void sub_D0EF5C(uint64_t a1)
{
  char *v1;

  Player.PlaybackCommand.request(from:)(a1, *v1);
}

BOOL static Player.ChangeCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_changeItemCommand);
}

void Player.ChangeCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "changeItemCommand");

  __asm { BR              X10 }
}

id sub_D0EFD4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  if (!v14)
    return 0;
  v15 = objc_msgSend(v14, "previousItem");
  swift_unknownObjectRelease(v14);
  return v15;
}

_UNKNOWN **static Player.ChangeCommand.allCases.getter()
{
  return &off_13A7238;
}

void sub_D0F090(_QWORD *a1@<X8>)
{
  *a1 = &off_13A7238;
}

BOOL sub_D0F0A0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_changeItemCommand);
}

void sub_D0F0AC(void *a1)
{
  char *v1;

  Player.ChangeCommand.request(from:)(a1, *v1);
}

BOOL static Player.ShuffleCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_shuffleCommand);
}

id Player.ShuffleCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "shuffleCommand");

  if (!a2)
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "advance");
      goto LABEL_9;
    }
    return 0;
  }
  if (a2 != 1)
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "setShuffleType:", 1);
      goto LABEL_9;
    }
    return 0;
  }
  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "setShuffleType:", 0);
LABEL_9:
  v6 = v5;
  swift_unknownObjectRelease(v4);
  return v6;
}

_UNKNOWN **static Player.ShuffleCommand.allCases.getter()
{
  return &off_13A7260;
}

void sub_D0F19C(_QWORD *a1@<X8>)
{
  *a1 = &off_13A7288;
}

BOOL sub_D0F1AC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_shuffleCommand);
}

id sub_D0F1B8(void *a1)
{
  char *v1;

  return Player.ShuffleCommand.request(from:)(a1, *v1);
}

BOOL static Player.FavoriteCommand.isAvailable(in:)(void *a1)
{
  return sub_D1080C(a1, (SEL *)&selRef_likeCommand);
}

id Player.FavoriteCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "playingItem");

  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "likeCommand");

  if (!v5)
    return 0;
  if (a2)
    v6 = a2 == 1;
  else
    v6 = objc_msgSend(v5, "value") ^ 1;
  v7 = objc_msgSend(v5, "changeValue:", v6);
  swift_unknownObjectRelease(v5);
  return v7;
}

BOOL sub_D0F2A8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10984(a1, a2, a3, (SEL *)&selRef_likeCommand);
}

id sub_D0F2B4(void *a1)
{
  char *v1;

  return Player.FavoriteCommand.request(from:)(a1, *v1);
}

BOOL static Player.RepeatCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_repeatCommand);
}

void Player.RepeatCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "repeatCommand");

  __asm { BR              X10 }
}

id sub_D0F32C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  if (!v14)
    return 0;
  v15 = objc_msgSend(v14, "advance");
  swift_unknownObjectRelease(v14);
  return v15;
}

_UNKNOWN **static Player.RepeatCommand.allCases.getter()
{
  return &off_13A72B0;
}

void sub_D0F3D8(_QWORD *a1@<X8>)
{
  *a1 = &off_13A72D8;
}

BOOL sub_D0F3E8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_repeatCommand);
}

void sub_D0F3F4(void *a1)
{
  char *v1;

  Player.RepeatCommand.request(from:)(a1, *v1);
}

BOOL static Player.QueueEndCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_actionAtQueueEndCommand);
}

void Player.QueueEndCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "actionAtQueueEndCommand");

  __asm { BR              X10 }
}

id sub_D0F46C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  v15 = 0;
  if (v14)
  {
    v15 = objc_msgSend(v14, "setQueueEndAction:", 0);
    swift_unknownObjectRelease(v14);
  }
  return v15;
}

_UNKNOWN **static Player.QueueEndCommand.allCases.getter()
{
  return &off_13A7300;
}

void sub_D0F4F8(_QWORD *a1@<X8>)
{
  *a1 = &off_13A7328;
}

BOOL sub_D0F508(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_actionAtQueueEndCommand);
}

void sub_D0F514(void *a1)
{
  char *v1;

  Player.QueueEndCommand.request(from:)(a1, *v1);
}

void *Player.InsertCommand.location.getter(uint64_t a1, void *a2)
{
  sub_1D81FC(a2);
  return a2;
}

void Player.InsertCommand.Location.hash(into:)(uint64_t a1, void *a2)
{
  Swift::UInt v4;
  id v5;

  switch((unint64_t)a2)
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      v4 = 2;
      goto LABEL_7;
    case 2uLL:
      v4 = 3;
      goto LABEL_7;
    case 3uLL:
      v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v5 = a2;
      NSObject.hash(into:)(a1);
      sub_DB514(a2);
      break;
  }
}

Swift::Int Player.InsertCommand.Location.hashValue.getter(void *a1)
{
  Swift::UInt v2;
  id v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  switch((unint64_t)a1)
  {
    case 0uLL:
      v2 = 0;
      goto LABEL_7;
    case 1uLL:
      v2 = 2;
      goto LABEL_7;
    case 2uLL:
      v2 = 3;
      goto LABEL_7;
    case 3uLL:
      v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v3 = a1;
      NSObject.hash(into:)(v5);
      sub_DB514(a1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_D0F680()
{
  void **v0;

  return Player.InsertCommand.Location.hashValue.getter(*v0);
}

void sub_D0F688(uint64_t a1)
{
  void **v1;
  void *v3;
  Swift::UInt v4;
  id v5;

  v3 = *v1;
  switch((unint64_t)*v1)
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      v4 = 2;
      goto LABEL_7;
    case 2uLL:
      v4 = 3;
      goto LABEL_7;
    case 3uLL:
      v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v5 = v3;
      NSObject.hash(into:)(a1);
      sub_DB514(v3);
      break;
  }
}

Swift::Int sub_D0F724()
{
  void **v0;
  void *v1;
  Swift::UInt v2;
  id v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  switch((unint64_t)v1)
  {
    case 0uLL:
      v2 = 0;
      goto LABEL_7;
    case 1uLL:
      v2 = 2;
      goto LABEL_7;
    case 2uLL:
      v2 = 3;
      goto LABEL_7;
    case 3uLL:
      v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v3 = v1;
      NSObject.hash(into:)(v5);
      sub_DB514(v1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_D0F7D0(void **a1, char **a2)
{
  return _s9MusicCore6PlayerC13InsertCommandV8LocationO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, *a2);
}

BOOL static Player.InsertCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_insertCommand);
}

id Player.InsertCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "insertCommand");

  switch(a3)
  {
    case 0:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAfterPlayingItemWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 1:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAtEndOfTracklistWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 2:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAtEndOfUpNextWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 3:
      if (!v6)
        return 0;
      v9 = objc_msgSend(v6, "insertAfterLastSection");
      if (v9)
      {
        v10 = v9;
        v8 = objc_msgSend(v9, "insertWithPlaybackIntent:", a2);
        swift_unknownObjectRelease(v10);
LABEL_11:
        swift_unknownObjectRelease(v6);
      }
      else
      {
        swift_unknownObjectRelease(v6);
        return 0;
      }
      return v8;
    default:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertPlaybackIntent:afterItem:", a2, a3);
LABEL_10:
      v8 = v7;
      goto LABEL_11;
  }
}

unint64_t Player.InsertCommand.description.getter(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  void *v14;
  unint64_t v15;
  unint64_t v16;

  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  v15 = 0xD000000000000015;
  v16 = 0x80000000011086D0;
  v4 = a1;
  v5 = objc_msgSend(v4, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x697461636F6C202CLL;
  v10._object = (void *)0xEB000000003D6E6FLL;
  String.append(_:)(v10);
  v14 = a2;
  sub_1D81FC(a2);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v14, &type metadata for Player.InsertCommand.Location);
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 10537;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  return v15;
}

uint64_t static Player.InsertCommand.__derived_struct_equals(_:_:)(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  char v8;

  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a3) & 1) == 0)
    return 0;
  switch((unint64_t)a2)
  {
    case 0uLL:
      if (a4)
        return 0;
      break;
    case 1uLL:
      if (a4 != (_BYTE *)&dword_0 + 1)
        return 0;
      break;
    case 2uLL:
      if (a4 != (_BYTE *)&dword_0 + 2)
        return 0;
      break;
    case 3uLL:
      if (a4 != (_BYTE *)&dword_0 + 3)
        return 0;
      break;
    default:
      if ((unint64_t)a4 < 4)
        return 0;
      sub_1D81FC(a2);
      sub_1D81FC(a4);
      v8 = static NSObject.== infix(_:_:)(a2, a4);
      sub_DB514(a4);
      sub_DB514(a2);
      if ((v8 & 1) == 0)
        return 0;
      break;
  }
  return 1;
}

uint64_t sub_D0FB80(uint64_t *a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v2 = (void *)a1[1];
  v5 = *a2;
  v4 = (char *)a2[1];
  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v5) & 1) == 0)
    return 0;
  switch((unint64_t)v2)
  {
    case 0uLL:
      if (v4)
        return 0;
      break;
    case 1uLL:
      if (v4 != (_BYTE *)&dword_0 + 1)
        return 0;
      break;
    case 2uLL:
      if (v4 != (_BYTE *)&dword_0 + 2)
        return 0;
      break;
    case 3uLL:
      if (v4 != (_BYTE *)&dword_0 + 3)
        return 0;
      break;
    default:
      if ((unint64_t)v4 < 4)
        return 0;
      sub_1D81FC(v2);
      sub_1D81FC(v4);
      v6 = static NSObject.== infix(_:_:)(v2, v4);
      sub_DB514(v4);
      sub_DB514(v2);
      if ((v6 & 1) == 0)
        return 0;
      break;
  }
  return 1;
}

unint64_t sub_D0FC70()
{
  void **v0;

  return Player.InsertCommand.description.getter(*v0, v0[1]);
}

BOOL sub_D0FC78(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_insertCommand);
}

id sub_D0FC84(void *a1)
{
  uint64_t *v1;

  return Player.InsertCommand.request(from:)(a1, *v1, v1[1]);
}

BOOL static Player.ReplaceCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_resetCommand);
}

id Player.ClearCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  char **v5;
  id v6;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "resetCommand");

  if (!v4)
    return 0;
  v5 = &selRef_clear;
  if ((a2 & 1) != 0)
    v5 = &selRef_clearUpNextItems;
  v6 = objc_msgSend(v4, *v5);
  swift_unknownObjectRelease(v4);
  return v6;
}

BOOL sub_D0FD38(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_resetCommand);
}

id sub_D0FD44(void *a1)
{
  char *v1;

  return Player.ClearCommand.request(from:)(a1, *v1);
}

id Player.ReplaceCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "resetCommand");

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "replaceWithPlaybackIntent:replaceIntent:", a2, a3);
  swift_unknownObjectRelease(v6);
  return v7;
}

unint64_t Player.ReplaceCommand.description.getter(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  v16 = 0xD000000000000016;
  v17 = 0x80000000011086F0;
  v4 = a1;
  v5 = objc_msgSend(v4, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x8000000001108710;
  v10._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v10);
  v15 = a2;
  type metadata accessor for MPCPlayerTracklistReplaceIntent(0);
  v12._countAndFlagsBits = String.init<A>(describing:)(&v15, v11);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 10537;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  return v16;
}

id sub_D0FF04(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v2 = *v1;
  v3 = v1[1];
  v4 = objc_msgSend(a1, "tracklist");
  v5 = objc_msgSend(v4, "resetCommand");

  if (!v5)
    return 0;
  v6 = objc_msgSend(v5, "replaceWithPlaybackIntent:replaceIntent:", v2, v3);
  swift_unknownObjectRelease(v5);
  return v6;
}

void *Player.MoveCommand.location.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

uint64_t static Player.MoveCommand.Location.__derived_enum_equals(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return sub_D11578(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_D0FFD8(uint64_t a1, uint64_t a2)
{
  return sub_D11578(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

BOOL static Player.MoveCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_reorderCommand);
}

id Player.MoveCommand.request(from:)(void *a1, uint64_t a2, void *a3, char a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v7 = a3;
  v8 = objc_msgSend(a1, "tracklist");
  v9 = objc_msgSend(v8, "reorderCommand");

  if ((a4 & 1) != 0)
  {
    if (v9)
    {
      v10 = objc_msgSend(v9, "moveItem:afterItem:", a2, v7);
      goto LABEL_6;
    }
LABEL_7:

    return 0;
  }
  if (!v9)
    goto LABEL_7;
  v10 = objc_msgSend(v9, "moveItem:beforeItem:", a2, v7);
LABEL_6:
  v11 = v10;
  swift_unknownObjectRelease(v9);

  return v11;
}

BOOL sub_D100E0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_reorderCommand);
}

id sub_D100EC(void *a1)
{
  uint64_t v1;

  return Player.MoveCommand.request(from:)(a1, *(_QWORD *)v1, *(void **)(v1 + 8), *(_BYTE *)(v1 + 16));
}

BOOL static Player.LeaveSessionCommand.isAvailable(in:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "leaveSession");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id Player.LeaveSessionCommand.request(from:)(void *a1)
{
  return objc_msgSend(a1, "leaveSession");
}

uint64_t Player.BuildSharedSessionCommand.init(intentHandler:)()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v5[4] = UIScreen.Dimensions.size.getter;
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_23E9F0;
  v5[3] = &block_descriptor_5_3;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

BOOL static Player.BuildSharedSessionCommand.isAvailable(in:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "tracklist");
  v2 = objc_msgSend(v1, "playingItem");

  if (v2)
  return v2 != 0;
}

id Player.BuildSharedSessionCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;
  _QWORD v9[6];

  v9[4] = a3;
  v9[5] = a4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_153944;
  v9[3] = &block_descriptor_8_6;
  v6 = _Block_copy(v9);
  swift_retain();
  v7 = objc_msgSend(a1, "createSharedSessionWithIdentity:intentHandler:", a2, v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  return v7;
}

id sub_D10350(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v9[4] = v3;
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_153944;
  v9[3] = &block_descriptor_17_11;
  v6 = _Block_copy(v9);
  swift_retain();
  v7 = objc_msgSend(a1, "createSharedSessionWithIdentity:intentHandler:", v4, v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  return v7;
}

BOOL static Player.SeekCommand.isAvailable(in:)(void *a1)
{
  return sub_D1080C(a1, (SEL *)&selRef_seekCommand);
}

id Player.SeekCommand.request(from:)(void *a1, uint64_t a2, char a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "playingItem");

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "seekCommand");

  if (!v7)
    return 0;
  if (a3)
  {
    if (a3 == 1)
      v8 = objc_msgSend(v7, "changePositionToElapsedInterval:", *(double *)&a2);
    else
      v8 = objc_msgSend(v7, "endSeek");
  }
  else
  {
    v8 = objc_msgSend(v7, "beginSeekWithDirection:", a2);
  }
  v9 = v8;
  swift_unknownObjectRelease(v7);
  return v9;
}

BOOL sub_D1050C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10984(a1, a2, a3, (SEL *)&selRef_seekCommand);
}

id sub_D10518(void *a1)
{
  uint64_t v1;

  return Player.SeekCommand.request(from:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void Player.JumpCommand.resolvedTimeInterval(for:)(void *a1, uint64_t a2, unsigned __int8 a3)
{
  id v5;
  id v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (a1)
  {
    v5 = objc_msgSend(a1, "tracklist");
    v6 = objc_msgSend(v5, "playingItem");

    v7 = objc_msgSend(v6, "seekCommand");
    v8 = a3;
    if (!a3)
      goto LABEL_6;
  }
  else
  {
    v7 = 0;
    v8 = a3;
    if (!a3)
    {
LABEL_6:
      swift_unknownObjectRelease(v7);
      return;
    }
  }
  if (v8 == 1)
    goto LABEL_6;
  if (a2)
  {
    if (v7)
    {
      v9 = objc_msgSend(v7, "preferredForwardJumpIntervals");
      v10 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      if ((unint64_t)v11 >> 62)
      {
        if (v11 < 0)
          v16 = v11;
        else
          v16 = v11 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v17 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        if (!v17)
          goto LABEL_33;
        goto LABEL_12;
      }
      if (*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
      {
LABEL_12:
        if ((v11 & 0xC000000000000001) != 0)
          goto LABEL_34;
        if (*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
        {
LABEL_20:
          v14 = *(id *)(v11 + 32);
LABEL_21:
          v15 = v14;
          swift_bridgeObjectRelease();
          v20 = 0;
          v21 = 1;
          static Double._conditionallyBridgeFromObjectiveC(_:result:)(v15, &v20);

          swift_unknownObjectRelease(v7);
          return;
        }
        __break(1u);
        goto LABEL_29;
      }
LABEL_33:
      swift_unknownObjectRelease(v7);
      swift_bridgeObjectRelease();
    }
  }
  else if (v7)
  {
    v12 = objc_msgSend(v7, "preferredBackwardJumpIntervals");
    v13 = sub_4E684(0, &qword_14FDE48, NSNumber_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    if ((unint64_t)v11 >> 62)
    {
LABEL_29:
      if (v11 < 0)
        v18 = v11;
      else
        v18 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease();
      if (!v19)
        goto LABEL_33;
      goto LABEL_18;
    }
    if (*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
    {
LABEL_18:
      if ((v11 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        goto LABEL_20;
      }
LABEL_34:
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
      goto LABEL_21;
    }
    goto LABEL_33;
  }
}

BOOL sub_D1080C(void *a1, SEL *a2)
{
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "playingItem");

  v5 = objc_msgSend(v4, *a2);
  if (v5)
    swift_unknownObjectRelease(v5);
  return v5 != 0;
}

id Player.JumpCommand.request(from:)(void *a1, uint64_t a2, unsigned __int8 a3)
{
  id v6;
  id v7;
  id v8;
  char **v9;
  id v10;

  v6 = objc_msgSend(a1, "tracklist");
  v7 = objc_msgSend(v6, "playingItem");

  v8 = objc_msgSend(v7, "seekCommand");
  Player.JumpCommand.resolvedTimeInterval(for:)(a1, a2, a3);
  if (a3 != 1)
  {
    if (v8)
    {
      v9 = &selRef_jumpByInterval_;
      goto LABEL_6;
    }
    return 0;
  }
  if (!v8)
    return 0;
  v9 = &selRef_changePositionToElapsedInterval_;
LABEL_6:
  v10 = objc_msgSend(v8, *v9);
  swift_unknownObjectRelease(v8);
  return v10;
}

BOOL sub_D10984(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "playingItem");

  v7 = objc_msgSend(v6, *a4);
  if (v7)
    swift_unknownObjectRelease(v7);
  return v7 != 0;
}

id sub_D10A0C(void *a1)
{
  uint64_t v1;

  return Player.JumpCommand.request(from:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

BOOL static Player.VocalsCommand.isAvailable(in:)(void *a1)
{
  return sub_D10A24(a1, (SEL *)&selRef_vocalsControlCommand);
}

BOOL sub_D10A24(void *a1, SEL *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, *a2);

  if (v4)
    swift_unknownObjectRelease(v4);
  return v4 != 0;
}

id Player.VocalsCommand.request(from:)(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "vocalsControlCommand");

  if (!v4)
    return 0;
  if ((a2 & 0x10000000000) != 0)
  {
    v6 = objc_msgSend(v4, "activateVocalsControl:", 0);
  }
  else if ((a2 & 0x100000000) != 0)
  {
    v6 = objc_msgSend(v4, "activateVocalsControl:", 1);
  }
  else
  {
    LODWORD(v5) = a2;
    v6 = objc_msgSend(v4, "setVocalsLevel:", v5);
  }
  v7 = v6;
  swift_unknownObjectRelease(v4);
  return v7;
}

uint64_t static Player.VocalsCommand.localizedDisablementMessage(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  const char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v18[-v10];
  if (a1 == 5)
  {
    v12 = 0xD000000000000052;
    v13 = "Vocal controls will be available once Low Power Mode is turned off on your device.";
    goto LABEL_5;
  }
  if (a1 == 4)
  {
    v12 = 0xD00000000000003DLL;
    v13 = "Vocal controls will be available once your device cools down.";
LABEL_5:
    v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    goto LABEL_7;
  }
  v14 = 0x8000000001108750;
  v12 = 0xD000000000000029;
LABEL_7:
  String.LocalizationValue.init(stringLiteral:)(v12, v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v15 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v16 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v16;
}

uint64_t Player.VocalsCommand.description.getter(uint64_t a1)
{
  float v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v9;
  _QWORD v10[2];

  strcpy((char *)v10, "VocalCommand(");
  HIWORD(v10[1]) = -4864;
  if ((a1 & 0x10000000000) != 0)
  {
    v5 = 6710895;
    v6 = 0xE300000000000000;
LABEL_6:
    String.append(_:)(*(Swift::String *)&v5);
    goto LABEL_7;
  }
  if ((a1 & 0x100000000) != 0)
  {
    v5 = 28271;
    v6 = 0xE200000000000000;
    goto LABEL_6;
  }
  v1 = *(float *)&a1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v2._countAndFlagsBits = 2649711;
  v2._object = (void *)0xE300000000000000;
  String.append(_:)(v2);
  Float.write<A>(to:)(&v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v1);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
LABEL_7:
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v10[0];
}

uint64_t static Player.VocalsCommand.Prepare.isAvailable(in:)(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, "tracklist");
  v3 = objc_msgSend(v2, "prepareVocalsControlCommand");
  swift_unknownObjectRelease(v3);

  if (!v3)
    return 0;
  v4 = objc_msgSend(a1, "tracklist");
  v5 = objc_msgSend(v4, "vocalsControlCommand");

  if (v5)
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  return 1;
}

id Player.VocalsCommand.Prepare.request(from:)(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(a1, "tracklist");
  v2 = objc_msgSend(v1, "prepareVocalsControlCommand");

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "prepare");
  swift_unknownObjectRelease(v2);
  return v3;
}

uint64_t static Player.VocalsCommand.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0x10000000000) != 0)
    return (a2 >> 40) & 1;
  if ((a2 & 0x10000000000) != 0)
    return 0;
  if ((a1 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) == 0)
      return 0;
  }
  else if ((a2 & 0x100000000) != 0 || *(float *)&a1 != *(float *)&a2)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_D10F64(unsigned int *a1, float *a2)
{
  char v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *((_BYTE *)a1 + 5);
  result = *((unsigned __int8 *)a2 + 5);
  if ((v3 & 1) == 0)
  {
    if ((result & 1) == 0)
    {
      v5 = *(unsigned int *)a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
      v6 = *((unsigned __int8 *)a1 + 4);
      v7 = *a1;
      if (((v7 | (v6 << 32)) & 0x100000000) != 0)
      {
        if ((v5 & 0x100000000) != 0)
          return 1;
      }
      else if ((v5 & 0x100000000) == 0 && *(float *)&v7 == *a2)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_D10FC4()
{
  unsigned int *v0;

  return Player.VocalsCommand.description.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v0 + 5) << 40));
}

BOOL sub_D10FEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_D10FF8(a1, a2, a3, (SEL *)&selRef_vocalsControlCommand);
}

BOOL sub_D10FF8(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5;
  id v6;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, *a4);

  if (v6)
    swift_unknownObjectRelease(v6);
  return v6 != 0;
}

id sub_D11058(void *a1)
{
  unsigned int *v1;

  return Player.VocalsCommand.request(from:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40));
}

uint64_t sub_D1109C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501800);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_QWORD *)(v0 + 112) = inited;
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  sub_55D1C(v1, inited + 32);
  v4 = swift_task_alloc(dword_1501A04);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_D1113C;
  *(_OWORD *)(v4 + 208) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v4 + 200) = inited;
  return swift_task_switch(sub_D0E250, 0, 0);
}

uint64_t sub_D1113C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v3[16] = a1;
  v3[17] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_D112A4;
  }
  else
  {
    v6 = v3[14];
    v7 = v6 + 32;
    swift_setDeallocating(v6);
    v8 = *(_QWORD *)(v6 + 16);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
    swift_arrayDestroy(v7, v8, v9);
    v5 = sub_D111D8;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_D111D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
    v3 = 0;
    goto LABEL_12;
  }
  if (v1 < 0)
    v4 = *(_QWORD *)(v0 + 128);
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 128));
    v2 = *(_QWORD *)(v0 + 128);
    goto LABEL_6;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(id *)(v2 + 32);
LABEL_6:
    swift_bridgeObjectRelease(v2);
LABEL_12:
    (*(void (**)(id))(v0 + 8))(v3);
    return;
  }
  __break(1u);
}

uint64_t sub_D112A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = v1 + 32;
  swift_setDeallocating(v1);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
  swift_arrayDestroy(v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D11300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(a1);
LABEL_13:
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume(a2);
  }
  if (a1 < 0)
    v15 = a1;
  else
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!result)
    goto LABEL_12;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_6:
    v7 = v6;
    swift_bridgeObjectRelease(a1);
    v8 = objc_msgSend(v7, "error");

    if (v8)
    {
      v9 = sub_CF4974();
      v10 = swift_allocError(&type metadata for Player.PlaybackError, v9, 0, 0);
      *v11 = v8;
      v11[1] = a1;
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
      v13 = swift_allocError(v12, &protocol self-conformance witness table for Error, 0, 0);
      *v14 = v10;
      swift_bridgeObjectRetain();
      return swift_continuation_throwingResumeWithError(a2, v13);
    }
    goto LABEL_13;
  }
  if (*(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8)))
  {
    v6 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_D11454(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_4E684(0, (unint64_t *)&unk_15018E0, MPCPlayerCommandStatus_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void *MPCPlayerCommandRequest.request(from:)()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id MPCPlayerResponse.isPlayingItemFavorited.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, "tracklist");
  v2 = objc_msgSend(v1, "playingItem");

  if (v2)
  {
    v3 = objc_msgSend(v2, "likeCommand");

    if (v3)
    {
      v2 = objc_msgSend(v3, "value");
      swift_unknownObjectRelease(v3);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_D11578(void *a1, char a2, void *a3, char a4)
{
  char v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
    v7 = a1;
    v8 = a3;
    v6 = static NSObject.== infix(_:_:)(v7, v8);

    return v6 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v6 = 0;
  return v6 & 1;
}

uint64_t _s9MusicCore6PlayerC13InsertCommandV8LocationO21__derived_enum_equalsySbAG_AGtFZ_0(void *a1, char *a2)
{
  char v4;
  uint64_t result;

  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2)
        goto LABEL_11;
      goto LABEL_7;
    case 1uLL:
      if (a2 == (_BYTE *)&dword_0 + 1)
        goto LABEL_7;
      goto LABEL_11;
    case 2uLL:
      if (a2 != (_BYTE *)&dword_0 + 2)
        goto LABEL_11;
      goto LABEL_7;
    case 3uLL:
      if (a2 != (_BYTE *)&dword_0 + 3)
        goto LABEL_11;
LABEL_7:
      result = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_11:
        result = 0;
      }
      else
      {
        sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
        sub_1D81FC(a1);
        sub_1D81FC(a2);
        v4 = static NSObject.== infix(_:_:)(a1, a2);
        sub_DB514(a2);
        sub_DB514(a1);
        result = v4 & 1;
      }
      break;
  }
  return result;
}

uint64_t type metadata accessor for Player.CommandOptions(uint64_t a1)
{
  uint64_t result;

  result = qword_1501B00;
  if (!qword_1501B00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Player.CommandOptions);
  return result;
}

uint64_t sub_D11710(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501940);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s9MusicCore6PlayerC14CommandOptionsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;

  if ((static UUID.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Player.CommandOptions(0);
  v5 = v4[5];
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(*v6, v7, *v8, v9, 0), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    if (*(_QWORD *)(a1 + v4[6]) != *(_QWORD *)(a2 + v4[6])
      || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7]))
    {
      return 0;
    }
    v13 = v4[8];
    v14 = *(void **)(a1 + v13);
    v15 = *(void **)(a2 + v13);
    if (v14)
    {
      if (v15)
      {
        sub_4E684(0, &qword_15018C8, MPAVRoute_ptr);
        v16 = v15;
        v17 = v14;
        v18 = static NSObject.== infix(_:_:)(v17, v16);

        if ((v18 & 1) != 0)
          return 1;
      }
    }
    else if (!v15)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

_QWORD *sub_D1186C(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;

  result = _swiftEmptyArrayStorage;
  v20 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_55D1C(v6, (uint64_t)v16);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501938);
      if (swift_dynamicCast(&v17, v16, v7, v8, 6))
      {
        v9 = *((_QWORD *)&v18 + 1);
        v10 = v19;
        __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
        v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(a2, v9, v10);
        v12 = __swift_destroy_boxed_opaque_existential_1(&v17);
        if (v11)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v14 = *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
          v13 = *(_QWORD *)((char *)&dword_18 + (v20 & 0xFFFFFFFFFFFFFF8));
          if (v14 >= v13 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
          v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
          specialized Array._endMutation()(v15);
        }
      }
      else
      {
        v19 = 0;
        v17 = 0u;
        v18 = 0u;
        sub_D11710((uint64_t)&v17);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return (_QWORD *)v20;
  }
  return result;
}

_QWORD *sub_D119D8(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19[2];
  _QWORD *v20;

  result = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_55D1C(v6, (uint64_t)v19);
      sub_55D1C((uint64_t)v19, (uint64_t)v15);
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500830);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501938);
      if (!swift_dynamicCast(&v16, v15, v11, v12, 6))
        break;
      v8 = *((_QWORD *)&v17 + 1);
      v9 = v18;
      __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
      v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(a2, v8, v9);
      __swift_destroy_boxed_opaque_existential_1(&v16);
      if (!v10)
        goto LABEL_8;

      __swift_destroy_boxed_opaque_existential_1(v19);
LABEL_5:
      v6 += 40;
      if (!--v4)
        return v20;
    }
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_D11710((uint64_t)&v16);
LABEL_8:
    sub_8B15C(v19, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      sub_C058A0(0, v7[2] + 1, 1);
    v7 = v20;
    v14 = v20[2];
    v13 = v20[3];
    if (v14 >= v13 >> 1)
    {
      sub_C058A0((_QWORD *)(v13 > 1), v14 + 1, 1);
      v7 = v20;
    }
    v7[2] = v14 + 1;
    sub_8B15C(&v16, (uint64_t)&v7[5 * v14 + 4]);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_D11B8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D11B9C(uint64_t a1)
{
  uint64_t v1;

  return sub_D11300(a1, *(_QWORD *)(v1 + 16));
}

uint64_t block_copy_helper_304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_304(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_D11BC0()
{
  unint64_t result;

  result = qword_1501A18;
  if (!qword_1501A18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.PlaybackCommand, &type metadata for Player.PlaybackCommand);
    atomic_store(result, (unint64_t *)&qword_1501A18);
  }
  return result;
}

uint64_t sub_D11C04()
{
  return sub_36540C(&qword_1501A20, &qword_1501A28);
}

unint64_t sub_D11C2C()
{
  unint64_t result;

  result = qword_1501A30;
  if (!qword_1501A30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ChangeCommand, &type metadata for Player.ChangeCommand);
    atomic_store(result, (unint64_t *)&qword_1501A30);
  }
  return result;
}

uint64_t sub_D11C70()
{
  return sub_36540C(&qword_1501A38, &qword_1501A40);
}

unint64_t sub_D11C98()
{
  unint64_t result;

  result = qword_1501A48;
  if (!qword_1501A48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ShuffleCommand, &type metadata for Player.ShuffleCommand);
    atomic_store(result, (unint64_t *)&qword_1501A48);
  }
  return result;
}

uint64_t sub_D11CDC()
{
  return sub_36540C(&qword_1501A50, &qword_1501A58);
}

unint64_t sub_D11D04()
{
  unint64_t result;

  result = qword_1501A60;
  if (!qword_1501A60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.FavoriteCommand, &type metadata for Player.FavoriteCommand);
    atomic_store(result, (unint64_t *)&qword_1501A60);
  }
  return result;
}

unint64_t sub_D11D4C()
{
  unint64_t result;

  result = qword_1501A68;
  if (!qword_1501A68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.RepeatCommand, &type metadata for Player.RepeatCommand);
    atomic_store(result, (unint64_t *)&qword_1501A68);
  }
  return result;
}

uint64_t sub_D11D90()
{
  return sub_36540C(&qword_1501A70, &qword_1501A78);
}

unint64_t sub_D11DB8()
{
  unint64_t result;

  result = qword_1501A80;
  if (!qword_1501A80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.QueueEndCommand, &type metadata for Player.QueueEndCommand);
    atomic_store(result, (unint64_t *)&qword_1501A80);
  }
  return result;
}

uint64_t sub_D11DFC()
{
  return sub_36540C(&qword_1501A88, &qword_1501A90);
}

unint64_t sub_D11E24()
{
  unint64_t result;

  result = qword_1501A98;
  if (!qword_1501A98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.InsertCommand.Location, &type metadata for Player.InsertCommand.Location);
    atomic_store(result, (unint64_t *)&qword_1501A98);
  }
  return result;
}

unint64_t sub_D11E6C()
{
  unint64_t result;

  result = qword_1501AA0;
  if (!qword_1501AA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ClearCommand, &type metadata for Player.ClearCommand);
    atomic_store(result, (unint64_t *)&qword_1501AA0);
  }
  return result;
}

uint64_t _s13PlaybackErrorVwxx(_QWORD *a1)
{
  swift_errorRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

_QWORD *_s13PlaybackErrorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  swift_errorRetain(*a2);
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s13PlaybackErrorVwca(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  swift_errorRetain(*a2);
  v5 = *a1;
  *a1 = v4;
  swift_errorRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *_s13PlaybackErrorVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_errorRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for Player.PlaybackError()
{
  return &type metadata for Player.PlaybackError;
}

_QWORD *_s14CommandOptionsVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v14;
    swift_bridgeObjectRetain();
    v15 = v14;
  }
  return a1;
}

void _s14CommandOptionsVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));

}

uint64_t _s14CommandOptionsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain();
  v14 = v13;
  return a1;
}

uint64_t _s14CommandOptionsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  return a1;
}

uint64_t _s14CommandOptionsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t _s14CommandOptionsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[8];
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  return a1;
}

uint64_t _s14CommandOptionsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D1231C);
}

uint64_t sub_D1231C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s14CommandOptionsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D123B4);
}

uint64_t sub_D123B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_D12430(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10A3C08;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_10A3C20;
    v4[4] = &unk_10A3C38;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.PlaybackCommand()
{
  return &type metadata for Player.PlaybackCommand;
}

uint64_t _s13ChangeCommandOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_D12524 + 4 * byte_10A3251[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_D12558 + 4 * byte_10A324C[v4]))();
}

uint64_t sub_D12558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD12568);
  return result;
}

uint64_t sub_D12574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD1257CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_D12580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.ChangeCommand()
{
  return &type metadata for Player.ChangeCommand;
}

ValueMetadata *type metadata accessor for Player.ShuffleCommand()
{
  return &type metadata for Player.ShuffleCommand;
}

uint64_t _s14ShuffleCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_D12604 + 4 * byte_10A325B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_D12638 + 4 * byte_10A3256[v4]))();
}

uint64_t sub_D12638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD12648);
  return result;
}

uint64_t sub_D12654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD1265CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_D12660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.FavoriteCommand()
{
  return &type metadata for Player.FavoriteCommand;
}

ValueMetadata *type metadata accessor for Player.RepeatCommand()
{
  return &type metadata for Player.RepeatCommand;
}

uint64_t _s15PlaybackCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_D126E0 + 4 * byte_10A3265[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_D12714 + 4 * byte_10A3260[v4]))();
}

uint64_t sub_D12714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D1271C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD12724);
  return result;
}

uint64_t sub_D12730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD12738);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_D1273C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.QueueEndCommand()
{
  return &type metadata for Player.QueueEndCommand;
}

_QWORD *_s13InsertCommandVwCP(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  v5 = v3;
  if ((unint64_t)v4 >= 4)
    v6 = v4;
  a1[1] = v4;
  return a1;
}

void _s13InsertCommandVwxx(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if ((unint64_t)v2 >= 4)

}

uint64_t _s13InsertCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  if ((unint64_t)v7 >= 4)
  {
    if ((unint64_t)v8 >= 4)
    {
      *(_QWORD *)(a1 + 8) = v8;
      v10 = v8;

      return a1;
    }

    v8 = *(void **)(a2 + 8);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 4)
  {
LABEL_6:
    *(_QWORD *)(a1 + 8) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;
  return a1;
}

uint64_t _s13InsertCommandVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  unint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 8);
  v6 = a2[1];
  if ((unint64_t)v5 >= 4)
  {
    if (v6 >= 4)
    {
      *(_QWORD *)(a1 + 8) = v6;

      return a1;
    }

  }
  *(_QWORD *)(a1 + 8) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for Player.InsertCommand()
{
  return &type metadata for Player.InsertCommand;
}

ValueMetadata *type metadata accessor for Player.InsertCommand.Location()
{
  return &type metadata for Player.InsertCommand.Location;
}

uint64_t _s12ClearCommandOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_D12934 + 4 * byte_10A326F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_D12968 + 4 * byte_10A326A[v4]))();
}

uint64_t sub_D12968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD12978);
  return result;
}

uint64_t sub_D12984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD1298CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_D12990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D12998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.ClearCommand()
{
  return &type metadata for Player.ClearCommand;
}

uint64_t _s14ReplaceCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t _s14ReplaceCommandVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for Player.ReplaceCommand()
{
  return &type metadata for Player.ReplaceCommand;
}

uint64_t _s11MoveCommandVwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t _s11MoveCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v10 = v7;

  return a1;
}

uint64_t _s11MoveCommandVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v5;

  return a1;
}

ValueMetadata *type metadata accessor for Player.MoveCommand()
{
  return &type metadata for Player.MoveCommand;
}

ValueMetadata *type metadata accessor for Player.MoveCommand.Location()
{
  return &type metadata for Player.MoveCommand.Location;
}

ValueMetadata *type metadata accessor for Player.LeaveSessionCommand()
{
  return &type metadata for Player.LeaveSessionCommand;
}

uint64_t _s25BuildSharedSessionCommandVwCP(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain(v3);
  return a1;
}

double _s25BuildSharedSessionCommandVwxx(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

uint64_t _s25BuildSharedSessionCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v9);
  return a1;
}

uint64_t _s25BuildSharedSessionCommandVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Player.BuildSharedSessionCommand()
{
  return &type metadata for Player.BuildSharedSessionCommand;
}

ValueMetadata *type metadata accessor for Player.SeekCommand()
{
  return &type metadata for Player.SeekCommand;
}

ValueMetadata *type metadata accessor for Player.JumpCommand()
{
  return &type metadata for Player.JumpCommand;
}

uint64_t __swift_memcpy6_4_0(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Player.VocalsCommand()
{
  return &type metadata for Player.VocalsCommand;
}

ValueMetadata *type metadata accessor for Player.VocalsCommand.Prepare()
{
  return &type metadata for Player.VocalsCommand.Prepare;
}

double _s12CommandErrorOwxx(uint64_t a1)
{
  unsigned int v1;
  double result;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  }
  return result;
}

uint64_t _s12CommandErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t _s12CommandErrorOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s12CommandErrorOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

ValueMetadata *_s12CommandErrorOMa()
{
  return &_s12CommandErrorON;
}

uint64_t SampleReceiver.waveforms()()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501B68);
  v2 = __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v4 = 1;
  (*(void (**)(_QWORD *, _QWORD, double))(v5 + 104))(v4, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v2);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501B70);
  return AsyncStream.init(_:bufferingPolicy:_:)(v6, v4, sub_D13144, v0, v6);
}

double sub_D12FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double result;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_D13600();
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 40) & ~v10;
  v12 = (char *)swift_allocObject(&unk_13B9E90, v11 + v4, v10 | 7);
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v12[v11], (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_C51ED8((uint64_t)v7, (uint64_t)&unk_1502000, (uint64_t)v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_D13144(uint64_t a1)
{
  return sub_D12FFC(a1);
}

uint64_t sub_D1314C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5[5] = a4;
  v5[6] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500448);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v5[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[9] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[10] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[11] = swift_task_alloc(v11);
  v5[12] = swift_task_alloc(v11);
  return swift_task_switch(sub_D131E8, a4, 0);
}

uint64_t sub_D131E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[8];
  v4 = v0[9];
  v6 = v0[6];
  v5 = v0[7];
  v7 = v0[5];
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[13] = v8;
  v8(v2, v1, v3);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v0[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v5, v6, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  swift_beginAccess(v7 + 128, v0 + 2, 33, 0);
  sub_CD81D0(v5, v2);
  swift_endAccess(v0 + 2);
  sub_D139D8();
  return swift_task_switch(sub_D132E0, 0, 0);
}

uint64_t sub_D132E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v2, v3, v6);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_13B9EB8, v9 + v4, v8 | 7);
  *(_QWORD *)(v10 + 16) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v9, v2, v6);
  v11 = swift_retain();
  AsyncStream.Continuation.onTermination.setter(sub_D1538C, v10, v1, v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_D133D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double result;
  uint64_t v16;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_13B9EE0, v13 + v7, v12 | 7);
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[v13], (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_C51ED8((uint64_t)v10, (uint64_t)&unk_1502018, (uint64_t)v14);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D13514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500448);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D13574, a4, 0);
}

uint64_t sub_D13574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(*(_QWORD *)(v0 + 40) + 128, v0 + 16, 33, 0);
  sub_D0A904(v1, v2);
  sub_D154DC(v2);
  swift_endAccess(v0 + 16);
  sub_D139D8();
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_D13600()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v2 = sub_D14120();
    v3 = *(_QWORD *)(sub_D140A8() + 104);
    swift_release();
    v4 = type metadata accessor for SampleReceiver.ContinuationStorage();
    v1 = (_QWORD *)swift_allocObject(v4, 144, 15);
    swift_defaultActor_initialize(v1);
    v1[16] = _swiftEmptyDictionarySingleton;
    v1[17] = 0;
    v1[14] = v2;
    v1[15] = v3;
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_D13694(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1501FD0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v2[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[12] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v7);
  v2[14] = swift_task_alloc(v7);
  return swift_task_switch(sub_D13734, v1, 0);
}

uint64_t sub_D13734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(v2 + 128, v0 + 16, 0, 0);
  v28 = v2;
  v3 = *(_QWORD *)(v2 + 128);
  v25 = v3 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v3 + 64);
  v26 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v15 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v14, *(_QWORD *)(v3 + 56) + *(_QWORD *)(v1 + 72) * i, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v15, v14, v16);
    v17 = *(void **)(v28 + 136);
    if (!v17)
      goto LABEL_26;
    v18 = v17;
    if (!objc_msgSend(v18, "isEnabled"))
    {

LABEL_26:
      (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
LABEL_27:
      swift_release(v3);
      v23 = *(_QWORD *)(v0 + 104);
      v24 = *(_QWORD *)(v0 + 80);
      swift_task_dealloc(*(_QWORD *)(v0 + 112));
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v19 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    AsyncStream.Continuation.yield(_:)(v0 + 40, v20);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v22);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v19, v20);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v26)
      goto LABEL_27;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v26)
        goto LABEL_27;
      v12 = *(_QWORD *)(v25 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v26)
          goto LABEL_27;
        v12 = *(_QWORD *)(v25 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v26)
            goto LABEL_27;
          v12 = *(_QWORD *)(v25 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v26)
    goto LABEL_27;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v26)
      goto LABEL_27;
    v12 = *(_QWORD *)(v25 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_D139D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *v14;
  id v15;
  NSObject *v16;
  id v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v20[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v20, 0, 0);
  v2 = *(_QWORD *)(v0[16] + 16);
  if (qword_14F9FA0 != -1)
    swift_once(&qword_14F9FA0, sub_D14E54);
  v3 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v3, (uint64_t)qword_1501B50);
  swift_retain();
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    *(_QWORD *)(v7 + 4) = *(_QWORD *)(v1[16] + 16);
    swift_release();
    _os_log_impl(&dword_0, v5, v6, "SampleReceiver continuation count %ld", (uint8_t *)v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);

    v8 = (void *)v1[17];
    if (v2)
    {
LABEL_5:
      if (v8)
      {
        v9 = v8;
        v10 = v8;
      }
      else
      {
        v15 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v1[15]);
        v10 = objc_msgSend(objc_allocWithZone((Class)MPCProcessAudioTap), "initWithRefreshRate:delegate:", v15, v1[14]);

        v9 = 0;
        v8 = (void *)v1[17];
      }
      v1[17] = v10;
      v16 = v10;
      v17 = v9;
      sub_D13CE4(v8);

      -[NSObject setEnabled:](v16, "setEnabled:", 1);
      v14 = Logger.logObject.getter(-[NSObject start](v16, "start"));
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_0, v14, v18, "SampleReceiver audio tap active", v19, 2u);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        v14 = v16;
      }
      goto LABEL_15;
    }
  }
  else
  {

    swift_release();
    v8 = (void *)v1[17];
    if (v2)
      goto LABEL_5;
  }
  v11 = Logger.logObject.getter(objc_msgSend(v8, "stop"));
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "SampleReceiver audio tap inactive", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = v1[17];
  v1[17] = 0;
  sub_D13CE4(v14);
LABEL_15:

}

void sub_D13CE4(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *oslog;

  v3 = *(void **)(v1 + 136);
  if (v3)
  {
    if (!a1)
      goto LABEL_5;
    v4 = v1;
    sub_D1551C();
    v5 = a1;
    v6 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    if ((v7 & 1) == 0)
    {
      v3 = *(void **)(v4 + 136);
      if (v3)
      {
LABEL_5:
        v8 = qword_14F9FA0;
        v9 = v3;
        if (v8 != -1)
          swift_once(&qword_14F9FA0, sub_D14E54);
        v10 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v10, (uint64_t)qword_1501B50);
        v11 = v9;
        oslog = Logger.logObject.getter(v11);
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v12))
        {
          v13 = swift_slowAlloc(12, -1);
          v14 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v13 = 138412290;
          *(_QWORD *)(v13 + 4) = v11;
          *v14 = v3;
          _os_log_impl(&dword_0, oslog, v12, "Audio tap created: %@", (uint8_t *)v13, 0xCu);
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
          swift_arrayDestroy(v14, 1, v15);
          swift_slowDealloc(v14, -1, -1);
          v16 = v13;
LABEL_15:
          swift_slowDealloc(v16, -1, -1);
LABEL_18:

          return;
        }
        goto LABEL_17;
      }
LABEL_11:
      v17 = qword_14F9FA0;
      v18 = v5;
      if (v17 != -1)
        swift_once(&qword_14F9FA0, sub_D14E54);
      v19 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v19, (uint64_t)qword_1501B50);
      v11 = v18;
      oslog = Logger.logObject.getter(v11);
      v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v20))
      {
        v21 = swift_slowAlloc(12, -1);
        v22 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v21 = 138412290;
        *(_QWORD *)(v21 + 4) = v11;
        *v22 = a1;
        _os_log_impl(&dword_0, oslog, v20, "Audio tap destroyed: %@", (uint8_t *)v21, 0xCu);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
        swift_arrayDestroy(v22, 1, v23);
        swift_slowDealloc(v22, -1, -1);
        v16 = v21;
        goto LABEL_15;
      }
LABEL_17:

      oslog = v11;
      goto LABEL_18;
    }
  }
  else if (a1)
  {
    v5 = a1;
    goto LABEL_11;
  }
}

uint64_t sub_D13F9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_D13FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_D13FE8, 0, 0);
}

uint64_t sub_D13FE8()
{
  uint64_t *v0;
  uint64_t **v1;

  v0[4] = (uint64_t)sub_D13600();
  v1 = (uint64_t **)swift_task_alloc(dword_1501CAC);
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_D14044;
  return sub_D13694(v0[3]);
}

uint64_t sub_D14044()
{
  uint64_t *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v4 + 8))(v2);
}

void *SampleReceiver.sampleRate.unsafeMutableAddressor()
{
  return &static SampleReceiver.sampleRate;
}

uint64_t static SampleReceiver.sampleRate.getter()
{
  return 48000;
}

uint64_t sub_D140A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    v3 = type metadata accessor for SampleReceiver.SampleTransformer();
    v1 = swift_allocObject(v3, 112, 7);
    sub_D1452C(48000, 15);
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

id sub_D14120()
{
  uint64_t v0;
  void *v1;
  id v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  objc_super v10;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = (objc_class *)type metadata accessor for SampleReceiver.TapDelegate();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = swift_weakInit(&v4[OBJC_IVAR____TtCC9MusicCore14SampleReceiver11TapDelegate_receiver]);
    swift_weakAssign(v5, v0);
    v10.receiver = v4;
    v10.super_class = v3;
    v6 = objc_msgSendSuper2(&v10, "init");
    v7 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v6;
    v2 = v6;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

double sub_D141B8(const void *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  _BYTE v25[24];
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtCC9MusicCore14SampleReceiver11TapDelegate_receiver);
  if (Strong)
  {
    v10 = Strong;
    if (a2)
    {
      v11 = (_QWORD *)sub_D140A8();
      swift_beginAccess(v11 + 3, v28, 33, 0);
      v12 = (char *)v11[3];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      v11[3] = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_D3F03C((uint64_t)v12);
        v11[3] = v12;
      }
      swift_beginAccess(v11 + 4, v27, 33, 0);
      v14 = (char *)v11[4];
      v15 = swift_isUniquelyReferenced_nonNull_native(v14);
      v11[4] = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_D3F03C((uint64_t)v14);
        v11[4] = v14;
      }
      swift_beginAccess(v11 + 5, v26, 33, 0);
      v16 = (char *)v11[5];
      v17 = swift_isUniquelyReferenced_nonNull_native(v16);
      v11[5] = v16;
      if ((v17 & 1) == 0)
      {
        v16 = sub_D3F03C((uint64_t)v16);
        v11[5] = v16;
      }
      swift_beginAccess(v11 + 6, v25, 33, 0);
      v18 = (char *)v11[6];
      v19 = swift_isUniquelyReferenced_nonNull_native(v18);
      v11[6] = v18;
      if ((v19 & 1) == 0)
      {
        v18 = sub_D3F03C((uint64_t)v18);
        v11[6] = v18;
      }
      sub_D148D0((float *)v12 + 8, (float *)v14 + 8, (float *)v16 + 8, (float *)v18 + 8, a2, (uint64_t)v11, a1, &v24);
      v20 = v24;
      v11[6] = v18;
      swift_endAccess(v25);
      v11[5] = v16;
      swift_endAccess(v26);
      v11[4] = v14;
      swift_endAccess(v27);
      v11[3] = v12;
      swift_endAccess(v28);
      swift_release();
      v21 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
      v22 = (_QWORD *)swift_allocObject(&unk_13B9E68, 48, 7);
      v22[2] = 0;
      v22[3] = 0;
      v22[4] = v10;
      v22[5] = v20;
      swift_retain();
      sub_C51ED8((uint64_t)v7, (uint64_t)&unk_1501FC8, (uint64_t)v22);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

id sub_D144EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SampleReceiver.TapDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_D1452C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  float v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = type metadata accessor for vDSP.Radix(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for vDSP.WindowSequence(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  v15 = log2f(ceilf((float)a1 / (float)a2));
  if ((~LODWORD(v15) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v15 <= -1.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v15 >= 1.8447e19)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = (unint64_t)v15;
  if ((unint64_t)v15 >= 0x40)
    v17 = 0;
  else
    v17 = 1 << (unint64_t)v15;
  if (v17 >= 0)
    v18 = v17;
  else
    v18 = v17 + 1;
  if (v17 < -1)
    goto LABEL_20;
  v38 = v7;
  v39 = v6;
  v19 = v18 >> 1;
  if ((unint64_t)v17 >= 2)
  {
    v21 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18 >> 1, &type metadata for Float);
    v37 = v10;
    v22 = v21;
    *(_QWORD *)(v21 + 16) = v19;
    bzero((void *)(v21 + 32), 4 * v19);
    *(_QWORD *)(v3 + 16) = v22;
    v23 = static Array._allocateBufferUninitialized(minimumCapacity:)(v19, &type metadata for Float);
    *(_QWORD *)(v23 + 16) = v19;
    bzero((void *)(v23 + 32), 4 * v19);
    *(_QWORD *)(v3 + 24) = v23;
    v24 = static Array._allocateBufferUninitialized(minimumCapacity:)(v19, &type metadata for Float);
    *(_QWORD *)(v24 + 16) = v19;
    bzero((void *)(v24 + 32), 4 * v19);
    *(_QWORD *)(v3 + 32) = v24;
    v25 = static Array._allocateBufferUninitialized(minimumCapacity:)(v19, &type metadata for Float);
    *(_QWORD *)(v25 + 16) = v19;
    bzero((void *)(v25 + 32), 4 * v19);
    *(_QWORD *)(v3 + 40) = v25;
    v26 = static Array._allocateBufferUninitialized(minimumCapacity:)(v19, &type metadata for Float);
    *(_QWORD *)(v26 + 16) = v19;
    bzero((void *)(v26 + 32), 4 * v19);
    *(_QWORD *)(v3 + 48) = v26;
    v10 = v37;
    v20 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v19, &type metadata for Float);
    v20[2] = v19;
    bzero(v20 + 4, 4 * v19);
  }
  else
  {
    v20 = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 16) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 40) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 48) = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v3 + 56) = v20;
  *(float *)(v3 + 64) = 2.0 / (float)v19;
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for vDSP.WindowSequence.hanningDenormalized(_:), v11);
  if ((unint64_t)v17 < 2)
    goto LABEL_21;
  __chkstk_darwin(v27);
  *(&v37 - 4) = v14;
  *((_BYTE *)&v37 - 24) = 0;
  v36 = v19;
  v28 = sub_D14F68(v19, (uint64_t (*)(_QWORD *, uint64_t *))sub_D15138);
  v29 = sub_D34FF4(v28);
  v30 = swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v30);
  *(_QWORD *)(v3 + 72) = v19;
  *(_QWORD *)(v3 + 80) = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v10, enum case for vDSP.Radix.radix2(_:), v39);
  type metadata accessor for DSPSplitComplex(0);
  v32 = v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501FE0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = vDSP.FFT.init(log2n:radix:ofType:)(v16, v10, v32);
  if (v34)
  {
    *(_QWORD *)(v3 + 88) = v34;
    return v3;
  }
LABEL_22:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x8000000001108AD0, "MusicCore/SampleReceiver.swift", 30, 2, 177, 0);
  __break(1u);
  return result;
}

void sub_D148D0(float *a1@<X0>, float *a2@<X1>, float *a3@<X2>, float *a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X5>, const void *a7@<X6>, char **a8@<X8>)
{
  float v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const DSPComplex *v15;
  vDSP_Length v16;
  const DSPComplex *v17;
  __n128 v18;
  float *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  float __B;
  DSPSplitComplex v24;
  DSPSplitComplex __Z;
  _BYTE v26[24];

  v9 = (char *)a6;
  v11 = *(_QWORD *)(a6 + 72);
  __Z.realp = a1;
  __Z.imagp = a2;
  if (v11 >= a5)
    v12 = a5;
  else
    v12 = v11;
  v24.realp = a3;
  v24.imagp = a4;
  sub_D14A94(a7, v12, a6);
  swift_beginAccess(v9 + 16, v26, 0, 0);
  v13 = *((_QWORD *)v9 + 2);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 >> 61)
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = (const DSPComplex *)sub_C7D904((const void *)(v13 + 32), v14 >> 1);
  v16 = (vDSP_Length)v15[2];
  v17 = v15 + 4;
  swift_bridgeObjectRetain();
  vDSP_ctoz(v17, 2, &__Z, 1, v16);
  swift_bridgeObjectRelease();
  v18 = swift_release();
  dispatch thunk of vDSP.FFT.forward(input:output:)(__Z.realp, __Z.imagp, &v24, v18);
  swift_retain();
  v19 = sub_D15060(v11, (uint64_t)v9, &v24);
  swift_release();
  *a8 = (char *)v19;
  v20 = swift_bridgeObjectRetain();
  sub_D14C4C(v20, a8);
  swift_bridgeObjectRelease();
  v8 = *((float *)v9 + 16);
  v9 = *a8;
  v11 = *((_QWORD *)*a8 + 2);
  v21 = swift_bridgeObjectRetain();
  v22 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
LABEL_8:
    v22 = sub_D3F03C((uint64_t)v9);
  __B = v8;
  vDSP_vsmul((const float *)v9 + 8, 1, &__B, (float *)v22 + 8, 1, v11);
  *a8 = v22;
  swift_bridgeObjectRelease();
}

void sub_D14A94(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  _BYTE v13[24];

  v3 = *(_QWORD *)(a3 + 72);
  if (v3 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3)
  {
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(*(_QWORD *)(a3 + 72), &type metadata for Float);
    v8 = (_QWORD *)v7;
    *(_QWORD *)(v7 + 16) = v3;
    v9 = (_QWORD *)(v7 + 32);
    if (a2)
    {
      if (v3 < a2)
        a2 = v3;
      memcpy((void *)(v7 + 32), a1, 4 * a2);
    }
  }
  else
  {
    a2 = 0;
    v8 = _swiftEmptyArrayStorage;
    v9 = &_swiftEmptyArrayStorage[4];
  }
  v10 = v3 - a2;
  if (__OFSUB__(v3, a2))
    goto LABEL_14;
  if (v10 < 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  if (v10)
    bzero((char *)v9 + 4 * a2, 4 * v10);
  v8[2] = v3;
  v11 = *(_QWORD *)(a3 + 80);
  v12 = (char **)(a3 + 16);
  swift_beginAccess(v12, v13, 33, 0);
  swift_bridgeObjectRetain();
  sub_D14BB0((uint64_t)v8, v11, v12);
  swift_endAccess(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_D14BB0(uint64_t a1, uint64_t a2, char **a3)
{
  char **v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  vDSP_Length v7;

  v6 = *a3;
  v7 = *((_QWORD *)*a3 + 2);
  if (*(_QWORD *)(a1 + 16) != v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = a2;
  if (*(_QWORD *)(a2 + 16) != v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = a3;
  v5 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a3) & 1) == 0)
LABEL_7:
    v6 = sub_D3F03C((uint64_t)v6);
  vDSP_vmul((const float *)(v5 + 32), 1, (const float *)(v4 + 32), 1, (float *)v6 + 8, 1, v7);
  *v3 = v6;
}

void sub_D14C4C(uint64_t a1, char **a2)
{
  char **v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int v6;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2;
  if (v4 != *((_QWORD *)*a2 + 2))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >> 31)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = a2;
  v3 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
LABEL_7:
    v5 = sub_D3F03C((uint64_t)v5);
  vvsqrtf((float *)v5 + 8, (const float *)(v3 + 32), &v6);
  *v2 = v5;
}

_QWORD *sub_D14D00()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  swift_release(v0[11]);
  return v0;
}

double sub_D14D54()
{
  uint64_t v0;
  double result;

  sub_D14D00();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 112, 7).n128_u64[0];
  return result;
}

uint64_t SampleReceiver.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t SampleReceiver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SampleReceiver()
{
  return objc_opt_self(_TtC9MusicCore14SampleReceiver);
}

uint64_t type metadata accessor for SampleReceiver.ContinuationStorage()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiverP33_F0C6F7CB2C0209FEAE1767B4D841EDD119ContinuationStorage);
}

uint64_t type metadata accessor for SampleReceiver.TapDelegate()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiver11TapDelegate);
}

uint64_t type metadata accessor for SampleReceiver.SampleTransformer()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiver17SampleTransformer);
}

uint64_t sub_D14E54()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_1501B50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1501B50);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x6552656C706D6153, 0xEE00726576696563);
}

uint64_t sub_D14ED4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D14F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1501FC4);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_50F8C;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_D13FE8, 0, 0);
}

uint64_t sub_D14F68(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(result, &type metadata for Float);
    v5[2] = v4;
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v6 = v5 + 4;
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 4;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == (_QWORD *)v7[0])
      {
        v5[2] = v8;
        swift_bridgeObjectRelease(v5);
        return (uint64_t)v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == (_QWORD *)v7[0])
    {
      v5[2] = v8;
      return (uint64_t)v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

float *sub_D15060(int64_t a1, uint64_t a2, DSPSplitComplex *a3)
{
  float *v6;
  int64_t v7;
  DSPSplitComplex v9;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a1)
  {
    v6 = (float *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, &type metadata for Float);
    *((_QWORD *)v6 + 2) = a1;
  }
  else
  {
    v6 = (float *)_swiftEmptyArrayStorage;
  }
  v7 = *(_QWORD *)(a2 + 72);
  v9 = *a3;
  vDSP_zvmags(&v9, 1, v6 + 8, 1, a1);
  if (v7 > a1)
LABEL_8:
    __break(1u);
  *((_QWORD *)v6 + 2) = v7;
  return v6;
}

uint64_t sub_D15138(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501FE8);
  v9 = sub_D151B4();
  result = static vDSP.formWindow<A>(usingSequence:result:isHalfWindow:)(v5, a1, v6, v8, v9);
  *a2 = v7;
  return result;
}

unint64_t sub_D151B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1501FF0;
  if (!qword_1501FF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1501FE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for UnsafeMutableBufferPointer<A>, v1);
    atomic_store(result, &qword_1501FF0);
  }
  return result;
}

uint64_t sub_D15200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D15280(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1500450) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1501FFC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return sub_D1314C(a1, v5, v6, v7, v8);
}

uint64_t sub_D15318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_D1538C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_D133D0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_D153CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D15448(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1502014);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_C3150;
  return sub_D13514(a1, v5, v6, v7, v8);
}

uint64_t sub_D154DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_D1551C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1502028;
  if (!qword_1502028)
  {
    v1 = objc_opt_self(MPCProcessAudioTap);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1502028);
  }
  return result;
}

id SequentialVocalCommandsFilter.playbackController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

uint64_t SequentialVocalCommandsFilter.__allocating_init(playbackController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 135, 15);
  swift_defaultActor_initialize();
  *(_WORD *)(v3 + 124) = 0;
  *(_DWORD *)(v3 + 120) = 0;
  *(_BYTE *)(v3 + 126) = 1;
  *(_WORD *)(v3 + 132) = 0;
  *(_DWORD *)(v3 + 128) = 0;
  *(_BYTE *)(v3 + 134) = 1;
  *(_QWORD *)(v3 + 112) = a1;
  return v3;
}

uint64_t SequentialVocalCommandsFilter.init(playbackController:)(uint64_t a1)
{
  uint64_t v1;

  swift_defaultActor_initialize(v1);
  *(_WORD *)(v1 + 124) = 0;
  *(_DWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 126) = 1;
  *(_WORD *)(v1 + 132) = 0;
  *(_DWORD *)(v1 + 128) = 0;
  *(_BYTE *)(v1 + 134) = 1;
  *(_QWORD *)(v1 + 112) = a1;
  return v1;
}

unint64_t SequentialVocalCommandsFilter.queuedCommand.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int16 *)(v0 + 124) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 126) << 48);
}

double SequentialVocalCommandsFilter.append(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  double result;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  NSObject *oslog;
  uint64_t v42;
  uint64_t v43[3];

  v2 = v1;
  if (qword_14F9FA8 != -1)
    swift_once(&qword_14F9FA8, sub_D163E4);
  v4 = a1 & 0x10000000000;
  v5 = type metadata accessor for Logger(0);
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1502030);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v43[0] = v10;
    *(_DWORD *)v9 = 136446210;
    LOBYTE(v42) = v4 != 0;
    v11 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v11, v12, v43);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v7, v8, "‚Ü™Ô∏è Queuing %{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((*(_BYTE *)(v1 + 134) & 1) == 0)
  {
    v14 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
    if (v4)
    {
      if ((v14 & 0x10000000000) != 0)
        goto LABEL_8;
    }
    else if ((v14 & 0x10000000000) == 0)
    {
      if ((a1 & 0x100000000) != 0)
      {
        if ((v14 & 0x100000000) != 0)
          goto LABEL_8;
      }
      else if ((v14 & 0x100000000) == 0 && *(float *)&a1 == *(float *)(v1 + 128))
      {
LABEL_8:
        oslog = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v15))
        {
          v16 = swift_slowAlloc(12, -1);
          v17 = swift_slowAlloc(32, -1);
          v43[0] = v17;
          *(_DWORD *)v16 = 136446210;
          LOBYTE(v42) = v4 != 0;
          v18 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
          *(_QWORD *)(v16 + 4) = sub_BA95EC(v18, v19, v43);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, oslog, v15, "‚Ü™Ô∏è‚ùå Ignored %{public}s; already executing.", (uint8_t *)v16, 0xCu);
          swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v17, -1, -1);
          swift_slowDealloc(v16, -1, -1);
        }

        return result;
      }
    }
  }
  swift_beginAccess(v1 + 120, v43, 1, 0);
  if ((*(_BYTE *)(v1 + 126) & 1) != 0)
    goto LABEL_33;
  v22 = *(unsigned int *)(v1 + 120) | ((unint64_t)*(unsigned __int16 *)(v1 + 124) << 32);
  if ((v22 & 0x10000000000) == 0)
  {
    if (!v4)
    {
      if ((v22 & 0x100000000) == 0)
      {
        if ((a1 & 0x100000000) != 0 || *(float *)(v1 + 120) != *(float *)&a1)
          goto LABEL_30;
        goto LABEL_26;
      }
      if ((a1 & 0x100000000) != 0)
        goto LABEL_26;
    }
LABEL_30:
    v29 = Logger.logObject.getter(v21);
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v42 = v32;
      *(_DWORD *)v31 = 136446210;
      v33 = (char *)Player.VocalsCommand.description.getter(v22 & 0xFFFFFFFFFFLL | (((v22 >> 40) & 1) << 40));
      *(_QWORD *)(v31 + 4) = sub_BA95EC(v33, v34, &v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v29, v30, "‚Ü™Ô∏èü´≥ Dropping queued command %{public}s", (uint8_t *)v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

LABEL_33:
    v35 = Logger.logObject.getter(v21);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v42 = v38;
      *(_DWORD *)v37 = 136446210;
      v39 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
      *(_QWORD *)(v37 + 4) = sub_BA95EC(v39, v40, &v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v35, v36, "‚Ü™Ô∏è‚úÖ Queued %{public}s", (uint8_t *)v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    *(_DWORD *)(v2 + 120) = a1;
    *(_WORD *)(v2 + 124) = (a1 & 0x1FFFFFFFFFFuLL) >> 32;
    *(_BYTE *)(v2 + 126) = 0;
    return sub_D15F18();
  }
  if (!v4)
    goto LABEL_30;
LABEL_26:
  v23 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v42 = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v4 != 0) << 40));
    *(_QWORD *)(v25 + 4) = sub_BA95EC(v27, v28, &v42);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v23, v24, "‚Ü™Ô∏è‚ùå Ignored %{public}s; Already enqueued.", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  return result;
}

uint64_t sub_D15C28(unint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  float *v15;
  __n128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v26;
  uint64_t v27[4];

  v3 = v2;
  if ((*(_BYTE *)(v2 + 134) & 1) == 0)
  {
    v14 = *(unsigned int *)(v2 + 128) | ((unint64_t)*(unsigned __int16 *)(v2 + 132) << 32);
    v15 = (float *)(v2 + 120);
    v16 = swift_beginAccess(v3 + 120, v27, 1, 0);
    if ((*(_BYTE *)(v3 + 126) & 1) == 0)
    {
      v17 = *(unsigned int *)v15 | ((unint64_t)*(unsigned __int16 *)(v3 + 124) << 32);
      if ((v14 & 0x10000000000) == 0)
      {
        if ((v17 & 0x10000000000) != 0)
          goto LABEL_17;
        if ((v14 & 0x100000000) != 0)
        {
          if ((v17 & 0x100000000) == 0)
            goto LABEL_17;
        }
        else
        {
          if ((v17 & 0x100000000) != 0)
            goto LABEL_17;
          v16.n128_u32[0] = v14;
          if (*(float *)&v14 != *v15)
            goto LABEL_17;
        }
        goto LABEL_10;
      }
      if ((v17 & 0x10000000000) != 0)
      {
LABEL_10:
        *(_WORD *)(v3 + 124) = 0;
        *(_DWORD *)(v3 + 120) = 0;
        *(_BYTE *)(v3 + 126) = 1;
        sub_D15F18(v16);
      }
    }
LABEL_17:
    if (qword_14F9FA8 != -1)
      swift_once(&qword_14F9FA8, sub_D163E4);
    v18 = type metadata accessor for Logger(0);
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1502030);
    v7 = Logger.logObject.getter(v19);
    v20 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v20))
      goto LABEL_22;
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v26 = v22;
    *(_DWORD *)v21 = 136446210;
    v23 = (char *)Player.VocalsCommand.description.getter(v14 & 0xFFFFFFFFFFLL | (((v14 >> 40) & 1) << 40));
    *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, &v26);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v7, v20, "‚ñ∂Ô∏è Executing %{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v13 = v21;
    goto LABEL_21;
  }
  if ((a1 & 0x1000000000000) == 0)
  {
    if (qword_14F9FA8 != -1)
      swift_once(&qword_14F9FA8, sub_D163E4);
    v5 = type metadata accessor for Logger(0);
    v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1502030);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_22;
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v27[0] = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | (((a1 >> 40) & 1) << 40));
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v11, v12, v27);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v7, v8, "‚úÖ Finished executing %{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    v13 = v9;
LABEL_21:
    swift_slowDealloc(v13, -1, -1);
LABEL_22:

  }
  return sub_D15F18(a2);
}

double sub_D15F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  unsigned __int8 v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  result = __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 134) == 1)
  {
    *(_QWORD *)&result = swift_beginAccess(v0 + 120, v25, 0, 0).n128_u64[0];
    if ((*(_BYTE *)(v0 + 126) & 1) == 0)
    {
      v6 = *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int16 *)(v0 + 124) << 32);
      v7 = *(_WORD *)(v0 + 124);
      if (qword_14F9FA8 != -1)
        swift_once(&qword_14F9FA8, sub_D163E4);
      v8 = type metadata accessor for Logger(0);
      v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1502030);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      v12 = (v6 >> 40) & 1;
      if (os_log_type_enabled(v10, v11))
      {
        v13 = swift_slowAlloc(12, -1);
        v14 = swift_slowAlloc(32, -1);
        v24 = v14;
        *(_DWORD *)v13 = 136446210;
        v15 = (char *)Player.VocalsCommand.description.getter(v6 & 0xFFFFFFFFFFLL | (v12 << 40));
        *(_QWORD *)(v13 + 4) = sub_BA95EC(v15, v16, &v24);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v10, v11, "‚Ü™Ô∏è Dequeuing %{public}s", (uint8_t *)v13, 0xCu);
        swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v14, -1, -1);
        swift_slowDealloc(v13, -1, -1);
      }

      v17 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
      v18 = *(_BYTE *)(v1 + 134);
      *(_DWORD *)(v1 + 128) = v6;
      *(_WORD *)(v1 + 132) = WORD2(v6);
      *(_BYTE *)(v1 + 134) = 0;
      LOBYTE(v24) = v18;
      sub_D15C28(v17 | ((unint64_t)v18 << 48), v19);
      v20 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
      v21 = sub_D16530();
      v22 = swift_allocObject(&unk_13B9F30, 46, 7);
      *(_QWORD *)(v22 + 16) = v1;
      *(_QWORD *)(v22 + 24) = v21;
      *(_QWORD *)(v22 + 32) = v1;
      *(_BYTE *)(v22 + 44) = v7;
      *(_DWORD *)(v22 + 40) = v6;
      *(_BYTE *)(v22 + 45) = v12;
      swift_retain_n(v1, 2);
      sub_C51ED8((uint64_t)v5, (uint64_t)&unk_1502150, v22);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_D161A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  return swift_task_switch(sub_D161B8, a4, 0);
}

uint64_t sub_D161B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 40) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.VocalsCommand;
  *(_DWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 20) = BYTE4(v1);
  *(_BYTE *)(v0 + 21) = BYTE5(v1) & 1;
  v2 = (_QWORD *)swift_task_alloc(dword_15007EC);
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_D16244;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, 0, 0);
}

uint64_t sub_D16244(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 72));
  if (v1)
  {
    v5 = *(_QWORD *)(v4 + 56);
    swift_errorRelease(v1);
    v6 = sub_D16334;
    v7 = v5;
  }
  else
  {
    v8 = (_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)(v4 + 56);

    __swift_destroy_boxed_opaque_existential_1(v8);
    v6 = sub_D162D4;
    v7 = v9;
  }
  return swift_task_switch(v6, v7, 0);
}

uint64_t sub_D162D4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(unsigned int *)(v2 + 128) | ((unint64_t)*(unsigned __int16 *)(v2 + 132) << 32);
  v4 = *(_BYTE *)(v2 + 134);
  *(_DWORD *)(v2 + 128) = 0;
  *(_WORD *)(v2 + 132) = 0;
  *(_BYTE *)(v2 + 134) = 1;
  sub_D15C28(v3 | ((unint64_t)v4 << 48), a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_D16334()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 v4;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
  v3 = *(_BYTE *)(v1 + 134);
  *(_DWORD *)(v1 + 128) = 0;
  *(_WORD *)(v1 + 132) = 0;
  *(_BYTE *)(v1 + 134) = 1;
  sub_D15C28(v2 | ((unint64_t)v3 << 48), v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SequentialVocalCommandsFilter.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t SequentialVocalCommandsFilter.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_D163E4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_1502030);
  __swift_project_value_buffer(v0, (uint64_t)qword_1502030);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0xD000000000000015, 0x8000000001108B80);
}

void sub_D16460(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int v4;
  char v5;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 120, v6, 0, 0);
  v4 = *(_DWORD *)(v3 + 120);
  v5 = *(_BYTE *)(v3 + 126);
  *(_WORD *)(a2 + 4) = *(_WORD *)(v3 + 124);
  *(_DWORD *)a2 = v4;
  *(_BYTE *)(a2 + 6) = v5;
}

double sub_D164B4(int *a1, uint64_t *a2)
{
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = *((_WORD *)a1 + 2);
  v4 = *((_BYTE *)a1 + 6);
  v5 = *a2;
  swift_beginAccess(*a2 + 120, v7, 1, 0);
  *(_WORD *)(v5 + 124) = v3;
  *(_DWORD *)(v5 + 120) = v2;
  *(_BYTE *)(v5 + 126) = v4;
  return sub_D15F18();
}

uint64_t type metadata accessor for SequentialVocalCommandsFilter()
{
  return objc_opt_self(_TtC9MusicCore29SequentialVocalCommandsFilter);
}

unint64_t sub_D16530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1502148;
  if (!qword_1502148)
  {
    v1 = type metadata accessor for SequentialVocalCommandsFilter();
    result = swift_getWitnessTable(&protocol conformance descriptor for SequentialVocalCommandsFilter, v1);
    atomic_store(result, (unint64_t *)&qword_1502148);
  }
  return result;
}

uint64_t sub_D16574()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 46, 7);
}

uint64_t sub_D165A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 45) << 40);
  v4 = (_QWORD *)swift_task_alloc(dword_1502144);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_50F8C;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_D161B8, v2, 0);
}

uint64_t *PlaylistCovers.ArtworkDataSource.shared.unsafeMutableAddressor()
{
  if (qword_14F9FB0 != -1)
    swift_once(&qword_14F9FB0, sub_D16E34);
  return &static PlaylistCovers.ArtworkDataSource.shared;
}

__n128 PlaylistCovers.Recipe.init(_:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __n128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v5 = sub_D180CC(a1, a2);
  v7 = v6;
  v8 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = JSONDecoder.init()();
  v10 = sub_D194C8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for PlaylistCovers.Recipe, v5, v7, &type metadata for PlaylistCovers.Recipe, v10);
  swift_release(v9);
  sub_50C60(v5, v7);
  if (!v3)
  {
    result = v16;
    *(_QWORD *)a3 = v12;
    *(_QWORD *)(a3 + 8) = v13;
    *(_OWORD *)(a3 + 16) = v14;
    *(_OWORD *)(a3 + 32) = v15;
    *(__n128 *)(a3 + 48) = v16;
    *(_OWORD *)(a3 + 64) = v17;
    *(_OWORD *)(a3 + 80) = v18;
    *(_QWORD *)(a3 + 96) = v19;
  }
  return result;
}

void PlaylistCovers.Recipe.asCoverRepresentation()(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  id v27;
  id v28;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)v1 == 3157553 && v3 == 0xE300000000000000;
  if (!v4
    && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v1, v3, 3157553, 0xE300000000000000, 0) & 1) == 0)
  {
    goto LABEL_12;
  }
  v5 = *(char **)(v1 + 40);
  v6 = *(char **)(v1 + 48);
  v7 = *(char **)(v1 + 56);
  v8 = *(char **)(v1 + 64);
  v9 = *(char **)(v1 + 72);
  v10 = *(char **)(v1 + 80);
  v11 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(*(char **)(v1 + 24), *(char **)(v1 + 32));
  if (!v11)
  {
    v16 = 0;
    v17 = 0;
    goto LABEL_14;
  }
  v12 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v5, v6);
  if (!v12)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    goto LABEL_16;
  }
  v13 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v7, v8);
  if (!v13)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    v12 = 0;
    goto LABEL_17;
  }
  v14 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v9, v10);
  if (!v14)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_18;
  }
  v15 = _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(*(_QWORD *)(v1 + 16));
  if (v15 == 8)
  {

LABEL_12:
    v16 = 0;
    v17 = 0;
    v11 = 0;
LABEL_14:
    v12 = 0;
LABEL_16:
    v13 = 0;
LABEL_17:
    v14 = 0;
LABEL_18:
    v18 = 0;
    goto LABEL_19;
  }
  v19 = v15;
  v20 = qword_14F9FB8;
  v21 = v11;
  v22 = v12;
  v27 = v13;
  v28 = v14;
  if (v20 != -1)
    swift_once(&qword_14F9FB8, sub_D1B018);
  sub_D1950C();
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)((uint64_t)v21, (uint64_t)v22, (uint64_t)v27, (uint64_t)v28, (uint64_t)v23, v19);
  v26 = v19;
  v17 = v24;
  v18 = v25;

  v16 = v26;
LABEL_19:
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v11;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v14;
  a1[6] = v18;
}

id PlaylistCovers.ArtworkToken.__allocating_init(coverRepresentation:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  __int128 v9;
  char *v10;
  objc_super v12;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v8 + 6) = *(_QWORD *)(a1 + 48);
  v10 = &v7[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v12.receiver = v7;
  v12.super_class = v3;
  return objc_msgSendSuper2(&v12, "init");
}

id PlaylistCovers.ArtworkToken.init(coverRepresentation:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  __int128 v5;
  char *v6;
  objc_super v8;

  v4 = &v3[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v5;
  *((_OWORD *)v4 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v4 + 6) = *(_QWORD *)(a1 + 48);
  v6 = &v3[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v6 = a2;
  *((_QWORD *)v6 + 1) = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for PlaylistCovers.ArtworkToken();
  return objc_msgSendSuper2(&v8, "init");
}

id PlaylistCovers.ArtworkToken.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id result;
  objc_super v23;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation);
  v3 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 8);
  v4 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16);
  v5 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 24);
  v6 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32);
  v7 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 40);
  v8 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8);
  v11 = (objc_class *)type metadata accessor for PlaylistCovers.ArtworkToken();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  *v13 = v2;
  *((_QWORD *)v13 + 1) = v3;
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v5;
  *((_QWORD *)v13 + 4) = v6;
  *((_QWORD *)v13 + 5) = v7;
  *((_QWORD *)v13 + 6) = v8;
  v14 = &v12[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v14 = v10;
  *((_QWORD *)v14 + 1) = v9;
  v23.receiver = v12;
  v23.super_class = v11;
  v15 = v3;
  v16 = v4;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  swift_bridgeObjectRetain();
  result = objc_msgSendSuper2(&v23, "init");
  a1[3] = v11;
  *a1 = result;
  return result;
}

Swift::String_optional __swiftcall PlaylistCovers.ArtworkToken.stringRepresentation()()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String_optional result;
  _OWORD v12[3];
  uint64_t v13;

  v1 = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16);
  v12[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation);
  v12[1] = v1;
  v12[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48);
  sub_2B6E74((uint64_t)v12);
  v2 = PlaylistCovers.Cover.Representation.stringRepresentation.getter();
  v4 = v3;
  sub_2B6EC8((uint64_t)v12);
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle);
  v6 = *(void **)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 0xD000000000000011;
  v8._object = (void *)0x8000000001108BA0;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v2;
  v10 = v4;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

void PlaylistCovers.ArtworkToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.ArtworkToken", 22, "init()", 6, 0);
  __break(1u);
}

id PlaylistCovers.ArtworkToken.__deallocating_deinit()
{
  return sub_1C53CC(type metadata accessor for PlaylistCovers.ArtworkToken);
}

id PlaylistCovers.ArtworkDataSource.cache.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache);
}

id sub_D16E34()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PlaylistCovers.ArtworkDataSource()), "init");
  static PlaylistCovers.ArtworkDataSource.shared = (uint64_t)result;
  return result;
}

id static PlaylistCovers.ArtworkDataSource.shared.getter()
{
  if (qword_14F9FB0 != -1)
    swift_once(&qword_14F9FB0, sub_D16E34);
  return (id)static PlaylistCovers.ArtworkDataSource.shared;
}

id PlaylistCovers.ArtworkDataSource.existingRepresentation(for:)(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  void *v12;
  _QWORD v13[4];

  v3 = objc_msgSend(a1, "token");
  _bridgeAnyObjectToAny(_:)(v13, v3);
  swift_unknownObjectRelease(v3);
  v4 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 0;
  v5 = v12;
  objc_msgSend(a1, "fittingSize");
  v8 = sub_D19568(v6, v7);
  if (!v8)
  {

    return 0;
  }
  v9 = v8;
  v10 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache), "objectForKey:", v8);

  return v10;
}

uint64_t PlaylistCovers.ArtworkDataSource.loadRepresentation(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch(sub_D16FF4, 0, 0);
}

uint64_t sub_D16FF4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *ObjCClassFromMetadata;
  id v29;
  id v30;
  id v31;
  char **v32;
  id v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;

  v1 = objc_msgSend(*(id *)(v0 + 64), "token");
  _bridgeAnyObjectToAny(_:)((_QWORD *)(v0 + 16), v1);
  swift_unknownObjectRelease(v1);
  v2 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if (!swift_dynamicCast(v0 + 48, v0 + 16, (char *)&type metadata for Any + 8, v2, 6))
  {
    v11 = *(void **)(v0 + 64);
    _StringGuts.grow(_:)(58);
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = 0xE000000000000000;
    v12._countAndFlagsBits = 0x206E656B6F54;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    v13 = objc_msgSend(v11, "token");
    _bridgeAnyObjectToAny(_:)((_QWORD *)(v0 + 16), v13);
    swift_unknownObjectRelease(v13);
    _print_unlocked<A, B>(_:_:)(v0 + 16, v0 + 48, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
    v14._object = (void *)0x8000000001108BE0;
    v14._countAndFlagsBits = 0xD000000000000032;
    String.append(_:)(v14);
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = sub_D19670();
    v18 = swift_allocError(&type metadata for Error, v17, 0, 0);
    *v19 = v15;
    v19[1] = v16;
    swift_willThrow(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(void **)(v0 + 64);
  v4 = *(char **)(v0 + 48);
  objc_msgSend(v3, "fittingSize");
  v6 = v5;
  v8 = v7;
  v9 = PlaylistCovers.ArtworkDataSource.existingRepresentation(for:)(v3);
  if (v9)
  {
    v10 = v9;
  }
  else
  {
    v21 = *(void **)(v0 + 64);
    v22 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 8];
    v23 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16];
    v25 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 24];
    v24 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32];
    v27 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 40];
    v26 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48];
    sub_D1950C();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v29 = v22;
    v30 = v23;
    v44 = v25;
    v45 = v24;
    v31 = v27;
    v32 = v26;
    v33 = objc_msgSend(ObjCClassFromMetadata, "preferredFormat");
    objc_msgSend(v21, "destinationScale");
    objc_msgSend(v33, "setScale:");
    objc_msgSend(v21, "fittingSize");
    v35 = v34;
    v37 = v36;
    v38 = *(_QWORD *)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
    v39 = *(_QWORD *)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8];
    swift_bridgeObjectRetain();
    _s9MusicCore14PlaylistCoversO18playlistCoverImage4size010backgroundG09textColor5title14graphicsFormatSo7UIImageCSo6CGSizeV_AKSo7UIColorCSSSgSo010UIGraphicsg8RendererN0CtFZ_0(v29, v32, v38, v39, v33, v35, v37);
    v41 = v40;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend((id)objc_opt_self(MPArtworkRepresentation), "representationForVisualIdentity:withSize:image:", v4, v41, v6, v8);
    v42 = sub_D19568(v6, v8);
    if (v42)
    {
      v43 = v42;
      objc_msgSend(*(id *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache), "setObject:forKey:", v10, v42);

      return (*(uint64_t (**)(id))(v0 + 8))(v10);
    }

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_D174DC(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = dword_150218C;
  v7 = a1;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_D1756C;
  v9[8] = v7;
  v9[9] = v8;
  return swift_task_switch(sub_D16FF4, 0, 0);
}

uint64_t sub_D1756C(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;

  v3 = v1;
  v5 = *(_QWORD *)(*v2 + 40);
  v7 = *(void **)(*v2 + 16);
  v6 = *(void **)(*v2 + 24);
  v8 = *v2;
  swift_task_dealloc(v5);

  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v8 + 32);
  if (v3)
  {
    v10 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v9)[2](v9, a1, 0);
    _Block_release(v9);

  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t PlaylistCovers.ArtworkDataSource.visualIdenticalityIdentifier(for:)(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[4];

  v1 = objc_msgSend(a1, "token");
  _bridgeAnyObjectToAny(_:)(v5, v1);
  swift_unknownObjectRelease(v1);
  v2 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, v2, 6))
    return v4;
  else
    return 0;
}

id PlaylistCovers.ArtworkDataSource.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache;
  v2 = objc_allocWithZone((Class)NSCache);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PlaylistCovers.ArtworkDataSource();
  return objc_msgSendSuper2(&v5, "init");
}

id PlaylistCovers.ArtworkDataSource.__deallocating_deinit()
{
  return sub_1C53CC(type metadata accessor for PlaylistCovers.ArtworkDataSource);
}

_QWORD *PlaylistCovers.Recipe.colorInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_D196D4((_QWORD *)(v1 + 24), a1);
}

_QWORD *PlaylistCovers.Recipe.colorInfo.setter(_QWORD *a1)
{
  uint64_t v1;

  return sub_D19708(a1, (_QWORD *)(v1 + 24));
}

uint64_t SharedListening.Reaction.senderID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedListening.Reaction.senderID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

unint64_t sub_D178E4()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x31726F6C6F63;
}

uint64_t sub_D17900@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_D19780(a1, a2);
  *a3 = result;
  return result;
}

void sub_D17924(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_D17930(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D1973C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D17958(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D1973C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlaylistCovers.Recipe.HexColors.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502198);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D1973C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s6RecipeV9HexColorsV10CodingKeysON, &_s6RecipeV9HexColorsV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v25, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v24, v5);
    v16 = v3[4];
    v17 = v3[5];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v23, v5);
    v18 = v3[6];
    v19 = v3[7];
    v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, &v22, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double PlaylistCovers.Recipe.HexColors.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_D19918(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_D17B24(_QWORD *a1)
{
  return PlaylistCovers.Recipe.HexColors.encode(to:)(a1);
}

uint64_t sub_D17B38(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s9MusicCore14PlaylistCoversO6RecipeV9HexColorsV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t *)v7, v8) & 1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PlaylistCovers.Recipe.rawJSONRepresentation()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::String result;
  _OWORD v20[6];
  uint64_t v21;

  v3 = v0;
  v4 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONEncoder.init()();
  v9 = *(_OWORD *)(v3 + 80);
  v20[4] = *(_OWORD *)(v3 + 64);
  v20[5] = v9;
  v21 = *(_QWORD *)(v3 + 96);
  v10 = *(_OWORD *)(v3 + 16);
  v20[0] = *(_OWORD *)v3;
  v20[1] = v10;
  v11 = *(_OWORD *)(v3 + 48);
  v20[2] = *(_OWORD *)(v3 + 32);
  v20[3] = v11;
  v12 = sub_D19BF0();
  v13 = dispatch thunk of JSONEncoder.encode<A>(_:)(v20, &type metadata for PlaylistCovers.Recipe, v12);
  if (v1)
  {
    swift_release(v8);
  }
  else
  {
    v15 = v13;
    v16 = v14;
    static String.Encoding.utf8.getter(v13);
    v17 = String.init(data:encoding:)(v15, v16, v6);
    if (!v18)
    {
      __break(1u);
      goto LABEL_7;
    }
    v6 = (char *)v17;
    v2 = v18;
    sub_50C60(v15, v16);
    swift_release(v8);
  }
  v17 = (uint64_t)v6;
  v18 = v2;
LABEL_7:
  result._object = v18;
  result._countAndFlagsBits = v17;
  return result;
}

uint64_t sub_D17CB0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_D17CE0 + 4 * byte_10A3F40[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_D17CE0()
{
  return 0x6973736572707865;
}

uint64_t sub_D17D00()
{
  return 0x666E49726F6C6F63;
}

uint64_t sub_D17D1C()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_D17D3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_D19CBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D17D60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D19C34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D17D88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D19C34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlaylistCovers.Recipe.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _OWORD v23[4];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15021B0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D19C34();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s6RecipeV10CodingKeysON, &_s6RecipeV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v23[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, v23, v5);
  if (!v2)
  {
    v14 = v3[2];
    LOBYTE(v23[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v23, v5);
    v15 = *(_OWORD *)(v3 + 5);
    v23[0] = *(_OWORD *)(v3 + 3);
    v23[1] = v15;
    v16 = *(_OWORD *)(v3 + 9);
    v23[2] = *(_OWORD *)(v3 + 7);
    v23[3] = v16;
    v22 = 2;
    v17 = sub_D19C78();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v23, &v22, v5, &type metadata for PlaylistCovers.Recipe.HexColors, v17);
    v18 = v3[11];
    v19 = v3[12];
    LOBYTE(v23[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, v23, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 PlaylistCovers.Recipe.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_D19E9C(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_D17F98(_QWORD *a1)
{
  return PlaylistCovers.Recipe.encode(to:)(a1);
}

uint64_t sub_D17FAC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return _s9MusicCore14PlaylistCoversO6RecipeV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t *)v11, v13) & 1;
}

void PlaylistCovers.Recipe.HexColors.init(from:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v21 = v11;
  v22 = v10;
  v20 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v13 = v12;
  v14 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v16 = v15;
  v17 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v19 = v18;

  *a5 = v22;
  a5[1] = v21;
  a5[2] = v20;
  a5[3] = v13;
  a5[4] = v14;
  a5[5] = v16;
  a5[6] = v17;
  a5[7] = v19;
}

uint64_t sub_D180CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  __int128 v17[2];
  uint64_t v18;
  __int128 v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v19 = a1;
  *((_QWORD *)&v19 + 1) = a2;
  swift_bridgeObjectRetain();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502368);
  if (!swift_dynamicCast(v17, &v19, &type metadata for String.UTF8View, v2, 6))
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_56024((uint64_t)v17, &qword_1502370);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v20[0] = a1;
      v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v7 = (char *)v20 + (HIBYTE(a2) & 0xF);
      v8 = v20;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v5 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v6 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v5 = _StringObject.sharedUTF8.getter(a1, a2);
      }
      if (v5)
        v7 = (_BYTE *)(v5 + v6);
      else
        v7 = 0;
      v8 = (_BYTE *)v5;
    }
    v9 = sub_D18F44(v8, v7);
    v11 = v10;
    if (v10 >> 60 != 15)
    {
      swift_bridgeObjectRelease(a2);
      *(_QWORD *)&v17[0] = v9;
      *((_QWORD *)&v17[0] + 1) = v11;
      return *(_QWORD *)&v17[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v12 = String.UTF8View._foreignCount()();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v12 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v12 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v17[0] = sub_6260D4(v12);
    *((_QWORD *)&v17[0] + 1) = v13;
    __chkstk_darwin(*(_QWORD *)&v17[0]);
    sub_D18834();
    __asm { BR              X12 }
  }
  sub_8B15C(v17, (uint64_t)v20);
  v3 = v21;
  v4 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)(&v19, sub_6256BC, 0, &type metadata for Data._Representation, v3, v4);
  swift_bridgeObjectRelease(a2);
  v17[0] = v19;
  __swift_destroy_boxed_opaque_existential_1(v20);
  return *(_QWORD *)&v17[0];
}

uint64_t PlaylistCovers.Recipe.init(from:)@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *a1 + 1;
  v4 = (void *)*((_QWORD *)a1 + 3);
  v5 = (void *)*((_QWORD *)a1 + 4);
  v6 = (void *)*((_QWORD *)a1 + 5);
  v7 = *((id *)a1 + 2);
  v8 = v4;
  v9 = v5;
  v10 = v6;
  v11 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v27 = v12;
  v28 = v11;
  v13 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v25 = v14;
  v26 = v13;
  v15 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v17 = v16;
  v18 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v20 = v19;

  v21 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v23 = v22;
  result = sub_2B6EC8((uint64_t)a1);
  *a2 = 3157553;
  a2[1] = 0xE300000000000000;
  a2[2] = v29;
  a2[3] = v28;
  a2[4] = v27;
  a2[5] = v26;
  a2[6] = v25;
  a2[7] = v15;
  a2[8] = v17;
  a2[9] = v18;
  a2[10] = v20;
  a2[11] = v21;
  a2[12] = v23;
  return result;
}

uint64_t sub_D186E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_56024(a1, (uint64_t *)&unk_1500E30);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_13BA2A0, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_1502348, v17);
}

void sub_D18834()
{
  __asm { BR              X11 }
}

_QWORD *sub_D18894@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_QWORD *sub_D18B24(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_D18B88(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)__DataStorage._bytes.getter();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)__DataStorage._offset.getter();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = __DataStorage._length.getter();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_D18C34@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result)
  {
    v5 = result;
    v8 = *a3;
    v7 = a3[1];
    swift_bridgeObjectRetain();
    result = _StringGuts.copyUTF8(into:)(v5, a2, v8, v7);
    if ((v9 & 1) == 0)
    {
      v10 = result;
      result = swift_bridgeObjectRelease(v7);
      *a4 = 0;
      a4[1] = 0xE000000000000000;
      a4[2] = 15;
      a4[3] = v10;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s9MusicCore14PlaylistCoversO6RecipeV9HexColorsV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = a2[4], v19 = a2[5], v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), result = 0, (v20 & 1) != 0))
      {
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
  }
  return result;
}

uint64_t _s9MusicCore14PlaylistCoversO6RecipeV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if (a1[2] == a2[2])
    {
      v10 = a1[3];
      v11 = a1[4];
      v12 = a1[5];
      v13 = a1[6];
      v14 = a1[7];
      v15 = a1[8];
      v16 = a2[3];
      v17 = a2[4];
      v18 = a2[5];
      v19 = a2[6];
      v20 = a2[7];
      v21 = a2[8];
      v32 = a2[9];
      v33 = a1[9];
      v30 = a2[10];
      v31 = a1[10];
      if (v10 == v16 && v11 == v17
        || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v16, v17, 0), result = 0, (v22 & 1) != 0))
      {
        if (v12 == v18 && v13 == v19
          || (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v18, v19, 0), result = 0, (v23 & 1) != 0))
        {
          if (v14 == v20 && v15 == v21
            || (v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v20, v21, 0), result = 0, (v24 & 1) != 0))
          {
            if (v33 == v32 && v31 == v30
              || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v31, v32, v30, 0),
                  result = 0,
                  (v25 & 1) != 0))
            {
              v26 = a1[11];
              v27 = a1[12];
              v28 = a2[11];
              v29 = a2[12];
              if (v26 == v28 && v27 == v29)
                return 1;
              else
                return _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v28, v29, 0);
            }
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

_BYTE *sub_D18F44(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_625898(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_625958((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_6259D0((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

id _s9MusicCore14PlaylistCoversO12ArtworkTokenC7rawJSON13playlistTitleAESgSS_SStcfC_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  char *v17;
  objc_super v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[7];
  _OWORD v28[3];
  uint64_t v29;
  _OWORD v30[6];
  uint64_t v31;

  swift_bridgeObjectRetain();
  v8 = sub_D180CC(a1, a2);
  v10 = v9;
  v11 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = JSONDecoder.init()();
  v13 = sub_D194C8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for PlaylistCovers.Recipe, v8, v10, &type metadata for PlaylistCovers.Recipe, v13);
  swift_release(v12);
  sub_50C60(v8, v10);
  swift_bridgeObjectRelease(a2);
  v30[4] = v24;
  v30[5] = v25;
  v31 = v26;
  v30[0] = v20;
  v30[1] = v21;
  v30[2] = v22;
  v30[3] = v23;
  PlaylistCovers.Recipe.asCoverRepresentation()(v27);
  sub_1CBC30(v30);
  sub_D1AA10((uint64_t)v27, (uint64_t)v28);
  if (*((_QWORD *)&v28[0] + 1))
  {
    v20 = v28[0];
    v21 = v28[1];
    v22 = v28[2];
    *(_QWORD *)&v23 = v29;
    v14 = (objc_class *)type metadata accessor for PlaylistCovers.ArtworkToken();
    v15 = (char *)objc_allocWithZone(v14);
    v16 = &v15[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
    *(_OWORD *)v16 = v20;
    *((_OWORD *)v16 + 1) = v21;
    *((_OWORD *)v16 + 2) = v22;
    *((_QWORD *)v16 + 6) = v23;
    v17 = &v15[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
    *(_QWORD *)v17 = a3;
    *((_QWORD *)v17 + 1) = a4;
    v19.receiver = v15;
    v19.super_class = v14;
    return objc_msgSendSuper2(&v19, "init");
  }
  else
  {
    swift_bridgeObjectRelease(a4);
    return 0;
  }
}

unint64_t sub_D194C8()
{
  unint64_t result;

  result = qword_1502160;
  if (!qword_1502160)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe, &type metadata for PlaylistCovers.Recipe);
    atomic_store(result, (unint64_t *)&qword_1502160);
  }
  return result;
}

unint64_t sub_D1950C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1502168;
  if (!qword_1502168)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1502168);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCovers.ArtworkToken()
{
  return objc_opt_self(_TtCO9MusicCore14PlaylistCovers12ArtworkToken);
}

id sub_D19568(double a1, double a2)
{
  Swift::String_optional v4;
  id object;
  Swift::String v6;
  Swift::String v7;
  id v8;
  NSString v9;

  v4 = PlaylistCovers.ArtworkToken.stringRepresentation()();
  object = v4.value._object;
  if (v4.value._object)
  {
    v6._countAndFlagsBits = CGSize.description.getter(a1, a2);
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 0x203A657A6973202CLL;
    v7._object = (void *)0xE800000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = objc_allocWithZone((Class)NSString);
    v9 = String._bridgeToObjectiveC()();
    object = objc_msgSend(v8, "initWithString:", v9, swift_bridgeObjectRelease().n128_f64[0], v4.value._countAndFlagsBits, v4.value._object);

  }
  return object;
}

unint64_t sub_D19670()
{
  unint64_t result;

  result = qword_1502190;
  if (!qword_1502190)
  {
    result = swift_getWitnessTable(&unk_10A42B0, &type metadata for Error);
    atomic_store(result, (unint64_t *)&qword_1502190);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCovers.ArtworkDataSource()
{
  return objc_opt_self(_TtCO9MusicCore14PlaylistCovers17ArtworkDataSource);
}

_QWORD *sub_D196D4(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for MLI.Observer.AlertText(a2, a1);
  return a2;
}

_QWORD *sub_D19708(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for MLI.Observer.AlertText(a2, a1);
  return a2;
}

unint64_t sub_D1973C()
{
  unint64_t result;

  result = qword_15021A0;
  if (!qword_15021A0)
  {
    result = swift_getWitnessTable(&unk_10A4260, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15021A0);
  }
  return result;
}

uint64_t sub_D19780(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x31726F6C6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x31726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x32726F6C6F63 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x32726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x33726F6C6F63 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x33726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x34726F6C6F63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x34726F6C6F63, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_D19918(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502360);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D1973C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s6RecipeV9HexColorsV10CodingKeysON, &_s6RecipeV9HexColorsV10CodingKeysON, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v34 = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v5);
    v14 = v13;
    v29 = v12;
    v33 = 1;
    swift_bridgeObjectRetain();
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v33, v5);
    v30 = v16;
    v28 = v15;
    v32 = 2;
    swift_bridgeObjectRetain();
    v26 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v5);
    v27 = v17;
    v31 = 3;
    swift_bridgeObjectRetain();
    v18 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22 = v18;
    v21(v8, v5);
    swift_bridgeObjectRetain();
    v23 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    v24 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v29;
    a2[1] = v14;
    a2[2] = v28;
    a2[3] = v23;
    a2[4] = v26;
    a2[5] = v24;
    a2[6] = v22;
    a2[7] = v20;
  }
}

unint64_t sub_D19BF0()
{
  unint64_t result;

  result = qword_15021A8;
  if (!qword_15021A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe, &type metadata for PlaylistCovers.Recipe);
    atomic_store(result, (unint64_t *)&qword_15021A8);
  }
  return result;
}

unint64_t sub_D19C34()
{
  unint64_t result;

  result = qword_15021B8;
  if (!qword_15021B8)
  {
    result = swift_getWitnessTable(&unk_10A4210, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15021B8);
  }
  return result;
}

unint64_t sub_D19C78()
{
  unint64_t result;

  result = qword_15021C0;
  if (!qword_15021C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe.HexColors, &type metadata for PlaylistCovers.Recipe.HexColors);
    atomic_store(result, (unint64_t *)&qword_15021C0);
  }
  return result;
}

uint64_t sub_D19CBC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6973736572707865 && a2 == 0xEC00000064496E6FLL)
  {
    v7 = 0xEC00000064496E6FLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6973736572707865, 0xEC00000064496E6FLL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x666E49726F6C6F63 && a2 == 0xE90000000000006FLL)
  {
    v8 = 0xE90000000000006FLL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x666E49726F6C6F63, 0xE90000000000006FLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease(0xE900000000000072);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F6C6F4374786574, 0xE900000000000072, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_D19E9C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[8];
  char v42;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502350);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D19C34();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s6RecipeV10CodingKeysON, &_s6RecipeV10CodingKeysON, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    LOBYTE(v41[0]) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(v41, v5);
    v14 = v13;
    LOBYTE(v41[0]) = 1;
    swift_bridgeObjectRetain();
    v40 = KeyedDecodingContainer.decode(_:forKey:)(v41, v5);
    v42 = 2;
    v15 = sub_D1A954();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for PlaylistCovers.Recipe.HexColors, &v42, v5, &type metadata for PlaylistCovers.Recipe.HexColors, v15);
    v16 = v41[3];
    v34 = v41[2];
    v35 = v41[0];
    v17 = v41[5];
    v32 = v41[6];
    v33 = v41[4];
    v38 = v41[1];
    v39 = v41[7];
    LOBYTE(v41[0]) = 3;
    swift_bridgeObjectRetain();
    v37 = v16;
    swift_bridgeObjectRetain();
    v36 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = KeyedDecodingContainer.decode(_:forKey:)(v41, v5);
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v31 = v18;
    v21(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    v22 = v39;
    swift_bridgeObjectRelease();
    v23 = v36;
    swift_bridgeObjectRelease();
    v24 = v37;
    swift_bridgeObjectRelease();
    v25 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = v14;
    v26 = v35;
    a2[2] = v40;
    a2[3] = v26;
    v27 = v34;
    a2[4] = v25;
    a2[5] = v27;
    v28 = v33;
    a2[6] = v24;
    a2[7] = v28;
    v29 = v32;
    a2[8] = v23;
    a2[9] = v29;
    v30 = v31;
    a2[10] = v22;
    a2[11] = v30;
    a2[12] = v20;
  }
}

uint64_t _s6RecipeVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  return swift_bridgeObjectRelease(a1[12]);
}

uint64_t _s6RecipeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6RecipeVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v5 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[5] = a2[5];
  v6 = a1[6];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[7] = a2[7];
  v7 = a1[8];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[9] = a2[9];
  v8 = a1[10];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[11] = a2[11];
  v9 = a2[12];
  v10 = a1[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  return a1;
}

__n128 __swift_memcpy104_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s6RecipeVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRelease(v14);
  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Recipe()
{
  return &type metadata for PlaylistCovers.Recipe;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Recipe.HexColors()
{
  return &type metadata for PlaylistCovers.Recipe.HexColors;
}

ValueMetadata *_s6RecipeV10CodingKeysOMa()
{
  return &_s6RecipeV10CodingKeysON;
}

uint64_t _s6RecipeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_D1A4DC + 4 * byte_10A3F49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_D1A510 + 4 * byte_10A3F44[v4]))();
}

uint64_t sub_D1A510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D1A518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD1A520);
  return result;
}

uint64_t sub_D1A52C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD1A534);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_D1A538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D1A540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6RecipeV9HexColorsV10CodingKeysOMa()
{
  return &_s6RecipeV9HexColorsV10CodingKeysON;
}

ValueMetadata *type metadata accessor for Error()
{
  return &type metadata for Error;
}

unint64_t sub_D1A570()
{
  unint64_t result;

  result = qword_15022D8;
  if (!qword_15022D8)
  {
    result = swift_getWitnessTable(&unk_10A4130, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15022D8);
  }
  return result;
}

unint64_t sub_D1A5B8()
{
  unint64_t result;

  result = qword_15022E0;
  if (!qword_15022E0)
  {
    result = swift_getWitnessTable(&unk_10A41E8, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15022E0);
  }
  return result;
}

unint64_t sub_D1A600()
{
  unint64_t result;

  result = qword_15022E8;
  if (!qword_15022E8)
  {
    result = swift_getWitnessTable(&unk_10A4158, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15022E8);
  }
  return result;
}

unint64_t sub_D1A648()
{
  unint64_t result;

  result = qword_15022F0;
  if (!qword_15022F0)
  {
    result = swift_getWitnessTable(&unk_10A4180, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15022F0);
  }
  return result;
}

unint64_t sub_D1A690()
{
  unint64_t result;

  result = qword_15022F8;
  if (!qword_15022F8)
  {
    result = swift_getWitnessTable("Qb1", &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_15022F8);
  }
  return result;
}

unint64_t sub_D1A6D8()
{
  unint64_t result;

  result = qword_1502300;
  if (!qword_1502300)
  {
    result = swift_getWitnessTable(&unk_10A40C8, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1502300);
  }
  return result;
}

uint64_t sub_D1A71C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_D1A750()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1502314);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1502310 + dword_1502310))(v2, v3, v4);
}

uint64_t sub_D1A7C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1502324);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1502320 + dword_1502320))(v2, v3, v4);
}

uint64_t sub_D1A83C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1502334);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1502330 + dword_1502330))(a1, v4, v5, v6);
}

uint64_t sub_D1A8C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D1A8E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1502344);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1502340 + dword_1502340))(a1, v4);
}

unint64_t sub_D1A954()
{
  unint64_t result;

  result = qword_1502358;
  if (!qword_1502358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe.HexColors, &type metadata for PlaylistCovers.Recipe.HexColors);
    atomic_store(result, (unint64_t *)&qword_1502358);
  }
  return result;
}

_QWORD *sub_D1A998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_D18B24((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_D1A9F4, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_D1A9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_D18C34(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_D1AA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PlaylistCovers.Cover.Representation.stringRepresentation.getter()
{
  void **v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;

  _StringGuts.grow(_:)(68);
  v1._countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x8000000001108D30;
  String.append(_:)(v1);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x8000000001108D60;
  v3._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v3);
  v4._countAndFlagsBits = PlaylistCovers.RecipeColors.description.getter(v0[2], v0[3], v0[4], v0[5]);
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x6F4374786574202CLL;
  v5._object = (void *)0xED0000203A726F6CLL;
  String.append(_:)(v5);
  v6 = v0[6];
  v7 = objc_msgSend(v6, "description");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);

  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0;
}

__int128 *PlaylistCovers.Specs.coverSize.unsafeMutableAddressor()
{
  if (qword_14F9FB8 != -1)
    swift_once(&qword_14F9FB8, sub_D1B018);
  return &static PlaylistCovers.Specs.coverSize;
}

uint64_t PlaylistCovers.Cover.Representation.init(expression:backgroundImage:recipeColors:textColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t PlaylistCovers.Cover.representation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_D1C29C(v1 + 8, a1);
}

uint64_t PlaylistCovers.Cover.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void *PlaylistCovers.Cover.Representation.recipeColors.getter()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = (void *)v0[2];
  v2 = (void *)v0[3];
  v4 = (void *)v0[4];
  v3 = (void *)v0[5];
  v5 = v1;
  v6 = v2;
  v7 = v4;
  v8 = v3;
  return v1;
}

void PlaylistCovers.Cover.Representation.hash(into:)(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = v1;
  Hasher._combine(_:)(*v1 + 1);
  v4 = (void *)*((_QWORD *)v1 + 3);
  v5 = (void *)*((_QWORD *)v2 + 4);
  v6 = (void *)*((_QWORD *)v2 + 5);
  v7 = *((id *)v2 + 2);
  v8 = v4;
  v9 = v5;
  v10 = v6;
  NSObject.hash(into:)(a1);
  v11 = v8;
  NSObject.hash(into:)(a1);

  v12 = v9;
  NSObject.hash(into:)(a1);

  v13 = v10;
  NSObject.hash(into:)(a1);

  v14 = *((id *)v2 + 6);
  NSObject.hash(into:)(a1);

}

Swift::Int PlaylistCovers.Cover.Representation.hashValue.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[9];

  v1 = v0;
  Hasher.init(_seed:)(v14);
  Hasher._combine(_:)(*v0 + 1);
  v2 = (void *)*((_QWORD *)v0 + 3);
  v3 = (void *)*((_QWORD *)v1 + 4);
  v4 = (void *)*((_QWORD *)v1 + 5);
  v5 = *((id *)v1 + 2);
  v6 = v2;
  v7 = v3;
  v8 = v4;
  NSObject.hash(into:)(v14);
  v9 = v6;
  NSObject.hash(into:)(v14);

  v10 = v7;
  NSObject.hash(into:)(v14);

  v11 = v8;
  NSObject.hash(into:)(v14);

  v12 = *((id *)v1 + 6);
  NSObject.hash(into:)(v14);

  return Hasher._finalize()();
}

uint64_t sub_D1AE98(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

Swift::Int sub_D1AEF8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

__n128 PlaylistCovers.Cover.init(image:representation:)@<Q0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;

  v11 = *(__n128 *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 8);
  v5 = *((_QWORD *)a2 + 5);
  v6 = *((_QWORD *)a2 + 6);
  v7 = *a2;
  PlaylistCovers.Expression.accessibilityLabel.getter(*a2);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = v7;
  result = v11;
  *(_OWORD *)(a3 + 16) = v12;
  *(__n128 *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 48) = v5;
  *(_QWORD *)(a3 + 56) = v6;
  *(_QWORD *)(a3 + 64) = v9;
  *(_QWORD *)(a3 + 72) = v10;
  return result;
}

double PlaylistCovers.Cover.init(image:accessibilityLabel:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;

  *(_QWORD *)a4 = a1;
  result = 0.0;
  *(_OWORD *)(a4 + 8) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = a2;
  *(_QWORD *)(a4 + 72) = a3;
  return result;
}

uint64_t sub_D1AFC0(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return _s9MusicCore14PlaylistCoversO5CoverV23__derived_struct_equalsySbAE_AEtFZ_0(v8, v9) & 1;
}

int64x2_t sub_D1B018()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4066800000000000uLL);
  static PlaylistCovers.Specs.coverSize = (__int128)result;
  return result;
}

double static PlaylistCovers.Specs.coverSize.getter()
{
  if (qword_14F9FB8 != -1)
    swift_once(&qword_14F9FB8, sub_D1B018);
  return *(double *)&static PlaylistCovers.Specs.coverSize;
}

int64x2_t sub_D1B074()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4070E00000000000uLL);
  xmmword_1582300 = (__int128)result;
  return result;
}

void sub_D1B08C()
{
  qword_1582310 = 0x4040800000000000;
}

void sub_D1B0A0()
{
  qword_1582318 = 0x403B000000000000;
}

void sub_D1B0B0()
{
  qword_1582320 = 0x403C000000000000;
}

void sub_D1B0C0()
{
  qword_1582328 = 0x4034000000000000;
}

id sub_D1B0D0()
{
  id v0;
  id v1;
  id v2;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  sub_4E684(0, &qword_1502388, UIColor_ptr);
  v1 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(255, 128, 128, 1.0);
  v2 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(255, 230, 230, 1.0);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(250, 35, 59, 1.0);
  qword_1582330 = (uint64_t)v0;
  *(_QWORD *)algn_1582338 = v1;
  qword_1582340 = (uint64_t)v2;
  unk_1582348 = result;
  return result;
}

id sub_D1B184()
{
  id v0;
  id v1;
  id v2;
  id result;

  sub_4E684(0, &qword_1502388, UIColor_ptr);
  v0 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(238, 238, 238, 1.0);
  v1 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(187, 187, 187, 1.0);
  v2 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(70, 70, 70, 1.0);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(17, 17, 17, 1.0);
  qword_1582350 = (uint64_t)v0;
  *(_QWORD *)algn_1582358 = v1;
  qword_1582360 = (uint64_t)v2;
  unk_1582368 = result;
  return result;
}

void sub_D1B22C(int a1, id a2, double a3, double a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  __CFString *v24;
  id v25;
  Class isa;
  id v27;
  id v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString *v35;
  id v36;
  NSString *v37;
  id v38;
  NSString *v39;
  NSString *v40;
  id v41;
  unint64_t v42;
  objc_class *v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  __n128 v48;
  double v49;
  double v50;
  void *v51;
  __CFString *v52;
  id v53;
  uint64_t v55;
  _BYTE v56[192];
  _BYTE v57[120];

  objc_msgSend(a2, "drawInRect:", 0.0, 0.0, a3, a4);
  if (qword_14F9FC0 != -1)
    swift_once(&qword_14F9FC0, sub_D1B074);
  v13 = *(double *)&xmmword_1582300 / a3;
  v14 = String.count.getter(a6, a7);
  if (v14 <= 30)
  {
    if (qword_14F9FC8 != -1)
      swift_once(&qword_14F9FC8, sub_D1B08C);
    v15 = &qword_1582310;
  }
  else
  {
    if (qword_14F9FD0 != -1)
      swift_once(&qword_14F9FD0, sub_D1B0A0);
    v15 = &qword_1582318;
  }
  v16 = *v15;
  v17 = (void *)objc_opt_self(UIFont);
  v18 = objc_msgSend(v17, "systemFontOfSize:weight:", CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale")), UIFontWeightSemibold);
  v19 = objc_msgSend(v18, "fontDescriptor");

  v20 = (void *)kCTFontIgnoreLegibilityWeightAttribute;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502390);
  inited = swift_initStackObject(v21, v57);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = v20;
  *(_BYTE *)(inited + 40) = 1;
  *(_QWORD *)(inited + 64) = &type metadata for Bool;
  *(_QWORD *)(inited + 72) = kCTFontOpticalSizeAttribute;
  *(_QWORD *)(inited + 104) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 80) = v16;
  v23 = v20;
  v24 = (id)kCTFontOpticalSizeAttribute;
  v53 = v23;
  v52 = v24;
  v25 = v19;
  sub_C26F4C(inited);
  _s3__C13AttributeNameVMa_0(0);
  sub_D1C8B4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v25, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v51 = v27;
  v28 = objc_msgSend(v17, "fontWithDescriptor:size:", v27, 0.0);
  v55 = a6;
  if (v14 >= 31 && qword_14F9FD8 != -1)
    swift_once(&qword_14F9FD8, sub_D1B0B0);
  v29 = CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale"));
  v30 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v30, "setMinimumLineHeight:", v29);
  objc_msgSend(v30, "setMaximumLineHeight:", v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502398);
  v32 = swift_initStackObject(v31, v56);
  *(_OWORD *)(v32 + 16) = xmmword_1060470;
  *(_QWORD *)(v32 + 32) = NSFontAttributeName;
  v33 = sub_4E684(0, &qword_15023A0, UIFont_ptr);
  *(_QWORD *)(v32 + 40) = v28;
  *(_QWORD *)(v32 + 64) = v33;
  *(_QWORD *)(v32 + 72) = NSForegroundColorAttributeName;
  v34 = sub_4E684(0, &qword_1502388, UIColor_ptr);
  *(_QWORD *)(v32 + 80) = a8;
  *(_QWORD *)(v32 + 104) = v34;
  *(_QWORD *)(v32 + 112) = NSKernAttributeName;
  *(double *)(v32 + 120) = -0.25 / v13;
  *(_QWORD *)(v32 + 144) = &type metadata for CGFloat;
  *(_QWORD *)(v32 + 152) = NSParagraphStyleAttributeName;
  *(_QWORD *)(v32 + 184) = sub_4E684(0, &qword_15023A8, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(v32 + 160) = v30;
  v35 = NSFontAttributeName;
  v36 = v28;
  v37 = NSForegroundColorAttributeName;
  v38 = a8;
  v39 = NSKernAttributeName;
  v40 = NSParagraphStyleAttributeName;
  v41 = v30;
  v42 = sub_C26F68(v32);
  v43 = (objc_class *)type metadata accessor for LanguageAwareString(0);
  v44 = swift_bridgeObjectRetain();
  LOBYTE(v30) = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter(v44);
  v45 = objc_allocWithZone(v43);
  v46 = (void *)LanguageAwareString.init(_:attributes:baseParagraphStyle:keepStatisticsOnLanguageComponents:)(v55, a7, v42, 0, v30 & 1);
  v47 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

  if (qword_14F9FE0 != -1)
    swift_once(&qword_14F9FE0, sub_D1B0C0);
  v48.n128_f64[0] = CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale"));
  v49 = UIEdgeInsets.init(edges:inset:)(15, v48);
  objc_msgSend(v47, "drawWithRect:options:context:", 1, 0, UIEdgeInsetsInsetRect(0.0, 0.0, a3, a4, v49, v50));

}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  if (*a1 == *a2)
  {
    v4 = (void *)*((_QWORD *)a1 + 3);
    v5 = (void *)*((_QWORD *)a1 + 4);
    v6 = (void *)*((_QWORD *)a1 + 5);
    v7 = *((id *)a1 + 2);
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v40 = v12;
    v41 = v11;
    v36 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v43 = v13;
    v35 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v38 = v14;
    v33 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v37 = v15;

    v16 = (void *)*((_QWORD *)a2 + 3);
    v17 = (void *)*((_QWORD *)a2 + 4);
    v18 = (void *)*((_QWORD *)a2 + 5);
    v19 = *((id *)a2 + 2);
    v20 = v16;
    v21 = v17;
    v22 = v18;
    v23 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v25 = v24;
    v26 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v28 = v27;
    v34 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v39 = v29;
    v32 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v44 = v30;

    if ((v41 == v23 && v40 == v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v41, v40, v23, v25, 0) & 1) != 0)
      && (v36 == v26 && v43 == v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v36, v43, v26, v28, 0) & 1) != 0)
      && (v35 == v34 && v38 == v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v38, v34, v39, 0) & 1) != 0))
    {
      if (v33 == v32 && v37 == v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n(v37, 2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_16:
        sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
        return static NSObject.== infix(_:_:)(*((_QWORD *)a1 + 6), *((_QWORD *)a2 + 6)) & 1;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v37, v32, v44, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unsigned __int8 v50[8];
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unsigned __int8 v57[8];
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;

  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v4 = a1[1];
  v5 = (void *)a1[2];
  v7 = (void *)a1[3];
  v6 = (void *)a1[4];
  v9 = (void *)a1[5];
  v8 = (void *)a1[6];
  v10 = (void *)a1[7];
  v11 = a2[1];
  v12 = (void *)a2[2];
  v14 = (void *)a2[3];
  v13 = (void *)a2[4];
  v16 = (void *)a2[5];
  v15 = (void *)a2[6];
  v17 = (void *)a2[7];
  if (v5)
  {
    if (v12)
    {
      v50[0] = a1[1];
      v51 = v5;
      v52 = v7;
      v53 = v6;
      v54 = v9;
      v55 = v8;
      v56 = v10;
      v18 = v11;
      v57[0] = v11;
      v58 = v12;
      v59 = v14;
      v60 = v13;
      v61 = v16;
      v62 = v15;
      v63 = v17;
      v19 = v4;
      v42 = v4;
      v44 = v10;
      v40 = v7;
      v41 = v9;
      v20 = v7;
      v21 = v6;
      v46 = v6;
      v48 = v8;
      v22 = v13;
      v23 = v9;
      v24 = v16;
      v25 = v15;
      v26 = v17;
      sub_1CB694(v19, v5, v20, v21, v23, v8, v10);
      sub_1CB694(v18, v12, v14, v22, v24, v25, v26);
      v39 = _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0(v50, v57);
      sub_1CBAB4(v18, v12, v14, v22, v24, v25, v26);
      sub_1CBAB4(v42, v5, v40, v46, v41, v48, v44);
      if ((v39 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
LABEL_7:
    v28 = a1[1];
    v43 = v28;
    v45 = (void *)a1[7];
    v29 = (void *)a1[4];
    v47 = v29;
    v49 = (void *)a1[6];
    v30 = (void *)a2[4];
    v31 = (void *)a2[5];
    v32 = v15;
    v33 = v11;
    v34 = v17;
    sub_1CB694(v28, v5, v7, v29, v9, v8, v10);
    sub_1CB694(v33, v12, v14, v30, v31, v32, v34);
    sub_1CBAB4(v43, v5, v7, v47, v9, v49, v45);
    sub_1CBAB4(v33, v12, v14, v30, v31, v32, v34);
    return 0;
  }
  if (v12)
    goto LABEL_7;
LABEL_8:
  v35 = a1[8];
  v36 = a1[9];
  v37 = a2[8];
  v38 = a2[9];
  if (v35 == v37 && v36 == v38)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v37, v38, 0);
}

void _s9MusicCore14PlaylistCoversO18playlistCoverImage4size010backgroundG09textColor5title14graphicsFormatSo7UIImageCSo6CGSizeV_AKSo7UIColorCSSSgSo010UIGraphicsg8RendererN0CtFZ_0(void *a1, char **a2, uint64_t a3, uint64_t a4, id a5, CGFloat a6, CGFloat a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  unsigned int v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  char **v36;
  id v37;
  __n128 v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  __n128 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void **aBlock;
  uint64_t v50;
  void (*v51)(uint64_t, void *);
  void *v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  CGSize v55;
  CGSize v56;

  v48 = a1;
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  isEscapingClosureAtFileLocation = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (void **)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v22 = (void (*)(uint64_t, void *))((char *)&v46 - v21);
  if (a4)
  {
    v47 = v16;
    swift_bridgeObjectRetain();
    v23 = String.trim()();
    swift_bridgeObjectRelease();
    v24 = ((unint64_t)v23._object >> 56) & 0xF;
    v25 = a3;
    if (((uint64_t)v23._object & 0x2000000000000000) == 0)
      v24 = v23._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if (v24)
      goto LABEL_8;
    swift_bridgeObjectRelease();
    v16 = v47;
  }
  String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xEE00656C74695420);
  (*(void (**)(void **, void (*)(uint64_t, void *), uint64_t))(isEscapingClosureAtFileLocation + 16))(v19, v22, v16);
  if (qword_14F9C80 != -1)
    goto LABEL_21;
  while (1)
  {
    v26 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v25 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v26, v15, 0, 0, 256);
    a4 = v27;
    (*(void (**)(_QWORD, uint64_t))(isEscapingClosureAtFileLocation + 8))(v22, v16);
LABEL_8:
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v28, "_containsEmoji");

    v30 = a6;
    v31 = a7;
    if (v29)
    {
      if (qword_14F9FC0 != -1)
        swift_once(&qword_14F9FC0, sub_D1B074);
      if (*(double *)&xmmword_1582300 < a6)
        v30 = a6;
      else
        v30 = *(double *)&xmmword_1582300;
      v31 = v30;
    }
    v15 = (char *)objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, v30, v31);
    v16 = swift_allocObject(&unk_13BA4F8, 72, 7);
    *(double *)(v16 + 16) = v30;
    *(double *)(v16 + 24) = v31;
    v32 = v48;
    *(_QWORD *)(v16 + 32) = v48;
    *(_QWORD *)(v16 + 40) = a5;
    *(_QWORD *)(v16 + 48) = v25;
    *(_QWORD *)(v16 + 56) = a4;
    *(_QWORD *)(v16 + 64) = a2;
    v33 = swift_allocObject(&unk_13BA520, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_D1C828;
    *(_QWORD *)(v33 + 24) = v16;
    v53 = sub_103BD8;
    v54 = v33;
    v19 = _NSConcreteStackBlock;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v22 = sub_23E9F0;
    v51 = sub_23E9F0;
    v52 = &block_descriptor_309;
    v34 = _Block_copy(&aBlock);
    v35 = v32;
    a5 = a5;
    v36 = a2;
    swift_retain();
    a2 = &selRef_libraryNavigationHandlerWithSourceViewController_defaultSelectionHandler_;
    v37 = objc_msgSend(v15, "imageWithActions:", v34, swift_release().n128_f64[0]);
    _Block_release(v34);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 122, 121, 53, 1, v38);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_21:
    swift_once(&qword_14F9C80, sub_B9BF10);
  }
  v55.width = v30;
  v55.height = v31;
  v56.width = a6;
  v56.height = a7;
  if (CGSizeEqualToSize(v55, v56))
  {
    swift_release();

  }
  else
  {
    v39 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
    v40 = swift_allocObject(&unk_13BA570, 40, 7);
    *(_QWORD *)(v40 + 16) = v37;
    *(CGFloat *)(v40 + 24) = a6;
    *(CGFloat *)(v40 + 32) = a7;
    v41 = swift_allocObject(&unk_13BA598, 32, 7);
    *(_QWORD *)(v41 + 16) = sub_D1C888;
    *(_QWORD *)(v41 + 24) = v40;
    v53 = (uint64_t (*)(uint64_t))sub_1EB6A8;
    v54 = v41;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_23E9F0;
    v52 = &block_descriptor_13_12;
    v42 = _Block_copy(&aBlock);
    v43 = v37;
    swift_retain();
    objc_msgSend(v39, "imageWithActions:", v42, swift_release().n128_f64[0]);

    _Block_release(v42);
    v45 = swift_isEscapingClosureAtFileLocation(v41, "", 122, 156, 37, 1, v44);
    swift_release();
    swift_release();
    swift_release();
    if ((v45 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_D1C29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_D1C2E8()
{
  unint64_t result;

  result = qword_1502380;
  if (!qword_1502380)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Cover.Representation, &type metadata for PlaylistCovers.Cover.Representation);
    atomic_store(result, (unint64_t *)&qword_1502380);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers()
{
  return &type metadata for PlaylistCovers;
}

uint64_t assignWithCopy for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    if (v10)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v11 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v11;
      v12 = v11;

      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v13;
      v15 = v13;

      v16 = *(void **)(a2 + 32);
      v17 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v16;
      v18 = v16;

      v19 = *(void **)(a2 + 40);
      v20 = *(void **)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v19;
      v21 = v19;

      v22 = *(void **)(a2 + 48);
      v23 = *(void **)(a1 + 48);
      *(_QWORD *)(a1 + 48) = v22;
      v24 = v22;

      v25 = *(void **)(a2 + 56);
      v26 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v25;
      v27 = v25;

    }
    else
    {
      sub_D1C4D8((id *)(a1 + 8));
      v41 = *(_OWORD *)(a2 + 24);
      v40 = *(_OWORD *)(a2 + 40);
      v42 = *v8;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v41;
      *(_OWORD *)(a1 + 40) = v40;
      *v7 = v42;
    }
  }
  else if (v10)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v28 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v28;
    v29 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v29;
    v30 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v30;
    v31 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v31;
    v32 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v32;
    v33 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v33;
    v34 = v28;
    v35 = v29;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
  }
  else
  {
    v43 = *v8;
    v44 = *(_OWORD *)(a2 + 24);
    v45 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v44;
    *(_OWORD *)(a1 + 40) = v45;
    *v7 = v43;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_D1C4D8(id *a1)
{
  destroy for PlaylistCovers.Cover.Representation(a1);
  return a1;
}

uint64_t assignWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  uint64_t v13;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 16);
  if (!v5)
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_D1C4D8((id *)(a1 + 8));
LABEL_5:
    v12 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v12;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_6:
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Cover()
{
  return &type metadata for PlaylistCovers.Cover;
}

void destroy for PlaylistCovers.Cover.Representation(id *a1)
{

}

uint64_t initializeWithCopy for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a2 + 24);
  v6 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 40);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 48);
  v20 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v19;
  v21 = v19;

  return a1;
}

uint64_t assignWithTake for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Cover.Representation()
{
  return &type metadata for PlaylistCovers.Cover.Representation;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Specs()
{
  return &type metadata for PlaylistCovers.Specs;
}

uint64_t sub_D1C7EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

void sub_D1C828(int a1)
{
  uint64_t v1;

  sub_D1B22C(a1, *(id *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_D1C83C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_305(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_305(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_D1C864()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_D1C888()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "drawInRect:", 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_D1C8A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_D1C8B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FAE88;
  if (!qword_14FAE88)
  {
    _s3__C13AttributeNameVMa_0(255);
    result = swift_getWitnessTable(&unk_109B6FC, v1);
    atomic_store(result, (unint64_t *)&qword_14FAE88);
  }
  return result;
}

void PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  __asm { BR              X10 }
}

uint64_t sub_D1C930(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  id v9;

  sub_D1CC88(a1, a2, a3, a4, a5, a6, a7);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  return v8;
}

uint64_t UIViewPropertyAnimator.UpdateReason.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

void PlaylistCovers.Expression.accessibilityLabel.getter(char a1)
{
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  __chkstk_darwin();
  __asm { BR              X10 }
}

uint64_t sub_D1CAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0x4720656C706D6953, 0xEF746E6569646172);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v5 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

id PlaylistCovers.Expression.textColor.getter(char a1)
{
  return objc_msgSend((id)objc_opt_self(UIColor), *off_13BAC90[a1]);
}

void sub_D1CC88(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  _QWORD v22[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BA700, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_13BA728, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D226AC;
  *(_QWORD *)(v15 + 24) = v14;
  v22[4] = sub_129E54;
  v22[5] = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_23E9F0;
  v22[3] = &block_descriptor_310;
  v16 = _Block_copy(v22);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  swift_retain();
  objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 96, 36, 1, v21);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_D1CE30(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BA778, 72, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  *(_QWORD *)(v14 + 64) = v13;
  v15 = swift_allocObject(&unk_13BA7A0, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D22724;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_12BACC;
  v23[5] = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_23E9F0;
  v23[3] = &block_descriptor_27_10;
  v16 = _Block_copy(v23);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = v13;
  swift_retain();
  objc_msgSend(v21, "imageWithActions:", v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 179, 36, 1, v22);
  swift_release();
  swift_release();
  if ((v21 & 1) != 0)
    __break(1u);
}

void sub_D1CFE4(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  _QWORD v22[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BA868, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_13BA890, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D22780;
  *(_QWORD *)(v15 + 24) = v14;
  v22[4] = sub_12BACC;
  v22[5] = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_23E9F0;
  v22[3] = &block_descriptor_47_4;
  v16 = _Block_copy(v22);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  swift_retain();
  objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 287, 36, 1, v21);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_D1D18C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  _QWORD v22[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BA8E0, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_13BA908, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D227A4;
  *(_QWORD *)(v15 + 24) = v14;
  v22[4] = sub_12BACC;
  v22[5] = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_23E9F0;
  v22[3] = &block_descriptor_57_5;
  v16 = _Block_copy(v22);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  swift_retain();
  objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 341, 36, 1, v21);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_D1D334(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  _QWORD v22[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BA958, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_13BA980, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D227C8;
  *(_QWORD *)(v15 + 24) = v14;
  v22[4] = sub_12BACC;
  v22[5] = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_23E9F0;
  v22[3] = &block_descriptor_67_6;
  v16 = _Block_copy(v22);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  swift_retain();
  objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 398, 36, 1, v21);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_D1D4DC(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  _QWORD v22[6];

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BA9D0, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_13BA9F8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D227EC;
  *(_QWORD *)(v15 + 24) = v14;
  v22[4] = sub_12BACC;
  v22[5] = v15;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_23E9F0;
  v22[3] = &block_descriptor_77_3;
  v16 = _Block_copy(v22);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  swift_retain();
  objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 432, 36, 1, v21);
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_D1D684(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGImage *v27;
  CGImage *v28;
  CGImageRef v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  __n128 v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void **aBlock;
  uint64_t v51;
  void (*v52)(uint64_t, void *);
  void *v53;
  uint64_t (*v54)();
  uint64_t v55;
  id v56;
  CGRect v57;

  v49 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6 * 1.1, a7 * 1.1);
  v15 = swift_allocObject(&unk_13BAB38, 64, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  *(double *)(v15 + 48) = a6 * 1.1;
  *(double *)(v15 + 56) = a7 * 1.1;
  v16 = swift_allocObject(&unk_13BAB60, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_D228F4;
  *(_QWORD *)(v16 + 24) = v15;
  v54 = sub_12BACC;
  v55 = v16;
  aBlock = _NSConcreteStackBlock;
  v51 = 1107296256;
  v52 = sub_23E9F0;
  v53 = &block_descriptor_107_0;
  v17 = _Block_copy(&aBlock);
  v47 = a1;
  v18 = a2;
  v46 = a3;
  v19 = a4;
  swift_retain();
  v48 = v14;
  v20 = objc_msgSend(v14, "imageWithActions:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v16, "", 127, 546, 77, 1, v21);
  *(_QWORD *)&v22 = swift_release().n128_u64[0];
  if ((a1 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v20, "scale", v22);
  v24 = v23;
  objc_msgSend(v20, "scale");
  v26 = v25;
  v27 = (CGImage *)objc_msgSend(v20, "CGImage");
  if (!v27)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v28 = v27;
  v57.size.height = v26 * a7;
  v57.origin.y = v26 * a7 * 0.05;
  v57.size.width = v24 * a6;
  v57.origin.x = v24 * a6 * 0.05;
  v29 = CGImageCreateWithImageInRect(v27, v57);

  if (v29)
  {
    v30 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v29);

    v56 = v30;
    v31 = swift_allocObject(&unk_13BABB0, 32, 7);
    *(double *)(v31 + 16) = a6;
    *(double *)(v31 + 24) = a7;
    v32 = swift_allocObject(&unk_13BABD8, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_D22934;
    *(_QWORD *)(v32 + 24) = v31;
    v54 = sub_12BACC;
    v55 = v32;
    aBlock = _NSConcreteStackBlock;
    v51 = 1107296256;
    v52 = sub_23E9F0;
    v53 = &block_descriptor_117_1;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    v34 = objc_msgSend(v49, "imageWithActions:", v33, swift_release().n128_f64[0]);
    _Block_release(v33);
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v32, "", 127, 584, 35, 1, v35);
    swift_release();
    if ((v33 & 1) == 0)
    {
      v36 = swift_allocObject(&unk_13BAC28, 96, 7);
      *(_QWORD *)(v36 + 16) = v47;
      *(_QWORD *)(v36 + 24) = v18;
      *(_QWORD *)(v36 + 32) = v46;
      *(_QWORD *)(v36 + 40) = v19;
      *(_QWORD *)(v36 + 48) = 0;
      *(_QWORD *)(v36 + 56) = 0;
      *(double *)(v36 + 64) = a6;
      *(double *)(v36 + 72) = a7;
      *(_QWORD *)(v36 + 80) = v34;
      *(_QWORD *)(v36 + 88) = &v56;
      v37 = swift_allocObject(&unk_13BAC50, 32, 7);
      *(_QWORD *)(v37 + 16) = sub_D22990;
      *(_QWORD *)(v37 + 24) = v36;
      v54 = sub_12BACC;
      v55 = v37;
      aBlock = _NSConcreteStackBlock;
      v51 = 1107296256;
      v52 = sub_23E9F0;
      v53 = &block_descriptor_127_1;
      v38 = _Block_copy(&aBlock);
      v39 = v47;
      v40 = v18;
      v41 = v46;
      v42 = v19;
      v43 = v34;
      swift_retain();
      objc_msgSend(v49, "imageWithActions:", v38, swift_release().n128_f64[0]);

      _Block_release(v38);
      LOBYTE(v38) = swift_isEscapingClosureAtFileLocation(v37, "", 127, 601, 36, 1, v44);
      swift_release();
      if ((v38 & 1) == 0)
      {
        v45 = v56;
        swift_release();
        swift_release();
        swift_release();

        return;
      }
      goto LABEL_9;
    }
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

_UNKNOWN **static PlaylistCovers.Expression.allCases.getter()
{
  return &off_13A7350;
}

Swift::Int sub_D1DB54()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_D1DB98()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_D1DBC4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_D1DC04@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_D1DC2C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void sub_D1DC3C(_QWORD *a1@<X8>)
{
  *a1 = &off_13A7350;
}

uint64_t static PlaylistCovers.coverRepresentations(size:expressions:colors:graphicsFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 80) = a6;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 64) = a4;
  *(_QWORD *)(v8 + 40) = a1;
  *(_QWORD *)(v8 + 48) = a2;
  *(double *)(v8 + 24) = a7;
  *(double *)(v8 + 32) = a8;
  return swift_task_switch(sub_D1DC70, 0, 0);
}

uint64_t sub_D1DC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15023B8);
  v6 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_OWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v3;
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v8;
  *(_QWORD *)(v6 + 72) = v1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15023D0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 96) = v10;
  *v10 = v0;
  v10[1] = sub_D1DD54;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v5, v9, 0, 0, &unk_15023C8, v6, v5);
}

uint64_t sub_D1DD54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_D1DDB0, 0, 0);
}

uint64_t sub_D1DDB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_D1DDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)(v10 + 136) = a7;
  *(_QWORD *)(v10 + 144) = a8;
  *(_QWORD *)(v10 + 120) = a5;
  *(_QWORD *)(v10 + 128) = a6;
  *(_QWORD *)(v10 + 112) = a4;
  *(double *)(v10 + 96) = a9;
  *(double *)(v10 + 104) = a10;
  *(_QWORD *)(v10 + 80) = a2;
  *(_QWORD *)(v10 + 88) = a3;
  *(_QWORD *)(v10 + 72) = a1;
  v11 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v10 + 152) = swift_task_alloc(v11);
  *(_QWORD *)(v10 + 160) = swift_task_alloc(v11);
  return swift_task_switch(sub_D1DE38, 0, 0);
}

uint64_t sub_D1DE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  _QWORD *v48;
  uint64_t v50;
  void (*v51)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (char *)(v1 + 32);
    v4 = type metadata accessor for TaskPriority(0);
    v50 = *(_QWORD *)(v4 - 8);
    v51 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v50 + 56);
    v52 = v4;
    swift_bridgeObjectRetain();
    do
    {
      v54 = v2;
      v7 = *(void **)(v0 + 136);
      v6 = *(void **)(v0 + 144);
      v8 = *(void **)(v0 + 120);
      v9 = *(void **)(v0 + 128);
      v10 = *(void **)(v0 + 112);
      v12 = *(_QWORD *)(v0 + 96);
      v11 = *(_QWORD *)(v0 + 104);
      v13 = *(uint64_t **)(v0 + 80);
      v14 = v3 + 1;
      v15 = *v3;
      v53 = v14;
      v51(*(_QWORD *)(v0 + 160), 1, 1, v52);
      v16 = swift_allocObject(&unk_13BA6B0, 96, 7);
      *(_QWORD *)(v16 + 16) = 0;
      *(_QWORD *)(v16 + 24) = 0;
      *(_BYTE *)(v16 + 32) = v15;
      *(_QWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 48) = v11;
      *(_QWORD *)(v16 + 56) = v10;
      *(_QWORD *)(v16 + 64) = v8;
      *(_QWORD *)(v16 + 72) = v9;
      *(_QWORD *)(v16 + 80) = v7;
      *(_QWORD *)(v16 + 88) = v6;
      v18 = *v13;
      v19 = v10;
      v20 = v8;
      v21 = v9;
      v22 = v7;
      v23 = v6;
      if ((swift_taskGroup_addPending(v18, 0) & 1) != 0)
      {
        v17 = (uint64_t *)(v16 + 16);
        v24 = *(_QWORD *)(v0 + 152);
        sub_BBF354(*(_QWORD *)(v0 + 160), v24);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v24, 1, v52);
        v26 = *(_QWORD *)(v0 + 152);
        if ((_DWORD)v25 == 1)
        {
          sub_BC14A4(*(_QWORD *)(v0 + 152));
          v27 = 0;
        }
        else
        {
          v28 = TaskPriority.rawValue.getter(v25);
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v26, v52);
          v27 = v28;
        }
        v3 = v53;
        v5 = v54;
        v29 = *v17;
        if (*v17)
        {
          v30 = *(_QWORD *)(v16 + 24);
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v29);
          v32 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v30);
          v34 = v33;
          swift_unknownObjectRelease(v29);
        }
        else
        {
          v32 = 0;
          v34 = 0;
        }
        v35 = **(_QWORD **)(v0 + 80);
        v36 = swift_allocObject(&unk_13BA6D8, 32, 7);
        *(_QWORD *)(v36 + 16) = &unk_15023F8;
        *(_QWORD *)(v36 + 24) = v16;
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_15023B8);
        v38 = v34 | v32;
        if (v34 | v32)
        {
          v38 = v0 + 16;
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v32;
          *(_QWORD *)(v0 + 40) = v34;
        }
        *(_QWORD *)(v0 + 48) = 1;
        *(_QWORD *)(v0 + 56) = v38;
        *(_QWORD *)(v0 + 64) = v35;
        swift_task_create(v27 | 0x1100, v0 + 48, v37, &unk_1502410, v36);
        swift_release();
      }
      else
      {
        swift_release();
        v3 = v53;
        v5 = v54;
      }
      sub_BC14A4(*(_QWORD *)(v0 + 160));
      v2 = v5 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v40 = *(void **)(v0 + 128);
  v39 = *(void **)(v0 + 136);
  v41 = *(void **)(v0 + 120);
  v42 = **(_QWORD **)(v0 + 80);
  v43 = unk_1502404;
  v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1502400
                                                                                     + dword_1502400);
  v44 = *(id *)(v0 + 112);
  v45 = v41;
  v46 = v40;
  v47 = v39;
  v48 = (_QWORD *)swift_task_alloc(v43);
  *(_QWORD *)(v0 + 168) = v48;
  *v48 = v0;
  v48[1] = sub_D1E128;
  return v55((uint64_t)_swiftEmptyDictionarySingleton, v42, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_D1E128(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 168);
  v6 = *(void **)(*v2 + 128);
  v5 = *(void **)(*v2 + 136);
  v8 = *(void **)(*v2 + 112);
  v7 = *(void **)(*v2 + 120);
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc(v4);

  return swift_task_switch(sub_D1E1AC, 0, 0);
}

uint64_t sub_D1E1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  char *v5;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(char ***)(v0 + 72);
  swift_bridgeObjectRetain();
  v5 = sub_D21988((uint64_t)&off_13A7350, v1);
  swift_bridgeObjectRelease_n(v1, 2);
  *v4 = v5;
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D1E22C(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v10 + 64) = a10;
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v10 + 48) = a8;
  *(_QWORD *)(v10 + 56) = a9;
  *(_QWORD *)(v10 + 40) = a7;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  *(_BYTE *)(v10 + 80) = a6;
  *(_QWORD *)(v10 + 16) = a1;
  return swift_task_switch(sub_D1E260, 0, 0);
}

uint64_t sub_D1E260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_BYTE *)(v0 + 80);
  *(_BYTE *)v6 = v7;
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(v5, v3, v4, v1, v2, v7);
  *(_QWORD *)(v6 + 8) = v8;
  *(_QWORD *)(v6 + 16) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

CGColorSpaceRef sub_D1E2AC()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateDeviceRGB();
  qword_1582370 = (uint64_t)result;
  return result;
}

void sub_D1E2C8(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGContext *v13;
  CGColor *v14;
  CGColorSpace *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const __CFArray *isa;
  CGGradient *v20;
  CGContext *v21;
  CGColorSpace *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  const __CFArray *v27;
  CGGradient *v28;
  CGContext *v29;
  CGColorSpace *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  const __CFArray *v37;
  CGGradient *v38;
  CGContext *v39;
  CGColorSpace *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  const __CFArray *v47;
  CGGradient *v48;
  CGContext *v49;
  CGColorSpace *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  const __CFArray *v55;
  CGGradient *v56;
  CGContext *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  CGPoint v67;
  CGPoint v68;
  CGPoint v69;
  CGPoint v70;
  CGPoint v71;
  CGPoint v72;
  CGPoint v73;
  CGPoint v74;
  CGPoint v75;
  CGPoint v76;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  v14 = (CGColor *)objc_msgSend(a2, "CGColor");
  CGContextSetFillColorWithColor(v13, v14);

  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  if (qword_14F9FF8 != -1)
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  v15 = (CGColorSpace *)qword_1582370;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v17 + 32) = objc_msgSend(a2, "CGColor");
  v18 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v17 + 40) = v18;
  v66 = v17;
  specialized Array._endMutation()(v18);
  _s3__C7CGColorCMa_0(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v65 = xmmword_10683C0;
  v20 = CGGradientCreateWithColors(v15, isa, (const CGFloat *)&v65);

  if (v20)
  {
    v21 = (CGContext *)objc_msgSend(a1, "CGContext");
    v67.x = 0.0;
    v67.y = 0.0;
    v72.x = a4;
    v72.y = a5;
    CGContextDrawLinearGradient(v21, v20, v67, v72, 0);

  }
  v22 = (CGColorSpace *)qword_1582370;
  v23 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1060E10;
  *(_QWORD *)(v23 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v23 + 40) = objc_msgSend(a7, "CGColor");
  v24 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(v23 + 48) = v25;
  v66 = v23;
  specialized Array._endMutation()(v26);
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v63 = xmmword_1075A10;
  v64 = 0x3FF0000000000000;
  v28 = CGGradientCreateWithColors(v22, v27, (const CGFloat *)&v63);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v68.x = a4;
    v68.y = a5;
    v73.x = a4;
    v73.y = a5;
    CGContextDrawRadialGradient(v29, v28, v68, 0.0, v73, a4, 0);

  }
  v30 = (CGColorSpace *)qword_1582370;
  v31 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1060E10;
  *(_QWORD *)(v31 + 32) = objc_msgSend(a3, "CGColor");
  v32 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v33 = objc_msgSend(v32, "CGColor");

  *(_QWORD *)(v31 + 40) = v33;
  v34 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v35 = objc_msgSend(v34, "CGColor");

  *(_QWORD *)(v31 + 48) = v35;
  v66 = v31;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v61 = xmmword_1099360;
  v62 = 0x3FF0000000000000;
  v38 = CGGradientCreateWithColors(v30, v37, (const CGFloat *)&v61);

  if (v38)
  {
    v39 = (CGContext *)objc_msgSend(a1, "CGContext");
    v69.x = 0.0;
    v74.x = 0.0;
    v69.y = a5;
    v74.y = a5;
    CGContextDrawRadialGradient(v39, v38, v69, 0.0, v74, a4, 0);

  }
  v40 = (CGColorSpace *)qword_1582370;
  v41 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v41 + 16) = xmmword_1060E10;
  *(_QWORD *)(v41 + 32) = objc_msgSend(a3, "CGColor");
  v42 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v43 = objc_msgSend(v42, "CGColor");

  *(_QWORD *)(v41 + 40) = v43;
  v44 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v45 = objc_msgSend(v44, "CGColor");

  *(_QWORD *)(v41 + 48) = v45;
  v66 = v41;
  specialized Array._endMutation()(v46);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v59 = xmmword_1099360;
  v60 = 0x3FF0000000000000;
  v48 = CGGradientCreateWithColors(v40, v47, (const CGFloat *)&v59);

  if (v48)
  {
    v49 = (CGContext *)objc_msgSend(a1, "CGContext");
    v70.y = 0.0;
    v75.y = 0.0;
    v70.x = a4;
    v75.x = a4;
    CGContextDrawRadialGradient(v49, v48, v70, 0.0, v75, a4, 0);

  }
  v50 = (CGColorSpace *)qword_1582370;
  v51 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v51 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v51 + 32) = objc_msgSend(a2, "CGColor");
  v52 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v53 = objc_msgSend(v52, "CGColor");

  *(_QWORD *)(v51 + 40) = v53;
  v66 = v51;
  specialized Array._endMutation()(v54);
  v55 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v58 = xmmword_10683C0;
  v56 = CGGradientCreateWithColors(v50, v55, (const CGFloat *)&v58);

  if (v56)
  {
    v57 = (CGContext *)objc_msgSend(a1, "CGContext");
    v71.x = 0.0;
    v71.y = 0.0;
    v76.x = 0.0;
    v76.y = 0.0;
    CGContextDrawRadialGradient(v57, v56, v71, 0.0, v76, a4, 0);

  }
}

void sub_D1E9C4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, CGFloat a7, CGFloat a8)
{
  uint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  CGColorSpace *v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  const __CFArray *isa;
  CGGradient *v29;
  CGContext *v30;
  CGContext *v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat MidY;
  CGFloat ty;
  CGFloat tx;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat MidX;
  CGFloat v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  double v48;
  const CGPath *Mutable;
  CGContext *v50;
  id v51;
  void (*v52)(_QWORD);
  uint64_t v53;
  char *v54;
  CGFloat v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  CGColorSpace *v75;
  id v76;
  id v77;
  const __CFArray *v78;
  CGGradient *v79;
  CGContext *v80;
  CGContext *v81;
  CGFloat v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  CGFloat v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  double v98;
  void *v99;
  void *v100;
  CGContext *v101;
  const CGPath *v102;
  CGContext *v103;
  id v104;
  uint64_t v105;
  char *v106;
  CGColorSpace *v107;
  CGFloat v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  const __CFArray *v113;
  CGGradient *v114;
  CGContext *v115;
  __int128 v116;
  __int128 v117;
  id v118;
  CGFloat v119[3];
  void (*v120)(char *, uint64_t);
  void (*v121)(char *, _QWORD, uint64_t);
  unsigned int v122;
  __int128 v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  uint64_t v128;
  id v129;
  __int128 v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  CGFloat v134[6];
  __int128 v135;
  CGAffineTransform v136;
  _OWORD v137[9];
  CGAffineTransform v138;
  _OWORD v139[2];
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGPoint v142;
  CGPoint v143;
  CGPoint v144;
  CGPoint v145;
  CGPoint v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;

  v127 = a6;
  v125 = a3;
  v133 = type metadata accessor for CGPathFillRule(0);
  v14 = *(_QWORD *)(v133 - 8);
  v15 = __chkstk_darwin(v133);
  v132 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = a2;
  v17 = objc_msgSend(a2, "CGColor", v15);
  v126 = a4;
  v18 = objc_msgSend(a4, "CGColor");
  v129 = a5;
  v19 = objc_msgSend(a5, "CGColor");
  if (qword_14F9FF8 != -1)
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  v20 = (CGColorSpace *)qword_1582370;
  v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v21 = COERCE_DOUBLE(swift_allocObject(v131, 64, 7));
  *(_OWORD *)(*(_QWORD *)&v21 + 16) = xmmword_1063440;
  *(_QWORD *)(*(_QWORD *)&v21 + 32) = v19;
  *(_QWORD *)(*(_QWORD *)&v21 + 40) = v19;
  *(_QWORD *)(*(_QWORD *)&v21 + 48) = v17;
  *(_QWORD *)(*(_QWORD *)&v21 + 56) = v17;
  t1.a = v21;
  specialized Array._endMutation()(*(_QWORD *)&v21);
  _s3__C7CGColorCMa_0(0);
  v23 = v22;
  v24 = v19;
  v25 = v17;
  v26 = v24;
  v27 = v25;
  v128 = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v139[0] = xmmword_1099370;
  v139[1] = xmmword_1099380;
  v29 = CGGradientCreateWithColors(v20, isa, (const CGFloat *)v139);

  if (v29)
  {
    v30 = (CGContext *)objc_msgSend(a1, "CGContext");
    v142.x = 0.0;
    v142.y = 0.0;
    v145.x = a7;
    v145.y = a8;
    CGContextDrawLinearGradient(v30, v29, v142, v145, 0);

  }
  v31 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v31);

  v32 = a7 * -0.235;
  v33 = a7 * 1.47;
  v147.origin.x = a7 * -0.235;
  v147.origin.y = a8 * 0.15;
  v147.size.width = a7 * 1.47;
  v147.size.height = a8 * 0.7;
  v34 = -CGRectGetMidX(v147);
  v148.origin.x = a7 * -0.235;
  v148.origin.y = a8 * 0.15;
  v148.size.width = a7 * 1.47;
  v148.size.height = a8 * 0.7;
  MidY = CGRectGetMidY(v148);
  CGAffineTransformMakeTranslation(&t1, v34, -MidY);
  *(_OWORD *)v134 = *(_OWORD *)&t1.a;
  v130 = *(_OWORD *)&t1.c;
  tx = t1.tx;
  ty = t1.ty;
  v119[0] = -0.523598776;
  CGAffineTransformMakeRotation(&t1, -0.523598776);
  v38 = *(_OWORD *)&t1.a;
  v39 = *(_OWORD *)&t1.c;
  v40 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = *(_OWORD *)v134;
  *(_OWORD *)&t1.c = v130;
  t1.tx = tx;
  t1.ty = ty;
  *(_OWORD *)&t2.a = v38;
  *(_OWORD *)&t2.c = v39;
  *(_OWORD *)&t2.tx = v40;
  CGAffineTransformConcat(&v138, &t1, &t2);
  v130 = *(_OWORD *)&v138.a;
  v123 = *(_OWORD *)&v138.c;
  v41 = v138.tx;
  v134[0] = a7;
  v42 = v138.ty;
  v149.origin.x = v32;
  v149.origin.y = a8 * 0.15;
  v149.size.width = v33;
  v149.size.height = a8 * 0.7;
  MidX = CGRectGetMidX(v149);
  v150.origin.x = v32;
  v150.origin.y = a8 * 0.15;
  v150.size.width = v33;
  v150.size.height = a8 * 0.7;
  v44 = CGRectGetMidY(v150);
  CGAffineTransformMakeTranslation(&t1, MidX, v44);
  v45 = *(_OWORD *)&t1.a;
  v46 = *(_OWORD *)&t1.c;
  v47 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v130;
  *(_OWORD *)&t1.c = v123;
  t1.tx = v41;
  t1.ty = v42;
  v48 = v134[0];
  *(_OWORD *)&t2.a = v45;
  *(_OWORD *)&t2.c = v46;
  *(_OWORD *)&t2.tx = v47;
  CGAffineTransformConcat(&v138, &t1, &t2);
  t1 = v138;
  Mutable = CGPathCreateMutable();
  v50 = (CGContext *)objc_msgSend(a1, "CGContext", CGMutablePathRef.addEllipse(in:transform:)(&t1, v32, a8 * 0.15, v33, a8 * 0.7).n128_f64[0]);
  *(_QWORD *)&v123 = Mutable;
  CGContextAddPath(v50, Mutable);

  v51 = objc_msgSend(a1, "CGContext");
  v52 = *(void (**)(_QWORD))(v14 + 104);
  v54 = v132;
  v53 = v133;
  v122 = enum case for CGPathFillRule.winding(_:);
  v121 = (void (*)(char *, _QWORD, uint64_t))v52;
  v52(v132);
  CGContextRef.clip(using:)(v54);

  v120 = *(void (**)(char *, uint64_t))(v14 + 8);
  v120(v54, v53);
  v55 = COERCE_DOUBLE(swift_allocObject(v131, 176, 7));
  *(_OWORD *)(*(_QWORD *)&v55 + 16) = xmmword_1099390;
  *(_QWORD *)(*(_QWORD *)&v55 + 32) = v18;
  *(_QWORD *)(*(_QWORD *)&v55 + 40) = v18;
  *(_QWORD *)(*(_QWORD *)&v55 + 48) = v26;
  *(_QWORD *)(*(_QWORD *)&v55 + 56) = v26;
  *(_QWORD *)(*(_QWORD *)&v55 + 64) = v27;
  *(_QWORD *)(*(_QWORD *)&v55 + 72) = v27;
  *(_QWORD *)(*(_QWORD *)&v55 + 80) = v26;
  *(_QWORD *)(*(_QWORD *)&v55 + 88) = v26;
  *(_QWORD *)(*(_QWORD *)&v55 + 96) = v18;
  *(_QWORD *)(*(_QWORD *)&v55 + 104) = v18;
  *(_QWORD *)(*(_QWORD *)&v55 + 112) = v26;
  v56 = v26;
  v57 = v18;
  v58 = v56;
  v59 = v57;
  v60 = v58;
  v61 = v27;
  v62 = v59;
  v63 = v60;
  *(_QWORD *)&v130 = v61;
  v64 = v62;
  v65 = v129;
  v66 = objc_msgSend(v129, "colorWithAlphaComponent:", 0.8);
  v67 = objc_msgSend(v66, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v55 + 120) = v67;
  v68 = objc_msgSend(v65, "colorWithAlphaComponent:", 0.5);
  v69 = objc_msgSend(v68, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v55 + 128) = v69;
  v70 = objc_msgSend(v65, "colorWithAlphaComponent:", 0.5);
  v71 = objc_msgSend(v70, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v55 + 136) = v71;
  v72 = objc_msgSend(v65, "colorWithAlphaComponent:", 0.8);
  v73 = objc_msgSend(v72, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v55 + 144) = v73;
  *(_QWORD *)(*(_QWORD *)&v55 + 152) = v63;
  *(_QWORD *)(*(_QWORD *)&v55 + 160) = v64;
  *(_QWORD *)(*(_QWORD *)&v55 + 168) = v64;
  t2.a = v55;
  specialized Array._endMutation()(v74);
  v75 = (CGColorSpace *)qword_1582370;
  v76 = v64;
  v77 = v63;
  v118 = v76;
  v78 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v137[0] = xmmword_10993A0;
  v137[1] = xmmword_10993B0;
  v137[2] = xmmword_10993C0;
  v137[3] = xmmword_10993D0;
  v137[4] = xmmword_10993E0;
  v137[5] = xmmword_10993F0;
  v137[6] = xmmword_1099400;
  v137[7] = xmmword_1099410;
  v137[8] = xmmword_1099420;
  v79 = CGGradientCreateWithColors(v75, v78, (const CGFloat *)v137);

  if (v79)
  {
    v80 = (CGContext *)objc_msgSend(a1, "CGContext");
    v143.x = v48 * 0.5;
    v143.y = a8 * 0.5;
    CGContextDrawConicGradient(v80, v79, v143, 0.0);

  }
  v81 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextRestoreGState(v81);

  v82 = v48 * 0.26375;
  v83 = v48 * 0.4725;
  v151.origin.x = v48 * 0.26375;
  v151.origin.y = a8 * 0.388888889;
  v151.size.width = v48 * 0.4725;
  v151.size.height = a8 * 0.2225;
  v84 = -CGRectGetMidX(v151);
  v152.origin.x = v48 * 0.26375;
  v152.origin.y = a8 * 0.388888889;
  v152.size.width = v48 * 0.4725;
  v152.size.height = a8 * 0.2225;
  v85 = CGRectGetMidY(v152);
  CGAffineTransformMakeTranslation(&t2, v84, -v85);
  v116 = *(_OWORD *)&t2.c;
  v117 = *(_OWORD *)&t2.a;
  v86 = t2.tx;
  v87 = t2.ty;
  CGAffineTransformMakeRotation(&t2, v119[0]);
  v88 = *(_OWORD *)&t2.a;
  v89 = *(_OWORD *)&t2.c;
  v90 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = v117;
  *(_OWORD *)&t2.c = v116;
  t2.tx = v86;
  t2.ty = v87;
  *(_OWORD *)&v138.a = v88;
  *(_OWORD *)&v138.c = v89;
  *(_OWORD *)&v138.tx = v90;
  CGAffineTransformConcat(&v136, &t2, &v138);
  *(_OWORD *)v119 = *(_OWORD *)&v136.a;
  v117 = *(_OWORD *)&v136.c;
  v91 = v136.tx;
  v92 = v136.ty;
  v153.origin.x = v82;
  v153.origin.y = a8 * 0.388888889;
  v153.size.width = v83;
  v153.size.height = a8 * 0.2225;
  v93 = CGRectGetMidX(v153);
  v154.origin.x = v82;
  v154.origin.y = a8 * 0.388888889;
  v154.size.width = v83;
  v154.size.height = a8 * 0.2225;
  v94 = CGRectGetMidY(v154);
  CGAffineTransformMakeTranslation(&t2, v93, v94);
  v95 = *(_OWORD *)&t2.a;
  v96 = *(_OWORD *)&t2.c;
  v97 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = *(_OWORD *)v119;
  *(_OWORD *)&t2.c = v117;
  t2.tx = v91;
  t2.ty = v92;
  v98 = v134[0];
  *(_OWORD *)&v138.a = v95;
  *(_OWORD *)&v138.c = v96;
  *(_OWORD *)&v138.tx = v97;
  CGAffineTransformConcat(&v136, &t2, &v138);
  t2 = v136;
  sub_D1F488(v127, v124, v125, v126, v65, &t2, v82, a8 * 0.388888889, v83, a8 * 0.2225);
  v100 = v99;
  objc_msgSend(v99, "drawInRect:", 0.0, 0.0, v98, a8);

  v101 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSetFillColorWithColor(v101, (CGColorRef)v130);

  v102 = CGPathCreateMutable();
  v103 = (CGContext *)objc_msgSend(a1, "CGContext", CGMutablePathRef.addEllipse(in:transform:)(&t2, v82, a8 * 0.388888889, v83, a8 * 0.2225).n128_f64[0]);
  CGContextAddPath(v103, v102);

  v104 = objc_msgSend(a1, "CGContext");
  v106 = v132;
  v105 = v133;
  v121(v132, v122, v133);
  CGContextRef.fillPath(using:)(v106);

  v120(v106, v105);
  v107 = (CGColorSpace *)qword_1582370;
  v108 = COERCE_DOUBLE(swift_allocObject(v131, 48, 7));
  *(_OWORD *)(*(_QWORD *)&v108 + 16) = xmmword_105F8A0;
  *(_QWORD *)(*(_QWORD *)&v108 + 32) = v77;
  v109 = v77;
  v110 = objc_msgSend(v65, "colorWithAlphaComponent:", 0.0);
  v111 = objc_msgSend(v110, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v108 + 40) = v111;
  v138.a = v108;
  specialized Array._endMutation()(v112);
  v113 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v135 = xmmword_10683C0;
  v114 = CGGradientCreateWithColors(v107, v113, (const CGFloat *)&v135);

  if (v114)
  {
    v115 = (CGContext *)objc_msgSend(a1, "CGContext");
    v144.y = 0.0;
    v146.y = 0.0;
    v144.x = v98 * 0.5;
    v146.x = v98 * 0.5;
    CGContextDrawRadialGradient(v115, v114, v144, 0.0, v146, v144.x, 0);

    v102 = v115;
  }
  else
  {
    v114 = (CGGradient *)v123;
  }

}

void sub_D1F488(void *a1, void *a2, void *a3, void *a4, void *a5, _OWORD *a6, double a7, double a8, double a9, double a10)
{
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  __n128 v29;
  double v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD v37[6];

  v20 = swift_allocObject(&unk_13BA7F0, 128, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  *(_QWORD *)(v20 + 32) = a4;
  *(_QWORD *)(v20 + 40) = a5;
  *(double *)(v20 + 48) = a7;
  *(double *)(v20 + 56) = a8;
  *(double *)(v20 + 64) = a9;
  *(double *)(v20 + 72) = a10;
  v21 = a6[1];
  *(_OWORD *)(v20 + 80) = *a6;
  *(_OWORD *)(v20 + 96) = v21;
  *(_OWORD *)(v20 + 112) = a6[2];
  v22 = swift_allocObject(&unk_13BA818, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_D22750;
  *(_QWORD *)(v22 + 24) = v20;
  v37[4] = sub_12BACC;
  v37[5] = v22;
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 1107296256;
  v37[2] = sub_23E9F0;
  v37[3] = &block_descriptor_37_10;
  v23 = _Block_copy(v37);
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = a5;
  swift_retain();
  v28 = objc_msgSend(a1, "imageWithActions:", v23, swift_release().n128_f64[0]);
  _Block_release(v23);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation(v22, "", 127, 237, 59, 1, v29);
  *(_QWORD *)&v30 = swift_release().n128_u64[0];
  if ((a5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v31 = objc_msgSend(v28, "CGImage", v30);
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(objc_allocWithZone((Class)CIImage), "initWithCGImage:", v31);
      v34 = objc_msgSend(v33, "imageByClampingToExtent");
      v35 = objc_msgSend(v34, "imageByApplyingGaussianBlurWithSigma:", 20.0);
      objc_msgSend(v33, "extent");
      v36 = objc_msgSend(v35, "imageByCroppingToRect:");
      objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCIImage:", v36);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_D1F714(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  CGContext *v21;
  id v22;
  CGColor *v23;
  const CGPath *Mutable;
  CGContext *v25;
  id v26;
  uint64_t v28;

  v17 = type metadata accessor for CGPathFillRule(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (CGContext *)objc_msgSend(a1, "CGContext");
  v22 = objc_msgSend(a9, "colorWithAlphaComponent:", 0.55);
  v23 = (CGColor *)objc_msgSend(v22, "CGColor");

  CGContextSetFillColorWithColor(v21, v23);
  Mutable = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(a10, a2, a3, a4, a5);
  v25 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextAddPath(v25, Mutable);

  v26 = objc_msgSend(a1, "CGContext");
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for CGPathFillRule.winding(_:), v17);
  CGContextRef.fillPath(using:)(v20);

  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

void sub_D1F8C0(void *a1, void *a2, void *a3, void *a4, double a5, CGFloat a6)
{
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  const __CFArray *isa;
  CGGradient *v17;
  CGContext *v18;
  CGContext *v19;
  double v20;
  CGColorSpace *v21;
  uint64_t v22;
  id v23;
  const __CFArray *v24;
  CGGradient *v25;
  CGContext *v26;
  CGContext *v27;
  CGColorSpace *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  const __CFArray *v33;
  CGGradient *v34;
  CGContext *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[3];
  _OWORD v41[3];
  uint64_t v42;
  CGPoint v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;

  if (qword_14F9FF8 != -1)
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  v12 = (CGColorSpace *)qword_1582370;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v14 = swift_allocObject(v13, 80, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1061D80;
  *(_QWORD *)(v14 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v14 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v14 + 48) = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 56) = objc_msgSend(a4, "CGColor");
  *(_QWORD *)(v14 + 64) = objc_msgSend(a3, "CGColor");
  v15 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 72) = v15;
  v42 = v14;
  specialized Array._endMutation()(v15);
  _s3__C7CGColorCMa_0(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v41[0] = xmmword_1099430;
  v41[1] = xmmword_1099440;
  v41[2] = xmmword_1099450;
  v17 = CGGradientCreateWithColors(v12, isa, (const CGFloat *)v41);

  if (v17)
  {
    v18 = (CGContext *)objc_msgSend(a1, "CGContext");
    v43.x = 0.0;
    v43.y = 0.0;
    v46.x = 0.0;
    v46.y = a6;
    CGContextDrawLinearGradient(v18, v17, v43, v46, 0);

  }
  v19 = (CGContext *)objc_msgSend(a1, "CGContext", 0x3FE999999999999ALL, 0x3FF0000000000000, 0x3FD3D70A3D70A3D7, 0x3FE051EB851EB852, 0, 0x3FC47AE147AE147BLL);
  CGContextSaveGState(v19);

  v20 = a5 * 0.5;
  objc_msgSend(a1, "clipToRect:", v20, 0.0, v20, a6);
  v21 = (CGColorSpace *)qword_1582370;
  v22 = swift_allocObject(v13, 80, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1061D80;
  *(_QWORD *)(v22 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v22 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v22 + 48) = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v22 + 56) = objc_msgSend(a4, "CGColor");
  *(_QWORD *)(v22 + 64) = objc_msgSend(a3, "CGColor");
  v23 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v22 + 72) = v23;
  v42 = v22;
  specialized Array._endMutation()(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v40[0] = v38;
  v40[1] = v37;
  v40[2] = v36;
  v25 = CGGradientCreateWithColors(v21, v24, (const CGFloat *)v40);

  if (v25)
  {
    v26 = (CGContext *)objc_msgSend(a1, "CGContext");
    v47.y = 0.0;
    v44.x = v20;
    v44.y = a6;
    v47.x = v20;
    CGContextDrawLinearGradient(v26, v25, v44, v47, 0);

  }
  v27 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextRestoreGState(v27);

  v28 = (CGColorSpace *)qword_1582370;
  v29 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v29 + 32) = objc_msgSend(a2, "CGColor");
  v30 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v31 = objc_msgSend(v30, "CGColor");

  *(_QWORD *)(v29 + 40) = v31;
  v42 = v29;
  specialized Array._endMutation()(v32);
  v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = xmmword_10683C0;
  v34 = CGGradientCreateWithColors(v28, v33, (const CGFloat *)&v39);

  if (v34)
  {
    v35 = (CGContext *)objc_msgSend(a1, "CGContext");
    v48.y = a6 * 0.5;
    v45.x = 0.0;
    v45.y = 0.0;
    v48.x = 0.0;
    CGContextDrawLinearGradient(v35, v34, v45, v48, 0);

  }
}

void sub_D1FD94(void *a1, void *a2, void *a3, double a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGContext *v13;
  CGColor *v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  NSArray v20;
  double v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  double v35;
  CGGradientRef v36;
  CGGradient *v37;
  double v38;
  objc_class *isa;
  CGContext *v40;
  CGContext *v41;
  CGContext *v42;
  uint64_t v43;
  CGColorSpace *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  const __CFArray *v49;
  CGGradient *v50;
  CGContext *v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  CGPoint v66;
  CGPoint v67;
  CGPoint v68;
  CGPoint v69;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  v14 = (CGColor *)objc_msgSend(a7, "CGColor");
  CGContextSetFillColorWithColor(v13, v14);

  v15 = 0.0;
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v16 = swift_allocObject(v52, 56, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1060E10;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 40) = objc_msgSend(a3, "CGColor");
  v53 = a7;
  v17 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v18 = objc_msgSend(v17, "CGColor");

  *(_QWORD *)(v16 + 48) = v18;
  v65 = v16;
  specialized Array._endMutation()(v19);
  _s3__C7CGColorCMa_0(0);
  v20.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v21 = 9.0;
  v22 = (int *)&v55;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502428);
  v24 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1060460;
  *(_OWORD *)(v24 + 32) = xmmword_1099460;
  *(_QWORD *)(v24 + 48) = 0x3FF0000000000000;
  v56 = v24;
  v25 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1060460;
  *(_OWORD *)(v25 + 32) = xmmword_1099460;
  *(_QWORD *)(v25 + 48) = 0x3FF0000000000000;
  v57 = v25;
  v26 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1060460;
  *(_OWORD *)(v26 + 32) = xmmword_1099470;
  *(_QWORD *)(v26 + 48) = 0x3FF0000000000000;
  v58 = v26;
  v27 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_1060460;
  *(_OWORD *)(v27 + 32) = xmmword_1099460;
  *(_QWORD *)(v27 + 48) = 0x3FF0000000000000;
  v59 = v27;
  v28 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1060460;
  *(_OWORD *)(v28 + 32) = xmmword_1099480;
  *(_QWORD *)(v28 + 48) = 0x3FF0000000000000;
  v60 = v28;
  v29 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1060460;
  *(_OWORD *)(v29 + 32) = xmmword_1099480;
  *(_QWORD *)(v29 + 48) = 0x3FF0000000000000;
  v61 = v29;
  v30 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1060460;
  *(_OWORD *)(v30 + 32) = xmmword_1099490;
  *(_QWORD *)(v30 + 48) = 0x3FF0000000000000;
  v62 = v30;
  v31 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v31 + 16) = xmmword_1060460;
  *(_OWORD *)(v31 + 32) = xmmword_1099480;
  *(_QWORD *)(v31 + 48) = 0x3FF0000000000000;
  v63 = v31;
  v32 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1060460;
  *(_OWORD *)(v32 + 32) = xmmword_1099480;
  *(_QWORD *)(v32 + 48) = 0x3FF0000000000000;
  v64 = v32;
  if (qword_14F9FF8 != -1)
    goto LABEL_15;
  while (1)
  {
    v33 = 0;
    v34 = v22 + 8;
    v21 = a4 / v21;
LABEL_3:
    v22 = (int *)(v33 + 1);
    if (__OFADD__(v33, 1))
      goto LABEL_14;
    if (v33 <= 8)
      break;
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  }
  while (1)
  {
    v35 = *((double *)&off_13A7378 + v33 + 4);
    v36 = CGGradientCreateWithColors((CGColorSpaceRef)qword_1582370, v20.super.isa, (const CGFloat *)(*(_QWORD *)&v34[8 * v33] + 32));
    if (v36)
    {
      v37 = v36;
      v38 = v35 * a5;
      isa = v20.super.isa;
      v40 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextSaveGState(v40);
      swift_bridgeObjectRetain();

      objc_msgSend(a1, "clipToRect:", v15, a5 - v38, v21, v38);
      v41 = (CGContext *)objc_msgSend(a1, "CGContext");
      v66.x = v15;
      v66.y = a5;
      v68.x = v15;
      v68.y = a5 - v38;
      CGContextDrawLinearGradient(v41, v37, v66, v68, 0);

      v42 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextRestoreGState(v42);
      swift_bridgeObjectRelease();

      v20.super.isa = isa;
    }
    if (v33 == 8)
      break;
    v15 = v21 + v15;
    v33 = (unint64_t)v22;
    if (v22 != &dword_8)
      goto LABEL_3;
    v22 = 0;
  }
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502430);
  swift_arrayDestroy(v34, 9, v43);
  v44 = (CGColorSpace *)qword_1582370;
  v45 = swift_allocObject(v52, 48, 7);
  *(_OWORD *)(v45 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v45 + 32) = objc_msgSend(v53, "CGColor");
  v46 = objc_msgSend(v53, "colorWithAlphaComponent:", 0.0);
  v47 = objc_msgSend(v46, "CGColor");

  *(_QWORD *)(v45 + 40) = v47;
  v65 = v45;
  specialized Array._endMutation()(v48);
  v49 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v54 = xmmword_10683C0;
  v50 = CGGradientCreateWithColors(v44, v49, (const CGFloat *)&v54);

  if (v50)
  {
    v51 = (CGContext *)objc_msgSend(a1, "CGContext");
    v67.x = a4 * 0.145;
    v67.y = a5 * 0.23;
    v69.x = a4 * 0.145;
    v69.y = a5 * 0.23;
    CGContextDrawRadialGradient(v51, v50, v67, 0.0, v69, a4 * 0.3715, 0);

    v20.super.isa = v51;
  }

}

void sub_D2038C(void *a1, void *a2, double a3, double a4, uint64_t a5, void *a6, void *a7)
{
  CGColorSpace *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const __CFArray *isa;
  CGGradient *v18;
  CGContext *v19;
  CGColorSpace *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  const __CFArray *v27;
  CGGradient *v28;
  CGContext *v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;
  CGPoint v34;
  CGPoint v35;
  CGPoint v36;

  if (qword_14F9FF8 != -1)
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  v13 = (CGColorSpace *)qword_1582370;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v15 = swift_allocObject(v14, 80, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1061D80;
  *(_QWORD *)(v15 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v15 + 40) = objc_msgSend(a6, "CGColor");
  *(_QWORD *)(v15 + 48) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v15 + 56) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v15 + 64) = objc_msgSend(a6, "CGColor");
  v16 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v15 + 72) = v16;
  v33 = v15;
  specialized Array._endMutation()(v16);
  _s3__C7CGColorCMa_0(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32[0] = xmmword_10994A0;
  v32[1] = xmmword_10994B0;
  v32[2] = xmmword_10994C0;
  v18 = CGGradientCreateWithColors(v13, isa, (const CGFloat *)v32);

  if (v18)
  {
    v19 = (CGContext *)objc_msgSend(a1, "CGContext");
    v34.x = a3 * 0.5;
    v34.y = a4 * 0.5;
    CGContextDrawConicGradient(v19, v18, v34, -0.77562432);

  }
  v20 = (CGColorSpace *)qword_1582370;
  v21 = swift_allocObject(v14, 56, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1060E10;
  *(_QWORD *)(v21 + 32) = objc_msgSend(a2, "CGColor");
  v22 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.7);
  v23 = objc_msgSend(v22, "CGColor");

  *(_QWORD *)(v21 + 40) = v23;
  v24 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(v21 + 48) = v25;
  v33 = v21;
  specialized Array._endMutation()(v26);
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v30 = xmmword_10994D0;
  v31 = 0x3FF0000000000000;
  v28 = CGGradientCreateWithColors(v20, v27, (const CGFloat *)&v30);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v36.y = a4 * 0.5;
    v35.x = 0.0;
    v35.y = 0.0;
    v36.x = 0.0;
    CGContextDrawLinearGradient(v29, v28, v35, v36, 0);

  }
}

void sub_D206F4(void *a1, void *a2, void *a3, double a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  const __CFArray *isa;
  CGGradient *v17;
  CGContext *v18;
  CGColorSpace *DeviceRGB;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  const __CFArray *v24;
  CGGradient *v25;
  CGContext *v26;
  CGColorSpace *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  const __CFArray *v34;
  CGGradient *v35;
  CGContext *v36;
  _OWORD v38[2];
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;
  CGPoint v49;

  if (qword_14F9FF8 != -1)
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  v12 = (CGColorSpace *)qword_1582370;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v14 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1060E10;
  *(_QWORD *)(v14 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v14 + 40) = objc_msgSend(a2, "CGColor");
  v15 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 48) = v15;
  v43 = v14;
  specialized Array._endMutation()(v15);
  _s3__C7CGColorCMa_0(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v41 = xmmword_10994E0;
  v42 = 0x3FF0000000000000;
  v17 = CGGradientCreateWithColors(v12, isa, (const CGFloat *)&v41);

  if (v17)
  {
    v18 = (CGContext *)objc_msgSend(a1, "CGContext");
    v44.x = 0.0;
    v44.y = 0.0;
    v47.x = 0.0;
    v47.y = a5;
    CGContextDrawLinearGradient(v18, v17, v44, v47, 0);

  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v20 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1060E10;
  *(_QWORD *)(v20 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v20 + 40) = objc_msgSend(a7, "CGColor");
  v21 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v22 = objc_msgSend(v21, "CGColor");

  *(_QWORD *)(v20 + 48) = v22;
  v43 = v20;
  specialized Array._endMutation()(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = xmmword_10994F0;
  v40 = 0x3FF0000000000000;
  v25 = CGGradientCreateWithColors(DeviceRGB, v24, (const CGFloat *)&v39);

  if (v25)
  {
    v26 = (CGContext *)objc_msgSend(a1, "CGContext");
    v45.x = a4 * 0.5;
    v45.y = a5 * 0.907407407;
    v48.y = a5 * 0.5;
    v48.x = a4 * 0.5;
    CGContextDrawRadialGradient(v26, v25, v45, a4 * 0.0185185185, v48, a4 * 0.472222222, 3u);

  }
  v27 = CGColorSpaceCreateDeviceRGB();
  v28 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1063440;
  *(_QWORD *)(v28 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v28 + 40) = objc_msgSend(a2, "CGColor");
  v29 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v30 = objc_msgSend(v29, "CGColor");

  *(_QWORD *)(v28 + 48) = v30;
  v31 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v32 = objc_msgSend(v31, "CGColor");

  *(_QWORD *)(v28 + 56) = v32;
  v43 = v28;
  specialized Array._endMutation()(v33);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v38[0] = xmmword_1099470;
  v38[1] = xmmword_1099450;
  v35 = CGGradientCreateWithColors(v27, v34, (const CGFloat *)v38);

  if (v35)
  {
    v36 = (CGContext *)objc_msgSend(a1, "CGContext");
    v46.x = a4 * 0.5;
    v46.y = a5 * 0.907407407;
    v49.y = a5 * 0.5;
    v49.x = a4 * 0.5;
    CGContextDrawRadialGradient(v36, v35, v46, a4 * 0.0185185185, v49, a4 * 0.472222222, 3u);

  }
}

void sub_D20B84(double a1, double a2, double a3, double a4)
{
  id v8;
  NSString v9;
  id v10;

  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v8 = (id)qword_1581E30;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v9, v8);

  if (v10)
  {
    objc_msgSend(v10, "drawInRect:", a1, a2, a3, a4);

  }
  else
  {
    __break(1u);
  }
}

void sub_D20C80(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, uint64_t a10, void *a11, void *a12)
{
  CGColorSpace *DeviceRGB;
  uint64_t v24;
  uint64_t v25;
  id v26;
  const __CFArray *isa;
  CGGradient *v28;
  CGContext *v29;
  CGContext *v30;
  CGContext *v31;
  CGContext *v32;
  CGContext *v33;
  CGImage *v34;
  CGImage *v35;
  CGColorSpace *v36;
  uint64_t v37;
  id v38;
  const __CFArray *v39;
  CGGradient *v40;
  CGContext *v41;
  CGContext *v42;
  CGColorSpace *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  const __CFArray *v48;
  CGGradient *v49;
  CGContext *v50;
  __int128 v51;
  _OWORD v52[2];
  _OWORD v53[2];
  uint64_t v54;
  CGPoint v55;
  CGPoint v56;
  CGPoint v57;
  CGPoint v58;
  CGPoint v59;
  CGPoint v60;
  CGRect v61;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_1063440;
  *(_QWORD *)(v25 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v25 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v25 + 48) = objc_msgSend(a3, "CGColor");
  v26 = objc_msgSend(a11, "CGColor");
  *(_QWORD *)(v25 + 56) = v26;
  v54 = v25;
  specialized Array._endMutation()(v26);
  _s3__C7CGColorCMa_0(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v53[0] = xmmword_1099500;
  v53[1] = xmmword_1099510;
  v28 = CGGradientCreateWithColors(DeviceRGB, isa, (const CGFloat *)v53);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v55.x = a4 * 0.324074074;
    v58.x = a4 * 0.724074074;
    v55.y = 0.0;
    v58.y = a5;
    CGContextDrawLinearGradient(v29, v28, v55, v58, 3u);

  }
  v30 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v30);

  v31 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextTranslateCTM(v31, 0.0, a9);

  v32 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextScaleCTM(v32, 1.0, -1.0);

  v33 = (CGContext *)objc_msgSend(a1, "CGContext");
  v34 = (CGImage *)objc_msgSend(a12, "CGImage");
  if (v34)
  {
    v35 = v34;
    v61.origin.x = a6;
    v61.origin.y = a7;
    v61.size.width = a8;
    v61.size.height = a9;
    CGContextClipToMask(v33, v61, v34);

    v36 = CGColorSpaceCreateDeviceRGB();
    v37 = swift_allocObject(v24, 64, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1063440;
    *(_QWORD *)(v37 + 32) = objc_msgSend(a11, "CGColor");
    *(_QWORD *)(v37 + 40) = objc_msgSend(a3, "CGColor");
    *(_QWORD *)(v37 + 48) = objc_msgSend(a2, "CGColor");
    v38 = objc_msgSend(a2, "CGColor");
    *(_QWORD *)(v37 + 56) = v38;
    v54 = v37;
    specialized Array._endMutation()(v38);
    v39 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v52[0] = xmmword_1099520;
    v52[1] = xmmword_1099530;
    v40 = CGGradientCreateWithColors(v36, v39, (const CGFloat *)v52);

    if (v40)
    {
      v41 = (CGContext *)objc_msgSend(a1, "CGContext");
      v56.y = 0.0;
      v59.x = 0.0;
      v56.x = a4;
      v59.y = a5;
      CGContextDrawLinearGradient(v41, v40, v56, v59, 0);

    }
    v42 = (CGContext *)objc_msgSend(a1, "CGContext");
    CGContextRestoreGState(v42);

    v43 = CGColorSpaceCreateDeviceRGB();
    v44 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v44 + 16) = xmmword_105F8A0;
    *(_QWORD *)(v44 + 32) = objc_msgSend(a2, "CGColor");
    v45 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
    v46 = objc_msgSend(v45, "CGColor");

    *(_QWORD *)(v44 + 40) = v46;
    v54 = v44;
    specialized Array._endMutation()(v47);
    v48 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v51 = xmmword_10683C0;
    v49 = CGGradientCreateWithColors(v43, v48, (const CGFloat *)&v51);

    if (v49)
    {
      v50 = (CGContext *)objc_msgSend(a1, "CGContext");
      v60.y = a5 * 0.5;
      v57.x = 0.0;
      v57.y = 0.0;
      v60.x = 0.0;
      CGContextDrawLinearGradient(v50, v49, v57, v60, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_D21188(void *a1, void *a2, CGFloat a3, CGFloat a4, uint64_t a5, void *a6, void *a7)
{
  CGContext *v13;
  CGColorSpace *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  const __CFArray *isa;
  CGGradient *v21;
  CGContext *v22;
  CGColorSpace *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  const __CFArray *v28;
  CGGradient *v29;
  CGContext *v30;
  __int128 v31;
  _OWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  CGPoint v35;
  CGPoint v36;
  CGPoint v37;
  CGPoint v38;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSetBlendMode(v13, kCGBlendModeNormal);

  objc_msgSend(a2, "setFill");
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a3, a4);
  if (qword_14F9FF8 != -1)
    swift_once(&qword_14F9FF8, sub_D1E2AC);
  v14 = (CGColorSpace *)qword_1582370;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1061D90;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 48) = objc_msgSend(a6, "CGColor");
  v17 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.9);
  v18 = objc_msgSend(v17, "CGColor");

  *(_QWORD *)(v16 + 56) = v18;
  v19 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v16 + 64) = v19;
  v34 = v16;
  specialized Array._endMutation()(v19);
  _s3__C7CGColorCMa_0(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32[0] = xmmword_1099540;
  v32[1] = xmmword_1099550;
  v33 = 0x3FF0000000000000;
  v21 = CGGradientCreateWithColors(v14, isa, (const CGFloat *)v32);

  if (v21)
  {
    v22 = (CGContext *)objc_msgSend(a1, "CGContext");
    v37.x = 0.0;
    v37.y = 0.0;
    v35.x = a3;
    v35.y = a4;
    CGContextDrawLinearGradient(v22, v21, v35, v37, 3u);

  }
  v23 = (CGColorSpace *)qword_1582370;
  v24 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v24 + 32) = objc_msgSend(a7, "CGColor");
  v25 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v26 = objc_msgSend(v25, "CGColor");

  *(_QWORD *)(v24 + 40) = v26;
  v34 = v24;
  specialized Array._endMutation()(v27);
  v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v31 = xmmword_10683C0;
  v29 = CGGradientCreateWithColors(v23, v28, (const CGFloat *)&v31);

  if (v29)
  {
    v30 = (CGContext *)objc_msgSend(a1, "CGContext");
    v38.y = a4 * 0.5;
    v36.x = 0.0;
    v36.y = 0.0;
    v38.x = 0.0;
    CGContextDrawLinearGradient(v30, v29, v36, v38, 3u);

  }
}

uint64_t sub_D214F4(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  double v11;
  BOOL v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;
  double v16;
  double v17;
  _BOOL4 v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  const CGPath *Mutable;
  CGContext *v25;
  id v26;
  BOOL v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  unsigned int v31;
  _QWORD v32[6];

  v6 = type metadata accessor for CGPathFillRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 / 3.0;
  if (a2 / 3.0 == 0.0)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  v12 = a2 >= 0.0;
  if (v11 > 0.0)
    v12 = a2 <= 0.0;
  if (!v12)
  {
    v13 = 0;
    v14 = a3 / 3.0;
    v15 = a3 >= 0.0;
    if (a3 / 3.0 > 0.0)
      v15 = a3 <= 0.0;
    v29 = v15;
    v16 = a2 / 6.3;
    v31 = enum case for CGPathFillRule.winding(_:);
    v17 = 0.0;
    v28 = a2;
    while (1)
    {
      v19 = __OFADD__(v13, 1);
      v20 = v13 + 1;
      if (v19)
        break;
      if (v14 == 0.0)
        goto LABEL_23;
      v30 = v20;
      if (!v29)
      {
        v21 = 0;
        v22 = 0.0;
        while (!__OFADD__(v21, 1))
        {
          v23 = (double)(v21 + 1) * v14 + 0.0;
          Mutable = CGPathCreateMutable();
          v32[1] = 0;
          v32[2] = 0;
          v32[0] = 0x3FF0000000000000;
          v32[3] = 0x3FF0000000000000;
          v32[4] = 0;
          v32[5] = 0;
          CGMutablePathRef.addRoundedRect(in:cornerWidth:cornerHeight:transform:)(v32, v17, v22, v11, v14, v16, a3 / 6.3);
          v25 = (CGContext *)objc_msgSend(a1, "CGContext");
          CGContextAddPath(v25, Mutable);

          v26 = objc_msgSend(a1, "CGContext");
          (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, v31, v6);
          CGContextRef.fillPath(using:)(v10);

          result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
          v27 = v23 <= a3;
          if (v14 > 0.0)
            v27 = v23 >= a3;
          ++v21;
          v22 = v23;
          if (v27)
            goto LABEL_9;
        }
        __break(1u);
        break;
      }
LABEL_9:
      v13 = v30;
      v17 = (double)v30 * v11 + 0.0;
      v18 = v17 <= v28;
      if (v11 > 0.0)
        v18 = v17 >= v28;
      if (v18)
        return result;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  return result;
}

void sub_D2176C(void *a1, int a2, int a3, int a4, id a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, void *a10, id *a11)
{
  CGContext *v18;
  CGContext *v19;
  CGImage *v20;
  CGImage *v21;
  CGContext *v22;
  CGRect v23;

  objc_msgSend(a5, "setFill");
  objc_msgSend(a1, "fillRect:blendMode:", 0, a6, a7, a8, a9);
  v18 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v18);

  v19 = (CGContext *)objc_msgSend(a1, "CGContext");
  v20 = (CGImage *)objc_msgSend(a10, "CGImage");
  if (v20)
  {
    v21 = v20;
    v23.origin.x = a6;
    v23.origin.y = a7;
    v23.size.width = a8;
    v23.size.height = a9;
    CGContextClipToMask(v19, v23, v20);

    objc_msgSend(*a11, "drawInRect:blendMode:alpha:", 0, a6, a7, a8, a9, 1.0);
    v22 = (CGContext *)objc_msgSend(a1, "CGContext");
    CGContextRestoreGState(v22);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_D218C8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 40) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = sub_D21930;
  return v5(v2 + 16);
}

uint64_t sub_D21930()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  v3 = *(_OWORD *)(v1 + 24);
  *(_BYTE *)v2 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)(v2 + 8) = v3;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

char *sub_D21988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_C32874(*(_BYTE *)(a1 + v5 + 32));
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 56 * v8;
        v11 = *(_BYTE *)v10;
        v23 = *(_OWORD *)(v10 + 24);
        v21 = *(_OWORD *)(v10 + 8);
        v22 = *(_OWORD *)(v10 + 40);
        v12 = (id)v21;
        v13 = *((id *)&v21 + 1);
        v14 = (id)v23;
        v15 = *((id *)&v23 + 1);
        v16 = (id)v22;
        v17 = *((id *)&v22 + 1);
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_BCD620(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v19 = *((_QWORD *)v6 + 2);
        v18 = *((_QWORD *)v6 + 3);
        if (v19 >= v18 >> 1)
          v6 = sub_BCD620((char *)(v18 > 1), v19 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v19 + 1;
        v7 = &v6[56 * v19];
        v7[32] = v11;
        *(_OWORD *)(v7 + 40) = v21;
        *(_OWORD *)(v7 + 56) = v23;
        *(_OWORD *)(v7 + 72) = v22;
      }
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
    return 8;
  else
    return a1 - 1;
}

void sub_D21B2C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  __n128 v27;
  char isEscapingClosureAtFileLocation;
  void **aBlock;
  uint64_t v30;
  void (*v31)(uint64_t, void *);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_13BAA48, 48, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(double *)(v14 + 32) = a6;
  *(double *)(v14 + 40) = a7;
  v15 = swift_allocObject(&unk_13BAA70, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_D22818;
  *(_QWORD *)(v15 + 24) = v14;
  v33 = sub_12BACC;
  v34 = v15;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_23E9F0;
  v32 = &block_descriptor_87_4;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  v17 = objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);
  _Block_release(v16);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 485, 35, 1, v18);
  swift_release();
  if ((v16 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v19 = swift_allocObject(&unk_13BAAC0, 104, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_QWORD *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  *(double *)(v19 + 48) = a6;
  *(double *)(v19 + 56) = a7;
  *(_QWORD *)(v19 + 64) = 0;
  *(_QWORD *)(v19 + 72) = 0;
  *(double *)(v19 + 80) = a6;
  *(double *)(v19 + 88) = a7;
  *(_QWORD *)(v19 + 96) = v17;
  v20 = swift_allocObject(&unk_13BAAE8, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_D22878;
  *(_QWORD *)(v20 + 24) = v19;
  v33 = sub_12BACC;
  v34 = v20;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_23E9F0;
  v32 = &block_descriptor_97_1;
  v21 = _Block_copy(&aBlock);
  v22 = a1;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = v17;
  swift_retain();
  objc_msgSend(v13, "imageWithActions:", v21, swift_release().n128_f64[0]);

  _Block_release(v21);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v20, "", 127, 489, 36, 1, v27);
  swift_release();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
}

uint64_t sub_D21DF0(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = *((_QWORD *)v2 + 2);
  v7 = v2[3];
  v8 = v2[4];
  v9 = *((_QWORD *)v2 + 5);
  v10 = *((_QWORD *)v2 + 6);
  v11 = *((_QWORD *)v2 + 7);
  v12 = *((_QWORD *)v2 + 8);
  v13 = *((_QWORD *)v2 + 9);
  v14 = (_QWORD *)swift_task_alloc(dword_15023C4);
  *(_QWORD *)(v3 + 16) = v14;
  *v14 = v3;
  v14[1] = sub_C3150;
  return sub_D1DDB8(a1, a2, v6, v9, v10, v11, v12, v13, v7, v8);
}

unint64_t sub_D21EA0()
{
  unint64_t result;

  result = qword_15023D8;
  if (!qword_15023D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Expression, &type metadata for PlaylistCovers.Expression);
    atomic_store(result, (unint64_t *)&qword_15023D8);
  }
  return result;
}

uint64_t sub_D21EE4()
{
  return sub_5C150(&qword_15023E0, &qword_15023E8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t _s10ExpressionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_D21F5C + 4 * byte_10A43C5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_D21F90 + 4 * byte_10A43C0[v4]))();
}

uint64_t sub_D21F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D21F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD21FA0);
  return result;
}

uint64_t sub_D21FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD21FB4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_D21FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D21FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Expression()
{
  return &type metadata for PlaylistCovers.Expression;
}

uint64_t sub_D21FDC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_D22028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = swift_task_alloc(dword_15023F4);
  v9 = *(_OWORD *)(v1 + 56);
  v10 = *(_OWORD *)(v1 + 72);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_50F8C;
  *(_QWORD *)(v8 + 72) = v7;
  *(_OWORD *)(v8 + 56) = v10;
  *(_OWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 80) = v4;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch(sub_D1E260, 0, 0);
}

uint64_t sub_D220C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502418);
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v6[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D2212C, 0, 0);
}

uint64_t sub_D2212C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15023B8);
  TaskGroup.makeAsyncIterator()(v1, v2);
  v3 = sub_5C150(&qword_1502420, &qword_1502418, (uint64_t)&protocol conformance descriptor for TaskGroup<A>.Iterator);
  v0[15] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_D221DC;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v0[12], v3);
}

uint64_t sub_D221DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 128));
  if (v0)
  {
    v2[20] = v0;
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
    v7 = sub_D225B0;
  }
  else
  {
    v2[17] = v2[6];
    v7 = sub_D2226C;
  }
  return swift_task_switch(v7, 0, 0);
}

void sub_D2226C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(void **)(v0 + 24);
  if (!v1)
  {
    v26 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(v26, *(_QWORD *)(v0 + 96));
    sub_D22678(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
    swift_task_dealloc(v26);
    (*(void (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
    return;
  }
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 88);
  v6 = *(void **)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v7 = *(void **)(v0 + 32);
  v8 = *(_BYTE *)(v0 + 16);
  v9 = v1;
  v10 = v7;
  v11 = v9;
  v12 = v10;
  v13 = v6;
  v14 = v5;
  v15 = v4;
  v16 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  *(_QWORD *)(v0 + 40) = v2;
  v19 = sub_C32874(v8);
  v20 = *(_QWORD *)(v2 + 16);
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
  }
  else
  {
    v23 = v18;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 136) + 24) >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_D3EB7C();
    }
    else
    {
      sub_D3D338(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_C32874(v8);
      if ((v23 & 1) != (v25 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaylistCovers.Expression);
        return;
      }
      v19 = v24;
    }
    v27 = *(_QWORD **)(v0 + 40);
    *(_QWORD *)(v0 + 144) = v27;
    v29 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 72);
    if ((v23 & 1) != 0)
    {
      v32 = v27[7] + 56 * v19;
      v33 = *(void **)(v32 + 16);
      v34 = v12;
      v35 = v11;
      v36 = *(void **)(v32 + 24);
      v37 = *(void **)(v32 + 32);
      v43 = *(void **)(v32 + 40);
      v44 = *(void **)(v32 + 48);
      v45 = *(_QWORD *)(v0 + 80);
      v46 = *(_QWORD *)(v0 + 88);

      v12 = v34;
      v11 = v35;

      *(_BYTE *)v32 = v8;
      *(_QWORD *)(v32 + 8) = v35;
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v30;
      *(_QWORD *)(v32 + 32) = v45;
      *(_QWORD *)(v32 + 40) = v46;
      *(_QWORD *)(v32 + 48) = v34;
LABEL_14:
      swift_bridgeObjectRelease();

      v42 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 152) = v42;
      *v42 = v0;
      v42[1] = sub_D22520;
      dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
      return;
    }
    v27[(v19 >> 6) + 8] |= 1 << v19;
    *(_BYTE *)(v27[6] + v19) = v8;
    v38 = v27[7] + 56 * v19;
    *(_BYTE *)v38 = v8;
    *(_QWORD *)(v38 + 8) = v11;
    *(_QWORD *)(v38 + 16) = v31;
    *(_QWORD *)(v38 + 24) = v30;
    *(_QWORD *)(v38 + 32) = v29;
    *(_QWORD *)(v38 + 40) = v28;
    *(_QWORD *)(v38 + 48) = v12;
    v39 = v27[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (!v40)
    {
      v27[2] = v41;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_D22520()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 152));
  if (v0)
  {
    v2[20] = v0;
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
    v7 = sub_D225B0;
  }
  else
  {
    v2[17] = v2[18];
    v7 = sub_D2226C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_D225B0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D225E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_150240C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1502408 + dword_1502408))(a1, v4);
}

void sub_D22678(uint64_t a1, void *a2, void *a3)
{
  if (a2)
  {

  }
}

uint64_t sub_D226A4()
{
  return objectdestroy_13Tm_1(64);
}

uint64_t sub_D226AC(uint64_t a1)
{
  return sub_D22900(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_D1E2C8);
}

uint64_t sub_D226B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_306(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_306(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_D226E0()
{
  id *v0;

  return swift_deallocObject(v0, 72, 7);
}

void sub_D22724(void *a1)
{
  uint64_t v1;

  sub_D1E9C4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 64), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56));
}

uint64_t sub_D22738()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22748()
{
  return objectdestroy_13Tm_1(128);
}

uint64_t sub_D22750(void *a1)
{
  uint64_t v1;

  return sub_D1F714(a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), v1 + 80);
}

uint64_t sub_D22768()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22778()
{
  return objectdestroy_13Tm_1(64);
}

uint64_t sub_D22780(uint64_t a1)
{
  return sub_D22900(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_D1F8C0);
}

uint64_t sub_D2278C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D2279C()
{
  return objectdestroy_13Tm_1(64);
}

uint64_t sub_D227A4(uint64_t a1)
{
  return sub_D22900(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_D1FD94);
}

uint64_t sub_D227B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D227C0()
{
  return objectdestroy_13Tm_1(64);
}

uint64_t sub_D227C8(uint64_t a1)
{
  return sub_D22900(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_D2038C);
}

uint64_t sub_D227D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D227E4()
{
  return objectdestroy_13Tm_1(64);
}

uint64_t sub_D227EC(uint64_t a1)
{
  return sub_D22900(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_D206F4);
}

uint64_t sub_D227F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22808()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_D22818()
{
  double *v0;

  sub_D20B84(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_D22824()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22834()
{
  id *v0;

  return swift_deallocObject(v0, 104, 7);
}

void sub_D22878(void *a1)
{
  uint64_t v1;

  sub_D20C80(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(CGFloat *)(v1 + 80), *(CGFloat *)(v1 + 88), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 96));
}

uint64_t sub_D22894()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D228A4()
{
  return objectdestroy_13Tm_1(64);
}

uint64_t objectdestroy_13Tm_1(uint64_t a1)
{
  id *v1;

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_D228F4(uint64_t a1)
{
  return sub_D22900(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_D21188);
}

uint64_t sub_D22900(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_D22914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22924()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D22934(void *a1)
{
  uint64_t v1;

  return sub_D214F4(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_D2293C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D2294C()
{
  id *v0;

  return swift_deallocObject(v0, 96, 7);
}

void sub_D22990(void *a1)
{
  uint64_t v1;

  sub_D2176C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(id *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(void **)(v1 + 80), *(id **)(v1 + 88));
}

uint64_t sub_D229A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t Logger.playlistCovers.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14FA000 != -1)
    swift_once(&qword_14FA000, sub_D24C00);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.playlistCovers);
}

uint64_t PlaylistCovers.RecipeColors.description.getter(void *a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;

  _StringGuts.grow(_:)(60);
  v8._object = (void *)0x8000000001108E00;
  v8._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x32726F6C6F63202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v15);
  v16 = a2;
  v17 = objc_msgSend(v16, "description");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x33726F6C6F63202CLL;
  v22._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v22);
  v23 = a3;
  v24 = objc_msgSend(v23, "description");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);

  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x34726F6C6F63202CLL;
  v29._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v29);
  v30 = a4;
  v31 = objc_msgSend(v30, "description");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);

  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return 0;
}

void UIView.Border.color.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t static PlaylistCovers.RecipeColors.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a5) & 1) != 0
    && (static NSObject.== infix(_:_:)(a2, a6) & 1) != 0
    && (static NSObject.== infix(_:_:)(a3, a7) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(a4, a8) & 1;
  }
  else
  {
    return 0;
  }
}

void PlaylistCovers.RecipeColors.hash(into:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;

  v9 = a2;
  NSObject.hash(into:)(a1);

  v10 = a3;
  NSObject.hash(into:)(a1);

  v11 = a4;
  NSObject.hash(into:)(a1);

  v12 = a5;
  NSObject.hash(into:)(a1);

}

Swift::Int PlaylistCovers.RecipeColors.hashValue.getter(void *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13);
  v8 = a1;
  NSObject.hash(into:)(v13);

  v9 = a2;
  NSObject.hash(into:)(v13);

  v10 = a3;
  NSObject.hash(into:)(v13);

  v11 = a4;
  NSObject.hash(into:)(v13);

  return Hasher._finalize()();
}

uint64_t sub_D22EA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v7) & 1) != 0
    && (static NSObject.== infix(_:_:)(v2, v6) & 1) != 0
    && (static NSObject.== infix(_:_:)(v5, v9) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(v4, v8) & 1;
  }
  else
  {
    return 0;
  }
}

Swift::Int sub_D22F50()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  Hasher.init(_seed:)(v10);
  v5 = v1;
  NSObject.hash(into:)(v10);

  v6 = v2;
  NSObject.hash(into:)(v10);

  v7 = v3;
  NSObject.hash(into:)(v10);

  v8 = v4;
  NSObject.hash(into:)(v10);

  return Hasher._finalize()();
}

void sub_D22FEC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(id *)v1;
  NSObject.hash(into:)(a1);

  v7 = v3;
  NSObject.hash(into:)(a1);

  v8 = v4;
  NSObject.hash(into:)(a1);

  v9 = v5;
  NSObject.hash(into:)(a1);

}

Swift::Int sub_D23080()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  Hasher.init(_seed:)(v10);
  v5 = v1;
  NSObject.hash(into:)(v10);

  v6 = v2;
  NSObject.hash(into:)(v10);

  v7 = v3;
  NSObject.hash(into:)(v10);

  v8 = v4;
  NSObject.hash(into:)(v10);

  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.recipeColorsForSource(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1[23] = a1;
  v2 = type metadata accessor for IndexPath(0);
  v1[24] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[25] = v3;
  v1[26] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v1[27] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[28] = v5;
  v1[29] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist.Entry(0);
  v1[30] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[31] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[32] = swift_task_alloc(v8);
  v1[33] = swift_task_alloc(v8);
  v9 = type metadata accessor for Track(0);
  v1[34] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[35] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[36] = swift_task_alloc(v11);
  v1[37] = swift_task_alloc(v11);
  v1[38] = swift_task_alloc(v11);
  v1[39] = swift_task_alloc(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0A0);
  v1[40] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[41] = swift_task_alloc(v13);
  v1[42] = swift_task_alloc(v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
  v1[43] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v1[44] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[45] = swift_task_alloc(v16);
  v1[46] = swift_task_alloc(v16);
  v17 = type metadata accessor for PlaylistCovers.Source(0);
  v1[47] = v17;
  v1[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D232C0, 0, 0);
}

uint64_t sub_D232C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Class isa;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  int v69;
  void (*v70)(uint64_t, uint64_t);
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  _BOOL4 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  BOOL v99;
  uint64_t v100;
  void *v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t (*v115)();
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  void (*v122)(uint64_t, _QWORD);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  sub_2B7194(*(_QWORD *)(v0 + 184), v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v4 = **(_QWORD **)(v0 + 384);
      *(_QWORD *)(v0 + 448) = v4;
      v5 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v0 + 456) = v5;
      if (v5)
      {
        v6 = 0;
        v7 = *(_QWORD *)(v0 + 248);
        *(_DWORD *)(v0 + 580) = *(_DWORD *)(v7 + 80);
        *(_DWORD *)(v0 + 584) = enum case for Playlist.Entry.InternalItem.song(_:);
        *(_DWORD *)(v0 + 588) = enum case for Playlist.Entry.InternalItem.uploadedAudio(_:);
        *(_QWORD *)(v0 + 464) = *(_QWORD *)(v7 + 72);
        *(_QWORD *)(v0 + 472) = *(_QWORD *)(v7 + 16);
        v8 = &qword_14FA000;
        while (1)
        {
          *(_QWORD *)(v0 + 480) = v6;
          v10 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 448)+ ((*(unsigned __int8 *)(v0 + 580) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 580))+ *(_QWORD *)(v0 + 464) * v6, *(_QWORD *)(v0 + 240));
          v11 = Playlist.Entry.catalogID.getter(v10);
          *(_QWORD *)(v0 + 488) = v12;
          if (v12)
            break;
          if (*v8 != -1)
            swift_once(&qword_14FA000, sub_D24C00);
          v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
          v15 = *(_QWORD *)(v0 + 256);
          v14 = *(_QWORD *)(v0 + 264);
          v16 = *(_QWORD *)(v0 + 240);
          v17 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v17, (uint64_t)static Logger.playlistCovers);
          v18 = v13(v15, v14, v16);
          v19 = Logger.logObject.getter(v18);
          v20 = static os_log_type_t.default.getter(v19);
          v21 = os_log_type_enabled(v19, v20);
          v22 = *(_QWORD *)(v0 + 248);
          v23 = *(_QWORD *)(v0 + 256);
          v24 = *(_QWORD *)(v0 + 240);
          if (v21)
          {
            v25 = swift_slowAlloc(12, -1);
            v26 = v8;
            v27 = swift_slowAlloc(32, -1);
            v137 = v27;
            *(_DWORD *)v25 = 136446210;
            v28 = (char *)Playlist.Entry.description.getter();
            v30 = v29;
            *(_QWORD *)(v25 + 4) = sub_BA95EC(v28, v29, &v137);
            v31 = swift_bridgeObjectRelease(v30);
            v9 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 8);
            v9(v23, v24, v31);
            _os_log_impl(&dword_0, v19, v20, "No catalogID for Entry=%{public}s", (uint8_t *)v25, 0xCu);
            swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
            v32 = v27;
            v8 = v26;
            swift_slowDealloc(v32, -1, -1);
            swift_slowDealloc(v25, -1, -1);
          }
          else
          {
            v9 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 8);
            ((void (*)(_QWORD, _QWORD))v9)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
          }

          ((void (*)(_QWORD, _QWORD))v9)(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
          v6 = *(_QWORD *)(v0 + 480) + 1;
          if (v6 == *(_QWORD *)(v0 + 456))
          {
            v4 = *(_QWORD *)(v0 + 448);
            goto LABEL_43;
          }
        }
        v90 = v11;
        v91 = v12;
        v92 = *(_DWORD *)(v0 + 588);
        v93 = *(_DWORD *)(v0 + 584);
        v95 = *(_QWORD *)(v0 + 224);
        v94 = *(_QWORD *)(v0 + 232);
        v96 = *(_QWORD *)(v0 + 216);
        Playlist.Entry.internalItem.getter(v11);
        v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 88))(v94, v96);
        v99 = v97 != v93 && v97 != v92;
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
        v100 = swift_task_alloc(dword_150244C);
        *(_QWORD *)(v0 + 496) = v100;
        *(_QWORD *)v100 = v0;
        *(_QWORD *)(v100 + 8) = sub_D24224;
        *(_BYTE *)(v100 + 368) = v99;
        *(_QWORD *)(v100 + 336) = v90;
        *(_QWORD *)(v100 + 344) = v91;
        goto LABEL_48;
      }
LABEL_43:
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v46 = **(void ***)(v0 + 384);
      *(_QWORD *)(v0 + 512) = v46;
      result = (uint64_t)objc_msgSend(v46, "totalItemCount");
      *(_QWORD *)(v0 + 520) = result;
      if (result < 0)
      {
        __break(1u);
        return result;
      }
      v48 = result;
      if (result)
      {
        v49 = 0;
        while (1)
        {
          *(_QWORD *)(v0 + 528) = v49;
          if (v49 == v48)
            break;
          v50 = *(void **)(v0 + 512);
          v52 = *(_QWORD *)(v0 + 200);
          v51 = *(_QWORD *)(v0 + 208);
          v53 = *(_QWORD *)(v0 + 192);
          IndexPath.init(item:section:)(v49, 0);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
          v55 = objc_msgSend(v50, "itemAtIndexPath:", isa);
          *(_QWORD *)(v0 + 536) = v55;

          if ((objc_msgSend(v55, "respondsToSelector:", "innermostModelObject") & 1) != 0)
          {
            v56 = objc_msgSend(v55, "innermostModelObject");
            *(_QWORD *)(v0 + 544) = v56;
            objc_opt_self(MPModelSong);
            v57 = swift_dynamicCastObjCClass(v56);
            if (v57)
            {
              v113 = v57;
              v114 = (_QWORD *)swift_task_alloc(dword_1502444);
              *(_QWORD *)(v0 + 552) = v114;
              *v114 = v0;
              v114[1] = sub_D246A8;
              v114[2] = v113;
              v115 = sub_D2946C;
              return swift_task_switch(v115, 0, 0);
            }

          }
          swift_unknownObjectRelease(v55);
          v48 = *(_QWORD *)(v0 + 520);
          v49 = *(_QWORD *)(v0 + 528) + 1;
          if (v49 == v48)
          {

            goto LABEL_44;
          }
        }
        __break(1u);
        goto LABEL_51;
      }

    }
LABEL_44:
    if (qword_14F9FE8 == -1)
    {
LABEL_45:
      v101 = *(void **)algn_1582338;
      v103 = (void *)qword_1582340;
      v102 = (void *)unk_1582348;
      v104 = *(_QWORD *)(v0 + 384);
      v105 = *(_QWORD *)(v0 + 360);
      v106 = *(_QWORD *)(v0 + 368);
      v108 = *(_QWORD *)(v0 + 328);
      v107 = *(_QWORD *)(v0 + 336);
      v109 = *(_QWORD *)(v0 + 312);
      v121 = *(_QWORD *)(v0 + 304);
      v123 = *(_QWORD *)(v0 + 296);
      v125 = *(_QWORD *)(v0 + 288);
      v127 = *(_QWORD *)(v0 + 264);
      v129 = *(_QWORD *)(v0 + 256);
      v131 = *(_QWORD *)(v0 + 232);
      v134 = *(_QWORD *)(v0 + 208);
      v136 = (id)qword_1582330;
      v110 = v101;
      v111 = v103;
      v112 = v102;
      swift_task_dealloc(v104);
      swift_task_dealloc(v106);
      swift_task_dealloc(v105);
      swift_task_dealloc(v107);
      swift_task_dealloc(v108);
      swift_task_dealloc(v109);
      swift_task_dealloc(v121);
      swift_task_dealloc(v123);
      swift_task_dealloc(v125);
      swift_task_dealloc(v127);
      swift_task_dealloc(v129);
      swift_task_dealloc(v131);
      swift_task_dealloc(v134);
      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v136, v110, v111, v112);
    }
LABEL_51:
    swift_once(&qword_14F9FE8, sub_D1B0D0);
    goto LABEL_45;
  }
  v33 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 344);
  v34 = *(_QWORD *)(v0 + 352);
  v37 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 320);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 32))(v33, *(_QWORD *)(v0 + 384), v35);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  *(_QWORD *)(v0 + 392) = v39;
  v39(v37, v33, v35);
  v40 = sub_D297A0();
  *(_QWORD *)(v0 + 400) = v40;
  dispatch thunk of Collection.startIndex.getter(v35);
  *(_QWORD *)(v37 + *(int *)(v38 + 36)) = *(_QWORD *)(v0 + 168);
  sub_D297EC(v37, v36);
  v41 = *(int *)(v38 + 36);
  *(_DWORD *)(v0 + 568) = v41;
  v42 = *(_QWORD *)(v36 + v41);
  dispatch thunk of Collection.endIndex.getter(v35, v40);
  if (v42 == *(_QWORD *)(v0 + 176))
  {
LABEL_13:
    v43 = *(_QWORD *)(v0 + 368);
    v44 = *(_QWORD *)(v0 + 344);
    v45 = *(_QWORD *)(v0 + 352);
    sub_56024(*(_QWORD *)(v0 + 336), &qword_14FB0A0);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    goto LABEL_44;
  }
  v119 = v0 + 136;
  *(_DWORD *)(v0 + 572) = enum case for Track.song(_:);
  *(_DWORD *)(v0 + 576) = enum case for Track.musicVideo(_:);
  while (1)
  {
    v120 = *(_DWORD *)(v0 + 576);
    v126 = *(_DWORD *)(v0 + 572);
    v124 = *(_QWORD *)(v0 + 400);
    v59 = *(_QWORD *)(v0 + 360);
    v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    v130 = *(_QWORD *)(v0 + 352);
    v60 = *(_QWORD *)(v0 + 336);
    v61 = *(_QWORD *)(v0 + 344);
    v62 = *(_QWORD *)(v0 + 312);
    v132 = *(_QWORD *)(v0 + 304);
    v135 = *(_QWORD *)(v0 + 296);
    v63 = v60 + *(int *)(v0 + 568);
    v65 = *(_QWORD *)(v0 + 272);
    v64 = *(_QWORD *)(v0 + 280);
    v122 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v119, v63, v61, v124);
    v66 = *(void (**)(uint64_t))(v64 + 16);
    v66(v62);
    v122(v119, 0);
    v128(v59, v60, v61);
    dispatch thunk of Collection.formIndex(after:)(v63, v61, v124);
    v67 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
    *(_QWORD *)(v0 + 408) = v67;
    v67(v59, v61);
    v68 = v132;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v132, v62, v65);
    v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v66;
    ((void (*)(uint64_t, uint64_t, uint64_t))v66)(v135, v68, v65);
    v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 88))(v135, v65);
    v70 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    *(_QWORD *)(v0 + 416) = v70;
    v70(v135, v65);
    if (v69 == v126 || v69 == v120)
      break;
LABEL_25:
    v70(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
    v58 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
    dispatch thunk of Collection.endIndex.getter(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
    if (v58 == *(_QWORD *)(v0 + 176))
      goto LABEL_13;
  }
  v72 = Track.catalogID.getter(v71);
  *(_QWORD *)(v0 + 424) = v73;
  if (!v73)
  {
    if (qword_14FA000 != -1)
      swift_once(&qword_14FA000, sub_D24C00);
    v74 = *(_QWORD *)(v0 + 304);
    v75 = *(_QWORD *)(v0 + 288);
    v76 = *(_QWORD *)(v0 + 272);
    v77 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v77, (uint64_t)static Logger.playlistCovers);
    v78 = v133(v75, v74, v76);
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.default.getter(v79);
    v81 = os_log_type_enabled(v79, v80);
    v82 = *(_QWORD *)(v0 + 288);
    v83 = *(_QWORD *)(v0 + 272);
    if (v81)
    {
      v84 = swift_slowAlloc(12, -1);
      v85 = swift_slowAlloc(32, -1);
      v137 = v85;
      *(_DWORD *)v84 = 136446210;
      v86 = (char *)Track.description.getter();
      v88 = v87;
      *(_QWORD *)(v84 + 4) = sub_BA95EC(v86, v87, &v137);
      v89 = swift_bridgeObjectRelease(v88);
      ((void (*)(uint64_t, uint64_t, __n128))v70)(v82, v83, v89);
      _os_log_impl(&dword_0, v79, v80, "No catalogID for Track=%{public}s", (uint8_t *)v84, 0xCu);
      swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v84, -1, -1);
    }
    else
    {
      v70(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    }

    goto LABEL_25;
  }
  v116 = v72;
  v117 = v73;
  v118 = swift_task_alloc(dword_150244C);
  *(_QWORD *)(v0 + 432) = v118;
  *(_QWORD *)v118 = v0;
  *(_QWORD *)(v118 + 8) = sub_D23C88;
  *(_BYTE *)(v118 + 368) = v69 != v126;
  *(_QWORD *)(v118 + 336) = v116;
  *(_QWORD *)(v118 + 344) = v117;
LABEL_48:
  v115 = sub_D287B4;
  return swift_task_switch(v115, 0, 0);
}

uint64_t sub_D23C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (_QWORD *)*v4;
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = a4;
  v7 = v5[53];
  v6 = v5[54];
  v5[55] = a1;
  swift_task_dealloc(v6);
  swift_bridgeObjectRelease(v7);
  return swift_task_switch(sub_D23CF8, 0, 0);
}

uint64_t sub_D23CF8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  int v33;
  void (*v34)(uint64_t, uint64_t);
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  id v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  uint64_t v74;

  v1 = *(_QWORD *)(v0 + 440);
  (*(void (**)(_QWORD, _QWORD))(v0 + 416))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
  if (v1)
  {
    v72 = *(id *)(v0 + 440);
    v67 = *(id *)(v0 + 40);
    v69 = *(id *)(v0 + 32);
    v65 = *(id *)(v0 + 48);
    v2 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    v3 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 344);
    sub_56024(*(_QWORD *)(v0 + 336), &qword_14FB0A0);
    v2(v3, v4);
LABEL_7:
    v13 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 368);
    v15 = *(_QWORD *)(v0 + 328);
    v14 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 312);
    v19 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 264);
    v59 = *(_QWORD *)(v0 + 256);
    v61 = *(_QWORD *)(v0 + 232);
    v63 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    swift_task_dealloc(v16);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v72, v69, v67, v65);
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
  dispatch thunk of Collection.endIndex.getter(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
  if (v5 == *(_QWORD *)(v0 + 176))
  {
LABEL_4:
    v6 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 352);
    sub_56024(*(_QWORD *)(v0 + 336), &qword_14FB0A0);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (qword_14F9FE8 != -1)
      swift_once(&qword_14F9FE8, sub_D1B0D0);
    v9 = *(void **)algn_1582338;
    v10 = (void *)qword_1582340;
    v11 = (void *)unk_1582348;
    v72 = (id)qword_1582330;
    v69 = v9;
    v67 = v10;
    v65 = v11;
    goto LABEL_7;
  }
  v57 = v0 + 136;
  while (1)
  {
    v58 = *(_DWORD *)(v0 + 576);
    v64 = *(_DWORD *)(v0 + 572);
    v62 = *(_QWORD *)(v0 + 400);
    v23 = *(_QWORD *)(v0 + 360);
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    v68 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 336);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 312);
    v70 = *(_QWORD *)(v0 + 304);
    v73 = *(_QWORD *)(v0 + 296);
    v27 = v24 + *(int *)(v0 + 568);
    v29 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 280);
    v60 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v57, v27, v25, v62);
    v30 = *(void (**)(uint64_t))(v28 + 16);
    v30(v26);
    v60(v57, 0);
    v66(v23, v24, v25);
    dispatch thunk of Collection.formIndex(after:)(v27, v25, v62);
    v31 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    *(_QWORD *)(v0 + 408) = v31;
    v31(v23, v25);
    v32 = v70;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v70, v26, v29);
    v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v30;
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v73, v32, v29);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88))(v73, v29);
    v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    *(_QWORD *)(v0 + 416) = v34;
    v34(v73, v29);
    if (v33 == v64 || v33 == v58)
      break;
LABEL_11:
    v34(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
    v22 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
    dispatch thunk of Collection.endIndex.getter(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
    if (v22 == *(_QWORD *)(v0 + 176))
      goto LABEL_4;
  }
  v36 = Track.catalogID.getter(v35);
  *(_QWORD *)(v0 + 424) = v37;
  if (!v37)
  {
    if (qword_14FA000 != -1)
      swift_once(&qword_14FA000, sub_D24C00);
    v38 = *(_QWORD *)(v0 + 304);
    v39 = *(_QWORD *)(v0 + 288);
    v40 = *(_QWORD *)(v0 + 272);
    v41 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v41, (uint64_t)static Logger.playlistCovers);
    v42 = v71(v39, v38, v40);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter(v43);
    v45 = os_log_type_enabled(v43, v44);
    v46 = *(_QWORD *)(v0 + 288);
    v47 = *(_QWORD *)(v0 + 272);
    if (v45)
    {
      v48 = swift_slowAlloc(12, -1);
      v49 = swift_slowAlloc(32, -1);
      v74 = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = (char *)Track.description.getter();
      v52 = v51;
      *(_QWORD *)(v48 + 4) = sub_BA95EC(v50, v51, &v74);
      v53 = swift_bridgeObjectRelease(v52);
      ((void (*)(uint64_t, uint64_t, __n128))v34)(v46, v47, v53);
      _os_log_impl(&dword_0, v43, v44, "No catalogID for Track=%{public}s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      v34(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    }

    goto LABEL_11;
  }
  v54 = v36;
  v55 = v37;
  v56 = swift_task_alloc(dword_150244C);
  *(_QWORD *)(v0 + 432) = v56;
  *(_QWORD *)v56 = v0;
  *(_QWORD *)(v56 + 8) = sub_D23C88;
  *(_BYTE *)(v56 + 368) = v33 != v64;
  *(_QWORD *)(v56 + 336) = v54;
  *(_QWORD *)(v56 + 344) = v55;
  return swift_task_switch(sub_D287B4, 0, 0);
}

uint64_t sub_D24224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (_QWORD *)*v4;
  v5[7] = v4;
  v5[8] = a1;
  v5[9] = a2;
  v5[10] = a3;
  v5[11] = a4;
  v7 = v5[61];
  v6 = v5[62];
  v5[63] = a1;
  swift_task_dealloc(v6);
  swift_bridgeObjectRelease(v7);
  return swift_task_switch(sub_D24294, 0, 0);
}

uint64_t sub_D24294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  void (*v17)(uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 504);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  if (v1)
  {
    v57 = *(id *)(v0 + 72);
    v58 = *(id *)(v0 + 504);
    v55 = *(id *)(v0 + 88);
    v56 = *(id *)(v0 + 80);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 448));
LABEL_7:
    v7 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD *)(v0 + 368);
    v9 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 336);
    v10 = *(_QWORD *)(v0 + 304);
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 288);
    v12 = *(_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 264);
    v52 = *(_QWORD *)(v0 + 256);
    v53 = *(_QWORD *)(v0 + 232);
    v54 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v11);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v58, v57, v56, v55);
  }
  v2 = *(_QWORD *)(v0 + 480) + 1;
  if (v2 == *(_QWORD *)(v0 + 456))
  {
LABEL_4:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 448));
    if (qword_14F9FE8 != -1)
      swift_once(&qword_14F9FE8, sub_D1B0D0);
    v3 = *(void **)algn_1582338;
    v4 = (void *)qword_1582340;
    v5 = (void *)unk_1582348;
    v58 = (id)qword_1582330;
    v57 = v3;
    v56 = v4;
    v55 = v5;
    goto LABEL_7;
  }
  v16 = &qword_14FA000;
  while (1)
  {
    *(_QWORD *)(v0 + 480) = v2;
    v18 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 448)+ ((*(unsigned __int8 *)(v0 + 580) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 580))+ *(_QWORD *)(v0 + 464) * v2, *(_QWORD *)(v0 + 240));
    v19 = Playlist.Entry.catalogID.getter(v18);
    *(_QWORD *)(v0 + 488) = v20;
    if (v20)
      break;
    if (*v16 != -1)
      swift_once(&qword_14FA000, sub_D24C00);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
    v23 = *(_QWORD *)(v0 + 256);
    v22 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 240);
    v25 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v25, (uint64_t)static Logger.playlistCovers);
    v26 = v21(v23, v22, v24);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = *(_QWORD *)(v0 + 256);
    v32 = *(_QWORD *)(v0 + 240);
    if (v29)
    {
      v33 = swift_slowAlloc(12, -1);
      v34 = v16;
      v35 = swift_slowAlloc(32, -1);
      v59 = v35;
      *(_DWORD *)v33 = 136446210;
      v36 = (char *)Playlist.Entry.description.getter();
      v38 = v37;
      *(_QWORD *)(v33 + 4) = sub_BA95EC(v36, v37, &v59);
      v39 = swift_bridgeObjectRelease(v38);
      v17 = *(void (**)(uint64_t, uint64_t, __n128))(v30 + 8);
      v17(v31, v32, v39);
      _os_log_impl(&dword_0, v27, v28, "No catalogID for Entry=%{public}s", (uint8_t *)v33, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      v40 = v35;
      v16 = v34;
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      v17 = *(void (**)(uint64_t, uint64_t, __n128))(v30 + 8);
      ((void (*)(_QWORD, _QWORD))v17)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    }

    ((void (*)(_QWORD, _QWORD))v17)(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
    v2 = *(_QWORD *)(v0 + 480) + 1;
    if (v2 == *(_QWORD *)(v0 + 456))
      goto LABEL_4;
  }
  v41 = v19;
  v42 = v20;
  v43 = *(_DWORD *)(v0 + 588);
  v44 = *(_DWORD *)(v0 + 584);
  v46 = *(_QWORD *)(v0 + 224);
  v45 = *(_QWORD *)(v0 + 232);
  v47 = *(_QWORD *)(v0 + 216);
  Playlist.Entry.internalItem.getter(v19);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 88))(v45, v47);
  v50 = v48 != v44 && v48 != v43;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  v51 = swift_task_alloc(dword_150244C);
  *(_QWORD *)(v0 + 496) = v51;
  *(_QWORD *)v51 = v0;
  *(_QWORD *)(v51 + 8) = sub_D24224;
  *(_BYTE *)(v51 + 368) = v50;
  *(_QWORD *)(v51 + 336) = v41;
  *(_QWORD *)(v51 + 344) = v42;
  return swift_task_switch(sub_D287B4, 0, 0);
}

uint64_t sub_D246A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[12] = v4;
  v5[13] = a1;
  v5[14] = a2;
  v5[15] = a3;
  v5[16] = a4;
  v6 = v5[69];
  v5[70] = a1;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_D24710, 0, 0);
}

uint64_t sub_D24710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = *(_QWORD *)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 536);

  swift_unknownObjectRelease(v2);
  if (v1)
  {
    v32 = *(id *)(v0 + 112);
    v33 = *(id *)(v0 + 560);
    v30 = *(id *)(v0 + 128);
    v31 = *(id *)(v0 + 120);

LABEL_7:
    v8 = *(_QWORD *)(v0 + 360);
    v7 = *(_QWORD *)(v0 + 368);
    v10 = *(_QWORD *)(v0 + 328);
    v9 = *(_QWORD *)(v0 + 336);
    v11 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v33, v32, v31, v30);
  }
  v3 = *(_QWORD *)(v0 + 528) + 1;
  if (v3 == *(_QWORD *)(v0 + 520))
  {
LABEL_4:

    if (qword_14F9FE8 != -1)
      swift_once(&qword_14F9FE8, sub_D1B0D0);
    v4 = *(void **)algn_1582338;
    v5 = (void *)qword_1582340;
    v6 = (void *)unk_1582348;
    v33 = (id)qword_1582330;
    v32 = v4;
    v31 = v5;
    v30 = v6;
    goto LABEL_7;
  }
  while (1)
  {
    *(_QWORD *)(v0 + 528) = v3;
    v17 = *(void **)(v0 + 512);
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    IndexPath.init(item:section:)(v3, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    v22 = objc_msgSend(v17, "itemAtIndexPath:", isa);
    *(_QWORD *)(v0 + 536) = v22;

    if ((objc_msgSend(v22, "respondsToSelector:", "innermostModelObject") & 1) != 0)
      break;
LABEL_9:
    swift_unknownObjectRelease(v22);
    v3 = *(_QWORD *)(v0 + 528) + 1;
    if (v3 == *(_QWORD *)(v0 + 520))
      goto LABEL_4;
  }
  v23 = objc_msgSend(v22, "innermostModelObject");
  *(_QWORD *)(v0 + 544) = v23;
  objc_opt_self(MPModelSong);
  v24 = swift_dynamicCastObjCClass(v23);
  if (!v24)
  {

    goto LABEL_9;
  }
  v25 = v24;
  v26 = (_QWORD *)swift_task_alloc(dword_1502444);
  *(_QWORD *)(v0 + 552) = v26;
  *v26 = v0;
  v26[1] = sub_D246A8;
  v26[2] = v25;
  return swift_task_switch(sub_D2946C, 0, 0);
}

uint64_t sub_D249D4(void *a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;

  _StringGuts.grow(_:)(71);
  v8._object = (void *)0x8000000001108E20;
  v8._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x72616D697270202CLL;
  v15._object = (void *)0xEB00000000203A79;
  String.append(_:)(v15);
  v16 = a2;
  v17 = objc_msgSend(v16, "description");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x646E6F636573202CLL;
  v22._object = (void *)0xED0000203A797261;
  String.append(_:)(v22);
  v23 = a3;
  v24 = objc_msgSend(v23, "description");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);

  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x616974726574202CLL;
  v29._object = (void *)0xEC000000203A7972;
  String.append(_:)(v29);
  v30 = a4;
  v31 = objc_msgSend(v30, "description");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);

  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return 0;
}

uint64_t sub_D24C00()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.playlistCovers);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.playlistCovers);
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x7473696C79616C50, 0xEE00737265766F43);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.playlistCovers.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14FA000 != -1)
    swift_once(&qword_14FA000, sub_D24C00);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.playlistCovers);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_D24D14(char **a1, uint64_t (*a2)(_QWORD *))
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = sub_D3EFEC((uint64_t)v4);
  v5 = *((_QWORD *)v4 + 2);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = a2(v7);
  *a1 = v4;
  return result;
}

void sub_D24D80(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::Int v15;
  double v16;
  double v17;
  double *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  Swift::Int v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  Swift::Int v30;
  double *v31;
  double v32;
  Swift::Int v33;
  double *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  _QWORD *v110;
  Swift::Int v111;
  Swift::Int v112;
  uint64_t v113;
  double *v114;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v91 = *a1;
      v92 = *a1 + 32;
      v93 = -1;
      v94 = 1;
      while (1)
      {
        v95 = *(double *)(v91 + 32 * v94 + 16);
        v96 = v93;
        v97 = v92;
        do
        {
          if (*(double *)(v97 - 16) >= v95)
            break;
          if (!v91)
            goto LABEL_144;
          v98 = *(_QWORD *)(v97 + 24);
          v99 = *(_OWORD *)v97;
          v100 = *(_OWORD *)(v97 - 16);
          *(_OWORD *)v97 = *(_OWORD *)(v97 - 32);
          *(_OWORD *)(v97 + 16) = v100;
          *(double *)(v97 - 16) = v95;
          *(_QWORD *)(v97 - 8) = v98;
          *(_OWORD *)(v97 - 32) = v99;
          v97 -= 32;
        }
        while (!__CFADD__(v96++, 1));
        ++v94;
        v92 += 32;
        --v93;
        if (v94 == v3)
          return;
      }
    }
    goto LABEL_140;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_139;
  v6 = v4;
  v108 = a1;
  if (v3 <= 1)
  {
    v10 = _swiftEmptyArrayStorage;
    v114 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      v13 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_105;
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502510);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v110 = (_QWORD *)v9;
    v114 = (double *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v109 = *a1 + 80;
  v13 = (char *)_swiftEmptyArrayStorage;
  v111 = v6;
  v112 = v3;
  v113 = v12;
  while (1)
  {
    v15 = v11++;
    if (v11 < v3)
    {
      v16 = *(double *)(v12 + 32 * v11 + 16);
      v17 = *(double *)(v12 + 32 * v15 + 16);
      v11 = v15 + 2;
      if (v15 + 2 < v3)
      {
        v18 = (double *)(v109 + 32 * v15);
        v19 = v16;
        while (1)
        {
          v20 = v19;
          v19 = *v18;
          if (v17 < v16 == v20 >= *v18)
            break;
          ++v11;
          v18 += 4;
          if (v3 == v11)
          {
            v11 = v3;
            break;
          }
        }
      }
      if (v17 < v16)
      {
        if (v11 < v15)
          goto LABEL_141;
        if (v15 < v11)
        {
          v21 = 32 * v11;
          v22 = 32 * v15;
          v23 = v11;
          v24 = v15;
          do
          {
            if (v24 != --v23)
            {
              if (!v12)
                goto LABEL_147;
              v25 = (_OWORD *)(v12 + v22);
              v26 = v12 + v21;
              v27 = *(_OWORD *)(v12 + v22);
              v28 = *(_OWORD *)(v12 + v22 + 16);
              v29 = *(_OWORD *)(v12 + v21 - 16);
              *v25 = *(_OWORD *)(v12 + v21 - 32);
              v25[1] = v29;
              *(_OWORD *)(v26 - 32) = v27;
              *(_OWORD *)(v26 - 16) = v28;
            }
            ++v24;
            v21 -= 32;
            v22 += 32;
          }
          while (v24 < v23);
        }
      }
    }
    if (v11 < v3)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_138;
      if (v11 - v15 < v6)
      {
        v30 = v15 + v6;
        if (__OFADD__(v15, v6))
          goto LABEL_142;
        if (v30 >= v3)
          v30 = v3;
        if (v30 < v15)
          goto LABEL_143;
        if (v11 != v30)
        {
          v31 = (double *)(v12 + 32 * v11);
          do
          {
            v32 = *(double *)(v12 + 32 * v11 + 16);
            v33 = v15;
            v34 = v31;
            do
            {
              if (*(v34 - 2) >= v32)
                break;
              if (!v12)
                goto LABEL_145;
              v35 = *((_QWORD *)v34 + 3);
              v36 = *(_OWORD *)v34;
              v37 = *((_OWORD *)v34 - 1);
              *(_OWORD *)v34 = *((_OWORD *)v34 - 2);
              *((_OWORD *)v34 + 1) = v37;
              *(v34 - 2) = v32;
              *((_QWORD *)v34 - 1) = v35;
              *((_OWORD *)v34 - 2) = v36;
              v34 -= 4;
              ++v33;
            }
            while (v11 != v33);
            ++v11;
            v31 += 4;
          }
          while (v11 != v30);
          v11 = v30;
        }
      }
    }
    if (v11 < v15)
    {
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_D401E8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v39 = *((_QWORD *)v13 + 2);
    v38 = *((_QWORD *)v13 + 3);
    v14 = v39 + 1;
    v12 = v113;
    if (v39 >= v38 >> 1)
    {
      v88 = sub_D401E8((char *)(v38 > 1), v39 + 1, 1, v13);
      v12 = v113;
      v13 = v88;
    }
    *((_QWORD *)v13 + 2) = v14;
    v40 = v13 + 32;
    v41 = &v13[16 * v39 + 32];
    *(_QWORD *)v41 = v15;
    *((_QWORD *)v41 + 1) = v11;
    if (v39)
      break;
    v14 = 1;
LABEL_15:
    v6 = v111;
    v3 = v112;
    if (v11 >= v112)
    {
      v10 = v110;
LABEL_105:
      v90 = v13;
      v110 = v10;
      if (v14 < 2)
        goto LABEL_95;
      v102 = *v108;
      while (1)
      {
        v103 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v102)
          goto LABEL_148;
        v89 = v90;
        v104 = *(_QWORD *)&v90[16 * v103 + 32];
        v105 = *(_QWORD *)&v90[16 * v14 + 24];
        sub_D25B0C((double *)(v102 + 32 * v104), (double *)(v102 + 32 * *(_QWORD *)&v90[16 * v14 + 16]), v102 + 32 * v105, v114);
        if (v1)
          goto LABEL_94;
        if (v105 < v104)
          goto LABEL_135;
        if ((swift_isUniquelyReferenced_nonNull_native(v89) & 1) == 0)
          v89 = sub_D402E0((uint64_t)v89);
        if (v103 >= *((_QWORD *)v89 + 2))
          goto LABEL_136;
        v106 = &v89[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v89 + 2);
        if (v14 > v107)
          goto LABEL_137;
        memmove(&v89[16 * v14 + 16], &v89[16 * v14 + 32], 16 * (v107 - v14));
        v90 = v89;
        *((_QWORD *)v89 + 2) = v107 - 1;
        v14 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_95;
      }
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      return;
    }
  }
  while (1)
  {
    v42 = v14 - 1;
    if (v14 >= 4)
    {
      v47 = &v40[16 * v14];
      v48 = *((_QWORD *)v47 - 8);
      v49 = *((_QWORD *)v47 - 7);
      v53 = __OFSUB__(v49, v48);
      v50 = v49 - v48;
      if (v53)
        goto LABEL_122;
      v52 = *((_QWORD *)v47 - 6);
      v51 = *((_QWORD *)v47 - 5);
      v53 = __OFSUB__(v51, v52);
      v45 = v51 - v52;
      v46 = v53;
      if (v53)
        goto LABEL_123;
      v54 = v14 - 2;
      v55 = &v40[16 * v14 - 32];
      v57 = *(_QWORD *)v55;
      v56 = *((_QWORD *)v55 + 1);
      v53 = __OFSUB__(v56, v57);
      v58 = v56 - v57;
      if (v53)
        goto LABEL_124;
      v53 = __OFADD__(v45, v58);
      v59 = v45 + v58;
      if (v53)
        goto LABEL_126;
      if (v59 >= v50)
      {
        v77 = &v40[16 * v42];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v53 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v53)
          goto LABEL_132;
        v70 = v45 < v80;
        goto LABEL_83;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v71 = *((_QWORD *)v13 + 4);
        v72 = *((_QWORD *)v13 + 5);
        v53 = __OFSUB__(v72, v71);
        v64 = v72 - v71;
        v65 = v53;
        goto LABEL_77;
      }
      v44 = *((_QWORD *)v13 + 4);
      v43 = *((_QWORD *)v13 + 5);
      v53 = __OFSUB__(v43, v44);
      v45 = v43 - v44;
      v46 = v53;
    }
    if ((v46 & 1) != 0)
      goto LABEL_125;
    v54 = v14 - 2;
    v60 = &v40[16 * v14 - 32];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v63 = __OFSUB__(v61, v62);
    v64 = v61 - v62;
    v65 = v63;
    if (v63)
      goto LABEL_127;
    v66 = &v40[16 * v42];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v53 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v53)
      goto LABEL_129;
    if (__OFADD__(v64, v69))
      goto LABEL_131;
    if (v64 + v69 >= v45)
    {
      v70 = v45 < v69;
LABEL_83:
      if (v70)
        v42 = v54;
      goto LABEL_85;
    }
LABEL_77:
    if ((v65 & 1) != 0)
      goto LABEL_128;
    v73 = &v40[16 * v42];
    v75 = *(_QWORD *)v73;
    v74 = *((_QWORD *)v73 + 1);
    v53 = __OFSUB__(v74, v75);
    v76 = v74 - v75;
    if (v53)
      goto LABEL_130;
    if (v76 < v64)
      goto LABEL_15;
LABEL_85:
    v81 = v42 - 1;
    if (v42 - 1 >= v14)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!v12)
      goto LABEL_146;
    v82 = v13;
    v83 = &v40[16 * v81];
    v84 = *(_QWORD *)v83;
    v85 = &v40[16 * v42];
    v86 = *((_QWORD *)v85 + 1);
    sub_D25B0C((double *)(v12 + 32 * *(_QWORD *)v83), (double *)(v12 + 32 * *(_QWORD *)v85), v12 + 32 * v86, v114);
    if (v1)
      break;
    if (v86 < v84)
      goto LABEL_119;
    if (v42 > *((_QWORD *)v82 + 2))
      goto LABEL_120;
    *(_QWORD *)v83 = v84;
    *(_QWORD *)&v40[16 * v81 + 8] = v86;
    v87 = *((_QWORD *)v82 + 2);
    if (v42 >= v87)
      goto LABEL_121;
    v13 = v82;
    v14 = v87 - 1;
    memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
    *((_QWORD *)v82 + 2) = v87 - 1;
    v12 = v113;
    if (v87 <= 2)
      goto LABEL_15;
  }
  v89 = v82;
LABEL_94:
  v90 = v89;
LABEL_95:
  swift_bridgeObjectRelease(v90);
  v110[2] = 0;
  swift_bridgeObjectRelease(v110);
}

void sub_D25418(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  double v20;
  int v21;
  double *v22;
  double v23;
  double v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  _OWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  Swift::Int v40;
  uint64_t v41;
  double v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  _QWORD *v107;
  Swift::Int v108;
  Swift::Int v109;
  uint64_t v110;
  double *v111;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_D25A7C(0, v3, 1, a1);
      return;
    }
    goto LABEL_139;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_138;
  v6 = v4;
  v105 = a1;
  if (v3 <= 1)
  {
    v10 = _swiftEmptyArrayStorage;
    v111 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      v13 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v107 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502510);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v107 = (_QWORD *)v9;
    v111 = (double *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v106 = *a1 + 80;
  v13 = (char *)_swiftEmptyArrayStorage;
  v108 = v6;
  v109 = v3;
  v110 = v12;
  while (1)
  {
    v15 = v11++;
    if (v11 < v3)
    {
      v16 = v12 + 32 * v11;
      v17 = *(double *)(v16 + 8);
      v18 = *(double *)(v16 + 16);
      v19 = v12 + 32 * v15;
      v20 = *(double *)(v19 + 8);
      v21 = *(double *)(v19 + 16) < v18;
      if (v17 != v20)
        v21 = v17 < v20;
      v11 = v15 + 2;
      if (v15 + 2 < v3)
      {
        v22 = (double *)(v106 + 32 * v15);
        while (1)
        {
          v23 = v17;
          v24 = v18;
          v17 = *(v22 - 1);
          v18 = *v22;
          v25 = v24 < *v22;
          if (v17 != v23)
            v25 = v17 < v23;
          if (v21 != v25)
            break;
          ++v11;
          v22 += 4;
          if (v3 == v11)
          {
            v11 = v3;
            break;
          }
        }
      }
      if (v21)
      {
        if (v11 < v15)
          goto LABEL_140;
        if (v15 < v11)
        {
          v26 = 32 * v11;
          v27 = 32 * v15;
          v28 = v11;
          v29 = v15;
          do
          {
            if (v29 != --v28)
            {
              if (!v12)
                goto LABEL_145;
              v30 = (_OWORD *)(v12 + v27);
              v31 = v12 + v26;
              v32 = *(_OWORD *)(v12 + v27);
              v33 = *(_OWORD *)(v12 + v27 + 16);
              v34 = *(_OWORD *)(v12 + v26 - 16);
              *v30 = *(_OWORD *)(v12 + v26 - 32);
              v30[1] = v34;
              *(_OWORD *)(v31 - 32) = v32;
              *(_OWORD *)(v31 - 16) = v33;
            }
            ++v29;
            v26 -= 32;
            v27 += 32;
          }
          while (v29 < v28);
        }
      }
    }
    if (v11 < v3)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_137;
      if (v11 - v15 < v6)
      {
        v35 = v15 + v6;
        if (__OFADD__(v15, v6))
          goto LABEL_141;
        if (v35 >= v3)
          v35 = v3;
        if (v35 < v15)
          goto LABEL_142;
        if (v11 != v35)
        {
          v36 = v12 + 32 * v11;
          do
          {
            v37 = v12 + 32 * v11;
            v38 = *(double *)(v37 + 8);
            v39 = *(double *)(v37 + 16);
            v40 = v15;
            v41 = v36;
            do
            {
              v42 = *(double *)(v41 - 24);
              v43 = *(double *)(v41 - 16) < v39;
              if (v38 != v42)
                v43 = v38 < v42;
              if (!v43)
                break;
              if (!v12)
                goto LABEL_143;
              v44 = *(_QWORD *)v41;
              v45 = *(_QWORD *)(v41 + 24);
              v46 = *(_OWORD *)(v41 - 16);
              *(_OWORD *)v41 = *(_OWORD *)(v41 - 32);
              *(_OWORD *)(v41 + 16) = v46;
              *(double *)(v41 - 24) = v38;
              *(double *)(v41 - 16) = v39;
              *(_QWORD *)(v41 - 8) = v45;
              *(_QWORD *)(v41 - 32) = v44;
              v41 -= 32;
              ++v40;
            }
            while (v11 != v40);
            ++v11;
            v36 += 32;
          }
          while (v11 != v35);
          v11 = v35;
        }
      }
    }
    if (v11 < v15)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_D401E8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v48 = *((_QWORD *)v13 + 2);
    v47 = *((_QWORD *)v13 + 3);
    v14 = v48 + 1;
    v12 = v110;
    if (v48 >= v47 >> 1)
    {
      v96 = sub_D401E8((char *)(v47 > 1), v48 + 1, 1, v13);
      v12 = v110;
      v13 = v96;
    }
    *((_QWORD *)v13 + 2) = v14;
    v49 = v13 + 32;
    v50 = &v13[16 * v48 + 32];
    *(_QWORD *)v50 = v15;
    *((_QWORD *)v50 + 1) = v11;
    if (v48)
      break;
    v14 = 1;
LABEL_15:
    v6 = v108;
    v3 = v109;
    if (v11 >= v109)
    {
      v10 = v107;
LABEL_104:
      v98 = v13;
      v107 = v10;
      if (v14 < 2)
        goto LABEL_101;
      v99 = *v105;
      while (1)
      {
        v100 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v99)
          goto LABEL_146;
        v97 = v98;
        v101 = *(_QWORD *)&v98[16 * v100 + 32];
        v102 = *(_QWORD *)&v98[16 * v14 + 24];
        sub_D25D30((double *)(v99 + 32 * v101), (double *)(v99 + 32 * *(_QWORD *)&v98[16 * v14 + 16]), v99 + 32 * v102, v111);
        if (v1)
          goto LABEL_100;
        if (v102 < v101)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v97) & 1) == 0)
          v97 = sub_D402E0((uint64_t)v97);
        if (v100 >= *((_QWORD *)v97 + 2))
          goto LABEL_135;
        v103 = &v97[16 * v100 + 32];
        *(_QWORD *)v103 = v101;
        *((_QWORD *)v103 + 1) = v102;
        v104 = *((_QWORD *)v97 + 2);
        if (v14 > v104)
          goto LABEL_136;
        memmove(&v97[16 * v14 + 16], &v97[16 * v14 + 32], 16 * (v104 - v14));
        v98 = v97;
        *((_QWORD *)v97 + 2) = v104 - 1;
        v14 = v104 - 1;
        if (v104 <= 2)
          goto LABEL_101;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      return;
    }
  }
  while (1)
  {
    v51 = v14 - 1;
    if (v14 >= 4)
    {
      v56 = &v49[16 * v14];
      v57 = *((_QWORD *)v56 - 8);
      v58 = *((_QWORD *)v56 - 7);
      v62 = __OFSUB__(v58, v57);
      v59 = v58 - v57;
      if (v62)
        goto LABEL_121;
      v61 = *((_QWORD *)v56 - 6);
      v60 = *((_QWORD *)v56 - 5);
      v62 = __OFSUB__(v60, v61);
      v54 = v60 - v61;
      v55 = v62;
      if (v62)
        goto LABEL_122;
      v63 = v14 - 2;
      v64 = &v49[16 * v14 - 32];
      v66 = *(_QWORD *)v64;
      v65 = *((_QWORD *)v64 + 1);
      v62 = __OFSUB__(v65, v66);
      v67 = v65 - v66;
      if (v62)
        goto LABEL_123;
      v62 = __OFADD__(v54, v67);
      v68 = v54 + v67;
      if (v62)
        goto LABEL_125;
      if (v68 >= v59)
      {
        v86 = &v49[16 * v51];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v62 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v62)
          goto LABEL_131;
        v79 = v54 < v89;
        goto LABEL_89;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v80 = *((_QWORD *)v13 + 4);
        v81 = *((_QWORD *)v13 + 5);
        v62 = __OFSUB__(v81, v80);
        v73 = v81 - v80;
        v74 = v62;
        goto LABEL_83;
      }
      v53 = *((_QWORD *)v13 + 4);
      v52 = *((_QWORD *)v13 + 5);
      v62 = __OFSUB__(v52, v53);
      v54 = v52 - v53;
      v55 = v62;
    }
    if ((v55 & 1) != 0)
      goto LABEL_124;
    v63 = v14 - 2;
    v69 = &v49[16 * v14 - 32];
    v71 = *(_QWORD *)v69;
    v70 = *((_QWORD *)v69 + 1);
    v72 = __OFSUB__(v70, v71);
    v73 = v70 - v71;
    v74 = v72;
    if (v72)
      goto LABEL_126;
    v75 = &v49[16 * v51];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v62 = __OFSUB__(v76, v77);
    v78 = v76 - v77;
    if (v62)
      goto LABEL_128;
    if (__OFADD__(v73, v78))
      goto LABEL_130;
    if (v73 + v78 >= v54)
    {
      v79 = v54 < v78;
LABEL_89:
      if (v79)
        v51 = v63;
      goto LABEL_91;
    }
LABEL_83:
    if ((v74 & 1) != 0)
      goto LABEL_127;
    v82 = &v49[16 * v51];
    v84 = *(_QWORD *)v82;
    v83 = *((_QWORD *)v82 + 1);
    v62 = __OFSUB__(v83, v84);
    v85 = v83 - v84;
    if (v62)
      goto LABEL_129;
    if (v85 < v73)
      goto LABEL_15;
LABEL_91:
    v90 = v51 - 1;
    if (v51 - 1 >= v14)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v12)
      goto LABEL_144;
    v91 = &v49[16 * v90];
    v92 = *(_QWORD *)v91;
    v93 = &v49[16 * v51];
    v94 = *((_QWORD *)v93 + 1);
    sub_D25D30((double *)(v12 + 32 * *(_QWORD *)v91), (double *)(v12 + 32 * *(_QWORD *)v93), v12 + 32 * v94, v111);
    if (v1)
      break;
    if (v94 < v92)
      goto LABEL_118;
    if (v51 > *((_QWORD *)v13 + 2))
      goto LABEL_119;
    *(_QWORD *)v91 = v92;
    *(_QWORD *)&v49[16 * v90 + 8] = v94;
    v95 = *((_QWORD *)v13 + 2);
    if (v51 >= v95)
      goto LABEL_120;
    v14 = v95 - 1;
    memmove(&v49[16 * v51], v93 + 16, 16 * (v95 - 1 - v51));
    *((_QWORD *)v13 + 2) = v95 - 1;
    v12 = v110;
    if (v95 <= 2)
      goto LABEL_15;
  }
  v97 = v13;
LABEL_100:
  v98 = v97;
LABEL_101:
  swift_bridgeObjectRelease(v98);
  v107[2] = 0;
  swift_bridgeObjectRelease(v107);
}

uint64_t sub_D25A7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3;
LABEL_5:
    v6 = v4 + 32 * a3;
    v7 = *(double *)(v6 + 8);
    v8 = *(double *)(v6 + 16);
    v9 = result;
    v10 = v5;
    while (1)
    {
      v11 = *(double *)(v10 - 24);
      v12 = *(double *)(v10 - 16) < v8;
      if (v7 != v11)
        v12 = v7 < v11;
      if (!v12)
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      v13 = *(_QWORD *)v10;
      v14 = *(_QWORD *)(v10 + 24);
      v15 = *(_OWORD *)(v10 - 16);
      *(_OWORD *)v10 = *(_OWORD *)(v10 - 32);
      *(_OWORD *)(v10 + 16) = v15;
      *(double *)(v10 - 24) = v7;
      *(double *)(v10 - 16) = v8;
      *(_QWORD *)(v10 - 8) = v14;
      *(_QWORD *)(v10 - 32) = v13;
      v10 -= 32;
      if (a3 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_D25B0C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  __int128 v18;
  double *v19;
  double *v20;
  double *v21;
  BOOL v22;
  __int128 v23;
  int64_t v24;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[4 * v13] <= a4)
      memmove(a4, __src, 32 * v13);
    v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_43;
    v19 = (double *)(a3 - 32);
    while (1)
    {
      v20 = v19 + 4;
      if (*(v6 - 2) >= *(v14 - 2))
      {
        v21 = v14 - 4;
        if (v20 != v14)
        {
          v14 -= 4;
          goto LABEL_40;
        }
        v22 = v19 >= v14;
        v14 -= 4;
        if (v22)
          goto LABEL_40;
      }
      else
      {
        v21 = v6 - 4;
        if (v20 != v6)
        {
          v6 -= 4;
LABEL_40:
          v23 = *((_OWORD *)v21 + 1);
          *(_OWORD *)v19 = *(_OWORD *)v21;
          *((_OWORD *)v19 + 1) = v23;
          goto LABEL_41;
        }
        v22 = v19 >= v6;
        v6 -= 4;
        if (v22)
          goto LABEL_40;
      }
LABEL_41:
      if (v6 > v7)
      {
        v19 -= 4;
        if (v14 > v4)
          continue;
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4)
    memmove(a4, __dst, 32 * v10);
  v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      if (v4[2] >= v6[2])
      {
        v17 = v4 + 4;
        v16 = v4;
        v15 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v17)
            goto LABEL_20;
        }
        else
        {
          v4 += 4;
        }
      }
      else
      {
        v15 = v6 + 4;
        v16 = v6;
        if (v7 == v6 && v7 < v15)
          goto LABEL_20;
      }
      v18 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v16;
      *((_OWORD *)v7 + 1) = v18;
LABEL_20:
      v7 += 4;
      if (v4 < v14)
      {
        v6 = v15;
        if ((unint64_t)v15 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_43:
  v24 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0x1FuLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v24 & 0xFFFFFFFFFFFFFFE0)))
    memmove(v6, v4, 32 * (v24 >> 5));
  return 1;
}

uint64_t sub_D25D30(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  _BOOL4 v17;
  double *v18;
  double *v19;
  double *v20;
  __int128 v21;
  double *v22;
  double *v23;
  double v24;
  double v25;
  _BOOL4 v26;
  double *v27;
  BOOL v28;
  __int128 v29;
  int64_t v30;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[4 * v13] <= a4)
      memmove(a4, __src, 32 * v13);
    v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_47;
    v22 = (double *)(a3 - 32);
    while (1)
    {
      v23 = v22 + 4;
      v24 = *(v14 - 3);
      v25 = *(v6 - 3);
      v26 = *(v6 - 2) < *(v14 - 2);
      if (v24 != v25)
        v26 = v24 < v25;
      if (v26)
      {
        v27 = v6 - 4;
        if (v23 != v6)
        {
          v6 -= 4;
LABEL_44:
          v29 = *((_OWORD *)v27 + 1);
          *(_OWORD *)v22 = *(_OWORD *)v27;
          *((_OWORD *)v22 + 1) = v29;
          goto LABEL_45;
        }
        v28 = v22 >= v6;
        v6 -= 4;
        if (v28)
          goto LABEL_44;
      }
      else
      {
        v27 = v14 - 4;
        if (v23 != v14)
        {
          v14 -= 4;
          goto LABEL_44;
        }
        v28 = v22 >= v14;
        v14 -= 4;
        if (v28)
          goto LABEL_44;
      }
LABEL_45:
      if (v6 > v7)
      {
        v22 -= 4;
        if (v14 > v4)
          continue;
      }
      goto LABEL_47;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4)
    memmove(a4, __dst, 32 * v10);
  v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      v15 = v6[1];
      v16 = v4[1];
      v17 = v4[2] < v6[2];
      if (v15 != v16)
        v17 = v15 < v16;
      if (v17)
      {
        v18 = v6 + 4;
        v19 = v6;
        if (v7 == v6 && v7 < v18)
          goto LABEL_22;
      }
      else
      {
        v20 = v4 + 4;
        v19 = v4;
        v18 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v20)
            goto LABEL_22;
        }
        else
        {
          v4 += 4;
        }
      }
      v21 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v19;
      *((_OWORD *)v7 + 1) = v21;
LABEL_22:
      v7 += 4;
      if (v4 < v14)
      {
        v6 = v18;
        if ((unint64_t)v18 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_47:
  v30 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0x1FuLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v30 & 0xFFFFFFFFFFFFFFE0)))
    memmove(v6, v4, 32 * (v30 >> 5));
  return 1;
}

uint64_t _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = UIColor.rgba.getter();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FCF50);
  v6 = swift_allocObject(v5, 152, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1060460;
  v7 = lround(v0 * 255.0);
  *(_QWORD *)(v6 + 56) = &type metadata for Int;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = lround(v2 * 255.0);
  *(_QWORD *)(v6 + 96) = &type metadata for Int;
  *(_QWORD *)(v6 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 72) = v8;
  v9 = lround(v4 * 255.0);
  *(_QWORD *)(v6 + 136) = &type metadata for Int;
  *(_QWORD *)(v6 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 112) = v9;
  return String.init(format:_:)(0x323025586C323025, 0xEF586C323025586CLL, v6);
}

uint64_t _s9MusicCore14PlaylistCoversO6SourceO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char v23;
  void *v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaylistCovers.Source(0);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v32 - v11);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502518);
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)&v18[*(int *)(v19 + 48)];
  sub_2B7194(a1, (uint64_t)v18);
  sub_2B7194(v33, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2B7194((uint64_t)v18, (uint64_t)v12);
      v22 = *v12;
      if (swift_getEnumCaseMultiPayload(v20, v7) == 1)
      {
        v23 = sub_C3F434(v22, *v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        sub_D29B5C((uint64_t)v18);
        return v23 & 1;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2B7194((uint64_t)v18, (uint64_t)v9);
      v24 = *v9;
      if (swift_getEnumCaseMultiPayload(v20, v7) == 2)
      {
        v25 = (void *)*v20;
        sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
        v23 = static NSObject.== infix(_:_:)(v24, v25);

        goto LABEL_13;
      }

    }
  }
  else
  {
    sub_2B7194((uint64_t)v18, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload(v20, v7))
    {
      v26 = v20;
      v27 = v3;
      (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v6, v26, v3);
      v28 = type metadata accessor for Track(0);
      v29 = sub_4DD24((unint64_t *)&unk_1502520, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
      v23 = static MusicItemCollection<>.== infix(_:_:)(v15, v6, v28, &protocol witness table for Track, v29);
      v30 = *(void (**)(char *, uint64_t))(v4 + 8);
      v30(v6, v27);
      v30(v15, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_56024((uint64_t)v18, &qword_1502518);
  v23 = 0;
  return v23 & 1;
}

char *sub_D26348(char *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  char *v5;
  float64x2_t *v6;
  unint64_t v7;
  float64x2_t *v8;
  float64x2_t v9;
  float64x2_t v10;
  uint64_t v11;
  float64x2_t *v12;
  unint64_t v13;
  unint64_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t *v17;
  float64x2_t v18;
  float64x2_t v19;

  v2 = *((_QWORD *)result + 2);
  if (v2)
  {
    v4 = 0;
    v5 = result + 32;
    v6 = (float64x2_t *)(a2 + 32);
    do
    {
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      while (1)
      {
        if (v4 == v7)
        {
          __break(1u);
          return result;
        }
        v8 = (float64x2_t *)&v5[32 * v4];
        v9 = *v8;
        v10 = v8[1];
        ++v4;
        v11 = *(_QWORD *)(a2 + 16);
        if (!v11)
          break;
        v12 = v6;
        while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, *v12), (int32x4_t)vceqq_f64(v10, v12[1]))), 0xFuLL))) & 1) == 0)
        {
          v12 += 2;
          if (!--v11)
            goto LABEL_14;
        }
        if (v4 == v2)
          return (char *)_swiftEmptyArrayStorage;
      }
LABEL_14:
      v18 = v10;
      v19 = v9;
      result = (char *)swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_C05910(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      v16 = v18;
      v15 = v19;
      if (v14 >= v13 >> 1)
      {
        result = sub_C05910((char *)(v13 > 1), v14 + 1, 1);
        v16 = v18;
        v15 = v19;
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      v17 = (float64x2_t *)&_swiftEmptyArrayStorage[4 * v14];
      v17[2] = v15;
      v17[3] = v16;
    }
    while (v4 != v2);
  }
  return (char *)_swiftEmptyArrayStorage;
}

id _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for NSScanner.NumberRepresentation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone((Class)NSScanner);
  swift_bridgeObjectRetain();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithString:", v9, swift_bridgeObjectRelease(a2).n128_f64[0]);

  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for NSScanner.NumberRepresentation.hexadecimal(_:), v4);
  v11 = NSScanner.scanUInt64(representation:)(v7);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v13 & 1) == 0)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      v14 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", (double)BYTE2(v11) / 255.0, (double)BYTE1(v11) / 255.0, (double)v11 / 255.0, 1.0);

      return v14;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_14FA000 != -1)
LABEL_11:
    swift_once(&qword_14FA000, sub_D24C00);
  v15 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v15, (uint64_t)static Logger.playlistCovers);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v23 = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_BA95EC(a1, a2, &v23);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl(&dword_0, v17, v18, "Failed to decode hexadecimal string representation=%{public}s as UInt64.", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }

  return 0;
}

uint64_t type metadata accessor for PlaylistCovers.Source(uint64_t a1)
{
  uint64_t result;

  result = qword_15024C8;
  if (!qword_15024C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistCovers.Source);
  return result;
}

id sub_D267B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v19;
  id v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D29E38(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_56024(a1, &qword_14FEDF0);
    sub_56024((uint64_t)v4, &qword_14FEDF0);
    return 0;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = Artwork.backgroundColor.getter(v9);
  if (!v10)
  {
LABEL_11:
    sub_56024(a1, &qword_14FEDF0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v11 = (void *)v10;
  v12 = Artwork.primaryTextColor.getter();
  if (!v12)
  {

    goto LABEL_11;
  }
  v13 = (void *)v12;
  v14 = (void *)Artwork.secondaryTextColor.getter();
  if (!v14)
  {

    sub_56024(a1, &qword_14FEDF0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v15 = (void *)Artwork.tertiaryTextColor.getter();
  if (!v15)
  {

    goto LABEL_11;
  }
  v20 = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v11);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v13);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v14);
  v19 = v14;
  v17 = objc_allocWithZone((Class)UIColor);
  objc_msgSend(v17, "initWithCGColor:", v20);

  sub_56024(a1, &qword_14FEDF0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

uint64_t sub_D26A2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_BYTE *)(v3 + 416) = a3;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB158);
  *(_QWORD *)(v3 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC5F0);
  *(_QWORD *)(v3 + 104) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  *(_QWORD *)(v3 + 128) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9D0);
  *(_QWORD *)(v3 + 152) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 160) = v10;
  *(_QWORD *)(v3 + 168) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC9D8);
  *(_QWORD *)(v3 + 176) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 184) = v12;
  *(_QWORD *)(v3 + 192) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v3 + 200) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v3 + 208) = v14;
  *(_QWORD *)(v3 + 216) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PreviewAsset(0);
  *(_QWORD *)(v3 + 224) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v3 + 232) = v16;
  *(_QWORD *)(v3 + 240) = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 248) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 256) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 264) = swift_task_alloc(v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB150);
  *(_QWORD *)(v3 + 272) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC610);
  *(_QWORD *)(v3 + 280) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v3 + 288) = v20;
  *(_QWORD *)(v3 + 296) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v3 + 304) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v3 + 312) = v22;
  *(_QWORD *)(v3 + 320) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC978);
  *(_QWORD *)(v3 + 328) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v3 + 336) = v24;
  *(_QWORD *)(v3 + 344) = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FC980);
  *(_QWORD *)(v3 + 352) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v3 + 360) = v26;
  *(_QWORD *)(v3 + 368) = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D26C98, 0, 0);
}

uint64_t sub_D26C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  if (qword_14FA000 != -1)
    swift_once(&qword_14FA000, sub_D24C00);
  v1 = *(_QWORD *)(v0 + 88);
  v2 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 376) = __swift_project_value_buffer(v2, (uint64_t)static Logger.playlistCovers);
  v3 = swift_bridgeObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(char **)(v0 + 88);
  if (v6)
  {
    v8 = *(char **)(v0 + 80);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v8, v7, &v26);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl(&dword_0, v4, v5, "Performing Media API request for song with catalogID=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 88), 2);
  }

  v12 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  if (*(_BYTE *)(v0 + 416) == 1)
  {
    v13 = *(_QWORD *)(v0 + 304);
    KeyPath = swift_getKeyPath(&unk_10A45D0);
    *(_QWORD *)(v0 + 48) = v12;
    *(_QWORD *)(v0 + 56) = v11;
    swift_bridgeObjectRetain();
    v15 = String.init<A>(_:)(v0 + 48, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 64) = MusicItemID.init(rawValue:)(v15);
    *(_QWORD *)(v0 + 72) = v16;
    v17 = sub_4DD24(&qword_14FC988, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 64, v13, &protocol witness table for MusicVideo, v17);
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 384) = v18;
    *v18 = v0;
    v18[1] = sub_D26FBC;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 128);
    v21 = swift_getKeyPath(&off_10A45A8);
    *(_QWORD *)(v0 + 16) = v12;
    *(_QWORD *)(v0 + 24) = v11;
    swift_bridgeObjectRetain();
    v22 = String.init<A>(_:)(v0 + 16, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    *(_QWORD *)(v0 + 32) = MusicItemID.init(rawValue:)(v22);
    *(_QWORD *)(v0 + 40) = v23;
    v24 = sub_4DD24(&qword_14FC9E0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v21, v0 + 32, v20, &protocol witness table for Song, v24);
    v25 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 400) = v25;
    *v25 = v0;
    v25[1] = sub_D276AC;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  }
}

uint64_t sub_D26FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_D27A54;
  else
    v3 = sub_D27020;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_D27020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(_QWORD, unint64_t, _QWORD);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 328));
  sub_BE3FC4(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    sub_56024(*(_QWORD *)(v0 + 272), &qword_14FB150);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 368);
    v14 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 328);
    v16 = *(_QWORD *)(v0 + 336);
    v18 = *(char **)(v0 + 88);
    if (v11)
    {
      v106 = *(_QWORD *)(v0 + 360);
      v19 = *(char **)(v0 + 80);
      v102 = *(_QWORD *)(v0 + 352);
      v20 = swift_slowAlloc(12, -1);
      v99 = v12;
      v21 = swift_slowAlloc(32, -1);
      v110 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v20 + 4) = sub_BA95EC(v19, v18, &v110);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl(&dword_0, v9, v10, "Failed to fetch music video from Media API with catalogID=%{public}s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v99, v102);
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    }
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v0 + 264);
  v23 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 32))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 304));
  MusicVideo.artwork.getter(v23);
  v24 = sub_D267B0(v22);
  if (!v24)
  {
    v34 = MusicVideo.previewAssets.getter();
    if (v34)
    {
      v97 = v34;
      v36 = *(_QWORD *)(v34 + 16);
      if (v36)
      {
        v37 = *(_QWORD *)(v0 + 232);
        v38 = *(_QWORD *)(v0 + 208);
        v39 = v34 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
        v40 = *(_QWORD *)(v37 + 72);
        v103 = v40;
        v107 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v37 + 16);
        v100 = v37;
        do
        {
          v43 = *(_QWORD *)(v0 + 248);
          v42 = *(_QWORD *)(v0 + 256);
          v44 = *(_QWORD *)(v0 + 200);
          v45 = v107(*(_QWORD *)(v0 + 240), v39, *(_QWORD *)(v0 + 224));
          PreviewAsset.artwork.getter(v45);
          sub_D29E38(v42, v43);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v43, 1, v44) == 1)
          {
            v41 = *(_QWORD *)(v0 + 248);
            sub_56024(*(_QWORD *)(v0 + 256), &qword_14FEDF0);
            sub_56024(v41, &qword_14FEDF0);
          }
          else
          {
            v46 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v38 + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 200));
            v47 = Artwork.backgroundColor.getter(v46);
            if (v47)
            {
              v48 = (void *)v47;
              v49 = Artwork.primaryTextColor.getter();
              if (v49)
              {
                v50 = (void *)v49;
                v51 = Artwork.secondaryTextColor.getter();
                if (v51)
                {
                  v52 = (void *)v51;
                  v53 = Artwork.tertiaryTextColor.getter();
                  if (v53)
                  {
                    v78 = (void *)v53;
                    v109 = *(_QWORD *)(v0 + 368);
                    v96 = *(_QWORD *)(v0 + 360);
                    v105 = *(_QWORD *)(v0 + 352);
                    v79 = *(_QWORD *)(v0 + 336);
                    v89 = *(_QWORD *)(v0 + 328);
                    v90 = *(_QWORD *)(v0 + 344);
                    v80 = *(_QWORD *)(v0 + 312);
                    v87 = *(_QWORD *)(v0 + 304);
                    v88 = *(_QWORD *)(v0 + 320);
                    v85 = *(_QWORD *)(v0 + 224);
                    v86 = *(_QWORD *)(v0 + 240);
                    v84 = *(_QWORD *)(v0 + 216);
                    v82 = *(_QWORD *)(v0 + 256);
                    v83 = *(_QWORD *)(v0 + 200);
                    v94 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v48);
                    v93 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v50);
                    v92 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v52);
                    v91 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v78);

                    sub_56024(v82, &qword_14FEDF0);
                    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v84, v83);
                    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v86, v85);
                    v81 = swift_bridgeObjectRelease(v97);
                    (*(void (**)(uint64_t, uint64_t, __n128))(v80 + 8))(v88, v87, v81);
                    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v90, v89);
                    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v109, v105);
                    goto LABEL_26;
                  }
                  v54 = *(_QWORD *)(v0 + 256);
                  v55 = *(_QWORD *)(v0 + 216);
                  v56 = *(_QWORD *)(v0 + 200);

                  sub_56024(v54, &qword_14FEDF0);
                  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v55, v56);
                  v37 = v100;
                  goto LABEL_22;
                }
                v59 = *(_QWORD *)(v0 + 256);
                v60 = *(_QWORD *)(v0 + 216);
                v61 = *(_QWORD *)(v0 + 200);

              }
              else
              {
                v59 = *(_QWORD *)(v0 + 256);
                v60 = *(_QWORD *)(v0 + 216);
                v61 = *(_QWORD *)(v0 + 200);
              }

              sub_56024(v59, &qword_14FEDF0);
              (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v60, v61);
LABEL_22:
              v40 = v103;
              goto LABEL_11;
            }
            v57 = *(_QWORD *)(v0 + 216);
            v58 = *(_QWORD *)(v0 + 200);
            sub_56024(*(_QWORD *)(v0 + 256), &qword_14FEDF0);
            (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v57, v58);
          }
LABEL_11:
          (*(void (**)(_QWORD, _QWORD))(v37 + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
          v39 += v40;
          --v36;
        }
        while (v36);
      }
      v35 = swift_bridgeObjectRelease(v97);
    }
    v63 = *(_QWORD *)(v0 + 360);
    v62 = *(_QWORD *)(v0 + 368);
    v65 = *(_QWORD *)(v0 + 344);
    v64 = *(_QWORD *)(v0 + 352);
    v66 = *(_QWORD *)(v0 + 328);
    v67 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304), v35);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
LABEL_25:
    v93 = 0;
    v94 = 0;
    v91 = 0;
    v92 = 0;
    goto LABEL_26;
  }
  v29 = *(_QWORD *)(v0 + 360);
  v28 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 344);
  v30 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  v93 = v25;
  v94 = v24;
  v91 = v27;
  v92 = v26;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
LABEL_26:
  v68 = *(_QWORD *)(v0 + 344);
  v69 = *(_QWORD *)(v0 + 320);
  v70 = *(_QWORD *)(v0 + 296);
  v72 = *(_QWORD *)(v0 + 264);
  v71 = *(_QWORD *)(v0 + 272);
  v74 = *(_QWORD *)(v0 + 248);
  v73 = *(_QWORD *)(v0 + 256);
  v75 = *(_QWORD *)(v0 + 240);
  v76 = *(_QWORD *)(v0 + 216);
  v95 = *(_QWORD *)(v0 + 192);
  v98 = *(_QWORD *)(v0 + 168);
  v101 = *(_QWORD *)(v0 + 144);
  v104 = *(_QWORD *)(v0 + 120);
  v108 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v101);
  swift_task_dealloc(v104);
  swift_task_dealloc(v108);
  return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v94, v93, v92, v91);
}

uint64_t sub_D276AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_D27D38;
  else
    v3 = sub_D27710;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_D27710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 152));
  sub_BE3FFC(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    sub_56024(*(_QWORD *)(v0 + 96), &qword_14FB158);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 160);
    v18 = *(char **)(v0 + 88);
    if (v11)
    {
      v56 = *(_QWORD *)(v0 + 184);
      v19 = *(char **)(v0 + 80);
      v54 = *(_QWORD *)(v0 + 176);
      v20 = swift_slowAlloc(12, -1);
      v52 = v12;
      v21 = swift_slowAlloc(32, -1);
      v58 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v20 + 4) = sub_BA95EC(v19, v18, &v58);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl(&dword_0, v9, v10, "Failed to fetch song from Media API with catalogID=%{public}s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v52, v54);
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    }
    v55 = 0;
    v57 = 0;
    v51 = 0;
    v53 = 0;
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 32))(v28, *(_QWORD *)(v0 + 96), v29);
    _s8MusicKit4SongV0A11ApplicationE12storyArtworkAA0F0VSgvg_0();
    v30 = sub_D267B0(v22);
    v55 = v31;
    v57 = v30;
    v51 = v33;
    v53 = v32;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v49, v47);
  }
  v34 = *(_QWORD *)(v0 + 344);
  v35 = *(_QWORD *)(v0 + 320);
  v36 = *(_QWORD *)(v0 + 296);
  v38 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 256);
  v41 = *(_QWORD *)(v0 + 240);
  v42 = *(_QWORD *)(v0 + 216);
  v44 = *(_QWORD *)(v0 + 192);
  v45 = *(_QWORD *)(v0 + 168);
  v46 = *(_QWORD *)(v0 + 144);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v0 + 8))(v57, v55, v53, v51);
}

uint64_t sub_D27A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 392);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 352);
  v10 = *(char **)(v0 + 88);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 368);
    v11 = *(char **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 352);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_BA95EC(v11, v10, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v12 + 14) = v15;
    *v13 = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v3, v4, "Failed to fetch colors for music video from Media API with catalogID=%{public}s: %@", (uint8_t *)v12, 0x16u);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v13, 1, v16);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v30);
  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
}

uint64_t sub_D27D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 408);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(char **)(v0 + 88);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 192);
    v11 = *(char **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 176);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_BA95EC(v11, v10, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v12 + 14) = v15;
    *v13 = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v3, v4, "Failed to fetch colors for song from Media API with catalogID=%{public}s: %@", (uint8_t *)v12, 0x16u);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v13, 1, v16);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v30);
  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
}

void sub_D2801C(char *a1)
{
  char *v1;
  uint64_t v2;
  double *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  double *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  char *v26;

  v26 = a1;
  swift_bridgeObjectRetain();
  sub_D24D14(&v26, (uint64_t (*)(_QWORD *))sub_D25418);
  v1 = v26;
  v2 = *((_QWORD *)v26 + 2);
  if (v2)
  {
    swift_retain(v26);
    v3 = (double *)(v1 + 48);
    v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (*v3 < 0.5)
      {
        v25 = *(_OWORD *)v3;
        v24 = *((_OWORD *)v3 - 1);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
        v26 = v4;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_C05910(0, *((_QWORD *)v4 + 2) + 1, 1);
          v4 = v26;
        }
        v6 = *((_QWORD *)v4 + 2);
        v5 = *((_QWORD *)v4 + 3);
        v7 = v25;
        if (v6 >= v5 >> 1)
        {
          sub_C05910((char *)(v5 > 1), v6 + 1, 1);
          v7 = v25;
          v4 = v26;
        }
        *((_QWORD *)v4 + 2) = v6 + 1;
        v8 = &v4[32 * v6];
        *((_OWORD *)v8 + 2) = v24;
        *((_OWORD *)v8 + 3) = v7;
      }
      v3 += 4;
      --v2;
    }
    while (v2);
    swift_release(v1);
  }
  else
  {
    v4 = (char *)_swiftEmptyArrayStorage;
  }
  v26 = v4;
  swift_retain(v4);
  sub_D24D14(&v26, (uint64_t (*)(_QWORD *))sub_D24D80);
  swift_release(v4);
  v10 = v26;
  swift_retain(v26);
  v11 = sub_D26348(v1, (uint64_t)v10);
  swift_release(v1);
  swift_release(v10);
  v26 = v11;
  sub_C18C1C((uint64_t)v10);
  v12 = v26;
  v13 = *((_QWORD *)v26 + 2);
  if (!v13)
  {
    swift_bridgeObjectRelease(v26);
    v18 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0)
      goto LABEL_16;
LABEL_23:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(1, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(2, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(3, v18);
    goto LABEL_21;
  }
  v26 = (char *)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v13);
  v14 = (double *)(v12 + 56);
  do
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithHue:saturation:brightness:alpha:", *(v14 - 3), *(v14 - 2), *(v14 - 1), *v14);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v16 = *((_QWORD *)v26 + 2);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
    v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
    specialized ContiguousArray._endMutation()(v17);
    v14 += 4;
    --v13;
  }
  while (v13);
  v18 = (unint64_t)v26;
  swift_bridgeObjectRelease(v12);
  if ((v18 & 0xC000000000000001) != 0)
    goto LABEL_23;
LABEL_16:
  v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
  if (!v19)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v19 == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v19 < 3)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v19 != 3)
  {
    v20 = *(void **)(v18 + 40);
    v21 = *(void **)(v18 + 48);
    v22 = *(void **)(v18 + 56);
    *(id *)(v18 + 32);
    v20;
    v21;
    v23 = v22;
LABEL_21:
    swift_bridgeObjectRelease(v18);
    return;
  }
LABEL_27:
  __break(1u);
  swift_release(v18);
  __break(1u);
  swift_release(v26);
  __break(1u);
}

uint64_t sub_D2834C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, double a18)
{
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v33;

  v21 = a6 + 0.3;
  if (a6 + 0.3 > 1.0)
    v21 = 1.0;
  v33 = v21;
  if (a7 + 0.2 <= 1.0)
    v22 = a7 + 0.2;
  else
    v22 = 1.0;
  if (a2 + 0.5 <= 1.0)
    v23 = a2 + 0.5;
  else
    v23 = 1.0;
  if (a3 + 0.2 <= 1.0)
    v24 = a3 + 0.2;
  else
    v24 = 1.0;
  v25 = -0.5;
  if (a8 < 0.5)
    v25 = 0.5;
  v26 = v25 + a8;
  if (a18 + 0.8 <= 1.0)
    v27 = a18 + 0.8;
  else
    v27 = 1.0;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEF0);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1060470;
  *(double *)(v29 + 32) = a1;
  *(double *)(v29 + 40) = a2;
  *(double *)(v29 + 48) = a3;
  *(double *)(v29 + 56) = a4;
  *(double *)(v29 + 64) = a5;
  *(double *)(v29 + 72) = v33;
  *(double *)(v29 + 80) = v22;
  *(_QWORD *)(v29 + 88) = 0x3FF0000000000000;
  *(double *)(v29 + 96) = a1;
  *(double *)(v29 + 104) = v23;
  *(double *)(v29 + 112) = v24;
  *(_QWORD *)(v29 + 120) = 0x3FF0000000000000;
  *(double *)(v29 + 128) = v26;
  *(_QWORD *)(v29 + 136) = a17;
  *(double *)(v29 + 144) = v27;
  *(_QWORD *)(v29 + 152) = 0x3FF0000000000000;
  sub_D2801C((char *)v29);
  v31 = v30;
  swift_bridgeObjectRelease(v29);
  return v31;
}

uint64_t sub_D284C0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, double a17, uint64_t a18, uint64_t a19, double a20,uint64_t a21)
{
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a6 + 0.1 <= 1.0)
    v25 = a6 + 0.1;
  else
    v25 = 1.0;
  if (a17 + 0.4 <= 1.0)
    v26 = a17 + 0.4;
  else
    v26 = 1.0;
  if (a20 + -0.2 < 0.0)
    v27 = 0.0;
  else
    v27 = a20 + -0.2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEF0);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1060470;
  *(double *)(v29 + 32) = a1;
  *(double *)(v29 + 40) = a2;
  *(double *)(v29 + 48) = a3;
  *(double *)(v29 + 56) = a4;
  *(double *)(v29 + 64) = a5;
  *(double *)(v29 + 72) = v25;
  *(double *)(v29 + 80) = a7;
  *(_QWORD *)(v29 + 88) = 0x3FF0000000000000;
  *(double *)(v29 + 96) = a8;
  *(double *)(v29 + 104) = v26;
  *(_QWORD *)(v29 + 112) = a18;
  *(_QWORD *)(v29 + 120) = 0x3FF0000000000000;
  *(_QWORD *)(v29 + 128) = a19;
  *(double *)(v29 + 136) = v27;
  *(_QWORD *)(v29 + 144) = a21;
  *(_QWORD *)(v29 + 152) = 0x3FF0000000000000;
  sub_D2801C((char *)v29);
  v31 = v30;
  swift_bridgeObjectRelease(v29);
  return v31;
}

uint64_t sub_D28620(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, double a17, double a18, uint64_t a19, double a20,double a21)
{
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a6 + 0.2;
  if (v23 <= 1.0)
    v24 = v23;
  else
    v24 = 1.0;
  v25 = a7 + 0.1;
  if (v25 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  if (a17 + 0.1 <= 1.0)
    v27 = a17 + 0.1;
  else
    v27 = 1.0;
  if (a18 + 0.2 <= 1.0)
    v28 = a18 + 0.2;
  else
    v28 = 1.0;
  if (a20 + 0.2 <= 1.0)
    v29 = a20 + 0.2;
  else
    v29 = 1.0;
  if (a21 + 0.6 <= 1.0)
    v30 = a21 + 0.6;
  else
    v30 = 1.0;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEF0);
  v32 = swift_allocObject(v31, 160, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1060470;
  *(double *)(v32 + 32) = a1;
  *(double *)(v32 + 40) = a2;
  *(double *)(v32 + 48) = a3;
  *(double *)(v32 + 56) = a4;
  *(double *)(v32 + 64) = a5;
  *(double *)(v32 + 72) = v24;
  *(double *)(v32 + 80) = v26;
  *(_QWORD *)(v32 + 88) = 0x3FF0000000000000;
  *(double *)(v32 + 96) = a8;
  *(double *)(v32 + 104) = v27;
  *(double *)(v32 + 112) = v28;
  *(_QWORD *)(v32 + 120) = 0x3FF0000000000000;
  *(_QWORD *)(v32 + 128) = a19;
  *(double *)(v32 + 136) = v29;
  *(double *)(v32 + 144) = v30;
  *(_QWORD *)(v32 + 152) = 0x3FF0000000000000;
  sub_D2801C((char *)v32);
  v34 = v33;
  swift_bridgeObjectRelease(v32);
  return v34;
}

uint64_t sub_D28798(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 368) = a3;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = a2;
  return swift_task_switch(sub_D287B4, 0, 0);
}

uint64_t sub_D287B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10A4560);
  v3 = swift_getKeyPath(&unk_10A4588);
  static Published.subscript.getter((_QWORD *)(v0 + 176), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(unsigned __int8 *)(v0 + 177);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(void **)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);

  if (v4 != 1)
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
  v11 = (_QWORD *)swift_task_alloc(dword_150250C);
  *(_QWORD *)(v0 + 352) = v11;
  *v11 = v0;
  v11[1] = sub_D28918;
  return sub_D26A2C(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_BYTE *)(v0 + 368));
}

uint64_t sub_D28918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[37] = v4;
  v5[38] = a1;
  v5[39] = a2;
  v5[40] = a3;
  v5[41] = a4;
  v6 = v5[44];
  v5[45] = a1;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_D28980, 0, 0);
}

uint64_t sub_D28980()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t inited;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  const char *v106;
  NSObject *v107;
  os_log_type_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  id v124;
  id v125;
  char *v126;
  char *v127;
  char *v128;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  uint64_t v134;
  double v135;
  double v136;
  uint64_t v137;
  double v138;
  double v139;
  uint64_t v140;
  void *v141;
  double v142;
  double log;
  os_log_t logb;
  NSObject *loga;
  void *v146;
  uint64_t v147[2];

  v1 = *(void **)(v0 + 360);
  if (!v1)
  {
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v37, v38, v39, v40);
  }
  v2 = v0 + 16;
  v3 = *(void **)(v0 + 312);
  v4 = *(void **)(v0 + 320);
  v5 = *(void **)(v0 + 328);
  v6 = qword_14FA000;
  v7 = v1;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v13;
  v16 = v12;
  v17 = v11;
  if (v6 != -1)
    swift_once(&qword_14FA000, sub_D24C00);
  v18 = *(_QWORD *)(v0 + 344);
  v19 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v19, (uint64_t)static Logger.playlistCovers);
  swift_bridgeObjectRetain_n(v18, 2);
  v20 = v14;
  v21 = v15;
  v22 = v16;
  v23 = v17;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  v26 = os_log_type_enabled(v24, v25);
  v27 = *(char **)(v0 + 344);
  v146 = v21;
  v141 = v22;
  if (v26)
  {
    v28 = *(char **)(v0 + 336);
    v29 = swift_slowAlloc(22, -1);
    v30 = swift_slowAlloc(64, -1);
    v147[0] = v30;
    *(_DWORD *)v29 = 136446466;
    v31 = (char *)sub_D249D4(v23, v22, v146, v20);
    v33 = v32;
    *(_QWORD *)(v29 + 4) = sub_BA95EC(v31, v32, v147);
    v34 = v33;
    v22 = v141;
    swift_bridgeObjectRelease(v34);

    *(_WORD *)(v29 + 12) = 2082;
    swift_bridgeObjectRetain();
    v35 = v28;
    v21 = v146;
    *(_QWORD *)(v29 + 14) = sub_BA95EC(v35, v27, v147);
    swift_bridgeObjectRelease_n(v27, 3);
    _os_log_impl(&dword_0, v24, v25, "Retrieved artwork colors=%{public}s from Media API for song with identifiers=%{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v36 = v29;
    v2 = v0 + 16;
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v27, 2);
  }
  v41 = UIColor.hsba.getter();
  v43 = v42;
  v45 = v44;
  v142 = v44;
  v47 = v46;

  log = UIColor.hsba.getter();
  v138 = v49;
  v139 = v48;
  v140 = v50;

  v51 = UIColor.hsba.getter();
  v135 = v53;
  v136 = v52;
  v137 = v54;

  v55 = UIColor.hsba.getter();
  v57 = v56;
  v59 = v58;
  v134 = v60;

  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FBEF0);
  inited = swift_initStackObject(v61, v2);
  *(_OWORD *)(inited + 16) = xmmword_1060470;
  *(double *)(inited + 32) = v41;
  *(double *)(inited + 40) = v43;
  *(double *)(inited + 48) = v45;
  *(double *)(inited + 56) = v47;
  *(double *)(inited + 64) = log;
  *(double *)(inited + 72) = v139;
  *(double *)(inited + 80) = v138;
  *(_QWORD *)(inited + 88) = v140;
  *(double *)(inited + 96) = v51;
  *(double *)(inited + 104) = v136;
  *(double *)(inited + 112) = v135;
  *(_QWORD *)(inited + 120) = v137;
  *(_QWORD *)(inited + 128) = v55;
  *(double *)(inited + 136) = v57;
  *(double *)(inited + 144) = v59;
  *(_QWORD *)(inited + 152) = v134;
  if ((v43 <= 0.05 || v142 <= 0.2) && (v139 <= 0.05 || v138 <= 0.2))
  {
    swift_bridgeObjectRelease(inited);
    if ((v136 <= 0.05 || v135 <= 0.2) && (v57 <= 0.05 || v59 <= 0.2))
    {
      v107 = Logger.logObject.getter(v63);
      v108 = static os_log_type_t.default.getter(v107);
      if (os_log_type_enabled(v107, v108))
      {
        v109 = v23;
        v110 = swift_slowAlloc(12, -1);
        v111 = swift_slowAlloc(32, -1);
        v147[0] = v111;
        *(_DWORD *)v110 = 136446210;
        if (qword_14F9FF0 != -1)
          swift_once(&qword_14F9FF0, sub_D1B184);
        v112 = (char *)PlaylistCovers.RecipeColors.description.getter((void *)qword_1582350, *(void **)algn_1582358, (void *)qword_1582360, qword_1582368);
        v114 = v113;
        *(_QWORD *)(v110 + 4) = sub_BA95EC(v112, v113, v147);
        swift_bridgeObjectRelease(v114);
        _os_log_impl(&dword_0, v107, v108, "Using black and white colors=%{public}s", (uint8_t *)v110, 0xCu);
        swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v111, -1, -1);
        swift_slowDealloc(v110, -1, -1);

        v23 = v109;
      }
      else
      {

      }
      if (qword_14F9FF0 != -1)
        swift_once(&qword_14F9FF0, sub_D1B184);
      v130 = *(void **)algn_1582358;
      v131 = (void *)qword_1582360;
      v132 = qword_1582368;
      v37 = (id)qword_1582350;
      v38 = v130;
      v39 = v131;
      v40 = v132;

      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v37, v38, v39, v40);
    }
  }
  else
  {
    swift_bridgeObjectRelease(inited);
  }
  v133 = v23;
  if (v138 < 0.3 && v135 < 0.3)
  {
    v71 = (void *)sub_D2834C(v41, v43, v142, v47, log, v139, v138, v51, v63, v64, v65, v66, v67, v68, v69, v70, *(uint64_t *)&v136, v135);
    v73 = v72;
    v75 = v74;
    v77 = v76;
    v78 = v71;
    v79 = v73;
    v80 = v75;
    v81 = v77;
    v37 = v78;
    v38 = v79;
    v39 = v80;
    v40 = v81;
    v82 = Logger.logObject.getter(v40);
    v83 = static os_log_type_t.default.getter(v82);
    if (os_log_type_enabled(v82, v83))
    {
      v84 = swift_slowAlloc(12, -1);
      v85 = swift_slowAlloc(32, -1);
      v147[0] = v85;
      *(_DWORD *)v84 = 136446210;
      v86 = (char *)PlaylistCovers.RecipeColors.description.getter(v37, v38, v39, v40);
      logb = v20;
      v88 = v87;
      *(_QWORD *)(v84 + 4) = sub_BA95EC(v86, v87, v147);
      swift_bridgeObjectRelease(v88);

      _os_log_impl(&dword_0, v82, v83, "Using recipe 1 colors=%{public}s", (uint8_t *)v84, 0xCu);
      swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v84, -1, -1);

LABEL_33:
      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v37, v38, v39, v40);
    }
LABEL_32:

    goto LABEL_33;
  }
  if (v138 <= 0.3 || v135 <= 0.3)
  {
    v115 = (void *)sub_D28620(v41, v43, v142, v47, log, v139, v138, v51, v63, v64, v65, v66, v67, v68, v69, v70, v136, v135, v55,
                     v57,
                     v59);
    v117 = v116;
    v119 = v118;
    v121 = v120;
    v122 = v115;
    v123 = v117;
    v124 = v119;
    v125 = v121;
    v37 = v122;
    v38 = v123;
    v39 = v124;
    v40 = v125;
    v82 = Logger.logObject.getter(v40);
    v100 = static os_log_type_t.default.getter(v82);
    if (!os_log_type_enabled(v82, v100))
      goto LABEL_32;
    loga = v82;
    v101 = swift_slowAlloc(12, -1);
    v102 = swift_slowAlloc(32, -1);
    v147[0] = v102;
    *(_DWORD *)v101 = 136446210;
    v126 = (char *)PlaylistCovers.RecipeColors.description.getter(v37, v38, v39, v40);
    v128 = v127;
    *(_QWORD *)(v101 + 4) = sub_BA95EC(v126, v127, v147);
    swift_bridgeObjectRelease(v128);

    v106 = "Using recipe 3 colors=%{public}s";
  }
  else
  {
    v89 = (void *)sub_D284C0(v41, v43, v142, v47, log, v139, v138, v51, v63, v64, v65, v66, v67, v68, v69, v70, v136, *(uint64_t *)&v135, v55,
                    v57,
                    *(uint64_t *)&v59);
    v91 = v90;
    v93 = v92;
    v95 = v94;
    v96 = v89;
    v97 = v91;
    v98 = v93;
    v99 = v95;
    v37 = v96;
    v38 = v97;
    v39 = v98;
    v40 = v99;
    v82 = Logger.logObject.getter(v40);
    v100 = static os_log_type_t.default.getter(v82);
    if (!os_log_type_enabled(v82, v100))
      goto LABEL_32;
    loga = v82;
    v101 = swift_slowAlloc(12, -1);
    v102 = swift_slowAlloc(32, -1);
    v147[0] = v102;
    *(_DWORD *)v101 = 136446210;
    v103 = (char *)PlaylistCovers.RecipeColors.description.getter(v37, v38, v39, v40);
    v105 = v104;
    *(_QWORD *)(v101 + 4) = sub_BA95EC(v103, v104, v147);
    swift_bridgeObjectRelease(v105);

    v106 = "Using recipe 2 colors=%{public}s";
  }
  _os_log_impl(&dword_0, loga, v100, v106, (uint8_t *)v101, 0xCu);
  swift_arrayDestroy(v102, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v102, -1, -1);
  swift_slowDealloc(v101, -1, -1);

  return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v37, v38, v39, v40);
}

uint64_t sub_D29454(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_D2946C, 0, 0);
}

uint64_t sub_D2946C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  objc_opt_self(MPModelGenericObject);
  v2 = (void *)swift_dynamicCastObjCClass(v1);
  if (v2)
  {
    v3 = objc_msgSend(v2, "anyObject");
    goto LABEL_5;
  }
  v4 = *(_QWORD *)(v0 + 16);
  objc_opt_self(MPModelStoreBrowseContentItem);
  v5 = (void *)swift_dynamicCastObjCClass(v4);
  if (v5)
  {
    v3 = objc_msgSend(v5, "innerObject");
LABEL_5:
    v6 = v3;
    if (v6)
      goto LABEL_7;
  }
  v6 = *(id *)(v0 + 16);
LABEL_7:
  ObjectType = swift_getObjectType();
  v8 = objc_msgSend(v6, "identifiers");
  v9 = sub_C27FD8(ObjectType, 2, 0, v8);
  v11 = v10;

  *(_QWORD *)(v0 + 24) = v11;
  if (v11)
  {
    if ((objc_msgSend(*(id *)(v0 + 16), "hasLoadedValueForKey:", MPModelPropertySongHasVideo) & 1) != 0)
      v12 = objc_msgSend(*(id *)(v0 + 16), "hasVideo");
    else
      v12 = 0;
    v22 = swift_task_alloc(dword_150244C);
    *(_QWORD *)(v0 + 32) = v22;
    *(_QWORD *)v22 = v0;
    *(_QWORD *)(v22 + 8) = sub_D29720;
    *(_BYTE *)(v22 + 368) = v12;
    *(_QWORD *)(v22 + 336) = v9;
    *(_QWORD *)(v22 + 344) = v11;
    return swift_task_switch(sub_D287B4, 0, 0);
  }
  else
  {
    if (qword_14FA000 != -1)
      swift_once(&qword_14FA000, sub_D24C00);
    v13 = *(void **)(v0 + 16);
    v14 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v14, (uint64_t)static Logger.playlistCovers);
    v15 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.default.getter(v15);
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(void **)(v0 + 16);
    if (v17)
    {
      v19 = swift_slowAlloc(12, -1);
      v20 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v19 = 138543362;
      *(_QWORD *)(v19 + 4) = v18;
      *v20 = v18;
      _os_log_impl(&dword_0, v15, v16, "No catalogID for MPModelSong=%{public}@", (uint8_t *)v19, 0xCu);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
      swift_arrayDestroy(v20, 1, v21);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
  }
}

uint64_t sub_D29720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v11;

  v9 = *(_QWORD *)(*v4 + 24);
  v11 = *v4;
  swift_task_dealloc(*(_QWORD *)(*v4 + 32));
  swift_bridgeObjectRelease(v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, a3, a4);
}

unint64_t sub_D297A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14FB0B8;
  if (!qword_14FB0B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14FB0B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_14FB0B8);
  }
  return result;
}

uint64_t sub_D297EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_D29838()
{
  unint64_t result;

  result = qword_1502450;
  if (!qword_1502450)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.RecipeColors, &type metadata for PlaylistCovers.RecipeColors);
    atomic_store(result, (unint64_t *)&qword_1502450);
  }
  return result;
}

char *_s6SourceOwCP(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRetain();
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

double _s6SourceOwxx(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:

      break;
    case 1:
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
      break;
    case 0:
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
  }
  return result;
}

void **_s6SourceOwcp(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **_s6SourceOwca(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_D29B5C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_D29B5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistCovers.Source(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *_s6SourceOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *_s6SourceOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_D29B5C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FB0B0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_D29CC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_D29D40(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
  }
}

void sub_D29D40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_15024D8)
  {
    v2 = type metadata accessor for Track(255);
    v3 = type metadata accessor for MusicItemCollection(a1, v2, &protocol witness table for Track);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_15024D8);
  }
}

uint64_t _s12RecipeColorsVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.RecipeColors()
{
  return &type metadata for PlaylistCovers.RecipeColors;
}

uint64_t sub_D29E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(void *a1, int a2, id a3, void **a4, void (*a5)(void), uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *Strong;
  _QWORD *v27;
  void *v28;
  void **v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  void (*v42)(void);
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void (*v62)(void);
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  char *v71;
  _QWORD *v72;
  objc_class *v73;
  char *v74;
  uint64_t v75;
  double v76;
  id v77;
  const void *v78;
  id v79;
  uint64_t v80;
  void (*v81)(void *);
  double v82;
  int v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  id v94;
  void *v95;
  void *v96;
  char v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  id v103;
  _QWORD *v104;
  id v105;
  _QWORD *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  id v110;
  id v111;
  char *v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  id v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  id v127;
  _QWORD *v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 v145;
  double v146;
  uint64_t v147;
  uint64_t v148;
  double v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  int v161;
  _QWORD *v162;
  id v163;
  __objc2_prot *v164;
  objc_super v165;
  void **aBlock;
  uint64_t v167;
  void *v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172[5];
  uint64_t v173;

  v7 = v6;
  LODWORD(v163) = a2;
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (void **)((char *)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_BF3848();
  *v16 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24, v153, v154, v155, v156, v157, v158, v159);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v25 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
  {
    if (qword_14FA008 != -1)
      swift_once(&qword_14FA008, sub_D2B930);
    v54 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v54, (uint64_t)qword_1502530);
    v55 = a1;
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.default.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v172[0] = v59;
      *(_DWORD *)v58 = 136446210;
      v60 = v55;
      v61 = objc_msgSend(v60, "description");
      v62 = a5;
      v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v65 = v64;

      v66 = (char *)v63;
      a5 = v62;
      *(_QWORD *)(v58 + 4) = sub_BA95EC(v66, v65, v172);

      swift_bridgeObjectRelease(v65);
      _os_log_impl(&dword_0, v56, v57, "Attempted to present viewController=%{public}s but there is no viewController to present onto.", (uint8_t *)v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

      if (!v62)
        return;
    }
    else
    {

      if (!a5)
        return;
    }
    a5();
    return;
  }
  v162 = v7;
  v160 = a3;
  v161 = (int)a4;
  a3 = Strong;
  v27 = objc_msgSend(a3, "presentedViewController");
  v7 = a3;
  if (v27)
  {
    v28 = a3;
    do
    {
      v7 = v27;

      v27 = objc_msgSend(v7, "presentedViewController");
      v28 = v7;
    }
    while (v27);
  }
  v29 = (void **)objc_msgSend(v7, "transitionCoordinator");
  if (v29)
  {
    a4 = v29;
    if (qword_14FA008 == -1)
    {
LABEL_8:
      v30 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v30, (uint64_t)qword_1502530);
      v31 = a1;
      swift_unknownObjectRetain_n(a4, 2);
      v32 = v31;
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.default.getter(v33);
      v35 = v34;
      if (os_log_type_enabled(v33, v34))
      {
        v36 = swift_slowAlloc(22, -1);
        v159 = a3;
        v37 = v36;
        v157 = swift_slowAlloc(64, -1);
        v172[0] = v157;
        *(_DWORD *)v37 = 136446466;
        v38 = v32;
        v39 = objc_msgSend(v38, "description");
        LODWORD(v156) = v35;
        v40 = a6;
        v41 = v39;
        v42 = a5;
        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v158 = (uint64_t)v32;
        v45 = v44;

        a6 = v40;
        v46 = (char *)v43;
        a5 = v42;
        *(_QWORD *)(v37 + 4) = sub_BA95EC(v46, v45, v172);

        swift_bridgeObjectRelease(v45);
        *(_WORD *)(v37 + 12) = 2082;
        aBlock = a4;
        swift_unknownObjectRetain(a4);
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502610);
        v48 = (char *)String.init<A>(describing:)(&aBlock, v47);
        v50 = v49;
        *(_QWORD *)(v37 + 14) = sub_BA95EC(v48, v49, v172);
        swift_unknownObjectRelease_n(a4, 2);
        v51 = v50;
        v32 = (id)v158;
        swift_bridgeObjectRelease(v51);
        _os_log_impl(&dword_0, v33, (os_log_type_t)v156, "Attempted to present %{public}s, but needs to wait for the ongoing transition %{public}s to complete first", (uint8_t *)v37, 0x16u);
        v52 = v157;
        swift_arrayDestroy(v157, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        v53 = v37;
        a3 = v159;
        swift_slowDealloc(v53, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(a4, 2);
      }
      v97 = (char)v163;
      sub_6087C((uint64_t)v162, (uint64_t)v172);
      v98 = swift_allocObject(&unk_13BAEA8, 144, 7);
      *(_QWORD *)(v98 + 16) = a4;
      *(_QWORD *)(v98 + 24) = v32;
      sub_648A4((uint64_t)v172, v98 + 32);
      *(_BYTE *)(v98 + 104) = v97 & 1;
      *(_QWORD *)(v98 + 112) = v160;
      *(_BYTE *)(v98 + 120) = v161 & 1;
      *(_QWORD *)(v98 + 128) = a5;
      *(_QWORD *)(v98 + 136) = a6;
      v170 = sub_D2BB94;
      v171 = v98;
      aBlock = _NSConcreteStackBlock;
      v167 = 1107296256;
      v168 = sub_20B50C;
      v169 = &block_descriptor_9_11;
      v99 = _Block_copy(&aBlock);
      v100 = v171;
      v101 = v32;
      swift_unknownObjectRetain(a4);
      sub_A9DEC((uint64_t)a5, a6);
      objc_msgSend(a4, "animateAlongsideTransition:completion:", 0, v99, swift_release(v100).n128_f64[0]);
      _Block_release(v99);

      swift_unknownObjectRelease(a4);
      return;
    }
LABEL_59:
    swift_once(&qword_14FA008, sub_D2B930);
    goto LABEL_8;
  }
  if ((objc_msgSend(v7, "canPresentViewControllers") & 1) != 0)
  {
    if ((v163 & 1) != 0)
    {
      v67 = objc_msgSend(v7, "view");
      if (!v67)
      {
        __break(1u);
        return;
      }
      v68 = v67;
      v69 = objc_msgSend(v67, "window");

      if (v69)
      {
        v70 = objc_msgSend(v69, "traitCollection");

        v71 = (char *)objc_msgSend(v70, "horizontalSizeClass");
        if (v71 == (_BYTE *)&dword_0 + 2 && *((unsigned __int8 *)v162 + 48) != 255)
          objc_msgSend(a1, "setModalPresentationStyle:", 7);
      }
    }
    v158 = a6;
    v72 = v7;
    objc_msgSend(a1, "setPlayActivityFeatureNameSourceViewController:", v72);
    v73 = (objc_class *)_s27WeakViewControllerReferenceCMa();
    v74 = (char *)objc_allocWithZone(v73);
    v75 = swift_unknownObjectWeakInit(&v74[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController], 0);
    *(_QWORD *)&v76 = swift_unknownObjectWeakAssign(v75, v72).n128_u64[0];
    v165.receiver = v74;
    v165.super_class = v73;
    v77 = objc_msgSendSuper2(&v165, "init", v76);
    if (qword_14F9EB0 != -1)
      swift_once(&qword_14F9EB0, sub_C7B8FC);
    v78 = (const void *)qword_14FF290;
    v79 = v77;
    objc_setAssociatedObject(a1, v78, v79, (char *)&dword_0 + 1);

    v80 = (uint64_t)v162;
    v81 = (void (*)(void *))v162[7];
    if (v81)
      v81(a1);
    v163 = objc_msgSend(a1, "popoverPresentationController");
    if (!v163)
      goto LABEL_53;
    v159 = a3;
    v83 = *(unsigned __int8 *)(v80 + 48);
    if (v83 != 255)
    {
      v84 = *(void **)(v80 + 8);
      v85 = *(_QWORD *)(v80 + 16);
      v87 = *(_QWORD *)(v80 + 24);
      v86 = *(_QWORD *)(v80 + 32);
      v88 = *(_QWORD *)(v80 + 40);
      v164 = &OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate_0;
      v89 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v164);
      v162 = (_QWORD *)v88;
      if (v89)
      {
        v90 = v89;
        v157 = (uint64_t)a5;
        v91 = a1;
        v92 = v88;
        v93 = v91;
        v153 = v84;
        v154 = v85;
        v155 = v87;
        v156 = v86;
        sub_D2BB10(v84, v85, v87, v86, v92, v83);
        v94 = objc_msgSend(v93, "presentationController");
        if (v94)
        {
          v95 = v94;
          objc_msgSend(v94, "setDelegate:", v90);

        }
        a5 = (void (*)(void))v157;
        v86 = v156;
        v87 = v155;
        v85 = v154;
        v96 = v153;
      }
      else
      {
        sub_62624(v84, v85, v87, v86, v88, v83);
        v96 = v84;
      }
      objc_msgSend(v163, "setPermittedArrowDirections:", v160);
      v129 = objc_msgSend(a1, "popoverPresentationController");
      if (v129)
      {
        v130 = v129;
        if (v83)
        {
          v131 = v86;
          v132 = v86;
          v133 = (uint64_t)v162;
          if (v83 == 1)
          {
            sub_62624(v96, v85, v87, v131, (uint64_t)v162, 1u);
            objc_msgSend(v130, "setBarButtonItem:", v96);

            sub_648E0(v96, v85, v87, v132, v133, 1u);
            sub_648E0(v96, v85, v87, v132, v133, 1u);
            v134 = v96;
            v135 = v85;
            v136 = v87;
            v137 = v132;
            v138 = v133;
            v139 = 1;
          }
          else
          {
            sub_62624(v96, v85, v87, v131, (uint64_t)v162, 2u);
            swift_unknownObjectRetain(v96);
            objc_msgSend(v130, "setSourceItem:", v96);

            sub_648E0(v96, v85, v87, v132, v133, 2u);
            sub_648E0(v96, v85, v87, v132, v133, 2u);
            v134 = v96;
            v135 = v85;
            v136 = v87;
            v137 = v132;
            v138 = v133;
            v139 = 2;
          }
          sub_626A8(v134, v135, v136, v137, v138, v139);
          goto LABEL_52;
        }
        v146 = *(double *)&v86;
        v147 = v86;
        v148 = (uint64_t)v162;
        v149 = *(double *)&v162;
        objc_msgSend(v129, "setSourceView:", v96);
        objc_msgSend(v130, "setSourceRect:", *(double *)&v85, *(double *)&v87, v146, v149);

        sub_648E0(v96, v85, v87, v147, v148, 0);
        v140 = v96;
        v141 = v85;
        v142 = v87;
        v143 = v147;
        v144 = v148;
        v145 = 0;
      }
      else
      {
        v140 = v96;
        v141 = v85;
        v142 = v87;
        v143 = v86;
        v144 = (uint64_t)v162;
        v145 = v83;
      }
      sub_648E0(v140, v141, v142, v143, v144, v145);
    }
LABEL_52:

    a3 = v159;
LABEL_53:
    if (a5)
    {
      v150 = v158;
      v172[4] = (uint64_t)a5;
      v173 = v158;
      v172[0] = (uint64_t)_NSConcreteStackBlock;
      v172[1] = 1107296256;
      v172[2] = (uint64_t)sub_42D124;
      v172[3] = (uint64_t)&block_descriptor_3_16;
      v151 = _Block_copy(v172);
      v152 = v173;
      swift_retain(v150);
      *(_QWORD *)&v82 = swift_release(v152).n128_u64[0];
    }
    else
    {
      v151 = 0;
    }
    objc_msgSend(v72, "presentViewController:animated:completion:", a1, v161 & 1, v151, v82);
    _Block_release(v151);

    return;
  }
  v159 = a3;
  if (qword_14FA008 != -1)
    swift_once(&qword_14FA008, sub_D2B930);
  v102 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v102, (uint64_t)qword_1502530);
  v103 = a1;
  v104 = v7;
  v105 = v103;
  v106 = v104;
  v107 = Logger.logObject.getter(v106);
  v108 = static os_log_type_t.default.getter(v107);
  if (os_log_type_enabled(v107, v108))
  {
    v109 = swift_slowAlloc(22, -1);
    v158 = swift_slowAlloc(64, -1);
    v172[0] = v158;
    *(_DWORD *)v109 = 136446466;
    v110 = v105;
    v111 = objc_msgSend(v110, "description");
    v112 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
    v157 = (uint64_t)a5;
    v114 = v113;

    *(_QWORD *)(v109 + 4) = sub_BA95EC(v112, v114, v172);
    swift_bridgeObjectRelease(v114);
    *(_WORD *)(v109 + 12) = 2082;
    v115 = v106;
    v116 = objc_msgSend(v115, "description");
    v117 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
    v119 = v118;

    *(_QWORD *)(v109 + 14) = sub_BA95EC(v117, v119, v172);
    v120 = v119;
    a5 = (void (*)(void))v157;
    swift_bridgeObjectRelease(v120);
    _os_log_impl(&dword_0, v107, v108, "Attempted to present %{public}s, but need to dismiss %{public}s first", (uint8_t *)v109, 0x16u);
    v121 = v158;
    swift_arrayDestroy(v158, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v121, -1, -1);
    swift_slowDealloc(v109, -1, -1);

  }
  else
  {

  }
  v122 = v160;
  sub_6087C((uint64_t)v162, (uint64_t)v172);
  v123 = swift_allocObject(&unk_13BAE30, 144, 7);
  *(_QWORD *)(v123 + 16) = v106;
  *(_QWORD *)(v123 + 24) = v105;
  sub_648A4((uint64_t)v172, v123 + 32);
  *(_BYTE *)(v123 + 104) = v163 & 1;
  *(_QWORD *)(v123 + 112) = v122;
  v124 = v161 & 1;
  *(_BYTE *)(v123 + 120) = v124;
  *(_QWORD *)(v123 + 128) = a5;
  *(_QWORD *)(v123 + 136) = a6;
  v170 = sub_D2BADC;
  v171 = v123;
  aBlock = _NSConcreteStackBlock;
  v167 = 1107296256;
  v168 = sub_42D124;
  v169 = &block_descriptor_311;
  v125 = _Block_copy(&aBlock);
  v126 = v171;
  v127 = v105;
  sub_A9DEC((uint64_t)a5, a6);
  v128 = v106;
  objc_msgSend(v128, "dismissViewControllerAnimated:completion:", v124, v125, swift_release(v126).n128_f64[0]);
  _Block_release(v125);

}

Swift::Void __swiftcall PresentationSource.Position.configure(_:)(UIViewController a1)
{
  __int128 *v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  double v8;
  __int128 v9;
  double v10;
  double v11;
  id v12;
  _OWORD v13[3];
  __int128 v14;
  double v15;
  double v16;
  double v17;
  char v18;

  sub_D2BBCC(v1, v13);
  v3 = *(void **)&v13[0];
  v4 = -[objc_class popoverPresentationController](a1.super.super.isa, "popoverPresentationController");
  if (v4)
  {
    v5 = v4;
    sub_D2BBCC(v1, &v14);
    if (v18)
    {
      v6 = v14;
      if (v18 == 1)
      {
        v7 = v3;
        objc_msgSend(v5, "setBarButtonItem:", v6);
      }
      else
      {
        swift_unknownObjectRetain_n(v3, 2);
        objc_msgSend(v5, "setSourceItem:", v6);
      }

      sub_D2BC74((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_626A8);
    }
    else
    {
      v9 = v14;
      v8 = v15;
      v10 = v16;
      v11 = v17;
      v12 = v3;
      objc_msgSend(v5, "setSourceView:", (_QWORD)v9);
      objc_msgSend(v5, "setSourceRect:", *((double *)&v9 + 1), v8, v10, v11);

    }
    sub_D2BC74((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_626A8);
  }
}

uint64_t PresentationSource.viewController.getter()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

void PresentationSource.viewController.setter(void *a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1, a1);

}

void (*PresentationSource.viewController.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1);
  return sub_D2AF04;
}

void sub_D2AF04(_QWORD *a1)
{
  id v1;

  v1 = (id)*a1;
  swift_unknownObjectWeakAssign(a1[1], *a1);

}

void PresentationSource.windowScene.getter()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "view");

    if (v3)
    {
      v4 = objc_msgSend(v3, "window");

      objc_msgSend(v4, "windowScene");
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t PresentationSource.position.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_D2BBE4(v1 + 8, a1);
}

uint64_t PresentationSource.position.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_D2BC2C(a1, v1 + 8);
}

uint64_t PresentationSource.configurationHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t PresentationSource.configurationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_5C198(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

id static PresentationSource.topmost(in:)@<X0>(uint64_t a1@<X8>)
{
  id result;
  id v3;
  id v4;
  void *v5;
  void *v6;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;

  result = UIWindowScene.rootViewController.getter();
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(v3, "presentedViewController");
    if (v4)
    {
      v5 = v3;
      while (1)
      {
        v6 = v4;
        if (!objc_msgSend(v4, "canPresentViewControllers"))
          break;

        v4 = objc_msgSend(v6, "presentedViewController");
        v5 = v6;
        if (!v4)
        {
          v5 = v6;
          goto LABEL_10;
        }
      }

      v3 = v6;
    }
    else
    {
      v5 = v3;
    }
LABEL_10:

    swift_unknownObjectWeakInit(v7, 0);
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v11 = -1;
    v12 = 0;
    v13 = 0;
    swift_unknownObjectWeakAssign(v7, v5);

    sub_648E0((id)v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v10, v11);
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v11 = -1;
    return (id)sub_648A4((uint64_t)v7, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 56) = xmmword_1060130;
  }
  return result;
}

void *PresentationSource.PresentingViewControllerOptions.allowsPresentation.unsafeMutableAddressor()
{
  return &static PresentationSource.PresentingViewControllerOptions.allowsPresentation;
}

void *static PresentationSource.topmostPresentedViewController(in:options:)(uint64_t a1, char a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = UIWindowScene.rootViewController.getter();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v4, "presentedViewController");
  if (v5)
  {
    v6 = v4;
    do
    {
      v7 = v5;
      if ((a2 & 1) != 0 && !objc_msgSend(v5, "canPresentViewControllers"))
      {

        v4 = v7;
        goto LABEL_11;
      }

      v5 = objc_msgSend(v7, "presentedViewController");
      v6 = v7;
    }
    while (v5);
    v6 = v7;
  }
  else
  {
    v6 = v4;
  }
LABEL_11:

  return v6;
}

uint64_t PresentationSource.init(viewController:position:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = swift_unknownObjectWeakInit(a3, 0);
  *(_QWORD *)(v5 + 40) = 0;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  v6 = v5 + 8;
  *(_BYTE *)(v5 + 48) = -1;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  swift_unknownObjectWeakAssign(v5, a1);

  return sub_D2BC2C(a2, v6);
}

id static PresentationSource.topmostPresentedViewController(from:options:)(void *a1, char a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  v4 = objc_msgSend(v3, "presentedViewController");
  if (v4)
  {
    while (1)
    {
      v5 = v4;
      if ((a2 & 1) != 0 && (objc_msgSend(v4, "canPresentViewControllers") & 1) == 0)
        break;

      v4 = objc_msgSend(v5, "presentedViewController");
      v3 = v5;
      if (!v4)
        return v5;
    }

  }
  return v3;
}

double PresentationSource.init(windowScene:position:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  double result;
  _BYTE v9[8];
  _OWORD v10[2];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v6 = UIWindowScene.rootViewController.getter();
  if (v6)
  {
    v7 = v6;
    swift_unknownObjectWeakInit(v9, 0);
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    v12 = -1;
    v13 = 0;
    v14 = 0;
    swift_unknownObjectWeakAssign(v9, v7);

    sub_D2BC2C(a2, (uint64_t)v10);
    sub_648A4((uint64_t)v9, a3);

  }
  else
  {
    sub_D2BC74(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_648E0);

    *(_QWORD *)(a3 + 48) = 0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_QWORD *)&result = 1;
    *(_OWORD *)(a3 + 56) = xmmword_1060130;
  }
  return result;
}

uint64_t sub_D2B41C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v35;
  os_log_type_t type;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v15 = a9;
  if (qword_14FA008 != -1)
    swift_once(&qword_14FA008, sub_D2B930);
  v16 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v16, (uint64_t)qword_1502530);
  swift_unknownObjectRetain_n(a2, 2);
  v17 = a3;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    type = v19;
    v20 = swift_slowAlloc(22, -1);
    v37 = a8;
    v38 = a2;
    v35 = swift_slowAlloc(64, -1);
    v39 = v35;
    *(_DWORD *)v20 = 136446466;
    swift_unknownObjectRetain(a2);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502610);
    v22 = (char *)String.init<A>(describing:)(&v38, v21);
    v24 = v23;
    *(_QWORD *)(v20 + 4) = sub_BA95EC(v22, v23, &v39);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v20 + 12) = 2082;
    v25 = v17;
    v26 = objc_msgSend(v25, "description");
    v27 = a6;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = a7;
    v31 = v30;

    v32 = (char *)v28;
    a6 = v27;
    v15 = a9;
    *(_QWORD *)(v20 + 14) = sub_BA95EC(v32, v31, &v39);

    v33 = v31;
    a7 = v29;
    swift_bridgeObjectRelease(v33);
    _os_log_impl(&dword_0, v18, type, "TransitionCoordinator %{public}s completed ongoing animations. Now attemptying to re-present %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    a8 = v37;
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a2, 2);
  }
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v17, a5 & 1, a6, a7 & 1, a8, v15);
}

uint64_t sub_D2B6AC(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;

  if (qword_14FA008 != -1)
    swift_once(&qword_14FA008, sub_D2B930);
  v13 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v13, (uint64_t)qword_1502530);
  v14 = a1;
  v15 = a2;
  v16 = v14;
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v39 = v21;
    *(_DWORD *)v20 = 136446466;
    v22 = v16;
    v35 = a5;
    v23 = a8;
    v24 = objc_msgSend(v22, "description");
    v36 = a7;
    v25 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    *(_QWORD *)(v20 + 4) = sub_BA95EC(v25, v27, &v39);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v20 + 12) = 2082;
    v28 = v17;
    v29 = objc_msgSend(v28, "description");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    a8 = v23;
    a5 = v35;
    v33 = (char *)v30;
    a7 = v36;
    *(_QWORD *)(v20 + 14) = sub_BA95EC(v33, v32, &v39);

    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v18, v19, "Dismissed %{public}s, now attempting to re-present %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

  }
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v17, a4 & 1, a5, a6 & 1, a7, a8);
}

uint64_t sub_D2B930()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_1502530);
  __swift_project_value_buffer(v0, (uint64_t)qword_1502530);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0xD000000000000012, 0x80000000010A4790);
}

double UIWindowScene.presentationSource.getter@<D0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = UIWindowScene.rootViewController.getter();
  if (v2)
  {
    v3 = v2;
    swift_unknownObjectWeakInit(v5);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v9 = -1;
    v10 = 0;
    v11 = 0;
    swift_unknownObjectWeakAssign(v5, v3);

    sub_648E0((id)v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v8, v9);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v9 = -1;
    sub_648A4((uint64_t)v5, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_QWORD *)&result = 1;
    *(_OWORD *)(a1 + 56) = xmmword_1060130;
  }
  return result;
}

uint64_t sub_D2BA6C()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  if (*(_QWORD *)(v0 + 128))
    swift_release();
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_D2BADC()
{
  uint64_t v0;

  return sub_D2B6AC(*(void **)(v0 + 16), *(void **)(v0 + 24), v0 + 32, *(_BYTE *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t block_copy_helper_307(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_307(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_D2BB10(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    return sub_62624(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t sub_D2BB24()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  if (*(_QWORD *)(v0 + 128))
    swift_release();
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_D2BB94(uint64_t a1)
{
  uint64_t v1;

  return sub_D2B41C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + 32, *(_BYTE *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_BYTE *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

_OWORD *sub_D2BBCC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_D2BBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D2BC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_D2BC74(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

unint64_t sub_D2BCB0()
{
  unint64_t result;

  result = qword_1502620;
  if (!qword_1502620)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1502620);
  }
  return result;
}

unint64_t sub_D2BCF8()
{
  unint64_t result;

  result = qword_1502628;
  if (!qword_1502628)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1502628);
  }
  return result;
}

unint64_t sub_D2BD40()
{
  unint64_t result;

  result = qword_1502630;
  if (!qword_1502630)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1502630);
  }
  return result;
}

unint64_t sub_D2BD88()
{
  unint64_t result;

  result = qword_1502638;
  if (!qword_1502638)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_1502638);
  }
  return result;
}

uint64_t assignWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = swift_unknownObjectWeakCopyAssign(a1, a2);
  v5 = (__int128 *)(v4 + 8);
  v6 = (__int128 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(v4 + 48) == 255)
  {
    if (v7 == 255)
    {
      v26 = *v6;
      v27 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(v4 + 33) = *(_OWORD *)(a2 + 33);
      *v5 = v26;
      *(_OWORD *)(v4 + 24) = v27;
    }
    else
    {
      v19 = *(void **)(a2 + 8);
      v20 = *(_QWORD *)(a2 + 16);
      v21 = *(_QWORD *)(a2 + 24);
      v22 = *(_QWORD *)(a2 + 32);
      v23 = *(_QWORD *)(a2 + 40);
      sub_62624(v19, v20, v21, v22, v23, *(_BYTE *)(a2 + 48));
      *(_QWORD *)(a1 + 8) = v19;
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v21;
      *(_QWORD *)(a1 + 32) = v22;
      *(_QWORD *)(a1 + 40) = v23;
      *(_BYTE *)(a1 + 48) = v7;
    }
  }
  else if (v7 == 255)
  {
    sub_D2BF44(v4 + 8);
    v24 = *(_OWORD *)(a2 + 33);
    v25 = *(_OWORD *)(a2 + 24);
    *v5 = *v6;
    v5[1] = v25;
    *(__int128 *)((char *)v5 + 25) = v24;
  }
  else
  {
    v8 = *(void **)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    sub_62624(v8, v9, v10, v11, v12, *(_BYTE *)(a2 + 48));
    v13 = *(void **)(a1 + 8);
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    v18 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v7;
    sub_626A8(v13, v14, v15, v16, v17, v18);
  }
  v28 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v28)
    {
      v30 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v28;
      *(_QWORD *)(a1 + 64) = v30;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_14;
  }
  v29 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v28;
  *(_QWORD *)(a1 + 64) = v29;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_D2BF44(uint64_t a1)
{
  sub_626A8(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t assignWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  v5 = (_OWORD *)(v4 + 8);
  v6 = *(unsigned __int8 *)(v4 + 48);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 48);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a2 + 40);
      v9 = *(void **)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 40) = v8;
      *(_BYTE *)(a1 + 48) = v7;
      sub_626A8(v9, v10, v11, v12, v13, v6);
      goto LABEL_6;
    }
    sub_D2BF44(v4 + 8);
  }
  v14 = *(_OWORD *)(a2 + 24);
  *v5 = *(_OWORD *)(a2 + 8);
  v5[1] = v14;
  *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)(a2 + 33);
LABEL_6:
  v15 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v15)
    {
      v18 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v18;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v15)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  swift_release(v17);
  return a1;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

void destroy for PresentationSource.Position(uint64_t a1)
{
  sub_626A8(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_62624(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_62624(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_626A8(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_626A8(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource.Position(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_D2C268(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource.Position()
{
  return &type metadata for PresentationSource.Position;
}

ValueMetadata *type metadata accessor for PresentationSource.PresentingViewControllerOptions()
{
  return &type metadata for PresentationSource.PresentingViewControllerOptions;
}

void PresentedViewState.present(_:animated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  double v14;
  uint64_t v15;
  _BYTE v17[24];

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = type metadata accessor for Optional(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = &v17[-v9 - 8];
  v11 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v11 + 16))(&v17[-v9 - 8], a1, v5, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v5);
  v12 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v13 = swift_beginAccess(v12, v17, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v7 + 40))(v12, v10, v6, v13);
  *(_QWORD *)&v14 = swift_endAccess(v17).n128_u64[0];
  if ((a2 & 1) != 0)
  {
    v15 = static Animation.default.getter(v14);
    withAnimation<A>(_:_:)(v15, sub_D2CA44, v2, (char *)&type metadata for () + 8);
    swift_release();
  }
  else
  {
    PresentedViewState.isPresented.setter(1);
  }
}

uint64_t View.viewPresenting<A, B>(_:modifier:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v24 = a7;
  v12 = *a1;
  v13 = type metadata accessor for ModifiedContent(0, a3, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - v15;
  View.modifier<A>(_:)(a2, a3, a4, a5);
  v19 = type metadata accessor for PresentedViewState(0, *(_QWORD *)(v12 + 80), v17, v18);
  v25 = a5;
  v26 = a6;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for PresentedViewState<A>, v19);
  View.environmentObject<A>(_:)(v24, v23, v13, v19, WitnessTable, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t PresentedViewState.isPresented.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A4800);
  v2 = swift_getKeyPath(&unk_10A4838);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t PresentedViewState.isPresented.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_10A4800);
  v4 = swift_getKeyPath(&unk_10A4838);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*PresentedViewState.isPresented.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A4800);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A4838);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_72DB98;
}

double PresentedViewState.$isPresented.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + qword_1502640, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t PresentedViewState.$isPresented.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v12[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + qword_1502640, v12, 33, 0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  Published.projectedValue.setter(v7, v8);
  v9 = swift_endAccess(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 8))(a1, v3, v9);
}

void (*PresentedViewState.$isPresented.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B8);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  PresentedViewState.$isPresented.getter();
  return sub_D2C840;
}

void sub_D2C840(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    PresentedViewState.$isPresented.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PresentedViewState.$isPresented.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t PresentedViewState.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t PresentedViewState.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  PresentedViewState.init()();
  return v1;
}

uint64_t *PresentedViewState.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v0 + qword_1502640;
  v7 = *(_QWORD *)(v1 + 80);
  v10 = 0;
  Published.init(initialValue:)(&v10, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), 1, 1, v7);
  return v0;
}

uint64_t sub_D2CA44()
{
  return PresentedViewState.isPresented.setter(1);
}

uint64_t *PresentedViewState.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (uint64_t)v0 + qword_1502640;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

double PresentedViewState.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  PresentedViewState.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for PresentedViewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PresentedViewState);
}

uint64_t sub_D2CB24()
{
  return 8;
}

_QWORD *sub_D2CB30(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_D2CB3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_CDDC2C();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initClassMetadata2(a1, 0, 2, v6, a1 + 88);
    }
  }
}

uint64_t sub_D2CBC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1[1];
  v2 = type metadata accessor for ModifiedContent(255, *a1, a1[2]);
  v5 = type metadata accessor for PresentedViewState(255, v1, v3, v4);
  v6 = type metadata accessor for Optional(255, v5);
  v7 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v6);
  v8 = type metadata accessor for ModifiedContent(255, v2, v7);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v7);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
}

unint64_t static LibraryModelRequest.label.getter(uint64_t a1, uint64_t a2)
{
  uint64_t MetatypeMetadata;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v5._countAndFlagsBits = _typeName(_:qualified:)(MetatypeMetadata, 0);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8 = swift_getMetatypeMetadata(a2);
  v9._countAndFlagsBits = _typeName(_:qualified:)(v8, 0);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0xD000000000000014;
}

uint64_t LibraryModelRequest.section.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_2E9108(v1, *(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t LibraryModelRequest.section.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_2E92B8(*(_QWORD *)(v4 + 8), *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  *(_QWORD *)(v4 + 8) = a1;
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  return result;
}

void *LibraryModelRequest.item.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = v1;
  v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.item.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 56));
  result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 64));
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 64) = a4;
  return result;
}

uint64_t LibraryModelRequest.scopedContainers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryModelRequest.scopedContainers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 72));
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t LibraryModelRequest.filter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.filter.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 104));
  *(_QWORD *)(v4 + 80) = a1;
  *(_BYTE *)(v4 + 88) = a2 & 1;
  *(_QWORD *)(v4 + 96) = a3;
  *(_QWORD *)(v4 + 104) = a4;
  return result;
}

uint64_t LibraryModelRequest.itemRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t LibraryModelRequest.itemRange.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 112) = result;
  *(_QWORD *)(v3 + 120) = a2;
  *(_BYTE *)(v3 + 128) = a3 & 1;
  return result;
}

uint64_t LibraryModelRequest.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 144));
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return result;
}

double (*LibraryModelRequest.label.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 LibraryModelRequest.init(library:section:item:scopedContainers:filter:itemRange:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, char a12, __n128 a13, uint64_t a14, uint64_t a15, char a16)
{
  __n128 result;

  result = a13;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  *(_BYTE *)(a9 + 88) = a12 & 1;
  *(__n128 *)(a9 + 96) = a13;
  *(_QWORD *)(a9 + 112) = a14;
  *(_QWORD *)(a9 + 120) = a15;
  *(_BYTE *)(a9 + 128) = a16 & 1;
  *(_QWORD *)(a9 + 136) = 0;
  *(_QWORD *)(a9 + 144) = 0;
  return result;
}

uint64_t LibraryModelRequest.mediaPlayerRequest()(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  id v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _QWORD *, uint64_t);
  Class isa;
  __int128 v16;
  Class v17;
  Class v18;
  __int128 v19;
  __int128 *v20;
  NSString v21;
  uint64_t result;
  NSString v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[16];
  _BYTE v38[24];
  __int128 v39;
  __int128 v40;
  _BYTE v41[16];
  _BYTE v42[8];
  __int128 v43;
  __int128 v44;
  _BYTE v45[8];
  _QWORD v46[4];
  _OWORD v47[2];
  objc_class *v48;
  objc_class *v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  _BYTE v56[8];
  objc_class *v57;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF010);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v6 = *((_OWORD *)v1 + 7);
  v33 = *((_OWORD *)v1 + 6);
  v34 = v6;
  v35 = *((_OWORD *)v1 + 8);
  v36 = v1[18];
  v7 = *((_OWORD *)v1 + 3);
  v29 = *((_OWORD *)v1 + 2);
  v30 = v7;
  v8 = *((_OWORD *)v1 + 5);
  v31 = *((_OWORD *)v1 + 4);
  v32 = v8;
  v26 = *(_OWORD *)v1;
  v28 = *((_OWORD *)v1 + 1);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a1);
  sub_D2E418(v5, a1, WitnessTable);
  objc_msgSend(v5, "setMediaLibrary:", *v1, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  v12 = type metadata accessor for LibraryContentConfiguration(255, v4, v10, v11);
  v13 = type metadata accessor for Optional(0, v12);
  v14 = *(void (**)(_BYTE *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v46, v1 + 1, v13);
  v14(v47, v46, v13);
  if (*((_QWORD *)&v47[0] + 1))
  {
    v27 = v47[0];
    v28 = v47[1];
    sub_5C090((uint64_t)&v28 + 8, (uint64_t)v56, &qword_15026C8);
    sub_5C090((uint64_t)v56, (uint64_t)&v57, &qword_15026C8);
    isa = v57;
    if (v57)
    {
      sub_4E684(0, &qword_14FE288, MPIdentifierSet_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
    }
  }
  else
  {
    isa = 0;
  }
  objc_msgSend(v5, "setAllowedSectionIdentifiers:", isa, v27, (_QWORD)v28);

  v16 = *(_OWORD *)((char *)v2 + 56);
  v43 = *(_OWORD *)((char *)v2 + 40);
  v44 = v16;
  sub_5C090((uint64_t)&v44 + 8, (uint64_t)v45, &qword_15026C8);
  sub_5C090((uint64_t)v45, (uint64_t)&v48, &qword_15026C8);
  v17 = v48;
  if (v48)
  {
    sub_4E684(0, &qword_14FE288, MPIdentifierSet_ptr);
    v17 = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v5, "setAllowedItemIdentifiers:", v17);

  sub_5C090((uint64_t)v2 + 72, (uint64_t)v42, &qword_15026D0);
  sub_5C090((uint64_t)v42, (uint64_t)&v49, &qword_15026D0);
  v18 = v49;
  if (v49)
  {
    sub_4E684(0, &qword_14FE290, MPModelObject_ptr);
    v18 = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v5, "setScopedContainers:", v18);

  v19 = v2[6];
  v39 = v2[5];
  v40 = v19;
  v20 = &v39;
  if (BYTE8(v39) == 1)
    v20 = (__int128 *)MPMediaLibraryFilteringOptions.none.unsafeMutableAddressor();
  objc_msgSend(v5, "setFilteringOptions:", *(_QWORD *)v20);
  sub_5C090((uint64_t)&v40, (uint64_t)v41, &qword_14FC108);
  sub_5C090((uint64_t)v41, (uint64_t)v50, &qword_14FC108);
  if (v50[1])
    v21 = String._bridgeToObjectiveC()();
  else
    v21 = 0;
  objc_msgSend(v5, "setFilterText:", v21);

  sub_5C090((uint64_t)(v2 + 7), (uint64_t)v38, &qword_15026D8);
  result = sub_5C090((uint64_t)v38, (uint64_t)&v51, &qword_15026D8);
  if ((v53 & 1) == 0)
  {
    if (__OFSUB__(v52, v51))
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v5, "setContentRange:", v51, v52 - v51);
  }
  sub_5C090((uint64_t)v2 + 136, (uint64_t)v37, &qword_14FC108);
  sub_5C090((uint64_t)v37, (uint64_t)&v54, &qword_14FC108);
  v23 = v55;
  if (v55)
  {
    v24 = v5;
    v23 = String._bridgeToObjectiveC()();
  }
  else
  {
    v25 = v5;
  }
  objc_msgSend(v5, "setLabel:", v23);

  return (uint64_t)v5;
}

uint64_t type metadata accessor for LibraryContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryContentConfiguration);
}

uint64_t UIView.Border.thickness.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if ((a2 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
LABEL_6:
    if (a4)
    {
      if (a8)
      {
        if (a3 == a7 && a4 == a8)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  result = 0;
  if ((a6 & 1) == 0 && a1 == a5)
    goto LABEL_6;
  return result;
}

uint64_t sub_D2D500(uint64_t a1, uint64_t a2)
{
  return static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

BOOL static LibraryModelRequest.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _BOOL8 result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    if (!v9)
      goto LABEL_8;
LABEL_7:
    sub_2E9108(*(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
    sub_2E9108((uint64_t)v8, v9, v11, v10);
    sub_2E92B8((uint64_t)v4, v5, v6, v7);
    sub_2E92B8((uint64_t)v8, v9, v11, v10);
    return 0;
  }
  if (!v9)
    goto LABEL_7;
  sub_2E9108(*(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  sub_2E9108((uint64_t)v4, v5, v6, v7);
  sub_2E9108((uint64_t)v8, v9, v11, v10);
  v20 = static LibraryContentConfiguration.__derived_struct_equals(_:_:)(v4, (uint64_t)v5, v6, v7, v8, (uint64_t)v9, v11, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2E92B8((uint64_t)v4, v5, v6, v7);
  if ((v20 & 1) == 0)
    return 0;
LABEL_8:
  if ((static LibraryContentConfiguration.__derived_struct_equals(_:_:)(*(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)) & 1) == 0)return 0;
  v12 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (!v12)
      return 0;
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_C3F420(v13, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else if (v12)
  {
    return 0;
  }
  if ((static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a2 + 80), *(_BYTE *)(a2 + 88), *(_QWORD *)(a2 + 96), *(_QWORD *)(a2 + 104)) & 1) == 0)return 0;
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 128) & 1) == 0)
      return 0;
LABEL_21:
    v16 = *(_QWORD *)(a1 + 144);
    v17 = *(_QWORD *)(a2 + 144);
    if (v16)
    {
      if (!v17)
        return 0;
      v18 = *(_QWORD *)(a1 + 136);
      v19 = *(_QWORD *)(a2 + 136);
      return v18 == v19 && v16 == v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0) & 1) != 0;
    }
    return !v17;
  }
  if ((*(_BYTE *)(a2 + 128) & 1) != 0)
    return 0;
  result = 0;
  if (*(_QWORD *)(a1 + 112) == *(_QWORD *)(a2 + 112) && *(_QWORD *)(a1 + 120) == *(_QWORD *)(a2 + 120))
    goto LABEL_21;
  return result;
}

uint64_t static LibraryContentConfiguration.__derived_struct_equals(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  unsigned __int8 v22;

  if (a1)
  {
    if (!a5)
      return 0;
    sub_4E684(0, &qword_15026E0, MPModelKind_ptr);
    v16 = a5;
    v17 = a1;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) == 0)
      return 0;
  }
  else if (a5)
  {
    return 0;
  }
  sub_4E684(0, (unint64_t *)&qword_14FF000, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a2, a6) & 1) != 0)
  {
    if (a3)
    {
      if (!a7)
        return 0;
      swift_bridgeObjectRetain();
      v19 = swift_bridgeObjectRetain();
      v20 = sub_C3F3F8(v19, a7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        return 0;
    }
    else if (a7)
    {
      return 0;
    }
    if (a4)
    {
      if (a8)
      {
        swift_bridgeObjectRetain();
        v21 = swift_bridgeObjectRetain();
        v22 = sub_C3F40C(v21, a8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_D2D93C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = (void *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v2;
  a1[1] = (uint64_t)v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2E9108(v2, v3, v4, v5);
}

uint64_t sub_D2D950@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = (void *)v1[5];
  v3 = (void *)v1[6];
  v5 = v1[7];
  v4 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_D2D990(uint64_t a1)
{
  return LibraryModelRequest.mediaPlayerRequest()(a1);
}

unint64_t sub_D2D9E8(uint64_t a1)
{
  return static LibraryModelRequest.label.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

BOOL sub_D2D9F4(uint64_t a1, uint64_t a2)
{
  return static LibraryModelRequest.__derived_struct_equals(_:_:)(a1, a2);
}

uint64_t sub_D2DA00(uint64_t a1, uint64_t a2)
{
  return static LibraryContentConfiguration.__derived_struct_equals(_:_:)(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t LibraryContentConfiguration<>.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id v4;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105B360;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySectionTitle);
  *(_QWORD *)(v1 + 40) = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  return 0;
}

uint64_t sub_D2DAE4(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for LibraryContentConfiguration<A>, a1);
}

uint64_t sub_D2DAF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_D2DB20(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_D2DB4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryContentConfiguration<A>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_D2DB78(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 16);
  if (v2)
  {
    v3 = *(void **)(a1 + 8);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  }

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 144));
}

uint64_t sub_D2DBF4(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  __int128 v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a1 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = v4;
  if (v6)
  {
    v8 = *(void **)(a2 + 8);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v6;
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v9;
    v10 = v8;
    v11 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 24);
    *v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v12;
  }
  v13 = *(void **)(a2 + 40);
  v14 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v15;
  v16 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v17;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 136);
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  v20 = v13;
  v21 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_D2DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  __int128 v31;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v11 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v11)
    {
      v18 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v18;
      v19 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v20 = v18;
      v21 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    v23 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v23;
    goto LABEL_8;
  }
  if (!v11)
  {
    v22 = type metadata accessor for LibraryContentConfiguration(0, *(_QWORD *)(a3 + 16), v9, v10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1 + 8, v22);
    goto LABEL_7;
  }
  v12 = *(void **)(a1 + 8);
  v13 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v13;
  v14 = v13;

  v15 = *(void **)(a2 + 16);
  v16 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v15;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v24 = *(void **)(a1 + 40);
  v25 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v25;
  v26 = v25;

  v27 = *(void **)(a2 + 48);
  v28 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v27;
  v29 = v27;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v31;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_D2DF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v9 = *(void **)(a1 + 16);
  if (!v9)
    goto LABEL_5;
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
  {
    v12 = type metadata accessor for LibraryContentConfiguration(0, *(_QWORD *)(a3 + 16), v7, v8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1 + 8, v12);
LABEL_5:
    v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v13;
    goto LABEL_6;
  }
  v11 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
LABEL_6:
  v14 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v15 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_D2E078(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_D2E0C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LibraryModelRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryModelRequest);
}

uint64_t sub_D2E130(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_D2E16C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_D2E1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSObject.NativelyInstantiatedObjectOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSObject.NativelyInstantiatedObjectOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t type metadata accessor for LibraryModelRequest.Filter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryModelRequest.Filter);
}

uint64_t sub_D2E2B8(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *sub_D2E2F0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_D2E340(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t sub_D2E3C4(uint64_t a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

void sub_D2E418(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  int v23;
  void *v24;
  uint64_t AssociatedConformanceWitness;
  id v26;
  void (*v27)(uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  NSArray v37;
  void (*v38)(uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t (**v41)(_QWORD, _QWORD);
  void *v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  char *v45;
  uint64_t v46;
  double v47;
  NSArray v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t AssociatedTypeWitness;
  id v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;

  v56 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for ModelRequest, &associated type descriptor for ModelRequest.ItemConfiguration);
  v53 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v54 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v51 = (char *)&v49 - v8;
  v9 = swift_getAssociatedTypeWitness(255, a3, a2, &protocol requirements base descriptor for ModelRequest, &associated type descriptor for ModelRequest.SectionConfiguration);
  v10 = type metadata accessor for Optional(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v49 - v19;
  v21 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  v58 = v3;
  v49 = v21;
  ((void (*)(uint64_t, uint64_t, double))v21)(a2, a3, v18);
  v22 = *(_QWORD *)(v9 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v23 = v57(v20, 1, v9);
  v52 = v10;
  v50 = v11;
  if (v23 == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    v24 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v9, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v9);
  }
  v26 = v56;
  objc_msgSend(v56, "setSectionKind:", v24);

  v27 = v49;
  v49(a2, a3);
  v28 = v57(v16, 1, v9);
  v29 = v50;
  if (v28 == 1)
  {
    v30 = 0;
    v31 = v50;
    v32 = v52;
  }
  else
  {
    v33 = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v9, v33);
    v31 = v22;
    v32 = v9;
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v32);
  objc_msgSend(v26, "setSectionProperties:", v30);

  v27(a2, a3);
  if (v57(v13, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v52);
  }
  else
  {
    v35 = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 56))(v9, v35);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v9);
    if (v36)
    {
      sub_4E684(0, (unint64_t *)&qword_14FE280, NSSortDescriptor_ptr);
      v37.super.isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v34 = swift_bridgeObjectRelease().n128_u64[0];
      goto LABEL_12;
    }
  }
  v37.super.isa = 0;
LABEL_12:
  objc_msgSend(v26, "setSectionSortDescriptors:", v37.super.isa, v34);

  v38 = *(void (**)(uint64_t, uint64_t))(a3 + 64);
  v39 = v51;
  v38(a2, a3);
  v40 = AssociatedTypeWitness;
  v41 = (uint64_t (**)(_QWORD, _QWORD))swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.ItemConfiguration: ModelRequestContentConfiguration);
  v42 = (void *)v41[3](v40, v41);
  v43 = *(void (**)(char *, uint64_t))(v53 + 8);
  v43(v39, v40);
  objc_msgSend(v26, "setItemKind:", v42);

  v38(a2, a3);
  v44 = (void *)v41[4](v40, v41);
  v43(v39, v40);
  objc_msgSend(v26, "setItemProperties:", v44);

  v45 = v54;
  v38(a2, a3);
  v46 = v41[7](v40, v41);
  v43(v45, v40);
  if (v46)
  {
    sub_4E684(0, (unint64_t *)&qword_14FE280, NSSortDescriptor_ptr);
    v48.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v47 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v48.super.isa = 0;
  }
  objc_msgSend(v26, "setItemSortDescriptors:", v48.super.isa, v47);

}

double sub_D2E930@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  double result;

  v8 = swift_allocObject(&unk_13BB3E0, 48, 7);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a3 + 16);
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_retain();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a3);
  ModelRequest.perform(_:_:)((uint64_t)sub_D2EFC4, v8, a3, WitnessTable, a4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void ModelRequest.perform(_:_:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  _QWORD v17[6];

  v10 = (_QWORD *)swift_allocObject(&unk_13BB390, 48, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 72);
  swift_retain();
  v12 = swift_retain();
  v13 = (void *)v11(a3, a4, v12);
  v17[4] = sub_D2EFA0;
  v17[5] = v10;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_21B54C;
  v17[3] = &block_descriptor_312;
  v14 = _Block_copy(v17);
  v15 = v13;
  v16 = objc_msgSend(v15, "newOperationWithResponseHandler:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);

  if (qword_14FA010 != -1)
    swift_once(&qword_14FA010, sub_D2EBE4);
  -[objc_class addOperation:](ModelRequestQueue.super.isa, "addOperation:", v16);
  a5[3] = sub_4E684(0, &qword_1502938, NSOperation_ptr);
  a5[4] = &protocol witness table for NSOperation;
  swift_release();

  *a5 = v16;
}

id static MPPropertySet.sectionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id v4;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105B360;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySectionTitle);
  *(_QWORD *)(v1 + 40) = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  return v4;
}

id sub_D2EBE4()
{
  id v0;
  NSString v1;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setName:", v1);

  objc_msgSend(v0, "setMaxConcurrentOperationCount:", 4);
  result = objc_msgSend(v0, "setQualityOfService:", 33);
  ModelRequestQueue.super.isa = (Class)v0;
  return result;
}

NSOperationQueue *ModelRequestQueue.unsafeMutableAddressor()
{
  if (qword_14FA010 != -1)
    swift_once(&qword_14FA010, sub_D2EBE4);
  return &ModelRequestQueue;
}

void sub_D2ECC0(void *a1, uint64_t a2, void (*a3)(void *, uint64_t, uint64_t, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;

  v7 = a2;
  if (!a1)
  {
    if (!a2)
    {
      v26 = sub_D2F004();
      v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v26, 0, 0);
      v24 = 0;
      *(_QWORD *)v27 = 0;
      *(_QWORD *)(v27 + 8) = 0;
      *(_BYTE *)(v27 + 16) = 2;
LABEL_8:
      v25 = 1;
      goto LABEL_9;
    }
LABEL_7:
    v28 = sub_D2F004();
    v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v28, 0, 0);
    *(_QWORD *)v29 = v7;
    *(_QWORD *)(v29 + 8) = 0;
    *(_BYTE *)(v29 + 16) = 0;
    swift_errorRetain(v7);
    v7 = 0;
    v24 = 0;
    goto LABEL_8;
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a6 + 8), a5, &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v10 = swift_dynamicCastUnknownClass(a1, AssociatedTypeWitness);
  if (!v10)
  {
    if (!v7)
    {
      v37 = a1;
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502940);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v30);
      v32 = sub_BC0494((uint64_t)&v37, v30, WitnessTable);
      v34 = v33;
      v35 = sub_D2F004();
      v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v35, 0, 0);
      v24 = 0;
      *(_QWORD *)v36 = v32;
      *(_QWORD *)(v36 + 8) = v34;
      v25 = 1;
      *(_BYTE *)(v36 + 16) = 1;
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  v11 = (void *)v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE300);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_105B360;
  v14 = (void *)MPModelResponseDidInvalidateNotification;
  UIScreen.Dimensions.size.getter(COERCE_DOUBLE(1));
  *(_QWORD *)(v13 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v13 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v16;
  v17 = type metadata accessor for BindingRequestResponseInvalidation();
  v7 = swift_allocObject(v17, 41, 7);
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_BYTE *)(v7 + 40) = 0;
  v18 = swift_allocObject(&unk_13BB408, 24, 7);
  swift_weakInit(v18 + 16);
  v19 = swift_allocObject(&unk_13BB430, 32, 7);
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v20, 48, 7);
  v21 = a1;
  v22 = v14;
  v23 = swift_bridgeObjectRetain();
  *(_QWORD *)(v7 + 16) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v23, 0, (uint64_t)sub_CC7988, v19);
  swift_release();
  v24 = sub_D2F098();
  v25 = 0;
LABEL_9:
  a3(v11, v25, v7, v24);
  swift_unknownObjectRelease(v7);
  sub_A90E8(v11, v25);
}

uint64_t sub_D2EF7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_D2EFA0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_D2ECC0(a1, a2, *(void (**)(void *, uint64_t, uint64_t, unint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper_308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_308(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_D2EFC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t *, uint64_t, uint64_t);
  uint64_t v7;
  char v8;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32);
  v7 = a1;
  v8 = a2 & 1;
  return v5(&v7, a3, a4);
}

unint64_t sub_D2F004()
{
  unint64_t result;

  result = qword_1502948;
  if (!qword_1502948)
  {
    result = swift_getWitnessTable(&unk_10A4B04, &type metadata for ModelRequestFailure);
    atomic_store(result, (unint64_t *)&qword_1502948);
  }
  return result;
}

uint64_t sub_D2F048()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D2F06C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_D2F098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1500000;
  if (!qword_1500000)
  {
    v1 = type metadata accessor for BindingRequestResponseInvalidation();
    result = swift_getWitnessTable(&protocol conformance descriptor for BindingRequestResponseInvalidation, v1);
    atomic_store(result, (unint64_t *)&qword_1500000);
  }
  return result;
}

uint64_t sub_D2F0E4(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRetain();
  if (!a3)
    return swift_errorRetain(result);
  return result;
}

uint64_t destroy for ModelRequestFailure(uint64_t a1)
{
  return sub_D2F114(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_D2F114(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRelease(a2);
  if (!a3)
    return swift_errorRelease(result);
  return result;
}

uint64_t _s9MusicCore19ModelRequestFailureOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_D2F0E4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModelRequestFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_D2F0E4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_D2F114(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ModelRequestFailure(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_D2F114(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ModelRequestFailure()
{
  return &type metadata for ModelRequestFailure;
}

uint64_t static Request.label.getter(uint64_t a1)
{
  uint64_t MetatypeMetadata;

  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  return _typeName(_:qualified:)(MetatypeMetadata, 0);
}

double Request.performThenCompleteOnMain(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void (*v11)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v12;
  double result;

  v10 = (_QWORD *)swift_allocObject(&unk_13BB520, 48, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a2;
  v10[5] = a3;
  v11 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(a5 + 32);
  v12 = swift_retain(a3);
  v11(a1, sub_D2F5BC, v10, a4, a5, v12);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_D2F2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  __n128 v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[5];
  char *v58;

  v49 = a4;
  v50 = a5;
  v51 = a2;
  v52 = a3;
  v53 = type metadata accessor for DispatchWorkItemFlags(0);
  v56 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a7, a6, &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v17 = type metadata accessor for Result(0, AssociatedTypeWitness, v16, &protocol self-conformance witness table for Error);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v21 = (char *)&v47 - v20;
  v22 = sub_BF3848();
  v48 = static OS_dispatch_queue.main.getter(v22, v23, v24, v25, v26, v27, v28, v29, v47, v48, v49, v50, v51, v52, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  v30 = *(unsigned __int8 *)(v18 + 80);
  v31 = (v30 + 48) & ~v30;
  v32 = (v19 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject(&unk_13BB588, v32 + 16, v30 | 7);
  *((_QWORD *)v33 + 2) = a6;
  *((_QWORD *)v33 + 3) = a7;
  v34 = v50;
  *((_QWORD *)v33 + 4) = v49;
  *((_QWORD *)v33 + 5) = v34;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v33[v31], v21, v17);
  v35 = &v33[v32];
  v37 = v51;
  v36 = v52;
  *(_QWORD *)v35 = v51;
  *((_QWORD *)v35 + 1) = v36;
  aBlock[4] = sub_D2F7B4;
  v58 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_313;
  v38 = _Block_copy(aBlock);
  v39 = v58;
  swift_unknownObjectRetain(v37);
  swift_retain(v34);
  v40 = swift_release(v39);
  static DispatchQoS.unspecified.getter(v40);
  aBlock[0] = _swiftEmptyArrayStorage;
  v41 = sub_C49E74();
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
  v43 = sub_C3C820();
  v44 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v43, v53, v41);
  v45 = (void *)v48;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v14, v55);
}

uint64_t sub_D2F598()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D2F5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_D2F2D8(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

id sub_D2F5C8()
{
  id *v0;

  return objc_msgSend(*v0, "cancel");
}

uint64_t sub_D2F5D8(__n128 a1)
{
  return dispatch thunk of DispatchWorkItem.cancel()(a1);
}

uint64_t Array<A>.cancel()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t WitnessTable;
  _QWORD v6[6];

  v6[5] = a1;
  v6[2] = a2;
  v6[3] = a3;
  v3 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  return Sequence.forEach(_:)(sub_D2F664, v6, v3, WitnessTable);
}

uint64_t sub_D2F664()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_D2F698(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Array<A>.cancel()(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

void sub_D2F6AC()
{
  Task.cancel()();
}

uint64_t sub_D2F6C0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16), &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v3 = type metadata accessor for Result(0, AssociatedTypeWitness, v2, &protocol self-conformance witness table for Error);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload(v0 + v6, v3) == 1)
    swift_errorRelease(*(_QWORD *)(v0 + v6));
  else
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v6, AssociatedTypeWitness);
  v8 = (v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 16;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v9, v5 | 7);
}

uint64_t sub_D2F7B4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16), &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v3 = *(_QWORD *)(type metadata accessor for Result(0, AssociatedTypeWitness, v2, &protocol self-conformance witness table for Error)- 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(unint64_t, _QWORD, _QWORD))(v0 + 32))(v0 + v4, *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v5 + 8));
}

uint64_t block_copy_helper_309(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_309(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_D2F860@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(v3, a1) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1[2] - 8) + 32))(a3, v3);
  v7 = a1[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, v3, v7);
  return swift_willThrowTypedImpl(a2, v7, a1[4]);
}

uint64_t *RequestResponse.Controller.__allocating_init(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v2 = v1;
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v7 = sub_D33004(a1, v4, v5, v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a1);
  return v7;
}

uint64_t *RequestResponse.Controller.init(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;

  v6 = *v4;
  v7 = sub_D33004(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 8))(a1);
  return v7;
}

double sub_D2F99C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_getObjectType();
  swift_unknownObjectRetain(v1);
  RequestResponseInvalidatable.invalidate()();
  *(_QWORD *)&result = swift_unknownObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t property wrapper backing initializer of RequestResponse.Controller.revision(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v3;

  v1 = *a1;
  v3 = a1;
  return sub_CD6BD0((uint64_t)&v3, v1);
}

double sub_D2FA18(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_10A4C00);
  v4 = swift_getKeyPath(&unk_10A4C38);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v9;
  v6 = swift_getKeyPath(&unk_10A4C00);
  v7 = swift_getKeyPath(&unk_10A4C38);
  v9 = a1;
  swift_retain(v1);
  swift_retain(a1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_D2FFFC(v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void sub_D2FB24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  _BYTE v22[24];

  v2 = v1;
  v3 = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v22[-v10 - 8];
  v12 = (uint64_t)v2 + *(_QWORD *)(v4 + 96);
  v13 = swift_beginAccess(v12, v22, 0, 0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v14(v11, v12, v5, v13);
  v15 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 8);
  LOBYTE(v3) = dispatch thunk of static Equatable.== infix(_:_:)(v11, v3, v5, v15);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  if ((v3 & 1) == 0)
  {
    v17 = RequestResponse.Controller.revision.getter();
    sub_D2F99C();
    v18 = swift_release(v17);
    v19 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 168));
    if (v19)
    {
      v14(v11, v19 + *(_QWORD *)(*(_QWORD *)v19 + 96), v5, v18);
      ((void (*)(char *, uint64_t, uint64_t))v14)(v8, v12, v5);
      swift_retain(v19);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v8, v5, v15);
      v16(v8, v5);
      v16(v11, v5);
      if ((v20 & 1) == 0)
        sub_D2F99C();
      swift_release(v19);
    }
    sub_D2FD54();
  }
}

uint64_t RequestResponse.Controller.revision.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A4C00);
  v2 = swift_getKeyPath(&unk_10A4C38);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_D2FD54()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_beginAccess(v1, v2, 0, 0);
  if (*v1 == 1)
    RequestResponse.Controller.setNeedsReload(_:)(0, 0);
}

uint64_t RequestResponse.Controller.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  v5 = swift_beginAccess(v4, v7, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4, v5);
}

uint64_t RequestResponse.Controller.request.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_D3326C(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*RequestResponse.Controller.request.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 96);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  v11 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16);
  v3[8] = v11;
  v11(v8, v9, v5, v10);
  return sub_D2FF00;
}

void sub_D2FF00(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_D3326C((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_D3326C((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t sub_D2FFAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RequestResponse.Controller.revision.getter();
  *a1 = result;
  return result;
}

double sub_D2FFD4()
{
  uint64_t v0;

  swift_retain();
  return sub_D2FA18(v0);
}

double sub_D2FFFC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *, uint64_t, __n128);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t WitnessTable;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  void (*v72)(double (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v73;
  _QWORD v74[4];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[3];
  char v79[24];

  v2 = v1;
  v4 = *v1;
  v5 = RequestResponse.Controller.revision.getter();
  v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112));
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  if (v6 != *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 112)))
  {
    v8 = *(_QWORD *)(*v2 + 176);
    v9 = *(_QWORD *)((char *)v2 + v8);
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 112));
      swift_retain(*(_QWORD *)((char *)v2 + v8));
      v11 = RequestResponse.Controller.revision.getter();
      swift_release(v9);
      v12 = *(_QWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 112));
      swift_release(v11);
      if (v12 >= v10)
      {
        v13 = *(_QWORD *)((char *)v2 + v8);
        *(_QWORD *)((char *)v2 + v8) = 0;
        swift_release(v13);
      }
    }
    v14 = *(_QWORD *)(*v2 + 168);
    v15 = *(_QWORD *)((char *)v2 + v14);
    if (v15)
    {
      v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
      swift_retain(*(_QWORD *)((char *)v2 + v14));
      v17 = RequestResponse.Controller.revision.getter();
      swift_release(v15);
      v18 = *(_QWORD *)(v17 + *(_QWORD *)(*(_QWORD *)v17 + 112));
      swift_release(v17);
      if (v18 >= v16)
      {
        v19 = *(_QWORD *)((char *)v2 + v14);
        *(_QWORD *)((char *)v2 + v14) = 0;
        swift_release(v19);
      }
    }
    v20 = RequestResponse.Controller.revision.getter();
    v21 = (char *)v2 + *(_QWORD *)(*v2 + 120);
    swift_beginAccess(v21, v79, 0, 0);
    v22 = *(void (**)(_QWORD *, uint64_t, __n128))v21;
    if (*(_QWORD *)v21)
    {
      v23 = *((_QWORD *)v21 + 1);
      v24 = swift_retain(v23);
      v22(v2, v20, v24);
      sub_5C198((uint64_t)v22, v23);
    }
    v25 = *(_QWORD *)(*(_QWORD *)v20 + 112);
    v26 = *(_QWORD *)(v20 + v25);
    v27 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 160));
    swift_beginAccess(v27, v78, 32, 0);
    v28 = *v27;
    v76 = v26;
    v30 = *(_QWORD *)(v4 + 80);
    v29 = *(_QWORD *)(v4 + 88);
    v32 = type metadata accessor for RequestResponse.Revision(255, v30, v29, v31);
    swift_getFunctionTypeMetadata2(67108866, v4, v32, (char *)&type metadata for () + 8);
    v33 = type metadata accessor for Array(0);
    Dictionary.subscript.getter(&v77, &v76, v28, &type metadata for Int, v33, &protocol witness table for Int);
    v34 = v77;
    if (v77)
    {
      v35 = swift_endAccess(v78);
      v78[0] = v34;
      __chkstk_darwin(v35);
      v74[2] = v2;
      v74[3] = v20;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v33);
      Sequence.forEach(_:)(sub_D338E8, v74, v33, WitnessTable);
      swift_bridgeObjectRelease(v78[0]);
    }
    else
    {
      swift_endAccess(v78);
    }
    v76 = *(_QWORD *)(v20 + v25);
    v77 = 0;
    v37 = swift_beginAccess(v27, v78, 33, 0);
    v38 = type metadata accessor for Dictionary(0, &type metadata for Int, v33, &protocol witness table for Int, v37);
    Dictionary.subscript.setter(&v77, &v76, v38);
    swift_endAccess(v78);
    v39 = RequestResponse.Controller.revision.getter();
    v40 = (_QWORD *)(v39 + *(_QWORD *)(*(_QWORD *)v39 + 120));
    v41 = *v40;
    v42 = v40[1];
    swift_unknownObjectRetain(*v40);
    swift_release(v39);
    ObjectType = swift_getObjectType();
    LOBYTE(v39) = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(ObjectType, v42);
    swift_unknownObjectRelease(v41);
    if ((v39 & 1) != 0)
    {
      if (qword_14FA018 != -1)
        swift_once(&qword_14FA018, sub_D32DC8);
      v44 = type metadata accessor for Logger(0);
      v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1502950);
      v46 = Logger.logObject.getter(v45);
      v47 = static os_log_type_t.default.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc(12, -1);
        v49 = swift_slowAlloc(32, -1);
        v75 = v25;
        v50 = v49;
        v78[0] = v49;
        *(_DWORD *)v48 = 136446210;
        v51 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v30, v29);
        v53 = v52;
        *(_QWORD *)(v48 + 4) = sub_BA95EC(v51, v52, v78);
        swift_bridgeObjectRelease(v53);
        _os_log_impl(&dword_0, v46, v47, "‚ï≠ %{public}s", (uint8_t *)v48, 0xCu);
        swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
        v54 = v50;
        v25 = v75;
        swift_slowDealloc(v54, -1, -1);
        swift_slowDealloc(v48, -1, -1);
      }

      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.default.getter(v56);
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v58 = 0;
        _os_log_impl(&dword_0, v56, v57, "‚ïû üîÑ Invalid", v58, 2u);
        swift_slowDealloc(v58, -1, -1);
      }

      swift_retain(v20);
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.default.getter(v60);
      if (os_log_type_enabled(v60, v61))
      {
        v62 = swift_slowAlloc(12, -1);
        *(_DWORD *)v62 = 134349056;
        *(_QWORD *)(v62 + 4) = *(_QWORD *)(v20 + v25);
        swift_release(v20);
        _os_log_impl(&dword_0, v60, v61, "‚ï∞ RevisionID=%{public}ld", (uint8_t *)v62, 0xCu);
        swift_slowDealloc(v62, -1, -1);

      }
      else
      {

        swift_release(v20);
      }
      sub_D2FD54();
    }
    else
    {
      v63 = RequestResponse.Controller.revision.getter();
      v64 = *(_QWORD *)(v63 + *(_QWORD *)(*(_QWORD *)v63 + 112));
      swift_release(v63);
      v65 = RequestResponse.Controller.revision.getter();
      v66 = (_QWORD *)(v65 + *(_QWORD *)(*(_QWORD *)v65 + 120));
      v67 = *v66;
      v68 = v66[1];
      swift_unknownObjectRetain(*v66);
      swift_release(v65);
      v69 = swift_getObjectType();
      v70 = swift_allocObject(&unk_13BB940, 24, 7);
      swift_weakInit(v70 + 16);
      v71 = (_QWORD *)swift_allocObject(&unk_13BB9B8, 48, 7);
      v71[2] = v30;
      v71[3] = v29;
      v71[4] = v70;
      v71[5] = v64;
      v72 = *(void (**)(double (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(v68 + 24);
      v73 = swift_retain(v70);
      v72(sub_D3394C, v71, v69, v68, v73);
      swift_unknownObjectRelease(v67);
      swift_release(v70);
    }
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

double sub_D3065C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  char v51[24];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, v51, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v14 = Strong;
    v15 = RequestResponse.Controller.revision.getter();
    v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
    swift_release(v15);
    if (v16 == a4)
    {
      v49 = a2;
      if (qword_14FA018 != -1)
        swift_once(&qword_14FA018, sub_D32DC8);
      v17 = type metadata accessor for Logger(0);
      v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1502950);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v48 = a1;
        v21 = swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        v50[0] = v22;
        *(_DWORD *)v21 = 136446210;
        v23 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
        v25 = v24;
        *(_QWORD *)(v21 + 4) = sub_BA95EC(v23, v24, v50);
        swift_bridgeObjectRelease(v25);
        _os_log_impl(&dword_0, v19, v20, "‚ï≠ %{public}s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        v26 = v21;
        a1 = v48;
        swift_slowDealloc(v26, -1, -1);
      }

      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.default.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_0, v28, v29, "‚ïû üîÑ Invalidated", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }

      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc(12, -1);
        *(_DWORD *)v34 = 134349056;
        *(_QWORD *)(v34 + 4) = a4;
        _os_log_impl(&dword_0, v32, v33, "‚ïû RevisionID=%{public}ld", (uint8_t *)v34, 0xCu);
        swift_slowDealloc(v34, -1, -1);
      }

      v35 = swift_unknownObjectRetain_n(a1, 2);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.default.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v50[0] = v39;
        *(_DWORD *)v38 = 136446210;
        ObjectType = swift_getObjectType();
        v41 = (char *)dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(ObjectType, *(_QWORD *)(v49 + 8));
        v43 = v42;
        *(_QWORD *)(v38 + 4) = sub_BA95EC(v41, v42, v50);
        swift_unknownObjectRelease_n(a1, 2);
        swift_bridgeObjectRelease(v43);
        _os_log_impl(&dword_0, v36, v37, "‚ï∞ Invalidator=%{public}s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(a1, 2);
      }
      v44 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 128);
      swift_beginAccess(v44, v50, 0, 0);
      v45 = *(void (**)(uint64_t, uint64_t))v44;
      if (*(_QWORD *)v44)
      {
        v46 = *(_QWORD *)(v44 + 8);
        swift_retain(v46);
        v47 = RequestResponse.Controller.revision.getter();
        v45(v14, v47);
        sub_5C198((uint64_t)v45, v46);
        swift_release(v47);
      }
      sub_D2FD54();
    }
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

double RequestResponse.Controller.$revision.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v1 = *v0;
  swift_beginAccess((char *)v0 + *(_QWORD *)(*v0 + 104), v6, 33, 0);
  v3 = type metadata accessor for RequestResponse.Revision(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v4 = type metadata accessor for Published(0, v3);
  Published.projectedValue.getter(v4);
  *(_QWORD *)&result = swift_endAccess(v6).n128_u64[0];
  return result;
}

uint64_t RequestResponse.Controller.willReloadRequest.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_A9DEC(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.willReloadRequest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_5C198(v6, v7);
}

uint64_t (*RequestResponse.Controller.willReloadRequest.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112), a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t RequestResponse.Controller.didApplyRevision.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_A9DEC(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.didApplyRevision.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_5C198(v6, v7);
}

uint64_t (*RequestResponse.Controller.didApplyRevision.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t RequestResponse.Controller.revisionDidInvalidate.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_A9DEC(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.revisionDidInvalidate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_5C198(v6, v7);
}

uint64_t (*RequestResponse.Controller.revisionDidInvalidate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), a1, 33, 0);
  return j_j__swift_endAccess;
}

void sub_D30DF4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  _BYTE v13[24];

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v4, v13, 0, 0);
  if (*v4 != v3)
  {
    v5 = RequestResponse.Controller.revision.getter();
    v6 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120));
    v7 = *v6;
    v8 = v6[1];
    swift_unknownObjectRetain(*v6);
    swift_release(v5);
    ObjectType = swift_getObjectType();
    LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
    swift_unknownObjectRelease(v7);
    if ((v5 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)v2 + 168);
      v11 = *(_QWORD *)(v2 + v10);
      if (!v11
        || (swift_retain(*(_QWORD *)(v2 + v10)),
            v12 = RequestResponse.Revision.isValid.getter(),
            swift_release(v11),
            !v12))
      {
        sub_D2FD54();
      }
    }
  }
}

BOOL RequestResponse.Revision.isValid.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v3 = *v1;
  v2 = v1[1];
  ObjectType = swift_getObjectType();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  swift_unknownObjectRetain(v3);
  LOBYTE(v2) = v5(ObjectType, v2);
  swift_unknownObjectRelease(v3);
  return (v2 & 1) == 0;
}

uint64_t RequestResponse.Controller.isAutomaticReloadingEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

void RequestResponse.Controller.isAutomaticReloadingEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v5[24];

  v3 = (char *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_D30DF4(v4);
}

void (*RequestResponse.Controller.isAutomaticReloadingEnabled.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v4, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_D31048;
}

void sub_D31048(uint64_t a1, uint64_t a2)
{
  sub_D31210(a1, a2, (void (*)(_QWORD))RequestResponse.Controller.isAutomaticReloadingEnabled.setter);
}

double sub_D31054(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  *(_QWORD *)&result = swift_beginAccess(v3, v9, 0, 0).n128_u64[0];
  if ((*v3 & 1) == 0 && (a1 & 1) != 0)
  {
    v5 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
    if (v5)
    {
      v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112));
      swift_retain(v5);
      v7 = RequestResponse.Controller.revision.getter();
      v8 = *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 112));
      swift_release(v7);
      if (v8 >= v6)
        *(_QWORD *)&result = swift_release(v5).n128_u64[0];
      else
        return sub_D2FA18(v5);
    }
  }
  return result;
}

uint64_t RequestResponse.Controller.isPaused.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

double RequestResponse.Controller.isPaused.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v6[24];

  v3 = (char *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return sub_D31054(v4);
}

void (*RequestResponse.Controller.isPaused.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess(v4, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_D31204;
}

void sub_D31204(uint64_t a1, uint64_t a2)
{
  sub_D31210(a1, a2, (void (*)(_QWORD))RequestResponse.Controller.isPaused.setter);
}

void sub_D31210(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(_QWORD *)a1 + 32));
  free(v3);
}

void RequestResponse.Controller.setNeedsReload(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t aBlock[5];
  uint64_t v76;

  v3 = v2;
  v6 = *(_QWORD **)v3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v71 = *(_QWORD *)(v7 - 8);
  v72 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v6[10];
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v6;
  if (a1)
  {
    v19 = (_QWORD *)swift_allocObject(&unk_13BB608, 48, 7);
    v19[2] = v13;
    v20 = v6[11];
    v19[3] = v20;
    v19[4] = a1;
    v19[5] = a2;
    v74[0] = sub_D33398;
    v74[1] = v19;
    swift_beginAccess(v3 + v6[19], aBlock, 33, 0);
    v22 = type metadata accessor for RequestResponse.Revision(255, v13, v20, v21);
    swift_getFunctionTypeMetadata2(67108866, v6, v22, (char *)&type metadata for () + 8);
    v23 = type metadata accessor for Array(0);
    swift_retain(a2);
    Array.append(_:)(v74, v23);
    swift_endAccess(aBlock);
    v18 = *(_QWORD **)v3;
  }
  v24 = v18[23];
  if ((*(_BYTE *)(v3 + v24) & 1) == 0)
  {
    *(_BYTE *)(v3 + v24) = 1;
    v25 = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168));
    if (v25)
    {
      v26 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
      v27 = swift_beginAccess(v26, v74, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v26, v13, v27);
      v28 = v25 + *(_QWORD *)(*(_QWORD *)v25 + 96);
      v29 = v6[11];
      v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v29 + 40);
      v31 = swift_retain(v25);
      LOBYTE(v28) = v30(v28, v13, v29, v31);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      if ((v28 & 1) != 0)
      {
        if (qword_14FA018 != -1)
          swift_once(&qword_14FA018, sub_D32DC8);
        v32 = type metadata accessor for Logger(0);
        v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1502950);
        v34 = Logger.logObject.getter(v33);
        v35 = static os_log_type_t.default.getter(v34);
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc(12, -1);
          v68 = v33;
          v37 = v36;
          v67 = swift_slowAlloc(32, -1);
          aBlock[0] = v67;
          *(_DWORD *)v37 = 136446210;
          v38 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v13, v29);
          v40 = v39;
          *(_QWORD *)(v37 + 4) = sub_BA95EC(v38, v39, aBlock);
          swift_bridgeObjectRelease(v40);
          _os_log_impl(&dword_0, v34, v35, "‚ï≠ %{public}s", (uint8_t *)v37, 0xCu);
          v41 = v67;
          swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v41, -1, -1);
          swift_slowDealloc(v37, -1, -1);
        }

        v43 = Logger.logObject.getter(v42);
        v44 = static os_log_type_t.default.getter(v43);
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v45 = 0;
          _os_log_impl(&dword_0, v43, v44, "‚ïû üõë Cancelled", v45, 2u);
          swift_slowDealloc(v45, -1, -1);
        }

        swift_retain(v25);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.default.getter(v47);
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc(12, -1);
          *(_DWORD *)v49 = 134349056;
          *(_QWORD *)(v49 + 4) = *(_QWORD *)(v25 + *(_QWORD *)(*(_QWORD *)v25 + 112));
          swift_release(v25);
          _os_log_impl(&dword_0, v47, v48, "‚ï∞ RevisionID=%{public}ld", (uint8_t *)v49, 0xCu);
          swift_slowDealloc(v49, -1, -1);

        }
        else
        {

          swift_release(v25);
        }
        v50 = *(_QWORD *)(v25 + *(_QWORD *)(*(_QWORD *)v25 + 112));
        swift_beginAccess(v3 + *(_QWORD *)(*(_QWORD *)v3 + 192), aBlock, 33, 0);
        sub_CBD98C(&v73, v50);
        swift_endAccess(aBlock);
        sub_D2F99C();
      }
      swift_release(v25);
    }
    v51 = sub_BF3848();
    v59 = (void *)static OS_dispatch_queue.main.getter(v51, v52, v53, v54, v55, v56, v57, v58, v67, v68, v69, v70, v71, v72, v73);
    aBlock[4] = (uint64_t)sub_D33358;
    v76 = v3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_42D124;
    aBlock[3] = (uint64_t)&block_descriptor_314;
    v60 = _Block_copy(aBlock);
    v61 = v76;
    swift_retain(v3);
    v62 = swift_release(v61);
    static DispatchQoS.unspecified.getter(v62);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v63 = sub_4DD24((unint64_t *)&qword_14FF8C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDF48);
    v65 = sub_C3C820();
    v66 = v72;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v64, v65, v72, v63);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v60);
    _Block_release(v60);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v66);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v12, v70);
  }
}

void sub_D3182C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t FunctionTypeMetadata2;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t, __n128);
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(uint64_t *__return_ptr, uint64_t, double (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t WitnessTable;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _QWORD v83[5];
  uint64_t v84[5];
  char v85[24];
  char v86[24];
  char v87[24];

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(uint64_t **)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - v9;
  __chkstk_darwin(v11);
  v80 = (uint64_t)&v72 - v12;
  v13 = *(_QWORD *)(v3 + 184);
  if (*((_BYTE *)v1 + v13) != 1)
    return;
  *((_BYTE *)v1 + v13) = 0;
  v14 = *v1;
  v77 = *(_QWORD *)(*v1 + 168);
  v15 = *(uint64_t *)((char *)v1 + v77);
  if (v15 || (v15 = *(uint64_t *)((char *)v1 + *(_QWORD *)(v14 + 176))) != 0)
  {
    v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
    v17 = v16 + 1;
    if (!__OFADD__(v16, 1))
      goto LABEL_5;
  }
  else
  {
    v70 = RequestResponse.Controller.revision.getter();
    v71 = *(_QWORD *)(v70 + *(_QWORD *)(*(_QWORD *)v70 + 112));
    swift_release();
    v17 = v71 + 1;
    if (!__OFADD__(v71, 1))
    {
LABEL_5:
      v73 = v7;
      v18 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
      v19 = swift_beginAccess(v18, v87, 0, 0);
      v75 = v5;
      v74 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))v5[2];
      v74(v80, v18, v4, v19);
      v20 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
      swift_beginAccess(v20, v86, 1, 0);
      v83[0] = *v20;
      v79 = v17;
      *(_QWORD *)&v81 = v17;
      swift_beginAccess((char *)v2 + *(_QWORD *)(*v2 + 160), v84, 33, 0);
      v78 = *(_QWORD *)(v3 + 88);
      v22 = type metadata accessor for RequestResponse.Revision(255, v4, v78, v21);
      FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v3, v22, (char *)&type metadata for () + 8);
      v24 = type metadata accessor for Array(255);
      v26 = type metadata accessor for Dictionary(0, &type metadata for Int, v24, &protocol witness table for Int, v25);
      swift_bridgeObjectRetain();
      Dictionary.subscript.setter(v83, &v81, v26);
      swift_endAccess(v84);
      *v20 = static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
      swift_bridgeObjectRelease();
      v27 = (uint64_t)v2 + *(_QWORD *)(*v2 + 112);
      swift_beginAccess(v27, v85, 0, 0);
      v28 = *(void (**)(uint64_t *, uint64_t, __n128))v27;
      if (*(_QWORD *)v27)
      {
        v29 = *(_QWORD *)(v27 + 8);
        v30 = swift_retain();
        v28(v2, v80, v30);
        sub_5C198((uint64_t)v28, v29);
      }
      v31 = swift_checkMetadataState(0, v22);
      swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
      v5 = sub_D32E48(v79, v80);
      *(uint64_t *)((char *)v2 + v77) = (uint64_t)v5;
      swift_retain();
      swift_release();
      if (qword_14FA018 == -1)
        goto LABEL_8;
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_27:
  swift_once(&qword_14FA018, sub_D32DC8);
LABEL_8:
  v32 = type metadata accessor for Logger(0);
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1502950);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter();
  v36 = os_log_type_enabled(v34, v35);
  v76 = v5;
  if (v36)
  {
    v37 = swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v84[0] = v38;
    *(_DWORD *)v37 = 136446210;
    v39 = (char *)(*(uint64_t (**)(uint64_t))(v78 + 24))(v4);
    *(_QWORD *)(v37 + 4) = sub_BA95EC(v39, v40, v84);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v34, v35, "‚ï≠ %{public}s", (uint8_t *)v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }

  v41 = (uint64_t (*)(char *, uint64_t, uint64_t))v74;
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_0, v43, v44, "‚ïû üï∫Performing", v45, 2u);
    swift_slowDealloc(v45, -1, -1);
  }

  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc(12, -1);
    *(_DWORD *)v49 = 134349056;
    *(_QWORD *)(v49 + 4) = v79;
    _os_log_impl(&dword_0, v47, v48, "‚ïû RevisionID=%{public}ld", (uint8_t *)v49, 0xCu);
    swift_slowDealloc(v49, -1, -1);
  }

  v50 = v41(v10, v80, v4);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc(12, -1);
    v54 = swift_slowAlloc(32, -1);
    v84[0] = v54;
    *(_DWORD *)v53 = 136446210;
    v55 = v73;
    v41(v73, (uint64_t)v10, v4);
    v56 = (char *)String.init<A>(describing:)(v55, v4);
    *(_QWORD *)(v53 + 4) = sub_BA95EC(v56, v57, v84);
    v58 = swift_bridgeObjectRelease();
    v75 = (uint64_t *)v75[1];
    ((void (*)(char *, uint64_t, __n128))v75)(v10, v4, v58);
    _os_log_impl(&dword_0, v51, v52, "‚ï∞ Request=%{public}s", (uint8_t *)v53, 0xCu);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v53, -1, -1);
  }
  else
  {
    v75 = (uint64_t *)v75[1];
    ((void (*)(char *, uint64_t))v75)(v10, v4);
  }

  v59 = RequestResponse.Controller.revision.getter();
  v60 = swift_allocObject(&unk_13BB940, 24, 7);
  swift_weakInit(v60 + 16);
  v61 = (_QWORD *)swift_allocObject(&unk_13BB968, 40, 7);
  v61[2] = v76;
  v61[3] = v60;
  v61[4] = v79;
  v62 = v78;
  v63 = *(void (**)(uint64_t *__return_ptr, uint64_t, double (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t, __n128))(v78 + 32);
  swift_retain();
  v64 = swift_retain();
  v63(v84, v59, sub_D3381C, v61, v4, v62, v64);
  swift_release();
  swift_release();
  swift_release();
  sub_D33828((uint64_t)v84, (uint64_t)&v81);
  if (v82)
  {
    sub_8B15C(&v81, (uint64_t)v83);
    v66 = *(uint64_t *)((char *)v2 + v77);
    if (v66)
    {
      if (*(_QWORD *)(v66 + *(_QWORD *)(*(_QWORD *)v66 + 112)) == v79)
      {
        v67 = type metadata accessor for RequestResponse.Controller.TaskInvalidator(0, v4, v78, v65);
        sub_55D1C((uint64_t)v83, (uint64_t)&v81);
        v68 = swift_allocObject(v67, 80, 7);
        *(_BYTE *)(v68 + 56) = 0;
        *(_QWORD *)(v68 + 64) = 0;
        *(_QWORD *)(v68 + 72) = 0;
        sub_8B15C(&v81, v68 + 16);
        WitnessTable = swift_getWitnessTable(&unk_10A4DF8, v67);
        swift_retain();
        sub_D32460(v68, WitnessTable);
        swift_release();
      }
    }
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v83);
    sub_D33870((uint64_t)v84);
    ((void (*)(uint64_t, uint64_t))v75)(v80, v4);
  }
  else
  {
    swift_release();
    sub_D33870((uint64_t)v84);
    ((void (*)(uint64_t, uint64_t))v75)(v80, v4);
    sub_D33870((uint64_t)&v81);
  }
}

uint64_t sub_D320B0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 80, 7);
  *(_BYTE *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  sub_8B15C(a1, v3 + 16);
  return v3;
}

uint64_t sub_D320F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v1 + 56) == 1 && (result & 1) == 0)
  {
    v2 = *(_QWORD *)(v1 + 40);
    v3 = *(_QWORD *)(v1 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  }
  return result;
}

uint64_t sub_D3214C(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + 56);
  *(_BYTE *)(v1 + 56) = a1;
  return sub_D320F8(v2);
}

double sub_D3215C()
{
  _QWORD *v0;
  double result;

  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  sub_5C198(v0[8], v0[9]);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 80, 7).n128_u64[0];
  return result;
}

uint64_t sub_D32188()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 64, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 64);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t sub_D321D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 64, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return sub_5C198(v5, v6);
}

uint64_t (*sub_D32224(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 64, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t Lyrics.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t (*sub_D3226C(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 56);
  return sub_D32288;
}

uint64_t sub_D32288(uint64_t a1)
{
  return sub_D3214C(*(_BYTE *)(a1 + 8));
}

uint64_t sub_D322AC(uint64_t a1)
{
  return sub_D336A8(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

double sub_D322B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  double result;
  _BYTE v21[24];

  v12 = *a4;
  v13 = (uint64_t)a4 + *(_QWORD *)(*a4 + 104);
  swift_beginAccess(v13, v21, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v12 + 88), *(_QWORD *)(v12 + 80), &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v16 = type metadata accessor for Result(0, AssociatedTypeWitness, v15, &protocol self-conformance witness table for Error);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v13, a1, v16);
  swift_endAccess(v21);
  if (a2)
  {
    v17 = a2;
  }
  else
  {
    v18 = type metadata accessor for GenericRequestResponseInvalidation();
    v17 = swift_allocObject(v18, 49, 7);
    *(_QWORD *)(v17 + 32) = 0;
    *(_QWORD *)(v17 + 40) = 0;
    *(_BYTE *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 16) = 0x636972656E6547;
    *(_QWORD *)(v17 + 24) = 0xE700000000000000;
    a3 = sub_4DD24(qword_1502AF0, (uint64_t (*)(uint64_t))type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  }
  swift_unknownObjectRetain(a2);
  sub_D32460(v17, a3);
  sub_BF3848();
  v19 = (_QWORD *)swift_allocObject(&unk_13BB990, 40, 7);
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a4;
  swift_retain();
  swift_retain();
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_D338DC, (uint64_t)v19);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_D32460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  v5 = *v4;
  v6 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  swift_unknownObjectRetain(a1);
  sub_D32C64(v5, v6);
  swift_unknownObjectRelease(v5);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

double sub_D324B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  const char *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  _BYTE v43[24];

  v5 = *a3;
  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v43, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    if (qword_14FA018 != -1)
      swift_once(&qword_14FA018, sub_D32DC8);
    v10 = type metadata accessor for Logger(0);
    v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1502950);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v42[0] = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = (char *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v5 + 88) + 24))(*(_QWORD *)(v5 + 80));
      *(_QWORD *)(v14 + 4) = sub_BA95EC(v16, v17, v42);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v12, v13, "‚ï≠ %{public}s", (uint8_t *)v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "‚ïû ‚úÖ Finished Loading", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(12, -1);
      *(_DWORD *)v25 = 134349056;
      *(_QWORD *)(v25 + 4) = a2;
      _os_log_impl(&dword_0, v23, v24, "‚ïû RevisionID=%{public}ld", (uint8_t *)v25, 0xCu);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = *(uint64_t *)((char *)a3 + *(_QWORD *)(*a3 + 112));
    swift_beginAccess(v9 + *(_QWORD *)(*(_QWORD *)v9 + 192), v42, 33, 0);
    sub_C7A60C(v26);
    v28 = v27;
    swift_endAccess(v42);
    if ((v28 & 1) == 0)
    {
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        v33 = "‚ï∞ ‚è≠ Skipping revision; Cancelled";
LABEL_23:
        _os_log_impl(&dword_0, v30, v31, v33, v32, 2u);
        swift_slowDealloc(v32, -1, -1);
        swift_release();

        return result;
      }
      goto LABEL_24;
    }
    v34 = (_BYTE *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 144));
    swift_beginAccess(v34, v42, 0, 0);
    if (*v34 == 1)
    {
      v35 = *(_QWORD *)(*(_QWORD *)v9 + 176);
      v36 = *(_QWORD *)(v9 + v35);
      if (v36)
      {
        if (*(_QWORD *)(v36 + *(_QWORD *)(*(_QWORD *)v36 + 112)) >= a2)
          goto LABEL_25;
        goto LABEL_21;
      }
      if (a2 > 0)
      {
LABEL_21:
        *(_QWORD *)(v9 + v35) = a3;
        swift_release();
        swift_retain();
        v30 = Logger.logObject.getter(v41);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          v33 = "‚ï∞ üí§ Set as Pending; RRC is Paused";
          goto LABEL_23;
        }
LABEL_24:

      }
    }
    else
    {
      v37 = RequestResponse.Controller.revision.getter();
      v38 = *(_QWORD *)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 112));
      swift_release();
      if (v38 < v26)
      {
        swift_retain();
        sub_D2FA18(v39);
        v30 = Logger.logObject.getter(v40);
        v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v32 = 0;
          v33 = "‚ï∞ üëå Applied";
          goto LABEL_23;
        }
        goto LABEL_24;
      }
    }
LABEL_25:
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t *RequestResponse.Controller.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), v2);
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v5 = type metadata accessor for RequestResponse.Revision(255, v2, *(_QWORD *)(v1 + 88), v4);
  v6 = type metadata accessor for Published(0, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  sub_5C198(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112) + 8));
  sub_5C198(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120) + 8));
  sub_5C198(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RequestResponse.Controller.__deallocating_deinit()
{
  return sub_D08D94((void (*)(void))RequestResponse.Controller.deinit);
}

uint64_t RequestResponse.Revision.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t RequestResponse.Revision.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 104);
  swift_beginAccess(v4, v9, 0, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 80), &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v7 = type metadata accessor for Result(0, AssociatedTypeWitness, v6, &protocol self-conformance witness table for Error);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t RequestResponse.Revision.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v1 + 88), *(_QWORD *)(*v1 + 80), &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v6 = (_QWORD *)type metadata accessor for Result(0, AssociatedTypeWitness, v5, &protocol self-conformance witness table for Error);
  v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - v8;
  v10 = (uint64_t)v1 + *(_QWORD *)(v3 + 104);
  v11 = swift_beginAccess(v10, v15, 0, 0);
  (*(void (**)(char *, uint64_t, _QWORD *, __n128))(v7 + 16))(v9, v10, v6, v11);
  sub_D2F860(v6, (uint64_t)&v14, a1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 0, 1, AssociatedTypeWitness);
}

BOOL RequestResponse.Revision.isInitial.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)) == 0;
}

uint64_t RequestResponse.Revision.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

double sub_D32C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  double result;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
    swift_getObjectType();
    swift_unknownObjectRetain(v6);
    RequestResponseInvalidatable.invalidate()();
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

uint64_t *RequestResponse.Revision.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), v2);
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v1 + 88), v2, &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v6 = type metadata accessor for Result(0, AssociatedTypeWitness, v5, &protocol self-conformance witness table for Error);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  swift_unknownObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
  return v0;
}

uint64_t RequestResponse.Revision.__deallocating_deinit()
{
  return sub_D08D94((void (*)(void))RequestResponse.Revision.deinit);
}

void sub_D32DB0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 112));
}

uint64_t sub_D32DC8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_1502950);
  __swift_project_value_buffer(v0, (uint64_t)qword_1502950);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x5274736575716552, 0xEF65736E6F707365);
}

uint64_t *sub_D32E48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;

  v5 = *v2;
  v7 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(*v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v7, &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
  v10 = type metadata accessor for Result(0, AssociatedTypeWitness, v9, &protocol self-conformance witness table for Error);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v23 - v13);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 112)) = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v7 - 8) + 16))((uint64_t)v2 + *(_QWORD *)(*v2 + 96), a2, v7, v12);
  v16 = type metadata accessor for RequestResponse.Revision.InitialResponseLoadingError(0, v7, v6, v15);
  WitnessTable = swift_getWitnessTable(&unk_10A4EB8, v16);
  *v14 = swift_allocError(v16, WitnessTable, 0, 0);
  swift_storeEnumTagMultiPayload(v14, v10, 1);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v11 + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 104), v14, v10);
  v18 = type metadata accessor for GenericRequestResponseInvalidation();
  v19 = swift_allocObject(v18, 49, 7);
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 40) = 0;
  *(_BYTE *)(v19 + 48) = 0;
  *(_QWORD *)(v19 + 16) = 0x636972656E6547;
  *(_QWORD *)(v19 + 24) = 0xE700000000000000;
  v20 = sub_4DD24(qword_1502AF0, (uint64_t (*)(uint64_t))type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  v21 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  *v21 = v19;
  v21[1] = v20;
  return v2;
}

uint64_t *sub_D33004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t FunctionTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _BYTE v23[24];
  uint64_t *v24;

  v5 = v4;
  v7 = *v5;
  v8 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 112));
  *v8 = 0;
  v8[1] = 0;
  v9 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 120));
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 128));
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 136)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 144)) = 0;
  v11 = *(_QWORD *)(*v5 + 152);
  v12 = *(_QWORD *)(v7 + 80);
  v13 = type metadata accessor for RequestResponse.Revision(255, v12, *(_QWORD *)(v7 + 88), a4);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v7, v13, (char *)&type metadata for () + 8);
  *(uint64_t *)((char *)v5 + v11) = static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
  v15 = *(_QWORD *)(*v5 + 160);
  v16 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v16, 0, 0);
  v18 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  *(uint64_t *)((char *)v5 + v15) = Dictionary.init(dictionaryLiteral:)(v18, &type metadata for Int, v16, &protocol witness table for Int);
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 168)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 176)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 184)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 192)) = (uint64_t)&_swiftEmptySetSingleton;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))((uint64_t)v5 + *(_QWORD *)(*v5 + 96), a1, v12);
  v19 = swift_checkMetadataState(0, v13);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = sub_D32E48(0, a1);
  sub_D2F99C();
  swift_beginAccess((char *)v5 + *(_QWORD *)(*v5 + 104), v23, 33, 0);
  v21 = *v20;
  v24 = v20;
  sub_CD6BD0((uint64_t)&v24, v21);
  swift_endAccess(v23);
  return v5;
}

uint64_t sub_D33204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RequestResponse.Controller.revision.getter();
  *a1 = result;
  return result;
}

double sub_D3322C()
{
  uint64_t v0;

  swift_retain();
  return sub_D2FA18(v0);
}

uint64_t sub_D33254()
{
  return 16;
}

__n128 sub_D33260(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_D3326C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + *(_QWORD *)(v7 + 96);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  v10 = swift_beginAccess(v8, v12, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v8, a1, v3, v10);
  swift_endAccess(v12);
  sub_D2FB24((uint64_t)v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for RequestResponse.Revision(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Revision);
}

uint64_t block_copy_helper_310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_310(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_D33374()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_D33398(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 32))(*a1, *a2);
}

uint64_t sub_D333C0()
{
  return 16;
}

__n128 sub_D333CC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_D333D8()
{
  return RequestResponse.Controller.$revision.getter();
}

double sub_D333F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_D33704(a1, a2, a3, a4);
}

uint64_t sub_D33418()
{
  return 16;
}

__n128 sub_D33424(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for RequestResponse()
{
  return &type metadata for RequestResponse;
}

uint64_t sub_D33440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[13];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v4 = v2;
  if (v5 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v6 = type metadata accessor for RequestResponse.Revision(255, v2, *(_QWORD *)(a1 + 88), v3);
    v7 = type metadata accessor for Published(319, v6);
    v4 = v7;
    if (v8 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v7 - 8) + 64;
      v10[2] = &unk_10A4CF8;
      v10[3] = &unk_10A4CF8;
      v10[4] = &unk_10A4CF8;
      v10[5] = &unk_10A4D10;
      v10[6] = &unk_10A4D10;
      v10[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[9] = &unk_10A4D28;
      v10[10] = &unk_10A4D28;
      v10[11] = &unk_10A4D10;
      v10[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      return swift_initClassMetadata2(a1, 0, 13, v10, a1 + 96);
    }
  }
  return v4;
}

uint64_t type metadata accessor for RequestResponse.Controller(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Controller);
}

uint64_t sub_D33530(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "(";
  v2[1] = &unk_10A4D10;
  v2[2] = &unk_10A4CF8;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t type metadata accessor for RequestResponse.Controller.TaskInvalidator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Controller.TaskInvalidator);
}

uint64_t sub_D33590(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[4];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 88), v2, &protocol requirements base descriptor for Request, &associated type descriptor for Request.ResponseContent);
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14FE900);
    v7 = type metadata accessor for Result(319, AssociatedTypeWitness, v6, &protocol self-conformance witness table for Error);
    v3 = v7;
    if (v8 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v7 - 8) + 64;
      v10[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[3] = &unk_10A4DB8;
      return swift_initClassMetadata2(a1, 0, 4, v10, a1 + 96);
    }
  }
  return v3;
}

uint64_t sub_D3367C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&unk_10A4DD0, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_D336A8(uint64_t a1, uint64_t a2)
{
  Swift::String v2;
  void *object;

  v2._countAndFlagsBits = (*(uint64_t (**)(void))(a2 + 24))();
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return 0x3A664F6B736154;
}

double sub_D33704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  _BYTE v15[24];

  v6 = type metadata accessor for RequestResponse.Revision(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v7 = type metadata accessor for Published.Publisher(0, v6);
  v8 = __chkstk_darwin(v7);
  v10 = &v15[-v9 - 8];
  (*(void (**)(_BYTE *, uint64_t, double))(v11 + 16))(&v15[-v9 - 8], a1, v8);
  swift_beginAccess(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v15, 33, 0);
  v12 = type metadata accessor for Published(0, v6);
  Published.projectedValue.setter(v10, v12);
  *(_QWORD *)&result = swift_endAccess(v15).n128_u64[0];
  return result;
}

uint64_t sub_D337CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_D337F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_D3381C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_D322B8(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_D33828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502AE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_D33870(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502AE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D338B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_D338DC()
{
  uint64_t v0;

  return sub_D324B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_D338E8(uint64_t (**a1)(uint64_t *, uint64_t *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *a1;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v2;
  return v3(&v6, &v5);
}

uint64_t sub_D33928()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

double sub_D3394C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_D3065C(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t type metadata accessor for RequestResponse.Revision.InitialResponseLoadingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Revision.InitialResponseLoadingError);
}

uint64_t sub_D33964(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_D339A4 + 4 * asc_10A4BF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_D339C4 + 4 * byte_10A4BF5[v4]))();
}

_BYTE *sub_D339A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_D339C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_D339CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_D339D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_D339DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_D339E4(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_D339F0(uint64_t a1)
{
  return swift_getWitnessTable(&unk_10A4E90, a1);
}

uint64_t BindingRequestResponseInvalidation.__allocating_init(triggers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = swift_allocObject(v2, 41, 7);
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v5 = swift_allocObject(&unk_13BBB10, 24, 7);
  swift_weakInit(v5 + 16);
  v6 = swift_allocObject(&unk_13BBB38, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v7, 48, 7);
  v8 = swift_bridgeObjectRetain();
  *(_QWORD *)(v4 + 16) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v8, 0, (uint64_t)sub_CC7988, v6);
  swift_release();
  return v4;
}

uint64_t GenericRequestResponseInvalidation.__allocating_init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_allocObject(v2, 49, 7);
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

Swift::Void __swiftcall RequestResponseInvalidatable.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1;
  v4 = v0;
  if (((*(uint64_t (**)(void))(v1 + 40))() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(1, v4, v3);
    v5 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
    if (v5)
    {
      v7 = (uint64_t)v5;
      v8 = v6;
      v5(v2, v3);
      sub_5C198(v7, v8);
    }
  }
}

uint64_t GenericRequestResponseInvalidation.init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 32, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_5C198(v5, v6);
}

uint64_t (*CompoundRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 48);
}

void GenericRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 48, v3, 1, 0);
  *(_BYTE *)(v1 + 48) = a1;
}

uint64_t (*GenericRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 48, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_5C198(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return v0;
}

double GenericRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease();
  sub_5C198(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 49, 7).n128_u64[0];
  return result;
}

uint64_t sub_D33D88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.__allocating_init()()
{
  uint64_t v0;

  swift_allocObject(v0, 48, 7);
  return sub_D34A64((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t CompoundRequestResponseInvalidation.__allocating_init(responseInvalidations:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_allocObject(v1, 48, 7);
  v3 = sub_D34A64(a1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t CompoundRequestResponseInvalidation.init(responseInvalidations:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_D34A64(a1);
  swift_bridgeObjectRelease();
  return v1;
}

double CompoundRequestResponseInvalidation.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  uint64_t v16;
  __n128 v17;
  double result;
  uint64_t v19;
  _BYTE v20[24];

  if (a1)
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    v7 = swift_allocObject(&unk_13BBB60, 24, 7);
    swift_weakInit(v7 + 16);
    v8 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(a2 + 24);
    swift_unknownObjectRetain(a1);
    v9 = swift_retain(v7);
    v8(sub_D34C9C, v7, ObjectType, a2, v9);
    swift_release(v7);
    v10 = *(_QWORD **)(v2 + 40);
    swift_unknownObjectRetain(a1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    *(_QWORD *)(v3 + 40) = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_BCD834(0, v10[2] + 1, 1, v10);
      *(_QWORD *)(v3 + 40) = v10;
    }
    v13 = v10[2];
    v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      v10 = sub_BCD834((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      *(_QWORD *)(v3 + 40) = v10;
    }
    v10[2] = v13 + 1;
    v14 = &v10[2 * v13];
    v14[4] = a1;
    v14[5] = a2;
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2) & 1) != 0)
    {
      swift_beginAccess(v3 + 32, v20, 1, 0);
      if (*(_BYTE *)(v3 + 32) != 1)
      {
        *(_BYTE *)(v3 + 32) = 1;
        swift_beginAccess(v3 + 16, &v19, 0, 0);
        v15 = *(void (**)(uint64_t, uint64_t, __n128))(v3 + 16);
        if (v15)
        {
          v16 = *(_QWORD *)(v3 + 24);
          v17 = swift_retain(v16);
          v15(a1, a2, v17);
          sub_5C198((uint64_t)v15, v16);
        }
      }
      *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
    }
  }
  return result;
}

double sub_D3403C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, __n128);
  uint64_t v10;
  __n128 v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    swift_beginAccess(Strong + 32, v13, 1, 0);
    if ((*(_BYTE *)(v8 + 32) & 1) == 0)
    {
      *(_BYTE *)(v8 + 32) = 1;
      swift_beginAccess(v8 + 16, v12, 0, 0);
      v9 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 16);
      if (v9)
      {
        v10 = *(_QWORD *)(v8 + 24);
        v11 = swift_retain(v10);
        v9(a1, a2, v11);
        sub_5C198((uint64_t)v9, v10);
      }
    }
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall CompoundRequestResponseInvalidation.append(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  void (*v9)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, _QWORD, __n128);
  __n128 v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, _QWORD, __n128);
  uint64_t v16;
  __n128 v17;
  void (**v18)(uint64_t, _QWORD, __n128);
  _BYTE *v19;
  __int128 v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v2 = *((_QWORD *)a1._rawValue + 2);
  if (v2)
  {
    v3 = v1;
    swift_bridgeObjectRetain();
    v19 = (_BYTE *)(v1 + 32);
    swift_beginAccess(v1 + 32, v22, 1, 0);
    v18 = (void (**)(uint64_t, _QWORD, __n128))(v1 + 16);
    swift_beginAccess(v1 + 16, v21, 0, 0);
    for (i = 0; i != v2; ++i)
    {
      v20 = *((_OWORD *)a1._rawValue + i + 2);
      v6 = *((_QWORD *)a1._rawValue + 2 * i + 4);
      ObjectType = swift_getObjectType();
      v8 = swift_allocObject(&unk_13BBB60, 24, 7);
      swift_weakInit(v8 + 16);
      v9 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, _QWORD, __n128))(*((_QWORD *)&v20 + 1) + 24);
      swift_unknownObjectRetain_n(v6, 2);
      v10 = swift_retain();
      v9(sub_D34C9C, v8, ObjectType, *((_QWORD *)&v20 + 1), v10);
      swift_release();
      v11 = *(_QWORD **)(v3 + 40);
      swift_unknownObjectRetain(v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      *(_QWORD *)(v3 + 40) = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v11 = sub_BCD834(0, v11[2] + 1, 1, v11);
        *(_QWORD *)(v3 + 40) = v11;
      }
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
      {
        v11 = sub_BCD834((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
        *(_QWORD *)(v3 + 40) = v11;
      }
      v11[2] = v14 + 1;
      *(_OWORD *)&v11[2 * v14 + 4] = v20;
      if (((*(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v20 + 1) + 40))(ObjectType, *((_QWORD *)&v20 + 1)) & 1) != 0&& (*v19 & 1) == 0)
      {
        *v19 = 1;
        v15 = *v18;
        if (*v18)
        {
          v16 = *(_QWORD *)(v3 + 24);
          v17 = swift_retain();
          v15(v6, *((_QWORD *)&v20 + 1), v17);
          sub_5C198((uint64_t)v15, v16);
        }
      }
      swift_unknownObjectRelease_n(v6, 2);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t CompoundRequestResponseInvalidation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 40), 2);
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      ObjectType = swift_getObjectType();
      v7 = *(_QWORD *)(v4 + 8);
      swift_unknownObjectRetain(v5);
      v8 = dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(ObjectType, v7);
      v10 = v9;
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRetain();
      v12._countAndFlagsBits = 124;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      swift_bridgeObjectRelease(0xEA00000000005B3ALL);
      swift_unknownObjectRelease(v5);
      swift_bridgeObjectRelease(0xEA00000000005B3ALL);
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 93;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(0xEA00000000005B3ALL);
  return 0x646E756F706D6F43;
}

uint64_t CompoundRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 32);
}

void CompoundRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 32, v3, 1, 0);
  *(_BYTE *)(v1 + 32) = a1;
}

uint64_t CompoundRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  sub_5C198(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

double CompoundRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  sub_5C198(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 48, 7).n128_u64[0];
  return result;
}

uint64_t sub_D34548()
{
  return CompoundRequestResponseInvalidation.debugDescription.getter();
}

uint64_t BindingRequestResponseInvalidation.__allocating_init(trigger:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE300);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_105B360;
  sub_55D1C((uint64_t)a1, v5 + 32);
  v6 = swift_allocObject(v2, 41, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  v7 = swift_allocObject(&unk_13BBB10, 24, 7);
  swift_weakInit(v7 + 16);
  v8 = swift_allocObject(&unk_13BBB88, 32, 7);
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v9, 48, 7);
  v10 = swift_bridgeObjectRetain();
  v11 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v10, 0, (uint64_t)sub_D34E28, v8);
  v12 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v11;
  swift_release(v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t BindingRequestResponseInvalidation.init(triggers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  v4 = swift_allocObject(&unk_13BBB10, 24, 7);
  swift_weakInit(v4 + 16);
  v5 = swift_allocObject(&unk_13BBBB0, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v6, 48, 7);
  v7 = swift_bridgeObjectRetain();
  v8 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v7, 0, (uint64_t)sub_D34E28, v5);
  v9 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v8;
  swift_release(v9);
  return v2;
}

uint64_t sub_D34740()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_D34764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + 40, v11, 1, 0);
    if ((*(_BYTE *)(v5 + 40) & 1) == 0)
    {
      *(_BYTE *)(v5 + 40) = 1;
      swift_beginAccess(v5 + 24, v10, 0, 0);
      v6 = *(void (**)(uint64_t, uint64_t, __n128))(v5 + 24);
      if (v6)
      {
        v7 = *(_QWORD *)(v5 + 32);
        v8 = sub_D34DEC((unint64_t *)&qword_1500000, type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
        v9 = swift_retain(v7);
        v6(v5, v8, v9);
        sub_5C198((uint64_t)v6, v7);
      }
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t BindingRequestResponseInvalidation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = 0x3D676E69646E6942;
  v6 = 0xE800000000000000;
  v4 = *(_QWORD *)(v0 + 16);
  swift_retain();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502B78);
  v2._countAndFlagsBits = String.init<A>(describing:)(&v4, v1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t BindingRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 40);
}

void BindingRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 40, v3, 1, 0);
  *(_BYTE *)(v1 + 40) = a1;
}

uint64_t (*BindingRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t BindingRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  swift_release();
  sub_5C198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v0;
}

double BindingRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_release();
  sub_5C198(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 41, 7).n128_u64[0];
  return result;
}

uint64_t (*sub_D349B0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_D349EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *v0;
  v6 = 0x3D676E69646E6942;
  v7 = 0xE800000000000000;
  v5 = *(_QWORD *)(v1 + 16);
  swift_retain();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502B78);
  v3._countAndFlagsBits = String.init<A>(describing:)(&v5, v2);
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_D34A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void (*v10)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, _QWORD, __n128);
  __n128 v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, _QWORD, __n128);
  uint64_t v17;
  __n128 v18;
  void (**v20)(uint64_t, _QWORD, __n128);
  _BYTE *v21;
  __int128 v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v2 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  v3 = v1 + 16;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v21 = (_BYTE *)(v3 + 16);
    swift_beginAccess(v3 + 16, v24, 1, 0);
    v20 = (void (**)(uint64_t, _QWORD, __n128))v3;
    swift_beginAccess(v3, v23, 0, 0);
    for (i = 0; i != v4; ++i)
    {
      v22 = *(_OWORD *)(a1 + 16 * i + 32);
      v7 = *(_QWORD *)(a1 + 16 * i + 32);
      ObjectType = swift_getObjectType();
      v9 = swift_allocObject(&unk_13BBB60, 24, 7);
      swift_weakInit(v9 + 16);
      v10 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, _QWORD, __n128))(*((_QWORD *)&v22 + 1) + 24);
      swift_unknownObjectRetain_n(v7, 2);
      v11 = swift_retain(v9);
      v10(sub_D34C9C, v9, ObjectType, *((_QWORD *)&v22 + 1), v11);
      swift_release(v9);
      v12 = *(_QWORD **)(v2 + 40);
      swift_unknownObjectRetain(v7);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      *(_QWORD *)(v2 + 40) = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_BCD834(0, v12[2] + 1, 1, v12);
        *(_QWORD *)(v2 + 40) = v12;
      }
      v15 = v12[2];
      v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        v12 = sub_BCD834((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
        *(_QWORD *)(v2 + 40) = v12;
      }
      v12[2] = v15 + 1;
      *(_OWORD *)&v12[2 * v15 + 4] = v22;
      if (((*(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v22 + 1) + 40))(ObjectType, *((_QWORD *)&v22 + 1)) & 1) != 0&& (*v21 & 1) == 0)
      {
        *v21 = 1;
        v16 = *v20;
        if (*v20)
        {
          v17 = *(_QWORD *)(v2 + 24);
          v18 = swift_retain(v17);
          v16(v7, *((_QWORD *)&v22 + 1), v18);
          sub_5C198((uint64_t)v16, v17);
        }
      }
      swift_unknownObjectRelease_n(v7, 2);
    }
    swift_bridgeObjectRelease(a1);
  }
  return v2;
}

double sub_D34C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_D3403C(a1, a2, v2);
}

uint64_t objectdestroy_2Tm_4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D34CD8(uint64_t a1)
{
  uint64_t result;

  result = sub_D34DEC(&qword_1502B80, type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for GenericRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore34GenericRequestResponseInvalidation);
}

uint64_t sub_D34D34(uint64_t a1)
{
  uint64_t result;

  result = sub_D34DEC(&qword_1502B88, type metadata accessor for CompoundRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for CompoundRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CompoundRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore35CompoundRequestResponseInvalidation);
}

uint64_t sub_D34D90(uint64_t a1)
{
  uint64_t result;

  result = sub_D34DEC(&qword_1502B90, type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for BindingRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore34BindingRequestResponseInvalidation);
}

uint64_t sub_D34DEC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_D34E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v6 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_C0584C(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v12(v5, v11, v2);
      swift_dynamicCast(v8, v5, v2, v18, 7);
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_C0584C(0, v10[2] + 1, 1);
        v10 = v19;
      }
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_C0584C(v13 > 1, v14 + 1, 1);
        v10 = v19;
      }
      v10[2] = v14 + 1;
      sub_5C090((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, &qword_14FAC20);
      v11 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

_QWORD *sub_D34FF4(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  int *v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_C058F4(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (int *)(a1 + 32);
    v5 = _swiftEmptyArrayStorage[2];
    do
    {
      v6 = *v4;
      v8 = result;
      v7 = result[3];
      if (v5 >= v7 >> 1)
      {
        sub_C058F4((char *)(v7 > 1), v5 + 1, 1);
        result = v8;
      }
      result[2] = v5 + 1;
      *((_DWORD *)result + v5 + 8) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_D350BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_138F24(v4, (uint64_t)v10);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2F0);
      v6 = swift_dynamicCast(&v11, v10, &type metadata for AnyHashable, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_D351A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D351BC(a1, a2, a3, (uint64_t)&type metadata for () + 8);
}

uint64_t sub_D351B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D351BC(a1, a2, a3, (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_D351BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned __int8 v19;
  _QWORD v21[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8);
  if ((_DWORD)v10 == 1)
  {
    sub_56024(a1, (uint64_t *)&unk_1500E30);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
    {
LABEL_6:
      v18 = 0;
      return swift_task_create(v11, v18, a4, a2, a3);
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v19 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
      goto LABEL_6;
  }
  v13 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v12);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
  v17 = v16;
  swift_unknownObjectRelease(v12);
  if (!(v17 | v15))
    goto LABEL_6;
  v21[0] = 0;
  v21[1] = 0;
  v18 = v21;
  v21[2] = v15;
  v21[3] = v17;
  return swift_task_create(v11, v18, a4, a2, a3);
}

uint64_t sub_D352EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_D351BC(a1, a2, a3, (uint64_t)&type metadata for Bool);
}

uint64_t sub_D352F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_56024(a1, (uint64_t *)&unk_1500E30);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1501918);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, v17, a2, a3);
}

uint64_t Logger.sharePlayTogether.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.sharePlayTogether);
}

uint64_t static SharePlayTogetherSession.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  v5 = *(_QWORD *)(v3 + 8);
  v6 = (_QWORD *)(a2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  v7 = v6[1];
  if (v4 == *v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v6, v7, 0);
}

void *SharePlayTogetherSession.activityIdentifier.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.activityIdentifier;
}

unint64_t static SharePlayTogetherSession.activityIdentifier.getter()
{
  return 0xD000000000000017;
}

void *SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.needsDisplayNameAckDefaultsKey;
}

unint64_t static SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.getter()
{
  return 0xD000000000000024;
}

void *SharePlayTogetherSession.didShowDisplayNameAck.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.didShowDisplayNameAck;
}

unint64_t static SharePlayTogetherSession.didShowDisplayNameAck.getter()
{
  return 0xD000000000000026;
}

uint64_t SharePlayTogetherSession.isHost.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost);
}

uint64_t SharePlayTogetherSession.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

SEL *SharePlayTogetherSession.isPlaceholder.getter()
{
  return sub_D35590((SEL *)&selRef_isPlaceholder);
}

SEL *SharePlayTogetherSession.canManageParticipants.getter()
{
  return sub_D35590((SEL *)&selRef_canManageParticipants);
}

SEL *SharePlayTogetherSession.canHandleJoinRequests.getter()
{
  return sub_D35590((SEL *)&selRef_canHandleJoinRequests);
}

SEL *sub_D35590(SEL *result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session))
    return (SEL *)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session), *result);
  __break(1u);
  return result;
}

void *SharePlayTogetherSession.title.getter()
{
  uint64_t v0;
  void *result;
  id v2;
  uint64_t v3;

  result = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v2 = objc_msgSend(result, "localizedSessionName");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SharePlayTogetherSession.joinToken.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
    return objc_msgSend(result, "joinToken");
  __break(1u);
  return result;
}

uint64_t SharePlayTogetherSession.routeType.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType, v3, 0, 0);
  return *v1;
}

void SharePlayTogetherSession.routeType.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SharePlayTogetherSession.routeType.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.routeSymbolName(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return Published.init(initialValue:)(v3, &type metadata for String);
}

uint64_t SharePlayTogetherSession.routeSymbolName.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A50C0);
  v2 = swift_getKeyPath(&unk_10A50E8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_D357C4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A50C0);
  v5 = swift_getKeyPath(&unk_10A50E8);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_D35840(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A50C0);
  v6 = swift_getKeyPath(&unk_10A50E8);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t SharePlayTogetherSession.routeSymbolName.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_10A50C0);
  v6 = swift_getKeyPath(&unk_10A50E8);
  v8[0] = a1;
  v8[1] = a2;
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*SharePlayTogetherSession.routeSymbolName.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A50C0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A50E8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t SharePlayTogetherSession.$routeSymbolName.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName, &qword_1502DD8);
}

uint64_t SharePlayTogetherSession.$routeSymbolName.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_1502DE0, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName, &qword_1502DD8);
}

void (*SharePlayTogetherSession.$routeSymbolName.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502DE0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502DD8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.participants(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502DE8);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t SharePlayTogetherSession.participants.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A5108);
  v2 = swift_getKeyPath(&unk_10A5130);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_D35B54(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A5108);
  v5 = swift_getKeyPath(&unk_10A5130);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_D35BD0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A5108);
  v5 = swift_getKeyPath(&unk_10A5130);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t SharePlayTogetherSession.participants.setter(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10A5108);
  v4 = swift_getKeyPath(&unk_10A5130);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*SharePlayTogetherSession.participants.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A5108);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A5130);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t SharePlayTogetherSession.$participants.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants, &qword_1502DF8);
}

uint64_t SharePlayTogetherSession.$participants.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_1502E00, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants, &qword_1502DF8);
}

void (*SharePlayTogetherSession.$participants.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E00);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502DF8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t SharePlayTogetherSession.connectedParticipantsCount.getter()
{
  return sub_1EB958((uint64_t)&unk_10A5150, (uint64_t)&unk_10A5178);
}

uint64_t SharePlayTogetherSession.connectedParticipantsCount.setter(uint64_t a1)
{
  return sub_D360F0(a1, (uint64_t)&unk_10A5150, (uint64_t)&unk_10A5178);
}

void (*SharePlayTogetherSession.connectedParticipantsCount.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A5150);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A5178);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t SharePlayTogetherSession.$connectedParticipantsCount.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount, (uint64_t *)&unk_1502E10);
}

uint64_t SharePlayTogetherSession.$connectedParticipantsCount.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_1503930, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount, (uint64_t *)&unk_1502E10);
}

void (*SharePlayTogetherSession.$connectedParticipantsCount.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503930);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E10);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.pendingParticipantsCount(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Int);
}

uint64_t SharePlayTogetherSession.pendingParticipantsCount.getter()
{
  return sub_1EB958((uint64_t)&unk_10A5198, (uint64_t)&unk_10A51C0);
}

void sub_D35FF4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A5198);
  v5 = swift_getKeyPath(&unk_10A51C0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_D36070(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A5198);
  v5 = swift_getKeyPath(&unk_10A51C0);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t SharePlayTogetherSession.pendingParticipantsCount.setter(uint64_t a1)
{
  return sub_D360F0(a1, (uint64_t)&unk_10A5198, (uint64_t)&unk_10A51C0);
}

uint64_t sub_D360F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*SharePlayTogetherSession.pendingParticipantsCount.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A5198);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A51C0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t SharePlayTogetherSession.$pendingParticipantsCount.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount, (uint64_t *)&unk_1502E10);
}

uint64_t SharePlayTogetherSession.$pendingParticipantsCount.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_1503930, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount, (uint64_t *)&unk_1502E10);
}

void (*SharePlayTogetherSession.$pendingParticipantsCount.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503930);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E10);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.host(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E28);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v4, &qword_1502E28);
  Published.init(initialValue:)(v4, v2);
  return sub_56024(a1, &qword_1502E28);
}

double SharePlayTogetherSession.host.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10A51E0);
  v4 = swift_getKeyPath(&unk_10A5208);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_D363C8@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A51E0);
  v5 = swift_getKeyPath(&unk_10A5208);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_D36430(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E28);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_5C238(a1, (uint64_t)&v14 - v8, &qword_1502E28);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A51E0);
  v12 = swift_getKeyPath(&unk_10A5208);
  sub_5C238((uint64_t)v9, (uint64_t)v6, &qword_1502E28);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_56024((uint64_t)v9, &qword_1502E28);
}

uint64_t SharePlayTogetherSession.host.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E28);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10A51E0);
  v7 = swift_getKeyPath(&unk_10A5208);
  sub_5C238(a1, (uint64_t)v5, &qword_1502E28);
  static Published.subscript.setter(v5, v1, KeyPath, v7);
  return sub_56024(a1, &qword_1502E28);
}

void (*SharePlayTogetherSession.host.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10A51E0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10A5208);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_CDC850;
}

uint64_t SharePlayTogetherSession.$host.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host, &qword_1502E38);
}

uint64_t SharePlayTogetherSession.$host.setter(uint64_t a1)
{
  return sub_CDCBD4(a1, &qword_1502E40, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host, &qword_1502E38);
}

void (*SharePlayTogetherSession.$host.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E40);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E38);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_CDC94C;
}

id SharePlayTogetherSession.qrCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  id result;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  _QWORD v38[2];
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];

  v3 = type metadata accessor for String.Encoding(0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 8);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 16);
  v13 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 24);
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = v13;
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 32);
  if (v13)
  {
LABEL_8:
    result = sub_D3B5D8(v10, v11, v12, v13);
    *a1 = v14;
    a1[1] = v15;
    a1[2] = v16;
    a1[3] = (uint64_t)v17;
    a1[4] = v18;
    return result;
  }
  v38[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 32);
  v39 = v12;
  v40 = v11;
  v41 = v10;
  result = *(id *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v20 = v5;
    v21 = v4;
    v22 = objc_msgSend(result, "joinToken", v6);
    if (!v22)
      goto LABEL_5;
    v23 = v22;
    v24 = objc_msgSend(v22, "joinURLString");

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    static String.Encoding.utf8.getter(v28);
    v29 = String.data(using:allowLossyConversion:)(v8, 0, v25, v27);
    v31 = v30;
    v32 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v8, v21, v32);
    if (v31 >> 60 != 15)
    {
      sub_1390D8(v29, v31);
      sub_D7E9F4(v29, v31, 76, v42);
      v33 = v29;
      v34 = *v9;
      v35 = v9[1];
      v36 = v9[2];
      v37 = (void *)v9[3];
      sub_5C090((uint64_t)v42, (uint64_t)v9, &qword_1502E50);
      sub_A2AE24(v34, v35, v36, v37);
      sub_50C4C(v33, v31);
      v14 = *v9;
      v15 = v9[1];
      v16 = v9[2];
      v17 = (void *)v9[3];
      v18 = v9[4];
      sub_D3B5D8(*v9, v15, v16, v17);
    }
    else
    {
LABEL_5:
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
    }
    v11 = v40;
    v10 = v41;
    v12 = v39;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *SharePlayTogetherSession.joinURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *result;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v4 = objc_msgSend(result, "joinToken");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "joinURLString");

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

      URL.init(string:)(v7, v9);
      return (void *)swift_bridgeObjectRelease(v9);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *SharePlayTogetherSession.isActive.getter()
{
  uint64_t v0;
  void *result;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;

  result = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    if ((objc_msgSend(result, "isPlaceholder") & 1) != 0)
    {
      return 0;
    }
    else if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      KeyPath = swift_getKeyPath(&unk_10A5150);
      v3 = swift_getKeyPath(&unk_10A5178);
      static Published.subscript.getter(&v4, v0, KeyPath, v3);
      swift_release(v3);
      swift_release(KeyPath);
      return (void *)(v4 > 0);
    }
    else
    {
      return &dword_0 + 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SharePlayTogetherSession.isPersistent.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent, v3, 0, 0);
  return *v1;
}

void SharePlayTogetherSession.isPersistent.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SharePlayTogetherSession.isPersistent.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_D36BCC(void *a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned __int8 v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  id v43;
  unsigned int v44;
  char v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  Class isa;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  objc_class *v56;
  char *v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  id v88;
  objc_super v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92[3];

  v84 = a2;
  v88 = a1;
  v85 = type metadata accessor for Logger(0);
  v87 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v86 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E38);
  v82 = *(_QWORD *)(v4 - 8);
  v83 = v4;
  __chkstk_darwin(v4);
  v81 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E28);
  __chkstk_darwin(v80);
  v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v80 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502DF8);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session] = 0;
  v19 = &v2[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants];
  v92[0] = (uint64_t)_swiftEmptyArrayStorage;
  v20 = v2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502DE8);
  Published.init(initialValue:)(v92, v21);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  v22 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount];
  v92[0] = 0;
  Published.init(initialValue:)(v92, &type metadata for Int);
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24 = v88;
  v23(v22, v14, v11);
  v25 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount];
  v92[0] = 0;
  Published.init(initialValue:)(v92, &type metadata for Int);
  v23(v25, v14, v11);
  v26 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host];
  v27 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  sub_5C238((uint64_t)v10, (uint64_t)v7, &qword_1502E28);
  v28 = v81;
  Published.init(initialValue:)(v7, v80);
  sub_56024((uint64_t)v10, &qword_1502E28);
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v26, v28, v83);
  v29 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((_QWORD *)v29 + 4) = 0;
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected] = 0;
  v30 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap;
  *(_QWORD *)&v20[v30] = sub_C26DAC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers] = _swiftEmptyArrayStorage;
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver] = 0;
  v31 = objc_msgSend(v24, "identifier");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = (uint64_t *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier];
  *v35 = v32;
  v35[1] = v34;
  v36 = objc_msgSend(v24, "isHosted");
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost] = v36;
  v37 = v84;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint] = v84;
  v38 = v37;
  v39 = objc_msgSend(v24, "hostInfo");
  LOBYTE(v32) = objc_msgSend(v39, "routeType");

  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType] = v32;
  v40 = objc_msgSend(v38, "groupLeader");
  v41 = (char *)objc_msgSend(v40, "transportType");

  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent] = v41 != (_BYTE *)&dword_4 + 2;
  v42 = objc_msgSend(v24, "hostInfo");
  LODWORD(v41) = objc_msgSend(v42, "routeType");

  if ((_DWORD)v41 == 1
    || (v43 = objc_msgSend(v24, "hostInfo"),
        v44 = objc_msgSend(v43, "routeType"),
        v43,
        v44 == 2))
  {
    swift_beginAccess(&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName], v92, 33, 0);
    v90 = 0x6C6C69662E726163;
    v91 = 0xE800000000000000;
    Published.init(initialValue:)(&v90, &type metadata for String);
    swift_endAccess(v92);
    v45 = 1;
    v46 = v85;
  }
  else
  {
    v47 = objc_msgSend(v38, "outputDevices");
    if (v47)
    {
      v48 = v47;
      v49 = sub_4E684(0, (unint64_t *)&unk_15030A8, MRAVOutputDevice_ptr);
      static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

    }
    v46 = v85;
    v50 = (void *)objc_opt_self(MRAVOutputDeviceSymbolProvider);
    sub_4E684(0, (unint64_t *)&unk_15030A8, MRAVOutputDevice_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v52 = objc_msgSend(v50, "symbolNameForOutputDevices:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v55 = v54;

    swift_beginAccess(&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName], v92, 33, 0);
    v90 = v53;
    v91 = v55;
    Published.init(initialValue:)(&v90, &type metadata for String);
    swift_endAccess(v92);
    v45 = 0;
  }

  v56 = (objc_class *)type metadata accessor for SharePlayTogetherSession(0);
  v89.receiver = v20;
  v89.super_class = v56;
  v57 = (char *)objc_msgSendSuper2(&v89, "init");
  v58 = objc_msgSend(v24, "identifier");
  if (!v58)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  v59 = objc_msgSend((id)objc_opt_self(MRGroupSessionProvider), "remoteControlGroupSessionWithIdentifier:delegate:", v58, v57);

  v60 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v61 = *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session];
  *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session] = v59;
  swift_unknownObjectRelease(v61);
  v62 = (void *)MRAVEndpointOutputDevicesDidChangeNotification;
  v63 = swift_allocObject(&unk_13BBF08, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16);
  v64 = swift_allocObject(&unk_13BBF30, 32, 7);
  *(_BYTE *)(v64 + 16) = v45;
  *(_QWORD *)(v64 + 24) = v63;
  v65 = type metadata accessor for NotificationObserver();
  swift_allocObject(v65, 64, 7);
  v66 = v38;
  *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v62, (uint64_t)v38, 1, 1, (uint64_t)sub_D4186C, v64);
  swift_release();
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v67 = __swift_project_value_buffer(v46, (uint64_t)static Logger.sharePlayTogether);
  v68 = v86;
  v69 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v67, v46);
  v70 = v57;
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    v92[0] = v74;
    *(_DWORD *)v73 = 136446210;
    v75 = *(void **)&v57[v60];
    if (v75)
    {
      v76 = objc_msgSend(v75, "description");
      v77 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
      v79 = v78;

      *(_QWORD *)(v73 + 4) = sub_BA95EC(v77, v79, v92);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v71, v72, "Initialized SharePlayTogetherSession object with MR session %{public}s", (uint8_t *)v73, 0xCu);
      swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v73, -1, -1);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v46);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v46);
  }
}

void sub_D374DC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  _QWORD v19[2];
  _BYTE v20[24];
  _BYTE v21[24];

  if ((a2 & 1) == 0)
  {
    v3 = a3 + 16;
    swift_beginAccess(a3 + 16, v21, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      swift_beginAccess(v3, v20, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v3);
      if (v6)
      {
        v7 = (void *)v6;
        v8 = *(id *)(v6 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint);

        v9 = objc_msgSend(v8, "outputDevices");
        if (v9)
        {
          v10 = sub_4E684(0, (unint64_t *)&unk_15030A8, MRAVOutputDevice_ptr);
          static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

        }
      }
      v11 = (void *)objc_opt_self(MRAVOutputDeviceSymbolProvider);
      sub_4E684(0, (unint64_t *)&unk_15030A8, MRAVOutputDevice_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v11, "symbolNameForOutputDevices:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      KeyPath = swift_getKeyPath(&unk_10A50C0);
      v18 = swift_getKeyPath(&unk_10A50E8);
      v19[0] = v14;
      v19[1] = v16;
      static Published.subscript.setter(v19, v5, KeyPath, v18);
    }
  }
}

void SharePlayTogetherSession.approve(participant:)(uint64_t a1)
{
  sub_D376E0(a1, (SEL *)&selRef_pendingParticipantForIdentifier_, (uint64_t)UIScreen.Dimensions.size.getter, (uint64_t)&block_descriptor_315, (SEL *)&selRef_approvePendingParticipant_completion_);
}

void SharePlayTogetherSession.deny(participant:)(uint64_t a1)
{
  sub_D376E0(a1, (SEL *)&selRef_pendingParticipantForIdentifier_, (uint64_t)UIScreen.Dimensions.size.getter, (uint64_t)&block_descriptor_29_7, (SEL *)&selRef_denyPendingParticipant_completion_);
}

void SharePlayTogetherSession.remove(participant:)(uint64_t a1)
{
  sub_D376E0(a1, (SEL *)&selRef_participantForIdentifier_, (uint64_t)UIScreen.Dimensions.size.getter, (uint64_t)&block_descriptor_32_3, (SEL *)&selRef_removeParticipant_completion_);
}

void sub_D376E0(uint64_t a1, SEL *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSString v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[6];

  v6 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  swift_unknownObjectRetain(*(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session));
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v7, *a2, v12);

  swift_unknownObjectRelease(v7);
  if (!v13)
    return;
  v14 = *(_QWORD *)(v5 + v6);
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v16[4] = a3;
  v16[5] = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_5FEBC;
  v16[3] = a4;
  v15 = _Block_copy(v16);
  objc_msgSend((id)swift_unknownObjectRetain(v14), *a5, v13, v15);
  _Block_release(v15);
  swift_unknownObjectRelease(v13);
  swift_unknownObjectRelease(v14);
}

Swift::Void __swiftcall SharePlayTogetherSession.endSession()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[6];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually) = 1;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (v1)
  {
    v3[4] = UIScreen.Dimensions.size.getter;
    v3[5] = 0;
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 1107296256;
    v3[2] = sub_5FEBC;
    v3[3] = &block_descriptor_35_3;
    v2 = _Block_copy(v3);
    objc_msgSend((id)swift_unknownObjectRetain(v1), "removeAllParticipantsWithCompletion:", v2);
    _Block_release(v2);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharePlayTogetherSession.leave()()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  void *v3;
  _QWORD v4[6];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually) = 1;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (v1)
  {
    v2 = objc_msgSend(v1, "identifier");
    if (!v2)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v2 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v4[4] = UIScreen.Dimensions.size.getter;
    v4[5] = 0;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_153944;
    v4[3] = &block_descriptor_38_5;
    v3 = _Block_copy(v4);
    MRGroupSessionLeaveSessionWithIdentifier(v2, v3);
    _Block_release(v3);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharePlayTogetherSession.cleanup(notifyObservers:)(Swift::Bool notifyObservers)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(char *);
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = v1;
  v3 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
  if (notifyObservers)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (uint64_t *)(v4 + 40);
      do
      {
        v8 = (void (*)(char *))*(v6 - 1);
        v7 = *v6;
        v11 = 1;
        swift_retain(v7);
        v8(&v11);
        swift_release(v7);
        v6 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease(v4);
      v3 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
    }
  }
  v9 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
}

uint64_t SharePlayTogetherSession.addSessionConnectionObserver(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected) == 1)
    return a1();
  v6 = swift_allocObject(&unk_13BBDA0, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers;
  v8 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native(v8);
  *(_QWORD *)(v2 + v7) = v8;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_BCCE4C(0, v8[2] + 1, 1, v8);
    v8 = (_QWORD *)result;
    *(_QWORD *)(v2 + v7) = result;
  }
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_BCCE4C((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8 = (_QWORD *)result;
    *(_QWORD *)(v2 + v7) = result;
  }
  v8[2] = v10 + 1;
  v11 = &v8[2 * v10];
  v11[4] = sub_129E54;
  v11[5] = v6;
  return result;
}

uint64_t SharePlayTogetherSession.addSessionEndedObserver(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = swift_allocObject(&unk_13BBDC8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native(v7);
  *(_QWORD *)(v2 + v6) = v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_BCD1CC(0, v7[2] + 1, 1, v7);
    v7 = (_QWORD *)result;
    *(_QWORD *)(v2 + v6) = result;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_BCD1CC((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    v7 = (_QWORD *)result;
    *(_QWORD *)(v2 + v6) = result;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_EB434;
  v11[5] = v5;
  return result;
}

id SharePlayTogetherSession.assertSessionManagementScreenVisible()()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
    return objc_msgSend(result, "assertSessionManagementScreenVisible");
  __break(1u);
  return result;
}

double SharePlayTogetherSession.socialProfile(for:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  char v22[24];

  if (objc_msgSend(a1, "identifierType") == (char *)&dword_0 + 1
    && (v5 = objc_msgSend(a1, "participantIdentifier")) != 0)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
    swift_beginAccess(v10, v22, 0, 0);
    v11 = *v10;
    if (*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_21BAD0(v7, v9);
      if ((v13 & 1) != 0)
      {
        v14 = v12;
        v15 = *(_QWORD *)(v11 + 56);
        v16 = type metadata accessor for SocialProfile(0);
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(a2, v15 + *(_QWORD *)(v17 + 72) * v14, v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
      }
      else
      {
        v21 = type metadata accessor for SocialProfile(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = type metadata accessor for SocialProfile(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v18 = type metadata accessor for SocialProfile(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
  return result;
}

void *SharePlayTogetherSession.isEquivalent(to:)(uint64_t a1)
{
  uint64_t v1;
  void *result;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  result = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = objc_msgSend(result, "isPlaceholder");
  result = *(void **)(a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v4 == objc_msgSend(result, "isPlaceholder"))
  {
    v14 = 0;
  }
  else
  {
    v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint), "uniqueIdentifier"));
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint), "uniqueIdentifier"));
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    if (v6 == v10 && v8 == v12)
    {
      v14 = 1;
      v12 = v8;
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v12, 0);
    }
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
  }
  return (void *)(v14 & 1);
}

void sub_D37F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  size_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char **v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  _BOOL4 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  __n128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  __n128 v125;
  uint8_t *v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  int64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char v154[24];
  _QWORD v155[3];
  uint64_t v156[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v0);
  v139 = (char *)&v131 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503030);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(id *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v131 - (((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v138 = (char *)&v131 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E28);
  __chkstk_darwin(v8);
  v137 = (uint64_t)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v136 = (uint64_t)&v131 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
  __chkstk_darwin(v12);
  v14 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA020 == -1)
    goto LABEL_2;
LABEL_75:
  swift_once(&qword_14FA020, sub_D3B530);
LABEL_2:
  v15 = type metadata accessor for Logger(0);
  v141 = __swift_project_value_buffer(v15, (uint64_t)static Logger.sharePlayTogether);
  v16 = Logger.logObject.getter(v141);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "Updating participants", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = swift_allocObject(&unk_13BBE90, 24, 7);
  v142 = v19;
  *(_QWORD *)(v19 + 16) = &_swiftEmptySetSingleton;
  v146 = v19 + 16;
  v143 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v20 = *(void **)&v144[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session];
  if (!v20)
  {
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    swift_release();
    __break(1u);
    return;
  }
  v21 = objc_msgSend(v20, "pendingParticipants");
  v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v23 = sub_C7DB7C(v22);
  swift_bridgeObjectRelease();
  v24 = (unint64_t)sub_D350BC((uint64_t)v23);
  swift_release();
  if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
  {
    v127 = swift_bridgeObjectRetain();
    v25 = (uint64_t)sub_C7DA88(v127);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v156[0] = v25;
  sub_D3F064(v156);
  v134 = v3;
  v135 = v2;
  *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
  v27 = *(void **)&v144[v143];
  if (!v27)
    goto LABEL_81;
  v28 = v156[0];
  v29 = objc_msgSend(v27, "participants", v26);
  v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v31 = sub_C7DB7C(v30);
  swift_bridgeObjectRelease();
  v32 = (unint64_t)sub_D350BC((uint64_t)v31);
  swift_release();
  if ((v32 & 0x8000000000000000) != 0 || (v32 & 0x4000000000000000) != 0)
  {
    v128 = swift_bridgeObjectRetain();
    v33 = (uint64_t)sub_C7DA88(v128);
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v156[0] = v33;
  sub_D3F064(v156);
  swift_bridgeObjectRelease();
  v34 = v156[0];
  v133 = v5;
  if (v156[0] < 0 || (v156[0] & 0x4000000000000000) != 0)
  {
    v129 = swift_bridgeObjectRetain();
    v35 = _CocoaArrayWrapper.endIndex.getter(v129);
    swift_release();
  }
  else
  {
    v35 = *(_QWORD *)(v156[0] + 16);
  }
  KeyPath = swift_getKeyPath(&unk_10A5150);
  v37 = swift_getKeyPath(&unk_10A5178);
  v156[0] = v35;
  v38 = v144;
  static Published.subscript.setter(v156, v38, KeyPath, v37);
  v132 = v4;
  if (v28 < 0 || (v28 & 0x4000000000000000) != 0)
  {
    v130 = swift_bridgeObjectRetain();
    v39 = _CocoaArrayWrapper.endIndex.getter(v130);
    swift_release();
  }
  else
  {
    v39 = *(_QWORD *)(v28 + 16);
  }
  v5 = (char *)swift_getKeyPath(&unk_10A5198);
  v4 = (id)swift_getKeyPath(&unk_10A51C0);
  v156[0] = v39;
  v40 = v38;
  static Published.subscript.setter(v156, v40, v5, v4);
  v156[0] = v28;
  sub_C18CFC(v34);
  v41 = v156[0];
  v42 = v40;
  v43 = sub_D40690(v41, (uint64_t)v42, v142);

  swift_bridgeObjectRelease();
  v44 = swift_getKeyPath(&unk_10A5108);
  v45 = swift_getKeyPath(&unk_10A5130);
  v156[0] = v43;
  v152 = v42;
  static Published.subscript.setter(v156, v152, v44, v45);
  v46 = *(void **)&v144[v143];
  if (!v46)
    goto LABEL_82;
  v47 = objc_msgSend(v46, "members");
  v2 = sub_4E684(0, &qword_1503038, MRUserIdentity_ptr);
  v48 = sub_D41530();
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v47, v2, v48);

  if ((v3 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v50 = v3;
    else
      v50 = v3 & 0xFFFFFFFFFFFFFF8;
    v51 = __CocoaSet.makeIterator()(v50);
    v49 = Set.Iterator.init(_cocoa:)(v156, v51, v2, v48);
    v3 = v156[0];
    v151 = v156[1];
    v52 = v156[2];
    v53 = v156[3];
    v54 = v156[4];
  }
  else
  {
    v53 = 0;
    v55 = -1 << *(_BYTE *)(v3 + 32);
    v56 = *(_QWORD *)(v3 + 56);
    v151 = v3 + 56;
    v57 = ~v55;
    v58 = -v55;
    if (v58 < 64)
      v59 = ~(-1 << v58);
    else
      v59 = -1;
    v54 = v59 & v56;
    v52 = v57;
  }
  v148 = v3 & 0x7FFFFFFFFFFFFFFFLL;
  v140 = v52;
  v150 = (unint64_t)(v52 + 64) >> 6;
  v60 = &selRef_sharedPreferences;
  v147 = (char *)&type metadata for Swift.AnyObject + 8;
  v149 = v2;
  v145 = v3;
  if ((v3 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      if (v54)
      {
        v5 = (char *)((v54 - 1) & v54);
        v65 = __clz(__rbit64(v54)) | (v53 << 6);
        v64 = v53;
      }
      else
      {
        v66 = v53 + 1;
        if (__OFADD__(v53, 1))
        {
          __break(1u);
          goto LABEL_75;
        }
        if (v66 >= v150)
          goto LABEL_63;
        v67 = *(_QWORD *)(v151 + 8 * v66);
        v64 = v53 + 1;
        if (!v67)
        {
          v64 = v53 + 2;
          if (v53 + 2 >= v150)
            goto LABEL_63;
          v67 = *(_QWORD *)(v151 + 8 * v64);
          if (!v67)
          {
            v64 = v53 + 3;
            if (v53 + 3 >= v150)
              goto LABEL_63;
            v67 = *(_QWORD *)(v151 + 8 * v64);
            if (!v67)
            {
              v64 = v53 + 4;
              if (v53 + 4 >= v150)
                goto LABEL_63;
              v67 = *(_QWORD *)(v151 + 8 * v64);
              if (!v67)
              {
                v68 = v53 + 5;
                while (v150 != v68)
                {
                  v67 = *(_QWORD *)(v151 + 8 * v68++);
                  if (v67)
                  {
                    v64 = v68 - 1;
                    goto LABEL_49;
                  }
                }
                goto LABEL_63;
              }
            }
          }
        }
LABEL_49:
        v5 = (char *)((v67 - 1) & v67);
        v65 = __clz(__rbit64(v67)) + (v64 << 6);
      }
      v4 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v65);
      if (!v4)
        goto LABEL_63;
LABEL_51:
      if (objc_msgSend(v4, v60[142], v63) == (char *)&dword_0 + 1)
      {
        v69 = objc_msgSend(v4, "identifier");
        v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
        v72 = v71;

        v73 = &v152[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap];
        swift_beginAccess(&v152[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap], v154, 0, 0);
        v74 = *(_QWORD *)v73;
        if (*(_QWORD *)(v74 + 16))
        {
          v75 = v14;
          swift_bridgeObjectRetain();
          v76 = sub_21BAD0(v70, v72);
          if ((v77 & 1) != 0)
          {
            v78 = v76;
            v79 = *(_QWORD *)(v74 + 56);
            v80 = type metadata accessor for SocialProfile(0);
            v81 = *(_QWORD *)(v80 - 8);
            v82 = v79 + *(_QWORD *)(v81 + 72) * v78;
            v2 = v149;
            v14 = v75;
            (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v75, v82, v80);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v80);
          }
          else
          {
            v80 = type metadata accessor for SocialProfile(0);
            v81 = *(_QWORD *)(v80 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v14, 1, 1, v80);
          }
          swift_bridgeObjectRelease();
          v3 = v145;
        }
        else
        {
          v80 = type metadata accessor for SocialProfile(0);
          v81 = *(_QWORD *)(v80 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v14, 1, 1, v80);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for SocialProfile(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v14, 1, v80) == 1)
        {
          sub_56024((uint64_t)v14, (uint64_t *)&unk_1502E88);
          v83 = objc_msgSend(v4, "identifier");
          v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
          v86 = v85;

          v87 = MusicItemID.init(_:)(v84, v86);
          v89 = v88;
          swift_beginAccess(v146, v155, 33, 0);
          v2 = v149;
          sub_CBDA84(&v153, v87, v89);
          swift_endAccess(v155);

          swift_bridgeObjectRelease();
        }
        else
        {

          v49 = (_QWORD *)sub_56024((uint64_t)v14, (uint64_t *)&unk_1502E88);
        }
        v53 = v64;
        v54 = (unint64_t)v5;
        v60 = &selRef_sharedPreferences;
        if (v3 < 0)
          break;
      }
      else
      {

        v53 = v64;
        v54 = (unint64_t)v5;
        if (v3 < 0)
          break;
      }
    }
  }
  v61 = __CocoaSet.Iterator.next()(v49);
  if (v61)
  {
    v62 = v61;
    v153 = v61;
    swift_unknownObjectRetain(v61);
    swift_dynamicCast(v155, &v153, v147, v2, 7);
    v4 = (id)v155[0];
    *(_QWORD *)&v63 = swift_unknownObjectRelease(v62).n128_u64[0];
    v64 = v53;
    v5 = (char *)v54;
    if (v4)
      goto LABEL_51;
  }
LABEL_63:
  sub_55D68(v3);
  v90 = *(void **)&v144[v143];
  if (!v90)
    goto LABEL_83;
  v91 = objc_msgSend(v90, "host");
  if (v91)
  {
    v92 = v91;
    v93 = v136;
    v94 = v152;
    sub_D38D00(v91, (uint64_t)v152, v142, v136);
    v95 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v93, 0, 1, v95);
    v96 = swift_getKeyPath(&unk_10A51E0);
    v97 = swift_getKeyPath(&unk_10A5208);
    v98 = v137;
    sub_5C238(v93, v137, &qword_1502E28);
    static Published.subscript.setter(v98, v94, v96, v97);
    sub_56024(v93, &qword_1502E28);
    swift_unknownObjectRelease(v92);
  }
  v99 = v146;
  swift_beginAccess(v146, v155, 0, 0);
  v100 = *(_QWORD *)(*(_QWORD *)v99 + 16);
  v102 = Logger.logObject.getter(v101);
  v103 = static os_log_type_t.default.getter();
  v104 = os_log_type_enabled(v102, v103);
  if (v100)
  {
    if (v104)
    {
      v105 = swift_slowAlloc(12, -1);
      *(_DWORD *)v105 = 134349056;
      *(_QWORD *)(v105 + 4) = *(_QWORD *)(*(_QWORD *)v146 + 16);
      _os_log_impl(&dword_0, v102, v103, "Fetching %{public}ld profiles", (uint8_t *)v105, 0xCu);
      swift_slowDealloc(v105, -1, -1);
    }

    v106 = swift_getKeyPath(&unk_10A5388);
    v107 = swift_bridgeObjectRetain();
    v108 = sub_C7D9A4(v107);
    swift_bridgeObjectRelease();
    v109 = type metadata accessor for SocialProfile(0);
    v110 = sub_4DD24(&qword_1503048, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v111 = sub_4DD24(&qword_1503050, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v112 = v138;
    MusicCatalogResourceRequest.init<A>(matching:memberOf:)(v106, v108, v109, v110, v111);
    v113 = type metadata accessor for TaskPriority(0);
    v114 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v139, 1, 1, v113);
    v115 = v134;
    v116 = v133;
    v117 = v135;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v133, v112, v135);
    type metadata accessor for MainActor(0);
    v118 = v152;
    v120 = static MainActor.shared.getter(v119);
    v121 = *(unsigned __int8 *)(v115 + 80);
    v122 = (v121 + 32) & ~v121;
    v123 = ((unint64_t)v132 + v122 + 7) & 0xFFFFFFFFFFFFFFF8;
    v124 = swift_allocObject(&unk_13BBEB8, v123 + 8, v121 | 7);
    *(_QWORD *)(v124 + 16) = v120;
    *(_QWORD *)(v124 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v124 + v122, v116, v117);
    *(_QWORD *)(v124 + v123) = v118;
    sub_D351BC(v114, (uint64_t)&unk_1503060, v124, (uint64_t)&type metadata for () + 8);
    v125 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v115 + 8))(v112, v117, v125);
  }
  else
  {
    if (v104)
    {
      v126 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v126 = 0;
      _os_log_impl(&dword_0, v102, v103, "No pending profiles to fetch", v126, 2u);
      swift_slowDealloc(v126, -1, -1);
    }

  }
  swift_release();
}

uint64_t sub_D38D00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char **v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  _BYTE v71[24];
  uint64_t v72;
  char v73[24];

  v64 = a2;
  v67 = a4;
  v66 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v66);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
  __chkstk_darwin(v8);
  v65 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v63 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v63 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v63 - v17;
  v19 = type metadata accessor for SocialProfile(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v68 = v18;
  v69 = v21;
  v70 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v18, 1, 1);
  v22 = &selRef__parent;
  v23 = objc_msgSend(a1, "identity");
  if (v23)
  {
    v24 = v23;
    if (objc_msgSend(v23, "type") == (char *)&dword_0 + 1)
    {
      v63 = a3;
      v25 = objc_msgSend(v24, "identifier");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = (uint64_t *)(v64 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
      v30 = swift_beginAccess(v64 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap, v73, 0, 0);
      v31 = *v29;
      if (*(_QWORD *)(v31 + 16))
      {
        swift_bridgeObjectRetain();
        v32 = sub_21BAD0(v26, v28);
        if ((v33 & 1) != 0)
        {
          v34 = v70;
          (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v15, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v20 + 72) * v32, v70);
          v35 = v15;
          v36 = 0;
        }
        else
        {
          v35 = v15;
          v36 = 1;
          v34 = v70;
        }
        v69(v35, v36, 1, v34);
        swift_bridgeObjectRelease();
      }
      else
      {
        v34 = v70;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v69)(v15, 1, 1, v70, v30);
      }
      swift_bridgeObjectRelease();
      v37 = (uint64_t)v68;
      sub_56024((uint64_t)v68, (uint64_t *)&unk_1502E88);
      sub_5C090((uint64_t)v15, v37, (uint64_t *)&unk_1502E88);
      sub_5C238(v37, (uint64_t)v12, (uint64_t *)&unk_1502E88);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v34) == 1)
      {
        v38 = v63 + 16;
        sub_56024((uint64_t)v12, (uint64_t *)&unk_1502E88);
        v39 = objc_msgSend(v24, "identifier");
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v42 = v41;

        v43 = MusicItemID.init(_:)(v40, v42);
        v45 = v44;
        swift_beginAccess(v38, v71, 33, 0);
        sub_CBDA84(&v72, v43, v45);
        swift_endAccess(v71);

        swift_bridgeObjectRelease();
        v22 = &selRef__parent;
      }
      else
      {

        sub_56024((uint64_t)v12, (uint64_t *)&unk_1502E88);
        v22 = &selRef__parent;
      }
    }
    else
    {

    }
  }
  v46 = objc_msgSend(a1, "identifier");
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v50 = objc_msgSend(a1, v22[466]);
  v51 = v50;
  v64 = v49;
  if (!v50)
  {
    v53 = v47;
LABEL_18:
    v55 = 0;
    goto LABEL_19;
  }
  v52 = objc_msgSend(v50, "displayName");

  v53 = v47;
  if (!v52)
  {
    v51 = 0;
    goto LABEL_18;
  }
  v51 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

LABEL_19:
  v56 = objc_msgSend(a1, "isPending");
  v57 = objc_msgSend(a1, "isGuest");
  v58 = (uint64_t)v68;
  v59 = v65;
  sub_5C238((uint64_t)v68, v65, (uint64_t *)&unk_1502E88);
  v60 = (uint64_t)&v7[*(int *)(v66 + 32)];
  v69((char *)v60, 1, 1, v70);
  v61 = v64;
  *(_QWORD *)v7 = v53;
  *((_QWORD *)v7 + 1) = v61;
  *((_QWORD *)v7 + 2) = v51;
  *((_QWORD *)v7 + 3) = v55;
  v7[32] = v56;
  v7[33] = v57;
  sub_D40894(v59, v60);
  sub_5C04C((uint64_t)v7, v67, type metadata accessor for SharePlayTogetherSession.Participant);
  return sub_56024(v58, (uint64_t *)&unk_1502E88);
}

uint64_t SharePlayTogetherSession.Participant.init(id:displayName:isPending:isGuest:socialProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;

  v16 = a8 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v17 = type metadata accessor for SocialProfile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 33) = a6;
  return sub_D40894(a7, v16);
}

uint64_t sub_D39260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;

  v5[4] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503068);
  v5[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[7] = v8;
  v9 = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[8] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503070);
  v5[9] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[10] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v5[11] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v13);
  v5[13] = swift_task_alloc(v13);
  v5[14] = swift_task_alloc(v13);
  v5[15] = type metadata accessor for MainActor(0);
  v5[16] = static MainActor.shared.getter(v14);
  v15 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  v5[17] = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503030);
  *v15 = v5;
  v15[1] = sub_D3938C;
  return MusicCatalogResourceRequest.response()(v9, v16);
}

uint64_t sub_D3938C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_D396F8;
  else
    v6 = sub_D39414;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_D39414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release();
  MusicCatalogResourceResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v8, (uint64_t)static Logger.sharePlayTogether);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v10 = v9(v4, v5, v6);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  if (v13)
  {
    v41 = v9;
    v17 = swift_slowAlloc(12, -1);
    *(_DWORD *)v17 = 134349056;
    v18 = sub_D417C0();
    dispatch thunk of Collection.startIndex.getter(v15);
    dispatch thunk of Collection.endIndex.getter(v15, v18);
    v19 = dispatch thunk of Collection.distance(from:to:)(v0 + 16, v0 + 24, v15, v18);
    v21 = v20;
    v43 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 8);
    v43(v14, v15, v19);
    *(_QWORD *)(v17 + 4) = v21;
    v9 = v41;
    _os_log_impl(&dword_0, v11, v12, "Finished fetching %{public}ld profiles", (uint8_t *)v17, 0xCu);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    v43 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 8);
    ((void (*)(_QWORD, _QWORD))v43)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  }

  v22 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 72);
  v40 = *(_QWORD *)(v0 + 104);
  v42 = *(_QWORD *)(v0 + 64);
  v28 = *(void **)(v0 + 32);
  v27 = *(_QWORD *)(v0 + 40);
  v39 = v27;
  v29 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 1, 1, v29);
  v9(v23, v22, v26);
  v30 = v28;
  v32 = static MainActor.shared.getter(v31);
  v33 = *(unsigned __int8 *)(v24 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = (v25 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject(&unk_13BBEE0, v35 + 8, v33 | 7);
  *(_QWORD *)(v36 + 16) = v32;
  *(_QWORD *)(v36 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v36 + v34, v23, v26);
  *(_QWORD *)(v36 + v35) = v30;
  sub_C51ED8(v39, (uint64_t)&unk_1503080, v36);
  v37 = swift_release();
  v43(v22, v26, v37);
  swift_task_dealloc(v22);
  swift_task_dealloc(v40);
  swift_task_dealloc(v23);
  swift_task_dealloc(v42);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D396F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D39774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v5[31] = a4;
  v5[32] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[33] = swift_task_alloc(v6);
  v5[34] = swift_task_alloc(v6);
  v5[35] = swift_task_alloc(v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502E28);
  v5[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v5[37] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[38] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[39] = swift_task_alloc(v10);
  v5[40] = swift_task_alloc(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503070);
  v5[41] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[42] = v12;
  v5[43] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SocialProfile(0);
  v5[44] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[45] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[46] = swift_task_alloc(v15);
  v5[47] = swift_task_alloc(v15);
  v5[48] = swift_task_alloc(v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503090);
  v5[49] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v17);
  v5[51] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v5[52] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  return swift_task_switch(sub_D39924, v20, v21);
}

void sub_D39924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  NSString v28;
  id v29;
  double v30;
  id v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  NSString v43;
  id v44;
  double v45;
  id v46;
  double v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD);
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, _QWORD);
  void (*v92)(uint64_t);
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v101;
  char v102;
  unint64_t v103;
  uint64_t v104;
  _BOOL8 v105;
  uint64_t v106;
  char v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(_QWORD *);
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v1 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = swift_release();
  v145 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  v145(v2, v6, v4, v8);
  v9 = sub_D417C0();
  dispatch thunk of Collection.startIndex.getter(v4);
  *(_QWORD *)(v2 + *(int *)(v3 + 36)) = *(_QWORD *)(v0 + 240);
  sub_5C090(v2, v1, &qword_1503090);
  v10 = (_QWORD *)(v1 + *(int *)(v3 + 36));
  v11 = (_QWORD *)(v7 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
  v12 = *v10;
  dispatch thunk of Collection.endIndex.getter(v4, v9);
  v147 = v11;
  if (v12 != *(_QWORD *)(v0 + 232))
  {
    v80 = *(_QWORD *)(v0 + 360);
    v142 = *(_QWORD *)(v0 + 336);
    v144 = v0 + 80;
    v140 = v9;
    v141 = v0;
    v139 = v10;
    v159 = v0 + 168;
    do
    {
      v86 = *(_QWORD *)(v0 + 408);
      v87 = *(_QWORD *)(v0 + 384);
      v153 = *(_QWORD *)(v0 + 376);
      v156 = *(_QWORD *)(v0 + 368);
      v149 = *(_QWORD *)(v0 + 352);
      v88 = v80;
      v89 = *(_QWORD *)(v0 + 344);
      v90 = *(_QWORD *)(v0 + 328);
      v91 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v144, v10, v90, v9);
      v92 = *(void (**)(uint64_t))(v88 + 16);
      v92(v87);
      v91(v144, 0);
      ((void (*)(uint64_t, uint64_t, uint64_t))v145)(v89, v86, v90);
      dispatch thunk of Collection.formIndex(after:)(v10, v90, v9);
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v89, v90);
      v93 = v88;
      v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
      v95 = v94(v153, v87, v149);
      v96 = SocialProfile.id.getter(v95);
      v98 = v97;
      v99 = swift_beginAccess(v147, v159, 33, 0);
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v92)(v156, v153, v149, v99);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v147);
      v101 = (_QWORD *)*v147;
      *v147 = 0x8000000000000000;
      v103 = sub_21BAD0(v96, v98);
      v104 = v101[2];
      v105 = (v102 & 1) == 0;
      v106 = v104 + v105;
      if (__OFADD__(v104, v105))
        goto LABEL_61;
      v107 = v102;
      if (v101[3] >= v106)
      {
        v0 = v141;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_D3ED90();
      }
      else
      {
        sub_D3D688(v106, isUniquelyReferenced_nonNull_native);
        v108 = sub_21BAD0(v96, v98);
        v0 = v141;
        if ((v107 & 1) != (v109 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          return;
        }
        v103 = v108;
      }
      v110 = *(_QWORD *)(v0 + 368);
      v111 = *(_QWORD *)(v0 + 352);
      if ((v107 & 1) != 0)
      {
        v80 = v93;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v93 + 40))(v101[7] + *(_QWORD *)(v93 + 72) * v103, v110, v111);
      }
      else
      {
        v101[(v103 >> 6) + 8] |= 1 << v103;
        v112 = (uint64_t *)(v101[6] + 16 * v103);
        *v112 = v96;
        v112[1] = v98;
        v80 = v93;
        v94(v101[7] + *(_QWORD *)(v93 + 72) * v103, v110, v111);
        v113 = v101[2];
        v114 = __OFADD__(v113, 1);
        v115 = v113 + 1;
        if (v114)
          goto LABEL_62;
        v101[2] = v115;
        swift_bridgeObjectRetain();
      }
      v81 = *(_QWORD *)(v0 + 376);
      v82 = *(_QWORD *)(v0 + 352);
      v83 = *(_QWORD *)(v0 + 328);
      *v147 = v101;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v84 = swift_endAccess(v159);
      (*(void (**)(uint64_t, uint64_t, __n128))(v80 + 8))(v81, v82, v84);
      v10 = v139;
      v9 = v140;
      v85 = *v139;
      dispatch thunk of Collection.endIndex.getter(v83, v140);
    }
    while (v85 != *(_QWORD *)(v0 + 232));
  }
  v13 = *(_QWORD *)(v0 + 256);
  sub_56024(*(_QWORD *)(v0 + 408), &qword_1503090);
  KeyPath = swift_getKeyPath(&unk_10A5108);
  v15 = swift_getKeyPath(&unk_10A5130);
  static Published.subscript.getter((_QWORD *)(v0 + 216), v13, KeyPath, v15);
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + 16);
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_35:
    v72 = *(_QWORD *)(v0 + 296);
    v73 = *(_QWORD *)(v0 + 304);
    v74 = *(_QWORD **)(v0 + 288);
    v75 = *(_QWORD *)(v0 + 256);
    v76 = swift_getKeyPath(&unk_10A51E0);
    v77 = swift_getKeyPath(&unk_10A5208);
    static Published.subscript.getter(v74, v75, v76, v77);
    swift_release();
    v78 = swift_release();
    v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v79)(v74, 1, v72, v78) == 1)
    {
      sub_56024(*(_QWORD *)(v0 + 288), &qword_1502E28);
    }
    else
    {
      v116 = *(_QWORD *)(v0 + 296);
      sub_5C04C(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 320), type metadata accessor for SharePlayTogetherSession.Participant);
      v117 = SharePlayTogetherSession.host.modify((_QWORD *)(v0 + 112));
      v119 = v118;
      v120 = v79(v118, 1, v116);
      v121 = *(uint64_t **)(v0 + 320);
      if (!v120)
      {
        v122 = *v121;
        v123 = v121[1];
        v124 = swift_beginAccess(v147, v0 + 192, 0, 0);
        v125 = *v147;
        if (*(_QWORD *)(*v147 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v126 = sub_21BAD0(v122, v123);
          v127 = *(_QWORD *)(v0 + 352);
          v128 = *(_QWORD *)(v0 + 360);
          v129 = *(_QWORD *)(v0 + 264);
          if ((v130 & 1) != 0)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v128 + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v125 + 56) + *(_QWORD *)(v128 + 72) * v126, *(_QWORD *)(v0 + 352));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v128 + 56))(v129, 0, 1, v127);
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v128 + 56))(*(_QWORD *)(v0 + 264), 1, 1, v127);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 360) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 352), v124);
        }
        v121 = *(uint64_t **)(v0 + 320);
        sub_D40894(*(_QWORD *)(v0 + 264), v119 + *(int *)(*(_QWORD *)(v0 + 296) + 32));
      }
      ((void (*)(uint64_t, _QWORD))v117)(v0 + 112, 0);
      sub_D4180C((uint64_t)v121);
    }
    v131 = *(_QWORD *)(v0 + 400);
    v132 = *(_QWORD *)(v0 + 408);
    v134 = *(_QWORD *)(v0 + 376);
    v133 = *(_QWORD *)(v0 + 384);
    v135 = *(_QWORD *)(v0 + 368);
    v136 = *(_QWORD *)(v0 + 344);
    v137 = *(_QWORD *)(v0 + 320);
    v150 = *(_QWORD *)(v0 + 312);
    v151 = *(_QWORD *)(v0 + 288);
    v154 = *(_QWORD *)(v0 + 280);
    v157 = *(_QWORD *)(v0 + 272);
    v160 = *(_QWORD *)(v0 + 264);
    v138 = type metadata accessor for SharePlayTogetherSession(0);
    sub_4DD24(&qword_1503098, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
    ObservableObject<>.objectWillChange.getter(v138);
    ObservableObjectPublisher.send()();
    swift_release();
    swift_task_dealloc(v132);
    swift_task_dealloc(v131);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v137);
    swift_task_dealloc(v150);
    swift_task_dealloc(v151);
    swift_task_dealloc(v154);
    swift_task_dealloc(v157);
    swift_task_dealloc(v160);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v17 = (_QWORD *)(v0 + 224);
  v148 = *(_QWORD *)(v0 + 360);
  v18 = *(_QWORD *)(v0 + 312);
  v152 = *(_QWORD *)(v0 + 304);
  v143 = *(_QWORD *)(v0 + 296);
  v158 = *(_QWORD *)(v0 + 256);
  v155 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  swift_beginAccess(v147, v0 + 144, 0, 0);
  v19 = 0;
  v146 = v16;
  while (1)
  {
    v21 = *(_QWORD *)(v0 + 256);
    v22 = swift_getKeyPath(&unk_10A5108);
    v23 = swift_getKeyPath(&unk_10A5130);
    static Published.subscript.getter(v17, v21, v22, v23);
    swift_release();
    swift_release();
    v24 = *(_QWORD *)(v0 + 224);
    if (v19 >= *(_QWORD *)(v24 + 16))
      break;
    v25 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
    v26 = *(_QWORD *)(v152 + 72) * v19;
    sub_5BDB8(v24 + v25 + v26, *(_QWORD *)(v0 + 312), type metadata accessor for SharePlayTogetherSession.Participant);
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      v27 = *(void **)(v158 + v155);
      if (!v27)
        goto LABEL_66;
      swift_unknownObjectRetain(*(_QWORD *)(v158 + v155));
      v28 = String._bridgeToObjectiveC()();
      v29 = objc_msgSend(v27, "pendingParticipantForIdentifier:", v28);

      *(_QWORD *)&v30 = swift_unknownObjectRelease(v27).n128_u64[0];
      if (v29)
      {
        v31 = objc_msgSend(v29, "identity", v30);
        *(_QWORD *)&v32 = swift_unknownObjectRelease(v29).n128_u64[0];
        if (v31)
        {
          v33 = objc_msgSend(v31, "identifier", v32);

          v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
          v36 = v35;

          v37 = *v147;
          if (*(_QWORD *)(*v147 + 16))
          {
            swift_bridgeObjectRetain();
            v38 = sub_21BAD0(v34, v36);
            v39 = *(_QWORD *)(v0 + 352);
            v40 = *(_QWORD *)(v0 + 280);
            if ((v41 & 1) != 0)
            {
              (*(void (**)(_QWORD, unint64_t, _QWORD))(v148 + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v37 + 56) + *(_QWORD *)(v148 + 72) * v38, *(_QWORD *)(v0 + 352));
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56))(v40, 0, 1, v39);
            }
            else
            {
              (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v148 + 56))(*(_QWORD *)(v0 + 280), 1, 1, v39);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v148 + 56))(*(_QWORD *)(v0 + 280), 1, 1, *(_QWORD *)(v0 + 352));
          }
          swift_bridgeObjectRelease();
          v65 = *(_QWORD *)(v0 + 256);
          v66 = swift_getKeyPath(&unk_10A5108);
          v67 = swift_getKeyPath(&unk_10A5130);
          v60 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 16, v65, v66, v67);
          v69 = v68;
          v70 = (_QWORD *)*v68;
          v71 = swift_isUniquelyReferenced_nonNull_native(*v68);
          *v69 = v70;
          if ((v71 & 1) == 0)
          {
            v70 = (_QWORD *)sub_D3F050(v70);
            *v69 = v70;
          }
          if (v19 >= v70[2])
            goto LABEL_64;
          sub_D40894(*(_QWORD *)(v0 + 280), (uint64_t)v70 + v25 + v26 + *(int *)(v143 + 32));
          v20 = v0 + 16;
LABEL_5:
          v60(v20, 0);
          swift_release();
          swift_release();
          v17 = (_QWORD *)(v0 + 224);
          v16 = v146;
          goto LABEL_6;
        }
      }
    }
    v42 = *(void **)(v158 + v155);
    if (!v42)
      goto LABEL_65;
    swift_unknownObjectRetain(*(_QWORD *)(v158 + v155));
    v43 = String._bridgeToObjectiveC()();
    v44 = objc_msgSend(v42, "participantForIdentifier:", v43);

    *(_QWORD *)&v45 = swift_unknownObjectRelease(v42).n128_u64[0];
    if (v44)
    {
      v46 = objc_msgSend(v44, "identity", v45);
      *(_QWORD *)&v47 = swift_unknownObjectRelease(v44).n128_u64[0];
      if (v46)
      {
        v48 = objc_msgSend(v46, "identifier", v47);

        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v51 = v50;

        v52 = *v147;
        if (*(_QWORD *)(*v147 + 16))
        {
          swift_bridgeObjectRetain();
          v53 = sub_21BAD0(v49, v51);
          v54 = *(_QWORD *)(v0 + 352);
          v55 = *(_QWORD *)(v0 + 272);
          if ((v56 & 1) != 0)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v148 + 16))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v52 + 56) + *(_QWORD *)(v148 + 72) * v53, *(_QWORD *)(v0 + 352));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v148 + 56))(v55, 0, 1, v54);
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v148 + 56))(*(_QWORD *)(v0 + 272), 1, 1, v54);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v148 + 56))(*(_QWORD *)(v0 + 272), 1, 1, *(_QWORD *)(v0 + 352));
        }
        swift_bridgeObjectRelease();
        v57 = *(_QWORD *)(v0 + 256);
        v58 = swift_getKeyPath(&unk_10A5108);
        v59 = swift_getKeyPath(&unk_10A5130);
        v60 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 48, v57, v58, v59);
        v62 = v61;
        v63 = (_QWORD *)*v61;
        v64 = swift_isUniquelyReferenced_nonNull_native(*v61);
        *v62 = v63;
        if ((v64 & 1) == 0)
        {
          v63 = (_QWORD *)sub_D3F050(v63);
          *v62 = v63;
        }
        if (v19 >= v63[2])
          goto LABEL_63;
        sub_D40894(*(_QWORD *)(v0 + 272), (uint64_t)v63 + v25 + v26 + *(int *)(v143 + 32));
        v20 = v0 + 48;
        goto LABEL_5;
      }
    }
LABEL_6:
    ++v19;
    sub_D4180C(*(_QWORD *)(v0 + 312));
    if (v16 == v19)
      goto LABEL_35;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void SharePlayTogetherSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.SharePlayTogetherSession", 34, "init()", 6, 0);
  __break(1u);
}

id SharePlayTogetherSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayTogetherSession(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_D3A71C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SharePlayTogetherSession(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t SharePlayTogetherSession.Participant.isPending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t SharePlayTogetherSession.Participant.isGuest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SharePlayTogetherSession.Participant.isGuest.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

double (*SharePlayTogetherSession.Participant.isGuest.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SharePlayTogetherSession.Participant.socialProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  return sub_5C238(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_1502E88);
}

uint64_t SharePlayTogetherSession.Participant.socialProfile.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  return sub_D40894(a1, v3);
}

double (*SharePlayTogetherSession.Participant.socialProfile.modify())(double)
{
  type metadata accessor for SharePlayTogetherSession.Participant(0);
  return UIScreen.Dimensions.size.getter;
}

double SharePlayTogetherSession.groupSessionDidConnect(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  double result;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  swift_unknownObjectRetain(a1);
  v7 = v1;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_13BBDF0, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a1;
  v10[5] = v7;
  sub_C51ED8((uint64_t)v5, (uint64_t)&unk_1502EA0, (uint64_t)v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D3A908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[7] = a4;
  v5[8] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_D3A974, v8, v9);
}

uint64_t sub_D3A974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__n128);
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;

  swift_release();
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)static Logger.sharePlayTogether);
  v3 = swift_unknownObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 56);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v24 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = objc_msgSend(v7, "description");
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v8 + 4) = sub_BA95EC(v11, v13, &v24);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n(v7, 2);
    _os_log_impl(&dword_0, v4, v5, "groupSessionDidConnect %{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 56), 2);
  }

  v14 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v14 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected) = 1;
  v15 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers;
  v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = v16 + 40;
    do
    {
      v19 = *(void (**)(__n128))(v18 - 8);
      v20 = swift_retain();
      v19(v20);
      swift_release();
      v18 += 16;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v14 + v15) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  SharePlayTogetherSession.qrCode.getter((uint64_t *)(v0 + 16));
  sub_A2ADF4(v0 + 16);
  v21 = type metadata accessor for SharePlayTogetherSession(0);
  sub_4DD24(&qword_1503098, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  ObservableObject<>.objectWillChange.getter(v21);
  ObservableObjectPublisher.send()();
  v22 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v22);
}

double SharePlayTogetherSession.groupSession(_:didInvalidateWithError:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v8 = v2;
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_13BBE18, 48, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = a2;
  v11[5] = v8;
  sub_C51ED8((uint64_t)v6, (uint64_t)&unk_1502EB0, (uint64_t)v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D3AE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_D3AE70, v8, v9);
}

void sub_D3AE70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  unsigned __int8 v31;
  void (*v32)(unsigned __int8 *, __n128);
  void *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;

  swift_release();
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v3, (uint64_t)static Logger.sharePlayTogether);
  swift_errorRetain(v1);
  v4 = v2;
  swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(char **)(v0 + 48);
  v10 = &unk_1502000;
  if (v7)
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    v13 = swift_slowAlloc(32, -1);
    v38 = v13;
    *(_DWORD *)v11 = 138543618;
    swift_errorRetain(v8);
    v14 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v11 + 4) = v14;
    *v12 = v14;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    *(_WORD *)(v11 + 12) = 2082;
    v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers];
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15030E8);
    v17 = Array.description.getter(v15, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    v20 = (char *)v17;
    v10 = (_QWORD *)&unk_1502000;
    *(_QWORD *)(v11 + 14) = sub_BA95EC(v20, v19, &v38);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v5, v6, "Session invalidated with error %{public}@. Calling %{public}s observers.", (uint8_t *)v11, 0x16u);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1502020);
    swift_arrayDestroy(v12, 1, v21);
    swift_slowDealloc(v12, -1, -1);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 40));
    swift_errorRelease(v8);

  }
  v22 = *(_QWORD *)(v0 + 48);
  v23 = v10[460];
  v24 = *(_QWORD *)(v22 + v23);
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
  {
LABEL_15:
    *(_QWORD *)(v22 + v23) = _swiftEmptyArrayStorage;
    v34 = swift_bridgeObjectRelease();
    (*(void (**)(__n128))(v0 + 8))(v34);
    return;
  }
  v35 = v23;
  v36 = v0;
  v26 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually;
  v27 = (_BYTE *)(v22 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  v28 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  swift_bridgeObjectRetain();
  swift_beginAccess(v27, v0 + 16, 0, 0);
  v29 = v24 + 40;
  while (1)
  {
    v32 = *(void (**)(unsigned __int8 *, __n128))(v29 - 8);
    if ((*(_BYTE *)(v22 + v26) & 1) == 0 && *v27 != 1)
      break;
    v30 = swift_retain();
    v31 = 1;
LABEL_9:
    v37 = v31;
    v32(&v37, v30);
    swift_release();
    v29 += 16;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      v23 = v35;
      v0 = v36;
      goto LABEL_15;
    }
  }
  v33 = *(void **)(v22 + v28);
  if (v33)
  {
    v31 = objc_msgSend(v33, "isPlaceholder", swift_retain().n128_f64[0]);
    goto LABEL_9;
  }
  __break(1u);
}

double SharePlayTogetherSession.groupSession(_:didUpdate:)()
{
  return sub_D409F8("session:didUpdateParticipants", (uint64_t)&unk_13BBFA8, (uint64_t)&unk_15030E0);
}

uint64_t sub_D3B304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_D419E4, v6, v7);
}

double SharePlayTogetherSession.groupSession(_:didUpdatePendingParticipants:)()
{
  return sub_D409F8("session:didUpdatePendingParticipants:", (uint64_t)&unk_13BBF80, (uint64_t)&unk_15030D0);
}

void sub_D3B3D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  id v12;

  swift_unknownObjectRetain(a3);
  v12 = a1;
  sub_D409F8(a5, a6, a7);
  swift_unknownObjectRelease(a3);

}

double SharePlayTogetherSession.groupSession(_:didUpdateMembers:)()
{
  return sub_D409F8("session:didUpdateMembers:", (uint64_t)&unk_13BBF58, (uint64_t)&unk_15030C0);
}

uint64_t sub_D3B474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_D3B4E0, v7, v8);
}

uint64_t sub_D3B4E0()
{
  uint64_t v0;

  swift_release();
  sub_D37F18();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D3B530()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.sharePlayTogether);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.sharePlayTogether);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0xD000000000000011, 0x80000000010C2B80);
}

id sub_D3B5D8(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  id result;

  if (a4)
  {
    sub_50CB4(a2, a3);
    return a4;
  }
  return result;
}

uint64_t static Logger.sharePlayTogether.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.sharePlayTogether);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void sub_D3B67C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FDB20);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_24;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_43;
    if (v13 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v13);
    if (!v26)
    {
      v27 = v13 + 1;
      if (v13 + 1 >= v41)
      {
LABEL_34:
        swift_release(v5);
        v3 = v40;
        if ((v43 & 1) == 0)
          goto LABEL_41;
        goto LABEL_37;
      }
      v26 = *(_QWORD *)(v42 + 8 * v27);
      if (!v26)
      {
        while (1)
        {
          v13 = v27 + 1;
          if (__OFADD__(v27, 1))
            break;
          if (v13 >= v41)
            goto LABEL_34;
          v26 = *(_QWORD *)(v42 + 8 * v13);
          ++v27;
          if (v26)
            goto LABEL_23;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      ++v13;
    }
LABEL_23:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_24:
    v28 = 16 * v23;
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v28);
    v31 = *v29;
    v30 = v29[1];
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v28);
    v34 = *v32;
    v33 = v32[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v44);
    String.hash(into:)(v44, v31, v30);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v17 == v36;
        if (v17 == v36)
          v17 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v31;
    v20[1] = v30;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v34;
    v21[1] = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  swift_release(v5);
  *v3 = v8;
}

void sub_D3B988(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF900);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_25;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v12)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_37;
      v23 = *(_QWORD *)(v37 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v14 >= v12)
              goto LABEL_37;
            v23 = *(_QWORD *)(v37 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v14 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v41 = *(_QWORD *)(v25 + 32);
      v39 = v26;
      v40 = v27;
      sub_50CA4((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v38);
    }
    else
    {
      sub_138F24(v25, (uint64_t)&v39);
      sub_95094(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v38);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v39;
    v18 = v40;
    *(_QWORD *)(v16 + 32) = v41;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    sub_50CA4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_D3BC9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503130);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v33 & 1) == 0)
              {
                swift_release();
                v3 = v32;
                goto LABEL_41;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v35);
      Hasher._combine(_:)(v21);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_41:
  *v3 = v8;
}

void sub_D3BF60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FDB00);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v38);
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_D3C274(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t i;
  int v52;
  uint64_t v53;

  v3 = v2;
  v6 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v50 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAE0);
  v52 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_44;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v49 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v47 = v2;
  v48 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v20 = swift_retain();
  v21 = 0;
  v22 = v12;
  for (i = v12; ; v22 = i)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_24;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v26 >= v48)
      break;
    v27 = v49;
    v28 = v49[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v48)
        goto LABEL_37;
      v28 = v49[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v48)
        {
LABEL_37:
          swift_release();
          v3 = v47;
          if ((v52 & 1) == 0)
            goto LABEL_44;
          goto LABEL_38;
        }
        v28 = v49[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_46;
            if (v21 >= v48)
              goto LABEL_37;
            v28 = v49[v21];
            ++v29;
            if (v28)
              goto LABEL_23;
          }
        }
        v21 = v29;
      }
    }
LABEL_23:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_24:
    v30 = *(_QWORD *)(v9 + 72);
    v31 = *(_QWORD *)(v22 + 48) + v30 * v25;
    if ((v52 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 32))(v11, v31, v8, v20);
      v32 = *(_QWORD *)(v22 + 56);
      v33 = *(_QWORD *)(v50 + 72);
      sub_5C04C(v32 + v33 * v25, v53, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v11, v31, v8, v20);
      v34 = *(_QWORD *)(v22 + 56);
      v33 = *(_QWORD *)(v50 + 72);
      sub_5BDB8(v34 + v33 * v25, v53, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    }
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_4DD24(&qword_1501830, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v23 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v30 * v23, v11, v8);
    sub_5C04C(v53, *(_QWORD *)(v14 + 56) + v33 * v23, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v47;
  v27 = v49;
  if ((v52 & 1) == 0)
    goto LABEL_44;
LABEL_38:
  v45 = 1 << *(_BYTE *)(i + 32);
  if (v45 >= 64)
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v45;
  *(_QWORD *)(i + 16) = 0;
LABEL_44:
  swift_release();
  *v3 = v14;
}

void sub_D3C690(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDB10);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release();
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_50CA4(v24, v38);
      }
      else
      {
        sub_95094((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)(v37);
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_50CA4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
  *v3 = v8;
}

void sub_D3C98C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  Swift::UInt *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt *v21;
  Swift::UInt v22;
  Swift::UInt v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1503128);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v36)
          goto LABEL_34;
        v19 = v37[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v36)
            goto LABEL_34;
          v19 = v37[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_34:
              if ((v35 & 1) == 0)
              {
                swift_release(v5);
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v36)
                  goto LABEL_34;
                v19 = v37[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = (Swift::UInt *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v38);
      Hasher._combine(_:)(v23);
      Hasher._combine(_:)(v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (Swift::UInt *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_D3CC68(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAC0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_unknownObjectRetain(v33);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_D3CF3C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  __chkstk_darwin(v6);
  v55 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503118);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_44;
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v49 = v3;
  v50 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v53 = v11;
  v20 = swift_retain();
  v21 = 0;
  v48 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v52 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v27 >= v50)
      break;
    v28 = v51;
    v29 = v51[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v50)
        goto LABEL_37;
      v29 = v51[v21];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v50)
        {
LABEL_37:
          v45 = v53;
          swift_release();
          v3 = v49;
          if ((v48 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v29 = v51[v30];
        if (!v29)
        {
          while (1)
          {
            v21 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_46;
            if (v21 >= v50)
              goto LABEL_37;
            v29 = v51[v21];
            ++v30;
            if (v29)
              goto LABEL_26;
          }
        }
        v21 = v30;
      }
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v53;
    v32 = *(_QWORD *)(v54 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v54 + v23))(v10, *(_QWORD *)(v53 + 48) + v32 * v26, v8, v20);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v56 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v56 + v23))(v55, v33 + v34 * v26, v57);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_4DD24(&qword_1501830, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v54 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v56 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v55, v57);
    ++*(_QWORD *)(v14 + 16);
  }
  v45 = v53;
  swift_release();
  v3 = v49;
  v28 = v51;
  if ((v48 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v46 = 1 << *(_BYTE *)(v45 + 32);
  if (v46 >= 64)
    bzero(v28, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v46;
  *(_QWORD *)(v45 + 16) = 0;
LABEL_44:
  swift_release();
  *v3 = v14;
}

void sub_D3D338(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503108);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v40 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v39)
          goto LABEL_36;
        v23 = v40[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_36;
          v23 = v40[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_36:
              if ((v41 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v9 >= v39)
                  goto LABEL_36;
                v23 = v40[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v30 = *(_QWORD *)(v5 + 56) + 56 * v21;
      v31 = *(_BYTE *)v30;
      v43 = *(_OWORD *)(v30 + 24);
      v44 = *(_OWORD *)(v30 + 8);
      v42 = *(_OWORD *)(v30 + 40);
      if ((v41 & 1) == 0)
      {
        v32 = (id)v44;
        v33 = *((id *)&v44 + 1);
        v34 = (id)v43;
        v35 = *((id *)&v43 + 1);
        v36 = (id)v42;
        v37 = *((id *)&v42 + 1);
      }
      Hasher.init(_seed:)(v45);
      Hasher._combine(_:)(v29 + 1);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      v19 = *(_QWORD *)(v8 + 56) + 56 * v18;
      *(_BYTE *)v19 = v31;
      *(_OWORD *)(v19 + 8) = v44;
      *(_OWORD *)(v19 + 24) = v43;
      *(_OWORD *)(v19 + 40) = v42;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
  *v3 = v8;
}

void sub_D3D688(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[9];

  v3 = v2;
  v47 = type metadata accessor for SocialProfile(0);
  v6 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA90);
  v45 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v42 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v22 >= v43)
      goto LABEL_36;
    v23 = v44[v22];
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v23 = v44[v17];
      if (!v23)
        break;
    }
LABEL_23:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = v8;
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v25 + v30 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v46, v31, v47, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v46, v31, v47, v16);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v48);
    String.hash(into:)(v48, v29, v28);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v29;
    v19[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v46, v47);
    ++*(_QWORD *)(v10 + 16);
    v8 = v26;
  }
  v24 = v22 + 2;
  if (v24 < v43)
  {
    v23 = v44[v24];
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v17 >= v43)
          goto LABEL_36;
        v23 = v44[v17];
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v17 = v24;
    goto LABEL_23;
  }
LABEL_36:
  swift_release();
  v3 = v42;
  if ((v45 & 1) != 0)
  {
    v40 = 1 << *(_BYTE *)(v8 + 32);
    if (v40 >= 64)
      bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v44 = -1 << v40;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release();
  *v3 = v10;
}

void sub_D3D9F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FDB20);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    if (!v26)
      break;
LABEL_23:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_D3DB90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF900);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_138F24(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_95094(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_50CA4(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_D3DD74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503130);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_D3DF00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FDB00);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_D3E0B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v36 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAE0);
  v30 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return;
  }
  v8 = v6;
  v9 = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        sub_5C04C(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for PushNotificationObserver.RegisteredHandler))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_5BDB8(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_D3E37C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDB10);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_95094(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_50CA4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_D3E560()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1503128);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v12 = (v20 - 1) & v20;
    v15 = v22 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_D3E6F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDAC0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_unknownObjectRetain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_D3E898()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500450);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503118);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_D3EB7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1503108);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 56 * v15;
    v17 = *(_BYTE *)v16;
    v28 = *(_OWORD *)(v16 + 8);
    v29 = *(_OWORD *)(v16 + 24);
    v30 = *(_OWORD *)(v16 + 40);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v18 = *(_QWORD *)(v4 + 56) + 56 * v15;
    *(_BYTE *)v18 = v17;
    *(_OWORD *)(v18 + 8) = v28;
    *(_OWORD *)(v18 + 24) = v29;
    *(_OWORD *)(v18 + 40) = v30;
    v19 = (id)v28;
    v20 = *((id *)&v28 + 1);
    v21 = (id)v29;
    v22 = *((id *)&v29 + 1);
    v23 = (id)v30;
    v24 = *((id *)&v30 + 1);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_D3ED90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for SocialProfile(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14FDA90);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

char *sub_D3EFEC(uint64_t a1)
{
  return sub_C06120(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_D3F000(uint64_t a1)
{
  return sub_BCC9AC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_D3F014(_QWORD *a1)
{
  return sub_BCD2F4(0, a1[2], 0, a1);
}

char *sub_D3F028(uint64_t a1)
{
  return sub_BCD418(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_D3F03C(uint64_t a1)
{
  return sub_BCD528(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

size_t sub_D3F050(_QWORD *a1)
{
  return sub_BCD954(0, a1[2], 0, a1);
}

uint64_t sub_D3F064(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_68DF60(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_D3F0DC(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_D3F0DC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Swift::Int v25;
  id v26;
  void *v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  _QWORD *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t *v49;
  Swift::Int v50;
  Swift::Int v51;
  uint64_t *v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  void *v56;
  Swift::Int v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char v72;
  void *v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  Swift::Int v133;
  char *v134;
  char *v135;
  Swift::Int v136;
  Swift::Int v137;
  Swift::Int v138;
  uint64_t v139;
  void **v140;
  uint64_t v141;
  int v142;
  Swift::Int v143;
  Swift::Int v144;
  uint64_t v145;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_171;
    if (v3)
      sub_D3FAF0(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_170;
  v6 = v4;
  v130 = a1;
  if (v3 <= 1)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    v145 = (uint64_t)_swiftEmptyArrayStorage;
    v140 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
LABEL_136:
      if (v13 >= 2)
      {
        v123 = *v130;
        do
        {
          v124 = v13 - 2;
          if (v13 < 2)
            goto LABEL_165;
          if (!v123)
            goto LABEL_178;
          v125 = *(_QWORD *)&v10[16 * v124 + 32];
          v126 = *(_QWORD *)&v10[16 * v13 + 24];
          sub_D3FD00((void **)(v123 + 8 * v125), (void **)(v123 + 8 * *(_QWORD *)&v10[16 * v13 + 16]), v123 + 8 * v126, v140);
          if (v1)
            break;
          if (v126 < v125)
            goto LABEL_166;
          if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
            v10 = sub_D402E0((uint64_t)v10);
          if (v124 >= *((_QWORD *)v10 + 2))
            goto LABEL_167;
          v127 = &v10[16 * v124 + 32];
          *(_QWORD *)v127 = v125;
          *((_QWORD *)v127 + 1) = v126;
          v128 = *((_QWORD *)v10 + 2);
          if (v13 > v128)
            goto LABEL_168;
          memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v128 - v13));
          *((_QWORD *)v10 + 2) = v128 - 1;
          v13 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_147:
      swift_bridgeObjectRelease();
      *(_QWORD *)((char *)&dword_10 + (v145 & 0xFFFFFFFFFFFFF8)) = 0;
      specialized Array._endMutation()(v129);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v7 = v5 >> 1;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FF2F0);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8)) = v7;
    v140 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v145 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v132 = *a1 + 16;
  v133 = v6;
  v131 = *a1 - 8;
  v10 = (char *)_swiftEmptyArrayStorage;
  v136 = v3;
  v141 = *a1;
  while (2)
  {
    v14 = v11;
    v15 = v11 + 1;
    v138 = v11;
    if (v11 + 1 >= v3)
    {
      v25 = v3;
      goto LABEL_59;
    }
    v134 = v10;
    v16 = v12;
    v17 = *(void **)(v12 + 8 * v15);
    v18 = *(void **)(v16 + 8 * v11);
    swift_unknownObjectRetain(v17);
    swift_unknownObjectRetain(v18);
    v19 = objc_msgSend(v17, "identity");
    if (v19
      && (v20 = v19, v21 = objc_msgSend(v19, "displayName"), v20, v21))
    {
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
    v26 = objc_msgSend(v18, "identity");
    v27 = v26;
    if (v26)
    {
      v28 = objc_msgSend(v26, "displayName");

      if (v28)
      {
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v30 = v29;

        if ((void *)v22 != v27)
          goto LABEL_29;
        goto LABEL_27;
      }
      v27 = 0;
    }
    v30 = 0xE000000000000000;
    if ((void *)v22 != v27)
    {
LABEL_29:
      v142 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v27, v30, 1);
      goto LABEL_30;
    }
LABEL_27:
    if (v24 != v30)
      goto LABEL_29;
    v142 = 0;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v17);
    swift_unknownObjectRelease(v18);
    v15 = v14 + 2;
    v25 = v136;
    if (v14 + 2 >= v136)
      goto LABEL_51;
    v31 = v14;
    v32 = v14 + 2;
    v33 = (_QWORD *)(v132 + 8 * v31);
    while (1)
    {
      v34 = (void *)*(v33 - 1);
      v35 = (void *)*v33;
      swift_unknownObjectRetain(*v33);
      swift_unknownObjectRetain(v34);
      v36 = objc_msgSend(v35, "identity");
      if (!v36)
        goto LABEL_35;
      v37 = v36;
      v38 = objc_msgSend(v36, "displayName");

      if (v38)
      {
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v41 = v40;

      }
      else
      {
LABEL_35:
        v39 = 0;
        v41 = 0xE000000000000000;
      }
      v42 = objc_msgSend(v34, "identity");
      if (v42)
      {
        v43 = v42;
        v44 = objc_msgSend(v42, "displayName");

        if (v44)
        {
          v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          v47 = v46;

        }
        else
        {
          v45 = 0;
          v47 = 0xE000000000000000;
        }
        v25 = v136;
        if (v39 != v45)
          goto LABEL_45;
      }
      else
      {
        v45 = 0;
        v47 = 0xE000000000000000;
        if (v39)
          goto LABEL_45;
      }
      if (v41 == v47)
      {
        v48 = 0;
        goto LABEL_46;
      }
LABEL_45:
      v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v45, v47, 1);
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v34);
      if (((v142 ^ v48) & 1) != 0)
        break;
      ++v33;
      if (v25 == ++v32)
      {
        v15 = v25;
        goto LABEL_50;
      }
    }
    v15 = v32;
LABEL_50:
    v14 = v138;
LABEL_51:
    v10 = v134;
    v12 = v141;
    if ((v142 & 1) != 0)
    {
      if (v15 < v14)
        goto LABEL_172;
      if (v14 < v15)
      {
        v49 = (uint64_t *)(v131 + 8 * v15);
        v50 = v15;
        v51 = v14;
        v52 = (uint64_t *)(v141 + 8 * v14);
        do
        {
          if (v51 != --v50)
          {
            if (!v141)
              goto LABEL_177;
            v53 = *v52;
            *v52 = *v49;
            *v49 = v53;
          }
          ++v51;
          --v49;
          ++v52;
        }
        while (v51 < v50);
      }
    }
LABEL_59:
    if (v15 >= v25)
      goto LABEL_88;
    if (__OFSUB__(v15, v14))
      goto LABEL_169;
    if (v15 - v14 >= v133)
      goto LABEL_88;
    if (__OFADD__(v14, v133))
      goto LABEL_173;
    if (v14 + v133 >= v25)
      v54 = v25;
    else
      v54 = v14 + v133;
    if (v54 >= v14)
    {
      if (v15 == v54)
        goto LABEL_88;
      v135 = v10;
      v55 = v131 + 8 * v15;
      v137 = v54;
      while (2)
      {
        v143 = v15;
        v56 = *(void **)(v12 + 8 * v15);
        v57 = v14;
        v139 = v55;
        v58 = v55;
        while (2)
        {
          v59 = *(void **)v58;
          swift_unknownObjectRetain(v56);
          swift_unknownObjectRetain(v59);
          v60 = objc_msgSend(v56, "identity");
          if (v60
            && (v61 = v60,
                v62 = objc_msgSend(v60, "displayName"),
                v61,
                v62))
          {
            v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
            v65 = v64;

          }
          else
          {
            v63 = 0;
            v65 = 0xE000000000000000;
          }
          v66 = objc_msgSend(v59, "identity");
          if (!v66
            || (v67 = v66,
                v68 = objc_msgSend(v66, "displayName"),
                v67,
                !v68))
          {
            v69 = 0;
            v71 = 0xE000000000000000;
            if (!v63)
              goto LABEL_82;
            goto LABEL_83;
          }
          v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
          v71 = v70;

          if (v63 != v69)
            goto LABEL_83;
LABEL_82:
          if (v65 != v71)
          {
LABEL_83:
            v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v63, v65, v69, v71, 1);
            swift_unknownObjectRelease(v56);
            swift_unknownObjectRelease(v59);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v72 & 1) == 0)
              goto LABEL_70;
            v12 = v141;
            if (!v141)
              goto LABEL_175;
            v73 = *(void **)v58;
            v56 = *(void **)(v58 + 8);
            *(_QWORD *)v58 = v56;
            *(_QWORD *)(v58 + 8) = v73;
            v58 -= 8;
            if (v143 == ++v57)
              goto LABEL_71;
            continue;
          }
          break;
        }
        swift_unknownObjectRelease(v56);
        swift_unknownObjectRelease(v59);
        swift_bridgeObjectRelease_n(v65, 2);
LABEL_70:
        v12 = v141;
LABEL_71:
        v15 = v143 + 1;
        v14 = v138;
        v55 = v139 + 8;
        if (v143 + 1 != v137)
          continue;
        break;
      }
      v15 = v137;
      v10 = v135;
LABEL_88:
      if (v15 < v14)
        goto LABEL_164;
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        v10 = sub_D401E8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v75 = *((_QWORD *)v10 + 2);
      v74 = *((_QWORD *)v10 + 3);
      v13 = v75 + 1;
      v144 = v15;
      if (v75 >= v74 >> 1)
        v10 = sub_D401E8((char *)(v74 > 1), v75 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v13;
      v76 = v10 + 32;
      v77 = &v10[16 * v75 + 32];
      *(_QWORD *)v77 = v138;
      *((_QWORD *)v77 + 1) = v144;
      if (v75)
      {
        while (2)
        {
          v78 = v13 - 1;
          if (v13 >= 4)
          {
            v83 = &v76[16 * v13];
            v84 = *((_QWORD *)v83 - 8);
            v85 = *((_QWORD *)v83 - 7);
            v89 = __OFSUB__(v85, v84);
            v86 = v85 - v84;
            if (v89)
              goto LABEL_153;
            v88 = *((_QWORD *)v83 - 6);
            v87 = *((_QWORD *)v83 - 5);
            v89 = __OFSUB__(v87, v88);
            v81 = v87 - v88;
            v82 = v89;
            if (v89)
              goto LABEL_154;
            v90 = v13 - 2;
            v91 = &v76[16 * v13 - 32];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v89 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v89)
              goto LABEL_155;
            v89 = __OFADD__(v81, v94);
            v95 = v81 + v94;
            if (v89)
              goto LABEL_157;
            if (v95 >= v86)
            {
              v113 = &v76[16 * v78];
              v115 = *(_QWORD *)v113;
              v114 = *((_QWORD *)v113 + 1);
              v89 = __OFSUB__(v114, v115);
              v116 = v114 - v115;
              if (v89)
                goto LABEL_163;
              v106 = v81 < v116;
            }
            else
            {
LABEL_107:
              if ((v82 & 1) != 0)
                goto LABEL_156;
              v90 = v13 - 2;
              v96 = &v76[16 * v13 - 32];
              v98 = *(_QWORD *)v96;
              v97 = *((_QWORD *)v96 + 1);
              v99 = __OFSUB__(v97, v98);
              v100 = v97 - v98;
              v101 = v99;
              if (v99)
                goto LABEL_158;
              v102 = &v76[16 * v78];
              v104 = *(_QWORD *)v102;
              v103 = *((_QWORD *)v102 + 1);
              v89 = __OFSUB__(v103, v104);
              v105 = v103 - v104;
              if (v89)
                goto LABEL_160;
              if (__OFADD__(v100, v105))
                goto LABEL_162;
              if (v100 + v105 < v81)
                goto LABEL_119;
              v106 = v81 < v105;
            }
            if (v106)
              v78 = v90;
          }
          else
          {
            if (v13 == 3)
            {
              v80 = *((_QWORD *)v10 + 4);
              v79 = *((_QWORD *)v10 + 5);
              v89 = __OFSUB__(v79, v80);
              v81 = v79 - v80;
              v82 = v89;
              goto LABEL_107;
            }
            v107 = *((_QWORD *)v10 + 4);
            v108 = *((_QWORD *)v10 + 5);
            v89 = __OFSUB__(v108, v107);
            v100 = v108 - v107;
            v101 = v89;
LABEL_119:
            if ((v101 & 1) != 0)
              goto LABEL_159;
            v109 = &v76[16 * v78];
            v111 = *(_QWORD *)v109;
            v110 = *((_QWORD *)v109 + 1);
            v89 = __OFSUB__(v110, v111);
            v112 = v110 - v111;
            if (v89)
              goto LABEL_161;
            if (v112 < v100)
              goto LABEL_14;
          }
          v117 = v78 - 1;
          if (v78 - 1 >= v13)
          {
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
          if (!v12)
            goto LABEL_176;
          v118 = &v76[16 * v117];
          v119 = *(_QWORD *)v118;
          v120 = &v76[16 * v78];
          v121 = *((_QWORD *)v120 + 1);
          sub_D3FD00((void **)(v12 + 8 * *(_QWORD *)v118), (void **)(v12 + 8 * *(_QWORD *)v120), v12 + 8 * v121, v140);
          if (v1)
            goto LABEL_147;
          if (v121 < v119)
            goto LABEL_150;
          if (v78 > *((_QWORD *)v10 + 2))
            goto LABEL_151;
          *(_QWORD *)v118 = v119;
          *(_QWORD *)&v76[16 * v117 + 8] = v121;
          v122 = *((_QWORD *)v10 + 2);
          if (v78 >= v122)
            goto LABEL_152;
          v13 = v122 - 1;
          memmove(&v76[16 * v78], v120 + 16, 16 * (v122 - 1 - v78));
          *((_QWORD *)v10 + 2) = v122 - 1;
          if (v122 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v13 = 1;
LABEL_14:
      v3 = v136;
      v11 = v144;
      if (v144 >= v136)
        goto LABEL_136;
      continue;
    }
    break;
  }
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
}

uint64_t sub_D3FAF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v26 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v26 + 8 * v4);
    v7 = v23;
    v24 = v5;
    v25 = v4;
    while (1)
    {
      v8 = *(void **)v5;
      swift_unknownObjectRetain(v6);
      swift_unknownObjectRetain(v8);
      v9 = objc_msgSend(v6, "identity");
      if (v9
        && (v10 = v9, v11 = objc_msgSend(v9, "displayName"), v10, v11))
      {
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

      }
      else
      {
        v12 = 0;
        v14 = 0xE000000000000000;
      }
      v15 = objc_msgSend(v8, "identity");
      v16 = v15;
      if (v15)
      {
        v17 = objc_msgSend(v15, "displayName");

        if (v17)
        {
          v16 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
          v19 = v18;

        }
        else
        {
          v16 = 0;
          v19 = 0xE000000000000000;
        }
        v4 = v25;
        if ((void *)v12 != v16)
          goto LABEL_19;
      }
      else
      {
        v19 = 0xE000000000000000;
        if (v12)
          goto LABEL_19;
      }
      if (v14 == v19)
      {
        swift_unknownObjectRelease(v6);
        swift_unknownObjectRelease(v8);
        result = swift_bridgeObjectRelease_n(v14, 2);
LABEL_5:
        ++v4;
        v5 = v24 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
LABEL_19:
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v19, 1);
      swift_unknownObjectRelease(v6);
      swift_unknownObjectRelease(v8);
      swift_bridgeObjectRelease(v19);
      result = swift_bridgeObjectRelease(v14);
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v26)
      {
        __break(1u);
        return result;
      }
      v21 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v21;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_D3FD00(void **__dst, void **__src, unint64_t a3, void **a4)
{
  void **v4;
  void **v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  char **v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char **v23;
  id v24;
  void *v25;
  void **v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  void **v32;
  void **v33;
  void **v34;
  void *v35;
  void **v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  void **v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **v55;
  void **v57;
  void **v58;
  unint64_t v59;
  void **v60;
  void **v61;
  void **v62;
  void **v63;

  v4 = a4;
  v5 = __src;
  v6 = __dst;
  v7 = (char *)__src - (char *)__dst;
  v8 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v8 = (char *)__src - (char *)__dst;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 3;
  if (v9 >= v11 >> 3)
  {
    if (a4 != __src || &__src[v12] <= a4)
      memmove(a4, __src, 8 * v12);
    v13 = &v4[v12];
    if (v6 >= v5 || v10 < 8)
      goto LABEL_63;
    v34 = (void **)(a3 - 8);
    v55 = v4;
    v61 = v6;
    while (1)
    {
      v59 = (unint64_t)v13;
      v35 = *(v13 - 1);
      v57 = v13 - 1;
      v36 = v5 - 1;
      v37 = *(v5 - 1);
      swift_unknownObjectRetain(v35);
      swift_unknownObjectRetain(v37);
      v38 = objc_msgSend(v35, "identity");
      v63 = v5;
      if (v38
        && (v39 = v38, v40 = objc_msgSend(v38, "displayName"),
                       v39,
                       v40))
      {
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v43 = v42;

      }
      else
      {
        v41 = 0;
        v43 = 0xE000000000000000;
      }
      v44 = objc_msgSend(v37, "identity");
      v45 = v44;
      if (!v44)
        goto LABEL_47;
      v46 = objc_msgSend(v44, "displayName");

      if (!v46)
        break;
      v45 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v48 = v47;

      if ((void *)v41 != v45)
        goto LABEL_50;
LABEL_48:
      if (v43 == v48)
      {
        v49 = 0;
        v48 = v43;
        goto LABEL_51;
      }
LABEL_50:
      v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v45, v48, 1);
LABEL_51:
      v50 = v34 + 1;
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v43);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v37);
      if ((v49 & 1) != 0)
      {
        v4 = v55;
        v13 = (void **)v59;
        v51 = (unint64_t)v61;
        if (v50 == v63)
        {
          v5 = v36;
          if (v34 < v63)
            goto LABEL_61;
        }
        else
        {
          v5 = v36;
        }
      }
      else
      {
        v51 = (unint64_t)v61;
        v4 = v55;
        v5 = v63;
        if (v50 == (void **)v59)
        {
          v13 = v57;
          v36 = v57;
          if ((unint64_t)v34 < v59)
            goto LABEL_61;
        }
        else
        {
          v13 = v57;
          v36 = v57;
        }
      }
      *v34 = *v36;
LABEL_61:
      if ((unint64_t)v5 > v51)
      {
        --v34;
        if (v13 > v4)
          continue;
      }
      goto LABEL_63;
    }
    v45 = 0;
LABEL_47:
    v48 = 0xE000000000000000;
    if ((void *)v41 != v45)
      goto LABEL_50;
    goto LABEL_48;
  }
  if (a4 != __dst || &__dst[v9] <= a4)
    memmove(a4, __dst, 8 * v9);
  v13 = &v4[v9];
  if ((unint64_t)v5 < a3 && v7 >= 8)
  {
    v14 = &selRef__parent;
    v58 = &v4[v9];
    while (1)
    {
      v60 = v6;
      v62 = v5;
      v15 = *v5;
      v16 = *v4;
      swift_unknownObjectRetain(v15);
      swift_unknownObjectRetain(v16);
      v17 = objc_msgSend(v15, v14[466]);
      if (v17
        && (v18 = v17, v19 = objc_msgSend(v17, "displayName"),
                       v18,
                       v19))
      {
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v22 = v21;

      }
      else
      {
        v20 = 0;
        v22 = 0xE000000000000000;
      }
      v23 = v14;
      v24 = objc_msgSend(v16, v14[466]);
      if (v24)
      {
        v25 = v24;
        v26 = v4;
        v27 = objc_msgSend(v24, "displayName");

        if (v27)
        {
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
          v30 = v29;

          if (v20 != v28)
            goto LABEL_24;
          goto LABEL_22;
        }
      }
      else
      {
        v26 = v4;
      }
      v28 = 0;
      v30 = 0xE000000000000000;
      if (v20)
        goto LABEL_24;
LABEL_22:
      if (v22 == v30)
      {
        swift_unknownObjectRelease(v15);
        swift_unknownObjectRelease(v16);
        swift_bridgeObjectRelease_n(v22, 2);
LABEL_27:
        v32 = v26;
        v4 = v26 + 1;
        v33 = v60;
        v5 = v62;
        if (v60 == v26)
          goto LABEL_29;
LABEL_28:
        *v33 = *v32;
        goto LABEL_29;
      }
LABEL_24:
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v28, v30, 1);
      swift_unknownObjectRelease(v15);
      swift_unknownObjectRelease(v16);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v22);
      if ((v31 & 1) == 0)
        goto LABEL_27;
      v32 = v62;
      v5 = v62 + 1;
      v33 = v60;
      v4 = v26;
      if (v60 != v62)
        goto LABEL_28;
LABEL_29:
      v6 = v33 + 1;
      v13 = v58;
      if (v4 < v58)
      {
        v14 = v23;
        if ((unint64_t)v5 < a3)
          continue;
      }
      break;
    }
  }
  v5 = v6;
LABEL_63:
  v52 = (char *)v13 - (char *)v4;
  v53 = (char *)v13 - (char *)v4 + 7;
  if (v52 < 0)
    v52 = v53;
  if (v5 != v4 || v5 >= (void **)((char *)v4 + (v52 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v5, v4, 8 * (v52 >> 3));
  return 1;
}

char *sub_D401E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15030A0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_D402E0(uint64_t a1)
{
  return sub_D401E8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

BOOL _s9MusicCore24SharePlayTogetherSessionC11ParticipantV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BOOL8 result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for SocialProfile(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_15030F8);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - v18;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v20 == v21
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)a1, v20, *(_QWORD *)a2, v21, 0),
        result = 0,
        (v22 & 1) != 0))
  {
    v24 = *(_QWORD *)(a1 + 24);
    v25 = *(_QWORD *)(a2 + 24);
    if (v24)
    {
      if (!v25)
        return 0;
      v26 = *(_QWORD *)(a1 + 16);
      v27 = *(_QWORD *)(a2 + 16);
      if (v26 != v27 || v24 != v25)
      {
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v24, v27, v25, 0);
        result = 0;
        if ((v28 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)
      || *(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
    {
      return 0;
    }
    v35 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    sub_5C238(a1 + *(int *)(v35 + 32), (uint64_t)v19, (uint64_t *)&unk_1502E88);
    sub_5C238(a2 + *(int *)(v35 + 32), (uint64_t)v16, (uint64_t *)&unk_1502E88);
    v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_5C238((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1502E88);
    sub_5C238((uint64_t)v16, v29, (uint64_t *)&unk_1502E88);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v30((uint64_t)v10, 1, v4) == 1)
    {
      sub_56024((uint64_t)v16, (uint64_t *)&unk_1502E88);
      sub_56024((uint64_t)v19, (uint64_t *)&unk_1502E88);
      if (v30(v29, 1, v4) == 1)
      {
        sub_56024((uint64_t)v10, (uint64_t *)&unk_1502E88);
        return 1;
      }
      goto LABEL_18;
    }
    sub_5C238((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1502E88);
    if (v30(v29, 1, v4) == 1)
    {
      sub_56024((uint64_t)v16, (uint64_t *)&unk_1502E88);
      sub_56024((uint64_t)v19, (uint64_t *)&unk_1502E88);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_18:
      sub_56024((uint64_t)v10, &qword_15030F8);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v29, v4);
    v31 = sub_4DD24(&qword_1503100, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v32 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v31);
    v33 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33(v7, v4);
    sub_56024((uint64_t)v16, (uint64_t *)&unk_1502E88);
    sub_56024((uint64_t)v19, (uint64_t *)&unk_1502E88);
    v33(v13, v4);
    sub_56024((uint64_t)v10, (uint64_t *)&unk_1502E88);
    return (v32 & 1) != 0;
  }
  return result;
}

size_t sub_D40690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v4 = v3;
  v19 = a2;
  v20 = a3;
  v6 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  v11 = _swiftEmptyArrayStorage;
  if (!v10)
    return (size_t)v11;
  v21 = _swiftEmptyArrayStorage;
  result = sub_C0592C(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v18[1] = v4;
    v13 = 0;
    v11 = v21;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      }
      else
      {
        v14 = *(void **)(a1 + 8 * v13 + 32);
        swift_unknownObjectRetain(v14);
      }
      sub_D38D00(v14, v19, v20, (uint64_t)v9);
      swift_unknownObjectRelease(v14);
      v21 = v11;
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_C0592C(v15 > 1, v16 + 1, 1);
        v11 = v21;
      }
      ++v13;
      v11[2] = v16 + 1;
      sub_5C04C((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, type metadata accessor for SharePlayTogetherSession.Participant);
    }
    while (v10 != v13);
    return (size_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t block_copy_helper_311(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_311(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_D4085C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for SharePlayTogetherSession.Participant(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1502F70, (uint64_t)&nominal type descriptor for SharePlayTogetherSession.Participant);
}

uint64_t sub_D40894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SharePlayTogetherSession(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1502EE8, (uint64_t)&nominal type descriptor for SharePlayTogetherSession);
}

uint64_t sub_D408F0()
{
  return objectdestroy_43Tm((void (*)(_QWORD, __n128))&_swift_unknownObjectRelease);
}

uint64_t sub_D408FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1502E9C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_D3A908(a1, v4, v5, v7, v6);
}

uint64_t sub_D40974()
{
  return objectdestroy_43Tm((void (*)(_QWORD, __n128))&_swift_errorRelease);
}

uint64_t sub_D40980(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1502EAC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_D3AE04(a1, v4, v5, v7, v6);
}

double sub_D409F8(const char *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  double result;
  uint64_t v22;

  v7 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA020 != -1)
    swift_once(&qword_14FA020, sub_D3B530);
  v11 = type metadata accessor for Logger(0);
  v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.sharePlayTogether);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_0, v13, v14, a1, v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = v7;
  v19 = static MainActor.shared.getter(v18);
  v20 = (_QWORD *)swift_allocObject(a2, 40, 7);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v17;
  sub_C51ED8((uint64_t)v10, a3, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D40B90()
{
  return type metadata accessor for SharePlayTogetherSession(0);
}

void sub_D40B98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char *v17;
  char *v18;
  char *v19;
  void *v20;
  const char *v21;

  v10[0] = "\b";
  v10[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[2] = &unk_10A5318;
  v10[3] = &unk_10A5330;
  v10[4] = (char *)&value witness table for Builtin.Int8 + 64;
  sub_1ECFF0(319, &qword_1502EF8, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v10[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_AEEF4(319, (unint64_t *)&unk_1502F00, &qword_1502DE8);
    if (v5 <= 0x3F)
    {
      v10[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_1ECFF0(319, (unint64_t *)&unk_1503390, (uint64_t)&type metadata for Int);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = v11;
        sub_AEEF4(319, &qword_1502F10, &qword_1502E28);
        if (v9 <= 0x3F)
        {
          v13 = *(_QWORD *)(v8 - 8) + 64;
          v14 = &unk_10A5348;
          v15 = &unk_10A5318;
          v16 = &unk_10A5318;
          v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v18 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v19 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v20 = &unk_10A5318;
          v21 = "\b";
          swift_updateClassMetadata2(a1, 256, 18, v10, a1 + 80);
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v10 = type metadata accessor for SocialProfile(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for SocialProfile(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for SocialProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for SocialProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for SocialProfile(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for SocialProfile(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D412D4);
}

uint64_t sub_D412D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D41360);
}

uint64_t sub_D41360(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_D413D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10A5330;
  v4[1] = &unk_10A5370;
  v4[2] = &unk_10A5318;
  v4[3] = &unk_10A5318;
  sub_D41460(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_D41460(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1502F80)
  {
    v2 = type metadata accessor for SocialProfile(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1502F80);
  }
}

uint64_t sub_D414B4()
{
  return objectdestroy_43Tm((void (*)(_QWORD, __n128))&_swift_errorRelease);
}

uint64_t sub_D414C0()
{
  return objectdestroy_43Tm((void (*)(_QWORD, __n128))&_swift_unknownObjectRelease);
}

uint64_t objectdestroy_43Tm(void (*a1)(_QWORD, __n128))
{
  uint64_t v1;
  __n128 v3;

  v3 = swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 32), v3);

  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_D4150C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_D41530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1503040;
  if (!qword_1503040)
  {
    v1 = sub_4E684(255, &qword_1503038, MRUserIdentity_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1503040);
  }
  return result;
}

uint64_t sub_D41588@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = dispatch thunk of SocialProfileFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_D415CC()
{
  return objectdestroy_67Tm(&qword_1503030);
}

uint64_t sub_D415D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503030) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_150305C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_50F8C;
  return sub_D39260(a1, v6, v7, v8, v9);
}

uint64_t sub_D41680()
{
  return objectdestroy_67Tm(&qword_1503070);
}

uint64_t objectdestroy_67Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);

  return swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_D41718(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503070) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_150307C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_C3150;
  return sub_D39774(a1, v6, v7, v8, v9);
}

unint64_t sub_D417C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1503088;
  if (!qword_1503088)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1503070);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1503088);
  }
  return result;
}

uint64_t sub_D4180C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_D41848()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_D4186C(uint64_t a1)
{
  uint64_t v1;

  sub_D374DC(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_D4187C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_15030BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_50F8C;
  return sub_D3B474(a1, v4, v5, v6);
}

uint64_t sub_D418EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_15030CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_D3B304(a1, v4, v5, v6);
}

uint64_t sub_D4195C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_15030DC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_D3B304(a1, v4, v5, v6);
}

void sub_D419F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for AnyCancellable(0);
    v5 = sub_4DD24(&qword_14FED18, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_55D68(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    swift_retain(v20);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v20);
      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        v19 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_D41C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t j;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a4;
  v45 = a3;
  v46 = a2;
  v5 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v41 = (char *)&v37 - v13;
  v14 = *(_QWORD *)(a1 + 56);
  v39 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v40 = (unint64_t)(v15 + 63) >> 6;
  v44 = a1;
  result = swift_bridgeObjectRetain();
  j = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (j << 6); ; i = __clz(__rbit64(v23)) + (j << 6))
  {
    v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v41, *(_QWORD *)(v44 + 48) + *(_QWORD *)(v9 + 72) * i, v8);
    v26 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
    v27 = v26(v12, v25, v8);
    v28 = Participant.id.getter(v27);
    v29 = UUID.uuidString.getter(v28);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
    if (v29 == v46 && v31 == v45)
    {
      v33 = v45;
      swift_release(v44);
      swift_bridgeObjectRelease(v33);
LABEL_27:
      v35 = v38;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v26)(v38, v12, v8, v34);
      v36 = 0;
LABEL_29:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v35, v36, 1, v8);
      return swift_bridgeObjectRelease(v45);
    }
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v46, v45, 0);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) != 0)
    {
      v34 = swift_release(v44);
      goto LABEL_27;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v22 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v22 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * v22);
    ++j;
    if (v23)
      goto LABEL_19;
    j = v22 + 1;
    if (v22 + 1 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    j = v22 + 2;
    if (v22 + 2 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    j = v22 + 3;
    if (v22 + 3 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    v24 = v22 + 4;
    if (v24 >= v40)
    {
LABEL_28:
      swift_release(v44);
      v36 = 1;
      v35 = v38;
      goto LABEL_29;
    }
    v23 = *(_QWORD *)(v39 + 8 * v24);
    for (j = v24; !v23; ++v24)
    {
      j = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_31;
      if (j >= v40)
        goto LABEL_28;
      v23 = *(_QWORD *)(v39 + 8 * j);
    }
LABEL_19:
    v17 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t GroupActivitiesManager.initiateSession(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v2[7] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v7);
  v2[9] = swift_task_alloc(v7);
  v8 = type metadata accessor for GroupActivitiesManager.PrepareResult(0);
  v2[10] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v9);
  v2[12] = swift_task_alloc(v9);
  v2[13] = swift_task_alloc(v9);
  v2[14] = swift_task_alloc(v9);
  v10 = swift_task_alloc(v9);
  v2[15] = v10;
  v2[16] = type metadata accessor for MainActor(0);
  v2[17] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_150318C);
  v2[18] = v12;
  *v12 = v2;
  v12[1] = sub_D42110;
  return sub_D4B39C(v10);
}

uint64_t sub_D42110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_D42180, v2, v3);
}

uint64_t sub_D42180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;

  swift_release(*(_QWORD *)(v0 + 136));
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v3, (uint64_t)static Logger.groupActivities);
  v4 = sub_5BDB8(v2, v1, type metadata accessor for GroupActivitiesManager.PrepareResult);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 112);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v48 = v12;
    *(_DWORD *)v11 = 136446210;
    sub_5BDB8(v8, v9, type metadata accessor for GroupActivitiesManager.PrepareResult);
    v13 = (char *)String.init<A>(describing:)(v9, v10);
    v15 = v14;
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v13, v14, &v48);
    swift_bridgeObjectRelease(v15);
    sub_5C0DC(v8, type metadata accessor for GroupActivitiesManager.PrepareResult);
    _os_log_impl(&dword_0, v5, v6, "prepareForActivation result=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    sub_5C0DC(*(_QWORD *)(v0 + 112), type metadata accessor for GroupActivitiesManager.PrepareResult);
  }

  v16 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_QWORD *)(v0 + 48);
  sub_5BDB8(*(_QWORD *)(v0 + 120), v16, type metadata accessor for GroupActivitiesManager.PrepareResult);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 4, v17))
  {
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 40);
    sub_5C0DC(*(_QWORD *)(v0 + 96), type metadata accessor for GroupActivitiesManager.PrepareResult);
    sub_5BDB8(v20, v21, type metadata accessor for GroupActivitiesManager.PrepareResult);
    if ((v19(v21, 4, v22) | 2) == 3)
    {
      v23 = 0;
    }
    else
    {
      sub_5C0DC(*(_QWORD *)(v0 + 88), type metadata accessor for GroupActivitiesManager.PrepareResult);
      v23 = 1;
    }
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 64);
    v24 = *(_QWORD *)(v0 + 72);
    v26 = *(_QWORD *)(v0 + 48);
    v47 = *(_QWORD *)(v0 + 56);
    v28 = *(_QWORD *)(v0 + 24);
    v27 = *(_QWORD *)(v0 + 32);
    v29 = *(void **)(v0 + 16);
    sub_5C04C(*(_QWORD *)(v0 + 96), v24, type metadata accessor for GroupActivitiesManager.Activity);
    sub_D4BB64();
    v30 = type metadata accessor for TaskPriority(0);
    v23 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v27, 1, 1, v30);
    sub_5BDB8(v24, v25, type metadata accessor for GroupActivitiesManager.Activity);
    v31 = v29;
    swift_retain(v28);
    v33 = static MainActor.shared.getter(v32);
    v34 = *(unsigned __int8 *)(v26 + 80);
    v35 = (v34 + 48) & ~v34;
    v36 = (_QWORD *)swift_allocObject(&unk_13BC030, v35 + v47, v34 | 7);
    v36[2] = v33;
    v36[3] = &protocol witness table for MainActor;
    v36[4] = v29;
    v36[5] = v28;
    sub_5C04C(v25, (uint64_t)v36 + v35, type metadata accessor for GroupActivitiesManager.Activity);
    v37 = sub_C51ED8(v27, (uint64_t)&unk_1503198, (uint64_t)v36);
    swift_release(v37);
    sub_5C0DC(v24, type metadata accessor for GroupActivitiesManager.Activity);
  }
  v39 = *(_QWORD *)(v0 + 112);
  v38 = *(_QWORD *)(v0 + 120);
  v41 = *(_QWORD *)(v0 + 96);
  v40 = *(_QWORD *)(v0 + 104);
  v42 = *(_QWORD *)(v0 + 88);
  v44 = *(_QWORD *)(v0 + 64);
  v43 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 32);
  sub_5C0DC(v38, type metadata accessor for GroupActivitiesManager.PrepareResult);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t type metadata accessor for GroupActivitiesManager.Activity(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1503528, (uint64_t)&nominal type descriptor for GroupActivitiesManager.Activity);
}

uint64_t type metadata accessor for GroupActivitiesManager.PrepareResult(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1503890, (uint64_t)&nominal type descriptor for GroupActivitiesManager.PrepareResult);
}

uint64_t GroupActivitiesManager.leave(performLeaveCommand:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 88) = v1;
  *(_BYTE *)(v2 + 176) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 96) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 104) = v5;
  *(_QWORD *)(v2 + 112) = v6;
  return swift_task_switch(sub_D425DC, v5, v6);
}

uint64_t sub_D425DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 176);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl(&dword_0, v3, v4, "üëãüèª Leaving session. Will perform leaveCommand=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(unsigned __int8 *)(v0 + 176);

  if (v7 == 1)
  {
    v8 = *(_QWORD **)(v0 + 88);
    v9 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
    *(_QWORD *)(v0 + 128) = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
    *((_BYTE *)v8 + v9) = 1;
    swift_beginAccess(v8 + 2, v0 + 56, 0, 0);
    v10 = v8[5];
    v11 = v8[6];
    __swift_project_boxed_opaque_existential_1(v8 + 2, v10);
    v12 = *(_QWORD *)(v10 - 8);
    v13 = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_QWORD *)(v0 + 136) = v13;
    (*(void (**)(void))(v12 + 16))();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 56))(v10, v11);
    *(_QWORD *)(v0 + 144) = v14;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v10);
    if (v14)
    {
      *(_QWORD *)(v0 + 40) = &type metadata for Player.LeaveSessionCommand;
      *(_QWORD *)(v0 + 48) = &protocol witness table for Player.LeaveSessionCommand;
      v15 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
      *(_QWORD *)(v0 + 152) = v15;
      v16 = (_QWORD *)swift_task_alloc(dword_15007EC);
      *(_QWORD *)(v0 + 160) = v16;
      *v16 = v0;
      v16[1] = sub_D4295C;
      return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, (uint64_t)v15, 0);
    }
    swift_release(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v13);
    *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
  }
  v18 = *(_QWORD *)(v0 + 88);
  v19 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v20)
  {
    swift_retain(*(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v20);
    v21 = *(_QWORD *)(v18 + v19);
  }
  else
  {
    v21 = 0;
  }
  v22 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v18 + v19) = 0;
  swift_release(v21);
  sub_D4DEB8();
  v24 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v25 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v25)
  {
    v26 = swift_retain(*(_QWORD *)(v22 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "Leave completed, pending session found", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    v30 = *(_QWORD *)(v18 + v19);
    *(_QWORD *)(v18 + v19) = v25;
    swift_retain_n(v25, 2);
    swift_release(v30);
    sub_D4DEB8();
    swift_release_n(v25, 2);
    v31 = *(_QWORD *)(v22 + v24);
    *(_QWORD *)(v22 + v24) = 0;
    v23 = swift_release(v31);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v23);
}

uint64_t sub_D4295C(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  void *v10;
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(void **)(v4 + 144);

    v7 = *(_QWORD *)(v4 + 104);
    v8 = *(_QWORD *)(v4 + 112);
    v9 = sub_D42B74;
  }
  else
  {
    v10 = *(void **)(v4 + 144);
    v11 = *(_QWORD *)(v4 + 136);

    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v4 + 16));
    swift_task_dealloc(v11);
    v7 = *(_QWORD *)(v4 + 104);
    v8 = *(_QWORD *)(v4 + 112);
    v9 = sub_D42A08;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_D42A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 96));
  *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v3);
    v4 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v4);
  sub_D4DEB8();
  v7 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v8)
  {
    v9 = swift_retain(*(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "Leave completed, pending session found", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v8;
    swift_retain_n(v8, 2);
    swift_release(v13);
    sub_D4DEB8();
    swift_release_n(v8, 2);
    v14 = *(_QWORD *)(v5 + v7);
    *(_QWORD *)(v5 + v7) = 0;
    v6 = swift_release(v14);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_D42B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 96));
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = ((uint64_t (*)(void))static os_log_type_t.default.getter)();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v29 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 80) = v6;
    swift_errorRetain(v6);
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v10 = (char *)String.init<A>(describing:)(v0 + 80, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 4) = sub_BA95EC(v10, v11, &v29);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v4, v5, "Failed to perform leaveCommand with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  v14 = *(_QWORD *)(v0 + 88);
  v15 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v16)
  {
    swift_retain(*(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v16);
    v17 = *(_QWORD *)(v14 + v15);
  }
  else
  {
    v17 = 0;
  }
  v18 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v14 + v15) = 0;
  swift_release(v17);
  sub_D4DEB8();
  v20 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v21)
  {
    v22 = swift_retain(*(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "Leave completed, pending session found", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = *(_QWORD *)(v14 + v15);
    *(_QWORD *)(v14 + v15) = v21;
    swift_retain_n(v21, 2);
    swift_release(v26);
    sub_D4DEB8();
    swift_release_n(v21, 2);
    v27 = *(_QWORD *)(v18 + v20);
    *(_QWORD *)(v18 + v20) = 0;
    v19 = swift_release(v27);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v19);
}

void GroupActivitiesManager.postEvent(_:participantID:)(uint64_t a1, char *a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  char *v47;
  void *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  Swift::String v58;
  char *v59;
  char *v60;
  Swift::Bool v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  int v79;
  id v80;
  uint64_t v81;
  char *v82;
  char *v83;
  id v84;
  char *v85;
  __n128 v86;
  uint64_t v87;
  id v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int8x16_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  _QWORD *v123;
  uint64_t v124;
  id v125;
  id v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(char *, char *, uint64_t);
  char *v148;
  uint64_t v149;
  NSObject *v150;
  char *v151;
  os_log_type_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  __n128 v159;
  void (*v160)(char *, uint64_t, __n128);
  __n128 v161;
  __n128 v162;
  void (*v163)(char *, uint64_t, __n128);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  id v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD v198[7];
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  _BYTE v206[32];
  uint64_t v207[4];
  int *v208;
  uint64_t v209;
  int8x16_t v210;
  int8x16_t v211;
  char v212;
  uint64_t v213[4];
  uint64_t v214[2];
  id v215[2];
  uint64_t v216[6];
  char v217;
  _BYTE v218[40];

  v4 = v3;
  v189 = a3;
  v192 = a2;
  v194 = a1;
  sub_CF6C84(a1, (uint64_t)v198);
  v177 = (id)v198[0];
  v174 = v198[2];
  v175 = v198[1];
  v173 = v198[3];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v6 = __chkstk_darwin(v5);
  v178 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupSessionEvent(0, v6);
  v179 = *(_QWORD *)(v8 - 8);
  v180 = v8;
  __chkstk_darwin(v8);
  v176 = (char *)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v181 = (char *)&v164 - v11;
  v13 = __chkstk_darwin(v12);
  v183 = (char *)&v164 - v14;
  v15 = type metadata accessor for GroupSessionEvent.Action.QueueChange.Item(0, v13);
  v167 = *(_QWORD *)(v15 - 8);
  v168 = v15;
  v16 = __chkstk_darwin(v15);
  v166 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for GroupSessionEvent.Action.QueueChange(0, v16);
  v170 = *(_QWORD *)(v18 - 8);
  v171 = v18;
  v19 = __chkstk_darwin(v18);
  v169 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for GroupSessionEvent.Action(0, v19);
  v186 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v182 = (char *)&v164 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v187 = (char *)&v164 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_15031C0);
  __chkstk_darwin(v24);
  v188 = (uint64_t)&v164 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for Participant(0);
  v191 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v185 = (char *)&v164 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v190 = (char *)&v164 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_15031C8);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v164 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v164 - v34;
  v172 = v3 + 7;
  swift_beginAccess(v3 + 7, &v197, 1, 0);
  v36 = v3[7];
  v37 = v3[8];
  v38 = v3[9];
  v39 = v3[10];
  *(_OWORD *)(v3 + 7) = xmmword_1060DF0;
  v3[9] = 0;
  v3[10] = 0;
  sub_5B8898(v36, v37, v38, v39);
  v40 = v3 + 2;
  swift_beginAccess(v40, &v196, 0, 0);
  v41 = v4[5];
  v42 = v4[6];
  v43 = __swift_project_boxed_opaque_existential_1(v40, v41);
  v44 = *(_QWORD *)(v41 - 8);
  v45 = __chkstk_darwin(v43);
  v47 = (char *)&v164 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v44 + 16))(v47, v45);
  v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 64))(v41, v42);
  v49 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50 = v194;
  v49(v47, v41);
  v51 = objc_msgSend(v48, "applicationState");

  sub_CF6C84(v50, (uint64_t)v216);
  if (v217 == 4)
  {
    sub_5C090((uint64_t)v216, (uint64_t)v218, &qword_15031E8);
    if (v51)
      return;
  }
  else if (!v217)
  {
    sub_D55B04(v216, (uint64_t)v218);
    if (v51)
      return;
  }
  v52 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (!v52)
    return;
  swift_retain();
  GroupSession.state.getter(v53);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v32, enum case for GroupSession.State.joined<A>(_:), v29);
  v54 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v55 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  v165 = v54;
  LOBYTE(v54) = static GroupSession.State.== infix(_:_:)(v35, v32, v54, v55);
  v56 = *(void (**)(char *, uint64_t))(v30 + 8);
  v56(v32, v29);
  v56(v35, v29);
  if ((v54 & 1) == 0)
    goto LABEL_15;
  v57 = v52;
  v58._countAndFlagsBits = 0x616C506572616853;
  v58._object = (void *)0xEC0000003D444979;
  v59 = v192;
  v60 = v189;
  v61 = String.hasPrefix(_:)(v58);
  v62 = swift_bridgeObjectRetain();
  v64 = (uint64_t)v60;
  if (v61)
  {
    v65 = sub_82591C(0xC0007uLL, (uint64_t)v192, (unint64_t)v60);
    swift_bridgeObjectRelease();
    v59 = (char *)static String._fromSubstring(_:)(v65);
    v64 = v66;
    v63 = swift_bridgeObjectRelease();
  }
  v67 = GroupSession.activeParticipants.getter(v62, v63);
  swift_bridgeObjectRetain();
  v68 = v188;
  sub_D41C98(v67, (uint64_t)v59, v64, v188);
  swift_bridgeObjectRelease();
  v69 = swift_bridgeObjectRelease();
  v70 = v191;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v191 + 48))(v68, 1, v193, v69) == 1)
  {
    sub_56024(v68, &qword_15031C0);
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v71 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v71, (uint64_t)static Logger.groupActivities);
    v72 = swift_bridgeObjectRetain_n(v60, 2);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.error.getter(v73);
    if (os_log_type_enabled(v73, v74))
    {
      v75 = swift_slowAlloc(12, -1);
      v76 = swift_slowAlloc(32, -1);
      v208 = (int *)v76;
      *(_DWORD *)v75 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v75 + 4) = sub_BA95EC(v192, v60, (uint64_t *)&v208);
      swift_bridgeObjectRelease_n(v60, 3);
      _os_log_impl(&dword_0, v73, v74, "No active participant with identifier=%{public}s", (uint8_t *)v75, 0xCu);
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v75, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v60, 2);
    }
LABEL_15:
    swift_release();
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v190, v68, v193);
  v77 = sub_CF6C84(v50, (uint64_t)&v208);
  v78 = v208;
  switch(v212)
  {
    case 0:
      v79 = v209;
      v80 = v177;
      if (v79 == 1)
      {
        v81 = SharedListening.Event.Content.title.getter(v78, 1);
        v82 = v166;
        static GroupSessionEvent.Action.QueueChange.Item.container(_:)(v81);
      }
      else
      {
        v111 = SharedListening.Event.Content.title.getter(v78, 0);
        v82 = v166;
        static GroupSessionEvent.Action.QueueChange.Item.song(_:)(v111);
      }
      v112 = swift_bridgeObjectRelease();
      v113 = v169;
      static GroupSessionEvent.Action.QueueChange.added(_:)(v82, v112);
      (*(void (**)(char *, uint64_t))(v167 + 8))(v82, v168);
      v83 = v187;
      static GroupSessionEvent.Action.updatedQueue(_:)(v113);
      sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
      (*(void (**)(char *, uint64_t))(v170 + 8))(v113, v171);
      goto LABEL_44;
    case 1:
      v83 = v187;
      static GroupSessionEvent.Action.react(with:)(v210.i64[0], v210.i64[1]);
      goto LABEL_44;
    case 2:
      v83 = v187;
      static GroupSessionEvent.Action.skip(item:)(v208, v209);
      goto LABEL_44;
    case 3:
      sub_D55B04((uint64_t *)&v208, (uint64_t)v214);
      v84 = v177;
      static GroupSessionEvent.Action.start.getter();
      v85 = (char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
      v86 = swift_beginAccess((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, v213, 0, 0);
      if (!(*(unsigned int (**)(char *, uint64_t, __n128))(*(_QWORD *)(v165 - 8) + 48))(v85, 1, v86))
      {
        v124 = *((_QWORD *)v85 + 7);
        if (v124)
        {
          v125 = objc_msgSend(*(id *)(v124 + 16), "identifiers");
          sub_D55B04(v214, (uint64_t)v215);
          v126 = objc_msgSend(v215[0], "identifiers");
          v127 = objc_msgSend(v125, "intersectsSet:", v126);

          if (v127)
          {
            sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
            v128 = v184;
            v83 = v187;
            goto LABEL_45;
          }
        }
      }
      if (qword_14FA068 != -1)
        swift_once(&qword_14FA068, sub_D54AE0);
      v87 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v87, (uint64_t)static Logger.groupActivities);
      v88 = v84;
      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc(12, -1);
        v188 = swift_slowAlloc(32, -1);
        v207[0] = v188;
        *(_DWORD *)v91 = 136446210;
        sub_D55B04(v214, (uint64_t)&v199);
        v92 = (void *)v199;
        v93 = v88;
        v94 = objc_msgSend(v92, "description");
        v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
        v97 = v96;

        v98 = v194;
        sub_D55AC8(v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        v99 = (char *)v95;
        v60 = v189;
        *(_QWORD *)(v91 + 4) = sub_BA95EC(v99, v97, v207);
        v70 = v191;
        swift_bridgeObjectRelease();
        sub_D55AC8(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        sub_D55AC8(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        _os_log_impl(&dword_0, v89, v90, "Dispatching event for=%{public}s", (uint8_t *)v91, 0xCu);
        v100 = v188;
        swift_arrayDestroy(v188, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v100, -1, -1);
        swift_slowDealloc(v91, -1, -1);
      }
      else
      {
        v98 = v194;
        sub_D55AC8(v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        sub_D55AC8(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
      }

      v114 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
      v122 = (void *)static OS_dispatch_queue.main.getter(v114, v115, v116, v117, v118, v119, v120, v121);
      v123 = (_QWORD *)swift_allocObject(&unk_13BC058, 96, 7);
      v123[2] = v4;
      sub_CF6C84(v98, (uint64_t)(v123 + 3));
      v123[10] = v192;
      v123[11] = v60;
      swift_bridgeObjectRetain();
      sub_D55AC8(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D55A38);
      swift_retain();
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_D55B80, (uint64_t)v123, 1.0);
      swift_release();

      swift_release();
      sub_D55AC8(v98, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
      (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v184);
      goto LABEL_66;
    case 4:
      v101 = sub_5C090((uint64_t)&v208, (uint64_t)v213, &qword_15031E8);
      v102 = v50;
      v103 = v187;
      static GroupSessionEvent.Action.updatedQueue.getter(v101);
      v104 = v4[7];
      v105 = v4[8];
      v107 = v4[9];
      v106 = v4[10];
      sub_5C090((uint64_t)v213, (uint64_t)v172, &qword_15031E8);
      sub_B37B30((uint64_t)v177, v175, v174, v173);
      v108 = v106;
      v83 = v103;
      v50 = v102;
      sub_5B8898(v104, v105, v107, v108);
      goto LABEL_44;
    case 5:
      v109 = vorrq_s8(v210, v211);
      v110 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v109.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL)) | v209;
      if (v208 == (int *)((char *)&dword_0 + 1) && !v110)
      {
        v83 = v187;
        static GroupSessionEvent.Action.seek.getter(v77);
LABEL_44:
        v128 = v184;
LABEL_45:
        v130 = v178;
        v129 = v179;
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v185, v190, v193);
        v131 = v182;
        (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v182, v83, v128);
        sub_CF6C84(v50, (uint64_t)&v199);
        if (v205 == 4)
        {
          sub_5C090((uint64_t)&v199, (uint64_t)v206, &qword_15031E8);
          v131 = v182;
          sub_5C090((uint64_t)v206, (uint64_t)v207, &qword_15031E8);
          v132 = v180;
          v133 = v183;
          if (v207[1] != 1)
          {
            v136 = 0xD000000000000026;
            v135 = 0x8000000001109350;
            goto LABEL_58;
          }
        }
        else
        {
          v132 = v180;
          v133 = v183;
          if (v205 == 5
            && (!(v203 | v204 | v199 | v202 | v201 | v200) || v199 == 2 && !(v203 | v204 | v202 | v201 | v200)))
          {
            v134 = type metadata accessor for URL(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v130, 1, 1, v134);
LABEL_59:
            GroupSessionEvent.init(originator:action:url:)(v185, v131, v130);
            v194 = v57;
            GroupSession.showNotice(_:)(v133);
            if (qword_14FA068 != -1)
              swift_once(&qword_14FA068, sub_D54AE0);
            v145 = type metadata accessor for Logger(0);
            __swift_project_value_buffer(v145, (uint64_t)static Logger.groupActivities);
            v146 = v129;
            v147 = *(uint64_t (**)(char *, char *, uint64_t))(v129 + 16);
            v148 = v181;
            v149 = v147(v181, v133, v132);
            v150 = Logger.logObject.getter(v149);
            v151 = v133;
            v152 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v150, v152))
            {
              v153 = swift_slowAlloc(12, -1);
              v154 = v132;
              v155 = swift_slowAlloc(32, -1);
              v195 = v155;
              *(_DWORD *)v153 = 136446210;
              v156 = v176;
              v147(v176, v148, v154);
              v157 = (char *)String.init<A>(describing:)(v156, v154);
              *(_QWORD *)(v153 + 4) = sub_BA95EC(v157, v158, &v195);
              v159 = swift_bridgeObjectRelease();
              v160 = *(void (**)(char *, uint64_t, __n128))(v146 + 8);
              v160(v148, v154, v159);
              _os_log_impl(&dword_0, v150, v152, "Posting event=%{public}s", (uint8_t *)v153, 0xCu);
              swift_arrayDestroy(v155, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v155, -1, -1);
              swift_slowDealloc(v153, -1, -1);

              v161 = swift_release();
              v160(v183, v154, v161);
              (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v184);
            }
            else
            {

              v162 = swift_release();
              v163 = *(void (**)(char *, uint64_t, __n128))(v146 + 8);
              v163(v148, v132, v162);
              ((void (*)(char *, uint64_t))v163)(v151, v132);
              (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v128);
            }
            (*(void (**)(char *, uint64_t))(v191 + 8))(v190, v193);
            return;
          }
        }
        v135 = 0x8000000001109330;
        v136 = 0xD000000000000017;
LABEL_58:
        URL.init(string:)(v136, v135);
        goto LABEL_59;
      }
      if (v208 == (int *)((char *)&dword_0 + 3) && !v110)
      {
        v83 = v187;
        static GroupSessionEvent.Action.pause.getter(v77);
        goto LABEL_44;
      }
      if (v208 == &dword_4 && !v110)
      {
        v83 = v187;
        static GroupSessionEvent.Action.play.getter(v77);
        goto LABEL_44;
      }
LABEL_53:
      if (qword_14FA068 != -1)
        swift_once(&qword_14FA068, sub_D54AE0);
      v137 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v137, (uint64_t)static Logger.groupActivities);
      sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D55A38);
      v138 = sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D55A38);
      v139 = Logger.logObject.getter(v138);
      v140 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v139, v140))
      {
        v141 = swift_slowAlloc(12, -1);
        v142 = swift_slowAlloc(32, -1);
        v213[0] = v142;
        *(_DWORD *)v141 = 136446210;
        sub_CF6C84(v50, (uint64_t)&v199);
        sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D55A38);
        v143 = (char *)String.init<A>(describing:)(&v199, &type metadata for SharedListening.Event);
        *(_QWORD *)(v141 + 4) = sub_BA95EC(v143, v144, v213);
        swift_bridgeObjectRelease();
        sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        _os_log_impl(&dword_0, v139, v140, "Event case not handle for event=%{public}s", (uint8_t *)v141, 0xCu);
        swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v142, -1, -1);
        swift_slowDealloc(v141, -1, -1);

        swift_release();
      }
      else
      {

        swift_release();
        sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
        sub_D55AC8(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_CF6D0C);
      }
LABEL_66:
      (*(void (**)(char *, uint64_t))(v70 + 8))(v190, v193);
      break;
    default:
      goto LABEL_53;
  }
}

int64x2_t GroupActivitiesManager.Activity.Metadata.init()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t result;

  v2 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  v3 = a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)(a1 + *(int *)(v2 + 32)) = result;
  return result;
}

uint64_t GroupActivitiesManager.Activity.Metadata.URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return sub_5C238(v1 + *(int *)(v3 + 28), a1, &qword_14FAC20);
}

uint64_t GroupActivitiesManager.Activity.Metadata.URL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 28), &qword_14FAC20);
}

double (*GroupActivitiesManager.Activity.Metadata.URL.modify())(double)
{
  type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return UIScreen.Dimensions.size.getter;
}

double GroupActivitiesManager.Activity.Metadata.artworkSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for GroupActivitiesManager.Activity.Metadata(0) + 32));
}

uint64_t GroupActivitiesManager.Activity.Metadata.artworkSize.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v6 = (double *)(v2 + *(int *)(result + 32));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

double (*GroupActivitiesManager.Activity.Metadata.artworkSize.modify())(double)
{
  type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t GroupActivitiesManager.Activity.Metadata.init(modelObject:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[16] = a1;
  v2[17] = a2;
  v3 = type metadata accessor for Locale(0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v2[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[20] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v6);
  v2[22] = swift_task_alloc(v6);
  return swift_task_switch(sub_D441F8, 0, 0);
}

uint64_t sub_D441F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  NSString v63;
  NSString v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t *v92;
  id v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  double *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t *v156;
  uint64_t v157;
  void *v158;
  id v159;
  id v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  void *v177;
  id v178;
  uint64_t v179;
  double *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  uint64_t *v193;
  Swift::Int v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  void *v198;
  Swift::String v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  double *v216;
  uint64_t v217;
  double *v218;
  uint64_t v219;
  double *v220;
  _QWORD *v221;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)v2 = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  v4 = v2 + *(int *)(v3 + 28);
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (double *)(v2 + *(int *)(v3 + 32));
  *(int64x2_t *)v6 = vdupq_n_s64(0x4072C00000000000uLL);
  objc_opt_self(MPModelAlbum);
  v7 = swift_dynamicCastObjCClass(v1);
  v8 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = v8;
    v11 = objc_msgSend(v9, "title");
    v221 = (_QWORD *)v2;
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

    }
    else
    {
      v26 = *(_QWORD *)(v0 + 168);
      v25 = *(_QWORD *)(v0 + 176);
      v27 = *(_QWORD *)(v0 + 152);
      v28 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v25, v27);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v29 = *(_QWORD *)(v0 + 168);
      v30 = *(_QWORD *)(v0 + 176);
      v31 = *(_QWORD *)(v0 + 152);
      v32 = *(_QWORD *)(v0 + 160);
      v33 = *(_QWORD *)(v0 + 144);
      v34 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v13 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v34, v33, 0, 0, 256);
      v15 = v35;
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    }
    v36 = objc_msgSend(v9, "artist");
    if (v36 && (v37 = v36, v38 = objc_msgSend(v36, "name"), v37, v38))
    {
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

    }
    else
    {
      v215 = v15;
      v42 = v13;
      v43 = v6;
      v45 = *(_QWORD *)(v0 + 168);
      v44 = *(_QWORD *)(v0 + 176);
      v46 = *(_QWORD *)(v0 + 152);
      v47 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v44, v46);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v48 = *(_QWORD *)(v0 + 168);
      v49 = *(_QWORD *)(v0 + 176);
      v51 = *(_QWORD *)(v0 + 152);
      v50 = *(_QWORD *)(v0 + 160);
      v52 = *(_QWORD *)(v0 + 144);
      v53 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v39 = String.init(localized:table:bundle:locale:comment:)(v48, 0, 0, v53, v52, 0, 0, 256);
      v41 = v54;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      v6 = v43;
      v13 = v42;
      v15 = v215;
    }
    v56 = *(uint64_t **)(v0 + 128);
    v55 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v9, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v56 = v13;
    v221[1] = v15;
    swift_bridgeObjectRelease();
    v221[2] = v39;
    v221[3] = v41;
    if (v57)
      goto LABEL_17;
    goto LABEL_42;
  }
  objc_opt_self(MPModelPlaylist);
  v16 = swift_dynamicCastObjCClass(v8);
  v17 = *(void **)(v0 + 136);
  if (v16)
  {
    v18 = (void *)v16;
    v19 = v17;
    v20 = objc_msgSend(v18, "name");
    if (v20)
    {
      v21 = v20;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v24 = v23;

    }
    else
    {
      v216 = v6;
      v76 = *(_QWORD *)(v0 + 168);
      v75 = *(_QWORD *)(v0 + 176);
      v77 = *(_QWORD *)(v0 + 152);
      v78 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000000010C5810);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v76, v75, v77);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v79 = *(_QWORD *)(v0 + 168);
      v80 = *(_QWORD *)(v0 + 176);
      v81 = *(_QWORD *)(v0 + 152);
      v82 = *(_QWORD *)(v0 + 160);
      v83 = *(_QWORD *)(v0 + 144);
      v84 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v22 = String.init(localized:table:bundle:locale:comment:)(v79, 0, 0, v84, v83, 0, 0, 256);
      v24 = v85;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
      v6 = v216;
    }
    v86 = objc_msgSend(v18, "curator");
    v87 = v86;
    if (v86)
    {
      v88 = objc_msgSend(v86, "name");

      if (v88)
      {
        v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
        v90 = v89;

LABEL_29:
        v92 = *(uint64_t **)(v0 + 128);
        v91 = *(void **)(v0 + 136);
        v93 = MPModelPlaylist.preferredArtworkCatalog.getter();
LABEL_40:
        v57 = v93;

        swift_bridgeObjectRelease();
        *v92 = v22;
        *(_QWORD *)(v2 + 8) = v24;
        goto LABEL_41;
      }
      v87 = 0;
    }
    v90 = 0;
    goto LABEL_29;
  }
  objc_opt_self(MPModelRadioStation);
  v68 = swift_dynamicCastObjCClass(v17);
  v69 = *(void **)(v0 + 136);
  if (v68)
  {
    v70 = (void *)v68;
    v71 = v69;
    v72 = objc_msgSend(v70, "name");
    if (v72)
    {
      v73 = v72;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v24 = v74;

    }
    else
    {
      v104 = *(_QWORD *)(v0 + 168);
      v103 = *(_QWORD *)(v0 + 176);
      v105 = *(_QWORD *)(v0 + 152);
      v106 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v104, v103, v105);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v107 = *(_QWORD *)(v0 + 168);
      v108 = *(_QWORD *)(v0 + 176);
      v109 = *(_QWORD *)(v0 + 152);
      v110 = *(_QWORD *)(v0 + 160);
      v111 = *(_QWORD *)(v0 + 144);
      v112 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v22 = String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v112, v111, 0, 0, 256);
      v24 = v113;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v109);
    }
    v114 = objc_msgSend(v70, "providerName");
    if (v114)
    {
      v115 = v114;
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
      v90 = v116;

    }
    else
    {
      v87 = 0;
      v90 = 0;
    }
    v92 = *(uint64_t **)(v0 + 128);
    v91 = *(void **)(v0 + 136);
    v93 = objc_msgSend(v70, "artworkCatalog");
    goto LABEL_40;
  }
  objc_opt_self(MPModelSong);
  v94 = swift_dynamicCastObjCClass(v69);
  v95 = *(void **)(v0 + 136);
  if (v94)
  {
    v96 = (void *)v94;
    v97 = v95;
    v98 = objc_msgSend(v96, "title");
    if (v98)
    {
      v99 = v98;
      v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
      v102 = v101;

    }
    else
    {
      v128 = *(_QWORD *)(v0 + 168);
      v127 = *(_QWORD *)(v0 + 176);
      v129 = *(_QWORD *)(v0 + 152);
      v130 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v128, v127, v129);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v131 = *(_QWORD *)(v0 + 168);
      v132 = *(_QWORD *)(v0 + 176);
      v133 = *(_QWORD *)(v0 + 152);
      v134 = *(_QWORD *)(v0 + 160);
      v135 = *(_QWORD *)(v0 + 144);
      v136 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v100 = String.init(localized:table:bundle:locale:comment:)(v131, 0, 0, v136, v135, 0, 0, 256);
      v137 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
      v102 = v138;
      v137(v132, v133);
    }
    v139 = objc_msgSend(v96, "artist");
    if (v139
      && (v140 = v139, v141 = objc_msgSend(v139, "name"), v140, v141))
    {
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
      v90 = v142;

    }
    else
    {
      v214 = v102;
      v217 = v100;
      v143 = v6;
      v145 = *(_QWORD *)(v0 + 168);
      v144 = *(_QWORD *)(v0 + 176);
      v146 = *(_QWORD *)(v0 + 152);
      v147 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v145, v144, v146);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v148 = *(_QWORD *)(v0 + 168);
      v149 = *(_QWORD *)(v0 + 176);
      v151 = *(_QWORD *)(v0 + 152);
      v150 = *(_QWORD *)(v0 + 160);
      v152 = *(_QWORD *)(v0 + 144);
      v153 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v87 = (void *)String.init(localized:table:bundle:locale:comment:)(v148, 0, 0, v153, v152, 0, 0, 256);
      v90 = v154;
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
      v6 = v143;
      v102 = v214;
      v100 = v217;
    }
    v156 = *(uint64_t **)(v0 + 128);
    v155 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v96, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v156 = v100;
    *(_QWORD *)(v2 + 8) = v102;
    goto LABEL_41;
  }
  objc_opt_self(MPModelTVEpisode);
  v119 = swift_dynamicCastObjCClass(v95);
  v120 = *(void **)(v0 + 136);
  if (v119)
  {
    v121 = (void *)v119;
    v122 = v120;
    v123 = objc_msgSend(v121, "title");
    if (v123)
    {
      v124 = v123;
      v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
      v213 = v126;

    }
    else
    {
      v218 = v6;
      v166 = *(_QWORD *)(v0 + 168);
      v165 = *(_QWORD *)(v0 + 176);
      v167 = *(_QWORD *)(v0 + 152);
      v168 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16))(v166, v165, v167);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v169 = *(_QWORD *)(v0 + 168);
      v170 = *(_QWORD *)(v0 + 176);
      v171 = *(_QWORD *)(v0 + 152);
      v172 = *(_QWORD *)(v0 + 160);
      v173 = *(_QWORD *)(v0 + 144);
      v174 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v125 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v174, v173, 0, 0, 256);
      v213 = v175;
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v170, v171);
      v6 = v218;
    }
    v176 = objc_msgSend(v121, "show");
    if (v176
      && (v177 = v176, v178 = objc_msgSend(v176, "title"), v177, v178))
    {
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v178);
      v90 = v179;

    }
    else
    {
      v219 = v125;
      v180 = v6;
      v182 = *(_QWORD *)(v0 + 168);
      v181 = *(_QWORD *)(v0 + 176);
      v183 = *(_QWORD *)(v0 + 152);
      v184 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 16))(v182, v181, v183);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v185 = *(_QWORD *)(v0 + 168);
      v186 = *(_QWORD *)(v0 + 176);
      v188 = *(_QWORD *)(v0 + 152);
      v187 = *(_QWORD *)(v0 + 160);
      v189 = *(_QWORD *)(v0 + 144);
      v190 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v87 = (void *)String.init(localized:table:bundle:locale:comment:)(v185, 0, 0, v190, v189, 0, 0, 256);
      v90 = v191;
      (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v186, v188);
      v6 = v180;
      v125 = v219;
    }
    v193 = *(uint64_t **)(v0 + 128);
    v192 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v121, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v193 = v125;
    *(_QWORD *)(v2 + 8) = v213;
LABEL_41:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v87;
    *(_QWORD *)(v2 + 24) = v90;
    if (v57)
    {
LABEL_17:
      v58 = v0 + 16;
      *(_QWORD *)(v0 + 184) = v57;
      v59 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
      v60 = swift_allocObject(v59, 32, 7);
      *(_QWORD *)(v0 + 192) = v60;
      *(_QWORD *)(v60 + 16) = 0xD00000000000001ELL;
      *(_QWORD *)(v60 + 24) = 0x8000000001103070;
      v61 = v57;
      v62 = (void *)objc_opt_self(MPArtworkCatalog);
      v63 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v63, v60);

      swift_bridgeObjectRetain();
      v64 = String._bridgeToObjectiveC()();
      objc_msgSend(v61, "setCacheIdentifier:forCacheReference:", v64, v60, swift_bridgeObjectRelease().n128_f64[0]);

      objc_msgSend(v61, "setFittingSize:", *v6, v6[1]);
      objc_msgSend(v61, "setDestinationScale:", 0.0);
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_D45174;
      v65 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v66 = (_QWORD *)(v0 + 80);
      v66[1] = 0x40000000;
      v66[2] = sub_C70B8C;
      v66[3] = &block_descriptor_316;
      v66[4] = v65;
      objc_msgSend(v61, "requestImageWithCompletion:", v66);
      return swift_continuation_await(v58);
    }
    goto LABEL_42;
  }
  objc_opt_self(MPModelMovie);
  v157 = swift_dynamicCastObjCClass(v120);
  if (v157)
  {
    v158 = (void *)v157;
    v159 = *(id *)(v0 + 136);
    v160 = objc_msgSend(v158, "title");
    if (v160)
    {
      v161 = v160;
      v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
      v164 = v163;

    }
    else
    {
      v220 = v6;
      v201 = *(_QWORD *)(v0 + 168);
      v200 = *(_QWORD *)(v0 + 176);
      v202 = *(_QWORD *)(v0 + 152);
      v203 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006569766F4DLL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v201, v200, v202);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v204 = *(_QWORD *)(v0 + 168);
      v205 = *(_QWORD *)(v0 + 176);
      v206 = *(_QWORD *)(v0 + 152);
      v207 = *(_QWORD *)(v0 + 160);
      v208 = *(_QWORD *)(v0 + 144);
      v209 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v162 = String.init(localized:table:bundle:locale:comment:)(v204, 0, 0, v209, v208, 0, 0, 256);
      v164 = v210;
      (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v205, v206);
      v6 = v220;
    }
    v212 = *(uint64_t **)(v0 + 128);
    v211 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v158, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v212 = v162;
    *(_QWORD *)(v2 + 8) = v164;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    if (v57)
      goto LABEL_17;
LABEL_42:

    v117 = *(_QWORD *)(v0 + 168);
    v118 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v194 = sub_D55D18((uint64_t)&off_13A73E0);
  MPModelObject.humanDescription(including:)(v194);
  v196 = v195;
  v198 = v197;
  swift_bridgeObjectRelease();
  v199._countAndFlagsBits = v196;
  v199._object = v198;
  String.append(_:)(v199);
  swift_bridgeObjectRelease();
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000000011093B0, "MusicCore/GroupActivitiesManager.swift", 38, 2, 85, 0);
}

uint64_t sub_D45174()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 200) = v1;
  if (v1)
    v2 = sub_D45274;
  else
    v2 = sub_D451D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_D451D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v5 = *(void **)(v0 + 120);
  v6 = objc_msgSend(v5, "CGImage");

  swift_release(v1);
  *(_QWORD *)(v4 + 32) = v6;
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D45274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 192);
  v3 = *(_QWORD *)(v1 + 200);
  v4 = *(void **)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 128);
  v5 = *(void **)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  swift_release(v2);
  *(_QWORD *)(v6 + 32) = 0;
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 144);
  swift_task_dealloc(*(_QWORD *)(v1 + 176));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_D4530C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
  v4[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D4536C, 0, 0);
}

uint64_t sub_D4536C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v3 = type metadata accessor for GroupActivitiesManager.Activity(0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v4 = v2 + *(int *)(v3 + 32);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  if (!v1)
    goto LABEL_8;
  v7 = v1;
  v8 = objc_msgSend(v7, "sharedListeningProperties");
  v0[21] = v8;
  if (!v8)
  {

LABEL_8:
    v25 = (_QWORD *)v0[19];
    v26 = v0[20];
    v27 = v0[18];
    v28 = v0[16];
    v29 = sub_D59574();
    v30 = swift_allocError(&type metadata for Errno, v29, 0, 0);
    *v31 = 96;
    swift_willThrow(v30);

    __swift_destroy_boxed_opaque_existential_1(v25);
    sub_56024(v27, &qword_1503200);
    sub_5C0DC(v28, type metadata accessor for GroupActivitiesManager.Activity);
    swift_task_dealloc(v26);
    v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  v9 = v8;
  v10 = v0[19];
  v11 = v0[18];
  v35 = v0[17];
  v36 = v0[20];
  v12 = v0[16];
  sub_56024(v12, &qword_1503208);
  sub_55D1C(v10, v12);
  sub_103FC0(v11, v4, &qword_1503200);
  v13 = type metadata accessor for CodableListeningProperties();
  v14 = swift_allocObject(v13, 24, 7);
  *(_QWORD *)(v14 + 16) = v9;
  v15 = v9;
  swift_release();
  *(_QWORD *)(v2 + 48) = v14;
  v16 = *(void **)(v2 + 40);
  v17 = v7;

  *(_QWORD *)(v2 + 40) = v35;
  sub_5C238(v4, v36, &qword_1503200);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v36, 1, v5);
  v19 = v0[20];
  if (v18 != 1)
  {

    sub_56024(v19, &qword_1503200);
    v33 = v0[20];
    v34 = v0[18];
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)v0[19]);
    sub_56024(v34, &qword_1503200);
    swift_task_dealloc(v33);
    v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  sub_56024(v0[20], &qword_1503200);
  if (qword_14FA060 != -1)
    swift_once(&qword_14FA060, sub_D47274);
  v20 = v0 + 2;
  v21 = qword_1503170;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_D45680;
  v22 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v23 = v0 + 10;
  v23[1] = 0x40000000;
  v23[2] = sub_C70B8C;
  v23[3] = &block_descriptor_61_3;
  v23[4] = v22;
  objc_msgSend(v17, "getRepresentativeObjectWithProperties:completion:", v21, v23);
  return swift_continuation_await(v20);
}

uint64_t sub_D45680()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 176) = v1;
  if (v1)
    v2 = sub_D457E0;
  else
    v2 = sub_D456E0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_D456E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v4 = *(void **)(v0 + 120);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v0 + 120), "innermostModelObject");
    v6 = type metadata accessor for CodableModelObjectIdentity();
    v7 = swift_allocObject(v6, 24, 7);
    *(_QWORD *)(v7 + 16) = v5;

  }
  else
  {
    v8 = type metadata accessor for CodableModelObjectIdentity();
    v9 = swift_allocObject(v8, 24, 7);
    swift_deallocPartialClassInstance(v9, v8, 24, 7);
    v7 = 0;
    v4 = v3;
  }

  swift_release();
  *(_QWORD *)(v2 + 56) = v7;
  v10 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 144);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD **)(v0 + 152));
  sub_56024(v11, &qword_1503200);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D457E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 176);
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v3 = *(void **)(v1 + 168);
  v5 = *(_QWORD *)(v1 + 128);
  v4 = *(void **)(v1 + 136);
  v6 = type metadata accessor for CodableModelObjectIdentity();
  v7 = swift_allocObject(v6, 24, 7);
  swift_deallocPartialClassInstance(v7, v6, 24, 7);

  swift_release();
  *(_QWORD *)(v5 + 56) = 0;
  v8 = *(_QWORD *)(v1 + 160);
  v9 = *(_QWORD *)(v1 + 144);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD **)(v1 + 152));
  sub_56024(v9, &qword_1503200);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void *GroupActivitiesManager.Activity.activityIdentifier.unsafeMutableAddressor()
{
  return &static GroupActivitiesManager.Activity.activityIdentifier;
}

unint64_t static GroupActivitiesManager.Activity.activityIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t GroupActivitiesManager.Activity.metadata.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2[19] = a1;
  v2[20] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v4);
  v2[23] = swift_task_alloc(v4);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v2[24] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[25] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v7);
  v2[27] = swift_task_alloc(v7);
  v8 = type metadata accessor for GroupActivityMetadata.ActivityType(0);
  v2[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D459B0, 0, 0);
}

uint64_t sub_D459B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  unint64_t v40;
  char v41;
  _UNKNOWN **v42;
  char **v43;
  uint64_t v44;
  void *ObjCClassFromMetadata;
  id v46;
  void *v47;
  id v48;
  char v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  Class isa;
  id v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  Swift::Int v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  Swift::String v88;
  uint64_t v89;
  int *v90;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = type metadata accessor for GroupActivityMetadata(0);
  *(_QWORD *)(v0 + 232) = v6;
  v7 = swift_allocBox(v6);
  v9 = v8;
  *(_QWORD *)(v0 + 240) = v7;
  *(_QWORD *)(v0 + 248) = v8;
  GroupActivityMetadata.init()();
  v10 = GroupActivityMetadata.supportsContinuationOnTV.setter(0);
  static GroupActivityMetadata.ActivityType.listenTogether.getter(v10);
  GroupActivityMetadata.type.setter(v1);
  v11 = type metadata accessor for GroupActivitiesManager.Activity(0);
  sub_5C238(v5 + *(int *)(v11 + 32), v4, &qword_1503200);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 256) = v12;
  if (v12(v4, 1, v2) != 1)
  {
    v24 = *(uint64_t **)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 152);
    sub_5C04C(*(_QWORD *)(v0 + 184), (uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    v28 = *v24;
    v29 = v24[1];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.title.setter(v28, v29);
    v30 = v24[2];
    v31 = v24[3];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.subtitle.setter(v30, v31);
    v32 = (void *)v24[4];
    v33 = v32;
    GroupActivityMetadata.previewImage.setter(v32);
    sub_5C238((uint64_t)v24 + *(int *)(v25 + 28), v26, &qword_14FAC20);
    GroupActivityMetadata.fallbackURL.setter(v26);
    sub_5C0DC((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v27, v9, v6);
LABEL_35:
    sub_D46588(v7);
    swift_release();
    v70 = *(_QWORD *)(v0 + 216);
    v71 = *(_QWORD *)(v0 + 208);
    v73 = *(_QWORD *)(v0 + 176);
    v72 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(_QWORD *)(v0 + 160);
  sub_56024(*(_QWORD *)(v0 + 184), &qword_1503200);
  v14 = *(_QWORD *)(v13 + 56);
  if (!v14)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(*(_QWORD *)(v0 + 152), v9, v6);
    goto LABEL_35;
  }
  v15 = *(void **)(v14 + 16);
  *(_QWORD *)(v0 + 264) = v15;
  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v15))
  {
    v16 = qword_14FA048;
    v17 = v15;
    if (v16 != -1)
      swift_once(&qword_14FA048, sub_D46DF0);
    v18 = (void *)qword_1503158;
    v19 = (void *)objc_opt_self(MPModelAlbum);
    v20 = (void *)objc_opt_self(MPModelSong);
    v21 = v18;
    v22 = objc_msgSend(v20, "kindWithVariants:", 3);
    v23 = objc_msgSend(v19, "kindWithSongKind:", v22);

    goto LABEL_32;
  }
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(v15))
  {
    v89 = v0 + 88;
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FF020);
    v35 = swift_allocObject(v34, 56, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1060E10;
    v36 = (void *)objc_opt_self(MPModelSong);
    v37 = v15;
    *(_QWORD *)(v35 + 32) = objc_msgSend(v36, "kindWithVariants:", 7);
    v38 = (void *)objc_opt_self(NSUserDefaults);
    v39 = objc_msgSend(v38, "standardUserDefaults");
    strcpy((char *)(v0 + 120), "showAllTVShows");
    *(_BYTE *)(v0 + 135) = -18;
    v40 = sub_B9DEC0();
    NSUserDefaults.subscript.getter(v0 + 120, (uint64_t)&type metadata for String, v40, v0 + 56);
    if (*(_QWORD *)(v0 + 80))
    {
      if ((swift_dynamicCast(v0 + 297, v0 + 56, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v41 = *(_BYTE *)(v0 + 297);

        v42 = MPCloudController_ptr;
        v43 = &selRef_appendItems_;
        if ((v41 & 1) != 0)
        {
          v44 = 3;
          goto LABEL_21;
        }
LABEL_20:
        v44 = 2;
LABEL_21:
        *(_QWORD *)(v35 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), v43[431], v44);
        v48 = objc_msgSend(v38, "standardUserDefaults");
        strcpy((char *)(v0 + 136), "showAllTVShows");
        *(_BYTE *)(v0 + 151) = -18;
        NSUserDefaults.subscript.getter(v0 + 136, (uint64_t)&type metadata for String, v40, v89);
        if (*(_QWORD *)(v0 + 112))
        {
          if ((swift_dynamicCast(v0 + 296, v89, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
          {
            v49 = *(_BYTE *)(v0 + 296);

            if ((v49 & 1) != 0)
            {
              v50 = 3;
LABEL_28:
              v51 = (void *)objc_opt_self(v42[63]);
              v52 = (void *)objc_opt_self(MPModelPlaylistEntry);
              v53 = objc_msgSend((id)objc_opt_self(MPModelMovie), v43[431], v50);
              *(_QWORD *)(v35 + 48) = v53;
              specialized Array._endMutation()(v53);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9A0);
              isa = Array._bridgeToObjectiveC()().super.isa;
              v55 = objc_msgSend(v52, "kindWithKinds:", isa, swift_bridgeObjectRelease().n128_f64[0]);

              v23 = objc_msgSend(v51, "kindWithPlaylistEntryKind:options:", v55, 0);
              if (qword_14FA050 != -1)
                swift_once(&qword_14FA050, sub_D46FC8);
              v47 = (void *)qword_1503160;
LABEL_31:
              v21 = v47;
LABEL_32:
              *(_QWORD *)(v0 + 272) = v21;
              *(_QWORD *)(v0 + 280) = v23;
              sub_5C238(*(_QWORD *)(v0 + 160), v0 + 16, &qword_1503208);
              v56 = *(_QWORD *)(v0 + 40);
              if (v56)
              {
                v57 = *(_QWORD *)(v0 + 48);
                __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
                v58 = *(int **)(v57 + 16);
                v90 = (int *)((char *)v58 + *v58);
                v59 = (_QWORD *)swift_task_alloc(v58[1]);
                *(_QWORD *)(v0 + 288) = v59;
                *v59 = v0;
                v59[1] = sub_D46374;
                return ((uint64_t (*)(_QWORD, void *, id, id, uint64_t, uint64_t))v90)(*(_QWORD *)(v0 + 176), v15, v23, v21, v56, v57);
              }
              v61 = *(_QWORD *)(v0 + 192);
              v62 = *(_QWORD *)(v0 + 200);
              v63 = *(_QWORD *)(v0 + 176);
              sub_56024(v0 + 16, &qword_1503208);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, 1, 1, v61);
              v64 = *(void **)(v0 + 280);
              v65 = *(void **)(v0 + 264);
              v7 = *(_QWORD *)(v0 + 240);
              v66 = *(_QWORD *)(v0 + 248);
              v67 = *(_QWORD *)(v0 + 232);
              v68 = *(_QWORD *)(v0 + 176);
              v69 = *(_QWORD *)(v0 + 152);

              sub_56024(v68, &qword_1503200);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v69, v66, v67);
              goto LABEL_35;
            }
LABEL_27:
            v50 = 2;
            goto LABEL_28;
          }
        }
        else
        {
          sub_56024(v89, &qword_14FF2A0);
        }

        goto LABEL_27;
      }
    }
    else
    {
      sub_56024(v0 + 56, &qword_14FF2A0);
    }

    v42 = MPCloudController_ptr;
    v43 = &selRef_appendItems_;
    goto LABEL_20;
  }
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(v15))
  {
    sub_4E684(0, &qword_1503210, MPModelRadioStationKind_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v46 = v15;
    v23 = objc_msgSend(ObjCClassFromMetadata, "identityKind");
    if (qword_14FA058 != -1)
      swift_once(&qword_14FA058, sub_D471A0);
    v47 = (void *)qword_1503168;
    goto LABEL_31;
  }
  objc_opt_self(MPModelSong);
  if (swift_dynamicCastObjCClass(v15))
  {
    v75 = (void *)objc_opt_self(MPModelSong);
    v76 = v15;
    v77 = objc_msgSend(v75, "kindWithVariants:", 7);
LABEL_40:
    v23 = v77;
    if (qword_14FA028 != -1)
      swift_once(&qword_14FA028, sub_D46774);
    v47 = (void *)qword_1503140;
    goto LABEL_31;
  }
  objc_opt_self(MPModelTVEpisode);
  if (swift_dynamicCastObjCClass(v15))
  {
    v78 = (void *)objc_opt_self(MPModelTVEpisode);
    v79 = v15;
    v77 = objc_msgSend(v78, "kindWithVariants:", 3);
    goto LABEL_40;
  }
  objc_opt_self(MPModelMovie);
  if (swift_dynamicCastObjCClass(v15))
  {
    v80 = (void *)objc_opt_self(MPModelMovie);
    v81 = v15;
    v23 = objc_msgSend(v80, "kindWithVariants:", 3);
    if (qword_14FA038 != -1)
      swift_once(&qword_14FA038, sub_D46B7C);
    v47 = (void *)qword_1503150;
    goto LABEL_31;
  }
  v82 = v15;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v83 = sub_D55D18((uint64_t)&off_13A7408);
  MPModelObject.humanDescription(including:)(v83);
  v85 = v84;
  v87 = v86;
  swift_bridgeObjectRelease();
  v88._countAndFlagsBits = v85;
  v88._object = v87;
  String.append(_:)(v88);
  swift_bridgeObjectRelease();
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000000011093B0, "MusicCore/GroupActivitiesManager.swift", 38, 2, 164, 0);
}

uint64_t sub_D46374()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 288));
  return swift_task_switch(sub_D463C8, 0, 0);
}

uint64_t sub_D463C8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  v4 = v1(v3, 1, v2);
  v6 = *(void **)(v0 + 272);
  v5 = *(void **)(v0 + 280);
  v7 = *(void **)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 232);
  if (v4 == 1)
  {
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 152);

    sub_56024(v11, &qword_1503200);
  }
  else
  {
    v13 = *(uint64_t **)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 152);
    sub_5C04C(*(_QWORD *)(v0 + 176), (uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    v30 = v7;
    v15 = *v13;
    v16 = v13[1];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.title.setter(v15, v16);
    v17 = v13[2];
    v18 = v13[3];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.subtitle.setter(v17, v18);
    v19 = (void *)v13[4];
    v20 = v19;
    GroupActivityMetadata.previewImage.setter(v19);
    sub_5C238((uint64_t)v13 + *(int *)(v28 + 28), v14, &qword_14FAC20);
    v21 = v14;
    v12 = v29;
    GroupActivityMetadata.fallbackURL.setter(v21);

    sub_5C0DC((uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v12, v9, v10);
  sub_D46588(v8);
  swift_release();
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_D46588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char *v14;
  char *v15;
  double result;
  _BYTE v17[24];
  uint64_t v18;

  v2 = type metadata accessor for GroupActivityMetadata(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v6 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v6, (uint64_t)static Logger.groupActivities);
  v7 = swift_retain_n(a1, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = swift_projectBox(a1);
    v13 = swift_beginAccess(v12, v17, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v12, v2, v13);
    v14 = (char *)String.init<A>(reflecting:)(v5, v2);
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v14, v15, &v18);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v8, v9, "Sending activity metadata=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    *(_QWORD *)&result = swift_release_n(a1, 2).n128_u64[0];
  }
  return result;
}

void sub_D46774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  void *v10;
  id v11;
  uint64_t v12;
  Class v13;
  id v14;
  unint64_t v15;
  id v16;
  Class v17;
  Class v18;
  id v19;
  _BYTE v20[80];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F890;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v4, v20);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_105B360;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  v10 = (void *)objc_opt_self(MPPropertySet);
  v11 = objc_msgSend(v10, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(inited + 64) = v12;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v10, "propertySetWithProperties:", v13);

  *(_QWORD *)(inited + 72) = v14;
  v15 = sub_C26530(inited);
  v16 = objc_allocWithZone((Class)MPPropertySet);
  v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v18 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v19 = objc_msgSend(v16, "initWithProperties:relationships:", v17, v18);

  qword_1503140 = (uint64_t)v19;
}

void sub_D469A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  unint64_t v11;
  id v12;
  Class v13;
  Class v14;
  id v15;
  _BYTE v16[56];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F890;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v4, v16);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeShow);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_105B360;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  v11 = sub_C26530(inited);
  v12 = objc_allocWithZone((Class)MPPropertySet);
  v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v15 = objc_msgSend(v12, "initWithProperties:relationships:", v13, v14);

  qword_1503148 = (uint64_t)v15;
}

void sub_D46B7C(uint64_t a1)
{
  sub_D471BC(a1, &MPModelPropertyMovieTitle, &MPModelPropertyMovieArtwork, &qword_1503150);
}

void sub_D46B98()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  id v14;
  Class isa;
  Class v16;
  id v17;
  _BYTE v18[104];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v0, v18);
  *(_OWORD *)(inited + 16) = xmmword_1060460;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 40) = v2;
  if (qword_14FA028 != -1)
    swift_once(&qword_14FA028, sub_D46774);
  v3 = (void *)qword_1503140;
  *(_QWORD *)(inited + 48) = qword_1503140;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
  *(_QWORD *)(inited + 64) = v4;
  v5 = qword_14FA030;
  v6 = v3;
  if (v5 != -1)
    swift_once(&qword_14FA030, sub_D469A4);
  v7 = (void *)qword_1503148;
  *(_QWORD *)(inited + 72) = qword_1503148;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
  *(_QWORD *)(inited + 88) = v8;
  v9 = qword_14FA038;
  v10 = v7;
  if (v9 != -1)
    swift_once(&qword_14FA038, sub_D46B7C);
  v11 = (void *)qword_1503150;
  *(_QWORD *)(inited + 96) = qword_1503150;
  v12 = v11;
  v13 = sub_C26530(inited);
  v14 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  v17 = objc_msgSend(v14, "initWithProperties:relationships:", isa, v16);

  static GroupActivitiesManager.Activity.playingProperties = (uint64_t)v17;
}

uint64_t *GroupActivitiesManager.Activity.playingProperties.unsafeMutableAddressor()
{
  if (qword_14FA040 != -1)
    swift_once(&qword_14FA040, sub_D46B98);
  return &static GroupActivitiesManager.Activity.playingProperties;
}

id static GroupActivitiesManager.Activity.playingProperties.getter()
{
  if (qword_14FA040 != -1)
    swift_once(&qword_14FA040, sub_D46B98);
  return (id)static GroupActivitiesManager.Activity.playingProperties;
}

void sub_D46DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F890;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_105B360;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_C26530(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13, swift_bridgeObjectRelease().n128_f64[0]);

  qword_1503158 = (uint64_t)v14;
}

void sub_D46FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F890;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_105B360;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_C26530(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13, swift_bridgeObjectRelease().n128_f64[0]);

  qword_1503160 = (uint64_t)v14;
}

void sub_D471A0(uint64_t a1)
{
  sub_D471BC(a1, &MPModelPropertyRadioStationName, &MPModelPropertyRadioStationArtwork, &qword_1503168);
}

void sub_D471BC(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FEE10);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_105F890;
  *(_QWORD *)(v8 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(*a3);
  *(_QWORD *)(v8 + 56) = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  v12 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *a4 = v12;
}

id sub_D47274()
{
  id result;

  result = sub_D47290();
  qword_1503170 = (uint64_t)result;
  return result;
}

id sub_D47290()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  Class isa;
  Class v16;
  id v17;
  id v18;
  _BYTE v20[104];

  if (qword_14FA040 != -1)
    swift_once(&qword_14FA040, sub_D46B98);
  v0 = (void *)static GroupActivitiesManager.Activity.playingProperties;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE9B0);
  inited = swift_initStackObject(v1, v20);
  *(_OWORD *)(inited + 16) = xmmword_1060460;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 40) = v3;
  if (qword_14FA050 != -1)
    swift_once(&qword_14FA050, sub_D46FC8);
  v4 = (void *)qword_1503160;
  *(_QWORD *)(inited + 48) = qword_1503160;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 64) = v5;
  v6 = qword_14FA048;
  v7 = v4;
  if (v6 != -1)
    swift_once(&qword_14FA048, sub_D46DF0);
  v8 = (void *)qword_1503158;
  *(_QWORD *)(inited + 72) = qword_1503158;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericRadioStation);
  *(_QWORD *)(inited + 88) = v9;
  v10 = qword_14FA058;
  v11 = v8;
  if (v10 != -1)
    swift_once(&qword_14FA058, sub_D471A0);
  v12 = (void *)qword_1503168;
  *(_QWORD *)(inited + 96) = qword_1503168;
  v13 = v12;
  sub_C26530(inited);
  v14 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_4E684(0, (unint64_t *)&qword_14FEFF0, MPPropertySet_ptr);
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v14, "initWithProperties:relationships:", isa, v16, swift_bridgeObjectRelease().n128_f64[0]);

  v18 = objc_msgSend(v0, "propertySetByCombiningWithPropertySet:", v17);
  return v18;
}

unint64_t sub_D474B8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_D474F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_D59314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D4751C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D55E84();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D47544(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D55E84();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GroupActivitiesManager.Activity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v25 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503218);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupActivitiesManager.Activity(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v12 = &v10[*(int *)(v11 + 32)];
  v13 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_D55E84();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for GroupActivitiesManager.Activity.CodingKey, &type metadata for GroupActivitiesManager.Activity.CodingKey, v16, v14, v15);
  if (!v2)
  {
    v17 = v5;
    v18 = v25;
    v19 = type metadata accessor for CodableListeningProperties();
    v26 = 0;
    v20 = sub_4DD24(&qword_1503228, (uint64_t (*)(uint64_t))type metadata accessor for CodableListeningProperties, (uint64_t)&unk_10A5934);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v19, &v26, v4, v19, v20);
    *((_QWORD *)v10 + 6) = v27;
    v22 = type metadata accessor for CodableModelObjectIdentity();
    v26 = 1;
    v23 = sub_4DD24(&qword_1503230, (uint64_t (*)(uint64_t))type metadata accessor for CodableModelObjectIdentity, (uint64_t)&unk_10A590C);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v22, &v26, v4, v22, v23);
    v24 = v27;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
    swift_release();
    *((_QWORD *)v10 + 7) = v24;
    sub_5BDB8((uint64_t)v10, v18, type metadata accessor for GroupActivitiesManager.Activity);
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_5C0DC((uint64_t)v10, type metadata accessor for GroupActivitiesManager.Activity);
}

uint64_t GroupActivitiesManager.Activity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503238);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D55E84();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for GroupActivitiesManager.Activity.CodingKey, &type metadata for GroupActivitiesManager.Activity.CodingKey, v11, v9, v10);
  v18 = *(_QWORD *)(v3 + 48);
  HIBYTE(v17) = 0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503240);
  v13 = sub_D55F08();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, (char *)&v17 + 7, v5, v12, v13);
  if (!v2)
  {
    v18 = *(_QWORD *)(v3 + 56);
    HIBYTE(v17) = 1;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503258);
    v15 = sub_D55F84();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, (char *)&v17 + 7, v5, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_D47954(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_15031FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  return GroupActivitiesManager.Activity.metadata.getter(a1);
}

uint64_t sub_D479A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupActivitiesManager.Activity.init(from:)(a1, a2);
}

uint64_t sub_D479BC(_QWORD *a1)
{
  return GroupActivitiesManager.Activity.encode(to:)(a1);
}

double GroupActivitiesManager.coordinator.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;
  double result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v3, v5, 33, 0);
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_8B15C(a1, (uint64_t)v3);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t GroupActivitiesManager.pendingNoticeAlert.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 7, v3, 0, 0);
  v1 = v0[7];
  sub_B37B30(v1, v0[8], v0[9], v0[10]);
  return v1;
}

uint64_t GroupActivitiesManager.isSharePlaySessionActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v33)(_BYTE *, _QWORD, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t);
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  NSString v50;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  char v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t);
  _BYTE v58[12];
  int v59;
  void (*v60)(_BYTE *, _QWORD, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15031C8);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v64 = &v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503270);
  __chkstk_darwin(v68);
  v6 = &v58[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v58[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503278);
  __chkstk_darwin(v10);
  v65 = &v58[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v66 = &v58[-v13];
  __chkstk_darwin(v14);
  v67 = &v58[-v15];
  __chkstk_darwin(v16);
  v18 = &v58[-v17];
  __chkstk_darwin(v19);
  v21 = &v58[-v20];
  __chkstk_darwin(v22);
  v24 = &v58[-v23];
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v26 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter(&v69, v1, KeyPath, v26);
  swift_release();
  v27 = swift_release();
  if ((v69 & 1) != 0)
    return 1;
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  v62 = v1;
  v63 = v6;
  v61 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  if (v29)
  {
    swift_retain();
    GroupSession.state.getter(v30);
    v31 = swift_release();
    v32 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
    v32(v24, 0, 1, v2, v31);
  }
  else
  {
    v32 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
    v32(v24, 1, 1, v2, v27);
  }
  v33 = (void (*)(_BYTE *, _QWORD, uint64_t))v3[13];
  v33(v21, enum case for GroupSession.State.waiting<A>(_:), v2);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v32)(v21, 0, 1, v2);
  v34 = (uint64_t)&v9[*(int *)(v68 + 48)];
  sub_5C238((uint64_t)v24, (uint64_t)v9, &qword_1503278);
  sub_5C238((uint64_t)v21, v34, &qword_1503278);
  v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  if (v35((uint64_t)v9, 1, v2) == 1)
  {
    sub_56024((uint64_t)v21, &qword_1503278);
    sub_56024((uint64_t)v24, &qword_1503278);
    if (v35(v34, 1, v2) == 1)
    {
      v36 = (uint64_t)v9;
LABEL_20:
      sub_56024(v36, &qword_1503278);
      return 1;
    }
  }
  else
  {
    sub_5C238((uint64_t)v9, (uint64_t)v18, &qword_1503278);
    if (v35(v34, 1, v2) != 1)
    {
      v41 = (void (*)(_BYTE *, uint64_t, uint64_t))v3[4];
      v60 = v33;
      v42 = v64;
      v41(v64, v34, v2);
      v43 = sub_5C150(&qword_1503288, &qword_15031C8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
      v59 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v42, v2, v43);
      v44 = (void (*)(_BYTE *, uint64_t))v3[1];
      v45 = v42;
      v33 = v60;
      v44(v45, v2);
      sub_56024((uint64_t)v21, &qword_1503278);
      sub_56024((uint64_t)v24, &qword_1503278);
      v44(v18, v2);
      sub_56024((uint64_t)v9, &qword_1503278);
      if ((v59 & 1) != 0)
        return 1;
      goto LABEL_12;
    }
    sub_56024((uint64_t)v21, &qword_1503278);
    sub_56024((uint64_t)v24, &qword_1503278);
    ((void (*)(_BYTE *, uint64_t))v3[1])(v18, v2);
  }
  sub_56024((uint64_t)v9, &qword_1503270);
LABEL_12:
  if (*(_QWORD *)(v62 + v61))
  {
    swift_retain();
    v38 = (uint64_t)v67;
    GroupSession.state.getter(v39);
    v37 = swift_release();
    v40 = 0;
  }
  else
  {
    v40 = 1;
    v38 = (uint64_t)v67;
  }
  v46 = (uint64_t)v66;
  v32((_BYTE *)v38, v40, 1, v2, v37);
  v33((_BYTE *)v46, enum case for GroupSession.State.joined<A>(_:), v2);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v32)(v46, 0, 1, v2);
  v47 = (uint64_t)v63;
  v48 = (uint64_t)&v63[*(int *)(v68 + 48)];
  sub_5C238(v38, (uint64_t)v63, &qword_1503278);
  sub_5C238(v46, v48, &qword_1503278);
  if (v35(v47, 1, v2) == 1)
  {
    sub_56024(v46, &qword_1503278);
    sub_56024(v38, &qword_1503278);
    if (v35(v48, 1, v2) == 1)
    {
      v36 = v47;
      goto LABEL_20;
    }
    goto LABEL_23;
  }
  sub_5C238(v47, (uint64_t)v65, &qword_1503278);
  if (v35(v48, 1, v2) == 1)
  {
    sub_56024(v46, &qword_1503278);
    sub_56024(v38, &qword_1503278);
    ((void (*)(_BYTE *, uint64_t))v3[1])(v65, v2);
LABEL_23:
    sub_56024(v47, &qword_1503270);
LABEL_24:
    v49 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v50 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v49, "BOOLForKey:", v50);

    return (uint64_t)v28;
  }
  v52 = v64;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v3[4])(v64, v48, v2);
  v53 = sub_5C150(&qword_1503288, &qword_15031C8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
  v54 = v65;
  v55 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v52, v2, v53);
  v56 = v46;
  v57 = (void (*)(_BYTE *, uint64_t))v3[1];
  v57(v52, v2);
  sub_56024(v56, &qword_1503278);
  sub_56024(v38, &qword_1503278);
  v57(v54, v2);
  sub_56024(v47, &qword_1503278);
  if ((v55 & 1) == 0)
    goto LABEL_24;
  return 1;
}

uint64_t GroupActivitiesManager.isLoading.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v2 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t GroupActivitiesManager.participantsCount.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10A5420);
  v2 = swift_getKeyPath(&unk_10A5448);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_D48238(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A5420);
  v5 = swift_getKeyPath(&unk_10A5448);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

void sub_D482B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A5420);
  v5 = swift_getKeyPath(&unk_10A5448);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = v9;
  v7 = swift_getKeyPath(&unk_10A5420);
  v8 = swift_getKeyPath(&unk_10A5448);
  v9 = v2;
  swift_retain();
  static Published.subscript.setter(&v9, v3, v7, v8);
  sub_D4837C(v6);
}

void sub_D4837C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_10A5420);
  v5 = swift_getKeyPath(&unk_10A5448);
  static Published.subscript.getter(v20, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if (v20[0] != a1)
  {
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v6 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v6, (uint64_t)static Logger.groupActivities);
    v7 = swift_retain_n(v2, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(12, -1);
      *(_DWORD *)v10 = 134349056;
      v11 = swift_getKeyPath(&unk_10A5420);
      v12 = swift_getKeyPath(&unk_10A5448);
      static Published.subscript.getter(v20, v2, v11, v12);
      swift_release(v12);
      swift_release(v11);
      swift_release(v2);
      *(_QWORD *)(v10 + 4) = v20[0];
      swift_release(v2);
      _os_log_impl(&dword_0, v8, v9, "üë§ Participants count update=%{public}ld", (uint8_t *)v10, 0xCu);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2);
    }

    v13 = swift_getKeyPath(&unk_10A5420);
    v14 = swift_getKeyPath(&unk_10A5448);
    static Published.subscript.getter(v20, v2, v13, v14);
    swift_release(v14);
    swift_release(v13);
    v15 = v20[0];
    v16 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v20, 1, 0);
    if (*v16 < v15)
    {
      v17 = swift_getKeyPath(&unk_10A5420);
      v18 = swift_getKeyPath(&unk_10A5448);
      static Published.subscript.getter(&v19, v2, v17, v18);
      swift_release(v18);
      swift_release(v17);
      *v16 = v19;
    }
  }
}

uint64_t Logger.groupActivities.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.groupActivities);
}

uint64_t GroupActivitiesManager.$participantsCount.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_1502E10);
}

void sub_D4864C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v5 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

void sub_D486C8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v5 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release();
  swift_release();
  LOBYTE(KeyPath) = v9;
  v6 = swift_getKeyPath(&unk_10A53D8);
  v7 = swift_getKeyPath(&unk_10A5400);
  v8 = v2;
  swift_retain();
  static Published.subscript.setter(&v8, v3, v6, v7);
  sub_D48790(KeyPath);
}

void sub_D48790(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v3 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v5 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((uint64_t *)((char *)&v13 + 1), v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if (BYTE1(v13) != v3)
  {
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v6 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v6, (uint64_t)static Logger.groupActivities);
    v7 = swift_retain_n(v2, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 67240192;
      v11 = swift_getKeyPath(&unk_10A53D8);
      v12 = swift_getKeyPath(&unk_10A5400);
      static Published.subscript.getter(&v13, v2, v11, v12);
      swift_release(v12);
      swift_release(v11);
      swift_release(v2);
      *(_DWORD *)(v10 + 4) = v13;
      swift_release(v2);
      _os_log_impl(&dword_0, v8, v9, "‚è≥ Session is loading=%{BOOL,public}d", (uint8_t *)v10, 8u);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2);
    }

  }
}

uint64_t GroupActivitiesManager.$isLoading.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_15004B0);
}

uint64_t property wrapper backing initializer of GroupActivitiesManager.reaction(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[48];

  sub_5C090(a1, (uint64_t)v3, &qword_1503298);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503298);
  return Published.init(initialValue:)(v3, v1);
}

double GroupActivitiesManager.reaction.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  _OWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_10A5468);
  v4 = swift_getKeyPath(&unk_10A5490);
  static Published.subscript.getter(v8, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)v8;
  v6 = v8[1];
  v7 = v8[2];
  *a1 = v8[0];
  a1[1] = v6;
  a1[2] = v7;
  return result;
}

double sub_D48A28@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10A5468);
  v5 = swift_getKeyPath(&unk_10A5490);
  static Published.subscript.getter(v9, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *a2 = v9[0];
  a2[1] = v7;
  a2[2] = v8;
  return result;
}

_QWORD *sub_D48AAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[6];
  _QWORD v15[6];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10A5468);
  v10 = swift_getKeyPath(&unk_10A5490);
  sub_D59C68(v2, v3);
  static Published.subscript.getter(v14, v8, KeyPath, v10);
  swift_release();
  swift_release();
  sub_5C090((uint64_t)v14, (uint64_t)v15, &qword_1503298);
  v11 = swift_getKeyPath(&unk_10A5468);
  v12 = swift_getKeyPath(&unk_10A5490);
  v14[0] = v2;
  v14[1] = v3;
  v14[2] = v4;
  v14[3] = v5;
  v14[4] = v6;
  v14[5] = v7;
  swift_retain();
  static Published.subscript.setter(v14, v8, v11, v12);
  sub_D48BD0(v15);
  return sub_9B0C4(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D59CA4);
}

double sub_D48BD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD v60[6];
  _QWORD v61[6];
  _QWORD v62[6];
  uint64_t v63[6];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char v70;

  v2 = v1;
  sub_5C090((uint64_t)a1, (uint64_t)v61, &qword_1503298);
  v5 = v61[0];
  v4 = v61[1];
  v54 = (char *)v61[4];
  v55 = v61[2];
  v58 = (char *)v61[5];
  v59 = v61[3];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant(0);
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10A5468);
  v13 = swift_getKeyPath(&unk_10A5490);
  v56 = v2;
  static Published.subscript.getter(&v64, v2, KeyPath, v13);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  v15 = v65;
  if (v65)
  {
    v48 = v9;
    v49 = v7;
    v50 = v6;
    v16 = v64;
    v17 = v66;
    v18 = v67;
    v20 = v68;
    v19 = v69;
    sub_5C090((uint64_t)a1, (uint64_t)v62, &qword_1503298);
    v57 = v17;
    if (!v62[1])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = v16;
      sub_D59CA4(v16, v15, v17, v18, (uint64_t)v20, (uint64_t)v19);
      sub_D59CA4(v5, v4, v55, v59, (uint64_t)v54, (uint64_t)v58);
      goto LABEL_17;
    }
    if ((v16 == v5 && v15 == v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v15, v5, v4, 0) & 1) != 0)
      && (v57 == v55 && v18 == v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v18, v55, v59, 0) & 1) != 0))
    {
      if (!v19)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = v57;
        sub_D59C68(v16, v15);
        sub_9B0C4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D59C68);
        swift_bridgeObjectRelease();
        v22 = 0;
        v23 = v16;
        if (!v58)
          goto LABEL_38;
        goto LABEL_16;
      }
      if (v58)
      {
        if (v20 == v54 && v19 == v58)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = v57;
          sub_D59C68(v16, v15);
          sub_9B0C4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D59C68);
          swift_bridgeObjectRelease();
          v22 = v19;
          v23 = v16;
LABEL_38:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_D59CA4(v23, v15, v21, v18, (uint64_t)v20, (uint64_t)v19);
          swift_bridgeObjectRelease_n(v22, 2);
          swift_bridgeObjectRelease_n(v18, 2);
          *(_QWORD *)&result = swift_bridgeObjectRelease_n(v15, 2).n128_u64[0];
          return result;
        }
        LODWORD(v55) = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v19, v54, v58, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = v57;
        sub_D59C68(v16, v15);
        sub_9B0C4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D59C68);
        swift_bridgeObjectRelease();
        v22 = v19;
        v23 = v16;
        if ((v55 & 1) != 0)
          goto LABEL_38;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v57;
    sub_D59C68(v16, v15);
    sub_9B0C4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D59C68);
    swift_bridgeObjectRelease();
    v23 = v16;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = v23;
    sub_D59CA4(v23, v15, v21, v18, (uint64_t)v20, (uint64_t)v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v21;
LABEL_17:
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v24 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v24, (uint64_t)static Logger.groupActivities);
    swift_bridgeObjectRetain_n(v19, 2);
    swift_bridgeObjectRetain_n(v15, 2);
    v25 = swift_bridgeObjectRetain_n(v18, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.info.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v63[0] = v29;
      *(_DWORD *)v28 = 136446210;
      v64 = v17;
      v65 = v18;
      swift_bridgeObjectRetain();
      v30 = (char *)String.init<A>(reflecting:)(&v64, &type metadata for String);
      *(_QWORD *)(v28 + 4) = sub_BA95EC(v30, v31, v63);
      swift_bridgeObjectRelease_n(v19, 2);
      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease_n(v15, 2);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v26, v27, "üåö received: %{public}s)", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      v32 = v56;
      if (!v19)
        goto LABEL_32;
    }
    else
    {

      swift_bridgeObjectRelease_n(v19, 2);
      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease_n(v15, 2);
      v32 = v56;
      if (!v19)
        goto LABEL_32;
    }
    if (*(_QWORD *)(v32 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session))
    {
      swift_bridgeObjectRetain();
      v33 = swift_retain();
      v34 = v51;
      GroupSession.localParticipant.getter(v33);
      swift_release();
      v35 = v48;
      Participant.id.getter(v36);
      v37 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v34, v53);
      v38 = UUID.uuidString.getter(v37);
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
      if (v20 == (char *)v38 && v19 == v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_33:
        swift_bridgeObjectRelease();
        v42 = swift_getKeyPath(&unk_10A5468);
        v43 = swift_getKeyPath(&unk_10A5490);
        static Published.subscript.getter(v60, v32, v42, v43);
        swift_release();
        swift_release();
        sub_5C090((uint64_t)v60, (uint64_t)v63, &qword_1503298);
        v44 = swift_getKeyPath(&unk_10A5468);
        v45 = swift_getKeyPath(&unk_10A5490);
        memset(v60, 0, sizeof(v60));
        swift_retain();
        static Published.subscript.setter(v60, v32, v44, v45);
        sub_D48BD0(v63);
        sub_9B0C4(v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_D59CA4);
        return result;
      }
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v19, v38, v40, 0);
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v64 = v47;
    v65 = v15;
    v66 = v57;
    v67 = v18;
    v68 = v20;
    v69 = v19;
    v70 = 1;
    GroupActivitiesManager.postEvent(_:participantID:)((uint64_t)&v64, v20, v19);
    swift_bridgeObjectRelease_n(v19, 2);
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  return result;
}

uint64_t GroupActivitiesManager.$reaction.getter()
{
  return sub_CDCB54(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_15032A8);
}

uint64_t GroupActivitiesManager.maxParticipantsCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t GroupActivitiesManager.hasJoined.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_15031C8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503270);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503278);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  v17 = (char *)&v30 - v15;
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v18)
  {
    v19 = swift_retain(v18);
    GroupSession.state.getter(v19);
    v20 = swift_release(v18);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
    v21(v17, 0, 1, v1, v20);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
    v21((char *)&v30 - v15, 1, 1, v1, v16);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v14, enum case for GroupSession.State.joined<A>(_:), v1);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v14, 0, 1, v1);
  v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_5C238((uint64_t)v17, (uint64_t)v7, &qword_1503278);
  sub_5C238((uint64_t)v14, v22, &qword_1503278);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v23((uint64_t)v7, 1, v1) == 1)
  {
    sub_56024((uint64_t)v14, &qword_1503278);
    sub_56024((uint64_t)v17, &qword_1503278);
    v24 = v23(v22, 1, v1);
    if (v24 == 1)
      v25 = &qword_1503278;
    else
      v25 = &qword_1503270;
    if (v24 == 1)
      v26 = -1;
    else
      v26 = 0;
  }
  else
  {
    sub_5C238((uint64_t)v7, (uint64_t)v11, &qword_1503278);
    if (v23(v22, 1, v1) == 1)
    {
      sub_56024((uint64_t)v14, &qword_1503278);
      sub_56024((uint64_t)v17, &qword_1503278);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
      v26 = 0;
      v25 = &qword_1503270;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v22, v1);
      v27 = sub_5C150(&qword_1503288, &qword_15031C8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v4, v1, v27);
      v28 = *(void (**)(char *, uint64_t))(v2 + 8);
      v28(v4, v1);
      v25 = &qword_1503278;
      sub_56024((uint64_t)v14, &qword_1503278);
      sub_56024((uint64_t)v17, &qword_1503278);
      v28(v11, v1);
    }
  }
  sub_56024((uint64_t)v7, v25);
  return v26 & 1;
}

uint64_t GroupActivitiesManager.isSessionEligible.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[11];
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_14F9D68 != -1)
    swift_once(&qword_14F9D68, sub_C3FD38);
  v0 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10A54B0);
  v2 = swift_getKeyPath(&unk_10A54D8);
  static Published.subscript.getter(v12, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v12[3];
  v4 = v12[4];
  v5 = v12[7];
  v6 = v12[9];
  v7 = (void *)v12[10];
  v8 = v13;
  v9 = v14;
  v10 = v15;
  if ((GroupActivitiesManager.hasJoined.getter() & 1) == 0
    && (GroupStateObserver.isEligibleForGroupSession.getter() & 1) != 0)
  {
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);

  return 0;
}

id GroupActivitiesManager.itemProvider(with:metadata:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v68[2];
  _QWORD *v69;
  _QWORD *v70;
  char v71[24];
  id v72[3];
  uint64_t v73;
  char v74[24];
  _QWORD *v75;

  v4 = v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD **)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)v68 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    goto LABEL_2;
  v68[0] = a2;
  v68[1] = v3;
  swift_beginAccess(v2 + 2, v74, 0, 0);
  v27 = v2[5];
  v26 = v2[6];
  v69 = v2 + 2;
  v28 = __swift_project_boxed_opaque_existential_1(v2 + 2, v27);
  v70 = v68;
  v29 = *(_QWORD *)(v27 - 8);
  v30 = __chkstk_darwin(v28);
  v32 = (char *)v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v29 + 16))(v32, v30);
  v33 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 56))(v27, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
  if (!v33)
  {
LABEL_12:
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v38 = type metadata accessor for Logger(0);
    v17 = (id)__swift_project_value_buffer(v38, (uint64_t)static Logger.groupActivities);
    v39 = swift_retain_n(v4, 2);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (!os_log_type_enabled(v40, v41))
    {

      swift_release_n(v4, 2);
LABEL_22:
      v64 = sub_D56020();
      v65 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v64, 0, 0);
      *(_QWORD *)v66 = 1;
      *(_BYTE *)(v66 + 8) = 4;
      swift_willThrow(v65);
      return v17;
    }
    v42 = swift_slowAlloc(22, -1);
    v70 = (_QWORD *)swift_slowAlloc(64, -1);
    v75 = v70;
    *(_DWORD *)v42 = 136446466;
    v72[0] = 0;
    v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15032C0);
    v44 = (char *)String.init<A>(describing:)(v72, v43);
    v46 = v45;
    *(_QWORD *)(v42 + 4) = sub_BA95EC(v44, v45, (uint64_t *)&v75);
    swift_bridgeObjectRelease(v46);
    *(_WORD *)(v42 + 12) = 2082;
    v47 = v4[5];
    v48 = v4[6];
    v49 = __swift_project_boxed_opaque_existential_1(v69, v47);
    v69 = v68;
    v50 = *(_QWORD *)(v47 - 8);
    v51 = __chkstk_darwin(v49);
    v53 = (char *)v68 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v50 + 16))(v53, v51);
    v54 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 56))(v47, v48);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v47);
    if (v54)
    {
      v55 = &v54[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
      swift_beginAccess(&v54[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v72, 0, 0);
      v56 = *(_QWORD *)v55;
      if (v56)
      {
        swift_retain(v56);

        KeyPath = swift_getKeyPath(&unk_10A54F8);
        v58 = swift_getKeyPath(&unk_10A5520);
        static Published.subscript.getter(&v73, v56, KeyPath, v58);
        swift_release(v56);
        swift_release(KeyPath);
        swift_release(v58);
        v59 = v73;
LABEL_21:
        v60 = v70;
        v73 = v59;
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500EA0);
        v62 = (char *)String.init<A>(describing:)(&v73, v61);
        v17 = v63;
        *(_QWORD *)(v42 + 14) = sub_BA95EC(v62, v63, (uint64_t *)&v75);
        swift_release_n(v4, 2);
        swift_bridgeObjectRelease(v17);
        _os_log_impl(&dword_0, v40, v41, "    Cannot build itemProvider with intent=%{public}s\")\n    and player=%{public}s\")", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        goto LABEL_22;
      }

    }
    v59 = 0;
    goto LABEL_21;
  }
  v34 = &v33[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v33[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v71, 0, 0);
  v35 = *(_QWORD *)v34;
  if (!*(_QWORD *)v34)
  {

    goto LABEL_12;
  }
  swift_retain(*(_QWORD *)v34);

  v36 = swift_getKeyPath(&unk_10A54F8);
  v37 = swift_getKeyPath(&unk_10A5520);
  static Published.subscript.getter(v72, v35, v36, v37);
  swift_release(v35);
  swift_release(v36);
  swift_release(v37);
  if (!v72[0])
    goto LABEL_12;

  a2 = v68[0];
LABEL_2:
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v11 = type metadata accessor for Logger(0);
  v12 = __swift_project_value_buffer(v11, (uint64_t)static Logger.groupActivities);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    v70 = v9;
    v16 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "Building GroupActivity item provider", v15, 2u);
    v10 = (char *)v68 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9 = v70;
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_5C238(a2, (uint64_t)v10, &qword_1503200);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 24) & ~v18;
  v20 = ((unint64_t)v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_13BC098, v20 + 8, v18 | 7);
  *(_QWORD *)(v21 + 16) = a1;
  sub_5C090((uint64_t)v10, v21 + v19, &qword_1503200);
  *(_QWORD *)(v21 + v20) = v4;
  v22 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v23 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  v24 = a1;
  v25 = swift_retain(v4);
  NSItemProvider.registerGroupActivity<A>(preparationHandler:)(&unk_15032D8, v21, v22, v23, v25);
  swift_release(v21);
  return v17;
}

uint64_t sub_D4A04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D4A0AC, 0, 0);
}

uint64_t sub_D4A0AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(id);

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = unk_1503C24;
    v9 = (uint64_t (*)(id))((char *)&dword_1503C20 + dword_1503C20);
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_D4A1B4;
    return v9(v3);
  }
  else
  {
    v6 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 136) = v6;
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 96);
    *(_QWORD *)(v6 + 32) = 0;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v7;
    v8 = type metadata accessor for GroupActivitiesManager.Activity(0);
    *v7 = v0;
    v7[1] = sub_D4A228;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 80), 0, 0, 0xD00000000000001CLL, 0x8000000001109740, sub_D59568, v6, v8);
  }
}

uint64_t sub_D4A1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_D4A3B4;
  }
  else
  {
    *(_QWORD *)(v4 + 160) = a1;
    v6 = sub_D4A2A4;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_D4A228()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 144);
  v3 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_D4A598, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 136));
  swift_task_dealloc(*(_QWORD *)(v3 + 112));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_D4A2A4()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t **v5;

  v1 = (void *)v0[20];
  v2 = v0[13];
  sub_5C238(v0[12], v0[14], &qword_1503200);
  v2 += 16;
  swift_beginAccess(v2, v0 + 7, 0, 0);
  sub_55D1C(v2, (uint64_t)(v0 + 2));
  v3 = dword_1503964;
  v4 = v1;
  v5 = (uint64_t **)swift_task_alloc(v3);
  v0[21] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_D4A350;
  return sub_D4530C(v0[10], v0[20], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_D4A350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_D4A518;
  else
    v3 = sub_D4A42C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_D4A3B4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v0[23] = v0[16];
  v1 = (void *)v0[11];
  v2 = type metadata accessor for MainActor(0);
  v3 = v1;
  v0[24] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_D4A470, v5, v6);
}

uint64_t sub_D4A42C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4A470()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(void **)(v0 + 88);
  swift_release();
  sub_D4A5D4(v1, v2);

  return swift_task_switch(sub_D4A4CC, 0, 0);
}

uint64_t sub_D4A4CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 88);
  swift_willThrow(a1);

  swift_task_dealloc(*(_QWORD *)(v1 + 112));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_D4A518()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 176);
  v1 = *(void **)(v0 + 88);
  v2 = type metadata accessor for MainActor(0);
  v3 = v1;
  *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_D4A470, v5, v6);
}

uint64_t sub_D4A598()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_D4A5D4(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  int *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int *v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29[7];
  _OWORD v30[2];
  __int128 v31;
  uint64_t v32;
  _OWORD v33[3];
  uint64_t v34;

  v3 = (uint64_t)v2;
  *(_QWORD *)&v30[0] = a1;
  swift_errorRetain(a1);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  if (swift_dynamicCast(v33, v30, v5, &type metadata for SharedListening.ErrorHandling.Error, 6))
  {
    v23 = *(int **)&v33[0];
    v22 = BYTE8(v33[0]);
    swift_beginAccess(v2 + 2, &v28, 0, 0);
    v6 = v2[5];
    v7 = v2[6];
    v8 = __swift_project_boxed_opaque_existential_1(v2 + 2, v6);
    v9 = *(_QWORD *)(v6 - 8);
    v10 = __chkstk_darwin(v8);
    v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v9 + 16))(v12, v10);
    v13 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v6);
    if (v13)
    {
      v14 = (uint64_t *)&v13[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
      swift_beginAccess(&v13[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], &v24, 0, 0);
      v15 = *v14;
      swift_retain();

    }
    else
    {
      v15 = 0;
    }
    v16 = a2;
    swift_retain();
    v17 = v23;
    v18 = v22;
    sub_D5B848(v23, v22);
    sub_D5BFA8(a2, v3, v15, v17, v18, v29);
    sub_5C090((uint64_t)v29, (uint64_t)v30, &qword_1503970);
    if (*((_QWORD *)&v31 + 1))
    {
      v33[0] = v30[0];
      v33[1] = v30[1];
      v33[2] = v31;
      v34 = v32;
      sub_55D1C(v3 + 16, (uint64_t)v25);
      v19 = v26;
      v20 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v20 + 40))(v33, v19, v20);
      sub_6A5824((uint64_t)v29);
      swift_release();

      swift_release();
      sub_D595B8(v17, v18);
      __swift_destroy_boxed_opaque_existential_1(v25);
    }
    else
    {
      swift_release();

      swift_release();
      sub_D595B8(v17, v18);
    }
  }
}

double sub_D4A840(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v29 = a3;
  v30 = a4;
  v28 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_5C238(a2, (uint64_t)v12, &qword_1503200);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_13BC2C0, v22 + 8, v17 | v20 | 7);
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  sub_5C090((uint64_t)v12, v23 + v18, &qword_1503200);
  *(_QWORD *)(v23 + v19) = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v23 + v21, v8, v5);
  v24 = v30;
  *(_QWORD *)(v23 + v22) = v30;
  v25 = v24;
  swift_retain();
  sub_C51ED8((uint64_t)v15, (uint64_t)&unk_1503988, v23);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D4AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  v7[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[16] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[17] = v10;
  v7[18] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v7[19] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v7[20] = v12;
  v7[21] = swift_task_alloc((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D4AACC, 0, 0);
}

uint64_t sub_D4AACC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[18];
  v4 = v0[19];
  v5 = v0[16];
  v6 = v0[17];
  v7 = v0[15];
  v8 = v0[13];
  v28 = v0[12];
  sub_5C238(v0[11], v1, &qword_1503200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v8, v7);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = (v2 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + v11 + 8) & ~v12;
  v14 = swift_allocObject(&unk_13BC2E8, v13 + v6, v9 | v12 | 7);
  v0[22] = v14;
  sub_5C090(v1, v14 + v10, &qword_1503200);
  *(_QWORD *)(v14 + v11) = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v14 + v13, v3, v7);
  v15 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v0[2] = _NSConcreteStackBlock;
  v0[6] = UIScreen.Dimensions.size.getter;
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_23E9F0;
  v0[5] = &block_descriptor_72_5;
  v16 = _Block_copy(v0 + 2);
  v17 = objc_msgSend(v15, "initWithBlock:", v16, swift_retain().n128_f64[0]);
  v0[23] = v17;
  _Block_release(v16);
  v18 = swift_release();
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v18);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = (_QWORD *)v0[12];
    v21 = v20 + 2;
    swift_beginAccess(v20 + 2, v0 + 8, 0, 0);
    v22 = v20[5];
    v23 = v20[6];
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v24 = *(_QWORD *)(v22 - 8);
    v25 = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    v0[24] = v25;
    (*(void (**)(void))(v24 + 16))();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
    v0[25] = v26;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v22);
    v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1503C30 + dword_1503C30);
    v27 = (_QWORD *)swift_task_alloc(unk_1503C34);
    v0[26] = v27;
    *v27 = v0;
    v27[1] = sub_D4AD4C;
    return v29((uint64_t)v17, (uint64_t)sub_D599A8, v14, v26);
  }
  return result;
}

uint64_t sub_D4AD4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_D4AE0C;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 192);

    swift_task_dealloc(v5);
    v4 = sub_D4ADC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_D4ADC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4AE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 192);

  swift_task_dealloc(v1);
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 224) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_D4AE84, v4, v5);
}

uint64_t sub_D4AE84()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void **)(v0 + 112);
  swift_release();
  sub_D4A5D4(v1, v2);
  return swift_task_switch(sub_D4AEDC, 0, 0);
}

uint64_t sub_D4AEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 176);

  swift_release(v2);
  swift_errorRelease(v1);
  v3 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_D4AF34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  v27 = a4;
  v28 = a1;
  v29 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_5C238(a2, (uint64_t)v12, &qword_1503200);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 40) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (char *)swift_allocObject(&unk_13BC338, v21 + v7, v17 | v20 | 7);
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  v23 = v28;
  *((_QWORD *)v22 + 4) = v28;
  sub_5C090((uint64_t)v12, (uint64_t)&v22[v18], &qword_1503200);
  *(_QWORD *)&v22[v19] = v29;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], v8, v5);
  v24 = v23;
  swift_retain();
  sub_D351A0((uint64_t)v15, (uint64_t)&unk_1503998, (uint64_t)v22);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D4B11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
  v7[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[15] = swift_task_alloc(v9);
  v7[16] = swift_task_alloc(v9);
  return swift_task_switch(sub_D4B1AC, 0, 0);
}

uint64_t sub_D4B1AC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t **v5;

  v1 = v0[12];
  v2 = (void *)v0[10];
  sub_5C238(v0[11], v0[14], &qword_1503200);
  v1 += 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  sub_55D1C(v1, (uint64_t)(v0 + 2));
  v3 = dword_1503964;
  v4 = v2;
  v5 = (uint64_t **)swift_task_alloc(v3);
  v0[17] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_D4B258;
  return sub_D4530C(v0[16], v0[10], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_D4B258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_D4B354;
  else
    v3 = sub_D4B2BC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_D4B2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_5BDB8(v1, v2, type metadata accessor for GroupActivitiesManager.Activity);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  CheckedContinuation.resume(returning:)(v2, v4);
  sub_5C0DC(v1, type metadata accessor for GroupActivitiesManager.Activity);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4B354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4B39C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for GroupActivityActivationResult(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v5);
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[15] = v7;
  v2[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_D4B440, 0, 0);
}

uint64_t sub_D4B440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "GroupActivitiesManager prepareForActivation", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  if ((GroupActivitiesManager.isSessionEligible.getter() & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 64);
    KeyPath = swift_getKeyPath(&unk_10A53D8);
    v8 = swift_getKeyPath(&unk_10A5400);
    static Published.subscript.getter((_QWORD *)(v0 + 49), v6, KeyPath, v8);
    swift_release(v8);
    swift_release(KeyPath);
    if ((*(_BYTE *)(v0 + 49) & 1) == 0)
    {
      v18 = *(_OWORD **)(v0 + 128);
      v19 = *(_QWORD *)(v0 + 112);
      v20 = *(_QWORD *)(v0 + 64);
      v18[2] = 0u;
      v18[3] = 0u;
      *v18 = 0u;
      v18[1] = 0u;
      v21 = (char *)v18 + *(int *)(v19 + 32);
      v22 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      sub_56024((uint64_t)v18, &qword_1503208);
      swift_beginAccess(v20 + 16, v0 + 16, 0, 0);
      sub_55D1C(v20 + 16, (uint64_t)v18);
      v23 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.prepareForActivation()[1]);
      *(_QWORD *)(v0 + 144) = v23;
      v24 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
      *v23 = v0;
      v23[1] = sub_D4B7C0;
      return GroupActivity.prepareForActivation()(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v24);
    }
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v29 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = 2;
      *(_QWORD *)(v0 + 40) = 2;
      *(_BYTE *)(v0 + 48) = 4;
      v15 = (char *)String.init<A>(describing:)(v0 + 40, &type metadata for SharedListening.ErrorHandling.Error);
      v17 = v16;
      *(_QWORD *)(v12 + 4) = sub_BA95EC(v15, v16, &v29);
      swift_bridgeObjectRelease(v17);
      _os_log_impl(&dword_0, v10, v11, "Prepare error=%{public}s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      v14 = 2;
    }
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 56))(*(_QWORD *)(v0 + 56), v14, 4, *(_QWORD *)(v0 + 112));
  v26 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4B7C0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_D4B814, 0, 0);
}

uint64_t sub_D4B814()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 16);
  v2 = v1(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 96);
  if (v5)
  {
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v43 = v11;
    *(_DWORD *)v10 = 136446210;
    v1(v7, v6, v9);
    v12 = (char *)String.init<A>(reflecting:)(v7, v9);
    v14 = v13;
    *(_QWORD *)(v10 + 4) = sub_BA95EC(v12, v13, &v43);
    swift_bridgeObjectRelease(v14);
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15(v6, v9);
    _os_log_impl(&dword_0, v3, v4, "User choice=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8);
    v15(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  }

  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 72);
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 80) + 104);
  v19(v17, enum case for GroupActivityActivationResult.activationPreferred(_:), v18);
  LOBYTE(v16) = static GroupActivityActivationResult.== infix(_:_:)(v16, v17);
  v15(v17, v18);
  v21 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 112);
  if ((v16 & 1) != 0)
  {
    v40 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 64);
    KeyPath = swift_getKeyPath(&unk_10A53D8);
    v41 = v23;
    v27 = swift_getKeyPath(&unk_10A5400);
    static Published.subscript.getter((_QWORD *)(v0 + 50), v25, KeyPath, v27);
    swift_release(v27);
    swift_release(KeyPath);
    v28 = *(_BYTE *)(v0 + 50);
    v29 = swift_getKeyPath(&unk_10A53D8);
    v30 = swift_getKeyPath(&unk_10A5400);
    *(_BYTE *)(v0 + 51) = 1;
    swift_retain(v25);
    static Published.subscript.setter(v0 + 51, v25, v29, v30);
    sub_D48790(v28);
    v15(v22, v40);
    sub_5BDB8(v20, v24, type metadata accessor for GroupActivitiesManager.Activity);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v24, 0, 4, v41);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 72);
    v33 = *(_QWORD *)(v0 + 56);
    v19(v31, enum case for GroupActivityActivationResult.activationDisabled(_:), v32);
    v34 = static GroupActivityActivationResult.== infix(_:_:)(v22, v31);
    v15(v31, v32);
    v15(v22, v32);
    if ((v34 & 1) != 0)
      v35 = 3;
    else
      v35 = 4;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v33, v35, 4, v23);
  }
  sub_5C0DC(v20, type metadata accessor for GroupActivitiesManager.Activity);
  v36 = *(_QWORD *)(v0 + 96);
  v37 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v37);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4BB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v24[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE620);
  __chkstk_darwin(v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for Signpost(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v12 = type metadata accessor for Logger(0);
  v13 = __swift_project_value_buffer(v12, (uint64_t)static Logger.groupActivities);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "beginMeasuringInitiationTime", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  if (qword_14FA680 != -1)
    swift_once(&qword_14FA680, sub_D7F6A0);
  v17 = (id)static OS_os_log.sharePlay;
  swift_retain(v1);
  Signpost.init(name:object:log:)((uint64_t)"InitiationToFirstAudioFrame", 27, 2, v1, v17, v11);
  Signpost.begin(dso:_:_:)((uint64_t)&dword_0, (uint64_t)"enableTelemetry=YES", 19, 2, (uint64_t)_swiftEmptyArrayStorage);
  sub_5BDB8((uint64_t)v11, (uint64_t)v7, type metadata accessor for Signpost);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v18 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, v24, 33, 0);
  sub_5C1F4((uint64_t)v7, v18, &qword_14FE620);
  swift_endAccess(v24);
  Date.init()(v19);
  sub_5C0DC((uint64_t)v11, type metadata accessor for Signpost);
  v20 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 0, 1, v20);
  v21 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  swift_beginAccess(v21, v24, 33, 0);
  sub_5C1F4((uint64_t)v4, v21, &qword_14FDE40);
  return swift_endAccess(v24);
}

uint64_t sub_D4BE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  v7 = *(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8);
  v6[14] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v6[15] = v8;
  v6[16] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[17] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[18] = v11;
  v6[19] = v12;
  return swift_task_switch(sub_D4BF00, v11, v12);
}

uint64_t sub_D4BF00()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  __n128 v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (void *)v0[11];
  if (v1)
  {
    v2 = unk_1503C24;
    v25 = (uint64_t (*)(uint64_t))((char *)&dword_1503C20 + dword_1503C20);
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    v0[20] = v4;
    *v4 = v0;
    v4[1] = sub_D4C184;
    return v25((uint64_t)v3);
  }
  else
  {
    v6 = v0[15];
    v7 = v0[16];
    v8 = v0[14];
    v9 = v0[12];
    sub_5BDB8(v0[13], v7, type metadata accessor for GroupActivitiesManager.Activity);
    v10 = *(unsigned __int8 *)(v8 + 80);
    v11 = (v10 + 24) & ~v10;
    v12 = swift_allocObject(&unk_13BC508, v11 + v6, v10 | 7);
    v0[22] = v12;
    *(_QWORD *)(v12 + 16) = v9;
    sub_5C04C(v7, v12 + v11, type metadata accessor for GroupActivitiesManager.Activity);
    v13 = objc_allocWithZone((Class)ICLiveLinkIdentity);
    v0[2] = _NSConcreteStackBlock;
    v0[6] = UIScreen.Dimensions.size.getter;
    v0[7] = 0;
    v0[3] = 1107296256;
    v0[4] = sub_23E9F0;
    v0[5] = &block_descriptor_135;
    v14 = _Block_copy(v0 + 2);
    v15 = objc_msgSend(v13, "initWithBlock:", v14, swift_retain().n128_f64[0]);
    v0[23] = v15;
    _Block_release(v14);
    v16 = swift_release();
    result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v16);
    if ((result & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v17 = (_QWORD *)v0[12];
      v18 = v17 + 2;
      swift_beginAccess(v17 + 2, v0 + 8, 0, 0);
      v19 = v17[5];
      v20 = v17[6];
      __swift_project_boxed_opaque_existential_1(v18, v19);
      v21 = *(_QWORD *)(v19 - 8);
      v22 = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      v0[24] = v22;
      (*(void (**)(void))(v21 + 16))();
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
      v0[25] = v23;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v19);
      v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1503C30 + dword_1503C30);
      v24 = (_QWORD *)swift_task_alloc(unk_1503C34);
      v0[26] = v24;
      *v24 = v0;
      v24[1] = sub_D4C224;
      return v26((uint64_t)v15, (uint64_t)sub_D5A214, v12, v23);
    }
  }
  return result;
}

uint64_t sub_D4C184(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t **v7;

  v4 = (*v2)[20];
  v5 = *v2;
  v5[21] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_D4C4A4, v5[18], v5[19]);
  v5[28] = a1;
  v7 = (uint64_t **)swift_task_alloc(dword_1503B7C);
  v5[29] = (uint64_t)v7;
  *v7 = v5;
  v7[1] = (uint64_t *)sub_D4C410;
  return sub_D4C5B8(a1, v5[13]);
}

uint64_t sub_D4C224()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_D4C2E4;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 192);

    swift_task_dealloc(v7);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_D4C298;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_D4C298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 136);

  swift_release(v1);
  swift_release(v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4C2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 200);
  v4 = *(void **)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 96);
  swift_release();

  swift_task_dealloc(v2);
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v7 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((_QWORD *)(v0 + 240), v5, KeyPath, v7);
  swift_release();
  swift_release();
  v8 = *(_BYTE *)(v0 + 240);
  v9 = swift_getKeyPath(&unk_10A53D8);
  v10 = swift_getKeyPath(&unk_10A5400);
  *(_BYTE *)(v0 + 241) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 241, v5, v9, v10);
  sub_D48790(v8);
  sub_D4A5D4(v1, 0);

  swift_release();
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4C410()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  return swift_task_switch(sub_D4C45C, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_D4C45C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4C4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v5 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((_QWORD *)(v0 + 242), v2, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = *(_BYTE *)(v0 + 242);
  v7 = swift_getKeyPath(&unk_10A53D8);
  v8 = swift_getKeyPath(&unk_10A5400);
  *(_BYTE *)(v0 + 243) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 243, v2, v7, v8);
  sub_D48790(v6);
  v9 = v3;
  sub_D4A5D4(v1, v3);

  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4C5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v3[31] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v5);
  v3[33] = swift_task_alloc(v5);
  v3[34] = swift_task_alloc(v5);
  return swift_task_switch(sub_D4C634, 0, 0);
}

uint64_t sub_D4C634()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(void **)(v0 + 224);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "sharedListeningProperties");
    *(_QWORD *)(v0 + 280) = v3;
    if (v3)
    {
      if (qword_14FA060 != -1)
        swift_once(&qword_14FA060, sub_D47274);
      v4 = v0 + 16;
      v5 = qword_1503170;
      *(_QWORD *)(v0 + 56) = v0 + 200;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_D4C974;
      v6 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v7 = (_QWORD *)(v0 + 80);
      v7[1] = 0x40000000;
      v7[2] = sub_C70B8C;
      v7[3] = &block_descriptor_139_1;
      v7[4] = v6;
      objc_msgSend(v2, "getRepresentativeObjectWithProperties:completion:", v5, v7);
      return swift_continuation_await(v4);
    }

  }
  v9 = *(_QWORD *)(v0 + 240);
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v11 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((_QWORD *)(v0 + 329), v9, KeyPath, v11);
  swift_release();
  swift_release();
  v12 = *(_BYTE *)(v0 + 329);
  v13 = swift_getKeyPath(&unk_10A53D8);
  v14 = swift_getKeyPath(&unk_10A5400);
  *(_BYTE *)(v0 + 328) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 328, v9, v13, v14);
  sub_D48790(v12);
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v15 = *(void **)(v0 + 224);
  v16 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v16, (uint64_t)static Logger.groupActivities);
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = *(_QWORD *)(v0 + 224);
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v29 = v22;
    *(_DWORD *)v21 = 136446210;
    *(_QWORD *)(v0 + 208) = v20;
    v23 = v17;
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15032C0);
    v25 = (char *)String.init<A>(reflecting:)(v0 + 208, v24);
    *(_QWORD *)(v21 + 4) = sub_BA95EC(v25, v26, &v29);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v18, v19, "Cannot activate intent=%{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {

  }
  v27 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4C974()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 288) = v1;
  if (v1)
    v2 = sub_D4CEE0;
  else
    v2 = sub_D4C9D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_D4C9D4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;

  v1 = (void *)v0[25];
  v0[37] = v1;
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v2 = type metadata accessor for Logger(0);
  v0[38] = __swift_project_value_buffer(v2, (uint64_t)static Logger.groupActivities);
  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v39 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[24] = v1;
    v8 = v3;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503B80);
    v10 = (char *)String.init<A>(describing:)(v0 + 24, v9);
    *(_QWORD *)(v6 + 4) = sub_BA95EC(v10, v11, &v39);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v4, v5, "Activity starting item=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v12 = v0[34];
  v13 = v0[30];
  sub_5BDB8(v0[29], v12, type metadata accessor for GroupActivitiesManager.Activity);
  sub_56024(v12, &qword_1503208);
  v13 += 16;
  swift_beginAccess(v13, v0 + 21, 0, 0);
  sub_55D1C(v13, v12);
  if (v3)
  {
    v14 = objc_msgSend(v3, "innermostModelObject");
    v15 = type metadata accessor for CodableModelObjectIdentity();
    v16 = swift_allocObject(v15, 24, 7);
    *(_QWORD *)(v16 + 16) = v14;
  }
  else
  {
    v17 = type metadata accessor for CodableModelObjectIdentity();
    v18 = swift_allocObject(v17, 24, 7);
    swift_deallocPartialClassInstance(v18, v17, 24, 7);
    v16 = 0;
  }
  v20 = v0[34];
  v19 = (void *)v0[35];
  swift_release();
  *(_QWORD *)(v20 + 56) = v16;
  v21 = type metadata accessor for CodableListeningProperties();
  v22 = swift_allocObject(v21, 24, 7);
  *(_QWORD *)(v22 + 16) = v19;
  v23 = v19;
  swift_release();
  *(_QWORD *)(v20 + 48) = v22;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v28 = v0[33];
    v27 = v0[34];
    v29 = v0[31];
    v30 = swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v39 = v31;
    *(_DWORD *)v30 = 136446210;
    swift_beginAccess(v27, v0 + 15, 0, 0);
    sub_5BDB8(v27, v28, type metadata accessor for GroupActivitiesManager.Activity);
    v32 = (char *)String.init<A>(describing:)(v28, v29);
    *(_QWORD *)(v30 + 4) = sub_BA95EC(v32, v33, &v39);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v25, v26, "üöÄ Activiting activity=%{public}s", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }

  v34 = v0[34];
  v35 = v0[32];
  swift_beginAccess(v34, v0 + 18, 0, 0);
  sub_5BDB8(v34, v35, type metadata accessor for GroupActivitiesManager.Activity);
  v36 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.activate()[1]);
  v0[39] = v36;
  v37 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *v36 = v0;
  v36[1] = sub_D4CDF8;
  return GroupActivity.activate()(v0[31], v37);
}

uint64_t sub_D4CDF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  sub_5C0DC(*(_QWORD *)(v2 + 256), type metadata accessor for GroupActivitiesManager.Activity);
  if (v0)
    v4 = sub_D4D2A0;
  else
    v4 = sub_D4CE6C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_D4CE6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(void **)(v0 + 224);

  sub_5C0DC(v2, type metadata accessor for GroupActivitiesManager.Activity);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D4CEE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36[2];

  v2 = v1[36];
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v1[37] = 0;
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v3 = type metadata accessor for Logger(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.groupActivities);
  v1[38] = v4;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v36[0] = v8;
    *(_DWORD *)v7 = 136446210;
    v1[24] = 0;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503B80);
    v10 = (char *)String.init<A>(describing:)(v1 + 24, v9);
    *(_QWORD *)(v7 + 4) = sub_BA95EC(v10, v11, v36);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "Activity starting item=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }

  v12 = v1[34];
  v13 = v1[30];
  sub_5BDB8(v1[29], v12, type metadata accessor for GroupActivitiesManager.Activity);
  sub_56024(v12, &qword_1503208);
  v13 += 16;
  swift_beginAccess(v13, v1 + 21, 0, 0);
  sub_55D1C(v13, v12);
  v14 = type metadata accessor for CodableModelObjectIdentity();
  v15 = swift_allocObject(v14, 24, 7);
  swift_deallocPartialClassInstance(v15, v14, 24, 7);
  v17 = v1[34];
  v16 = (void *)v1[35];
  swift_release();
  *(_QWORD *)(v17 + 56) = 0;
  v18 = type metadata accessor for CodableListeningProperties();
  v19 = swift_allocObject(v18, 24, 7);
  *(_QWORD *)(v19 + 16) = v16;
  v20 = v16;
  swift_release();
  *(_QWORD *)(v17 + 48) = v19;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v25 = v1[33];
    v24 = v1[34];
    v26 = v1[31];
    v27 = swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v36[0] = v28;
    *(_DWORD *)v27 = 136446210;
    swift_beginAccess(v24, v1 + 15, 0, 0);
    sub_5BDB8(v24, v25, type metadata accessor for GroupActivitiesManager.Activity);
    v29 = (char *)String.init<A>(describing:)(v25, v26);
    *(_QWORD *)(v27 + 4) = sub_BA95EC(v29, v30, v36);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v22, v23, "üöÄ Activiting activity=%{public}s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }

  v31 = v1[34];
  v32 = v1[32];
  swift_beginAccess(v31, v1 + 18, 0, 0);
  sub_5BDB8(v31, v32, type metadata accessor for GroupActivitiesManager.Activity);
  v33 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.activate()[1]);
  v1[39] = v33;
  v34 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *v33 = v1;
  v33[1] = sub_D4CDF8;
  return GroupActivity.activate()(v1[31], v34);
}

uint64_t sub_D4D2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 320);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 320);
    v6 = *(void **)(v0 + 296);
    v7 = *(void **)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 272);
    v8 = *(void **)(v0 + 224);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v23 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 216) = v5;
    swift_errorRetain(v5);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
    v12 = (char *)String.init<A>(describing:)(v0 + 216, v11);
    *(_QWORD *)(v9 + 4) = sub_BA95EC(v12, v13, &v23);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl(&dword_0, v3, v4, "Activation failed=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v5);
    v14 = v22;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 320);
    v16 = *(void **)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 272);
    v18 = *(void **)(v0 + 224);

    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

    v14 = v17;
  }
  sub_5C0DC(v14, type metadata accessor for GroupActivitiesManager.Activity);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_D4D49C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  double result;
  uint64_t v18;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_5BDB8(a3, (uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for GroupActivitiesManager.Activity);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 48) & ~v13;
  v15 = (_QWORD *)swift_allocObject(&unk_13BC570, v14 + v8, v13 | 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a2;
  v15[5] = a1;
  sub_5C04C((uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14, type metadata accessor for GroupActivitiesManager.Activity);
  v16 = a1;
  swift_retain();
  sub_C51ED8((uint64_t)v11, (uint64_t)&unk_1503B90, (uint64_t)v15);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_D4D5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1503B7C);
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_C3150;
  return sub_D4C5B8(a5, a6);
}

void GroupActivitiesManager.sessionForReactionAssociation()()
{
  uint64_t v0;

  if ((GroupActivitiesManager.hasJoined.getter() & 1) != 0)
    swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
}

void sub_D4D67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[3];

  v1 = v0;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503B70);
  __chkstk_darwin(v85);
  v3 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503338);
  v5 = __chkstk_darwin(v4);
  v84 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v86 = (uint64_t)&v77 - v8;
  v9 = __chkstk_darwin(v7);
  v87 = (uint64_t)&v77 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v77 - v11;
  v13 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v77 - v19;
  v21 = __chkstk_darwin(v18);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v77 - v23;
  __chkstk_darwin(v22);
  v27 = (char *)&v77 - v26;
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (!v28)
    return;
  v81 = v25;
  v83 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v29 = swift_retain(v28);
  GroupSession.activity.getter(v29);
  swift_release(v28);
  v30 = *((_QWORD *)v27 + 6);
  if (!v30)
  {
    sub_5C0DC((uint64_t)v27, type metadata accessor for GroupActivitiesManager.Activity);
    return;
  }
  v80 = v3;
  v31 = *(id *)(v30 + 16);
  sub_5C0DC((uint64_t)v27, type metadata accessor for GroupActivitiesManager.Activity);
  v32 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
  v33 = swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, v88, 33, 0);
  v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48);
  if (!v82(v32, 1, v13, v33))
  {
    v34 = type metadata accessor for CodableListeningProperties();
    v35 = swift_allocObject(v34, 24, 7);
    *(_QWORD *)(v35 + 16) = v31;
    v79 = v17;
    v36 = v24;
    v37 = *(_QWORD *)(v32 + 48);
    v38 = v31;
    v39 = v37;
    v24 = v36;
    v17 = v79;
    swift_release(v39);
    *(_QWORD *)(v32 + 48) = v35;
  }
  swift_endAccess(v88);
  if ((GroupActivitiesManager.hasJoined.getter() & 1) == 0)
    goto LABEL_16;
  sub_5C238(v32, (uint64_t)v12, &qword_1503338);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v82)(v12, 1, v13) == 1)
  {

    sub_56024((uint64_t)v12, &qword_1503338);
    return;
  }
  sub_5C04C((uint64_t)v12, (uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
  v40 = v87;
  sub_5BDB8((uint64_t)v24, v87, type metadata accessor for GroupActivitiesManager.Activity);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
  v42 = 1;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v40, 0, 1, v13);
  v44 = *(_QWORD *)(v1 + v83);
  v78 = v1;
  if (v44)
  {
    v45 = swift_retain(v44);
    v46 = v86;
    GroupSession.activity.getter(v45);
    v43 = swift_release(v44);
    v42 = 0;
  }
  else
  {
    v46 = v86;
  }
  v41(v46, v42, 1, v13, v43);
  v47 = (uint64_t)v80;
  v48 = (uint64_t)&v80[*(int *)(v85 + 48)];
  v49 = v87;
  sub_5C238(v87, (uint64_t)v80, &qword_1503338);
  sub_5C238(v46, v48, &qword_1503338);
  v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v82;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v82)(v47, 1, v13) == 1)
  {
    sub_56024(v46, &qword_1503338);
    sub_56024(v49, &qword_1503338);
    if (v50(v48, 1, v13) == 1)
    {
      sub_56024((uint64_t)v80, &qword_1503338);
LABEL_15:
      sub_5C0DC((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
LABEL_16:

      return;
    }
    v53 = &qword_1503B70;
  }
  else
  {
    v51 = v47;
    v52 = v84;
    sub_5C238(v51, v84, &qword_1503338);
    if (v50(v48, 1, v13) == 1)
    {
      v53 = &qword_1503B70;
    }
    else
    {
      v54 = v48;
      v55 = v81;
      sub_5C04C(v54, v81, type metadata accessor for GroupActivitiesManager.Activity);
      v56 = *(_QWORD *)(v52 + 56);
      if (v56)
      {
        v57 = *(_QWORD *)(v55 + 56);
        if (v57)
        {
          v58 = *(void **)(v57 + 16);
          v59 = v55;
          v60 = *(id *)(v56 + 16);
          v61 = v58;
          v62 = objc_msgSend(v60, "identifiers");
          v63 = v24;
          v64 = objc_msgSend(v61, "identifiers");
          LODWORD(v85) = objc_msgSend(v62, "intersectsSet:", v64);

          v24 = v63;
          sub_5C0DC(v59, type metadata accessor for GroupActivitiesManager.Activity);
          sub_56024(v86, &qword_1503338);
          sub_56024(v87, &qword_1503338);
          sub_5C0DC(v84, type metadata accessor for GroupActivitiesManager.Activity);
          sub_56024((uint64_t)v80, &qword_1503338);
          if ((v85 & 1) != 0)
            goto LABEL_15;
          goto LABEL_28;
        }
      }
      sub_5C0DC(v55, type metadata accessor for GroupActivitiesManager.Activity);
      v53 = &qword_1503338;
    }
    sub_56024(v86, &qword_1503338);
    sub_56024(v49, &qword_1503338);
    sub_5C0DC(v52, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_56024((uint64_t)v80, v53);
LABEL_28:
  v65 = v13;
  v66 = *(_QWORD *)(v78 + v83);
  if (v66)
  {
    sub_5BDB8((uint64_t)v24, (uint64_t)v20, type metadata accessor for GroupActivitiesManager.Activity);
    swift_retain(v66);
    GroupSession.activity.setter(v20);
    swift_release(v66);
  }
  v67 = v31;
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v68 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v68, (uint64_t)static Logger.groupActivities);
  v69 = sub_5BDB8((uint64_t)v24, (uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = swift_slowAlloc(12, -1);
    v73 = swift_slowAlloc(32, -1);
    v88[0] = v73;
    *(_DWORD *)v72 = 136446210;
    sub_5BDB8((uint64_t)v17, (uint64_t)v20, type metadata accessor for GroupActivitiesManager.Activity);
    v74 = (char *)String.init<A>(describing:)(v20, v65);
    v76 = v75;
    *(_QWORD *)(v72 + 4) = sub_BA95EC(v74, v75, v88);
    swift_bridgeObjectRelease(v76);
    sub_5C0DC((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
    _os_log_impl(&dword_0, v70, v71, "Updating session activity=%{public}s", (uint8_t *)v72, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1, -1);
    swift_slowDealloc(v72, -1, -1);

  }
  else
  {

    sub_5C0DC((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_5C0DC((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
}

void (*sub_D4DE40(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, a1, 33, 0);
  return sub_D4DE88;
}

void sub_D4DE88(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_D4D67C();
}

void sub_D4DEB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, char);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  __n128 v64;
  __n128 v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  __n128 v89;
  __n128 v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  __n128 v113;
  id v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t KeyPath;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  char v180[8];
  id v181;
  uint64_t v182;

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v173 = *(_QWORD *)(v2 - 8);
  v174 = v2;
  __chkstk_darwin(v2);
  v172 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039B0);
  v176 = *(_QWORD *)(v4 - 8);
  v177 = v4;
  __chkstk_darwin(v4);
  v175 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039B8);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039C0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039C8);
  v158 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v157 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039D0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v159 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039D8);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500E40);
  v150 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v15 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039F0);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_15039F8);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503338);
  __chkstk_darwin(v18);
  v20 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v21 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v21, (uint64_t)static Logger.groupActivities);
  v22 = swift_retain_n(v0, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = (void *)swift_slowAlloc(32, -1);
    v181 = v26;
    *(_DWORD *)v25 = 136446210;
    v182 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    swift_retain(v182);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503A58);
    v28 = (char *)String.init<A>(reflecting:)(&v182, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 4) = sub_BA95EC(v28, v29, (uint64_t *)&v181);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v30);
    _os_log_impl(&dword_0, v23, v24, "üì≤ Receiving a new session=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v31)
  {
    v179 = swift_retain(v31);
    GroupSession.activity.getter(v179);
    v32 = type metadata accessor for GroupActivitiesManager.Activity(0);
    v33 = *(_QWORD *)(v32 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v20, 0, 1, v32);
    v34 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &v181, 33, 0);
    sub_103FC0((uint64_t)v20, v34, &qword_1503338);
    swift_endAccess(&v181);
    sub_D4D67C();
    sub_56024((uint64_t)v20, &qword_1503338);
    v35 = sub_D4DE40((uint64_t)&v182);
    v37 = v36;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1, v32))
    {
      swift_beginAccess(v1 + 16, v180, 0, 0);
      sub_55D1C(v1 + 16, (uint64_t)&v181);
      sub_5C1F4((uint64_t)&v181, v37, &qword_1503208);
    }
    v35((uint64_t)&v182, 0);
    v38 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
    v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
    v40 = *(char **)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
    *(_OWORD *)v38 = xmmword_1060DF0;
    *(_BYTE *)(v38 + 16) = 0;
    sub_D56278(v39, v40);
    if (qword_14F9D68 != -1)
      swift_once(&qword_14F9D68, sub_C3FD38);
    swift_beginAccess(static ApplicationCapabilities.Controller.shared+ OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, &v181, 33, 0);
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE030);
    Published.projectedValue.getter(v41);
    swift_endAccess(&v181);
    v42 = sub_5C150((unint64_t *)&unk_1500F48, &qword_1500E40, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v43 = sub_D59CE0();
    v44 = v151;
    v45 = v178;
    Publisher<>.removeDuplicates()(v178, v42, v43);
    (*(void (**)(char *, unint64_t))(v150 + 8))(v15, v45);
    v46 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
    v181 = (id)static OS_dispatch_queue.main.getter(v46, v47, v48, v49, v50, v51, v52, v53, v148, v149, v150, v151, v152, v153, v154);
    v54 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v149 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
    v149(v13, 1, 1, v54);
    v55 = sub_5C150((unint64_t *)&unk_1503A08, &qword_15039F0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v178 = sub_D0BE38();
    v56 = v154;
    v57 = v153;
    Publisher.receive<A>(on:options:)(&v181, v13, v153, v46, v55, v178);
    sub_56024((uint64_t)v13, (uint64_t *)&unk_15039E0);

    (*(void (**)(char *, uint64_t))(v152 + 8))(v44, v57);
    v58 = swift_allocObject(&unk_13BC360, 24, 7);
    swift_weakInit(v58 + 16, v1);
    v59 = sub_5C150(&qword_1503A18, &qword_15039F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v60 = v156;
    v61 = Publisher<>.sink(receiveValue:)(sub_D59D48, v58, v156, v59);
    v62 = swift_release(v58);
    (*(void (**)(char *, uint64_t, __n128))(v155 + 8))(v56, v60, v62);
    v63 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions;
    v64 = swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions, &v181, 33, 0);
    AnyCancellable.store(in:)(v63, v64);
    swift_endAccess(&v181);
    v65 = swift_release(v61);
    v66 = v157;
    v67 = GroupSession.$activeParticipants.getter(v65);
    v68 = v46;
    v181 = (id)static OS_dispatch_queue.main.getter(v67, v69, v70, v71, v72, v73, v74, v75, v46, v149, v150, v151, v152, v153, v154);
    v150 = v54;
    v76 = v149;
    v149(v13, 1, 1, v54);
    v77 = sub_5C150(&qword_1503A20, &qword_15039C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v78 = v159;
    v79 = v160;
    v80 = v178;
    Publisher.receive<A>(on:options:)(&v181, v13, v160, v68, v77, v178);
    sub_56024((uint64_t)v13, (uint64_t *)&unk_15039E0);

    (*(void (**)(char *, uint64_t))(v158 + 8))(v66, v79);
    v81 = sub_5C150(&qword_1503A28, &qword_15039D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v82 = v163;
    v83 = v162;
    Publisher.map<A>(_:)(sub_D4FB38, 0, v162, &type metadata for Int, v81);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v78, v83);
    v84 = swift_allocObject(&unk_13BC360, 24, 7);
    swift_weakInit(v84 + 16, v1);
    v85 = sub_5C150(&qword_1503A30, &qword_15039D8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v86 = v165;
    v87 = Publisher<>.sink(receiveValue:)(sub_D59D50, v84, v165, v85);
    v88 = swift_release(v84);
    (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v82, v86, v88);
    v156 = v63;
    v89 = swift_beginAccess(v63, &v181, 33, 0);
    AnyCancellable.store(in:)(v63, v89);
    swift_endAccess(&v181);
    v90 = swift_release(v87);
    v91 = v166;
    v92 = v179;
    v93 = GroupSession.$state.getter(v90);
    v94 = v148;
    v181 = (id)static OS_dispatch_queue.main.getter(v93, v95, v96, v97, v98, v99, v100, v101, v148, v149, v150, v151, v152, v153, v154);
    v76(v13, 1, 1, v54);
    v102 = sub_5C150(&qword_1503A38, &qword_15039B8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v103 = v169;
    v104 = v168;
    v105 = v94;
    Publisher.receive<A>(on:options:)(&v181, v13, v168, v94, v102, v80);
    sub_56024((uint64_t)v13, (uint64_t *)&unk_15039E0);

    (*(void (**)(char *, uint64_t))(v167 + 8))(v91, v104);
    v106 = swift_allocObject(&unk_13BC360, 24, 7);
    swift_weakInit(v106 + 16, v1);
    v107 = swift_allocObject(&unk_13BC388, 32, 7);
    *(_QWORD *)(v107 + 16) = v106;
    *(_QWORD *)(v107 + 24) = v92;
    v108 = sub_5C150((unint64_t *)&unk_1503A40, &qword_15039C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_retain(v92);
    v109 = v171;
    v110 = Publisher<>.sink(receiveValue:)(sub_D59D84, v107, v171, v108);
    v111 = swift_release(v107);
    (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v103, v109, v111);
    v112 = v156;
    v113 = swift_beginAccess(v156, &v181, 33, 0);
    AnyCancellable.store(in:)(v112, v113);
    swift_endAccess(&v181);
    swift_release(v110);
    v114 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v115 = v172;
    NSNotificationCenter.publisher(for:object:)(MPCPlaybackEngineFirstAudioFrameNotification, 0);

    v181 = (id)static OS_dispatch_queue.main.getter(v116, v117, v118, v119, v120, v121, v122, v123, v148, v149, v150, v151, v152, v153, v154);
    v76(v13, 1, 1, v150);
    v124 = sub_4DD24((unint64_t *)&qword_15000E0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    v126 = v174;
    v125 = v175;
    Publisher.receive<A>(on:options:)(&v181, v13, v174, v105, v124, v178);
    sub_56024((uint64_t)v13, (uint64_t *)&unk_15039E0);

    (*(void (**)(char *, uint64_t))(v173 + 8))(v115, v126);
    v127 = swift_allocObject(&unk_13BC360, 24, 7);
    swift_weakInit(v127 + 16, v1);
    v128 = sub_5C150(&qword_1503A50, &qword_15039B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v129 = v177;
    v130 = Publisher<>.sink(receiveValue:)(sub_D59D8C, v127, v177, v128);
    v131 = swift_release(v127);
    (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v125, v129, v131);
    v132 = swift_beginAccess(v112, &v181, 33, 0);
    AnyCancellable.store(in:)(v112, v132);
    swift_endAccess(&v181);
    swift_release(v179);
    swift_release(v130);
  }
  else
  {
    v133 = type metadata accessor for GroupActivitiesManager.Activity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v20, 1, 1, v133);
    v134 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &v181, 33, 0);
    sub_103FC0((uint64_t)v20, v134, &qword_1503338);
    swift_endAccess(&v181);
    sub_D4D67C();
    sub_56024((uint64_t)v20, &qword_1503338);
    v135 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions);
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions, &v181, 0, 0);
    v136 = *v135;
    v137 = swift_bridgeObjectRetain();
    sub_D419F8(v137);
    swift_bridgeObjectRelease(v136);
    v138 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = 0;
    swift_release(v138);
    KeyPath = swift_getKeyPath(&unk_10A5420);
    v140 = swift_getKeyPath(&unk_10A5448);
    static Published.subscript.getter(&v182, v1, KeyPath, v140);
    swift_release(KeyPath);
    swift_release(v140);
    v141 = v182;
    v142 = swift_getKeyPath(&unk_10A5420);
    v143 = swift_getKeyPath(&unk_10A5448);
    v182 = 0;
    swift_retain(v1);
    static Published.subscript.setter(&v182, v1, v142, v143);
    sub_D4837C(v141);
    v144 = (_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v182, 1, 0);
    *v144 = 0;
    v145 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
    v146 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
    v147 = *(char **)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
    *(_OWORD *)v145 = xmmword_1060DF0;
    *(_BYTE *)(v145 + 16) = 0;
    sub_D56278(v146, v147);
  }
}

double sub_D4EE30(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _BYTE v25[24];
  _QWORD v26[3];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v20 = *((_QWORD *)a1 + 2);
  v21 = *((_QWORD *)a1 + 1);
  v24 = *(_OWORD *)(a1 + 24);
  v5 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v18 = *((_QWORD *)a1 + 10);
  v19 = *((_QWORD *)a1 + 9);
  v23 = a1[88];
  v17 = *((_QWORD *)a1 + 12);
  v22 = a1[104];
  v9 = a2 + 16;
  v10 = *((_QWORD *)a1 + 14);
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v13 = Strong;
    v14 = 256;
    if (!v3)
      v14 = 0;
    v15 = v14 | v2;
    v16 = 0x10000;
    if (!v4)
      v16 = 0;
    v26[0] = v15 | v16;
    v26[1] = v21;
    v26[2] = v20;
    v27 = v24;
    v28 = v5;
    v29 = v6;
    v30 = v7;
    v31 = v8;
    v32 = v19;
    v33 = v18;
    v34 = v23;
    v35 = v17;
    v36 = v22;
    v37 = v10;
    sub_D4EF58((uint64_t)v26);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_D4EF58(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  char *v74;
  uint8_t *v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint64_t v86;
  char *v87;
  uint8_t *v88;
  uint8_t *v89;
  NSObject *v90;
  os_log_type_t v91;
  char *v92;
  uint8_t *v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[15];
  char v135[24];
  uint64_t v136;

  sub_5C090(a1, (uint64_t)v134, &qword_1503A60);
  v2 = v134[0];
  v3 = v134[4];
  v122 = v134[3];
  v4 = v134[7];
  v6 = v134[9];
  v5 = (char *)v134[10];
  v7 = v134[12];
  v8 = v134[14];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v9);
  v111 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = a1;
  sub_5C090(a1, (uint64_t)v135, &qword_1503A60);
  if (v136)
  {
    v121 = v2 & 1;
    v11 = v122;
  }
  else
  {
    if (qword_14F9D68 != -1)
      swift_once(&qword_14F9D68, sub_C3FD38);
    v12 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_10A54B0);
    v14 = swift_getKeyPath(&unk_10A54D8);
    static Published.subscript.getter(&v124, v12, KeyPath, v14);
    swift_release(v14);
    swift_release(KeyPath);
    v121 = v124;
    v11 = v127;
    v3 = v128;
    v4 = v129;
    v6 = v130;
    v5 = v131;
    v7 = v132;
    v8 = v133;
  }
  v120 = v5;
  v15 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_D59D94(v118);
  v16 = v3;
  v17 = sub_C521F8(0, v11);
  v18 = sub_C521F8(2u, v11);
  v122 = v11;
  swift_bridgeObjectRelease(v11);
  v115 = v16;
  swift_bridgeObjectRelease(v16);
  v116 = v4;
  swift_bridgeObjectRelease(v4);
  v113 = v6;
  swift_bridgeObjectRelease(v6);
  v114 = v7;
  swift_bridgeObjectRelease(v7);
  v117 = v8;
  swift_bridgeObjectRelease(v8);
  v19 = v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
  v20 = *(_QWORD *)(v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
  v21 = *(char **)(v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
  v22 = *(unsigned __int8 *)(v119 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 16);
  LODWORD(v118) = v18;
  if ((v18 & 1) != 0)
    v23 = 256;
  else
    v23 = 0;
  v24 = v23 & 0xFFFFFFFFFFFFFFFELL | v17 & 1;
  if (v21 == (_BYTE *)&dword_0 + 1)
  {
    v25 = v15;
    sub_D56278(v20, (_BYTE *)&dword_0 + 1);
    v26 = v120;
    sub_D56278(v24, v120);
    v27 = v15;
    v28 = v26;
    goto LABEL_23;
  }
  v27 = v15;
  v28 = v120;
  if ((v17 & 1) != ((v20 & 1) == 0) && ((v118 ^ ((v20 & 0x100) == 0)) & 1) != 0)
  {
    if (v21)
    {
      if (!v120)
        goto LABEL_23;
      v110 = sub_4E684(0, &qword_1503900, ICMusicSubscriptionStatus_ptr);
      v29 = v27;
      v109 = v29;
      sub_D59F20(v20, v21);
      LOBYTE(v29) = static NSObject.== infix(_:_:)(v21, v29);

      sub_D56278(v20, v21);
      if ((v29 & 1) == 0)
        goto LABEL_23;
    }
    else if (v120)
    {
      goto LABEL_23;
    }
    if (((v121 ^ v22) & 1) == 0)
    {
      if (qword_14FA068 != -1)
        swift_once(&qword_14FA068, sub_D54AE0);
      v30 = type metadata accessor for Logger(0);
      v31 = __swift_project_value_buffer(v30, (uint64_t)static Logger.groupActivities);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter();
      v34 = os_log_type_enabled(v32, v33);
      v36 = v116;
      v35 = v117;
      v38 = v113;
      v37 = v114;
      if (v34)
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_0, v32, v33, "Eligibility context didn't change.", v39, 2u);
        swift_slowDealloc(v39, -1, -1);

        swift_bridgeObjectRelease(v122);
        swift_bridgeObjectRelease(v115);
        swift_bridgeObjectRelease(v36);
        swift_bridgeObjectRelease(v38);
        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v35);
        return;
      }
      swift_bridgeObjectRelease(v122);
      swift_bridgeObjectRelease(v115);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v38);

      swift_bridgeObjectRelease(v37);
      v99 = v35;
      goto LABEL_57;
    }
  }
LABEL_23:
  v40 = *(_QWORD *)v19;
  v41 = *(char **)(v19 + 8);
  *(_QWORD *)v19 = v24;
  *(_QWORD *)(v19 + 8) = v28;
  *(_BYTE *)(v19 + 16) = v121;
  v42 = v27;
  sub_D56278(v40, v41);
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v43 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v43, (uint64_t)static Logger.groupActivities);
  v44 = v42;
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  v47 = os_log_type_enabled(v45, v46);
  v112 = v17;
  if (v47)
  {
    v48 = swift_slowAlloc(12, -1);
    v49 = swift_slowAlloc(32, -1);
    v123 = v49;
    *(_DWORD *)v48 = 136446210;
    LOBYTE(v124) = v17 & 1;
    BYTE1(v124) = v118 & 1;
    v50 = v120;
    v125 = v120;
    v126 = v121;
    v51 = v44;
    v52 = v44;
    v53 = (char *)String.init<A>(reflecting:)(&v124, &type metadata for GroupActivitiesManager.EligibilityContext);
    v55 = v54;
    *(_QWORD *)(v48 + 4) = sub_BA95EC(v53, v54, &v123);
    swift_bridgeObjectRelease(v55);

    v44 = v51;
    _os_log_impl(&dword_0, v45, v46, "üõÇ Checking eligibility with context=%{public}s", (uint8_t *)v48, 0xCu);
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1, -1);
    swift_slowDealloc(v48, -1, -1);

    v58 = v116;
    v57 = v117;
    v59 = v122;
    if (!v50)
      goto LABEL_30;
  }
  else
  {

    v58 = v116;
    v57 = v117;
    v59 = v122;
    if (!v120)
      goto LABEL_30;
  }
  v56 = objc_msgSend(v44, "capabilities");
  if ((v56 & 1) != 0)
  {
    v78 = type metadata accessor for TaskPriority(0);
    v79 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v111, 1, 1, v78);
    v80 = (_QWORD *)swift_allocObject(&unk_13BC400, 40, 7);
    v80[2] = 0;
    v80[3] = 0;
    v81 = v119;
    v80[4] = v119;
    swift_retain(v81);
    v71 = sub_C51ED8(v79, (uint64_t)&unk_1503A90, (uint64_t)v80);
    swift_bridgeObjectRelease(v59);
    v82 = v115;
LABEL_50:
    swift_bridgeObjectRelease(v82);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v113);

LABEL_51:
    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v57);
    swift_release(v71);
    return;
  }
LABEL_30:
  if ((v112 & 1) == 0)
  {
    v72 = Logger.logObject.getter(v56);
    v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = v44;
      v75 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_0, v72, v73, "üõÇ Music services restricted", v75, 2u);
      v76 = v75;
      v44 = v74;
      swift_slowDealloc(v76, -1, -1);
    }

    sub_D53504(0);
    swift_bridgeObjectRelease(v59);
    v77 = v115;
    goto LABEL_45;
  }
  if ((v118 & 1) == 0)
  {
    v83 = Logger.logObject.getter(v56);
    v84 = static os_log_type_t.default.getter();
    v85 = os_log_type_enabled(v83, v84);
    v86 = v115;
    if (v85)
    {
      v87 = v44;
      v88 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v88 = 0;
      _os_log_impl(&dword_0, v83, v84, "üõÇ Apple Music content disabled", v88, 2u);
      v89 = v88;
      v44 = v87;
      swift_slowDealloc(v89, -1, -1);
    }

    sub_D53504(1);
    swift_bridgeObjectRelease(v122);
    v77 = v86;
LABEL_45:
    swift_bridgeObjectRelease(v77);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v113);

LABEL_46:
    swift_bridgeObjectRelease(v114);
    swift_bridgeObjectRelease(v57);
    return;
  }
  v60 = v115;
  if ((v121 & 1) == 0)
  {
    v90 = Logger.logObject.getter(v56);
    v91 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = v44;
      v93 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v93 = 0;
      _os_log_impl(&dword_0, v90, v91, "üõÇ User is not signed in -> request authentication", v93, 2u);
      v94 = v93;
      v44 = v92;
      swift_slowDealloc(v94, -1, -1);
    }

    v95 = type metadata accessor for TaskPriority(0);
    v96 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v111, 1, 1, v95);
    v97 = (_QWORD *)swift_allocObject(&unk_13BC3B0, 40, 7);
    v97[2] = 0;
    v97[3] = 0;
    v98 = v119;
    v97[4] = v119;
    swift_retain(v98);
    v71 = sub_C51ED8(v96, (uint64_t)&unk_1503A70, (uint64_t)v97);
    swift_bridgeObjectRelease(v59);
    v82 = v60;
    goto LABEL_50;
  }
  v61 = v120;
  if (v120)
  {
    v62 = v44;
    v63 = objc_msgSend(v62, "capabilities");
    if ((v63 & 1) == 0)
    {
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v66 = 0;
        _os_log_impl(&dword_0, v64, v65, "üõÇ User is not a subscriber -> up sell", v66, 2u);
        swift_slowDealloc(v66, -1, -1);
      }

      v67 = type metadata accessor for TaskPriority(0);
      v68 = (uint64_t)v111;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v111, 1, 1, v67);
      v69 = (_QWORD *)swift_allocObject(&unk_13BC3D8, 40, 7);
      v69[2] = 0;
      v69[3] = 0;
      v70 = v119;
      v69[4] = v119;
      swift_retain(v70);
      v71 = sub_C51ED8(v68, (uint64_t)&unk_1503A80, (uint64_t)v69);
      swift_bridgeObjectRelease(v122);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v113);

      goto LABEL_51;
    }

  }
  v100 = v44;
  v32 = Logger.logObject.getter(v100);
  v101 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v101))
  {
    v102 = swift_slowAlloc(12, -1);
    v103 = swift_slowAlloc(32, -1);
    v123 = v103;
    *(_DWORD *)v102 = 136446210;
    LOWORD(v124) = 257;
    v125 = v61;
    v126 = v121;
    v104 = v100;
    v105 = (char *)String.init<A>(reflecting:)(&v124, &type metadata for GroupActivitiesManager.EligibilityContext);
    v107 = v106;
    *(_QWORD *)(v102 + 4) = sub_BA95EC(v105, v106, &v123);
    swift_bridgeObjectRelease(v107);

    _os_log_impl(&dword_0, v32, v101, "üõÇ Unknown prepare case with=%{public}s", (uint8_t *)v102, 0xCu);
    swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v103, -1, -1);
    swift_slowDealloc(v102, -1, -1);

    swift_bridgeObjectRelease(v122);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v113);
    goto LABEL_46;
  }
  swift_bridgeObjectRelease(v122);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v113);

  swift_bridgeObjectRelease(v114);
  v99 = v57;
LABEL_57:
  swift_bridgeObjectRelease(v99);

}

uint64_t sub_D4FB38@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

double sub_D4FB48(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    KeyPath = swift_getKeyPath(&unk_10A5420);
    v8 = swift_getKeyPath(&unk_10A5448);
    static Published.subscript.getter(&v12, v6, KeyPath, v8);
    swift_release(v8);
    swift_release(KeyPath);
    v9 = v12;
    v10 = swift_getKeyPath(&unk_10A5420);
    v11 = swift_getKeyPath(&unk_10A5448);
    v12 = v2;
    swift_retain(v6);
    static Published.subscript.setter(&v12, v6, v10, v11);
    sub_D4837C(v9);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_D4FC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  const char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint8_t *v59;
  os_signpost_id_t v60;
  void (*v61)(char *, uint64_t);
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  char v81[24];
  char v82[24];
  _OWORD v83[7];
  uint64_t v84;

  v70 = type metadata accessor for OSSignpostError(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSSignpostID(0);
  v72 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v71 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v75 = (char *)&v67 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15031C8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v67 - v19;
  v76 = a2 + 16;
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v21 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v21, (uint64_t)static Logger.groupActivities);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v77 = a1;
  v23 = v22(v20, a1, v11);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  v26 = os_log_type_enabled(v24, v25);
  v73 = v7;
  if (v26)
  {
    v27 = swift_slowAlloc(12, -1);
    v74 = a3;
    v28 = v27;
    v29 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v83[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v22(v18, (uint64_t)v20, v11);
    v30 = (char *)String.init<A>(reflecting:)(v18, v11);
    v32 = v31;
    *(_QWORD *)(v28 + 4) = sub_BA95EC(v30, v31, (uint64_t *)v83);
    swift_bridgeObjectRelease(v32);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    _os_log_impl(&dword_0, v24, v25, "üì• Session update with state=%{public}s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v33 = v28;
    a3 = v74;
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  }

  v34 = v76;
  swift_beginAccess(v76, v82, 0, 0);
  result = swift_weakLoadStrong(v34);
  v36 = v77;
  if (result)
  {
    v37 = result;
    v22((char *)v15, v77, v11);
    v38 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v15, v11);
    if (v38 == enum case for GroupSession.State.invalidated<A>(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
      v39 = *v15;
      sub_D50304(v39);
      swift_errorRelease(v39);
    }
    else if (v38 == enum case for GroupSession.State.waiting<A>(_:))
    {
      v84 = 0;
      memset(v83, 0, sizeof(v83));
      sub_D4EF58((uint64_t)v83);
    }
    else
    {
      if (v38 != enum case for GroupSession.State.joined<A>(_:))
      {
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x8000000001109790, "MusicCore/GroupActivitiesManager.swift", 38, 2, 669, 0);
        __break(1u);
        return result;
      }
      v40 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState;
      v41 = *(_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState);
      v42 = v75;
      if (v41)
      {
        v43 = qword_14FA678;
        swift_retain(*(_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState));
        if (v43 != -1)
          swift_once(&qword_14FA678, sub_D7F550);
        v44 = type metadata accessor for OSSignposter(0);
        __swift_project_value_buffer(v44, (uint64_t)static OSSignposter.sharePlay);
        v45 = OSSignposter.logHandle.getter();
        v46 = OSSignpostIntervalState.signpostID.getter();
        v47 = static os_signpost_type_t.end.getter(v46);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          v74 = a3;
          v48 = swift_retain(v41);
          v49 = v68;
          checkForErrorAndConsumeState(state:)(v48);
          v50 = swift_release(v41);
          v51 = v69;
          v52 = v70;
          v53 = (*(uint64_t (**)(char *, uint64_t, __n128))(v69 + 88))(v49, v70, v50);
          LODWORD(v76) = v47;
          if (v53 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v54 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
            v54 = "";
          }
          v55 = v72;
          v56 = v71;
          v57 = v42;
          v58 = v73;
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v57, v73);
          v59 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v59 = 0;
          v60 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl(&dword_0, v45, (os_signpost_type_t)v76, v60, "JoinSession", v54, v59, 2u);
          swift_slowDealloc(v59, -1, -1);

          v61 = *(void (**)(char *, uint64_t))(v55 + 8);
          v61(v75, v58);
          v62 = swift_release(v41);
          ((void (*)(char *, uint64_t, __n128))v61)(v56, v58, v62);
          a3 = v74;
          v36 = v77;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v73);
          swift_release(v41);
        }
        v63 = *(_QWORD *)(v37 + v40);
        *(_QWORD *)(v37 + v40) = 0;
        swift_release(v63);
      }
    }
    swift_beginAccess(v37 + 16, v81, 0, 0);
    sub_55D1C(v37 + 16, (uint64_t)v78);
    v64 = v79;
    v65 = v80;
    __swift_project_boxed_opaque_existential_1(v78, v79);
    v66 = GroupSession.isLocallyInitiated.getter();
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 48))(a3, v36, v66 & 1, v64, v65);
    swift_release(v37);
    return __swift_destroy_boxed_opaque_existential_1(v78);
  }
  return result;
}

double sub_D50304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  _QWORD v21[3];
  _BYTE v22[8];
  uint64_t v23;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v4);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v7 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v7, (uint64_t)static Logger.groupActivities);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v23 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_getErrorValue(a1, v22, v21);
    v13 = (char *)Error.localizedDescription.getter(v21[1], v21[2]);
    v15 = v14;
    *(_QWORD *)(v11 + 4) = sub_BA95EC(v13, v14, &v23);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v9, v10, "Session invalidated for reason=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject(&unk_13BC4E0, 40, 7);
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v2;
  swift_retain(v2);
  v18 = sub_C51ED8((uint64_t)v6, (uint64_t)&unk_1503B60, (uint64_t)v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_D50538(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  __n128 v18;
  uint64_t Strong;
  __n128 v20;
  uint64_t v21;
  _QWORD v24[2];
  _BYTE v25[40];
  __int128 v26;
  __int128 v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  __chkstk_darwin(v3);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  v12 = Notification.userInfo.getter(v8);
  if (!v12)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_10:
    sub_56024((uint64_t)&v26, &qword_14FF2A0);
    v18.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_11;
  }
  v13 = v12;
  v24[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlaybackEngineFirstAudioFrameDateKey);
  v24[1] = v14;
  AnyHashable.init<A>(_:)(v24, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_21BFA0((uint64_t)v25), (v16 & 1) != 0))
  {
    sub_95094(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  sub_55E40((uint64_t)v25);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_10;
  v17 = swift_dynamicCast(v5, &v26, (char *)&type metadata for Any + 8, v6, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v17 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    goto LABEL_12;
  }
LABEL_11:
  Date.init()(v18);
  sub_56024((uint64_t)v5, &qword_14FDE40);
LABEL_12:
  swift_beginAccess(v11, v25, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v21 = Strong;
    sub_D5076C((uint64_t)v10);
    v20 = swift_release(v21);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v20);
}

void sub_D5076C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  char *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  NSString v37;
  NSString v38;
  NSString v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  uint64_t v44;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  _BYTE v50[24];
  char v51[24];

  v45[1] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FDE40);
  v3 = __chkstk_darwin(v2);
  v45[0] = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v45 - v5;
  v7 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin(v7);
  v46 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FE620);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v45 - v13;
  v15 = type metadata accessor for Signpost(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, v51, 0, 0);
  sub_5C238(v19, (uint64_t)v14, &qword_14FE620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_56024((uint64_t)v14, &qword_14FE620);
  }
  else
  {
    sub_5C04C((uint64_t)v14, (uint64_t)v18, type metadata accessor for Signpost);
    Signpost.end(dso:)((uint64_t)&dword_0);
    sub_5C0DC((uint64_t)v18, type metadata accessor for Signpost);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    swift_beginAccess(v19, v50, 33, 0);
    sub_5C1F4((uint64_t)v12, v19, &qword_14FE620);
    swift_endAccess(v50);
  }
  v20 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate, v50, 0, 0);
  sub_5C238(v20, (uint64_t)v6, &qword_14FDE40);
  v22 = v47;
  v21 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v6, 1, v48) != 1)
  {
    v28 = v46;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v46, v6, v21);
    v29 = Date.timeIntervalSince(_:)(v28);
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v30 = type metadata accessor for Logger(0);
    v31 = __swift_project_value_buffer(v30, (uint64_t)static Logger.groupActivities);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(12, -1);
      *(_DWORD *)v34 = 134217984;
      *(double *)(v34 + 4) = v29;
      _os_log_impl(&dword_0, v32, v33, "endMeasuringInitiationTime: %f", (uint8_t *)v34, 0xCu);
      swift_slowDealloc(v34, -1, -1);
    }

    if (v29 <= 10.0)
      goto LABEL_19;
    v35 = (void *)objc_opt_self(MSVAutoBugCapture);
    v36 = sub_D5189C();
    v37 = String._bridgeToObjectiveC()();
    v38 = String._bridgeToObjectiveC()();
    v39 = String._bridgeToObjectiveC()();
    if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          v40 = v39;
          v49[0] = (uint64_t)v29;
          dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          v42 = v41;
          v43 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v42);
          objc_msgSend(v35, "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:", v36, v37, v38, v40, v43, 0, 0);

LABEL_19:
          (*(void (**)(char *, uint64_t))(v22 + 8))(v46, v21);
          v44 = v45[0];
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v22 + 56))(v45[0], 1, 1, v21);
          swift_beginAccess(v20, v49, 33, 0);
          sub_5C1F4(v44, v20, &qword_14FDE40);
          swift_endAccess(v49);
          return;
        }
LABEL_22:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_56024((uint64_t)v6, &qword_14FDE40);
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v23 = type metadata accessor for Logger(0);
  v24 = __swift_project_value_buffer(v23, (uint64_t)static Logger.groupActivities);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_0, v25, v26, "Attempting to endMeasuringInitiationTime but there was no begin time.", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

}

uint64_t GroupActivitiesManager.__allocating_init(coordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  GroupActivitiesManager.init(coordinator:)(a1);
  return v3;
}

uint64_t GroupActivitiesManager.init(coordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  char *v42;
  _QWORD *v43;
  _OWORD v44[3];

  v2 = v1;
  v43 = (_QWORD *)a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  __chkstk_darwin(v3);
  v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_15032A8);
  v5 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E10);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = xmmword_1060DF0;
  *(_OWORD *)(v2 + 56) = xmmword_1060DF0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  v16 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount;
  *(_QWORD *)&v44[0] = 0;
  Published.init(initialValue:)(v44, &type metadata for Int);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v17 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading;
  LOBYTE(v44[0]) = 0;
  Published.init(initialValue:)(v44, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v11, v8);
  v18 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction;
  memset(v44, 0, sizeof(v44));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503298);
  Published.init(initialValue:)(v44, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v40);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount) = 0;
  v20 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_artworkCachingReference;
  v21 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v22 = swift_allocObject(v21, 32, 7);
  *(_QWORD *)(v22 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v22 + 24) = 0x8000000001103070;
  v23 = (void *)objc_opt_self(MPArtworkCatalog);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v24, v22);

  *(_QWORD *)(v2 + v20) = v22;
  v25 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionStateObserver;
  type metadata accessor for GroupStateObserver(0);
  *(_QWORD *)(v2 + v25) = GroupStateObserver.__allocating_init()();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress) = 0;
  v26 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
  v27 = type metadata accessor for GroupActivitiesManager.Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sharePlayTogetherItemProvider) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState) = 0;
  v28 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  v29 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain) = 0;
  v30 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  v31 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
  *(_OWORD *)v32 = v41;
  *(_BYTE *)(v32 + 16) = 0;
  v33 = v43;
  sub_55D1C((uint64_t)v43, v2 + 16);
  v34 = type metadata accessor for TaskPriority(0);
  v35 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v42, 1, 1, v34);
  v36 = (_QWORD *)swift_allocObject(&unk_13BC0C0, 40, 7);
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v2;
  swift_retain(v2);
  v37 = sub_C51ED8(v35, (uint64_t)&unk_1503330, (uint64_t)v36);
  swift_release(v37);
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v2;
}

uint64_t sub_D511DC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_150393C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  return sub_D51224();
}

uint64_t sub_D51224()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v1[5] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503940);
  v1[6] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[7] = v3;
  v1[8] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503948);
  v1[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[10] = v5;
  v1[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v1[12] = v6;
  v1[13] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[14] = v8;
  v1[15] = v9;
  return swift_task_switch(sub_D512EC, v8, v9);
}

uint64_t sub_D512EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.groupActivities);
  v0[16] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "üö¶ Initiating group session observer", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[7];
  v6 = v0[8];
  v8 = v0[6];

  v9 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v10 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  static GroupActivity.sessions()(v9, v10);
  GroupSession.Sessions.makeAsyncIterator()(v8);
  v11.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v12 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v0[17] = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
  v0[18] = v12;
  v0[19] = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v0[20] = static MainActor.shared.getter(v11);
  v13 = sub_5C150(&qword_1503950, &qword_1503948, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
  v14 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[21] = v14;
  *v14 = v0;
  v14[1] = sub_D514BC;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v0[9], v13);
}

uint64_t sub_D514BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_D5183C;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_D51580;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_D51580()
{
  _QWORD *v0;

  swift_release();
  v0[23] = v0[2];
  return swift_task_switch(sub_D515C0, v0[14], v0[15]);
}

uint64_t sub_D515C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 184);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    if (*(_BYTE *)(v2 + *(_QWORD *)(v0 + 136)) == 1)
    {
      v3 = swift_retain_n(*(_QWORD *)(v0 + 184), 2);
      v4 = Logger.logObject.getter(v3);
      v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = swift_slowAlloc(12, -1);
        v7 = swift_slowAlloc(32, -1);
        v17 = v7;
        *(_DWORD *)v6 = 136446210;
        *(_QWORD *)(v0 + 32) = v1;
        swift_retain();
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503958);
        v9 = (char *)String.init<A>(reflecting:)(v0 + 32, v8);
        *(_QWORD *)(v6 + 4) = sub_BA95EC(v9, v10, &v17);
        swift_release_n(v1, 2);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v4, v5, "leaveCommand in progress, setting pendingSession=%{public}s", (uint8_t *)v6, 0xCu);
        swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v7, -1, -1);
        swift_slowDealloc(v6, -1, -1);

      }
      else
      {

        swift_release_n(v1, 2);
      }
      *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 152)) = *(_QWORD *)(v0 + 184);
      v14 = swift_release();
    }
    else
    {
      *(_QWORD *)(v2 + *(_QWORD *)(v0 + 144)) = v1;
      swift_retain_n(v1, 2);
      swift_release();
      sub_D4DEB8();
      v14 = swift_release_n(v1, 2);
    }
    *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v14);
    v15 = sub_5C150(&qword_1503950, &qword_1503948, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
    v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 168) = v16;
    *v16 = v0;
    v16[1] = sub_D514BC;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, *(_QWORD *)(v0 + 72), v15);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v11, *(_QWORD *)(v0 + 72));
    swift_release();
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_D5183C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 176);
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14FE900);
  v2 = swift_dynamicCast(v1, v0 + 24, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

id sub_D5189C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain);
  }
  else
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_D51908(unsigned __int8 *a1, void **a2)
{
  void *v2;
  char v3;
  int v4;
  int v5;
  int v6;

  v2 = (void *)*((_QWORD *)a1 + 1);
  v3 = a1[16];
  if (a1[1])
    v4 = 256;
  else
    v4 = 0;
  v5 = v4 | *a1;
  if (*((_BYTE *)a2 + 1))
    v6 = 256;
  else
    v6 = 0;
  return sub_D55BAC(v5, v2, v3, v6 | *(unsigned __int8 *)a2, a2[1], *((_BYTE *)a2 + 16));
}

uint64_t sub_D5194C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1503A9C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  return sub_D51994();
}

uint64_t sub_D51994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1[19] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500E30);
  v1[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15039E0);
  v1[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE0);
  v1[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[23] = v5;
  v1[24] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500FE8);
  v1[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[26] = v7;
  v1[27] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostError(0);
  v1[28] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[29] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v10);
  v1[31] = swift_task_alloc(v10);
  v11 = type metadata accessor for OSSignpostID(0);
  v1[32] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[33] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[34] = swift_task_alloc(v13);
  v1[35] = swift_task_alloc(v13);
  v1[36] = swift_task_alloc(v13);
  v1[37] = swift_task_alloc(v13);
  v1[38] = swift_task_alloc(v13);
  v14 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v1[39] = v14;
  v1[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15031C8);
  v1[41] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[42] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[43] = swift_task_alloc(v17);
  v1[44] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v1[45] = v18;
  v1[46] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  v1[47] = v20;
  v1[48] = v21;
  return swift_task_switch(sub_D51B98, v20, v21);
}

uint64_t sub_D51B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  __n128 v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  __n128 v83;
  __n128 v84;
  NSObject *v85;
  os_signpost_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint8_t *v91;
  os_signpost_id_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t);
  uint64_t v113;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  *(_QWORD *)(v0 + 392) = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v3 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 400) = v3;
  if (!v3)
    goto LABEL_23;
  v5 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 312);
  swift_retain();
  GroupSession.state.getter(v9);
  *(_DWORD *)(v0 + 536) = enum case for GroupSession.State.waiting<A>(_:);
  v10 = *(void (**)(uint64_t))(v7 + 104);
  *(_QWORD *)(v0 + 408) = v10;
  v10(v5);
  v11 = sub_4DD24(&qword_15031D0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *(_QWORD *)(v0 + 416) = v11;
  v12 = static GroupSession.State.== infix(_:_:)(v4, v5, v8, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 424) = v13;
  v13(v5, v6);
  v13(v4, v6);
  if ((v12 & 1) == 0)
  {
    swift_release();
LABEL_23:
    swift_release();
    v49 = *(_QWORD *)(v0 + 344);
    v50 = *(_QWORD *)(v0 + 320);
    v52 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 304);
    v54 = *(_QWORD *)(v0 + 280);
    v53 = *(_QWORD *)(v0 + 288);
    v55 = *(_QWORD *)(v0 + 272);
    v57 = *(_QWORD *)(v0 + 240);
    v56 = *(_QWORD *)(v0 + 248);
    v107 = *(_QWORD *)(v0 + 216);
    v108 = *(_QWORD *)(v0 + 192);
    v109 = *(_QWORD *)(v0 + 168);
    v111 = *(_QWORD *)(v0 + 160);
    swift_task_dealloc(*(_QWORD *)(v0 + 352));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v111);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v110 = v3;
  v14 = type metadata accessor for Logger(0);
  v15 = __swift_project_value_buffer(v14, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 432) = v15;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "Attempting to join", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }
  v19 = *(_QWORD *)(v0 + 152);

  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v21 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((_QWORD *)(v0 + 543), v19, KeyPath, v21);
  swift_release();
  swift_release();
  v22 = *(_BYTE *)(v0 + 543);
  v23 = swift_getKeyPath(&unk_10A53D8);
  v24 = swift_getKeyPath(&unk_10A5400);
  *(_BYTE *)(v0 + 550) = 1;
  swift_retain();
  static Published.subscript.setter(v0 + 550, v19, v23, v24);
  sub_D48790(v22);
  if (!*(_QWORD *)(v1 + v2))
    goto LABEL_17;
  v25 = *(_QWORD *)(v0 + 320);
  swift_retain();
  GroupSession.activity.getter(v26);
  swift_release();
  v27 = *(_QWORD *)(v25 + 48);
  v28 = *(_QWORD *)(v0 + 320);
  if (!v27)
  {
    sub_5C0DC(*(_QWORD *)(v0 + 320), type metadata accessor for GroupActivitiesManager.Activity);
LABEL_17:
    swift_release();
    if (qword_14FA088 != -1)
      swift_once(&qword_14FA088, sub_D5E434);
    v38 = __swift_project_value_buffer(v14, (uint64_t)static Logger.sharedListening);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter(v39);
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_0, v39, v40, "Session properties missing in activity", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }
    v42 = *(_QWORD *)(v0 + 152);

    v43 = swift_getKeyPath(&unk_10A53D8);
    v44 = swift_getKeyPath(&unk_10A5400);
    static Published.subscript.getter((_QWORD *)(v0 + 549), v42, v43, v44);
    swift_release();
    swift_release();
    v45 = *(_BYTE *)(v0 + 549);
    v46 = swift_getKeyPath(&unk_10A53D8);
    v47 = swift_getKeyPath(&unk_10A5400);
    *(_BYTE *)(v0 + 548) = 0;
    swift_retain();
    static Published.subscript.setter(v0 + 548, v42, v46, v47);
    v48 = v45;
LABEL_22:
    sub_D48790(v48);
    goto LABEL_23;
  }
  v29 = *(void **)(v27 + 16);
  *(_QWORD *)(v0 + 440) = v29;
  v30 = v29;
  sub_5C0DC(v28, type metadata accessor for GroupActivitiesManager.Activity);
  v31 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v32 = swift_allocObject(&unk_13BC428, 32, 7);
  *(_QWORD *)(v32 + 16) = sub_D59F30;
  *(_QWORD *)(v32 + 24) = v110;
  *(_QWORD *)(v0 + 48) = sub_129E54;
  *(_QWORD *)(v0 + 56) = v32;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_23E9F0;
  *(_QWORD *)(v0 + 40) = &block_descriptor_107_1;
  v33 = _Block_copy((const void *)(v0 + 16));
  v34 = objc_msgSend(v31, "initWithBlock:", v33, swift_retain().n128_f64[0]);
  *(_QWORD *)(v0 + 448) = v34;
  _Block_release(v33);
  v35 = swift_release();
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v32, "", 0, 0, 0, 1, v35);
  swift_release();
  if ((v31 & 1) == 0)
  {
    v36 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "sharedSessionIntentWithProperties:identity:", v30, v34);
    *(_QWORD *)(v0 + 456) = v36;
    if (v36)
    {
      v33 = v36;
      if ((GroupSession.isLocallyInitiated.getter() & 1) != 0 && (GroupSession.isFirstJoin.getter() & 1) != 0)
        v37 = 20;
      else
        v37 = 10;
      objc_msgSend(v33, "setActionAfterQueueLoad:", v37);
      swift_retain();
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = swift_slowAlloc(24, -1);
        v63 = swift_slowAlloc(32, -1);
        v113 = v63;
        *(_DWORD *)v62 = 67240706;
        *(_DWORD *)(v62 + 4) = GroupSession.isLocallyInitiated.getter() & 1;
        *(_WORD *)(v62 + 8) = 1026;
        *(_DWORD *)(v62 + 10) = GroupSession.isFirstJoin.getter() & 1;
        v64 = swift_release();
        *(_WORD *)(v62 + 14) = 2082;
        v65 = (id)MPNSStringFromQueueLoadAction(v37, v64);
        if (v65)
        {
          v66 = v65;
          v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
          v69 = v68;

        }
        else
        {
          v67 = 0;
          v69 = 0;
        }
        v79 = (char *)Optional<A>.description.getter(v67, v69);
        v81 = v80;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v62 + 16) = sub_BA95EC(v79, v81, &v113);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v60, v61, "Will join session isLocallyInitiated=%{BOOL,public}d\n/ isFirstJoin=%{BOOL,public}d.\n-> actionAfterQueueLoad=%{public}s", (uint8_t *)v62, 0x18u);
        swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v63, -1, -1);
        swift_slowDealloc(v62, -1, -1);

      }
      else
      {

        swift_release();
      }
      if (qword_14FA678 == -1)
        goto LABEL_35;
      goto LABEL_40;
    }
    swift_release();
    v71 = Logger.logObject.getter(v70);
    v72 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v73 = 0;
      _os_log_impl(&dword_0, v71, v72, "Failed to retrieve shared playback intent", v73, 2u);
      swift_slowDealloc(v73, -1, -1);
    }
    v74 = *(_QWORD *)(v0 + 152);

    v75 = swift_getKeyPath(&unk_10A53D8);
    v76 = swift_getKeyPath(&unk_10A5400);
    static Published.subscript.getter((_QWORD *)(v0 + 541), v74, v75, v76);
    swift_release();
    swift_release();
    LOBYTE(v75) = *(_BYTE *)(v0 + 541);
    v77 = swift_getKeyPath(&unk_10A53D8);
    v78 = swift_getKeyPath(&unk_10A5400);
    *(_BYTE *)(v0 + 540) = 0;
    swift_retain();
    static Published.subscript.setter(v0 + 540, v74, v77, v78);
    v48 = v75;
    goto LABEL_22;
  }
  __break(1u);
LABEL_40:
  swift_once(&qword_14FA678, sub_D7F550);
LABEL_35:
  v82 = type metadata accessor for OSSignposter(0);
  *(_QWORD *)(v0 + 464) = __swift_project_value_buffer(v82, (uint64_t)static OSSignposter.sharePlay);
  static OSSignpostID.exclusive.getter(v83);
  v85 = OSSignposter.logHandle.getter(v84);
  v86 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v87 = *(_QWORD *)(v0 + 296);
    v88 = *(_QWORD *)(v0 + 256);
    v89 = *(_QWORD *)(v0 + 264);
    v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
    v90(v87, *(_QWORD *)(v0 + 304), v88);
    v91 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v91 = 0;
    v92 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v85, v86, v92, "AddIntent", "", v91, 2u);
    swift_slowDealloc(v91, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
  }
  else
  {
    v93 = *(_QWORD *)(v0 + 264);

    v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16);
  }
  *(_QWORD *)(v0 + 472) = v90;
  v94 = *(_QWORD *)(v0 + 296);
  v95 = *(_QWORD *)(v0 + 304);
  v96 = *(_QWORD *)(v0 + 256);
  v97 = *(_QWORD *)(v0 + 264);
  v98 = *(_QWORD **)(v0 + 152);
  v90(v94, v95, v96);
  v99 = type metadata accessor for OSSignpostIntervalState(0);
  *(_QWORD *)(v0 + 480) = v99;
  swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
  *(_QWORD *)(v0 + 488) = OSSignpostIntervalState.init(id:isOpen:)(v94, 1);
  v100 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
  *(_QWORD *)(v0 + 496) = v100;
  v100(v95, v96);
  swift_beginAccess(v98 + 2, v0 + 112, 0, 0);
  v101 = v98[5];
  v102 = v98[6];
  __swift_project_boxed_opaque_existential_1(v98 + 2, v101);
  v103 = *(_QWORD *)(v101 - 8);
  v104 = swift_task_alloc((*(_QWORD *)(v103 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 504) = v104;
  (*(void (**)(void))(v103 + 16))();
  v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 56))(v101, v102);
  *(_QWORD *)(v0 + 512) = v105;
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v104, v101);
  v112 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1503C40 + dword_1503C40);
  v106 = (_QWORD *)swift_task_alloc(unk_1503C44);
  *(_QWORD *)(v0 + 520) = v106;
  *v106 = v0;
  v106[1] = sub_D5269C;
  return v112((uint64_t)v33, v105);
}

uint64_t sub_D5269C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 520);
  *(_QWORD *)(*v1 + 528) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_D53160;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 504);

    swift_task_dealloc(v7);
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_D52710;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_D52710()
{
  uint64_t v0;
  __n128 v1;
  NSObject *v2;
  uint64_t v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  const char *v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __n128 v59;
  NSObject *v60;
  os_signpost_type_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  os_signpost_id_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107;
  uint64_t KeyPath;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v1 = swift_release();
  v2 = OSSignposter.logHandle.getter(v1);
  v3 = OSSignpostIntervalState.signpostID.getter();
  v4 = static os_signpost_type_t.end.getter(v3);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 232);
    swift_retain();
    checkForErrorAndConsumeState(state:)(v8);
    v9 = swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v7 + 88))(v5, v6, v9) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v10 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
      v10 = "";
    }
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v11 = (_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 472))(*(_QWORD *)(v0 + 296), v13, v14);
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    v16 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v2, v4, v16, "AddIntent", v10, v15, 2u);
    swift_slowDealloc(v15, -1, -1);

    v12(v13, v14);
  }
  else
  {
    v11 = (_QWORD *)(v0 + 288);

  }
  v17 = *(_QWORD *)(v0 + 392);
  v18 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*v11, *(_QWORD *)(v0 + 256));
  swift_release();
  if (*(_QWORD *)(v18 + v17))
  {
    v19 = *(_QWORD *)(v0 + 416);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    v22 = *(unsigned int *)(v0 + 536);
    v24 = *(_QWORD *)(v0 + 344);
    v23 = *(_QWORD *)(v0 + 352);
    v25 = *(_QWORD *)(v0 + 328);
    v26 = *(_QWORD *)(v0 + 312);
    swift_retain();
    v133 = v27;
    GroupSession.state.getter(v27);
    v21(v24, v22, v25);
    v28 = static GroupSession.State.== infix(_:_:)(v23, v24, v26, v19);
    v20(v24, v25);
    v20(v23, v25);
    if ((v28 & 1) != 0)
    {
      v29 = swift_retain_n(v133, 2);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc(12, -1);
        v33 = swift_slowAlloc(32, -1);
        v135 = v33;
        *(_DWORD *)v32 = 136446210;
        *(_QWORD *)(v0 + 136) = v133;
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503958);
        v35 = sub_5C150((unint64_t *)&unk_1503B28, &qword_1503958, (uint64_t)&protocol conformance descriptor for GroupSession<A>);
        v36 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v34, v35);
        *(_QWORD *)(v32 + 4) = sub_BA95EC(v36, v37, &v135);
        swift_release_n(v133, 2);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v30, v31, "ü§ù Joining shared session=%{public}s", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v32, -1, -1);

      }
      else
      {

        v38 = swift_release_n(v133, 2);
      }
      static OSSignpostID.exclusive.getter(v38);
      v60 = OSSignposter.logHandle.getter(v59);
      v61 = static os_signpost_type_t.begin.getter();
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v62 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
        v63 = *(_QWORD *)(v0 + 296);
        v64 = *(_QWORD *)(v0 + 256);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 472))(v63, *(_QWORD *)(v0 + 272), v64);
        v65 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v65 = 0;
        v66 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl(&dword_0, v60, v61, v66, "JoinSession", "", v65, 2u);
        swift_slowDealloc(v65, -1, -1);

        v62(v63, v64);
      }
      else
      {

      }
      v67 = v0 + 547;
      v68 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
      v69 = *(_QWORD *)(v0 + 480);
      v70 = *(_QWORD *)(v0 + 392);
      v71 = *(_QWORD *)(v0 + 296);
      v72 = *(_QWORD *)(v0 + 272);
      v73 = *(_QWORD *)(v0 + 256);
      v74 = *(_QWORD *)(v0 + 152);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472))(v71, v72, v73);
      swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
      v75 = OSSignpostIntervalState.init(id:isOpen:)(v71, 1);
      v68(v72, v73);
      *(_QWORD *)(v74 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState) = v75;
      swift_release();
      if (*(_QWORD *)(v74 + v70))
      {
        swift_retain();
        GroupSession.join()();
        swift_release();
      }
      v76 = *(_QWORD **)(v0 + 152);
      v77 = v76[5];
      v78 = v76[6];
      v79 = __swift_project_boxed_opaque_existential_1(v76 + 2, v77);
      v80 = *(_QWORD *)(v77 - 8);
      v81 = swift_task_alloc((*(_QWORD *)(v80 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v80 + 16))(v81, v79, v77);
      v82 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v78 + 56))(v77, v78);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v77);
      if (v82)
      {
        v83 = &v82[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
        swift_beginAccess(&v82[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v0 + 88, 0, 0);
        v84 = *(_QWORD *)v83;
        if (*(_QWORD *)v83)
        {
          v125 = *(void **)(v0 + 440);
          v126 = *(void **)(v0 + 448);
          v85 = *(_QWORD *)(v0 + 216);
          v127 = *(_QWORD *)(v0 + 208);
          v129 = *(void **)(v0 + 456);
          v86 = *(_QWORD *)(v0 + 192);
          v87 = *(_QWORD *)(v0 + 176);
          v123 = *(_QWORD *)(v0 + 184);
          v88 = *(_QWORD *)(v0 + 168);
          v124 = *(_QWORD *)(v0 + 200);
          swift_retain();

          swift_beginAccess(v84 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v0 + 64, 33, 0);
          v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1500AC0);
          Published.projectedValue.getter(v89);
          swift_endAccess(v0 + 64);
          swift_release();
          v90 = sub_4E684(0, (unint64_t *)&qword_14FE2D0, OS_dispatch_queue_ptr);
          *(_QWORD *)(v0 + 144) = static OS_dispatch_queue.main.getter(v90, v91, v92, v93, v94, v95, v96, v97);
          v98 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v88, 1, 1, v98);
          v99 = sub_5C150((unint64_t *)&qword_1500760, &qword_1500FE0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
          v100 = sub_D0BE38();
          Publisher.receive<A>(on:options:)(v0 + 144, v88, v87, v90, v99, v100);
          v101 = v88;
          v67 = v0 + 547;
          sub_56024(v101, (uint64_t *)&unk_15039E0);

          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v86, v87);
          swift_task_dealloc(v81);
          v102 = swift_allocObject(&unk_13BC360, 24, 7);
          swift_weakInit(v102 + 16);
          v103 = sub_5C150(&qword_1501010, &qword_1500FE8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
          v104 = Publisher<>.sink(receiveValue:)(sub_D5A028, v102, v124, v103);
          swift_release();
          swift_release();

          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v85, v124);
LABEL_25:
          v107 = *(_QWORD *)(v0 + 152);
          *(_QWORD *)(v107 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = v104;
          swift_release();
          KeyPath = swift_getKeyPath(&unk_10A53D8);
          v109 = swift_getKeyPath(&unk_10A5400);
          static Published.subscript.getter((_QWORD *)(v0 + 546), v107, KeyPath, v109);
          swift_release();
          swift_release();
          v110 = *(_BYTE *)(v0 + 546);
          v111 = swift_getKeyPath(&unk_10A53D8);
          v112 = swift_getKeyPath(&unk_10A5400);
          *(_BYTE *)(v0 + 547) = 0;
          swift_retain();
          static Published.subscript.setter(v67, v107, v111, v112);
          v58 = v110;
          goto LABEL_26;
        }

      }
      v105 = *(void **)(v0 + 448);
      v106 = *(void **)(v0 + 456);

      swift_release();
      swift_task_dealloc(v81);
      v104 = 0;
      goto LABEL_25;
    }
    v40 = *(_QWORD *)(v0 + 392);
    v41 = *(_QWORD *)(v0 + 152);
    swift_release();
    v39 = *(_QWORD *)(v41 + v40);
  }
  else
  {
    v39 = 0;
  }
  v42 = *(void **)(v0 + 448);
  v131 = *(void **)(v0 + 456);
  v43 = *(void **)(v0 + 440);
  v44 = *(_QWORD *)(v0 + 152);
  v45 = *(_QWORD *)(v0 + 160);
  v46 = sub_D56020();
  v47 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v46, 0, 0);
  *(_QWORD *)v48 = v39;
  *(_BYTE *)(v48 + 8) = 1;
  swift_retain();
  sub_D4A5D4(v47, 0);
  swift_errorRelease(v47);
  v49 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v45, 1, 1, v49);
  v50 = swift_retain();
  v51 = static MainActor.shared.getter(v50);
  v52 = (_QWORD *)swift_allocObject(&unk_13BC4A0, 40, 7);
  v52[2] = v51;
  v52[3] = &protocol witness table for MainActor;
  v52[4] = v44;
  sub_C51ED8(v45, (uint64_t)&unk_1503B18, (uint64_t)v52);
  swift_release();

  v53 = swift_getKeyPath(&unk_10A53D8);
  v54 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((_QWORD *)(v0 + 544), v44, v53, v54);
  swift_release();
  swift_release();
  v55 = *(_BYTE *)(v0 + 544);
  v56 = swift_getKeyPath(&unk_10A53D8);
  v57 = swift_getKeyPath(&unk_10A5400);
  *(_BYTE *)(v0 + 545) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 545, v44, v56, v57);
  v58 = v55;
LABEL_26:
  sub_D48790(v58);
  swift_release();
  v113 = *(_QWORD *)(v0 + 344);
  v114 = *(_QWORD *)(v0 + 320);
  v116 = *(_QWORD *)(v0 + 296);
  v115 = *(_QWORD *)(v0 + 304);
  v118 = *(_QWORD *)(v0 + 280);
  v117 = *(_QWORD *)(v0 + 288);
  v119 = *(_QWORD *)(v0 + 272);
  v121 = *(_QWORD *)(v0 + 240);
  v120 = *(_QWORD *)(v0 + 248);
  v128 = *(_QWORD *)(v0 + 216);
  v130 = *(_QWORD *)(v0 + 192);
  v132 = *(_QWORD *)(v0 + 168);
  v134 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v128);
  swift_task_dealloc(v130);
  swift_task_dealloc(v132);
  swift_task_dealloc(v134);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D53160()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  __n128 v3;
  NSObject *v4;
  uint64_t v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  const char *v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t KeyPath;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(void **)(v0 + 512);
  swift_release();

  swift_task_dealloc(v1);
  v4 = OSSignposter.logHandle.getter(v3);
  v5 = OSSignpostIntervalState.signpostID.getter();
  v6 = static os_signpost_type_t.end.getter(v5);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 224);
    swift_retain();
    checkForErrorAndConsumeState(state:)(v10);
    v11 = swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v8 + 88))(v7, v9, v11) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v12 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
      v12 = "";
    }
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v13 = (_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 280);
    v16 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 472))(*(_QWORD *)(v0 + 296), v15, v16);
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl(&dword_0, v4, v6, v18, "AddIntent", v12, v17, 2u);
    swift_slowDealloc(v17, -1, -1);

    v14(v15, v16);
  }
  else
  {
    v13 = (_QWORD *)(v0 + 280);

  }
  v19 = *(_QWORD *)(v0 + 528);
  v20 = *(void **)(v0 + 448);
  v21 = *(void **)(v0 + 456);
  v22 = *(void **)(v0 + 440);
  v23 = *(_QWORD *)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*v13, *(_QWORD *)(v0 + 256));
  swift_release();
  sub_D4A5D4(v19, 0);
  v25 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = swift_retain();
  v27 = static MainActor.shared.getter(v26);
  v28 = (_QWORD *)swift_allocObject(&unk_13BC478, 40, 7);
  v28[2] = v27;
  v28[3] = &protocol witness table for MainActor;
  v28[4] = v23;
  sub_C51ED8(v24, (uint64_t)&unk_1503B08, (uint64_t)v28);
  swift_release();

  swift_errorRelease(v19);
  KeyPath = swift_getKeyPath(&unk_10A53D8);
  v30 = swift_getKeyPath(&unk_10A5400);
  static Published.subscript.getter((_QWORD *)(v0 + 542), v23, KeyPath, v30);
  swift_release();
  swift_release();
  v31 = *(_BYTE *)(v0 + 542);
  v32 = swift_getKeyPath(&unk_10A53D8);
  v33 = swift_getKeyPath(&unk_10A5400);
  *(_BYTE *)(v0 + 551) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 551, v23, v32, v33);
  sub_D48790(v31);
  swift_release();
  v34 = *(_QWORD *)(v0 + 344);
  v35 = *(_QWORD *)(v0 + 320);
  v37 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 304);
  v39 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 272);
  v42 = *(_QWORD *)(v0 + 240);
  v41 = *(_QWORD *)(v0 + 248);
  v44 = *(_QWORD *)(v0 + 216);
  v45 = *(_QWORD *)(v0 + 192);
  v46 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D53504(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[56];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[4];
  char v62;
  char *v63;
  uint64_t v64;

  v2 = v1;
  v45 = a1 & 1;
  v3 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
  v17 = (char *)swift_allocObject(v16, 88, 7);
  *((_OWORD *)v17 + 1) = xmmword_105B360;
  String.LocalizationValue.init(stringLiteral:)(0x7373696D736944, 0xE700000000000000);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v18 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v19 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v18, v8, 0, 0, 256);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_retain(v2);
  v22 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v23 = UUID.uuidString.getter(v22);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v44);
  *((_QWORD *)v17 + 4) = v23;
  *((_QWORD *)v17 + 5) = v25;
  *((_QWORD *)v17 + 6) = v19;
  *((_QWORD *)v17 + 7) = v21;
  v17[64] = 2;
  *((_QWORD *)v17 + 9) = &unk_1503B40;
  *((_QWORD *)v17 + 10) = v2;
  v26 = v45;
  sub_D5464C(v45, (uint64_t)v50);
  sub_5C090((uint64_t)v50, (uint64_t)&v51, &qword_14FE918);
  v27 = v2;
  if (*((_QWORD *)&v51 + 1))
  {
    v56 = v51;
    v57 = v52;
    v28 = v54;
    v58 = v53;
    v29 = v55;
    v59 = v51;
    v60 = v52;
    sub_1391E0((uint64_t)&v59);
    sub_1391E0((uint64_t)&v60);
    sub_A9DEC(v28, v29);
    v31 = *((_QWORD *)v17 + 2);
    v30 = *((_QWORD *)v17 + 3);
    if (v31 >= v30 >> 1)
      v17 = sub_BCC868((char *)(v30 > 1), v31 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v31 + 1;
    v32 = &v17[56 * v31];
    v33 = v57;
    *((_OWORD *)v32 + 2) = v56;
    *((_OWORD *)v32 + 3) = v33;
    *((_QWORD *)v32 + 8) = v58;
    *((_QWORD *)v32 + 9) = v28;
    *((_QWORD *)v32 + 10) = v29;
    sub_8B134((uint64_t)&v59);
    sub_8B134((uint64_t)&v60);
    sub_5C198(v28, v29);
  }
  v34 = sub_D544BC(v26, 0xD000000000000011, 0x80000000011098B0, 0xD000000000000013, 0x8000000001109890);
  v36 = v35;
  v37 = sub_D544BC(v26, 0xD000000000000041, 0x8000000001109840, 0xD000000000000049, 0x80000000011097F0);
  v39 = v38;
  v61[0] = v34;
  v61[1] = v36;
  v61[2] = v37;
  v61[3] = v38;
  v62 = 0;
  v63 = v17;
  v64 = 0;
  swift_beginAccess(v27 + 16, &v49, 0, 0);
  sub_55D1C(v27 + 16, (uint64_t)v46);
  v40 = v47;
  v41 = v48;
  __swift_project_boxed_opaque_existential_1(v46, v47);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v41 + 40))(v61, v40, v41);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v17);
  return __swift_destroy_boxed_opaque_existential_1(v46);
}

uint64_t sub_D538F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 184) = a4;
  return swift_task_switch(sub_D53910, 0, 0);
}

uint64_t sub_D53910()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[23] + 16;
  swift_beginAccess(v1, v0 + 20, 0, 0);
  sub_55D1C(v1, (uint64_t)(v0 + 10));
  v2 = v0[13];
  v3 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v2);
  v4 = *(int **)(v3 + 32);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_D539B4;
  return v7(v2, v3);
}

uint64_t sub_D539B4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_BYTE *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_D53A10, 0, 0);
}

uint64_t sub_D53A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  int v7;
  __n128 v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 80));
  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v1 = type metadata accessor for Logger(0);
  v2 = __swift_project_value_buffer(v1, (uint64_t)static Logger.groupActivities);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 208);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl(&dword_0, v3, v4, "üõÇ User did authenticate=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(unsigned __int8 *)(v0 + 208);

  if (v7 == 1)
  {
    v9 = v0 + 16;
    v10 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    *(_QWORD *)(v0 + 200) = v10;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_D53BD8;
    v11 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 120) = _NSConcreteStackBlock;
    v12 = (_QWORD *)(v0 + 120);
    v12[1] = 0x40000000;
    v12[2] = sub_5C81D4;
    v12[3] = &block_descriptor_122_0;
    v12[4] = v11;
    objc_msgSend(v10, "synchronizeWithCompletionHandler:", v12);
    return swift_continuation_await(v9);
  }
  else
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session))
    {
      swift_retain();
      GroupSession.leave()();
      v8 = swift_release();
    }
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
}

uint64_t sub_D53BD8()
{
  return swift_task_switch(sub_3D6994, 0, 0);
}

uint64_t sub_D53C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch(sub_D53C3C, 0, 0);
}

uint64_t sub_D53C3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[10] + 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  sub_55D1C(v1, (uint64_t)(v0 + 2));
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_D53CE0;
  return v7(v2, v3);
}

uint64_t sub_D53CE0(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_BYTE *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_D53D3C, 0, 0);
}

uint64_t sub_D53D3C()
{
  uint64_t v0;
  int v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = *(unsigned __int8 *)(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 16));
  if (v1 != 2 && (v1 & 1) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session))
    {
      swift_retain();
      GroupSession.leave()();
      swift_release();
    }
    if (qword_14FA068 != -1)
      swift_once(&qword_14FA068, sub_D54AE0);
    v3 = type metadata accessor for Logger(0);
    v4 = __swift_project_value_buffer(v3, (uint64_t)static Logger.groupActivities);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_0, v5, v6, "üõÇ User did not complete the subscription flow", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_D53E5C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  char *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = GroupSession.localParticipant.getter(v8);
  Participant.id.getter(v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v13 = (char *)UUID.uuidString.getter(v12);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16._countAndFlagsBits = 0x616C506572616853;
  v16._object = (void *)0xEC0000003D444979;
  if (String.hasPrefix(_:)(v16))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    strcpy((char *)v30, "SharePlayID=");
    BYTE5(v30[1]) = 0;
    HIWORD(v30[1]) = -5120;
    v17._countAndFlagsBits = (uint64_t)v13;
    v17._object = v15;
    String.append(_:)(v17);
  }
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setExternalIdentifier:", v18, swift_bridgeObjectRelease().n128_f64[0]);

  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v19 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v19, (uint64_t)static Logger.groupActivities);
  v20 = swift_bridgeObjectRetain();
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v29 = v24;
    *(_DWORD *)v23 = 136446210;
    v25._countAndFlagsBits = 0x616C506572616853;
    v25._object = (void *)0xEC0000003D444979;
    if (String.hasPrefix(_:)(v25))
    {
      swift_bridgeObjectRetain();
      v26 = (char *)v15;
    }
    else
    {
      strcpy((char *)v30, "SharePlayID=");
      BYTE5(v30[1]) = 0;
      HIWORD(v30[1]) = -5120;
      v27._countAndFlagsBits = (uint64_t)v13;
      v27._object = v15;
      String.append(_:)(v27);
      v13 = (char *)v30[0];
      v26 = (char *)v30[1];
    }
    *(_QWORD *)(v23 + 4) = sub_BA95EC(v13, v26, &v29);
    swift_bridgeObjectRelease_n(v15, 2);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, v22, "externalID identity=%{public}s", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
}

uint64_t sub_D54180()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_15031A4);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_2B41E4;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_D541E8()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_15031A4);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_2B280C;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

void sub_D54250(id *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, char);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  _BYTE v18[32];
  _BYTE v19[24];

  if (!*a1)
    return;
  v17 = *a1;
  if (!objc_msgSend(v17, "isSharedListeningSession")
    || (v3 = objc_msgSend(v17, "tracklist"),
        v16 = objc_msgSend(v3, "playingItem"),
        v3,
        !v16))
  {
LABEL_16:

    return;
  }
  if ((objc_msgSend(v16, "isPlaceholder") & 1) != 0)
  {

    return;
  }
  v4 = objc_msgSend(v16, "metadataObject");
  if (!v4)
  {
LABEL_15:

    goto LABEL_16;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "innermostModelObject");

  objc_opt_self(MPModelSong);
  v7 = swift_dynamicCastObjCClass(v6);
  if (!v7)
  {

    goto LABEL_15;
  }
  v8 = v7;
  v9 = a2 + 16;
  swift_beginAccess(v9, v19, 0, 0);
  if (swift_weakLoadStrong(v9))
  {
    v10 = sub_D4DE40((uint64_t)v18);
    v12 = v11;
    v13 = type metadata accessor for GroupActivitiesManager.Activity(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      v14 = type metadata accessor for CodableModelObjectIdentity();
      v15 = swift_allocObject(v14, 24, 7);
      *(_QWORD *)(v15 + 16) = v8;
      v6 = v6;
      swift_release();
      *(_QWORD *)(v12 + 56) = v15;
    }
    v10((uint64_t)v18, 0);
    swift_release();
  }

}

uint64_t sub_D54440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_D54458, 0, 0);
}

uint64_t sub_D54458()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session) != 0;
  v2 = (_QWORD *)swift_task_alloc(dword_15031A4);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_BAAEAC;
  return GroupActivitiesManager.leave(performLeaveCommand:)(v1);
}

uint64_t sub_D544BC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];

  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v19 = &v25[-v18];
  if ((a1 & 1) != 0)
  {
    v20 = a4;
    v21 = a5;
  }
  else
  {
    v20 = a2;
    v21 = a3;
  }
  String.LocalizationValue.init(stringLiteral:)(v20, v21);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (qword_14F9C80 != -1)
    swift_once(&qword_14F9C80, sub_B9BF10);
  v22 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v23 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v22, v12, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
  return v23;
}

uint64_t sub_D5464C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int64x2_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = __chkstk_darwin(v13);
  v18 = &v29[-v17];
  if ((a1 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v15, v18, v11);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v24 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v21 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v24, v10, 0, 0, 256);
    v26 = v25;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    v27 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v19 = UUID.uuidString.getter(v27);
    v20 = v28;
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v23 = vdupq_n_s64(2uLL);
    v23.i64[0] = v26;
    v22 = &unk_1503B50;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0uLL;
  }
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v21;
  *(int64x2_t *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_D54860()
{
  return swift_task_switch(sub_D54874, 0, 0);
}

uint64_t sub_D54874()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v1)
  {
    v2 = v1;
    LSApplicationWorkspace.openMusicSettings()();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_D548CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_15031A4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

_QWORD *GroupActivitiesManager.deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  __swift_destroy_boxed_opaque_existential_1(v0 + 2);
  sub_5B8898(v0[7], v0[8], v0[9], v0[10]);
  v1 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1502E10);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15004B0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_15032A8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_56024((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &qword_1503338);
  swift_release();
  swift_release();

  swift_release();
  sub_56024((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, &qword_14FE620);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain));
  sub_56024((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate, &qword_14FDE40);
  sub_D56278(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext), *(char **)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8));
  return v0;
}

double GroupActivitiesManager.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  GroupActivitiesManager.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_D54AE0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.groupActivities);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.groupActivities);
  sub_4E684(0, (unint64_t *)&qword_14FDBD0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000011030B0, 0x74634170756F7247, 0xEF73656974697669);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.groupActivities.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_14FA068 != -1)
    swift_once(&qword_14FA068, sub_D54AE0);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.groupActivities);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_D54BF4()
{
  _BYTE *v0;

  if (*v0)
    return 7955819;
  else
    return 0x696669746E656469;
}

uint64_t sub_D54C2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_D5A6F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D54C50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D593FC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D54C78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D593FC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_D54CA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSString v14;
  NSString v15;
  id v16;
  _QWORD v17[2];
  char v18;
  char v19;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15038B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D593FC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableListeningProperties.CodingKey, &type metadata for CodableListeningProperties.CodingKey, v11, v9, v10);
  if (v2)
  {
    v12 = type metadata accessor for CodableListeningProperties();
    swift_deallocPartialClassInstance(v1, v12, 24, 7);
  }
  else
  {
    v19 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v19, v5);
    v18 = 1;
    v17[1] = KeyedDecodingContainer.decode(_:forKey:)(&v18, v5);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(MPCPlaybackSharedListeningProperties), "propertiesWithSessionIdentifier:sessionKey:", v14, v15);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 16) = v16;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

void sub_D54E94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503918);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D593FC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableListeningProperties.CodingKey, &type metadata for CodableListeningProperties.CodingKey, v11, v9, v10);
  v12 = *(void **)(v3 + 16);
  v13 = objc_msgSend(v12, "sessionIdentifier");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v23 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v14, v16, &v23, v5);
  if (!v2)
  {
    v17 = objc_msgSend(v12, "sessionKey", swift_bridgeObjectRelease().n128_f64[0]);
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v22 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v20, &v22, v5);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
}

uint64_t sub_D55034@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_D557E4(a1, (uint64_t (*)(_QWORD))type metadata accessor for CodableListeningProperties, (uint64_t (*)(uint64_t))sub_D54CA0, a2);
}

void sub_D55058(_QWORD *a1)
{
  sub_D54E94(a1);
}

uint64_t sub_D55078()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C436C65646F6DLL;
  else
    return 0x696669746E656469;
}

uint64_t sub_D550C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_D5A7E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_D550EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D59440();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_D55114(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_D59440();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_D5513C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t result;
  NSString *v22;
  uint64_t ObjCClassMetadata;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  id v32;
  void *v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  NSString *v39;
  id v40;
  void **aBlock;
  uint64_t v42;
  void (*v43)(uint64_t, void *);
  void *v44;
  double (*v45)(double);
  uint64_t v46;
  char v47;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15038C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D59440();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableModelObjectIdentity.CodingKey, &type metadata for CodableModelObjectIdentity.CodingKey, v11, v9, v10);
  if (!v2)
  {
    v47 = 0;
    v12 = sub_D59484();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v47, v5, &type metadata for Data, v12);
    v14 = (uint64_t)aBlock;
    v13 = v42;
    sub_4E684(0, (unint64_t *)&unk_15038E0, NSKeyedUnarchiver_ptr);
    v15 = sub_4E684(0, &qword_14FE288, MPIdentifierSet_ptr);
    v16 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v15, v14, v13, v15);
    if (v16)
    {
      v40 = v16;
      LOBYTE(aBlock) = 1;
      KeyedDecodingContainer.decode(_:forKey:)(&aBlock, v5);
      v39 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v22 = v39;
      v38 = NSClassFromString(v39);

      if (v38)
      {
        ObjCClassMetadata = swift_getObjCClassMetadata(v38);
        v24 = sub_4E684(0, &qword_14FE290, MPModelObject_ptr);
        v25 = swift_dynamicCastMetatype(ObjCClassMetadata, v24);
        if (v25)
        {
          if (qword_14FA078 != -1)
            goto LABEL_22;
          while (1)
          {
            v26 = *(_QWORD *)((char *)off_1503BE0[0] + (unint64_t)&dword_10);
            if (!v26)
              break;
            if (*(_QWORD *)((char *)off_1503BE0[0] + (unint64_t)&stru_20) == v25)
            {
LABEL_19:
              v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              v45 = UIScreen.Dimensions.size.getter;
              v46 = 0;
              aBlock = _NSConcreteStackBlock;
              v42 = 1107296256;
              v43 = sub_23E9F0;
              v44 = &block_descriptor_53_5;
              v39 = (NSString *)_Block_copy(&aBlock);
              v33 = v32;
              v34 = v40;
              v38 = (Class)objc_msgSend(v33, "initWithIdentifiers:block:", v40, v39);

              _Block_release(v39);
              v35 = swift_release();
              LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v35);
              result = sub_50C60(v14, v13);
              if ((v34 & 1) == 0)
              {
                (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
                *(_QWORD *)(v3 + 16) = v38;
                goto LABEL_6;
              }
              __break(1u);
              return result;
            }
            if (v26 == 1)
              break;
            v27 = 5;
            while (1)
            {
              v28 = v27 - 3;
              if (__OFADD__(v27 - 4, 1))
                break;
              if (*(_QWORD *)&off_1503BE0[0][2 * v27] == v25)
                goto LABEL_19;
              ++v27;
              if (v28 == v26)
                goto LABEL_18;
            }
            __break(1u);
LABEL_22:
            v36 = v25;
            swift_once(&qword_14FA078, sub_D5DD18);
            v25 = v36;
          }
        }
      }
LABEL_18:
      v29 = sub_D594C8();
      v30 = swift_allocError(&type metadata for CodableModelObjectIdentity.InitializerError, v29, 0, 0);
      *v31 = 1;
      swift_willThrow(v30);
      sub_50C60(v14, v13);

    }
    else
    {
      v17 = sub_D594C8();
      v18 = swift_allocError(&type metadata for CodableModelObjectIdentity.InitializerError, v17, 0, 0);
      *v19 = 0;
      swift_willThrow(v18);
      sub_50C60(v14, v13);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v20 = type metadata accessor for CodableModelObjectIdentity();
  swift_deallocPartialClassInstance(v3, v20, 24, 7);
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v3;
}

uint64_t sub_D55560(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  objc_class *ObjCClassFromMetadata;
  NSString *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29[2];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503908);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_D59440();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableModelObjectIdentity.CodingKey, &type metadata for CodableModelObjectIdentity.CodingKey, v11, v9, v10);
  v12 = (void *)objc_opt_self(NSKeyedArchiver);
  v13 = objc_msgSend(*(id *)(v3 + 16), "identifiers");
  v29[0] = 0;
  v14 = objc_msgSend(v12, "archivedDataWithRootObject:requiringSecureCoding:error:", v13, 1, v29);

  v15 = v29[0];
  if (v14)
  {
    v16 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

    v29[0] = v16;
    v29[1] = v18;
    HIBYTE(v28) = 0;
    v19 = sub_D59524();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v29, (char *)&v28 + 7, v5, &type metadata for Data, v19);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      swift_getObjectType();
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      v24 = NSStringFromClass(ObjCClassFromMetadata);
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      LOBYTE(v29[0]) = 1;
      KeyedEncodingContainer.encode(_:forKey:)(v25, v27, v29, v5);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
    }
    return sub_50C60((uint64_t)v16, (unint64_t)v18);
  }
  else
  {
    v20 = v15;
    _convertNSErrorToError(_:)(v15);

    swift_willThrow(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_D557C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_D557E4(a1, (uint64_t (*)(_QWORD))type metadata accessor for CodableModelObjectIdentity, (uint64_t (*)(uint64_t))sub_D5513C, a2);
}

uint64_t sub_D557E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  v8 = a2(0);
  swift_allocObject(v8, 24, 7);
  result = a3(a1);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_D55844(_QWORD *a1)
{
  return sub_D55560(a1);
}

uint64_t sub_D55864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release();
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v4));

  swift_release();
  swift_release();
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t type metadata accessor for GroupActivitiesManager.Activity.Metadata(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_15035D0, (uint64_t)&nominal type descriptor for GroupActivitiesManager.Activity.Metadata);
}

uint64_t sub_D559A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1503194);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_C3150;
  return sub_D4BE68(a1, v5, v6, v7, v8, v9);
}

id sub_D55A38(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 3:
      result = result;
      break;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2:
LABEL_4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 4:
      result = (id)sub_B37B30((uint64_t)result, a2, a3, a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_D55AC8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_D55B04(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8_0(a2, a1);
  return a2;
}

uint64_t sub_D55B40()
{
  uint64_t v0;

  swift_release();
  sub_CF6D0C(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_D55B80()
{
  uint64_t v0;

  return GroupActivitiesManager.postEvent(_:participantID:)(v0 + 24, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_D55BAC(int a1, void *a2, char a3, unsigned int a4, void *a5, char a6)
{
  char v6;
  id v11;
  id v12;
  char v13;

  v6 = 0;
  if (((a1 ^ a4) & 1) == 0 && (((a1 ^ a4) >> 8) & 1) == 0)
  {
    if (a2)
    {
      if (a5)
      {
        sub_4E684(0, &qword_1503900, ICMusicSubscriptionStatus_ptr);
        v11 = a5;
        v12 = a2;
        v13 = static NSObject.== infix(_:_:)(v12, v11);

        if ((v13 & 1) != 0)
          goto LABEL_6;
      }
    }
    else if (!a5)
    {
LABEL_6:
      v6 = a3 ^ a6 ^ 1;
      return v6 & 1;
    }
    v6 = 0;
  }
  return v6 & 1;
}

id _s9MusicCore22GroupActivitiesManagerC8ActivityV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 56);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(a2 + 56);
  if (!v3)
    return 0;
  v4 = *(void **)(v3 + 16);
  v5 = *(id *)(v2 + 16);
  v6 = v4;
  v7 = objc_msgSend(v5, "identifiers");
  v8 = objc_msgSend(v6, "identifiers");
  v9 = objc_msgSend(v7, "intersectsSet:", v8);

  return v9;
}

Swift::Int sub_D55D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_15039A8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_BYTE *)(v6 + v4);
      Hasher.init(_seed:)(v19);
      NSDirectionalEdgeInsets.Edge.hash(into:)((uint64_t)v19, v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      if (((1 << v10) & v12) != 0)
      {
        v14 = *(_QWORD *)(v3 + 48);
        result = static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*(_BYTE *)(v14 + v10), v7);
        if ((result & 1) != 0)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          result = static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*(_BYTE *)(v14 + v10), v7);
          if ((result & 1) != 0)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for GroupActivitiesManager.ArtworkCachingReference()
{
  return objc_opt_self(_TtCC9MusicCore22GroupActivitiesManagerP33_4D3C9D6548BB3147DD0F1D268040B2BF23ArtworkCachingReference);
}

unint64_t sub_D55E84()
{
  unint64_t result;

  result = qword_1503220;
  if (!qword_1503220)
  {
    result = swift_getWitnessTable(&unk_10A595C, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503220);
  }
  return result;
}

uint64_t type metadata accessor for CodableListeningProperties()
{
  return objc_opt_self(_TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableListeningProperties);
}

uint64_t type metadata accessor for CodableModelObjectIdentity()
{
  return objc_opt_self(_TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableModelObjectIdentity);
}

unint64_t sub_D55F08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1503248;
  if (!qword_1503248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1503240);
    sub_4DD24(&qword_1503250, (uint64_t (*)(uint64_t))type metadata accessor for CodableListeningProperties, (uint64_t)&unk_10A58E4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1503248);
  }
  return result;
}

unint64_t sub_D55F84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1503260;
  if (!qword_1503260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1503258);
    sub_4DD24(&qword_1503268, (uint64_t (*)(uint64_t))type metadata accessor for CodableModelObjectIdentity, (uint64_t)&unk_10A58BC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1503260);
  }
  return result;
}

unint64_t sub_D56020()
{
  unint64_t result;

  result = qword_15032B8;
  if (!qword_15032B8)
  {
    result = swift_getWitnessTable(&unk_10A5F08, &type metadata for SharedListening.ErrorHandling.Error);
    atomic_store(result, (unint64_t *)&qword_15032B8);
  }
  return result;
}

uint64_t sub_D5606C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = v0 + v3;
  v6 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v7 = v5 + *(int *)(v6 + 28);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_release();
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_D56170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_15032D4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_50F8C;
  return sub_D4A04C(a1, v6, v7, v8);
}

uint64_t sub_D56210()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_150332C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  v2 = (_QWORD *)swift_task_alloc(dword_150393C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return sub_D51224();
}

void sub_D56278(uint64_t a1, char *a2)
{
  if (a2 != (_BYTE *)&dword_0 + 1)

}

uint64_t sub_D56288()
{
  return sub_4DD24(&qword_1503340, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
}

uint64_t sub_D562B4()
{
  return sub_4DD24((unint64_t *)&unk_1503348, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
}

double sub_D562E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_1502E10);
}

uint64_t sub_D56304(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_1503930, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_1502E10);
}

double sub_D56330(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_15004B0);
}

uint64_t sub_D56354(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, &qword_15004B8, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_15004B0);
}

double sub_D56380(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_CFC150(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_15032A8);
}

uint64_t sub_D563A4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_CFC1BC(a1, a2, a3, a4, (uint64_t *)&unk_1503920, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_15032A8);
}

uint64_t sub_D563D0()
{
  return type metadata accessor for GroupActivitiesManager(0);
}

uint64_t type metadata accessor for GroupActivitiesManager(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1503380, (uint64_t)&nominal type descriptor for GroupActivitiesManager);
}

void sub_D563EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[20];

  v14[0] = "(";
  v14[1] = &unk_10A5670;
  sub_1ECFF0(319, (unint64_t *)&unk_1503390, (uint64_t)&type metadata for Int);
  if (v3 <= 0x3F)
  {
    v14[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1ECFF0(319, (unint64_t *)&qword_1500528, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v14[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_D56594(319);
      if (v7 <= 0x3F)
      {
        v14[4] = *(_QWORD *)(v6 - 8) + 64;
        v14[5] = (char *)&value witness table for Builtin.Int64 + 64;
        v14[6] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[7] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v14[9] = &unk_10A5688;
        v14[10] = &unk_10A56A0;
        sub_E835C(319, (unint64_t *)&unk_15033A8, type metadata accessor for GroupActivitiesManager.Activity);
        if (v9 <= 0x3F)
        {
          v14[11] = *(_QWORD *)(v8 - 8) + 64;
          v14[12] = &unk_10A5688;
          v14[13] = &unk_10A5688;
          v14[14] = &unk_10A5688;
          v14[15] = &unk_10A5688;
          sub_E835C(319, (unint64_t *)&qword_14FE6A0, type metadata accessor for Signpost);
          if (v11 <= 0x3F)
          {
            v14[16] = *(_QWORD *)(v10 - 8) + 64;
            v14[17] = &unk_10A5688;
            sub_E835C(319, (unint64_t *)&unk_15033B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
            if (v13 <= 0x3F)
            {
              v14[18] = *(_QWORD *)(v12 - 8) + 64;
              v14[19] = &unk_10A56B8;
              swift_updateClassMetadata2(a1, 256, 20, v14, a1 + 80);
            }
          }
        }
      }
    }
  }
}

void sub_D56594(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_15033A0)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1503298);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_15033A0);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupActivitiesManager.Activity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_QWORD *, uint64_t, uint64_t, __n128);
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *__dst;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = (uint64_t *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v12 = (void *)a2[5];
    v11 = a2[6];
    v4[5] = (uint64_t)v12;
    v4[6] = v11;
    v4[7] = a2[7];
    v13 = *(int *)(a3 + 32);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v17 + 48);
    v19 = v12;
    swift_retain();
    v20 = swift_retain();
    if (v18(v15, 1, v16, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v33 = v17;
      v22 = v15[1];
      *v14 = *v15;
      v14[1] = v22;
      v23 = v15[3];
      v14[2] = v15[2];
      v14[3] = v23;
      v24 = (void *)v15[4];
      v14[4] = v24;
      v25 = *(int *)(v16 + 28);
      __dst = (char *)v14 + v25;
      v26 = (char *)v15 + v25;
      v27 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v27 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v24;
      if (v34(v26, 1, v27))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      *(_OWORD *)((char *)v14 + *(int *)(v16 + 32)) = *(_OWORD *)((char *)v15 + *(int *)(v16 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v7 = v4 + *(int *)(v5 + 28);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD *, uint64_t, uint64_t, __n128);
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v10 = *(void **)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v15 + 48);
  v17 = v10;
  swift_retain();
  v18 = swift_retain();
  if (v16(v13, 1, v14, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v32 = v15;
    v20 = v13[1];
    *v12 = *v13;
    v12[1] = v20;
    v21 = v13[3];
    v12[2] = v13[2];
    v12[3] = v21;
    v22 = (void *)v13[4];
    v12[4] = v22;
    v23 = *(int *)(v14 + 28);
    __dst = (char *)v12 + v23;
    v24 = (char *)v13 + v23;
    v25 = type metadata accessor for URL(0);
    v26 = *(_QWORD *)(v25 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v22;
    if (v30(v24, 1, v25))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    *(_OWORD *)((char *)v12 + *(int *)(v14 + 32)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 32));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithCopy for GroupActivitiesManager.Activity(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, uint64_t);
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  char *__dst;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *(void **)(a1 + 40);
  v10 = (void *)*((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = v10;

  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_retain();
  swift_release();
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_5C0DC((uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_14;
    }
    *v13 = *v14;
    v13[1] = v14[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13[2] = v14[2];
    v13[3] = v14[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v27 = (void *)v13[4];
    v28 = (void *)v14[4];
    v13[4] = v28;
    v29 = v28;

    v30 = *(int *)(v15 + 28);
    v31 = (char *)v13 + v30;
    v32 = (char *)v14 + v30;
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_23:
        v39 = *(int *)(v15 + 32);
        v40 = (_QWORD *)((char *)v13 + v39);
        v41 = (_QWORD *)((char *)v14 + v39);
        *v40 = *v41;
        v40[1] = v41[1];
        return a1;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  if (v19)
  {
LABEL_14:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  v13[1] = v14[1];
  v13[2] = v14[2];
  v13[3] = v14[3];
  v20 = (void *)v14[4];
  v13[4] = v20;
  v21 = *(int *)(v15 + 28);
  __dst = (char *)v13 + v21;
  v22 = (char *)v14 + v21;
  v23 = type metadata accessor for URL(0);
  v43 = *(_QWORD *)(v23 - 8);
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v20;
  if (v44(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v23);
  }
  *(_OWORD *)((char *)v13 + *(int *)(v15 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 32);
  v6 = (_OWORD *)(a1 + v5);
  v7 = (_OWORD *)(a2 + v5);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v7[1];
    *v6 = *v7;
    v6[1] = v11;
    *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
    v12 = *(int *)(v8 + 28);
    v13 = (char *)v6 + v12;
    v14 = (char *)v7 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(_OWORD *)((char *)v6 + *(int *)(v8 + 32)) = *(_OWORD *)((char *)v7 + *(int *)(v8 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, uint64_t);
  int v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v9 = *(int *)(a3 + 32);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_5C0DC((uint64_t)v10, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_9;
    }
    v25 = v11[1];
    *v10 = *v11;
    v10[1] = v25;
    swift_bridgeObjectRelease();
    v26 = v11[3];
    v10[2] = v11[2];
    v10[3] = v26;
    swift_bridgeObjectRelease();
    v27 = (void *)v10[4];
    v10[4] = v11[4];

    v28 = *(int *)(v12 + 28);
    v29 = (char *)v10 + v28;
    v30 = (char *)v11 + v28;
    v31 = type metadata accessor for URL(0);
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v33(v29, 1, v31);
    v35 = v33(v30, 1, v31);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_18:
        *(_OWORD *)((char *)v10 + *(int *)(v12 + 32)) = *(_OWORD *)((char *)v11 + *(int *)(v12 + 32));
        return a1;
      }
    }
    else
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_18;
  }
  if (v16)
  {
LABEL_9:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  v10[4] = v11[4];
  v18 = *(int *)(v12 + 28);
  v19 = (char *)v10 + v18;
  v20 = (char *)v11 + v18;
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(_OWORD *)((char *)v10 + *(int *)(v12 + 32)) = *(_OWORD *)((char *)v11 + *(int *)(v12 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D572DC);
}

uint64_t sub_D572DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D57374);
}

uint64_t sub_D57374(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_D573EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = &unk_10A5688;
  v4[2] = &unk_10A5688;
  v4[3] = &unk_10A5688;
  sub_E835C(319, (unint64_t *)&unk_1503538, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupActivitiesManager.Activity.Metadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (void *)a2[4];
    v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = (uint64_t)v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    if (v14(v11, 1, v12))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t destroy for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v7;
  if (v13(v10, 1, v11))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithCopy for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 32);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  return a1;
}

uint64_t initializeWithTake for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D57B10);
}

uint64_t sub_D57B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D57BA8);
}

uint64_t sub_D57BA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_D57C20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10A5708;
  v4[1] = &unk_10A5708;
  v4[2] = &unk_10A5688;
  sub_E835C(319, (unint64_t *)&qword_15035E0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_10A5720;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_D57CBC(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for GroupActivitiesManager.EligibilityContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for GroupActivitiesManager.EligibilityContext(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.EligibilityContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.EligibilityContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.EligibilityContext()
{
  return &type metadata for GroupActivitiesManager.EligibilityContext;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.Activity.CodingKey()
{
  return &type metadata for GroupActivitiesManager.Activity.CodingKey;
}

uint64_t *sub_D57E70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_QWORD *, uint64_t, uint64_t, __n128);
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  char *__dst;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for GroupActivitiesManager.Activity(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[3];
      v38 = v8;
      if (v10)
      {
        v11 = a2[4];
        a1[3] = v10;
        a1[4] = v11;
        (**(void (***)(uint64_t *, uint64_t *))(v10 - 8))(a1, a2);
      }
      else
      {
        v12 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v12;
        a1[4] = a2[4];
      }
      v14 = (void *)a2[5];
      v13 = a2[6];
      a1[5] = (uint64_t)v14;
      a1[6] = v13;
      a1[7] = a2[7];
      v15 = *(int *)(v7 + 32);
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (uint64_t *)((char *)a2 + v15);
      v18 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v19 + 48);
      v21 = v14;
      swift_retain();
      v22 = swift_retain();
      if (v20(v17, 1, v18, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v24 = v38;
      }
      else
      {
        v25 = v17[1];
        *v16 = *v17;
        v16[1] = v25;
        v26 = v17[3];
        v16[2] = v17[2];
        v16[3] = v26;
        v27 = (void *)v17[4];
        v16[4] = v27;
        v28 = *(int *)(v18 + 28);
        __dst = (char *)v16 + v28;
        v36 = v19;
        v29 = (char *)v17 + v28;
        v30 = type metadata accessor for URL(0);
        v34 = *(_QWORD *)(v30 - 8);
        v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = v27;
        if (v37(v29, 1, v30))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
          memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v29, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v30);
        }
        v24 = v38;
        *(_OWORD *)((char *)v16 + *(int *)(v18 + 32)) = *(_OWORD *)((char *)v17 + *(int *)(v18 + 32));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v16, 0, 1, v18);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_D580EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for GroupActivitiesManager.Activity(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(a1 + 24))
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);

    swift_release();
    swift_release();
    v4 = a1 + *(int *)(v2 + 32);
    v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v6 = v4 + *(int *)(v5 + 28);
      v7 = type metadata accessor for URL(0);
      v8 = *(_QWORD *)(v7 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return result;
}

_OWORD *sub_D581F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_QWORD *, uint64_t, uint64_t, __n128);
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = *((_QWORD *)a2 + 3);
    v36 = v7;
    if (v8)
    {
      v9 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = v8;
      *((_QWORD *)a1 + 4) = v9;
      (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(a1, a2);
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    }
    v12 = (void *)*((_QWORD *)a2 + 5);
    v11 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a1 + 5) = v12;
    *((_QWORD *)a1 + 6) = v11;
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    v13 = *(int *)(v6 + 32);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v17 + 48);
    v19 = v12;
    swift_retain();
    v20 = swift_retain();
    if (v18(v15, 1, v16, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v22 = v36;
    }
    else
    {
      v23 = v15[1];
      *v14 = *v15;
      v14[1] = v23;
      v24 = v15[3];
      v14[2] = v15[2];
      v14[3] = v24;
      v25 = (void *)v15[4];
      v14[4] = v25;
      v26 = *(int *)(v16 + 28);
      __dst = (char *)v14 + v26;
      v35 = v17;
      v27 = (char *)v15 + v26;
      v28 = type metadata accessor for URL(0);
      v32 = *(_QWORD *)(v28 - 8);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v25;
      if (v33(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v28);
      }
      v22 = v36;
      *(_OWORD *)((char *)v14 + *(int *)(v16 + 32)) = *(_OWORD *)((char *)v15 + *(int *)(v16 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v14, 0, 1, v16);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_D5844C(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD *, uint64_t, uint64_t, __n128);
  id v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(__int128 *, uint64_t, uint64_t);
  int v41;
  int v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  _QWORD *v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  _QWORD *__dst;
  char *__dsta;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8((uint64_t)a2, 4, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = *((_QWORD *)a2 + 3);
      if (v11)
      {
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v11 - 8))(a1, a2);
      }
      else
      {
        v15 = *a2;
        v16 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v15;
        *(_OWORD *)(a1 + 16) = v16;
      }
      v17 = (void *)*((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v17;
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      v18 = *(int *)(v6 + 32);
      __dst = (_QWORD *)(a1 + v18);
      v19 = (_QWORD *)((char *)a2 + v18);
      v20 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v21 + 48);
      v23 = v17;
      swift_retain();
      v24 = swift_retain();
      if (v22(v19, 1, v20, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *__dst = *v19;
        __dst[1] = v19[1];
        __dst[2] = v19[2];
        __dst[3] = v19[3];
        v26 = (void *)v19[4];
        __dst[4] = v26;
        v27 = *(int *)(v20 + 28);
        v68 = (char *)__dst + v27;
        v66 = (char *)v19 + v27;
        v28 = type metadata accessor for URL(0);
        v65 = *(_QWORD *)(v28 - 8);
        v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = v26;
        if (v67(v66, 1, v28))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
          memcpy(v68, v66, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v68, v66, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v68, 0, 1, v28);
        }
        *(_OWORD *)((char *)__dst + *(int *)(v20 + 32)) = *(_OWORD *)((char *)v19 + *(int *)(v20 + 32));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_5C0DC(a1, type metadata accessor for GroupActivitiesManager.Activity);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v13 = (void *)a1;
LABEL_8:
    memcpy(v13, a2, v12);
    return a1;
  }
  v14 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v14)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)a1, a2);
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 24) = v14;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v14 - 8))(a1, a2);
    goto LABEL_21;
  }
  v31 = *a2;
  v32 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v31;
  *(_OWORD *)(a1 + 16) = v32;
LABEL_21:
  v33 = *(void **)(a1 + 40);
  v34 = (void *)*((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v34;
  v35 = v34;

  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_retain();
  swift_release();
  v36 = *(int *)(v6 + 32);
  v37 = (__int128 *)(a1 + v36);
  a2 = (__int128 *)((char *)a2 + v36);
  v38 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v37, 1, v38);
  v42 = v40(a2, 1, v38);
  if (!v41)
  {
    if (v42)
    {
      sub_5C0DC((uint64_t)v37, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_27;
    }
    *(_QWORD *)v37 = *(_QWORD *)a2;
    *((_QWORD *)v37 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v37 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)v37 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v50 = (void *)*((_QWORD *)v37 + 4);
    v51 = (void *)*((_QWORD *)a2 + 4);
    *((_QWORD *)v37 + 4) = v51;
    v52 = v51;

    v53 = *(int *)(v38 + 28);
    v54 = (char *)v37 + v53;
    v55 = (char *)a2 + v53;
    v56 = type metadata accessor for URL(0);
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
    v59 = v58(v54, 1, v56);
    v60 = v58(v55, 1, v56);
    if (v59)
    {
      if (!v60)
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_40:
        v62 = *(int *)(v38 + 32);
        v63 = (_QWORD *)((char *)v37 + v62);
        v64 = (_QWORD *)((char *)a2 + v62);
        *v63 = *v64;
        v63[1] = v64[1];
        return a1;
      }
    }
    else
    {
      if (!v60)
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v54, v55, v56);
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
    }
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_40;
  }
  if (v42)
  {
LABEL_27:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8) + 64);
    v13 = v37;
    goto LABEL_8;
  }
  *(_QWORD *)v37 = *(_QWORD *)a2;
  *((_QWORD *)v37 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)v37 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)v37 + 3) = *((_QWORD *)a2 + 3);
  v43 = (void *)*((_QWORD *)a2 + 4);
  *((_QWORD *)v37 + 4) = v43;
  v44 = *(int *)(v38 + 28);
  __dsta = (char *)v37 + v44;
  v45 = (char *)a2 + v44;
  v46 = type metadata accessor for URL(0);
  v69 = *(_QWORD **)(v46 - 8);
  v70 = (unsigned int (*)(char *, uint64_t, uint64_t))v69[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = v43;
  if (v70(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v69[2])(__dsta, v45, v46);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v69[7])(__dsta, 0, 1, v46);
  }
  *(__int128 *)((char *)v37 + *(int *)(v38 + 32)) = *(__int128 *)((char *)a2 + *(int *)(v38 + 32));
  (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v37, 0, 1, v38);
  return a1;
}

_OWORD *sub_D58A4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    v9 = *(int *)(v6 + 32);
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      v16 = *(int *)(v12 + 28);
      __dst = (char *)v10 + v16;
      v17 = (char *)v11 + v16;
      v18 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      *(_OWORD *)((char *)v10 + *(int *)(v12 + 32)) = *(_OWORD *)((char *)v11 + *(int *)(v12 + 32));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_D58C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  int v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  char *__dst;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_5C0DC(a1, type metadata accessor for GroupActivitiesManager.Activity);
      goto LABEL_7;
    }
    if (*(_QWORD *)(a1 + 24))
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(void **)(a1 + 40);
    v23 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v23;

    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_release();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_release();
    v24 = *(int *)(v6 + 32);
    v25 = a1 + v24;
    v26 = (_QWORD *)(a2 + v24);
    v27 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v25, 1, v27);
    v31 = v29((uint64_t)v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        v32 = *((_OWORD *)v26 + 1);
        *(_OWORD *)v25 = *(_OWORD *)v26;
        *(_OWORD *)(v25 + 16) = v32;
        *(_QWORD *)(v25 + 32) = v26[4];
        v33 = *(int *)(v27 + 28);
        v34 = (void *)(v25 + v33);
        v35 = (char *)v26 + v33;
        v36 = type metadata accessor for URL(0);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        *(_OWORD *)(v25 + *(int *)(v27 + 32)) = *(_OWORD *)((char *)v26 + *(int *)(v27 + 32));
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        return a1;
      }
      goto LABEL_19;
    }
    if (v31)
    {
      sub_5C0DC(v25, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
LABEL_19:
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8) + 64);
      v19 = (void *)v25;
      v20 = v26;
      goto LABEL_8;
    }
    v46 = v26[1];
    *(_QWORD *)v25 = *v26;
    *(_QWORD *)(v25 + 8) = v46;
    swift_bridgeObjectRelease();
    v47 = v26[3];
    *(_QWORD *)(v25 + 16) = v26[2];
    *(_QWORD *)(v25 + 24) = v47;
    swift_bridgeObjectRelease();
    v48 = *(void **)(v25 + 32);
    *(_QWORD *)(v25 + 32) = v26[4];

    v49 = *(int *)(v27 + 28);
    v50 = (void *)(v25 + v49);
    v51 = (char *)v26 + v49;
    v52 = type metadata accessor for URL(0);
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
    v55 = v54(v50, 1, v52);
    v56 = v54(v51, 1, v52);
    if (v55)
    {
      if (!v56)
      {
        (*(void (**)(void *, char *, uint64_t))(v53 + 32))(v50, v51, v52);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_32:
        *(_OWORD *)(v25 + *(int *)(v27 + 32)) = *(_OWORD *)((char *)v26 + *(int *)(v27 + 32));
        return a1;
      }
    }
    else
    {
      if (!v56)
      {
        (*(void (**)(void *, char *, uint64_t))(v53 + 40))(v50, v51, v52);
        goto LABEL_32;
      }
      (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
    }
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_32;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v19 = (void *)a1;
    v20 = (const void *)a2;
LABEL_8:
    memcpy(v19, v20, v18);
    return a1;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(int *)(v6 + 32);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503200);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v39 = v14[1];
    *v13 = *v14;
    v13[1] = v39;
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    v40 = *(int *)(v15 + 28);
    __dst = (char *)v13 + v40;
    v41 = (char *)v14 + v40;
    v42 = type metadata accessor for URL(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_14FAC20);
      memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(__dst, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v15 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_D590B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_D590C4);
}

uint64_t sub_D590C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t sub_D59110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_D5911C);
}

uint64_t sub_D5911C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_D59170(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_D591A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

uint64_t sub_D591E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for GroupActivitiesManager.Activity(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 4);
    return 0;
  }
  return result;
}

unint64_t sub_D59240()
{
  unint64_t result;

  result = qword_15038A0;
  if (!qword_15038A0)
  {
    result = swift_getWitnessTable(&unk_10A586C, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_15038A0);
  }
  return result;
}

unint64_t sub_D59288()
{
  unint64_t result;

  result = qword_15038A8;
  if (!qword_15038A8)
  {
    result = swift_getWitnessTable(&unk_10A57DC, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_15038A8);
  }
  return result;
}

unint64_t sub_D592D0()
{
  unint64_t result;

  result = qword_15038B0;
  if (!qword_15038B0)
  {
    result = swift_getWitnessTable(&unk_10A5804, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_15038B0);
  }
  return result;
}

uint64_t sub_D59314(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char v6;

  if (a1 == 0xD00000000000001BLL)
  {
    v4 = 0x8000000001109700;
    if (a2 == 0x8000000001109700)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000001109700, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x8000000001109720)
  {
    swift_bridgeObjectRelease(0x8000000001109720);
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000001109720, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_D593FC()
{
  unint64_t result;

  result = qword_15038C0;
  if (!qword_15038C0)
  {
    result = swift_getWitnessTable(&unk_10A5C3C, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_15038C0);
  }
  return result;
}

unint64_t sub_D59440()
{
  unint64_t result;

  result = qword_15038D0;
  if (!qword_15038D0)
  {
    result = swift_getWitnessTable(&unk_10A5BEC, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_15038D0);
  }
  return result;
}

unint64_t sub_D59484()
{
  unint64_t result;

  result = qword_15038D8;
  if (!qword_15038D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_15038D8);
  }
  return result;
}

unint64_t sub_D594C8()
{
  unint64_t result;

  result = qword_15038F0;
  if (!qword_15038F0)
  {
    result = swift_getWitnessTable(&unk_10A5BAC, &type metadata for CodableModelObjectIdentity.InitializerError);
    atomic_store(result, (unint64_t *)&qword_15038F0);
  }
  return result;
}

uint64_t block_copy_helper_312(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_312(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_D59524()
{
  unint64_t result;

  result = qword_1503910;
  if (!qword_1503910)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1503910);
  }
  return result;
}

double sub_D59568(uint64_t a1)
{
  uint64_t v1;

  return sub_D4A840(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

unint64_t sub_D59574()
{
  unint64_t result;

  result = qword_1503968;
  if (!qword_1503968)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Errno, &type metadata for Errno);
    atomic_store(result, (unint64_t *)&qword_1503968);
  }
  return result;
}

void sub_D595B8(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 3:
      swift_errorRelease(a1);
      break;
    case 1:
      swift_release(a1);
      break;
    case 2:

      break;
    default:
      return;
  }
}

uint64_t sub_D595F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v17;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v17 = *(_QWORD *)(v1 + 64);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v8 + *(int *)(v9 + 28);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = (((v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v5 + 8))(v0 + v13, v4, v15);

  return swift_deallocObject(v0, v14 + 8, v2 | v6 | 7);
}

uint64_t sub_D5975C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503978) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v1 + v6);
  v12 = v1 + v5;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_1503984);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_C3150;
  return sub_D4AA34(a1, v9, v10, v12, v11, v13, v14);
}

uint64_t sub_D5984C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v0 + v3, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v21 = v8;
    v11 = v4;
    v12 = v9 + *(int *)(v10 + 28);
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    v20 = v12;
    v15 = v12;
    v4 = v11;
    v8 = v21;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
  }
  v16 = v2 | v7 | 7;
  v17 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  v18 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v6 + 8))(v0 + v17, v5, v18);
  return swift_deallocObject(v0, v17 + v8, v16);
}

double sub_D599A8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503978) - 8) + 80);
  return sub_D4AF34(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

uint64_t sub_D59A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v17;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v17 = *(_QWORD *)(v1 + 64);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1503978);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v8 = v0 + v3;
  v9 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v8 + *(int *)(v9 + 28);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = v2 | v6 | 7;
  v14 = (((v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  v15 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v5 + 8))(v0 + v14, v4, v15);
  return swift_deallocObject(v0, v14 + v7, v13);
}

uint64_t sub_D59B88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503200) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1503978) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + v6);
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc(dword_1503994);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_C3150;
  return sub_D4B11C(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_D59C68(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_D59CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

unint64_t sub_D59CE0()
{
  unint64_t result;

  result = qword_1503A00;
  if (!qword_1503A00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities, &type metadata for ApplicationCapabilities);
    atomic_store(result, (unint64_t *)&qword_1503A00);
  }
  return result;
}

uint64_t sub_D59D24()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_D59D48(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_D4EE30(a1, v1);
}

double sub_D59D50(uint64_t *a1)
{
  uint64_t v1;

  return sub_D4FB48(a1, v1);
}

uint64_t sub_D59D58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D59D84(uint64_t a1)
{
  uint64_t v1;

  return sub_D4FC3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_D59D8C(uint64_t a1)
{
  uint64_t v1;

  return sub_D50538(a1, v1);
}

uint64_t sub_D59D94(uint64_t a1)
{
  sub_80B25C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112));
  return a1;
}

uint64_t sub_D59DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1503A6C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[23] = v2;
  return swift_task_switch(sub_D53910, 0, 0);
}

uint64_t sub_D59E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1503A7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_C3150;
  v3[10] = v2;
  return swift_task_switch(sub_D53C3C, 0, 0);
}

uint64_t sub_D59EB8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1503A8C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  v2 = (_QWORD *)swift_task_alloc(dword_1503A9C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return sub_D51994();
}

char *sub_D59F20(uint64_t a1, char *a2)
{
  char *result;

  if (a2 != (_BYTE *)&dword_0 + 1)
    return a2;
  return result;
}

void sub_D59F30(void *a1)
{
  sub_D53E5C(a1);
}

uint64_t sub_D59F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_D59F4C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1503B04);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  return sub_D54180();
}

uint64_t sub_D59FBC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1503B14);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  return sub_D541E8();
}

void sub_D5A028(id *a1)
{
  uint64_t v1;

  sub_D54250(a1, v1);
}

uint64_t sub_D5A030()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1503B3C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_C3150;
  v2 = (_QWORD *)swift_task_alloc(dword_15031A4);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_D5A09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1503B5C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  v3[2] = v2;
  return swift_task_switch(sub_D54458, 0, 0);
}

uint64_t sub_D5A0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v4));

  swift_release();
  swift_release();
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_D5A214(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  return sub_D4D49C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_D5A254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();

  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v4));

  swift_release();
  swift_release();
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_D5A37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_1503B8C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_C3150;
  v6 = (_QWORD *)swift_task_alloc(dword_1503B7C);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_C3150;
  return sub_D4C5B8(v3, v4);
}

ValueMetadata *type metadata accessor for CodableModelObjectIdentity.InitializerError()
{
  return &type metadata for CodableModelObjectIdentity.InitializerError;
}

ValueMetadata *type metadata accessor for CodableModelObjectIdentity.CodingKey()
{
  return &type metadata for CodableModelObjectIdentity.CodingKey;
}

uint64_t _s9MusicCore22GroupActivitiesManagerC8ActivityV9CodingKeyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_D5A480 + 4 * byte_10A53C7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_D5A4B4 + 4 * byte_10A53C2[v4]))();
}

uint64_t sub_D5A4B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D5A4BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xD5A4C4);
  return result;
}

uint64_t sub_D5A4D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xD5A4D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_D5A4DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D5A4E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableListeningProperties.CodingKey()
{
  return &type metadata for CodableListeningProperties.CodingKey;
}

unint64_t sub_D5A504()
{
  unint64_t result;

  result = qword_1503BA0;
  if (!qword_1503BA0)
  {
    result = swift_getWitnessTable(&unk_10A5A64, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503BA0);
  }
  return result;
}

unint64_t sub_D5A54C()
{
  unint64_t result;

  result = qword_1503BA8;
  if (!qword_1503BA8)
  {
    result = swift_getWitnessTable(&unk_10A5B1C, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503BA8);
  }
  return result;
}

unint64_t sub_D5A594()
{
  unint64_t result;

  result = qword_1503BB0;
  if (!qword_1503BB0)
  {
    result = swift_getWitnessTable(&unk_10A5B84, &type metadata for CodableModelObjectIdentity.InitializerError);
    atomic_store(result, (unint64_t *)&qword_1503BB0);
  }
  return result;
}

unint64_t sub_D5A5DC()
{
  unint64_t result;

  result = qword_1503BB8;
  if (!qword_1503BB8)
  {
    result = swift_getWitnessTable(&unk_10A5A8C, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503BB8);
  }
  return result;
}

unint64_t sub_D5A624()
{
  unint64_t result;

  result = qword_1503BC0;
  if (!qword_1503BC0)
  {
    result = swift_getWitnessTable(&unk_10A5AB4, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503BC0);
  }
  return result;
}

unint64_t sub_D5A66C()
{
  unint64_t result;

  result = qword_1503BC8;
  if (!qword_1503BC8)
  {
    result = swift_getWitnessTable(&unk_10A59D4, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503BC8);
  }
  return result;
}

unint64_t sub_D5A6B4()
{
  unint64_t result;

  result = qword_1503BD0;
  if (!qword_1503BD0)
  {
    result = swift_getWitnessTable(&unk_10A59FC, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1503BD0);
  }
  return result;
}

uint64_t sub_D5A6F8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v5 = 0xEA00000000007265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(7955819, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_D5A7E4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    v5 = 0xEB00000000737265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEB00000000737265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x616C436C65646F6DLL && a2 == 0xEE00656D614E7373)
  {
    swift_bridgeObjectRelease(0xEE00656D614E7373);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x616C436C65646F6DLL, 0xEE00656D614E7373, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void MPCPlayerCommandDialog.alert(context:completion:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned int v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _QWORD v117[7];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  void *v123;
  uint64_t v124;

  v7 = v6;
  v100 = a5;
  v99 = a4;
  v105 = a3;
  v104 = a2;
  v103 = a1;
  v94 = a6;
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for String.LocalizationValue(0);
  v12 = *(v11 - 1);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v93 - v16;
  v98 = type metadata accessor for UUID(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v7;
  v19 = objc_msgSend(v7, "actions");
  v20 = sub_4E684(0, &qword_1503BF0, MPCPlayerCommandDialogAction_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v86 = v21;
    else
      v86 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v22 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v21);
  if (!v22)
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1500950);
    v21 = swift_allocObject(v65, 88, 7);
    *(_OWORD *)(v21 + 16) = xmmword_105B360;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    (*(void (**)(char *, char *, _QWORD *))(v12 + 16))(v15, v17, v11);
    if (qword_14F9C80 == -1)
      goto LABEL_36;
    goto LABEL_57;
  }
  v11 = objc_msgSend(v95, "actions");
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v20);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v11 = (_QWORD *)v23;
    else
      v11 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v23);
    if (v12)
      goto LABEL_6;
LABEL_49:
    swift_bridgeObjectRelease(v23);
    v116 = (char *)_swiftEmptyArrayStorage;
LABEL_50:
    v87 = objc_msgSend(v95, "localizedTitle");
    if (v87)
    {
      v88 = v87;
      v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
      v82 = v89;

    }
    else
    {
      v80 = 0;
      v82 = 0;
    }
    v83 = objc_msgSend(v95, "localizedMessage");
    if (!v83)
      goto LABEL_40;
LABEL_54:
    v90 = v83;
    v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v85 = v91;

    goto LABEL_55;
  }
  v12 = *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8));
  if (!v12)
    goto LABEL_49;
LABEL_6:
  if (v12 >= 1)
  {
    v24 = 0;
    v107 = v23 & 0xC000000000000001;
    v116 = (char *)_swiftEmptyArrayStorage;
    v106 = MPCPlayerCommandDialogActionTitlePlayOnlyForMe;
    v102 = v23;
    v101 = v12;
    while (1)
    {
      if (v107)
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v23);
      else
        v25 = *(id *)(v23 + 8 * v24 + 32);
      v26 = v25;
      v27 = objc_msgSend(v25, "localizedTitle");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
      if (v28 == v31 && v30 == v32)
      {
        swift_bridgeObjectRelease_n(v30, 2);
      }
      else
      {
        v34 = v32;
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v31, v32, 0);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v34);
        if ((v35 & 1) == 0)
        {
          v36 = objc_msgSend(v26, "localizedTitle");
          v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v38 = v37;

          v39 = (char *)objc_msgSend(v26, "type");
          if (v39 == (_BYTE *)&dword_0 + 2)
            v40 = 1;
          else
            v40 = 2;
          if (v39 == (_BYTE *)&dword_0 + 1)
            v41 = 0;
          else
            v41 = v40;
          v42 = (_QWORD *)swift_allocObject(&unk_13BC860, 40, 7);
          v43 = v99;
          v42[2] = v26;
          v42[3] = v43;
          v44 = v100;
          v42[4] = v100;
          v112 = v26;
          v45 = v26;
          sub_A9DEC(v43, v44);
          v46 = v96;
          v47 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
          v48 = UUID.uuidString.getter(v47);
          v50 = v49;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v46, v98);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain(v42);
          v51 = &unk_1503C00;
          v52 = &unk_1503C00;
          v114 = v48;
          v110 = v48;
          v53 = v50;
          v109 = v113;
          v111 = v38;
          v54 = v38;
          v115 = v41;
          v55 = v41;
          v56 = (uint64_t)v42;
          goto LABEL_28;
        }
      }
      sub_D5E988(v103, v104, v105, (uint64_t)v117);
      v50 = v117[1];
      v57 = v117[2];
      v58 = v117[3];
      v52 = (void *)v117[5];
      v114 = v117[0];
      v115 = v117[4];
      v42 = (_QWORD *)v117[6];
      sub_5C090((uint64_t)v117, (uint64_t)&v118, &qword_14FE918);
      v53 = v119;
      if (v119)
      {
        v112 = v26;
        v113 = v57;
        v110 = v118;
        v54 = v121;
        v109 = v120;
        v55 = v122;
        v59 = v58;
        v51 = v123;
        v56 = v124;
        swift_bridgeObjectRetain();
        v111 = v59;
        swift_bridgeObjectRetain();
        sub_A9DEC((uint64_t)v52, (uint64_t)v42);
LABEL_28:
        v108 = (uint64_t)v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_A9DEC((uint64_t)v51, v56);
        v60 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) != 0)
          v61 = v116;
        else
          v61 = sub_BCC868(0, *((_QWORD *)v116 + 2) + 1, 1, v116);
        v63 = *((_QWORD *)v61 + 2);
        v62 = *((_QWORD *)v61 + 3);
        if (v63 >= v62 >> 1)
          v61 = sub_BCC868((char *)(v62 > 1), v63 + 1, 1, v61);
        *((_QWORD *)v61 + 2) = v63 + 1;
        v116 = v61;
        v64 = &v61[56 * v63];
        *((_QWORD *)v64 + 4) = v110;
        *((_QWORD *)v64 + 5) = v53;
        *((_QWORD *)v64 + 6) = v109;
        *((_QWORD *)v64 + 7) = v54;
        v64[64] = v60;
        *((_QWORD *)v64 + 9) = v51;
        *((_QWORD *)v64 + 10) = v56;
        sub_532A38(v114, v50, v113, v111, v115, v108, (uint64_t)v42);
        swift_bridgeObjectRelease(v54);
        swift_bridgeObjectRelease(v53);

        sub_5C198((uint64_t)v51, v56);
        v23 = v102;
        v12 = v101;
        goto LABEL_9;
      }

LABEL_9:
      if (v12 == ++v24)
      {
        swift_bridgeObjectRelease(v23);
        goto LABEL_50;
      }
    }
  }
  __break(1u);
LABEL_57:
  swift_once(&qword_14F9C80, sub_B9BF10);
LABEL_36:
  v66 = qword_1581E30;
  static Locale.current.getter((id)qword_1581E30);
  v67 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v66, v10, 0, 0, 256);
  v69 = v68;
  (*(void (**)(char *, _QWORD *))(v12 + 8))(v17, v11);
  v70 = swift_allocObject(&unk_13BC888, 32, 7);
  v71 = v99;
  v72 = v100;
  *(_QWORD *)(v70 + 16) = v99;
  *(_QWORD *)(v70 + 24) = v72;
  sub_A9DEC(v71, v72);
  v73 = v96;
  v74 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v75 = UUID.uuidString.getter(v74);
  v77 = v76;
  (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v98);
  *(_QWORD *)(v21 + 32) = v75;
  *(_QWORD *)(v21 + 40) = v77;
  *(_QWORD *)(v21 + 48) = v67;
  *(_QWORD *)(v21 + 56) = v69;
  *(_BYTE *)(v21 + 64) = 0;
  *(_QWORD *)(v21 + 72) = &unk_1503C10;
  *(_QWORD *)(v21 + 80) = v70;
  v116 = (char *)v21;
  v78 = objc_msgSend(v95, "localizedTitle");
  if (v78)
  {
    v79 = v78;
    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v82 = v81;

  }
  else
  {
    v80 = 0;
    v82 = 0;
  }
  v83 = objc_msgSend(v95, "localizedMessage");
  if (v83)
    goto LABEL_54;
LABEL_40:
  v84 = 0;
  v85 = 0;
LABEL_55:
  v92 = v94;
  *v94 = v80;
  v92[1] = v82;
  v92[2] = v84;
  v92[3] = v85;
  *((_BYTE *)v92 + 32) = 0;
  v92[5] = (uint64_t)v116;
  v92[6] = 0;
}

BOOL static SharedListening.isMusicItemTypeSupported(_:)(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  if (qword_14FA080 != -1)
    swift_once(&qword_14FA080, sub_D5DDF4);
  v2 = *(_QWORD *)((char *)off_1503BE8[0] + (unint64_t)&dword_10);
  if (!v2)
    return 0;
  v3 = off_1503BE8[0] + 8;
  v4 = v2 - 1;
  do
  {
    v5 = *(_QWORD *)v3;
    v3 += 4;
    result = v5 == a1;
  }
  while (v5 != a1 && v4-- != 0);
  return result;
}

uint64_t Logger.sharedListening.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14FA088 != -1)
    swift_once(&qword_14FA088, sub_D5E434);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.sharedListening);
}

uint64_t *SharedListening.Event.properties.unsafeMutableAddressor()
{
  if (qword_14FA070 != -1)
    swift_once(&qword_14FA070, sub_D5D8DC);
  return &static SharedListening.Event.properties;
}

uint64_t SharedListening.Event.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[56];

  sub_D5ED24(a1, (uint64_t)v4);
  return sub_5C090((uint64_t)v4, a2, (uint64_t *)&unk_1500AB0);
}

uint64_t static SharedListening.buildSharedSession(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1503C20 + dword_1503C20);
  v3 = (_QWORD *)swift_task_alloc(unk_1503C24);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_18129C;
  return v5(a1);
}

uint64_t static SharedListening.buildSharedSession(with:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1503C30 + dword_1503C30);
  v9 = (_QWORD *)swift_task_alloc(unk_1503C34);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_50F8C;
  return v11(a1, a2, a3, a4);
}

uint64_t SharedListening.Event.Content.title.getter(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  uint64_t v30;
  id v31;
  uint64_t ObjectType;
  Swift::String v33;
  _BYTE v34[16];
  unint64_t v35;
  unint64_t v36;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v34[-v12];
  if ((a2 & 1) == 0)
  {
    v14 = a1;
    v15 = objc_msgSend(v14, "title");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
LABEL_16:

      return v17;
    }
    String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
    if (qword_14F9C80 != -1)
      swift_once(&qword_14F9C80, sub_B9BF10);
    v23 = qword_1581E30;
    static Locale.current.getter((id)qword_1581E30);
    v24 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v23, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    goto LABEL_21;
  }
  objc_opt_self(MPModelAlbum);
  v18 = swift_dynamicCastObjCClass(a1);
  if (v18)
  {
    v19 = (void *)v18;
    v14 = a1;
    v20 = objc_msgSend(v19, "title");
    if (!v20)
    {
      v21 = 0x206E776F6E6B6E55;
      v22 = 0xED00006D75626C41;
LABEL_18:
      String.LocalizationValue.init(stringLiteral:)(v21, v22);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
      if (qword_14F9C80 != -1)
        swift_once(&qword_14F9C80, sub_B9BF10);
      v30 = qword_1581E30;
      static Locale.current.getter((id)qword_1581E30);
      v24 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v30, v6, 0, 0, 256);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);

LABEL_21:
      return v24;
    }
    goto LABEL_15;
  }
  objc_opt_self(MPModelPlaylist);
  v25 = swift_dynamicCastObjCClass(a1);
  if (v25)
  {
    v26 = (void *)v25;
    v14 = a1;
    v20 = objc_msgSend(v26, "name");
    if (!v20)
    {
      v22 = 0x80000000010C5810;
      v21 = 0xD000000000000011;
      goto LABEL_18;
    }
LABEL_15:
    v16 = v20;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);

    goto LABEL_16;
  }
  objc_opt_self(MPModelRadioStation);
  v27 = swift_dynamicCastObjCClass(a1);
  if (v27)
  {
    v28 = (void *)v27;
    v14 = a1;
    v20 = objc_msgSend(v28, "name");
    if (!v20)
    {
      v21 = 0x206E776F6E6B6E55;
      v22 = 0xEF6E6F6974617453;
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  v35 = 0;
  v36 = 0xE000000000000000;
  v31 = a1;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  v35 = 0xD000000000000020;
  v36 = 0x8000000001109930;
  ObjectType = swift_getObjectType();
  v33._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v35, v36, "MusicCore/SharedListening.swift", 31, 2, 49, 0);
  __break(1u);
  return result;
}

